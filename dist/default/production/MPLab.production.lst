

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Apr 27 10:02:37 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 12/02/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F2455 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataCOMRAM
   115  0045C5                     __pidataCOMRAM:
   116                           	callstack 0
   117                           
   118                           ;initializer for _giMonth
   119  0045C5  04                 	db	4
   120                           
   121                           	psect	idataBANK0
   122  0045BC                     __pidataBANK0:
   123                           	callstack 0
   124                           
   125                           ;initializer for _Timer3_Reload
   126  0045BC  FB1D               	dw	64285
   127                           
   128                           ;initializer for _giBacklight_Timeout
   129  0045BE  01                 	db	1
   130                           
   131                           ;initializer for _giYear
   132  0045BF  15                 	db	21
   133                           
   134                           ;initializer for _giDay
   135  0045C0  01                 	db	1
   136                           
   137                           ;initializer for _gsTotalSecs
   138  0045C1  2D                 	db	45
   139  0045C2  2D                 	db	45
   140  0045C3  2D                 	db	45
   141  0045C4  00                 	db	0
   142                           
   143                           	psect	idataBANK1
   144  0044F4                     __pidataBANK1:
   145                           	callstack 0
   146                           
   147                           ;initializer for _giMonthEndTbl
   148  0044F4  1F                 	db	31
   149  0044F5  1C                 	db	28
   150  0044F6  1F                 	db	31
   151  0044F7  1E                 	db	30
   152  0044F8  1F                 	db	31
   153  0044F9  1E                 	db	30
   154  0044FA  1F                 	db	31
   155  0044FB  1F                 	db	31
   156  0044FC  1E                 	db	30
   157  0044FD  1F                 	db	31
   158  0044FE  1E                 	db	30
   159  0044FF  1F                 	db	31
   160                           
   161                           ;initializer for _gsCurrTime
   162  004500  30                 	db	48
   163  004501  31                 	db	49
   164  004502  3A                 	db	58
   165  004503  30                 	db	48
   166  004504  30                 	db	48
   167  004505  3A                 	db	58
   168  004506  30                 	db	48
   169  004507  30                 	db	48
   170  004508  00                 	db	0
   171                           
   172                           ;initializer for _gsCurrDate
   173  004509  30                 	db	48
   174  00450A  31                 	db	49
   175  00450B  2F                 	db	47
   176  00450C  30                 	db	48
   177  00450D  34                 	db	52
   178  00450E  2F                 	db	47
   179  00450F  32                 	db	50
   180  004510  31                 	db	49
   181  004511  00                 	db	0
   182                           
   183                           	psect	mediumconst
   184  005EE6                     __pmediumconst:
   185                           	callstack 0
   186  005EE6  00                 	db	0
   187  005EE7                     __powers_:
   188                           	callstack 0
   189  005EE7  0000               	dw	0
   190  005EE9  3F80               	dw	16256
   191  005EEB  0000               	dw	0
   192  005EED  4120               	dw	16672
   193  005EEF  0000               	dw	0
   194  005EF1  42C8               	dw	17096
   195  005EF3  0000               	dw	0
   196  005EF5  447A               	dw	17530
   197  005EF7  4000               	dw	16384
   198  005EF9  461C               	dw	17948
   199  005EFB  5000               	dw	20480
   200  005EFD  47C3               	dw	18371
   201  005EFF  2400               	dw	9216
   202  005F01  4974               	dw	18804
   203  005F03  9680               	dw	38528
   204  005F05  4B18               	dw	19224
   205  005F07  BC20               	dw	48160
   206  005F09  4CBE               	dw	19646
   207  005F0B  6B28               	dw	27432
   208  005F0D  4E6E               	dw	20078
   209  005F0F  02F9               	dw	761
   210  005F11  5015               	dw	20501
   211  005F13  78EC               	dw	30956
   212  005F15  60AD               	dw	24749
   213  005F17  F2CA               	dw	62154
   214  005F19  7149               	dw	29001
   215  005F1B                     __end_of__powers_:
   216                           	callstack 0
   217  005F1B                     __npowers_:
   218                           	callstack 0
   219  005F1B  0000               	dw	0
   220  005F1D  3F80               	dw	16256
   221  005F1F  CCCD               	dw	52429
   222  005F21  3DCC               	dw	15820
   223  005F23  D70A               	dw	55050
   224  005F25  3C23               	dw	15395
   225  005F27  126F               	dw	4719
   226  005F29  3A83               	dw	14979
   227  005F2B  B717               	dw	46871
   228  005F2D  38D1               	dw	14545
   229  005F2F  C5AC               	dw	50604
   230  005F31  3727               	dw	14119
   231  005F33  37BD               	dw	14269
   232  005F35  3586               	dw	13702
   233  005F37  BF95               	dw	49045
   234  005F39  33D6               	dw	13270
   235  005F3B  CC77               	dw	52343
   236  005F3D  322B               	dw	12843
   237  005F3F  705F               	dw	28767
   238  005F41  3089               	dw	12425
   239  005F43  E6FF               	dw	59135
   240  005F45  2EDB               	dw	11995
   241  005F47  E508               	dw	58632
   242  005F49  1E3C               	dw	7740
   243  005F4B  4260               	dw	16992
   244  005F4D  0DA2               	dw	3490
   245  005F4F                     __end_of__npowers_:
   246                           	callstack 0
   247  005F4F                     exp@coeff:
   248                           	callstack 0
   249  005F4F  0000               	dw	0
   250  005F51  3F80               	dw	16256
   251  005F53  7218               	dw	29208
   252  005F55  3F31               	dw	16177
   253  005F57  FDF0               	dw	65008
   254  005F59  3E75               	dw	15989
   255  005F5B  5847               	dw	22599
   256  005F5D  3D63               	dw	15715
   257  005F5F  9558               	dw	38232
   258  005F61  3C1D               	dw	15389
   259  005F63  C482               	dw	50306
   260  005F65  3AAE               	dw	15022
   261  005F67  78A8               	dw	30888
   262  005F69  3921               	dw	14625
   263  005F6B  93EF               	dw	37871
   264  005F6D  3780               	dw	14208
   265  005F6F  92A0               	dw	37536
   266  005F71  35A7               	dw	13735
   267  005F73  5646               	dw	22086
   268  005F75  3415               	dw	13333
   269  005F77                     __end_ofexp@coeff:
   270                           	callstack 0
   271  005F77                     _dpowers:
   272                           	callstack 0
   273  005F77  0001               	dw	1
   274  005F79  0000               	dw	0
   275  005F7B  000A               	dw	10
   276  005F7D  0000               	dw	0
   277  005F7F  0064               	dw	100
   278  005F81  0000               	dw	0
   279  005F83  03E8               	dw	1000
   280  005F85  0000               	dw	0
   281  005F87  2710               	dw	10000
   282  005F89  0000               	dw	0
   283  005F8B  86A0               	dw	34464
   284  005F8D  0001               	dw	1
   285  005F8F  4240               	dw	16960
   286  005F91  000F               	dw	15
   287  005F93  9680               	dw	38528
   288  005F95  0098               	dw	152
   289  005F97  E100               	dw	57600
   290  005F99  05F5               	dw	1525
   291  005F9B  CA00               	dw	51712
   292  005F9D  3B9A               	dw	15258
   293  005F9F                     __end_of_dpowers:
   294                           	callstack 0
   295  005F9F                     log@coeff:
   296                           	callstack 0
   297  005F9F  0000               	dw	0
   298  005FA1  0000               	dw	0
   299  005FA3  FFC4               	dw	65476
   300  005FA5  3F7F               	dw	16255
   301  005FA7  EF80               	dw	61312
   302  005FA9  BEFF               	dw	48895
   303  005FAB  E190               	dw	57744
   304  005FAD  3EA9               	dw	16041
   305  005FAF  82EC               	dw	33516
   306  005FB1  BE76               	dw	48758
   307  005FB3  AD82               	dw	44418
   308  005FB5  3E2B               	dw	15915
   309  005FB7  3C0E               	dw	15374
   310  005FB9  BDC3               	dw	48579
   311  005FBB  D187               	dw	53639
   312  005FBD  3D13               	dw	15635
   313  005FBF  7841               	dw	30785
   314  005FC1  BBD3               	dw	48083
   315  005FC3                     __end_oflog@coeff:
   316                           	callstack 0
   317  005FC3  0000               	dw	0
   318  005FC5                     __end_of_Timer0_Reload:
   319                           	callstack 0
   320  0000                     _TMR1L	set	4046
   321  0000                     _TMR1H	set	4047
   322  0000                     _T1CON	set	4045
   323  0000                     _PORTBbits	set	3969
   324  0000                     _TRISBbits	set	3987
   325  0000                     _CCPR2H	set	4028
   326  0000                     _CCP2CONbits	set	4026
   327  0000                     _CCPR2L	set	4027
   328  0000                     _CCP2CON	set	4026
   329  0000                     _CCPR1L	set	4030
   330  0000                     _CCPR1H	set	4031
   331  0000                     _CCP1CON	set	4029
   332  0000                     _INTCON2bits	set	4081
   333  0000                     _ADCON2	set	4032
   334  0000                     _ADCON1	set	4033
   335  0000                     _TRISC	set	3988
   336  0000                     _TRISB	set	3987
   337  0000                     _TRISA	set	3986
   338  0000                     _LATC	set	3979
   339  0000                     _LATB	set	3978
   340  0000                     _LATA	set	3977
   341  0000                     _PORTAbits	set	3968
   342  0000                     _T3CON	set	4017
   343  0000                     _TMR3L	set	4018
   344  0000                     _TMR3H	set	4019
   345  0000                     _T3CONbits	set	4017
   346  0000                     _T2CON	set	4042
   347  0000                     _PR2	set	4043
   348  0000                     _T1CONbits	set	4045
   349  0000                     _TMR2	set	4044
   350  0000                     _T2CONbits	set	4042
   351  0000                     _T0CON	set	4053
   352  0000                     _PORTCbits	set	3970
   353  0000                     _LATAbits	set	3977
   354  0000                     _TMR0L	set	4054
   355  0000                     _TMR0H	set	4055
   356  0000                     _OSCTUNE	set	3995
   357  0000                     _OSCCON	set	4051
   358  0000                     _PIR1bits	set	3998
   359  0000                     _PIE1bits	set	3997
   360  0000                     _PIR2bits	set	4001
   361  0000                     _PIE2bits	set	4000
   362  0000                     _INTCONbits	set	4082
   363  0000                     _LATC7	set	31839
   364  0000                     _LATC6	set	31838
   365  005FC5                     STR_2:
   366  005FC5  47                 	db	71	;'G'
   367  005FC6  61                 	db	97	;'a'
   368  005FC7  6C                 	db	108	;'l'
   369  005FC8  73                 	db	115	;'s'
   370  005FC9  3A                 	db	58	;':'
   371  005FCA  20                 	db	32
   372  005FCB  25                 	db	37
   373  005FCC  34                 	db	52	;'4'
   374  005FCD  2E                 	db	46
   375  005FCE  30                 	db	48	;'0'
   376  005FCF  75                 	db	117	;'u'
   377  005FD0  20                 	db	32
   378  005FD1  20                 	db	32
   379  005FD2  20                 	db	32
   380  005FD3  25                 	db	37
   381  005FD4  33                 	db	51	;'3'
   382  005FD5  2E                 	db	46
   383  005FD6  31                 	db	49	;'1'
   384  005FD7  75                 	db	117	;'u'
   385  005FD8  25                 	db	37
   386  005FD9  25                 	db	37
   387  005FDA  20                 	db	32
   388  005FDB  00                 	db	0
   389  005FDC                     STR_3:
   390  005FDC  45                 	db	69	;'E'
   391  005FDD  63                 	db	99	;'c'
   392  005FDE  68                 	db	104	;'h'
   393  005FDF  6F                 	db	111	;'o'
   394  005FE0  3A                 	db	58	;':'
   395  005FE1  20                 	db	32
   396  005FE2  25                 	db	37
   397  005FE3  34                 	db	52	;'4'
   398  005FE4  2E                 	db	46
   399  005FE5  30                 	db	48	;'0'
   400  005FE6  66                 	db	102	;'f'
   401  005FE7  20                 	db	32
   402  005FE8  20                 	db	32
   403  005FE9  20                 	db	32
   404  005FEA  20                 	db	32
   405  005FEB  20                 	db	32
   406  005FEC  20                 	db	32
   407  005FED  00                 	db	0
   408  005FEE                     STR_1:
   409  005FEE  4C                 	db	76	;'L'
   410  005FEF  6F                 	db	111	;'o'
   411  005FF0  61                 	db	97	;'a'
   412  005FF1  64                 	db	100	;'d'
   413  005FF2  69                 	db	105	;'i'
   414  005FF3  6E                 	db	110	;'n'
   415  005FF4  67                 	db	103	;'g'
   416  005FF5  2E                 	db	46
   417  005FF6  2E                 	db	46
   418  005FF7  2E                 	db	46
   419  005FF8  20                 	db	32
   420  005FF9  00                 	db	0
   421  005FFA                     STR_4:
   422  005FFA  25                 	db	37
   423  005FFB  33                 	db	51	;'3'
   424  005FFC  69                 	db	105	;'i'
   425  005FFD  00                 	db	0
   426  005FFE  00                 	db	0	; dummy byte at the end
   427  0000                     
   428                           ; #config settings
   429                           
   430                           	psect	cinit
   431  0040AA                     __pcinit:
   432                           	callstack 0
   433  0040AA                     start_initialization:
   434                           	callstack 0
   435  0040AA                     __initialization:
   436                           	callstack 0
   437                           
   438                           ; Initialize objects allocated to BANK1 (30 bytes)
   439                           ; load TBLPTR registers with __pidataBANK1
   440  0040AA  0EF4               	movlw	low __pidataBANK1
   441  0040AC  6EF6               	movwf	tblptrl,c
   442  0040AE  0E44               	movlw	high __pidataBANK1
   443  0040B0  6EF7               	movwf	tblptrh,c
   444  0040B2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   445  0040B4  6EF8               	movwf	tblptru,c
   446  0040B6  EE01  F0DC         	lfsr	0,__pdataBANK1
   447  0040BA  EE10 F01E          	lfsr	1,30
   448  0040BE                     copy_data0:
   449  0040BE  0009               	tblrd		*+
   450  0040C0  CFF5 FFEE          	movff	tablat,postinc0
   451  0040C4  50E5               	movf	postdec1,w,c
   452  0040C6  50E1               	movf	fsr1l,w,c
   453  0040C8  E1FA               	bnz	copy_data0
   454                           
   455                           ; Initialize objects allocated to BANK0 (9 bytes)
   456                           ; load TBLPTR registers with __pidataBANK0
   457  0040CA  0EBC               	movlw	low __pidataBANK0
   458  0040CC  6EF6               	movwf	tblptrl,c
   459  0040CE  0E45               	movlw	high __pidataBANK0
   460  0040D0  6EF7               	movwf	tblptrh,c
   461  0040D2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   462  0040D4  6EF8               	movwf	tblptru,c
   463  0040D6  EE00  F0F5         	lfsr	0,__pdataBANK0
   464  0040DA  EE10 F009          	lfsr	1,9
   465  0040DE                     copy_data1:
   466  0040DE  0009               	tblrd		*+
   467  0040E0  CFF5 FFEE          	movff	tablat,postinc0
   468  0040E4  50E5               	movf	postdec1,w,c
   469  0040E6  50E1               	movf	fsr1l,w,c
   470  0040E8  E1FA               	bnz	copy_data1
   471                           
   472                           ; Initialize objects allocated to COMRAM (1 bytes)
   473                           ; load TBLPTR registers with __pidataCOMRAM
   474  0040EA  0EC5               	movlw	low __pidataCOMRAM
   475  0040EC  6EF6               	movwf	tblptrl,c
   476  0040EE  0E45               	movlw	high __pidataCOMRAM
   477  0040F0  6EF7               	movwf	tblptrh,c
   478  0040F2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   479  0040F4  6EF8               	movwf	tblptru,c
   480  0040F6  0009               	tblrd		*+	;fetch initializer
   481  0040F8  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   482                           
   483                           ; Clear objects allocated to BANK1 (220 bytes)
   484  0040FC  EE01  F000         	lfsr	0,__pbssBANK1
   485  004100  0EDC               	movlw	220
   486  004102                     clear_0:
   487  004102  6AEE               	clrf	postinc0,c
   488  004104  06E8               	decf	wreg,f,c
   489  004106  E1FD               	bnz	clear_0
   490                           
   491                           ; Clear objects allocated to BANK0 (25 bytes)
   492  004108  EE00  F0DC         	lfsr	0,__pbssBANK0
   493  00410C  0E19               	movlw	25
   494  00410E                     clear_1:
   495  00410E  6AEE               	clrf	postinc0,c
   496  004110  06E8               	decf	wreg,f,c
   497  004112  E1FD               	bnz	clear_1
   498  004114                     end_of_initialization:
   499                           	callstack 0
   500  004114                     __end_of__initialization:
   501                           	callstack 0
   502  004114  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   503  004116  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   504  004118  0E00               	movlw	low (__Lmediumconst shr (0+16))
   505  00411A  6EF8               	movwf	tblptru,c
   506  00411C  0100               	movlb	0
   507  00411E  EF88  F01C         	goto	_main	;jump to C main() function
   508                           
   509                           	psect	dataCOMRAM
   510  00005D                     __pdataCOMRAM:
   511                           	callstack 0
   512  00005D                     _giMonth:
   513                           	callstack 0
   514  00005D                     	ds	1
   515                           
   516                           	psect	bssBANK0
   517  0000DC                     __pbssBANK0:
   518                           	callstack 0
   519  0000DC                     _gd_TankSurfArea_mm2:
   520                           	callstack 0
   521  0000DC                     	ds	4
   522  0000E0                     _errno:
   523                           	callstack 0
   524  0000E0                     	ds	2
   525  0000E2                     _Timer3_Cntr:
   526                           	callstack 0
   527  0000E2                     	ds	2
   528  0000E4                     _imSCntr:
   529                           	callstack 0
   530  0000E4                     	ds	2
   531  0000E6                     _giBacklight_Timer:
   532                           	callstack 0
   533  0000E6                     	ds	2
   534  0000E8                     _giTotalSecs:
   535                           	callstack 0
   536  0000E8                     	ds	2
   537  0000EA                     _giEchoCounter:
   538                           	callstack 0
   539  0000EA                     	ds	2
   540  0000EC                     _gbBacklight_On:
   541                           	callstack 0
   542  0000EC                     	ds	1
   543  0000ED                     _Timer3_Sampling:
   544                           	callstack 0
   545  0000ED                     	ds	1
   546  0000EE                     _iSampleCntr:
   547                           	callstack 0
   548  0000EE                     	ds	1
   549  0000EF                     _bIncDays:
   550                           	callstack 0
   551  0000EF                     	ds	1
   552  0000F0                     _giHours:
   553                           	callstack 0
   554  0000F0                     	ds	1
   555  0000F1                     _giMins:
   556                           	callstack 0
   557  0000F1                     	ds	1
   558  0000F2                     _giSecs:
   559                           	callstack 0
   560  0000F2                     	ds	1
   561  0000F3                     _gb_EchoDetected:
   562                           	callstack 0
   563  0000F3                     	ds	1
   564  0000F4                     _gb_UpdateTime:
   565                           	callstack 0
   566  0000F4                     	ds	1
   567                           
   568                           	psect	dataBANK0
   569  0000F5                     __pdataBANK0:
   570                           	callstack 0
   571  0000F5                     _Timer3_Reload:
   572                           	callstack 0
   573  0000F5                     	ds	2
   574  0000F7                     _giBacklight_Timeout:
   575                           	callstack 0
   576  0000F7                     	ds	1
   577  0000F8                     _giYear:
   578                           	callstack 0
   579  0000F8                     	ds	1
   580  0000F9                     _giDay:
   581                           	callstack 0
   582  0000F9                     	ds	1
   583  0000FA                     _gsTotalSecs:
   584                           	callstack 0
   585  0000FA                     	ds	4
   586                           
   587                           	psect	bssBANK1
   588  000100                     __pbssBANK1:
   589                           	callstack 0
   590  000100                     _gd_Default_SOS:
   591                           	callstack 0
   592  000100                     	ds	4
   593  000104                     _gd_MaxWaterHeight_mm:
   594                           	callstack 0
   595  000104                     	ds	4
   596  000108                     _gd_TankGalsPer_mm:
   597                           	callstack 0
   598  000108                     	ds	4
   599  00010C                     _gd_SensorHeight_mm:
   600                           	callstack 0
   601  00010C                     	ds	4
   602  000110                     _gd_Temp:
   603                           	callstack 0
   604  000110                     	ds	4
   605  000114                     _sLine2:
   606                           	callstack 0
   607  000114                     	ds	100
   608  000178                     _sLine1:
   609                           	callstack 0
   610  000178                     	ds	100
   611                           
   612                           	psect	dataBANK1
   613  0001DC                     __pdataBANK1:
   614                           	callstack 0
   615  0001DC                     _giMonthEndTbl:
   616                           	callstack 0
   617  0001DC                     	ds	12
   618  0001E8                     _gsCurrTime:
   619                           	callstack 0
   620  0001E8                     	ds	9
   621  0001F1                     _gsCurrDate:
   622                           	callstack 0
   623  0001F1                     	ds	9
   624                           
   625                           	psect	cstackBANK0
   626  000060                     __pcstackBANK0:
   627                           	callstack 0
   628  000060                     ___flmul@sign:
   629                           	callstack 0
   630                           
   631                           ; 1 bytes @ 0x0
   632  000060                     	ds	1
   633  000061                     ___flmul@aexp:
   634                           	callstack 0
   635                           
   636                           ; 1 bytes @ 0x1
   637  000061                     	ds	1
   638  000062                     ___flmul@grs:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x2
   642  000062                     	ds	4
   643  000066                     ___flmul@bexp:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0x6
   647  000066                     	ds	1
   648  000067                     ___flmul@prod:
   649                           	callstack 0
   650                           
   651                           ; 4 bytes @ 0x7
   652  000067                     	ds	4
   653  00006B                     ___flmul@temp:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0xB
   657  00006B                     	ds	2
   658  00006D                     _fround$2371:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0xD
   662  00006D                     	ds	4
   663  000071                     _fround$2370:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x11
   667  000071                     	ds	4
   668  000075                     fround@prec:
   669                           	callstack 0
   670                           
   671                           ; 1 bytes @ 0x15
   672  000075                     	ds	1
   673  000076                     ?___fladd:
   674                           	callstack 0
   675  000076                     ___fladd@b:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x16
   679  000076                     	ds	4
   680  00007A                     ___fladd@a:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x1A
   684  00007A                     	ds	4
   685  00007E                     ___fladd@signs:
   686                           	callstack 0
   687                           
   688                           ; 1 bytes @ 0x1E
   689  00007E                     	ds	1
   690  00007F                     ___fladd@aexp:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x1F
   694  00007F                     	ds	1
   695  000080                     ___fladd@bexp:
   696                           	callstack 0
   697                           
   698                           ; 1 bytes @ 0x20
   699  000080                     	ds	1
   700  000081                     ___fladd@grs:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x21
   704  000081                     	ds	1
   705  000082                     ?___flsub:
   706                           	callstack 0
   707  000082                     ?_floor:
   708                           	callstack 0
   709  000082                     ?_eval_poly:
   710                           	callstack 0
   711  000082                     ___flsub@b:
   712                           	callstack 0
   713  000082                     eval_poly@x:
   714                           	callstack 0
   715  000082                     floor@x:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x22
   719  000082                     	ds	4
   720  000086                     eval_poly@d:
   721                           	callstack 0
   722  000086                     ___flsub@a:
   723                           	callstack 0
   724  000086                     floor@i:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x26
   728  000086                     	ds	2
   729  000088                     eval_poly@n:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x28
   733  000088                     	ds	2
   734  00008A                     ??_eval_poly:
   735  00008A                     ?_sprintf:
   736                           	callstack 0
   737  00008A                     sprintf@sp:
   738                           	callstack 0
   739  00008A                     floor@expon:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x2A
   743  00008A                     	ds	2
   744  00008C                     sprintf@f:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x2C
   748  00008C                     	ds	2
   749  00008E                     eval_poly@res:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x2E
   753  00008E                     	ds	4
   754  000092                     ??_sprintf:
   755  000092                     ?_log:
   756                           	callstack 0
   757  000092                     ?_ldexp:
   758                           	callstack 0
   759  000092                     ldexp@value:
   760                           	callstack 0
   761  000092                     log@x:
   762                           	callstack 0
   763                           
   764                           ; 4 bytes @ 0x32
   765  000092                     	ds	4
   766  000096                     ldexp@newexp:
   767                           	callstack 0
   768  000096                     _sprintf$2373:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x36
   772  000096                     	ds	2
   773  000098                     ?_exp:
   774                           	callstack 0
   775  000098                     exp@x:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0x38
   779  000098                     	ds	2
   780  00009A                     sprintf@cp:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x3A
   784  00009A                     	ds	2
   785  00009C                     sprintf@ap:
   786                           	callstack 0
   787  00009C                     _exp$2376:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x3C
   791  00009C                     	ds	2
   792  00009E                     sprintf@len:
   793                           	callstack 0
   794                           
   795                           ; 2 bytes @ 0x3E
   796  00009E                     	ds	2
   797  0000A0                     sprintf@flag:
   798                           	callstack 0
   799  0000A0                     exp@exponent:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x40
   803  0000A0                     	ds	2
   804  0000A2                     exp@sign:
   805                           	callstack 0
   806  0000A2                     sprintf@tmpval:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x42
   810  0000A2                     	ds	1
   811  0000A3                     ?_pow:
   812                           	callstack 0
   813  0000A3                     pow@x:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x43
   817  0000A3                     	ds	3
   818  0000A6                     sprintf@val:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x46
   822  0000A6                     	ds	1
   823  0000A7                     pow@y:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x47
   827  0000A7                     	ds	3
   828  0000AA                     sprintf@eexp:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x4A
   832  0000AA                     	ds	1
   833  0000AB                     _pow$2374:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x4B
   837  0000AB                     	ds	1
   838  0000AC                     sprintf@width:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x4C
   842  0000AC                     	ds	2
   843  0000AE                     sprintf@fval:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0x4E
   847  0000AE                     	ds	1
   848  0000AF                     _pow$2375:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x4F
   852  0000AF                     	ds	3
   853  0000B2                     sprintf@prec:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x52
   857  0000B2                     	ds	1
   858  0000B3                     pow@sign:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x53
   862  0000B3                     	ds	1
   863  0000B4                     sprintf@c:
   864                           	callstack 0
   865  0000B4                     pow@yi:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x54
   869  0000B4                     	ds	1
   870  0000B5                     ??_ComputeWaterVol:
   871  0000B5                     ComputeTOD@bIncDays:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0x55
   875  0000B5                     	ds	3
   876  0000B8                     _InitTankVariables$2369:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0x58
   880  0000B8                     	ds	5
   881  0000BD                     ComputeWaterVol@dCurrTemp:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0x5D
   885  0000BD                     	ds	4
   886  0000C1                     ComputeWaterVol@d_mmPerTick:
   887                           	callstack 0
   888                           
   889                           ; 4 bytes @ 0x61
   890  0000C1                     	ds	4
   891  0000C5                     ComputeWaterVol@dWaterVol:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0x65
   895  0000C5                     	ds	4
   896  0000C9                     ComputeWaterVol@dSOS:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x69
   900  0000C9                     	ds	4
   901  0000CD                     ComputeWaterVol@iGals:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x6D
   905  0000CD                     	ds	2
   906  0000CF                     ComputeWaterVol@dEmptySpace_mm:
   907                           	callstack 0
   908                           
   909                           ; 4 bytes @ 0x6F
   910  0000CF                     	ds	4
   911  0000D3                     ComputeWaterVol@dWaterHeight_mm:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x73
   915  0000D3                     	ds	4
   916  0000D7                     ComputeWaterVol@iPercentFull:
   917                           	callstack 0
   918                           
   919                           ; 1 bytes @ 0x77
   920  0000D7                     	ds	1
   921  0000D8                     ??_main:
   922                           
   923                           ; 1 bytes @ 0x78
   924  0000D8                     	ds	2
   925  0000DA                     _main$1042:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x7A
   929  0000DA                     	ds	2
   930                           
   931                           	psect	cstackCOMRAM
   932  000001                     __pcstackCOMRAM:
   933                           	callstack 0
   934  000001                     ??_Timer0_ISR:
   935  000001                     
   936                           ; 1 bytes @ 0x0
   937  000001                     	ds	1
   938  000002                     ??_isdigit:
   939  000002                     ??_LCD_WriteChar:
   940  000002                     ?___wmul:
   941                           	callstack 0
   942  000002                     ?___awmod:
   943                           	callstack 0
   944  000002                     ?___lwmod:
   945                           	callstack 0
   946  000002                     ?__tdiv_to_l_:
   947                           	callstack 0
   948  000002                     ?__div_to_l_:
   949                           	callstack 0
   950  000002                     ?___fldiv:
   951                           	callstack 0
   952  000002                     ?___lldiv:
   953                           	callstack 0
   954  000002                     ?___flneg:
   955                           	callstack 0
   956  000002                     LCD_WriteCmd@iDelay:
   957                           	callstack 0
   958  000002                     ___wmul@multiplier:
   959                           	callstack 0
   960  000002                     ___awmod@dividend:
   961                           	callstack 0
   962  000002                     ___lwmod@dividend:
   963                           	callstack 0
   964  000002                     ___lldiv@dividend:
   965                           	callstack 0
   966  000002                     __div_to_l_@f1:
   967                           	callstack 0
   968  000002                     ___flge@ff1:
   969                           	callstack 0
   970  000002                     ___flneg@f1:
   971                           	callstack 0
   972  000002                     __tdiv_to_l_@f1:
   973                           	callstack 0
   974  000002                     ___fldiv@b:
   975                           	callstack 0
   976                           
   977                           ; 4 bytes @ 0x1
   978  000002                     	ds	1
   979  000003                     _isdigit$2071:
   980                           	callstack 0
   981                           
   982                           ; 1 bytes @ 0x2
   983  000003                     	ds	1
   984  000004                     ??_LCD_WriteCmd:
   985  000004                     LCD_WriteChar@iChar:
   986                           	callstack 0
   987  000004                     isdigit@c:
   988                           	callstack 0
   989  000004                     ___wmul@multiplicand:
   990                           	callstack 0
   991  000004                     ___awmod@divisor:
   992                           	callstack 0
   993  000004                     ___lwmod@divisor:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0x3
   997  000004                     	ds	1
   998  000005                     LCD_WriteString@iData:
   999                           	callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x4
  1002  000005                     	ds	1
  1003  000006                     ___awmod@counter:
  1004                           	callstack 0
  1005  000006                     ___lwmod@counter:
  1006                           	callstack 0
  1007  000006                     LCD_WriteCmd@i:
  1008                           	callstack 0
  1009  000006                     ___wmul@product:
  1010                           	callstack 0
  1011  000006                     ___lldiv@divisor:
  1012                           	callstack 0
  1013  000006                     __div_to_l_@f2:
  1014                           	callstack 0
  1015  000006                     ___flge@ff2:
  1016                           	callstack 0
  1017  000006                     __tdiv_to_l_@f2:
  1018                           	callstack 0
  1019  000006                     ___fldiv@a:
  1020                           	callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x5
  1023  000006                     	ds	1
  1024  000007                     ??_LCD_WriteString:
  1025  000007                     ?___lwdiv:
  1026                           	callstack 0
  1027  000007                     ___awmod@sign:
  1028                           	callstack 0
  1029  000007                     ___lwdiv@dividend:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x6
  1033  000007                     	ds	1
  1034  000008                     ?___awdiv:
  1035                           	callstack 0
  1036  000008                     LCD_WriteCmd@iCmd:
  1037                           	callstack 0
  1038  000008                     ___awdiv@dividend:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x7
  1042  000008                     	ds	1
  1043  000009                     ??_LCD_Init:
  1044  000009                     LCD_WriteString@ix:
  1045                           	callstack 0
  1046  000009                     LCD_GoTo@iCharPos:
  1047                           	callstack 0
  1048  000009                     ___lwdiv@divisor:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x8
  1052  000009                     	ds	1
  1053  00000A                     ??_LCD_GoTo:
  1054  00000A                     ??__tdiv_to_l_:
  1055  00000A                     ??___fldiv:
  1056  00000A                     ??___flge:
  1057  00000A                     ___awdiv@divisor:
  1058                           	callstack 0
  1059  00000A                     ___lldiv@quotient:
  1060                           	callstack 0
  1061  00000A                     __div_to_l_@quot:
  1062                           	callstack 0
  1063                           
  1064                           ; 4 bytes @ 0x9
  1065  00000A                     	ds	1
  1066  00000B                     ___lwdiv@counter:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0xA
  1070  00000B                     	ds	1
  1071  00000C                     LCD_GoTo@iPos:
  1072                           	callstack 0
  1073  00000C                     ___awdiv@counter:
  1074                           	callstack 0
  1075  00000C                     ___lwdiv@quotient:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0xB
  1079  00000C                     	ds	1
  1080  00000D                     ___awdiv@sign:
  1081                           	callstack 0
  1082  00000D                     _LCD_GoTo$1411:
  1083                           	callstack 0
  1084  00000D                     __tdiv_to_l_@quot:
  1085                           	callstack 0
  1086                           
  1087                           ; 4 bytes @ 0xC
  1088  00000D                     	ds	1
  1089  00000E                     ___lldiv@counter:
  1090                           	callstack 0
  1091  00000E                     __div_to_l_@cntr:
  1092                           	callstack 0
  1093  00000E                     ___awdiv@quotient:
  1094                           	callstack 0
  1095  00000E                     ___fldiv@rem:
  1096                           	callstack 0
  1097                           
  1098                           ; 4 bytes @ 0xD
  1099  00000E                     	ds	1
  1100  00000F                     ?___llmod:
  1101                           	callstack 0
  1102  00000F                     LCD_GoTo@iLine:
  1103                           	callstack 0
  1104  00000F                     __div_to_l_@exp1:
  1105                           	callstack 0
  1106  00000F                     ___llmod@dividend:
  1107                           	callstack 0
  1108                           
  1109                           ; 4 bytes @ 0xE
  1110  00000F                     	ds	2
  1111  000011                     __tdiv_to_l_@cntr:
  1112                           	callstack 0
  1113                           
  1114                           ; 1 bytes @ 0x10
  1115  000011                     	ds	1
  1116  000012                     __tdiv_to_l_@exp1:
  1117                           	callstack 0
  1118  000012                     ___fldiv@sign:
  1119                           	callstack 0
  1120                           
  1121                           ; 1 bytes @ 0x11
  1122  000012                     	ds	1
  1123  000013                     ___fldiv@new_exp:
  1124                           	callstack 0
  1125  000013                     ___llmod@divisor:
  1126                           	callstack 0
  1127                           
  1128                           ; 4 bytes @ 0x12
  1129  000013                     	ds	2
  1130  000015                     ___fldiv@grs:
  1131                           	callstack 0
  1132                           
  1133                           ; 4 bytes @ 0x14
  1134  000015                     	ds	2
  1135  000017                     ___llmod@counter:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x16
  1139  000017                     	ds	2
  1140  000019                     ___fldiv@bexp:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x18
  1144  000019                     	ds	1
  1145  00001A                     ___fldiv@aexp:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x19
  1149  00001A                     	ds	1
  1150  00001B                     ?_sqrt:
  1151                           	callstack 0
  1152  00001B                     ?___fltol:
  1153                           	callstack 0
  1154  00001B                     ___fltol@f1:
  1155                           	callstack 0
  1156  00001B                     sqrt@a:
  1157                           	callstack 0
  1158                           
  1159                           ; 4 bytes @ 0x1A
  1160  00001B                     	ds	4
  1161  00001F                     ??_sqrt:
  1162  00001F                     ??___fltol:
  1163                           
  1164                           ; 1 bytes @ 0x1E
  1165  00001F                     	ds	4
  1166  000023                     ___fltol@sign1:
  1167                           	callstack 0
  1168  000023                     sqrt@sign:
  1169                           	callstack 0
  1170                           
  1171                           ; 1 bytes @ 0x22
  1172  000023                     	ds	1
  1173  000024                     ___fltol@exp1:
  1174                           	callstack 0
  1175  000024                     sqrt@i:
  1176                           	callstack 0
  1177                           
  1178                           ; 1 bytes @ 0x23
  1179  000024                     	ds	1
  1180  000025                     ?___xxtofl:
  1181                           	callstack 0
  1182  000025                     sqrt@tfrac:
  1183                           	callstack 0
  1184  000025                     ___xxtofl@val:
  1185                           	callstack 0
  1186                           
  1187                           ; 4 bytes @ 0x24
  1188  000025                     	ds	4
  1189  000029                     ??___xxtofl:
  1190  000029                     sqrt@p:
  1191                           	callstack 0
  1192                           
  1193                           ; 1 bytes @ 0x28
  1194  000029                     	ds	1
  1195  00002A                     sqrt@grs:
  1196                           	callstack 0
  1197                           
  1198                           ; 4 bytes @ 0x29
  1199  00002A                     	ds	3
  1200  00002D                     ___xxtofl@sign:
  1201                           	callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x2C
  1204  00002D                     	ds	1
  1205  00002E                     ___xxtofl@exp:
  1206                           	callstack 0
  1207  00002E                     sqrt@exp:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0x2D
  1211  00002E                     	ds	1
  1212  00002F                     ___xxtofl@arg:
  1213                           	callstack 0
  1214                           
  1215                           ; 4 bytes @ 0x2E
  1216  00002F                     	ds	1
  1217  000030                     sqrt@root:
  1218                           	callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x2F
  1221  000030                     	ds	3
  1222  000033                     ___fleq@ff1:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0x32
  1226  000033                     	ds	1
  1227  000034                     sqrt@frac:
  1228                           	callstack 0
  1229                           
  1230                           ; 4 bytes @ 0x33
  1231  000034                     	ds	3
  1232  000037                     ___fleq@ff2:
  1233                           	callstack 0
  1234                           
  1235                           ; 4 bytes @ 0x36
  1236  000037                     	ds	4
  1237  00003B                     ??___fleq:
  1238                           
  1239                           ; 1 bytes @ 0x3A
  1240  00003B                     	ds	4
  1241  00003F                     ?_frexp:
  1242                           	callstack 0
  1243  00003F                     frexp@value:
  1244                           	callstack 0
  1245                           
  1246                           ; 4 bytes @ 0x3E
  1247  00003F                     	ds	4
  1248  000043                     frexp@eptr:
  1249                           	callstack 0
  1250                           
  1251                           ; 2 bytes @ 0x42
  1252  000043                     	ds	2
  1253  000045                     ??_frexp:
  1254                           
  1255                           ; 1 bytes @ 0x44
  1256  000045                     	ds	2
  1257  000047                     ?___flmul:
  1258                           	callstack 0
  1259  000047                     ___flmul@b:
  1260                           	callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x46
  1263  000047                     	ds	4
  1264  00004B                     ___flmul@a:
  1265                           	callstack 0
  1266                           
  1267                           ; 4 bytes @ 0x4A
  1268  00004B                     	ds	4
  1269  00004F                     ??___flmul:
  1270                           
  1271                           ; 1 bytes @ 0x4E
  1272  00004F                     	ds	4
  1273  000053                     ?_fround:
  1274                           	callstack 0
  1275  000053                     ?_scale:
  1276                           	callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x52
  1279  000053                     	ds	4
  1280  000057                     ??___fladd:
  1281  000057                     _scale$2372:
  1282                           	callstack 0
  1283                           
  1284                           ; 4 bytes @ 0x56
  1285  000057                     	ds	4
  1286  00005B                     ??_ldexp:
  1287  00005B                     scale@scl:
  1288                           	callstack 0
  1289  00005B                     log@exponent:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x5A
  1293  00005B                     	ds	1
  1294  00005C                     
  1295                           ; 1 bytes @ 0x5B
  1296  00005C                     	ds	1
  1297  00005D                     
  1298                           ; 1 bytes @ 0x5C
  1299 ;;
  1300 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1301 ;;
  1302 ;; *************** function _main *****************
  1303 ;; Defined at:
  1304 ;;		line 58 in file "main.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1318 ;;      Params:         0       0       0       0       0       0       0       0       0
  1319 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1320 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1321 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1322 ;;Total ram usage:        4 bytes
  1323 ;; Hardware stack levels required when called:   10
  1324 ;; This function calls:
  1325 ;;		_CCP1_Init
  1326 ;;		_CCP2_Init
  1327 ;;		_ComputeTOD
  1328 ;;		_ComputeWaterVol
  1329 ;;		_InitTankVariables
  1330 ;;		_LCD_Init
  1331 ;;		_LCD_WriteString
  1332 ;;		_SysInit
  1333 ;;		_Timer0_Init
  1334 ;;		_Timer1_Init
  1335 ;;		_Timer2_Init
  1336 ;; This function is called by:
  1337 ;;		Startup code after reset
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           	psect	text0
  1342  003910                     __ptext0:
  1343                           	callstack 0
  1344  003910                     _main:
  1345                           	callstack 21
  1346  003910                     
  1347                           ;main.c: 63: if (1)
  1348  003910  ECD4  F022         	call	_SysInit	;wreg free
  1349  003914                     
  1350                           ;main.c: 64: {;main.c: 65: LCD_Init();
  1351  003914  EC94  F021         	call	_LCD_Init	;wreg free
  1352  003918                     
  1353                           ;main.c: 66: LCD_WriteString ((uint8_t *)"Loading... ");
  1354  003918  0EEE               	movlw	low STR_1
  1355  00391A  6E05               	movwf	LCD_WriteString@iData^0,c
  1356  00391C  0E5F               	movlw	high STR_1
  1357  00391E  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  1358  003920  EC91  F020         	call	_LCD_WriteString	;wreg free
  1359  003924                     
  1360                           ;main.c: 67: };main.c: 70: giBacklight_Timeout = (PORTCbits.RC0) ? 180 : 2;
  1361  003924  B082               	btfsc	130,0,c	;volatile
  1362  003926  EF97  F01C         	goto	u8421
  1363  00392A  EF99  F01C         	goto	u8420
  1364  00392E                     u8421:
  1365  00392E  EFA0  F01C         	goto	l7160
  1366  003932                     u8420:
  1367  003932  0E00               	movlw	0
  1368  003934  0100               	movlb	0	; () banked
  1369  003936  6FDB               	movwf	(_main$1042+1)& (0+255),b
  1370  003938  0E02               	movlw	2
  1371  00393A  6FDA               	movwf	_main$1042& (0+255),b
  1372  00393C  EFA5  F01C         	goto	l7162
  1373  003940                     l7160:
  1374  003940  0E00               	movlw	0
  1375  003942  0100               	movlb	0	; () banked
  1376  003944  6FDB               	movwf	(_main$1042+1)& (0+255),b
  1377  003946  0EB4               	movlw	180
  1378  003948  6FDA               	movwf	_main$1042& (0+255),b
  1379  00394A                     l7162:
  1380                           
  1381                           ; BSR set to: 0
  1382  00394A  C0DA  F0F7         	movff	_main$1042,_giBacklight_Timeout
  1383  00394E                     
  1384                           ; BSR set to: 0
  1385                           ;main.c: 72: InitTankVariables();
  1386  00394E  EC7B  F01A         	call	_InitTankVariables	;wreg free
  1387  003952                     
  1388                           ;main.c: 73: Timer0_Init();
  1389  003952  EC9B  F022         	call	_Timer0_Init	;wreg free
  1390  003956                     
  1391                           ;main.c: 74: Timer1_Init();
  1392  003956  EC92  F022         	call	_Timer1_Init	;wreg free
  1393  00395A                     
  1394                           ;main.c: 75: Timer2_Init();
  1395  00395A  EC89  F022         	call	_Timer2_Init	;wreg free
  1396  00395E                     
  1397                           ;main.c: 77: CCP1_Init();
  1398  00395E  ECAD  F022         	call	_CCP1_Init	;wreg free
  1399  003962                     
  1400                           ;main.c: 78: CCP2_Init();
  1401  003962  ECA4  F022         	call	_CCP2_Init	;wreg free
  1402  003966                     
  1403                           ;main.c: 80: INTCONbits.GIE = 1;
  1404  003966  8EF2               	bsf	242,7,c	;volatile
  1405  003968                     
  1406                           ;main.c: 81: INTCONbits.PEIE = 1;
  1407  003968  8CF2               	bsf	242,6,c	;volatile
  1408  00396A                     l7180:
  1409                           
  1410                           ;main.c: 84: {;main.c: 85: if (gb_EchoDetected)
  1411  00396A  0100               	movlb	0	; () banked
  1412  00396C  51F3               	movf	_gb_EchoDetected& (0+255),w,b	;volatile
  1413  00396E  B4D8               	btfsc	status,2,c
  1414  003970  EFBC  F01C         	goto	u8431
  1415  003974  EFBE  F01C         	goto	u8430
  1416  003978                     u8431:
  1417  003978  EFC3  F01C         	goto	l7186
  1418  00397C                     u8430:
  1419  00397C                     
  1420                           ; BSR set to: 0
  1421                           ;main.c: 86: {;main.c: 87: ComputeWaterVol();
  1422  00397C  EC28  F00F         	call	_ComputeWaterVol	;wreg free
  1423  003980                     
  1424                           ;main.c: 88: gb_EchoDetected = 0;
  1425  003980  0E00               	movlw	0
  1426  003982  0100               	movlb	0	; () banked
  1427  003984  6FF3               	movwf	_gb_EchoDetected& (0+255),b	;volatile
  1428  003986                     l7186:
  1429                           
  1430                           ; BSR set to: 0
  1431                           ;main.c: 89: };main.c: 90: if (gb_UpdateTime)
  1432  003986  51F4               	movf	_gb_UpdateTime& (0+255),w,b	;volatile
  1433  003988  B4D8               	btfsc	status,2,c
  1434  00398A  EFC9  F01C         	goto	u8441
  1435  00398E  EFCB  F01C         	goto	u8440
  1436  003992                     u8441:
  1437  003992  EFD0  F01C         	goto	l7192
  1438  003996                     u8440:
  1439  003996                     
  1440                           ; BSR set to: 0
  1441                           ;main.c: 91: {;main.c: 92: ComputeTOD();
  1442  003996  EC06  F01D         	call	_ComputeTOD	;wreg free
  1443  00399A                     
  1444                           ;main.c: 93: gb_UpdateTime = 0;
  1445  00399A  0E00               	movlw	0
  1446  00399C  0100               	movlb	0	; () banked
  1447  00399E  6FF4               	movwf	_gb_UpdateTime& (0+255),b	;volatile
  1448  0039A0                     l7192:
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;main.c: 94: };main.c: 97: if (!gbBacklight_On)
  1452  0039A0  51EC               	movf	_gbBacklight_On& (0+255),w,b
  1453  0039A2  A4D8               	btfss	status,2,c
  1454  0039A4  EFD6  F01C         	goto	u8451
  1455  0039A8  EFD8  F01C         	goto	u8450
  1456  0039AC                     u8451:
  1457  0039AC  EFE8  F01C         	goto	l7200
  1458  0039B0                     u8450:
  1459  0039B0                     
  1460                           ; BSR set to: 0
  1461                           ;main.c: 98: {;main.c: 99: if (PORTCbits.RC4)
  1462  0039B0  A882               	btfss	130,4,c	;volatile
  1463  0039B2  EFDD  F01C         	goto	u8461
  1464  0039B6  EFDF  F01C         	goto	u8460
  1465  0039BA                     u8461:
  1466  0039BA  EFB5  F01C         	goto	l7180
  1467  0039BE                     u8460:
  1468  0039BE                     
  1469                           ; BSR set to: 0
  1470                           ;main.c: 100: {;main.c: 101: LATAbits.LA4 = 1;
  1471  0039BE  8889               	bsf	137,4,c	;volatile
  1472  0039C0                     
  1473                           ; BSR set to: 0
  1474                           ;main.c: 102: gbBacklight_On = 1;
  1475  0039C0  0E01               	movlw	1
  1476  0039C2  6FEC               	movwf	_gbBacklight_On& (0+255),b
  1477                           
  1478                           ;main.c: 103: giBacklight_Timer = 0;
  1479  0039C4  0E00               	movlw	0
  1480  0039C6  6FE7               	movwf	(_giBacklight_Timer+1)& (0+255),b
  1481  0039C8  0E00               	movlw	0
  1482  0039CA  6FE6               	movwf	_giBacklight_Timer& (0+255),b
  1483  0039CC  EFB5  F01C         	goto	l7180
  1484  0039D0                     l7200:
  1485                           
  1486                           ; BSR set to: 0
  1487                           ;main.c: 106: if (giBacklight_Timer > giBacklight_Timeout)
  1488  0039D0  51F7               	movf	_giBacklight_Timeout& (0+255),w,b
  1489  0039D2  6FD8               	movwf	??_main& (0+255),b
  1490  0039D4  6BD9               	clrf	(??_main+1)& (0+255),b
  1491  0039D6  51E6               	movf	_giBacklight_Timer& (0+255),w,b
  1492  0039D8  5DD8               	subwf	??_main& (0+255),w,b
  1493  0039DA  51E7               	movf	(_giBacklight_Timer+1)& (0+255),w,b
  1494  0039DC  59D9               	subwfb	(??_main+1)& (0+255),w,b
  1495  0039DE  B0D8               	btfsc	status,0,c
  1496  0039E0  EFF4  F01C         	goto	u8471
  1497  0039E4  EFF6  F01C         	goto	u8470
  1498  0039E8                     u8471:
  1499  0039E8  EFB5  F01C         	goto	l7180
  1500  0039EC                     u8470:
  1501  0039EC                     
  1502                           ; BSR set to: 0
  1503                           ;main.c: 107: {;main.c: 108: if (!PORTCbits.RC4)
  1504  0039EC  B882               	btfsc	130,4,c	;volatile
  1505  0039EE  EFFB  F01C         	goto	u8481
  1506  0039F2  EFFD  F01C         	goto	u8480
  1507  0039F6                     u8481:
  1508  0039F6  EF02  F01D         	goto	l358
  1509  0039FA                     u8480:
  1510  0039FA                     
  1511                           ; BSR set to: 0
  1512                           ;main.c: 109: {;main.c: 110: gbBacklight_On = 0;
  1513  0039FA  0E00               	movlw	0
  1514  0039FC  6FEC               	movwf	_gbBacklight_On& (0+255),b
  1515  0039FE                     
  1516                           ; BSR set to: 0
  1517                           ;main.c: 111: LATAbits.LATA4 = 0;
  1518  0039FE  9889               	bcf	137,4,c	;volatile
  1519  003A00  EFB5  F01C         	goto	l7180
  1520  003A04                     l358:
  1521                           
  1522                           ; BSR set to: 0
  1523  003A04  EFB5  F01C         	goto	l7180
  1524  003A08  EF07  F000         	goto	start
  1525  003A0C                     __end_of_main:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function _Timer2_Init *****************
  1529 ;; Defined at:
  1530 ;;		line 35 in file "Timer_2.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1544 ;;      Params:         0       0       0       0       0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1547 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    4
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text1
  1559  004512                     __ptext1:
  1560                           	callstack 0
  1561  004512                     _Timer2_Init:
  1562                           	callstack 26
  1563  004512                     
  1564                           ;Timer_2.c: 38: PR2 = 0x31;
  1565  004512  0E31               	movlw	49
  1566  004514  6ECB               	movwf	203,c	;volatile
  1567                           
  1568                           ;Timer_2.c: 44: T2CON = (10-2)<<3 | 0 | 0;
  1569  004516  0E40               	movlw	64
  1570  004518  6ECA               	movwf	202,c	;volatile
  1571                           
  1572                           ;Timer_2.c: 46: TMR2 = 0;
  1573  00451A  0E00               	movlw	0
  1574  00451C  6ECC               	movwf	204,c	;volatile
  1575  00451E                     
  1576                           ;Timer_2.c: 47: PIR1bits.TMR2IF = 0;
  1577  00451E  929E               	bcf	158,1,c	;volatile
  1578  004520                     
  1579                           ;Timer_2.c: 48: PIE1bits.TMR2IE = 0;
  1580  004520  929D               	bcf	157,1,c	;volatile
  1581  004522  0012               	return		;funcret
  1582  004524                     __end_of_Timer2_Init:
  1583                           	callstack 0
  1584                           
  1585 ;; *************** function _Timer1_Init *****************
  1586 ;; Defined at:
  1587 ;;		line 10 in file "Timer_1.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;		None
  1590 ;; Auto vars:     Size  Location     Type
  1591 ;;		None
  1592 ;; Return value:  Size  Location     Type
  1593 ;;                  1    wreg      void 
  1594 ;; Registers used:
  1595 ;;		wreg, status,2
  1596 ;; Tracked objects:
  1597 ;;		On entry : 0/0
  1598 ;;		On exit  : 0/0
  1599 ;;		Unchanged: 0/0
  1600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1601 ;;      Params:         0       0       0       0       0       0       0       0       0
  1602 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1604 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1605 ;;Total ram usage:        0 bytes
  1606 ;; Hardware stack levels used:    1
  1607 ;; Hardware stack levels required when called:    4
  1608 ;; This function calls:
  1609 ;;		Nothing
  1610 ;; This function is called by:
  1611 ;;		_main
  1612 ;; This function uses a non-reentrant model
  1613 ;;
  1614                           
  1615                           	psect	text2
  1616  004524                     __ptext2:
  1617                           	callstack 0
  1618  004524                     _Timer1_Init:
  1619                           	callstack 26
  1620  004524                     
  1621                           ;Timer_1.c: 12: PIR1bits.TMR1IF = 0;
  1622  004524  909E               	bcf	158,0,c	;volatile
  1623                           
  1624                           ;Timer_1.c: 13: PIE1bits.TMR1IE = 0;
  1625  004526  909D               	bcf	157,0,c	;volatile
  1626  004528                     
  1627                           ;Timer_1.c: 20: T1CON = 0x80;
  1628  004528  0E80               	movlw	128
  1629  00452A  6ECD               	movwf	205,c	;volatile
  1630                           
  1631                           ;Timer_1.c: 22: TMR1H = 0;
  1632  00452C  0E00               	movlw	0
  1633  00452E  6ECF               	movwf	207,c	;volatile
  1634                           
  1635                           ;Timer_1.c: 23: TMR1L = 0;
  1636  004530  0E00               	movlw	0
  1637  004532  6ECE               	movwf	206,c	;volatile
  1638  004534  0012               	return		;funcret
  1639  004536                     __end_of_Timer1_Init:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function _Timer0_Init *****************
  1643 ;; Defined at:
  1644 ;;		line 41 in file "Timer_0.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1658 ;;      Params:         0       0       0       0       0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1661 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1662 ;;Total ram usage:        0 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    4
  1665 ;; This function calls:
  1666 ;;		Nothing
  1667 ;; This function is called by:
  1668 ;;		_main
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text3
  1673  004536                     __ptext3:
  1674                           	callstack 0
  1675  004536                     _Timer0_Init:
  1676                           	callstack 26
  1677  004536  0E00               	movlw	0
  1678  004538  6ED7               	movwf	215,c	;volatile
  1679  00453A  0E00               	movlw	0
  1680  00453C  6ED6               	movwf	214,c	;volatile
  1681  00453E                     
  1682                           ;Timer_0.c: 46: INTCONbits.TMR0IF = 0;
  1683  00453E  94F2               	bcf	242,2,c	;volatile
  1684  004540                     
  1685                           ;Timer_0.c: 47: INTCONbits.TMR0IE = 1;
  1686  004540  8AF2               	bsf	242,5,c	;volatile
  1687                           
  1688                           ;Timer_0.c: 50: T0CON = 0x97;
  1689  004542  0E97               	movlw	151
  1690  004544  6ED5               	movwf	213,c	;volatile
  1691  004546  0012               	return		;funcret
  1692  004548                     __end_of_Timer0_Init:
  1693                           	callstack 0
  1694                           
  1695 ;; *************** function _SysInit *****************
  1696 ;; Defined at:
  1697 ;;		line 10 in file "SysInit.c"
  1698 ;; Parameters:    Size  Location     Type
  1699 ;;		None
  1700 ;; Auto vars:     Size  Location     Type
  1701 ;;		None
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  1    wreg      void 
  1704 ;; Registers used:
  1705 ;;		wreg, status,2, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1711 ;;      Params:         0       0       0       0       0       0       0       0       0
  1712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1715 ;;Total ram usage:        0 bytes
  1716 ;; Hardware stack levels used:    1
  1717 ;; Hardware stack levels required when called:    5
  1718 ;; This function calls:
  1719 ;;		_OscInit
  1720 ;;		_PIN_MANAGER_Initialize
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text4
  1727  0045A8                     __ptext4:
  1728                           	callstack 0
  1729  0045A8                     _SysInit:
  1730                           	callstack 25
  1731  0045A8                     
  1732                           ;SysInit.c: 12: PIN_MANAGER_Initialize();
  1733  0045A8  EC56  F022         	call	_PIN_MANAGER_Initialize	;wreg free
  1734                           
  1735                           ;SysInit.c: 13: OscInit();
  1736  0045AC  ECD9  F022         	call	_OscInit	;wreg free
  1737  0045B0  0012               	return		;funcret
  1738  0045B2                     __end_of_SysInit:
  1739                           	callstack 0
  1740                           
  1741 ;; *************** function _PIN_MANAGER_Initialize *****************
  1742 ;; Defined at:
  1743 ;;		line 25 in file "pin_manager.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;		None
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0
  1758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1760 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1761 ;;Total ram usage:        0 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    4
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_SysInit
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           	psect	text5
  1772  0044AC                     __ptext5:
  1773                           	callstack 0
  1774  0044AC                     _PIN_MANAGER_Initialize:
  1775                           	callstack 25
  1776  0044AC                     
  1777                           ;pin_manager.c: 34: LATA = 0x00;
  1778  0044AC  0E00               	movlw	0
  1779  0044AE  6E89               	movwf	137,c	;volatile
  1780                           
  1781                           ;pin_manager.c: 35: LATB = 0x00;
  1782  0044B0  0E00               	movlw	0
  1783  0044B2  6E8A               	movwf	138,c	;volatile
  1784                           
  1785                           ;pin_manager.c: 36: LATC = 0x00;
  1786  0044B4  0E00               	movlw	0
  1787  0044B6  6E8B               	movwf	139,c	;volatile
  1788                           
  1789                           ;pin_manager.c: 45: TRISA = 0x00;
  1790  0044B8  0E00               	movlw	0
  1791  0044BA  6E92               	movwf	146,c	;volatile
  1792                           
  1793                           ;pin_manager.c: 46: TRISB = 0x00;
  1794  0044BC  0E00               	movlw	0
  1795  0044BE  6E93               	movwf	147,c	;volatile
  1796                           
  1797                           ;pin_manager.c: 47: TRISC = 0x04;
  1798  0044C0  0E04               	movlw	4
  1799  0044C2  6E94               	movwf	148,c	;volatile
  1800                           
  1801                           ;pin_manager.c: 63: ADCON1 = 0x00;
  1802  0044C4  0E00               	movlw	0
  1803  0044C6  6EC1               	movwf	193,c	;volatile
  1804                           
  1805                           ;pin_manager.c: 64: ADCON2 = 0x00;
  1806  0044C8  0E00               	movlw	0
  1807  0044CA  6EC0               	movwf	192,c	;volatile
  1808  0044CC                     
  1809                           ;pin_manager.c: 72: INTCON2bits.nRBPU = 1;
  1810  0044CC  8EF1               	bsf	241,7,c	;volatile
  1811  0044CE  0012               	return		;funcret
  1812  0044D0                     __end_of_PIN_MANAGER_Initialize:
  1813                           	callstack 0
  1814                           
  1815 ;; *************** function _OscInit *****************
  1816 ;; Defined at:
  1817 ;;		line 16 in file "SysInit.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1831 ;;      Params:         0       0       0       0       0       0       0       0       0
  1832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1834 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    4
  1838 ;; This function calls:
  1839 ;;		Nothing
  1840 ;; This function is called by:
  1841 ;;		_SysInit
  1842 ;; This function uses a non-reentrant model
  1843 ;;
  1844                           
  1845                           	psect	text6
  1846  0045B2                     __ptext6:
  1847                           	callstack 0
  1848  0045B2                     _OscInit:
  1849                           	callstack 25
  1850  0045B2                     
  1851                           ;SysInit.c: 21: OSCCON = 0x10;
  1852  0045B2  0E10               	movlw	16
  1853  0045B4  6ED3               	movwf	211,c	;volatile
  1854                           
  1855                           ;SysInit.c: 31: OSCTUNE = 0x00;
  1856  0045B6  0E00               	movlw	0
  1857  0045B8  6E9B               	movwf	155,c	;volatile
  1858  0045BA  0012               	return		;funcret
  1859  0045BC                     __end_of_OscInit:
  1860                           	callstack 0
  1861                           
  1862 ;; *************** function _LCD_Init *****************
  1863 ;; Defined at:
  1864 ;;		line 11 in file "LCD.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  iCmd            1    0        unsigned char 
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      void 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2, status,0, cstack
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1878 ;;      Params:         0       0       0       0       0       0       0       0       0
  1879 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1880 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1881 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1882 ;;Total ram usage:        2 bytes
  1883 ;; Hardware stack levels used:    1
  1884 ;; Hardware stack levels required when called:    5
  1885 ;; This function calls:
  1886 ;;		_LCD_WriteCmd
  1887 ;; This function is called by:
  1888 ;;		_main
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text7
  1893  004328                     __ptext7:
  1894                           	callstack 0
  1895  004328                     _LCD_Init:
  1896                           	callstack 25
  1897  004328                     
  1898                           ;LCD.c: 13: uint8_t iCmd;;LCD.c: 15: _delay((unsigned long)((15)*(8000000/4000.0)));
  1899  004328  0E27               	movlw	39
  1900  00432A  6E09               	movwf	??_LCD_Init^0,c
  1901  00432C  0EF5               	movlw	245
  1902  00432E                     u8497:
  1903  00432E  2EE8               	decfsz	wreg,f,c
  1904  004330  D7FE               	bra	u8497
  1905  004332  2E09               	decfsz	??_LCD_Init^0,f,c
  1906  004334  D7FC               	bra	u8497
  1907  004336  F000               	nop	
  1908  004338                     
  1909                           ;LCD.c: 17: LCD_WriteCmd (iCmd, 40+10);
  1910  004338  0E00               	movlw	0
  1911  00433A  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1912  00433C  0E32               	movlw	50
  1913  00433E  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1914  004340  0E3C               	movlw	60
  1915  004342  EC18  F020         	call	_LCD_WriteCmd
  1916  004346                     
  1917                           ;LCD.c: 21: LCD_WriteCmd (iCmd, 40+10);
  1918  004346  0E00               	movlw	0
  1919  004348  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1920  00434A  0E32               	movlw	50
  1921  00434C  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1922  00434E  0E08               	movlw	8
  1923  004350  EC18  F020         	call	_LCD_WriteCmd
  1924  004354                     
  1925                           ;LCD.c: 24: LCD_WriteCmd (iCmd, 40+10);
  1926  004354  0E00               	movlw	0
  1927  004356  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1928  004358  0E32               	movlw	50
  1929  00435A  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1930  00435C  0E06               	movlw	6
  1931  00435E  EC18  F020         	call	_LCD_WriteCmd
  1932  004362                     
  1933                           ;LCD.c: 26: LCD_WriteCmd (0x01, 2000);
  1934  004362  0E07               	movlw	7
  1935  004364  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1936  004366  0ED0               	movlw	208
  1937  004368  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1938  00436A  0E01               	movlw	1
  1939  00436C  EC18  F020         	call	_LCD_WriteCmd
  1940  004370                     
  1941                           ;LCD.c: 30: LCD_WriteCmd (iCmd, 40+10);
  1942  004370  0E00               	movlw	0
  1943  004372  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1944  004374  0E32               	movlw	50
  1945  004376  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1946  004378  0E0C               	movlw	12
  1947  00437A  EC18  F020         	call	_LCD_WriteCmd
  1948  00437E  0012               	return		;funcret
  1949  004380                     __end_of_LCD_Init:
  1950                           	callstack 0
  1951                           
  1952 ;; *************** function _InitTankVariables *****************
  1953 ;; Defined at:
  1954 ;;		line 174 in file "main.c"
  1955 ;; Parameters:    Size  Location     Type
  1956 ;;		None
  1957 ;; Auto vars:     Size  Location     Type
  1958 ;;		None
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      void 
  1961 ;; Registers used:
  1962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1968 ;;      Params:         0       0       0       0       0       0       0       0       0
  1969 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1970 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1971 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1972 ;;Total ram usage:        4 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    9
  1975 ;; This function calls:
  1976 ;;		___flmul
  1977 ;;		_pow
  1978 ;;		_sqrt
  1979 ;; This function is called by:
  1980 ;;		_main
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           	psect	text8
  1985  0034F6                     __ptext8:
  1986                           	callstack 0
  1987  0034F6                     _InitTankVariables:
  1988                           	callstack 21
  1989  0034F6                     
  1990                           ;main.c: 176: gd_TankSurfArea_mm2 = 3.1416926f * pow(48 * 25.4 / 2, 2);
  1991  0034F6  0E00               	movlw	0
  1992  0034F8  0100               	movlb	0	; () banked
  1993  0034FA  6FA7               	movwf	pow@y& (0+255),b
  1994  0034FC  0E00               	movlw	0
  1995  0034FE  6FA8               	movwf	(pow@y+1)& (0+255),b
  1996  003500  0E00               	movlw	0
  1997  003502  6FA9               	movwf	(pow@y+2)& (0+255),b
  1998  003504  0E40               	movlw	64
  1999  003506  6FAA               	movwf	(pow@y+3)& (0+255),b
  2000  003508  0E66               	movlw	102
  2001  00350A  6FA3               	movwf	pow@x& (0+255),b
  2002  00350C  0E66               	movlw	102
  2003  00350E  6FA4               	movwf	(pow@x+1)& (0+255),b
  2004  003510  0E18               	movlw	24
  2005  003512  6FA5               	movwf	(pow@x+2)& (0+255),b
  2006  003514  0E44               	movlw	68
  2007  003516  6FA6               	movwf	(pow@x+3)& (0+255),b
  2008  003518  EC12  F015         	call	_pow	;wreg free
  2009  00351C  C0A3  F0B8         	movff	?_pow,_InitTankVariables$2369
  2010  003520  C0A4  F0B9         	movff	?_pow+1,_InitTankVariables$2369+1
  2011  003524  C0A5  F0BA         	movff	?_pow+2,_InitTankVariables$2369+2
  2012  003528  C0A6  F0BB         	movff	?_pow+3,_InitTankVariables$2369+3
  2013  00352C                     
  2014                           ;main.c: 176: gd_TankSurfArea_mm2 = 3.1416926f * pow(48 * 25.4 / 2, 2);
  2015  00352C  C0B8  F047         	movff	_InitTankVariables$2369,___flmul@b
  2016  003530  C0B9  F048         	movff	_InitTankVariables$2369+1,___flmul@b+1
  2017  003534  C0BA  F049         	movff	_InitTankVariables$2369+2,___flmul@b+2
  2018  003538  C0BB  F04A         	movff	_InitTankVariables$2369+3,___flmul@b+3
  2019  00353C  0E7E               	movlw	126
  2020  00353E  6E4B               	movwf	___flmul@a^0,c
  2021  003540  0E11               	movlw	17
  2022  003542  6E4C               	movwf	(___flmul@a+1)^0,c
  2023  003544  0E49               	movlw	73
  2024  003546  6E4D               	movwf	(___flmul@a+2)^0,c
  2025  003548  0E40               	movlw	64
  2026  00354A  6E4E               	movwf	(___flmul@a+3)^0,c
  2027  00354C  EC3F  F009         	call	___flmul	;wreg free
  2028  003550  C047  F0DC         	movff	?___flmul,_gd_TankSurfArea_mm2
  2029  003554  C048  F0DD         	movff	?___flmul+1,_gd_TankSurfArea_mm2+1
  2030  003558  C049  F0DE         	movff	?___flmul+2,_gd_TankSurfArea_mm2+2
  2031  00355C  C04A  F0DF         	movff	?___flmul+3,_gd_TankSurfArea_mm2+3
  2032  003560                     
  2033                           ;main.c: 177: gd_SensorHeight_mm = 72 * 25.4;
  2034  003560  0E9A               	movlw	154
  2035  003562  0101               	movlb	1	; () banked
  2036  003564  6F0C               	movwf	_gd_SensorHeight_mm& (0+255),b
  2037  003566  0E99               	movlw	153
  2038  003568  6F0D               	movwf	(_gd_SensorHeight_mm+1)& (0+255),b
  2039  00356A  0EE4               	movlw	228
  2040  00356C  6F0E               	movwf	(_gd_SensorHeight_mm+2)& (0+255),b
  2041  00356E  0E44               	movlw	68
  2042  003570  6F0F               	movwf	(_gd_SensorHeight_mm+3)& (0+255),b
  2043  003572                     
  2044                           ; BSR set to: 1
  2045                           ;main.c: 178: gd_TankGalsPer_mm = gd_TankSurfArea_mm2 * 264.172052e-9;
  2046  003572  C0DC  F047         	movff	_gd_TankSurfArea_mm2,___flmul@b
  2047  003576  C0DD  F048         	movff	_gd_TankSurfArea_mm2+1,___flmul@b+1
  2048  00357A  C0DE  F049         	movff	_gd_TankSurfArea_mm2+2,___flmul@b+2
  2049  00357E  C0DF  F04A         	movff	_gd_TankSurfArea_mm2+3,___flmul@b+3
  2050  003582  0E88               	movlw	136
  2051  003584  6E4B               	movwf	___flmul@a^0,c
  2052  003586  0ED3               	movlw	211
  2053  003588  6E4C               	movwf	(___flmul@a+1)^0,c
  2054  00358A  0E8D               	movlw	141
  2055  00358C  6E4D               	movwf	(___flmul@a+2)^0,c
  2056  00358E  0E34               	movlw	52
  2057  003590  6E4E               	movwf	(___flmul@a+3)^0,c
  2058  003592  EC3F  F009         	call	___flmul	;wreg free
  2059  003596  C047  F108         	movff	?___flmul,_gd_TankGalsPer_mm
  2060  00359A  C048  F109         	movff	?___flmul+1,_gd_TankGalsPer_mm+1
  2061  00359E  C049  F10A         	movff	?___flmul+2,_gd_TankGalsPer_mm+2
  2062  0035A2  C04A  F10B         	movff	?___flmul+3,_gd_TankGalsPer_mm+3
  2063  0035A6                     
  2064                           ;main.c: 179: gd_MaxWaterHeight_mm = 68 * 25.4;
  2065  0035A6  0E66               	movlw	102
  2066  0035A8  0101               	movlb	1	; () banked
  2067  0035AA  6F04               	movwf	_gd_MaxWaterHeight_mm& (0+255),b
  2068  0035AC  0EE6               	movlw	230
  2069  0035AE  6F05               	movwf	(_gd_MaxWaterHeight_mm+1)& (0+255),b
  2070  0035B0  0ED7               	movlw	215
  2071  0035B2  6F06               	movwf	(_gd_MaxWaterHeight_mm+2)& (0+255),b
  2072  0035B4  0E44               	movlw	68
  2073  0035B6  6F07               	movwf	(_gd_MaxWaterHeight_mm+3)& (0+255),b
  2074  0035B8                     
  2075                           ; BSR set to: 1
  2076                           ;main.c: 180: gd_Default_SOS = 331.3e3 * sqrt( 1 + (20.0 / 273.15));
  2077  0035B8  0E45               	movlw	69
  2078  0035BA  6E1B               	movwf	sqrt@a^0,c
  2079  0035BC  0E5F               	movlw	95
  2080  0035BE  6E1C               	movwf	(sqrt@a+1)^0,c
  2081  0035C0  0E89               	movlw	137
  2082  0035C2  6E1D               	movwf	(sqrt@a+2)^0,c
  2083  0035C4  0E3F               	movlw	63
  2084  0035C6  6E1E               	movwf	(sqrt@a+3)^0,c
  2085  0035C8  ECBD  F010         	call	_sqrt	;wreg free
  2086  0035CC  C01B  F047         	movff	?_sqrt,___flmul@b
  2087  0035D0  C01C  F048         	movff	?_sqrt+1,___flmul@b+1
  2088  0035D4  C01D  F049         	movff	?_sqrt+2,___flmul@b+2
  2089  0035D8  C01E  F04A         	movff	?_sqrt+3,___flmul@b+3
  2090  0035DC  0E80               	movlw	128
  2091  0035DE  6E4B               	movwf	___flmul@a^0,c
  2092  0035E0  0EC4               	movlw	196
  2093  0035E2  6E4C               	movwf	(___flmul@a+1)^0,c
  2094  0035E4  0EA1               	movlw	161
  2095  0035E6  6E4D               	movwf	(___flmul@a+2)^0,c
  2096  0035E8  0E48               	movlw	72
  2097  0035EA  6E4E               	movwf	(___flmul@a+3)^0,c
  2098  0035EC  EC3F  F009         	call	___flmul	;wreg free
  2099  0035F0  C047  F100         	movff	?___flmul,_gd_Default_SOS
  2100  0035F4  C048  F101         	movff	?___flmul+1,_gd_Default_SOS+1
  2101  0035F8  C049  F102         	movff	?___flmul+2,_gd_Default_SOS+2
  2102  0035FC  C04A  F103         	movff	?___flmul+3,_gd_Default_SOS+3
  2103  003600  0012               	return		;funcret
  2104  003602                     __end_of_InitTankVariables:
  2105                           	callstack 0
  2106                           
  2107 ;; *************** function _pow *****************
  2108 ;; Defined at:
  2109 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\pow.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  x               4   67[BANK0 ] void 
  2112 ;;  y               4   71[BANK0 ] void 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  yi              4   84[BANK0 ] unsigned long 
  2115 ;;  sign            1   83[BANK0 ] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  4   67[BANK0 ] unsigned char 
  2118 ;; Registers used:
  2119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2125 ;;      Params:         0       8       0       0       0       0       0       0       0
  2126 ;;      Locals:         0      13       0       0       0       0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2128 ;;      Totals:         0      21       0       0       0       0       0       0       0
  2129 ;;Total ram usage:       21 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    8
  2132 ;; This function calls:
  2133 ;;		___fleq
  2134 ;;		___flge
  2135 ;;		___flmul
  2136 ;;		___flneg
  2137 ;;		___fltol
  2138 ;;		___xxtofl
  2139 ;;		_exp
  2140 ;;		_log
  2141 ;; This function is called by:
  2142 ;;		_InitTankVariables
  2143 ;; This function uses a non-reentrant model
  2144 ;;
  2145                           
  2146                           	psect	text9
  2147  002A24                     __ptext9:
  2148                           	callstack 0
  2149  002A24                     _pow:
  2150                           	callstack 21
  2151  002A24  0E00               	movlw	0
  2152  002A26  0100               	movlb	0	; () banked
  2153  002A28  6FB3               	movwf	pow@sign& (0+255),b
  2154  002A2A                     
  2155                           ; BSR set to: 0
  2156  002A2A  C0A3  F033         	movff	pow@x,___fleq@ff1
  2157  002A2E  C0A4  F034         	movff	pow@x+1,___fleq@ff1+1
  2158  002A32  C0A5  F035         	movff	pow@x+2,___fleq@ff1+2
  2159  002A36  C0A6  F036         	movff	pow@x+3,___fleq@ff1+3
  2160  002A3A  0E00               	movlw	0
  2161  002A3C  6E37               	movwf	___fleq@ff2^0,c
  2162  002A3E  0E00               	movlw	0
  2163  002A40  6E38               	movwf	(___fleq@ff2+1)^0,c
  2164  002A42  0E00               	movlw	0
  2165  002A44  6E39               	movwf	(___fleq@ff2+2)^0,c
  2166  002A46  0E00               	movlw	0
  2167  002A48  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2168  002A4A  EC9A  F01E         	call	___fleq	;wreg free
  2169  002A4E  A0D8               	btfss	status,0,c
  2170  002A50  EF2C  F015         	goto	u8261
  2171  002A54  EF2E  F015         	goto	u8260
  2172  002A58                     u8261:
  2173  002A58  EF57  F015         	goto	l7008
  2174  002A5C                     u8260:
  2175  002A5C  0E00               	movlw	0
  2176  002A5E  6E02               	movwf	___flge@ff1^0,c
  2177  002A60  0E00               	movlw	0
  2178  002A62  6E03               	movwf	(___flge@ff1+1)^0,c
  2179  002A64  0E00               	movlw	0
  2180  002A66  6E04               	movwf	(___flge@ff1+2)^0,c
  2181  002A68  0E00               	movlw	0
  2182  002A6A  6E05               	movwf	(___flge@ff1+3)^0,c
  2183  002A6C  C0A7  F006         	movff	pow@y,___flge@ff2
  2184  002A70  C0A8  F007         	movff	pow@y+1,___flge@ff2+1
  2185  002A74  C0A9  F008         	movff	pow@y+2,___flge@ff2+2
  2186  002A78  C0AA  F009         	movff	pow@y+3,___flge@ff2+3
  2187  002A7C  EC06  F01C         	call	___flge	;wreg free
  2188  002A80  A0D8               	btfss	status,0,c
  2189  002A82  EF45  F015         	goto	u8271
  2190  002A86  EF47  F015         	goto	u8270
  2191  002A8A                     u8271:
  2192  002A8A  EF4C  F015         	goto	l1525
  2193  002A8E                     u8270:
  2194  002A8E  0E00               	movlw	0
  2195  002A90  0100               	movlb	0	; () banked
  2196  002A92  6FE1               	movwf	(_errno+1)& (0+255),b
  2197  002A94  0E21               	movlw	33
  2198  002A96  6FE0               	movwf	_errno& (0+255),b
  2199  002A98                     l1525:
  2200  002A98  0E00               	movlw	0
  2201  002A9A  0100               	movlb	0	; () banked
  2202  002A9C  6FA3               	movwf	?_pow& (0+255),b
  2203  002A9E  0E00               	movlw	0
  2204  002AA0  6FA4               	movwf	(?_pow+1)& (0+255),b
  2205  002AA2  0E00               	movlw	0
  2206  002AA4  6FA5               	movwf	(?_pow+2)& (0+255),b
  2207  002AA6  0E00               	movlw	0
  2208  002AA8  6FA6               	movwf	(?_pow+3)& (0+255),b
  2209  002AAA  EF41  F016         	goto	l1526
  2210  002AAE                     l7008:
  2211  002AAE  C0A7  F033         	movff	pow@y,___fleq@ff1
  2212  002AB2  C0A8  F034         	movff	pow@y+1,___fleq@ff1+1
  2213  002AB6  C0A9  F035         	movff	pow@y+2,___fleq@ff1+2
  2214  002ABA  C0AA  F036         	movff	pow@y+3,___fleq@ff1+3
  2215  002ABE  0E00               	movlw	0
  2216  002AC0  6E37               	movwf	___fleq@ff2^0,c
  2217  002AC2  0E00               	movlw	0
  2218  002AC4  6E38               	movwf	(___fleq@ff2+1)^0,c
  2219  002AC6  0E00               	movlw	0
  2220  002AC8  6E39               	movwf	(___fleq@ff2+2)^0,c
  2221  002ACA  0E00               	movlw	0
  2222  002ACC  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2223  002ACE  EC9A  F01E         	call	___fleq	;wreg free
  2224  002AD2  A0D8               	btfss	status,0,c
  2225  002AD4  EF6E  F015         	goto	u8281
  2226  002AD8  EF70  F015         	goto	u8280
  2227  002ADC                     u8281:
  2228  002ADC  EF7B  F015         	goto	l7014
  2229  002AE0                     u8280:
  2230  002AE0  0E00               	movlw	0
  2231  002AE2  0100               	movlb	0	; () banked
  2232  002AE4  6FA3               	movwf	?_pow& (0+255),b
  2233  002AE6  0E00               	movlw	0
  2234  002AE8  6FA4               	movwf	(?_pow+1)& (0+255),b
  2235  002AEA  0E80               	movlw	128
  2236  002AEC  6FA5               	movwf	(?_pow+2)& (0+255),b
  2237  002AEE  0E3F               	movlw	63
  2238  002AF0  6FA6               	movwf	(?_pow+3)& (0+255),b
  2239  002AF2  EF41  F016         	goto	l1526
  2240  002AF6                     l7014:
  2241  002AF6  0100               	movlb	0	; () banked
  2242  002AF8  BFA6               	btfsc	(pow@x+3)& (0+255),7,b
  2243  002AFA  EF83  F015         	goto	u8290
  2244  002AFE  EF81  F015         	goto	u8291
  2245  002B02                     u8291:
  2246  002B02  EFDE  F015         	goto	l7026
  2247  002B06                     u8290:
  2248  002B06                     
  2249                           ; BSR set to: 0
  2250  002B06  C0A7  F01B         	movff	pow@y,___fltol@f1
  2251  002B0A  C0A8  F01C         	movff	pow@y+1,___fltol@f1+1
  2252  002B0E  C0A9  F01D         	movff	pow@y+2,___fltol@f1+2
  2253  002B12  C0AA  F01E         	movff	pow@y+3,___fltol@f1+3
  2254  002B16  EC01  F01B         	call	___fltol	;wreg free
  2255  002B1A  C01B  F0B4         	movff	?___fltol,pow@yi
  2256  002B1E  C01C  F0B5         	movff	?___fltol+1,pow@yi+1
  2257  002B22  C01D  F0B6         	movff	?___fltol+2,pow@yi+2
  2258  002B26  C01E  F0B7         	movff	?___fltol+3,pow@yi+3
  2259  002B2A  C0B4  F025         	movff	pow@yi,___xxtofl@val
  2260  002B2E  C0B5  F026         	movff	pow@yi+1,___xxtofl@val+1
  2261  002B32  C0B6  F027         	movff	pow@yi+2,___xxtofl@val+2
  2262  002B36  C0B7  F028         	movff	pow@yi+3,___xxtofl@val+3
  2263  002B3A  0E00               	movlw	0
  2264  002B3C  EC42  F016         	call	___xxtofl
  2265  002B40  C025  F033         	movff	?___xxtofl,___fleq@ff1
  2266  002B44  C026  F034         	movff	?___xxtofl+1,___fleq@ff1+1
  2267  002B48  C027  F035         	movff	?___xxtofl+2,___fleq@ff1+2
  2268  002B4C  C028  F036         	movff	?___xxtofl+3,___fleq@ff1+3
  2269  002B50  C0A7  F037         	movff	pow@y,___fleq@ff2
  2270  002B54  C0A8  F038         	movff	pow@y+1,___fleq@ff2+1
  2271  002B58  C0A9  F039         	movff	pow@y+2,___fleq@ff2+2
  2272  002B5C  C0AA  F03A         	movff	pow@y+3,___fleq@ff2+3
  2273  002B60  EC9A  F01E         	call	___fleq	;wreg free
  2274  002B64  B0D8               	btfsc	status,0,c
  2275  002B66  EFB7  F015         	goto	u8301
  2276  002B6A  EFB9  F015         	goto	u8300
  2277  002B6E                     u8301:
  2278  002B6E  EFC8  F015         	goto	l7022
  2279  002B72                     u8300:
  2280  002B72  0E00               	movlw	0
  2281  002B74  0100               	movlb	0	; () banked
  2282  002B76  6FE1               	movwf	(_errno+1)& (0+255),b
  2283  002B78  0E21               	movlw	33
  2284  002B7A  6FE0               	movwf	_errno& (0+255),b
  2285  002B7C  0E00               	movlw	0
  2286  002B7E  6FA3               	movwf	?_pow& (0+255),b
  2287  002B80  0E00               	movlw	0
  2288  002B82  6FA4               	movwf	(?_pow+1)& (0+255),b
  2289  002B84  0E00               	movlw	0
  2290  002B86  6FA5               	movwf	(?_pow+2)& (0+255),b
  2291  002B88  0E00               	movlw	0
  2292  002B8A  6FA6               	movwf	(?_pow+3)& (0+255),b
  2293  002B8C  EF41  F016         	goto	l1526
  2294  002B90                     l7022:
  2295  002B90  0100               	movlb	0	; () banked
  2296  002B92  51B4               	movf	pow@yi& (0+255),w,b
  2297  002B94  0B01               	andlw	1
  2298  002B96  6FB3               	movwf	pow@sign& (0+255),b
  2299  002B98                     
  2300                           ; BSR set to: 0
  2301  002B98  C0A3  F002         	movff	pow@x,___flneg@f1
  2302  002B9C  C0A4  F003         	movff	pow@x+1,___flneg@f1+1
  2303  002BA0  C0A5  F004         	movff	pow@x+2,___flneg@f1+2
  2304  002BA4  C0A6  F005         	movff	pow@x+3,___flneg@f1+3
  2305  002BA8  EC0E  F022         	call	___flneg	;wreg free
  2306  002BAC  C002  F0A3         	movff	?___flneg,pow@x
  2307  002BB0  C003  F0A4         	movff	?___flneg+1,pow@x+1
  2308  002BB4  C004  F0A5         	movff	?___flneg+2,pow@x+2
  2309  002BB8  C005  F0A6         	movff	?___flneg+3,pow@x+3
  2310  002BBC                     l7026:
  2311  002BBC  C0A3  F092         	movff	pow@x,log@x
  2312  002BC0  C0A4  F093         	movff	pow@x+1,log@x+1
  2313  002BC4  C0A5  F094         	movff	pow@x+2,log@x+2
  2314  002BC8  C0A6  F095         	movff	pow@x+3,log@x+3
  2315  002BCC  EC1C  F017         	call	_log	;wreg free
  2316  002BD0  C092  F0AB         	movff	?_log,_pow$2374
  2317  002BD4  C093  F0AC         	movff	?_log+1,_pow$2374+1
  2318  002BD8  C094  F0AD         	movff	?_log+2,_pow$2374+2
  2319  002BDC  C095  F0AE         	movff	?_log+3,_pow$2374+3
  2320  002BE0  C0AB  F047         	movff	_pow$2374,___flmul@b
  2321  002BE4  C0AC  F048         	movff	_pow$2374+1,___flmul@b+1
  2322  002BE8  C0AD  F049         	movff	_pow$2374+2,___flmul@b+2
  2323  002BEC  C0AE  F04A         	movff	_pow$2374+3,___flmul@b+3
  2324  002BF0  C0A7  F04B         	movff	pow@y,___flmul@a
  2325  002BF4  C0A8  F04C         	movff	pow@y+1,___flmul@a+1
  2326  002BF8  C0A9  F04D         	movff	pow@y+2,___flmul@a+2
  2327  002BFC  C0AA  F04E         	movff	pow@y+3,___flmul@a+3
  2328  002C00  EC3F  F009         	call	___flmul	;wreg free
  2329  002C04  C047  F0AF         	movff	?___flmul,_pow$2375
  2330  002C08  C048  F0B0         	movff	?___flmul+1,_pow$2375+1
  2331  002C0C  C049  F0B1         	movff	?___flmul+2,_pow$2375+2
  2332  002C10  C04A  F0B2         	movff	?___flmul+3,_pow$2375+3
  2333  002C14  C0AF  F098         	movff	_pow$2375,exp@x
  2334  002C18  C0B0  F099         	movff	_pow$2375+1,exp@x+1
  2335  002C1C  C0B1  F09A         	movff	_pow$2375+2,exp@x+2
  2336  002C20  C0B2  F09B         	movff	_pow$2375+3,exp@x+3
  2337  002C24  EC4B  F012         	call	_exp	;wreg free
  2338  002C28  C098  F0A3         	movff	?_exp,pow@x
  2339  002C2C  C099  F0A4         	movff	?_exp+1,pow@x+1
  2340  002C30  C09A  F0A5         	movff	?_exp+2,pow@x+2
  2341  002C34  C09B  F0A6         	movff	?_exp+3,pow@x+3
  2342  002C38  0100               	movlb	0	; () banked
  2343  002C3A  51B3               	movf	pow@sign& (0+255),w,b
  2344  002C3C  B4D8               	btfsc	status,2,c
  2345  002C3E  EF23  F016         	goto	u8311
  2346  002C42  EF25  F016         	goto	u8310
  2347  002C46                     u8311:
  2348  002C46  EF39  F016         	goto	l1530
  2349  002C4A                     u8310:
  2350  002C4A                     
  2351                           ; BSR set to: 0
  2352  002C4A  C0A3  F002         	movff	pow@x,___flneg@f1
  2353  002C4E  C0A4  F003         	movff	pow@x+1,___flneg@f1+1
  2354  002C52  C0A5  F004         	movff	pow@x+2,___flneg@f1+2
  2355  002C56  C0A6  F005         	movff	pow@x+3,___flneg@f1+3
  2356  002C5A  EC0E  F022         	call	___flneg	;wreg free
  2357  002C5E  C002  F0A3         	movff	?___flneg,?_pow
  2358  002C62  C003  F0A4         	movff	?___flneg+1,?_pow+1
  2359  002C66  C004  F0A5         	movff	?___flneg+2,?_pow+2
  2360  002C6A  C005  F0A6         	movff	?___flneg+3,?_pow+3
  2361  002C6E  EF41  F016         	goto	l1526
  2362  002C72                     l1530:
  2363                           
  2364                           ; BSR set to: 0
  2365  002C72  C0A3  F0A3         	movff	pow@x,?_pow
  2366  002C76  C0A4  F0A4         	movff	pow@x+1,?_pow+1
  2367  002C7A  C0A5  F0A5         	movff	pow@x+2,?_pow+2
  2368  002C7E  C0A6  F0A6         	movff	pow@x+3,?_pow+3
  2369  002C82                     l1526:
  2370  002C82  0012               	return		;funcret
  2371  002C84                     __end_of_pow:
  2372                           	callstack 0
  2373                           
  2374 ;; *************** function _log *****************
  2375 ;; Defined at:
  2376 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\log.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  x               4   50[BANK0 ] unsigned char 
  2379 ;; Auto vars:     Size  Location     Type
  2380 ;;  exponent        2   90[COMRAM] int 
  2381 ;; Return value:  Size  Location     Type
  2382 ;;                  4   50[BANK0 ] int 
  2383 ;; Registers used:
  2384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2385 ;; Tracked objects:
  2386 ;;		On entry : 0/0
  2387 ;;		On exit  : 0/0
  2388 ;;		Unchanged: 0/0
  2389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2390 ;;      Params:         0       4       0       0       0       0       0       0       0
  2391 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2392 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2393 ;;      Totals:         2       4       0       0       0       0       0       0       0
  2394 ;;Total ram usage:        6 bytes
  2395 ;; Hardware stack levels used:    1
  2396 ;; Hardware stack levels required when called:    6
  2397 ;; This function calls:
  2398 ;;		___fladd
  2399 ;;		___fleq
  2400 ;;		___flmul
  2401 ;;		___xxtofl
  2402 ;;		_eval_poly
  2403 ;;		_frexp
  2404 ;; This function is called by:
  2405 ;;		_pow
  2406 ;; This function uses a non-reentrant model
  2407 ;;
  2408                           
  2409                           	psect	text10
  2410  002E38                     __ptext10:
  2411                           	callstack 0
  2412  002E38                     _log:
  2413                           	callstack 22
  2414  002E38  0100               	movlb	0	; () banked
  2415  002E3A  BF95               	btfsc	(log@x+3)& (0+255),7,b
  2416  002E3C  EF24  F017         	goto	u7580
  2417  002E40  EF22  F017         	goto	u7581
  2418  002E44                     u7581:
  2419  002E44  EF32  F017         	goto	l6584
  2420  002E48                     u7580:
  2421  002E48                     
  2422                           ; BSR set to: 0
  2423  002E48  0E00               	movlw	0
  2424  002E4A  6FE1               	movwf	(_errno+1)& (0+255),b
  2425  002E4C  0E21               	movlw	33
  2426  002E4E  6FE0               	movwf	_errno& (0+255),b
  2427  002E50  0E00               	movlw	0
  2428  002E52  6F92               	movwf	?_log& (0+255),b
  2429  002E54  0E00               	movlw	0
  2430  002E56  6F93               	movwf	(?_log+1)& (0+255),b
  2431  002E58  0E00               	movlw	0
  2432  002E5A  6F94               	movwf	(?_log+2)& (0+255),b
  2433  002E5C  0E00               	movlw	0
  2434  002E5E  6F95               	movwf	(?_log+3)& (0+255),b
  2435  002E60  EFEB  F017         	goto	l1592
  2436  002E64                     l6584:
  2437                           
  2438                           ; BSR set to: 0
  2439  002E64  C092  F033         	movff	log@x,___fleq@ff1
  2440  002E68  C093  F034         	movff	log@x+1,___fleq@ff1+1
  2441  002E6C  C094  F035         	movff	log@x+2,___fleq@ff1+2
  2442  002E70  C095  F036         	movff	log@x+3,___fleq@ff1+3
  2443  002E74  0E00               	movlw	0
  2444  002E76  6E37               	movwf	___fleq@ff2^0,c
  2445  002E78  0E00               	movlw	0
  2446  002E7A  6E38               	movwf	(___fleq@ff2+1)^0,c
  2447  002E7C  0E00               	movlw	0
  2448  002E7E  6E39               	movwf	(___fleq@ff2+2)^0,c
  2449  002E80  0E00               	movlw	0
  2450  002E82  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2451  002E84  EC9A  F01E         	call	___fleq	;wreg free
  2452  002E88  A0D8               	btfss	status,0,c
  2453  002E8A  EF49  F017         	goto	u7591
  2454  002E8E  EF4B  F017         	goto	u7590
  2455  002E92                     u7591:
  2456  002E92  EF5A  F017         	goto	l6590
  2457  002E96                     u7590:
  2458  002E96  0E00               	movlw	0
  2459  002E98  0100               	movlb	0	; () banked
  2460  002E9A  6FE1               	movwf	(_errno+1)& (0+255),b
  2461  002E9C  0E22               	movlw	34
  2462  002E9E  6FE0               	movwf	_errno& (0+255),b
  2463  002EA0  0E00               	movlw	0
  2464  002EA2  6F92               	movwf	?_log& (0+255),b
  2465  002EA4  0E00               	movlw	0
  2466  002EA6  6F93               	movwf	(?_log+1)& (0+255),b
  2467  002EA8  0E00               	movlw	0
  2468  002EAA  6F94               	movwf	(?_log+2)& (0+255),b
  2469  002EAC  0E00               	movlw	0
  2470  002EAE  6F95               	movwf	(?_log+3)& (0+255),b
  2471  002EB0  EFEB  F017         	goto	l1592
  2472  002EB4                     l6590:
  2473  002EB4  0E00               	movlw	0
  2474  002EB6  6E4B               	movwf	___flmul@a^0,c
  2475  002EB8  0E00               	movlw	0
  2476  002EBA  6E4C               	movwf	(___flmul@a+1)^0,c
  2477  002EBC  0E00               	movlw	0
  2478  002EBE  6E4D               	movwf	(___flmul@a+2)^0,c
  2479  002EC0  0E40               	movlw	64
  2480  002EC2  6E4E               	movwf	(___flmul@a+3)^0,c
  2481  002EC4  0E5B               	movlw	low log@exponent
  2482  002EC6  6E43               	movwf	frexp@eptr^0,c
  2483  002EC8  0E00               	movlw	high log@exponent
  2484  002ECA  6E44               	movwf	(frexp@eptr+1)^0,c
  2485  002ECC  C092  F03F         	movff	log@x,frexp@value
  2486  002ED0  C093  F040         	movff	log@x+1,frexp@value+1
  2487  002ED4  C094  F041         	movff	log@x+2,frexp@value+2
  2488  002ED8  C095  F042         	movff	log@x+3,frexp@value+3
  2489  002EDC  EC7E  F01D         	call	_frexp	;wreg free
  2490  002EE0  C03F  F047         	movff	?_frexp,___flmul@b
  2491  002EE4  C040  F048         	movff	?_frexp+1,___flmul@b+1
  2492  002EE8  C041  F049         	movff	?_frexp+2,___flmul@b+2
  2493  002EEC  C042  F04A         	movff	?_frexp+3,___flmul@b+3
  2494  002EF0  EC3F  F009         	call	___flmul	;wreg free
  2495  002EF4  C047  F076         	movff	?___flmul,___fladd@b
  2496  002EF8  C048  F077         	movff	?___flmul+1,___fladd@b+1
  2497  002EFC  C049  F078         	movff	?___flmul+2,___fladd@b+2
  2498  002F00  C04A  F079         	movff	?___flmul+3,___fladd@b+3
  2499  002F04  0E00               	movlw	0
  2500  002F06  0100               	movlb	0	; () banked
  2501  002F08  6F7A               	movwf	___fladd@a& (0+255),b
  2502  002F0A  0E00               	movlw	0
  2503  002F0C  6F7B               	movwf	(___fladd@a+1)& (0+255),b
  2504  002F0E  0E80               	movlw	128
  2505  002F10  6F7C               	movwf	(___fladd@a+2)& (0+255),b
  2506  002F12  0EBF               	movlw	191
  2507  002F14  6F7D               	movwf	(___fladd@a+3)& (0+255),b
  2508  002F16  ECDE  F006         	call	___fladd	;wreg free
  2509  002F1A  C076  F092         	movff	?___fladd,log@x
  2510  002F1E  C077  F093         	movff	?___fladd+1,log@x+1
  2511  002F22  C078  F094         	movff	?___fladd+2,log@x+2
  2512  002F26  C079  F095         	movff	?___fladd+3,log@x+3
  2513  002F2A  065B               	decf	log@exponent^0,f,c
  2514  002F2C  A0D8               	btfss	status,0,c
  2515  002F2E  065C               	decf	(log@exponent+1)^0,f,c
  2516  002F30  C092  F082         	movff	log@x,eval_poly@x
  2517  002F34  C093  F083         	movff	log@x+1,eval_poly@x+1
  2518  002F38  C094  F084         	movff	log@x+2,eval_poly@x+2
  2519  002F3C  C095  F085         	movff	log@x+3,eval_poly@x+3
  2520  002F40  0E9F               	movlw	low log@coeff
  2521  002F42  0100               	movlb	0	; () banked
  2522  002F44  6F86               	movwf	eval_poly@d& (0+255),b
  2523  002F46  0E5F               	movlw	high log@coeff
  2524  002F48  6F87               	movwf	(eval_poly@d+1)& (0+255),b
  2525  002F4A  0E00               	movlw	0
  2526  002F4C  6F89               	movwf	(eval_poly@n+1)& (0+255),b
  2527  002F4E  0E08               	movlw	8
  2528  002F50  6F88               	movwf	eval_poly@n& (0+255),b
  2529  002F52  EC84  F01B         	call	_eval_poly	;wreg free
  2530  002F56  C082  F092         	movff	?_eval_poly,log@x
  2531  002F5A  C083  F093         	movff	?_eval_poly+1,log@x+1
  2532  002F5E  C084  F094         	movff	?_eval_poly+2,log@x+2
  2533  002F62  C085  F095         	movff	?_eval_poly+3,log@x+3
  2534  002F66  0E18               	movlw	24
  2535  002F68  6E4B               	movwf	___flmul@a^0,c
  2536  002F6A  0E72               	movlw	114
  2537  002F6C  6E4C               	movwf	(___flmul@a+1)^0,c
  2538  002F6E  0E31               	movlw	49
  2539  002F70  6E4D               	movwf	(___flmul@a+2)^0,c
  2540  002F72  0E3F               	movlw	63
  2541  002F74  6E4E               	movwf	(___flmul@a+3)^0,c
  2542  002F76  C05B  F025         	movff	log@exponent,___xxtofl@val
  2543  002F7A  C05C  F026         	movff	log@exponent+1,___xxtofl@val+1
  2544  002F7E  0E00               	movlw	0
  2545  002F80  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  2546  002F82  0EFF               	movlw	-1
  2547  002F84  6E27               	movwf	(___xxtofl@val+2)^0,c
  2548  002F86  6E28               	movwf	(___xxtofl@val+3)^0,c
  2549  002F88  0E01               	movlw	1
  2550  002F8A  EC42  F016         	call	___xxtofl
  2551  002F8E  C025  F047         	movff	?___xxtofl,___flmul@b
  2552  002F92  C026  F048         	movff	?___xxtofl+1,___flmul@b+1
  2553  002F96  C027  F049         	movff	?___xxtofl+2,___flmul@b+2
  2554  002F9A  C028  F04A         	movff	?___xxtofl+3,___flmul@b+3
  2555  002F9E  EC3F  F009         	call	___flmul	;wreg free
  2556  002FA2  C047  F076         	movff	?___flmul,___fladd@b
  2557  002FA6  C048  F077         	movff	?___flmul+1,___fladd@b+1
  2558  002FAA  C049  F078         	movff	?___flmul+2,___fladd@b+2
  2559  002FAE  C04A  F079         	movff	?___flmul+3,___fladd@b+3
  2560  002FB2  C092  F07A         	movff	log@x,___fladd@a
  2561  002FB6  C093  F07B         	movff	log@x+1,___fladd@a+1
  2562  002FBA  C094  F07C         	movff	log@x+2,___fladd@a+2
  2563  002FBE  C095  F07D         	movff	log@x+3,___fladd@a+3
  2564  002FC2  ECDE  F006         	call	___fladd	;wreg free
  2565  002FC6  C076  F092         	movff	?___fladd,?_log
  2566  002FCA  C077  F093         	movff	?___fladd+1,?_log+1
  2567  002FCE  C078  F094         	movff	?___fladd+2,?_log+2
  2568  002FD2  C079  F095         	movff	?___fladd+3,?_log+3
  2569  002FD6                     l1592:
  2570  002FD6  0012               	return		;funcret
  2571  002FD8                     __end_of_log:
  2572                           	callstack 0
  2573                           
  2574 ;; *************** function _exp *****************
  2575 ;; Defined at:
  2576 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\exp.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  x               4   56[BANK0 ] int 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;  exponent        2   64[BANK0 ] int 
  2581 ;;  sign            1   66[BANK0 ] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  4   56[BANK0 ] unsigned char 
  2584 ;; Registers used:
  2585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2591 ;;      Params:         0       4       0       0       0       0       0       0       0
  2592 ;;      Locals:         0       7       0       0       0       0       0       0       0
  2593 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2594 ;;      Totals:         0      11       0       0       0       0       0       0       0
  2595 ;;Total ram usage:       11 bytes
  2596 ;; Hardware stack levels used:    1
  2597 ;; Hardware stack levels required when called:    7
  2598 ;; This function calls:
  2599 ;;		___fldiv
  2600 ;;		___fleq
  2601 ;;		___flge
  2602 ;;		___flmul
  2603 ;;		___flneg
  2604 ;;		___flsub
  2605 ;;		___fltol
  2606 ;;		___xxtofl
  2607 ;;		_eval_poly
  2608 ;;		_floor
  2609 ;;		_ldexp
  2610 ;; This function is called by:
  2611 ;;		_pow
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text11
  2616  002496                     __ptext11:
  2617                           	callstack 0
  2618  002496                     _exp:
  2619                           	callstack 21
  2620  002496  C098  F033         	movff	exp@x,___fleq@ff1
  2621  00249A  C099  F034         	movff	exp@x+1,___fleq@ff1+1
  2622  00249E  C09A  F035         	movff	exp@x+2,___fleq@ff1+2
  2623  0024A2  C09B  F036         	movff	exp@x+3,___fleq@ff1+3
  2624  0024A6  0E00               	movlw	0
  2625  0024A8  6E37               	movwf	___fleq@ff2^0,c
  2626  0024AA  0E00               	movlw	0
  2627  0024AC  6E38               	movwf	(___fleq@ff2+1)^0,c
  2628  0024AE  0E00               	movlw	0
  2629  0024B0  6E39               	movwf	(___fleq@ff2+2)^0,c
  2630  0024B2  0E00               	movlw	0
  2631  0024B4  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2632  0024B6  EC9A  F01E         	call	___fleq	;wreg free
  2633  0024BA  A0D8               	btfss	status,0,c
  2634  0024BC  EF62  F012         	goto	u7601
  2635  0024C0  EF64  F012         	goto	u7600
  2636  0024C4                     u7601:
  2637  0024C4  EF6F  F012         	goto	l6606
  2638  0024C8                     u7600:
  2639  0024C8  0E00               	movlw	0
  2640  0024CA  0100               	movlb	0	; () banked
  2641  0024CC  6F98               	movwf	?_exp& (0+255),b
  2642  0024CE  0E00               	movlw	0
  2643  0024D0  6F99               	movwf	(?_exp+1)& (0+255),b
  2644  0024D2  0E80               	movlw	128
  2645  0024D4  6F9A               	movwf	(?_exp+2)& (0+255),b
  2646  0024D6  0E3F               	movlw	63
  2647  0024D8  6F9B               	movwf	(?_exp+3)& (0+255),b
  2648  0024DA  EFBE  F013         	goto	l1544
  2649  0024DE                     l6606:
  2650  0024DE  0E18               	movlw	24
  2651  0024E0  6E02               	movwf	___flge@ff1^0,c
  2652  0024E2  0E72               	movlw	114
  2653  0024E4  6E03               	movwf	(___flge@ff1+1)^0,c
  2654  0024E6  0E31               	movlw	49
  2655  0024E8  6E04               	movwf	(___flge@ff1+2)^0,c
  2656  0024EA  0E44               	movlw	68
  2657  0024EC  6E05               	movwf	(___flge@ff1+3)^0,c
  2658  0024EE  C098  F006         	movff	exp@x,___flge@ff2
  2659  0024F2  C099  F007         	movff	exp@x+1,___flge@ff2+1
  2660  0024F6  C09A  F008         	movff	exp@x+2,___flge@ff2+2
  2661  0024FA  C09B  F009         	movff	exp@x+3,___flge@ff2+3
  2662  0024FE  EC06  F01C         	call	___flge	;wreg free
  2663  002502  B0D8               	btfsc	status,0,c
  2664  002504  EF86  F012         	goto	u7611
  2665  002508  EF88  F012         	goto	u7610
  2666  00250C                     u7611:
  2667  00250C  EF97  F012         	goto	l6612
  2668  002510                     u7610:
  2669  002510  0E00               	movlw	0
  2670  002512  0100               	movlb	0	; () banked
  2671  002514  6FE1               	movwf	(_errno+1)& (0+255),b
  2672  002516  0E22               	movlw	34
  2673  002518  6FE0               	movwf	_errno& (0+255),b
  2674  00251A  0EFF               	movlw	255
  2675  00251C  6F98               	movwf	?_exp& (0+255),b
  2676  00251E  0EFF               	movlw	255
  2677  002520  6F99               	movwf	(?_exp+1)& (0+255),b
  2678  002522  0E7F               	movlw	127
  2679  002524  6F9A               	movwf	(?_exp+2)& (0+255),b
  2680  002526  0E7F               	movlw	127
  2681  002528  6F9B               	movwf	(?_exp+3)& (0+255),b
  2682  00252A  EFBE  F013         	goto	l1544
  2683  00252E                     l6612:
  2684  00252E  C098  F002         	movff	exp@x,___flge@ff1
  2685  002532  C099  F003         	movff	exp@x+1,___flge@ff1+1
  2686  002536  C09A  F004         	movff	exp@x+2,___flge@ff1+2
  2687  00253A  C09B  F005         	movff	exp@x+3,___flge@ff1+3
  2688  00253E  0E87               	movlw	135
  2689  002540  6E06               	movwf	___flge@ff2^0,c
  2690  002542  0E48               	movlw	72
  2691  002544  6E07               	movwf	(___flge@ff2+1)^0,c
  2692  002546  0E3A               	movlw	58
  2693  002548  6E08               	movwf	(___flge@ff2+2)^0,c
  2694  00254A  0EC4               	movlw	196
  2695  00254C  6E09               	movwf	(___flge@ff2+3)^0,c
  2696  00254E  EC06  F01C         	call	___flge	;wreg free
  2697  002552  B0D8               	btfsc	status,0,c
  2698  002554  EFAE  F012         	goto	u7621
  2699  002558  EFB0  F012         	goto	u7620
  2700  00255C                     u7621:
  2701  00255C  EFBF  F012         	goto	l6618
  2702  002560                     u7620:
  2703  002560  0E00               	movlw	0
  2704  002562  0100               	movlb	0	; () banked
  2705  002564  6FE1               	movwf	(_errno+1)& (0+255),b
  2706  002566  0E22               	movlw	34
  2707  002568  6FE0               	movwf	_errno& (0+255),b
  2708  00256A  0E00               	movlw	0
  2709  00256C  6F98               	movwf	?_exp& (0+255),b
  2710  00256E  0E00               	movlw	0
  2711  002570  6F99               	movwf	(?_exp+1)& (0+255),b
  2712  002572  0E00               	movlw	0
  2713  002574  6F9A               	movwf	(?_exp+2)& (0+255),b
  2714  002576  0E00               	movlw	0
  2715  002578  6F9B               	movwf	(?_exp+3)& (0+255),b
  2716  00257A  EFBE  F013         	goto	l1544
  2717  00257E                     l6618:
  2718  00257E  0100               	movlb	0	; () banked
  2719  002580  BF9B               	btfsc	(exp@x+3)& (0+255),7,b
  2720  002582  EFC5  F012         	goto	u7631
  2721  002586  EFC8  F012         	goto	u7630
  2722  00258A                     u7631:
  2723  00258A  0E01               	movlw	1
  2724  00258C  EFC9  F012         	goto	u7640
  2725  002590                     u7630:
  2726  002590  0E00               	movlw	0
  2727  002592                     u7640:
  2728  002592  6FA2               	movwf	exp@sign& (0+255),b
  2729  002594                     
  2730                           ; BSR set to: 0
  2731  002594  51A2               	movf	exp@sign& (0+255),w,b
  2732  002596  B4D8               	btfsc	status,2,c
  2733  002598  EFD0  F012         	goto	u7651
  2734  00259C  EFD2  F012         	goto	u7650
  2735  0025A0                     u7651:
  2736  0025A0  EFE4  F012         	goto	l6624
  2737  0025A4                     u7650:
  2738  0025A4                     
  2739                           ; BSR set to: 0
  2740  0025A4  C098  F002         	movff	exp@x,___flneg@f1
  2741  0025A8  C099  F003         	movff	exp@x+1,___flneg@f1+1
  2742  0025AC  C09A  F004         	movff	exp@x+2,___flneg@f1+2
  2743  0025B0  C09B  F005         	movff	exp@x+3,___flneg@f1+3
  2744  0025B4  EC0E  F022         	call	___flneg	;wreg free
  2745  0025B8  C002  F098         	movff	?___flneg,exp@x
  2746  0025BC  C003  F099         	movff	?___flneg+1,exp@x+1
  2747  0025C0  C004  F09A         	movff	?___flneg+2,exp@x+2
  2748  0025C4  C005  F09B         	movff	?___flneg+3,exp@x+3
  2749  0025C8                     l6624:
  2750  0025C8  C098  F047         	movff	exp@x,___flmul@b
  2751  0025CC  C099  F048         	movff	exp@x+1,___flmul@b+1
  2752  0025D0  C09A  F049         	movff	exp@x+2,___flmul@b+2
  2753  0025D4  C09B  F04A         	movff	exp@x+3,___flmul@b+3
  2754  0025D8  0E3B               	movlw	59
  2755  0025DA  6E4B               	movwf	___flmul@a^0,c
  2756  0025DC  0EAA               	movlw	170
  2757  0025DE  6E4C               	movwf	(___flmul@a+1)^0,c
  2758  0025E0  0EB8               	movlw	184
  2759  0025E2  6E4D               	movwf	(___flmul@a+2)^0,c
  2760  0025E4  0E3F               	movlw	63
  2761  0025E6  6E4E               	movwf	(___flmul@a+3)^0,c
  2762  0025E8  EC3F  F009         	call	___flmul	;wreg free
  2763  0025EC  C047  F098         	movff	?___flmul,exp@x
  2764  0025F0  C048  F099         	movff	?___flmul+1,exp@x+1
  2765  0025F4  C049  F09A         	movff	?___flmul+2,exp@x+2
  2766  0025F8  C04A  F09B         	movff	?___flmul+3,exp@x+3
  2767  0025FC  C098  F082         	movff	exp@x,floor@x
  2768  002600  C099  F083         	movff	exp@x+1,floor@x+1
  2769  002604  C09A  F084         	movff	exp@x+2,floor@x+2
  2770  002608  C09B  F085         	movff	exp@x+3,floor@x+3
  2771  00260C  EC3D  F019         	call	_floor	;wreg free
  2772  002610  C082  F09C         	movff	?_floor,_exp$2376
  2773  002614  C083  F09D         	movff	?_floor+1,_exp$2376+1
  2774  002618  C084  F09E         	movff	?_floor+2,_exp$2376+2
  2775  00261C  C085  F09F         	movff	?_floor+3,_exp$2376+3
  2776  002620  C09C  F01B         	movff	_exp$2376,___fltol@f1
  2777  002624  C09D  F01C         	movff	_exp$2376+1,___fltol@f1+1
  2778  002628  C09E  F01D         	movff	_exp$2376+2,___fltol@f1+2
  2779  00262C  C09F  F01E         	movff	_exp$2376+3,___fltol@f1+3
  2780  002630  EC01  F01B         	call	___fltol	;wreg free
  2781  002634  C01B  F0A0         	movff	?___fltol,exp@exponent
  2782  002638  C01C  F0A1         	movff	?___fltol+1,exp@exponent+1
  2783  00263C  C098  F082         	movff	exp@x,___flsub@b
  2784  002640  C099  F083         	movff	exp@x+1,___flsub@b+1
  2785  002644  C09A  F084         	movff	exp@x+2,___flsub@b+2
  2786  002648  C09B  F085         	movff	exp@x+3,___flsub@b+3
  2787  00264C  C0A0  F025         	movff	exp@exponent,___xxtofl@val
  2788  002650  C0A1  F026         	movff	exp@exponent+1,___xxtofl@val+1
  2789  002654  0E00               	movlw	0
  2790  002656  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  2791  002658  0EFF               	movlw	-1
  2792  00265A  6E27               	movwf	(___xxtofl@val+2)^0,c
  2793  00265C  6E28               	movwf	(___xxtofl@val+3)^0,c
  2794  00265E  0E01               	movlw	1
  2795  002660  EC42  F016         	call	___xxtofl
  2796  002664  C025  F086         	movff	?___xxtofl,___flsub@a
  2797  002668  C026  F087         	movff	?___xxtofl+1,___flsub@a+1
  2798  00266C  C027  F088         	movff	?___xxtofl+2,___flsub@a+2
  2799  002670  C028  F089         	movff	?___xxtofl+3,___flsub@a+3
  2800  002674  ECEA  F021         	call	___flsub	;wreg free
  2801  002678  C082  F098         	movff	?___flsub,exp@x
  2802  00267C  C083  F099         	movff	?___flsub+1,exp@x+1
  2803  002680  C084  F09A         	movff	?___flsub+2,exp@x+2
  2804  002684  C085  F09B         	movff	?___flsub+3,exp@x+3
  2805  002688  C098  F082         	movff	exp@x,eval_poly@x
  2806  00268C  C099  F083         	movff	exp@x+1,eval_poly@x+1
  2807  002690  C09A  F084         	movff	exp@x+2,eval_poly@x+2
  2808  002694  C09B  F085         	movff	exp@x+3,eval_poly@x+3
  2809  002698  0E4F               	movlw	low exp@coeff
  2810  00269A  0100               	movlb	0	; () banked
  2811  00269C  6F86               	movwf	eval_poly@d& (0+255),b
  2812  00269E  0E5F               	movlw	high exp@coeff
  2813  0026A0  6F87               	movwf	(eval_poly@d+1)& (0+255),b
  2814  0026A2  0E00               	movlw	0
  2815  0026A4  6F89               	movwf	(eval_poly@n+1)& (0+255),b
  2816  0026A6  0E09               	movlw	9
  2817  0026A8  6F88               	movwf	eval_poly@n& (0+255),b
  2818  0026AA  EC84  F01B         	call	_eval_poly	;wreg free
  2819  0026AE  C082  F092         	movff	?_eval_poly,ldexp@value
  2820  0026B2  C083  F093         	movff	?_eval_poly+1,ldexp@value+1
  2821  0026B6  C084  F094         	movff	?_eval_poly+2,ldexp@value+2
  2822  0026BA  C085  F095         	movff	?_eval_poly+3,ldexp@value+3
  2823  0026BE  C0A0  F096         	movff	exp@exponent,ldexp@newexp
  2824  0026C2  C0A1  F097         	movff	exp@exponent+1,ldexp@newexp+1
  2825  0026C6  ECDF  F019         	call	_ldexp	;wreg free
  2826  0026CA  C092  F098         	movff	?_ldexp,exp@x
  2827  0026CE  C093  F099         	movff	?_ldexp+1,exp@x+1
  2828  0026D2  C094  F09A         	movff	?_ldexp+2,exp@x+2
  2829  0026D6  C095  F09B         	movff	?_ldexp+3,exp@x+3
  2830  0026DA  0100               	movlb	0	; () banked
  2831  0026DC  51A2               	movf	exp@sign& (0+255),w,b
  2832  0026DE  B4D8               	btfsc	status,2,c
  2833  0026E0  EF74  F013         	goto	u7661
  2834  0026E4  EF76  F013         	goto	u7660
  2835  0026E8                     u7661:
  2836  0026E8  EFB6  F013         	goto	l1548
  2837  0026EC                     u7660:
  2838  0026EC                     
  2839                           ; BSR set to: 0
  2840  0026EC  C098  F033         	movff	exp@x,___fleq@ff1
  2841  0026F0  C099  F034         	movff	exp@x+1,___fleq@ff1+1
  2842  0026F4  C09A  F035         	movff	exp@x+2,___fleq@ff1+2
  2843  0026F8  C09B  F036         	movff	exp@x+3,___fleq@ff1+3
  2844  0026FC  0EFF               	movlw	255
  2845  0026FE  6E37               	movwf	___fleq@ff2^0,c
  2846  002700  0EFF               	movlw	255
  2847  002702  6E38               	movwf	(___fleq@ff2+1)^0,c
  2848  002704  0E7F               	movlw	127
  2849  002706  6E39               	movwf	(___fleq@ff2+2)^0,c
  2850  002708  0E7F               	movlw	127
  2851  00270A  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2852  00270C  EC9A  F01E         	call	___fleq	;wreg free
  2853  002710  A0D8               	btfss	status,0,c
  2854  002712  EF8D  F013         	goto	u7671
  2855  002716  EF8F  F013         	goto	u7670
  2856  00271A                     u7671:
  2857  00271A  EF9A  F013         	goto	l6642
  2858  00271E                     u7670:
  2859  00271E  0E00               	movlw	0
  2860  002720  0100               	movlb	0	; () banked
  2861  002722  6F98               	movwf	?_exp& (0+255),b
  2862  002724  0E00               	movlw	0
  2863  002726  6F99               	movwf	(?_exp+1)& (0+255),b
  2864  002728  0E00               	movlw	0
  2865  00272A  6F9A               	movwf	(?_exp+2)& (0+255),b
  2866  00272C  0E00               	movlw	0
  2867  00272E  6F9B               	movwf	(?_exp+3)& (0+255),b
  2868  002730  EFBE  F013         	goto	l1544
  2869  002734                     l6642:
  2870  002734  0E00               	movlw	0
  2871  002736  6E02               	movwf	___fldiv@b^0,c
  2872  002738  0E00               	movlw	0
  2873  00273A  6E03               	movwf	(___fldiv@b+1)^0,c
  2874  00273C  0E80               	movlw	128
  2875  00273E  6E04               	movwf	(___fldiv@b+2)^0,c
  2876  002740  0E3F               	movlw	63
  2877  002742  6E05               	movwf	(___fldiv@b+3)^0,c
  2878  002744  C098  F006         	movff	exp@x,___fldiv@a
  2879  002748  C099  F007         	movff	exp@x+1,___fldiv@a+1
  2880  00274C  C09A  F008         	movff	exp@x+2,___fldiv@a+2
  2881  002750  C09B  F009         	movff	exp@x+3,___fldiv@a+3
  2882  002754  EC5B  F00D         	call	___fldiv	;wreg free
  2883  002758  C002  F098         	movff	?___fldiv,?_exp
  2884  00275C  C003  F099         	movff	?___fldiv+1,?_exp+1
  2885  002760  C004  F09A         	movff	?___fldiv+2,?_exp+2
  2886  002764  C005  F09B         	movff	?___fldiv+3,?_exp+3
  2887  002768  EFBE  F013         	goto	l1544
  2888  00276C                     l1548:
  2889                           
  2890                           ; BSR set to: 0
  2891  00276C  C098  F098         	movff	exp@x,?_exp
  2892  002770  C099  F099         	movff	exp@x+1,?_exp+1
  2893  002774  C09A  F09A         	movff	exp@x+2,?_exp+2
  2894  002778  C09B  F09B         	movff	exp@x+3,?_exp+3
  2895  00277C                     l1544:
  2896  00277C  0012               	return		;funcret
  2897  00277E                     __end_of_exp:
  2898                           	callstack 0
  2899                           
  2900 ;; *************** function _ldexp *****************
  2901 ;; Defined at:
  2902 ;;		line 277 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\frexp.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  value           4   50[BANK0 ] unsigned char 
  2905 ;;  newexp          2   54[BANK0 ] int 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;		None
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  4   50[BANK0 ] int 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0, cstack
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2917 ;;      Params:         0       6       0       0       0       0       0       0       0
  2918 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2919 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2920 ;;      Totals:         2       6       0       0       0       0       0       0       0
  2921 ;;Total ram usage:        8 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; Hardware stack levels required when called:    5
  2924 ;; This function calls:
  2925 ;;		___fleq
  2926 ;; This function is called by:
  2927 ;;		_exp
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text12
  2932  0033BE                     __ptext12:
  2933                           	callstack 0
  2934  0033BE                     _ldexp:
  2935                           	callstack 22
  2936  0033BE  C092  F033         	movff	ldexp@value,___fleq@ff1
  2937  0033C2  C093  F034         	movff	ldexp@value+1,___fleq@ff1+1
  2938  0033C6  C094  F035         	movff	ldexp@value+2,___fleq@ff1+2
  2939  0033CA  C095  F036         	movff	ldexp@value+3,___fleq@ff1+3
  2940  0033CE  0E00               	movlw	0
  2941  0033D0  6E37               	movwf	___fleq@ff2^0,c
  2942  0033D2  0E00               	movlw	0
  2943  0033D4  6E38               	movwf	(___fleq@ff2+1)^0,c
  2944  0033D6  0E00               	movlw	0
  2945  0033D8  6E39               	movwf	(___fleq@ff2+2)^0,c
  2946  0033DA  0E00               	movlw	0
  2947  0033DC  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2948  0033DE  EC9A  F01E         	call	___fleq	;wreg free
  2949  0033E2  A0D8               	btfss	status,0,c
  2950  0033E4  EFF6  F019         	goto	u7091
  2951  0033E8  EFF8  F019         	goto	u7090
  2952  0033EC                     u7091:
  2953  0033EC  EF03  F01A         	goto	l6296
  2954  0033F0                     u7090:
  2955  0033F0  0E00               	movlw	0
  2956  0033F2  0100               	movlb	0	; () banked
  2957  0033F4  6F92               	movwf	?_ldexp& (0+255),b
  2958  0033F6  0E00               	movlw	0
  2959  0033F8  6F93               	movwf	(?_ldexp+1)& (0+255),b
  2960  0033FA  0E00               	movlw	0
  2961  0033FC  6F94               	movwf	(?_ldexp+2)& (0+255),b
  2962  0033FE  0E00               	movlw	0
  2963  003400  6F95               	movwf	(?_ldexp+3)& (0+255),b
  2964  003402  EF7A  F01A         	goto	l1574
  2965  003406                     l6296:
  2966  003406  0100               	movlb	0	; () banked
  2967  003408  5195               	movf	(ldexp@value+3)& (0+255),w,b
  2968  00340A  0B7F               	andlw	127
  2969  00340C  6E5B               	movwf	??_ldexp^0,c
  2970  00340E  6A5C               	clrf	(??_ldexp+1)^0,c
  2971  003410  90D8               	bcf	status,0,c
  2972  003412  365B               	rlcf	??_ldexp^0,f,c
  2973  003414  365C               	rlcf	(??_ldexp+1)^0,f,c
  2974  003416  505B               	movf	??_ldexp^0,w,c
  2975  003418  2796               	addwf	ldexp@newexp& (0+255),f,b
  2976  00341A  505C               	movf	(??_ldexp+1)^0,w,c
  2977  00341C  2397               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  2978  00341E  BF94               	btfsc	(ldexp@value+2)& (0+255),7,b
  2979  003420  EF14  F01A         	goto	u7101
  2980  003424  EF18  F01A         	goto	u7100
  2981  003428                     u7101:
  2982  003428  6A5B               	clrf	??_ldexp^0,c
  2983  00342A  2A5B               	incf	??_ldexp^0,f,c
  2984  00342C  EF19  F01A         	goto	u7108
  2985  003430                     u7100:
  2986  003430  6A5B               	clrf	??_ldexp^0,c
  2987  003432                     u7108:
  2988  003432  505B               	movf	??_ldexp^0,w,c
  2989  003434  0100               	movlb	0	; () banked
  2990  003436  2796               	addwf	ldexp@newexp& (0+255),f,b
  2991  003438  0E00               	movlw	0
  2992  00343A  2397               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  2993  00343C  BF97               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  2994  00343E  EF25  F01A         	goto	u7110
  2995  003442  EF23  F01A         	goto	u7111
  2996  003446                     u7111:
  2997  003446  EF33  F01A         	goto	l6304
  2998  00344A                     u7110:
  2999  00344A                     
  3000                           ; BSR set to: 0
  3001  00344A  0E00               	movlw	0
  3002  00344C  6FE1               	movwf	(_errno+1)& (0+255),b
  3003  00344E  0E22               	movlw	34
  3004  003450  6FE0               	movwf	_errno& (0+255),b
  3005  003452  0E00               	movlw	0
  3006  003454  6F92               	movwf	?_ldexp& (0+255),b
  3007  003456  0E00               	movlw	0
  3008  003458  6F93               	movwf	(?_ldexp+1)& (0+255),b
  3009  00345A  0E00               	movlw	0
  3010  00345C  6F94               	movwf	(?_ldexp+2)& (0+255),b
  3011  00345E  0E00               	movlw	0
  3012  003460  6F95               	movwf	(?_ldexp+3)& (0+255),b
  3013  003462  EF7A  F01A         	goto	l1574
  3014  003466                     l6304:
  3015                           
  3016                           ; BSR set to: 0
  3017  003466  BF97               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  3018  003468  EF3C  F01A         	goto	u7121
  3019  00346C  0597               	decf	(ldexp@newexp+1)& (0+255),w,b
  3020  00346E  A0D8               	btfss	status,0,c
  3021  003470  EF3C  F01A         	goto	u7121
  3022  003474  EF3E  F01A         	goto	u7120
  3023  003478                     u7121:
  3024  003478  EF5D  F01A         	goto	l6320
  3025  00347C                     u7120:
  3026  00347C                     
  3027                           ; BSR set to: 0
  3028  00347C  0E00               	movlw	0
  3029  00347E  6FE1               	movwf	(_errno+1)& (0+255),b
  3030  003480  0E22               	movlw	34
  3031  003482  6FE0               	movwf	_errno& (0+255),b
  3032  003484                     
  3033                           ; BSR set to: 0
  3034  003484  BF95               	btfsc	(ldexp@value+3)& (0+255),7,b
  3035  003486  EF49  F01A         	goto	u7130
  3036  00348A  EF47  F01A         	goto	u7131
  3037  00348E                     u7131:
  3038  00348E  EF53  F01A         	goto	l6316
  3039  003492                     u7130:
  3040  003492                     
  3041                           ; BSR set to: 0
  3042  003492  0EFF               	movlw	255
  3043  003494  6F92               	movwf	?_ldexp& (0+255),b
  3044  003496  0EFF               	movlw	255
  3045  003498  6F93               	movwf	(?_ldexp+1)& (0+255),b
  3046  00349A  0E7F               	movlw	127
  3047  00349C  6F94               	movwf	(?_ldexp+2)& (0+255),b
  3048  00349E  0EFF               	movlw	255
  3049  0034A0  6F95               	movwf	(?_ldexp+3)& (0+255),b
  3050  0034A2  EF7A  F01A         	goto	l1574
  3051  0034A6                     l6316:
  3052                           
  3053                           ; BSR set to: 0
  3054  0034A6  0EFF               	movlw	255
  3055  0034A8  6F92               	movwf	?_ldexp& (0+255),b
  3056  0034AA  0EFF               	movlw	255
  3057  0034AC  6F93               	movwf	(?_ldexp+1)& (0+255),b
  3058  0034AE  0E7F               	movlw	127
  3059  0034B0  6F94               	movwf	(?_ldexp+2)& (0+255),b
  3060  0034B2  0E7F               	movlw	127
  3061  0034B4  6F95               	movwf	(?_ldexp+3)& (0+255),b
  3062  0034B6  EF7A  F01A         	goto	l1574
  3063  0034BA                     l6320:
  3064                           
  3065                           ; BSR set to: 0
  3066  0034BA  3597               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  3067  0034BC  3197               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  3068  0034BE  6E5C               	movwf	(??_ldexp+1)^0,c
  3069  0034C0  3196               	rrcf	ldexp@newexp& (0+255),w,b
  3070  0034C2  6E5B               	movwf	??_ldexp^0,c
  3071  0034C4  5195               	movf	(ldexp@value+3)& (0+255),w,b
  3072  0034C6  185B               	xorwf	??_ldexp^0,w,c
  3073  0034C8  0B80               	andlw	-128
  3074  0034CA  185B               	xorwf	??_ldexp^0,w,c
  3075  0034CC  6F95               	movwf	(ldexp@value+3)& (0+255),b
  3076  0034CE  C096  F05B         	movff	ldexp@newexp,??_ldexp
  3077  0034D2  0E01               	movlw	1
  3078  0034D4  165B               	andwf	??_ldexp^0,f,c
  3079  0034D6  325B               	rrcf	??_ldexp^0,f,c
  3080  0034D8  325B               	rrcf	??_ldexp^0,f,c
  3081  0034DA  5194               	movf	(ldexp@value+2)& (0+255),w,b
  3082  0034DC  185B               	xorwf	??_ldexp^0,w,c
  3083  0034DE  0B7F               	andlw	-129
  3084  0034E0  185B               	xorwf	??_ldexp^0,w,c
  3085  0034E2  6F94               	movwf	(ldexp@value+2)& (0+255),b
  3086  0034E4                     
  3087                           ; BSR set to: 0
  3088  0034E4  C092  F092         	movff	ldexp@value,?_ldexp
  3089  0034E8  C093  F093         	movff	ldexp@value+1,?_ldexp+1
  3090  0034EC  C094  F094         	movff	ldexp@value+2,?_ldexp+2
  3091  0034F0  C095  F095         	movff	ldexp@value+3,?_ldexp+3
  3092  0034F4                     l1574:
  3093                           
  3094                           ; BSR set to: 0
  3095  0034F4  0012               	return		;funcret
  3096  0034F6                     __end_of_ldexp:
  3097                           	callstack 0
  3098                           
  3099 ;; *************** function _floor *****************
  3100 ;; Defined at:
  3101 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\floor.c"
  3102 ;; Parameters:    Size  Location     Type
  3103 ;;  x               4   34[BANK0 ] int 
  3104 ;; Auto vars:     Size  Location     Type
  3105 ;;  i               4   38[BANK0 ] int 
  3106 ;;  expon           2   42[BANK0 ] int 
  3107 ;; Return value:  Size  Location     Type
  3108 ;;                  4   34[BANK0 ] int 
  3109 ;; Registers used:
  3110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3111 ;; Tracked objects:
  3112 ;;		On entry : 0/0
  3113 ;;		On exit  : 0/0
  3114 ;;		Unchanged: 0/0
  3115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3116 ;;      Params:         0       4       0       0       0       0       0       0       0
  3117 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3118 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3119 ;;      Totals:         0      10       0       0       0       0       0       0       0
  3120 ;;Total ram usage:       10 bytes
  3121 ;; Hardware stack levels used:    1
  3122 ;; Hardware stack levels required when called:    6
  3123 ;; This function calls:
  3124 ;;		___fladd
  3125 ;;		___flge
  3126 ;;		___fltol
  3127 ;;		___xxtofl
  3128 ;;		_frexp
  3129 ;; This function is called by:
  3130 ;;		_exp
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text13
  3135  00327A                     __ptext13:
  3136                           	callstack 0
  3137  00327A                     _floor:
  3138                           	callstack 21
  3139  00327A  C082  F03F         	movff	floor@x,frexp@value
  3140  00327E  C083  F040         	movff	floor@x+1,frexp@value+1
  3141  003282  C084  F041         	movff	floor@x+2,frexp@value+2
  3142  003286  C085  F042         	movff	floor@x+3,frexp@value+3
  3143  00328A  0E8A               	movlw	low floor@expon
  3144  00328C  6E43               	movwf	frexp@eptr^0,c
  3145  00328E  0E00               	movlw	high floor@expon
  3146  003290  6E44               	movwf	(frexp@eptr+1)^0,c
  3147  003292  EC7E  F01D         	call	_frexp	;wreg free
  3148  003296  0100               	movlb	0	; () banked
  3149  003298  BF8B               	btfsc	(floor@expon+1)& (0+255),7,b
  3150  00329A  EF53  F019         	goto	u7040
  3151  00329E  EF51  F019         	goto	u7041
  3152  0032A2                     u7041:
  3153  0032A2  EF6E  F019         	goto	l6274
  3154  0032A6                     u7040:
  3155  0032A6                     
  3156                           ; BSR set to: 0
  3157  0032A6  BF85               	btfsc	(floor@x+3)& (0+255),7,b
  3158  0032A8  EF5A  F019         	goto	u7050
  3159  0032AC  EF58  F019         	goto	u7051
  3160  0032B0                     u7051:
  3161  0032B0  EF64  F019         	goto	l6270
  3162  0032B4                     u7050:
  3163  0032B4                     
  3164                           ; BSR set to: 0
  3165  0032B4  0E00               	movlw	0
  3166  0032B6  6F82               	movwf	?_floor& (0+255),b
  3167  0032B8  0E00               	movlw	0
  3168  0032BA  6F83               	movwf	(?_floor+1)& (0+255),b
  3169  0032BC  0E80               	movlw	128
  3170  0032BE  6F84               	movwf	(?_floor+2)& (0+255),b
  3171  0032C0  0EBF               	movlw	191
  3172  0032C2  6F85               	movwf	(?_floor+3)& (0+255),b
  3173  0032C4  EFDE  F019         	goto	l1562
  3174  0032C8                     l6270:
  3175                           
  3176                           ; BSR set to: 0
  3177  0032C8  0E00               	movlw	0
  3178  0032CA  6F82               	movwf	?_floor& (0+255),b
  3179  0032CC  0E00               	movlw	0
  3180  0032CE  6F83               	movwf	(?_floor+1)& (0+255),b
  3181  0032D0  0E00               	movlw	0
  3182  0032D2  6F84               	movwf	(?_floor+2)& (0+255),b
  3183  0032D4  0E00               	movlw	0
  3184  0032D6  6F85               	movwf	(?_floor+3)& (0+255),b
  3185  0032D8  EFDE  F019         	goto	l1562
  3186  0032DC                     l6274:
  3187                           
  3188                           ; BSR set to: 0
  3189  0032DC  518B               	movf	(floor@expon+1)& (0+255),w,b
  3190  0032DE  E109               	bnz	u7060
  3191  0032E0  0E1D               	movlw	29
  3192  0032E2  5D8A               	subwf	floor@expon& (0+255),w,b
  3193  0032E4  A0D8               	btfss	status,0,c
  3194  0032E6  EF77  F019         	goto	u7061
  3195  0032EA  EF79  F019         	goto	u7060
  3196  0032EE                     u7061:
  3197  0032EE  EF83  F019         	goto	l6278
  3198  0032F2                     u7060:
  3199  0032F2                     
  3200                           ; BSR set to: 0
  3201  0032F2  C082  F082         	movff	floor@x,?_floor
  3202  0032F6  C083  F083         	movff	floor@x+1,?_floor+1
  3203  0032FA  C084  F084         	movff	floor@x+2,?_floor+2
  3204  0032FE  C085  F085         	movff	floor@x+3,?_floor+3
  3205  003302  EFDE  F019         	goto	l1562
  3206  003306                     l6278:
  3207                           
  3208                           ; BSR set to: 0
  3209  003306  C082  F01B         	movff	floor@x,___fltol@f1
  3210  00330A  C083  F01C         	movff	floor@x+1,___fltol@f1+1
  3211  00330E  C084  F01D         	movff	floor@x+2,___fltol@f1+2
  3212  003312  C085  F01E         	movff	floor@x+3,___fltol@f1+3
  3213  003316  EC01  F01B         	call	___fltol	;wreg free
  3214  00331A  C01B  F025         	movff	?___fltol,___xxtofl@val
  3215  00331E  C01C  F026         	movff	?___fltol+1,___xxtofl@val+1
  3216  003322  C01D  F027         	movff	?___fltol+2,___xxtofl@val+2
  3217  003326  C01E  F028         	movff	?___fltol+3,___xxtofl@val+3
  3218  00332A  0E01               	movlw	1
  3219  00332C  EC42  F016         	call	___xxtofl
  3220  003330  C025  F086         	movff	?___xxtofl,floor@i
  3221  003334  C026  F087         	movff	?___xxtofl+1,floor@i+1
  3222  003338  C027  F088         	movff	?___xxtofl+2,floor@i+2
  3223  00333C  C028  F089         	movff	?___xxtofl+3,floor@i+3
  3224  003340  C082  F002         	movff	floor@x,___flge@ff1
  3225  003344  C083  F003         	movff	floor@x+1,___flge@ff1+1
  3226  003348  C084  F004         	movff	floor@x+2,___flge@ff1+2
  3227  00334C  C085  F005         	movff	floor@x+3,___flge@ff1+3
  3228  003350  C086  F006         	movff	floor@i,___flge@ff2
  3229  003354  C087  F007         	movff	floor@i+1,___flge@ff2+1
  3230  003358  C088  F008         	movff	floor@i+2,___flge@ff2+2
  3231  00335C  C089  F009         	movff	floor@i+3,___flge@ff2+3
  3232  003360  EC06  F01C         	call	___flge	;wreg free
  3233  003364  B0D8               	btfsc	status,0,c
  3234  003366  EFB7  F019         	goto	u7071
  3235  00336A  EFB9  F019         	goto	u7070
  3236  00336E                     u7071:
  3237  00336E  EFD6  F019         	goto	l1564
  3238  003372                     u7070:
  3239  003372  C086  F076         	movff	floor@i,___fladd@b
  3240  003376  C087  F077         	movff	floor@i+1,___fladd@b+1
  3241  00337A  C088  F078         	movff	floor@i+2,___fladd@b+2
  3242  00337E  C089  F079         	movff	floor@i+3,___fladd@b+3
  3243  003382  0E00               	movlw	0
  3244  003384  0100               	movlb	0	; () banked
  3245  003386  6F7A               	movwf	___fladd@a& (0+255),b
  3246  003388  0E00               	movlw	0
  3247  00338A  6F7B               	movwf	(___fladd@a+1)& (0+255),b
  3248  00338C  0E80               	movlw	128
  3249  00338E  6F7C               	movwf	(___fladd@a+2)& (0+255),b
  3250  003390  0EBF               	movlw	191
  3251  003392  6F7D               	movwf	(___fladd@a+3)& (0+255),b
  3252  003394  ECDE  F006         	call	___fladd	;wreg free
  3253  003398  C076  F082         	movff	?___fladd,?_floor
  3254  00339C  C077  F083         	movff	?___fladd+1,?_floor+1
  3255  0033A0  C078  F084         	movff	?___fladd+2,?_floor+2
  3256  0033A4  C079  F085         	movff	?___fladd+3,?_floor+3
  3257  0033A8  EFDE  F019         	goto	l1562
  3258  0033AC                     l1564:
  3259  0033AC  C086  F082         	movff	floor@i,?_floor
  3260  0033B0  C087  F083         	movff	floor@i+1,?_floor+1
  3261  0033B4  C088  F084         	movff	floor@i+2,?_floor+2
  3262  0033B8  C089  F085         	movff	floor@i+3,?_floor+3
  3263  0033BC                     l1562:
  3264  0033BC  0012               	return		;funcret
  3265  0033BE                     __end_of_floor:
  3266                           	callstack 0
  3267                           
  3268 ;; *************** function _frexp *****************
  3269 ;; Defined at:
  3270 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\frexp.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;  value           4   62[COMRAM] int 
  3273 ;;  eptr            2   66[COMRAM] PTR int 
  3274 ;;		 -> log@exponent(2), floor@expon(2), 
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  4   62[COMRAM] PTR int 
  3279 ;; Registers used:
  3280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3286 ;;      Params:         6       0       0       0       0       0       0       0       0
  3287 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3288 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3289 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3290 ;;Total ram usage:        8 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:    5
  3293 ;; This function calls:
  3294 ;;		___fleq
  3295 ;; This function is called by:
  3296 ;;		_floor
  3297 ;;		_log
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text14
  3302  003AFC                     __ptext14:
  3303                           	callstack 0
  3304  003AFC                     _frexp:
  3305                           	callstack 22
  3306  003AFC  C03F  F033         	movff	frexp@value,___fleq@ff1
  3307  003B00  C040  F034         	movff	frexp@value+1,___fleq@ff1+1
  3308  003B04  C041  F035         	movff	frexp@value+2,___fleq@ff1+2
  3309  003B08  C042  F036         	movff	frexp@value+3,___fleq@ff1+3
  3310  003B0C  0E00               	movlw	0
  3311  003B0E  6E37               	movwf	___fleq@ff2^0,c
  3312  003B10  0E00               	movlw	0
  3313  003B12  6E38               	movwf	(___fleq@ff2+1)^0,c
  3314  003B14  0E00               	movlw	0
  3315  003B16  6E39               	movwf	(___fleq@ff2+2)^0,c
  3316  003B18  0E00               	movlw	0
  3317  003B1A  6E3A               	movwf	(___fleq@ff2+3)^0,c
  3318  003B1C  EC9A  F01E         	call	___fleq	;wreg free
  3319  003B20  A0D8               	btfss	status,0,c
  3320  003B22  EF95  F01D         	goto	u6831
  3321  003B26  EF97  F01D         	goto	u6830
  3322  003B2A                     u6831:
  3323  003B2A  EFA9  F01D         	goto	l6116
  3324  003B2E                     u6830:
  3325  003B2E  C043  FFD9         	movff	frexp@eptr,fsr2l
  3326  003B32  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3327  003B36  0E00               	movlw	0
  3328  003B38  6EDE               	movwf	postinc2,c
  3329  003B3A  0E00               	movlw	0
  3330  003B3C  6EDD               	movwf	postdec2,c
  3331  003B3E  0E00               	movlw	0
  3332  003B40  6E3F               	movwf	?_frexp^0,c
  3333  003B42  0E00               	movlw	0
  3334  003B44  6E40               	movwf	(?_frexp+1)^0,c
  3335  003B46  0E00               	movlw	0
  3336  003B48  6E41               	movwf	(?_frexp+2)^0,c
  3337  003B4A  0E00               	movlw	0
  3338  003B4C  6E42               	movwf	(?_frexp+3)^0,c
  3339  003B4E  EFDF  F01D         	goto	l1570
  3340  003B52                     l6116:
  3341  003B52  5042               	movf	(frexp@value+3)^0,w,c
  3342  003B54  0B7F               	andlw	127
  3343  003B56  6E45               	movwf	??_frexp^0,c
  3344  003B58  6A46               	clrf	(??_frexp+1)^0,c
  3345  003B5A  90D8               	bcf	status,0,c
  3346  003B5C  3645               	rlcf	??_frexp^0,f,c
  3347  003B5E  3646               	rlcf	(??_frexp+1)^0,f,c
  3348  003B60  C043  FFD9         	movff	frexp@eptr,fsr2l
  3349  003B64  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3350  003B68  C045  FFDE         	movff	??_frexp,postinc2
  3351  003B6C  C046  FFDD         	movff	??_frexp+1,postdec2
  3352  003B70  BE41               	btfsc	(frexp@value+2)^0,7,c
  3353  003B72  EFBD  F01D         	goto	u6841
  3354  003B76  EFC1  F01D         	goto	u6840
  3355  003B7A                     u6841:
  3356  003B7A  6A45               	clrf	??_frexp^0,c
  3357  003B7C  2A45               	incf	??_frexp^0,f,c
  3358  003B7E  EFC2  F01D         	goto	u6848
  3359  003B82                     u6840:
  3360  003B82  6A45               	clrf	??_frexp^0,c
  3361  003B84                     u6848:
  3362  003B84  5045               	movf	??_frexp^0,w,c
  3363  003B86  C043  FFD9         	movff	frexp@eptr,fsr2l
  3364  003B8A  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3365  003B8E  12DE               	iorwf	postinc2,f,c
  3366  003B90  0E00               	movlw	0
  3367  003B92  12DD               	iorwf	postdec2,f,c
  3368  003B94  C043  FFD9         	movff	frexp@eptr,fsr2l
  3369  003B98  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3370  003B9C  0E82               	movlw	130
  3371  003B9E  26DE               	addwf	postinc2,f,c
  3372  003BA0  0EFF               	movlw	255
  3373  003BA2  22DD               	addwfc	postdec2,f,c
  3374  003BA4  5042               	movf	(frexp@value+3)^0,w,c
  3375  003BA6  0B80               	andlw	-128
  3376  003BA8  093F               	iorlw	63
  3377  003BAA  6E42               	movwf	(frexp@value+3)^0,c
  3378  003BAC  9E41               	bcf	(frexp@value+2)^0,7,c
  3379  003BAE  C03F  F03F         	movff	frexp@value,?_frexp
  3380  003BB2  C040  F040         	movff	frexp@value+1,?_frexp+1
  3381  003BB6  C041  F041         	movff	frexp@value+2,?_frexp+2
  3382  003BBA  C042  F042         	movff	frexp@value+3,?_frexp+3
  3383  003BBE                     l1570:
  3384  003BBE  0012               	return		;funcret
  3385  003BC0                     __end_of_frexp:
  3386                           	callstack 0
  3387                           
  3388 ;; *************** function _eval_poly *****************
  3389 ;; Defined at:
  3390 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\evalpoly.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;  x               4   34[BANK0 ] PTR int 
  3393 ;;  d               2   38[BANK0 ] PTR const 
  3394 ;;		 -> log@coeff(36), exp@coeff(40), 
  3395 ;;  n               2   40[BANK0 ] int 
  3396 ;; Auto vars:     Size  Location     Type
  3397 ;;  res             4   46[BANK0 ] int 
  3398 ;; Return value:  Size  Location     Type
  3399 ;;                  4   34[BANK0 ] int 
  3400 ;; Registers used:
  3401 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3402 ;; Tracked objects:
  3403 ;;		On entry : 0/0
  3404 ;;		On exit  : 0/0
  3405 ;;		Unchanged: 0/0
  3406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3407 ;;      Params:         0       8       0       0       0       0       0       0       0
  3408 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3409 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3410 ;;      Totals:         0      16       0       0       0       0       0       0       0
  3411 ;;Total ram usage:       16 bytes
  3412 ;; Hardware stack levels used:    1
  3413 ;; Hardware stack levels required when called:    5
  3414 ;; This function calls:
  3415 ;;		___fladd
  3416 ;;		___flmul
  3417 ;; This function is called by:
  3418 ;;		_exp
  3419 ;;		_log
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text15
  3424  003708                     __ptext15:
  3425                           	callstack 0
  3426  003708                     _eval_poly:
  3427                           	callstack 22
  3428  003708  C088  F08A         	movff	eval_poly@n,??_eval_poly
  3429  00370C  C089  F08B         	movff	eval_poly@n+1,??_eval_poly+1
  3430  003710  0100               	movlb	0	; () banked
  3431  003712  90D8               	bcf	status,0,c
  3432  003714  378A               	rlcf	??_eval_poly& (0+255),f,b
  3433  003716  378B               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3434  003718  90D8               	bcf	status,0,c
  3435  00371A  378A               	rlcf	??_eval_poly& (0+255),f,b
  3436  00371C  378B               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3437  00371E  C086  F08C         	movff	eval_poly@d,??_eval_poly+2
  3438  003722  C087  F08D         	movff	eval_poly@d+1,??_eval_poly+3
  3439  003726  518A               	movf	??_eval_poly& (0+255),w,b
  3440  003728  278C               	addwf	(??_eval_poly+2)& (0+255),f,b
  3441  00372A  518B               	movf	(??_eval_poly+1)& (0+255),w,b
  3442  00372C  238D               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3443  00372E  C08C  FFF6         	movff	??_eval_poly+2,tblptrl
  3444  003732  C08D  FFF7         	movff	??_eval_poly+3,tblptrh
  3445  003736                     	if	0	;tblptru may be non-zero
  3446  003736                     	endif
  3447  003736                     	if	0	;tblptru may be non-zero
  3448  003736                     	endif
  3449  003736  0009               	tblrd		*+
  3450  003738  CFF5 F08E          	movff	tablat,eval_poly@res
  3451  00373C  0009               	tblrd		*+
  3452  00373E  CFF5 F08F          	movff	tablat,eval_poly@res+1
  3453  003742  0009               	tblrd		*+
  3454  003744  CFF5 F090          	movff	tablat,eval_poly@res+2
  3455  003748  000A               	tblrd		*-
  3456  00374A  CFF5 F091          	movff	tablat,eval_poly@res+3
  3457  00374E  EFF3  F01B         	goto	l6288
  3458  003752                     l6286:
  3459                           
  3460                           ; BSR set to: 0
  3461  003752  C08E  F04B         	movff	eval_poly@res,___flmul@a
  3462  003756  C08F  F04C         	movff	eval_poly@res+1,___flmul@a+1
  3463  00375A  C090  F04D         	movff	eval_poly@res+2,___flmul@a+2
  3464  00375E  C091  F04E         	movff	eval_poly@res+3,___flmul@a+3
  3465  003762  C082  F047         	movff	eval_poly@x,___flmul@b
  3466  003766  C083  F048         	movff	eval_poly@x+1,___flmul@b+1
  3467  00376A  C084  F049         	movff	eval_poly@x+2,___flmul@b+2
  3468  00376E  C085  F04A         	movff	eval_poly@x+3,___flmul@b+3
  3469  003772  EC3F  F009         	call	___flmul	;wreg free
  3470  003776  C047  F076         	movff	?___flmul,___fladd@b
  3471  00377A  C048  F077         	movff	?___flmul+1,___fladd@b+1
  3472  00377E  C049  F078         	movff	?___flmul+2,___fladd@b+2
  3473  003782  C04A  F079         	movff	?___flmul+3,___fladd@b+3
  3474  003786  0100               	movlb	0	; () banked
  3475  003788  0788               	decf	eval_poly@n& (0+255),f,b
  3476  00378A  A0D8               	btfss	status,0,c
  3477  00378C  0789               	decf	(eval_poly@n+1)& (0+255),f,b
  3478  00378E  C088  F08A         	movff	eval_poly@n,??_eval_poly
  3479  003792  C089  F08B         	movff	eval_poly@n+1,??_eval_poly+1
  3480  003796  90D8               	bcf	status,0,c
  3481  003798  378A               	rlcf	??_eval_poly& (0+255),f,b
  3482  00379A  378B               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3483  00379C  90D8               	bcf	status,0,c
  3484  00379E  378A               	rlcf	??_eval_poly& (0+255),f,b
  3485  0037A0  378B               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3486  0037A2  C086  F08C         	movff	eval_poly@d,??_eval_poly+2
  3487  0037A6  C087  F08D         	movff	eval_poly@d+1,??_eval_poly+3
  3488  0037AA  518A               	movf	??_eval_poly& (0+255),w,b
  3489  0037AC  278C               	addwf	(??_eval_poly+2)& (0+255),f,b
  3490  0037AE  518B               	movf	(??_eval_poly+1)& (0+255),w,b
  3491  0037B0  238D               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3492  0037B2  C08C  FFF6         	movff	??_eval_poly+2,tblptrl
  3493  0037B6  C08D  FFF7         	movff	??_eval_poly+3,tblptrh
  3494  0037BA                     	if	0	;tblptru may be non-zero
  3495  0037BA                     	endif
  3496  0037BA                     	if	0	;tblptru may be non-zero
  3497  0037BA                     	endif
  3498  0037BA  0009               	tblrd		*+
  3499  0037BC  CFF5 F07A          	movff	tablat,___fladd@a
  3500  0037C0  0009               	tblrd		*+
  3501  0037C2  CFF5 F07B          	movff	tablat,___fladd@a+1
  3502  0037C6  0009               	tblrd		*+
  3503  0037C8  CFF5 F07C          	movff	tablat,___fladd@a+2
  3504  0037CC  000A               	tblrd		*-
  3505  0037CE  CFF5 F07D          	movff	tablat,___fladd@a+3
  3506  0037D2  ECDE  F006         	call	___fladd	;wreg free
  3507  0037D6  C076  F08E         	movff	?___fladd,eval_poly@res
  3508  0037DA  C077  F08F         	movff	?___fladd+1,eval_poly@res+1
  3509  0037DE  C078  F090         	movff	?___fladd+2,eval_poly@res+2
  3510  0037E2  C079  F091         	movff	?___fladd+3,eval_poly@res+3
  3511  0037E6                     l6288:
  3512  0037E6  0100               	movlb	0	; () banked
  3513  0037E8  5188               	movf	eval_poly@n& (0+255),w,b
  3514  0037EA  1189               	iorwf	(eval_poly@n+1)& (0+255),w,b
  3515  0037EC  A4D8               	btfss	status,2,c
  3516  0037EE  EFFB  F01B         	goto	u7081
  3517  0037F2  EFFD  F01B         	goto	u7080
  3518  0037F6                     u7081:
  3519  0037F6  EFA9  F01B         	goto	l6286
  3520  0037FA                     u7080:
  3521  0037FA                     
  3522                           ; BSR set to: 0
  3523  0037FA  C08E  F082         	movff	eval_poly@res,?_eval_poly
  3524  0037FE  C08F  F083         	movff	eval_poly@res+1,?_eval_poly+1
  3525  003802  C090  F084         	movff	eval_poly@res+2,?_eval_poly+2
  3526  003806  C091  F085         	movff	eval_poly@res+3,?_eval_poly+3
  3527  00380A                     
  3528                           ; BSR set to: 0
  3529  00380A  0012               	return		;funcret
  3530  00380C                     __end_of_eval_poly:
  3531                           	callstack 0
  3532                           
  3533 ;; *************** function _ComputeWaterVol *****************
  3534 ;; Defined at:
  3535 ;;		line 118 in file "main.c"
  3536 ;; Parameters:    Size  Location     Type
  3537 ;;		None
  3538 ;; Auto vars:     Size  Location     Type
  3539 ;;  dWaterHeight    4  115[BANK0 ] float 
  3540 ;;  dEmptySpace_    4  111[BANK0 ] float 
  3541 ;;  dSOS            4  105[BANK0 ] float 
  3542 ;;  dWaterVol       4  101[BANK0 ] float 
  3543 ;;  d_mmPerTick     4   97[BANK0 ] float 
  3544 ;;  dCurrTemp       4   93[BANK0 ] float 
  3545 ;;  dEchoPeriod     4    0        float 
  3546 ;;  iGals           2  109[BANK0 ] unsigned int 
  3547 ;;  iPercentFull    1  119[BANK0 ] unsigned char 
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0
  3558 ;;      Locals:         0      31       0       0       0       0       0       0       0
  3559 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3560 ;;      Totals:         0      35       0       0       0       0       0       0       0
  3561 ;;Total ram usage:       35 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    7
  3564 ;; This function calls:
  3565 ;;		_LCD_GoTo
  3566 ;;		_LCD_WriteString
  3567 ;;		___fladd
  3568 ;;		___fldiv
  3569 ;;		___flmul
  3570 ;;		___flsub
  3571 ;;		___fltol
  3572 ;;		___xxtofl
  3573 ;;		_sprintf
  3574 ;;		_sqrt
  3575 ;; This function is called by:
  3576 ;;		_main
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text16
  3581  001E50                     __ptext16:
  3582                           	callstack 0
  3583  001E50                     _ComputeWaterVol:
  3584                           	callstack 23
  3585  001E50  C0EA  F025         	movff	_giEchoCounter,___xxtofl@val	;volatile
  3586  001E54  C0EB  F026         	movff	_giEchoCounter+1,___xxtofl@val+1	;volatile
  3587  001E58  6A27               	clrf	(___xxtofl@val+2)^0,c
  3588  001E5A  6A28               	clrf	(___xxtofl@val+3)^0,c
  3589  001E5C  0E00               	movlw	0
  3590  001E5E  EC42  F016         	call	___xxtofl
  3591  001E62  C025  F047         	movff	?___xxtofl,___flmul@b
  3592  001E66  C026  F048         	movff	?___xxtofl+1,___flmul@b+1
  3593  001E6A  C027  F049         	movff	?___xxtofl+2,___flmul@b+2
  3594  001E6E  C028  F04A         	movff	?___xxtofl+3,___flmul@b+3
  3595  001E72  0EBD               	movlw	189
  3596  001E74  6E4B               	movwf	___flmul@a^0,c
  3597  001E76  0E37               	movlw	55
  3598  001E78  6E4C               	movwf	(___flmul@a+1)^0,c
  3599  001E7A  0E06               	movlw	6
  3600  001E7C  6E4D               	movwf	(___flmul@a+2)^0,c
  3601  001E7E  0E35               	movlw	53
  3602  001E80  6E4E               	movwf	(___flmul@a+3)^0,c
  3603  001E82  EC3F  F009         	call	___flmul	;wreg free
  3604  001E86                     
  3605                           ;main.c: 131: dCurrTemp = 20.0;
  3606  001E86  0E00               	movlw	0
  3607  001E88  0100               	movlb	0	; () banked
  3608  001E8A  6FBD               	movwf	ComputeWaterVol@dCurrTemp& (0+255),b
  3609  001E8C  0E00               	movlw	0
  3610  001E8E  6FBE               	movwf	(ComputeWaterVol@dCurrTemp+1)& (0+255),b
  3611  001E90  0EA0               	movlw	160
  3612  001E92  6FBF               	movwf	(ComputeWaterVol@dCurrTemp+2)& (0+255),b
  3613  001E94  0E41               	movlw	65
  3614  001E96  6FC0               	movwf	(ComputeWaterVol@dCurrTemp+3)& (0+255),b
  3615  001E98                     
  3616                           ; BSR set to: 0
  3617                           ;main.c: 132: dSOS = 331.3e3 * sqrt( 1 + (dCurrTemp / 273.15));
  3618  001E98  0E00               	movlw	0
  3619  001E9A  6F7A               	movwf	___fladd@a& (0+255),b
  3620  001E9C  0E00               	movlw	0
  3621  001E9E  6F7B               	movwf	(___fladd@a+1)& (0+255),b
  3622  001EA0  0E80               	movlw	128
  3623  001EA2  6F7C               	movwf	(___fladd@a+2)& (0+255),b
  3624  001EA4  0E3F               	movlw	63
  3625  001EA6  6F7D               	movwf	(___fladd@a+3)& (0+255),b
  3626  001EA8  0E33               	movlw	51
  3627  001EAA  6E06               	movwf	___fldiv@a^0,c
  3628  001EAC  0E93               	movlw	147
  3629  001EAE  6E07               	movwf	(___fldiv@a+1)^0,c
  3630  001EB0  0E88               	movlw	136
  3631  001EB2  6E08               	movwf	(___fldiv@a+2)^0,c
  3632  001EB4  0E43               	movlw	67
  3633  001EB6  6E09               	movwf	(___fldiv@a+3)^0,c
  3634  001EB8  C0BD  F002         	movff	ComputeWaterVol@dCurrTemp,___fldiv@b
  3635  001EBC  C0BE  F003         	movff	ComputeWaterVol@dCurrTemp+1,___fldiv@b+1
  3636  001EC0  C0BF  F004         	movff	ComputeWaterVol@dCurrTemp+2,___fldiv@b+2
  3637  001EC4  C0C0  F005         	movff	ComputeWaterVol@dCurrTemp+3,___fldiv@b+3
  3638  001EC8  EC5B  F00D         	call	___fldiv	;wreg free
  3639  001ECC  C002  F076         	movff	?___fldiv,___fladd@b
  3640  001ED0  C003  F077         	movff	?___fldiv+1,___fladd@b+1
  3641  001ED4  C004  F078         	movff	?___fldiv+2,___fladd@b+2
  3642  001ED8  C005  F079         	movff	?___fldiv+3,___fladd@b+3
  3643  001EDC  ECDE  F006         	call	___fladd	;wreg free
  3644  001EE0  C076  F01B         	movff	?___fladd,sqrt@a
  3645  001EE4  C077  F01C         	movff	?___fladd+1,sqrt@a+1
  3646  001EE8  C078  F01D         	movff	?___fladd+2,sqrt@a+2
  3647  001EEC  C079  F01E         	movff	?___fladd+3,sqrt@a+3
  3648  001EF0  ECBD  F010         	call	_sqrt	;wreg free
  3649  001EF4  C01B  F047         	movff	?_sqrt,___flmul@b
  3650  001EF8  C01C  F048         	movff	?_sqrt+1,___flmul@b+1
  3651  001EFC  C01D  F049         	movff	?_sqrt+2,___flmul@b+2
  3652  001F00  C01E  F04A         	movff	?_sqrt+3,___flmul@b+3
  3653  001F04  0E80               	movlw	128
  3654  001F06  6E4B               	movwf	___flmul@a^0,c
  3655  001F08  0EC4               	movlw	196
  3656  001F0A  6E4C               	movwf	(___flmul@a+1)^0,c
  3657  001F0C  0EA1               	movlw	161
  3658  001F0E  6E4D               	movwf	(___flmul@a+2)^0,c
  3659  001F10  0E48               	movlw	72
  3660  001F12  6E4E               	movwf	(___flmul@a+3)^0,c
  3661  001F14  EC3F  F009         	call	___flmul	;wreg free
  3662  001F18  C047  F0C9         	movff	?___flmul,ComputeWaterVol@dSOS
  3663  001F1C  C048  F0CA         	movff	?___flmul+1,ComputeWaterVol@dSOS+1
  3664  001F20  C049  F0CB         	movff	?___flmul+2,ComputeWaterVol@dSOS+2
  3665  001F24  C04A  F0CC         	movff	?___flmul+3,ComputeWaterVol@dSOS+3
  3666  001F28                     
  3667                           ;main.c: 133: d_mmPerTick = dSOS * 500.0e-9 / 2;
  3668  001F28  0EBD               	movlw	189
  3669  001F2A  6E4B               	movwf	___flmul@a^0,c
  3670  001F2C  0E37               	movlw	55
  3671  001F2E  6E4C               	movwf	(___flmul@a+1)^0,c
  3672  001F30  0E06               	movlw	6
  3673  001F32  6E4D               	movwf	(___flmul@a+2)^0,c
  3674  001F34  0E35               	movlw	53
  3675  001F36  6E4E               	movwf	(___flmul@a+3)^0,c
  3676  001F38  C0C9  F047         	movff	ComputeWaterVol@dSOS,___flmul@b
  3677  001F3C  C0CA  F048         	movff	ComputeWaterVol@dSOS+1,___flmul@b+1
  3678  001F40  C0CB  F049         	movff	ComputeWaterVol@dSOS+2,___flmul@b+2
  3679  001F44  C0CC  F04A         	movff	ComputeWaterVol@dSOS+3,___flmul@b+3
  3680  001F48  EC3F  F009         	call	___flmul	;wreg free
  3681  001F4C  C047  F002         	movff	?___flmul,___fldiv@b
  3682  001F50  C048  F003         	movff	?___flmul+1,___fldiv@b+1
  3683  001F54  C049  F004         	movff	?___flmul+2,___fldiv@b+2
  3684  001F58  C04A  F005         	movff	?___flmul+3,___fldiv@b+3
  3685  001F5C  0E00               	movlw	0
  3686  001F5E  6E06               	movwf	___fldiv@a^0,c
  3687  001F60  0E00               	movlw	0
  3688  001F62  6E07               	movwf	(___fldiv@a+1)^0,c
  3689  001F64  0E00               	movlw	0
  3690  001F66  6E08               	movwf	(___fldiv@a+2)^0,c
  3691  001F68  0E40               	movlw	64
  3692  001F6A  6E09               	movwf	(___fldiv@a+3)^0,c
  3693  001F6C  EC5B  F00D         	call	___fldiv	;wreg free
  3694  001F70  C002  F0C1         	movff	?___fldiv,ComputeWaterVol@d_mmPerTick
  3695  001F74  C003  F0C2         	movff	?___fldiv+1,ComputeWaterVol@d_mmPerTick+1
  3696  001F78  C004  F0C3         	movff	?___fldiv+2,ComputeWaterVol@d_mmPerTick+2
  3697  001F7C  C005  F0C4         	movff	?___fldiv+3,ComputeWaterVol@d_mmPerTick+3
  3698  001F80                     
  3699                           ;main.c: 139: if (2 == 2)
  3700  001F80  0ED0               	movlw	208
  3701  001F82  0100               	movlb	0	; () banked
  3702  001F84  6FB5               	movwf	??_ComputeWaterVol& (0+255),b
  3703  001F86  0EEE               	movlw	238
  3704  001F88  6FB6               	movwf	(??_ComputeWaterVol+1)& (0+255),b
  3705  001F8A  C0EA  F0B7         	movff	_giEchoCounter,??_ComputeWaterVol+2	;volatile
  3706  001F8E  C0EB  F0B8         	movff	_giEchoCounter+1,??_ComputeWaterVol+3	;volatile
  3707  001F92  51B5               	movf	??_ComputeWaterVol& (0+255),w,b
  3708  001F94  27B7               	addwf	(??_ComputeWaterVol+2)& (0+255),f,b
  3709  001F96  51B6               	movf	(??_ComputeWaterVol+1)& (0+255),w,b
  3710  001F98  23B8               	addwfc	(??_ComputeWaterVol+3)& (0+255),f,b
  3711  001F9A  C0B7  F025         	movff	??_ComputeWaterVol+2,___xxtofl@val
  3712  001F9E  C0B8  F026         	movff	??_ComputeWaterVol+3,___xxtofl@val+1
  3713  001FA2  6A27               	clrf	(___xxtofl@val+2)^0,c
  3714  001FA4  6A28               	clrf	(___xxtofl@val+3)^0,c
  3715  001FA6  0E00               	movlw	0
  3716  001FA8  EC42  F016         	call	___xxtofl
  3717  001FAC  C025  F047         	movff	?___xxtofl,___flmul@b
  3718  001FB0  C026  F048         	movff	?___xxtofl+1,___flmul@b+1
  3719  001FB4  C027  F049         	movff	?___xxtofl+2,___flmul@b+2
  3720  001FB8  C028  F04A         	movff	?___xxtofl+3,___flmul@b+3
  3721  001FBC  C0C1  F04B         	movff	ComputeWaterVol@d_mmPerTick,___flmul@a
  3722  001FC0  C0C2  F04C         	movff	ComputeWaterVol@d_mmPerTick+1,___flmul@a+1
  3723  001FC4  C0C3  F04D         	movff	ComputeWaterVol@d_mmPerTick+2,___flmul@a+2
  3724  001FC8  C0C4  F04E         	movff	ComputeWaterVol@d_mmPerTick+3,___flmul@a+3
  3725  001FCC  EC3F  F009         	call	___flmul	;wreg free
  3726  001FD0  C047  F0CF         	movff	?___flmul,ComputeWaterVol@dEmptySpace_mm
  3727  001FD4  C048  F0D0         	movff	?___flmul+1,ComputeWaterVol@dEmptySpace_mm+1
  3728  001FD8  C049  F0D1         	movff	?___flmul+2,ComputeWaterVol@dEmptySpace_mm+2
  3729  001FDC  C04A  F0D2         	movff	?___flmul+3,ComputeWaterVol@dEmptySpace_mm+3
  3730  001FE0                     
  3731                           ;main.c: 140: {;main.c: 141: dWaterHeight_mm = gd_SensorHeight_mm - dEmptySpace_mm;
  3732  001FE0  C10C  F082         	movff	_gd_SensorHeight_mm,___flsub@b
  3733  001FE4  C10D  F083         	movff	_gd_SensorHeight_mm+1,___flsub@b+1
  3734  001FE8  C10E  F084         	movff	_gd_SensorHeight_mm+2,___flsub@b+2
  3735  001FEC  C10F  F085         	movff	_gd_SensorHeight_mm+3,___flsub@b+3
  3736  001FF0  C0CF  F086         	movff	ComputeWaterVol@dEmptySpace_mm,___flsub@a
  3737  001FF4  C0D0  F087         	movff	ComputeWaterVol@dEmptySpace_mm+1,___flsub@a+1
  3738  001FF8  C0D1  F088         	movff	ComputeWaterVol@dEmptySpace_mm+2,___flsub@a+2
  3739  001FFC  C0D2  F089         	movff	ComputeWaterVol@dEmptySpace_mm+3,___flsub@a+3
  3740  002000  ECEA  F021         	call	___flsub	;wreg free
  3741  002004  C082  F0D3         	movff	?___flsub,ComputeWaterVol@dWaterHeight_mm
  3742  002008  C083  F0D4         	movff	?___flsub+1,ComputeWaterVol@dWaterHeight_mm+1
  3743  00200C  C084  F0D5         	movff	?___flsub+2,ComputeWaterVol@dWaterHeight_mm+2
  3744  002010  C085  F0D6         	movff	?___flsub+3,ComputeWaterVol@dWaterHeight_mm+3
  3745  002014                     
  3746                           ;main.c: 142: dWaterVol = dWaterHeight_mm * gd_TankGalsPer_mm;
  3747  002014  C0D3  F047         	movff	ComputeWaterVol@dWaterHeight_mm,___flmul@b
  3748  002018  C0D4  F048         	movff	ComputeWaterVol@dWaterHeight_mm+1,___flmul@b+1
  3749  00201C  C0D5  F049         	movff	ComputeWaterVol@dWaterHeight_mm+2,___flmul@b+2
  3750  002020  C0D6  F04A         	movff	ComputeWaterVol@dWaterHeight_mm+3,___flmul@b+3
  3751  002024  C108  F04B         	movff	_gd_TankGalsPer_mm,___flmul@a
  3752  002028  C109  F04C         	movff	_gd_TankGalsPer_mm+1,___flmul@a+1
  3753  00202C  C10A  F04D         	movff	_gd_TankGalsPer_mm+2,___flmul@a+2
  3754  002030  C10B  F04E         	movff	_gd_TankGalsPer_mm+3,___flmul@a+3
  3755  002034  EC3F  F009         	call	___flmul	;wreg free
  3756  002038  C047  F0C5         	movff	?___flmul,ComputeWaterVol@dWaterVol
  3757  00203C  C048  F0C6         	movff	?___flmul+1,ComputeWaterVol@dWaterVol+1
  3758  002040  C049  F0C7         	movff	?___flmul+2,ComputeWaterVol@dWaterVol+2
  3759  002044  C04A  F0C8         	movff	?___flmul+3,ComputeWaterVol@dWaterVol+3
  3760  002048                     
  3761                           ;main.c: 143: iPercentFull = dWaterHeight_mm * 100 / gd_MaxWaterHeight_mm;
  3762  002048  C104  F006         	movff	_gd_MaxWaterHeight_mm,___fldiv@a
  3763  00204C  C105  F007         	movff	_gd_MaxWaterHeight_mm+1,___fldiv@a+1
  3764  002050  C106  F008         	movff	_gd_MaxWaterHeight_mm+2,___fldiv@a+2
  3765  002054  C107  F009         	movff	_gd_MaxWaterHeight_mm+3,___fldiv@a+3
  3766  002058  0E00               	movlw	0
  3767  00205A  6E4B               	movwf	___flmul@a^0,c
  3768  00205C  0E00               	movlw	0
  3769  00205E  6E4C               	movwf	(___flmul@a+1)^0,c
  3770  002060  0EC8               	movlw	200
  3771  002062  6E4D               	movwf	(___flmul@a+2)^0,c
  3772  002064  0E42               	movlw	66
  3773  002066  6E4E               	movwf	(___flmul@a+3)^0,c
  3774  002068  C0D3  F047         	movff	ComputeWaterVol@dWaterHeight_mm,___flmul@b
  3775  00206C  C0D4  F048         	movff	ComputeWaterVol@dWaterHeight_mm+1,___flmul@b+1
  3776  002070  C0D5  F049         	movff	ComputeWaterVol@dWaterHeight_mm+2,___flmul@b+2
  3777  002074  C0D6  F04A         	movff	ComputeWaterVol@dWaterHeight_mm+3,___flmul@b+3
  3778  002078  EC3F  F009         	call	___flmul	;wreg free
  3779  00207C  C047  F002         	movff	?___flmul,___fldiv@b
  3780  002080  C048  F003         	movff	?___flmul+1,___fldiv@b+1
  3781  002084  C049  F004         	movff	?___flmul+2,___fldiv@b+2
  3782  002088  C04A  F005         	movff	?___flmul+3,___fldiv@b+3
  3783  00208C  EC5B  F00D         	call	___fldiv	;wreg free
  3784  002090  C002  F01B         	movff	?___fldiv,___fltol@f1
  3785  002094  C003  F01C         	movff	?___fldiv+1,___fltol@f1+1
  3786  002098  C004  F01D         	movff	?___fldiv+2,___fltol@f1+2
  3787  00209C  C005  F01E         	movff	?___fldiv+3,___fltol@f1+3
  3788  0020A0  EC01  F01B         	call	___fltol	;wreg free
  3789  0020A4  501B               	movf	?___fltol^0,w,c
  3790  0020A6  0100               	movlb	0	; () banked
  3791  0020A8  6FD7               	movwf	ComputeWaterVol@iPercentFull& (0+255),b
  3792  0020AA                     
  3793                           ; BSR set to: 0
  3794                           ;main.c: 144: iGals = dWaterVol;
  3795  0020AA  C0C5  F01B         	movff	ComputeWaterVol@dWaterVol,___fltol@f1
  3796  0020AE  C0C6  F01C         	movff	ComputeWaterVol@dWaterVol+1,___fltol@f1+1
  3797  0020B2  C0C7  F01D         	movff	ComputeWaterVol@dWaterVol+2,___fltol@f1+2
  3798  0020B6  C0C8  F01E         	movff	ComputeWaterVol@dWaterVol+3,___fltol@f1+3
  3799  0020BA  EC01  F01B         	call	___fltol	;wreg free
  3800  0020BE  C01B  F0CD         	movff	?___fltol,ComputeWaterVol@iGals
  3801  0020C2  C01C  F0CE         	movff	?___fltol+1,ComputeWaterVol@iGals+1
  3802  0020C6                     
  3803                           ;main.c: 148: };main.c: 154: if (PORTAbits.RA0)
  3804  0020C6  A080               	btfss	128,0,c	;volatile
  3805  0020C8  EF68  F010         	goto	u8321
  3806  0020CC  EF6A  F010         	goto	u8320
  3807  0020D0                     u8321:
  3808  0020D0  EF76  F010         	goto	l7098
  3809  0020D4                     u8320:
  3810  0020D4                     
  3811                           ;main.c: 155: {;main.c: 156: if (iPercentFull < 10) PORTAbits.RA0 = 0;
  3812  0020D4  0E0A               	movlw	10
  3813  0020D6  0100               	movlb	0	; () banked
  3814  0020D8  61D7               	cpfslt	ComputeWaterVol@iPercentFull& (0+255),b
  3815  0020DA  EF71  F010         	goto	u8331
  3816  0020DE  EF73  F010         	goto	u8330
  3817  0020E2                     u8331:
  3818  0020E2  EF80  F010         	goto	l7102
  3819  0020E6                     u8330:
  3820  0020E6                     
  3821                           ; BSR set to: 0
  3822  0020E6  9080               	bcf	128,0,c	;volatile
  3823  0020E8  EF80  F010         	goto	l7102
  3824  0020EC                     l7098:
  3825                           
  3826                           ;main.c: 158: if (iPercentFull > 70) PORTAbits.RA0 = 1;
  3827  0020EC  0E46               	movlw	70
  3828  0020EE  0100               	movlb	0	; () banked
  3829  0020F0  65D7               	cpfsgt	ComputeWaterVol@iPercentFull& (0+255),b
  3830  0020F2  EF7D  F010         	goto	u8341
  3831  0020F6  EF7F  F010         	goto	u8340
  3832  0020FA                     u8341:
  3833  0020FA  EF80  F010         	goto	l7102
  3834  0020FE                     u8340:
  3835  0020FE                     
  3836                           ; BSR set to: 0
  3837  0020FE  8080               	bsf	128,0,c	;volatile
  3838  002100                     l7102:
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;main.c: 162: {;main.c: 163: LCD_GoTo (0, 0);
  3842  002100  0E00               	movlw	0
  3843  002102  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  3844  002104  0E00               	movlw	0
  3845  002106  EC39  F021         	call	_LCD_GoTo
  3846  00210A                     
  3847                           ;main.c: 164: sprintf(sLine1, "Gals: %4.0u   %3.1u%% ", iGals, iPercentFull);
  3848  00210A  0E78               	movlw	low _sLine1
  3849  00210C  0100               	movlb	0	; () banked
  3850  00210E  6F8A               	movwf	sprintf@sp& (0+255),b
  3851  002110  0E01               	movlw	high _sLine1
  3852  002112  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
  3853  002114  0EC5               	movlw	low STR_2
  3854  002116  6F8C               	movwf	sprintf@f& (0+255),b
  3855  002118  0E5F               	movlw	high STR_2
  3856  00211A  6F8D               	movwf	(sprintf@f+1)& (0+255),b
  3857  00211C  C0CD  F08E         	movff	ComputeWaterVol@iGals,?_sprintf+4
  3858  002120  C0CE  F08F         	movff	ComputeWaterVol@iGals+1,?_sprintf+5
  3859  002124  C0D7  F090         	movff	ComputeWaterVol@iPercentFull,?_sprintf+6
  3860  002128  6B91               	clrf	(?_sprintf+7)& (0+255),b
  3861  00212A  EC09  F000         	call	_sprintf	;wreg free
  3862  00212E                     
  3863                           ;main.c: 165: LCD_WriteString (sLine1);
  3864  00212E  0E78               	movlw	low _sLine1
  3865  002130  6E05               	movwf	LCD_WriteString@iData^0,c
  3866  002132  0E01               	movlw	high _sLine1
  3867  002134  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  3868  002136  EC91  F020         	call	_LCD_WriteString	;wreg free
  3869  00213A                     
  3870                           ;main.c: 167: LCD_GoTo(1, 0);
  3871  00213A  0E00               	movlw	0
  3872  00213C  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  3873  00213E  0E01               	movlw	1
  3874  002140  EC39  F021         	call	_LCD_GoTo
  3875  002144                     
  3876                           ;main.c: 168: sprintf(sLine2, "Echo: %4.0f      ", dEmptySpace_mm);
  3877  002144  0E14               	movlw	low _sLine2
  3878  002146  0100               	movlb	0	; () banked
  3879  002148  6F8A               	movwf	sprintf@sp& (0+255),b
  3880  00214A  0E01               	movlw	high _sLine2
  3881  00214C  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
  3882  00214E  0EDC               	movlw	low STR_3
  3883  002150  6F8C               	movwf	sprintf@f& (0+255),b
  3884  002152  0E5F               	movlw	high STR_3
  3885  002154  6F8D               	movwf	(sprintf@f+1)& (0+255),b
  3886  002156  C0CF  F08E         	movff	ComputeWaterVol@dEmptySpace_mm,?_sprintf+4
  3887  00215A  C0D0  F08F         	movff	ComputeWaterVol@dEmptySpace_mm+1,?_sprintf+5
  3888  00215E  C0D1  F090         	movff	ComputeWaterVol@dEmptySpace_mm+2,?_sprintf+6
  3889  002162  C0D2  F091         	movff	ComputeWaterVol@dEmptySpace_mm+3,?_sprintf+7
  3890  002166  EC09  F000         	call	_sprintf	;wreg free
  3891                           
  3892                           ;main.c: 169: LCD_WriteString (sLine2);
  3893  00216A  0E14               	movlw	low _sLine2
  3894  00216C  6E05               	movwf	LCD_WriteString@iData^0,c
  3895  00216E  0E01               	movlw	high _sLine2
  3896  002170  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  3897  002172  EC91  F020         	call	_LCD_WriteString	;wreg free
  3898  002176                     
  3899                           ;main.c: 170: __nop();
  3900  002176  F000               	nop	
  3901  002178  0012               	return		;funcret
  3902  00217A                     __end_of_ComputeWaterVol:
  3903                           	callstack 0
  3904                           
  3905 ;; *************** function _sqrt *****************
  3906 ;; Defined at:
  3907 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcsqrt.c"
  3908 ;; Parameters:    Size  Location     Type
  3909 ;;  a               4   26[COMRAM] void 
  3910 ;; Auto vars:     Size  Location     Type
  3911 ;;  frac            4   51[COMRAM] unsigned long 
  3912 ;;  root            4   47[COMRAM] struct .
  3913 ;;  grs             4   41[COMRAM] unsigned long 
  3914 ;;  tfrac           4   36[COMRAM] unsigned long 
  3915 ;;  exp             2   45[COMRAM] int 
  3916 ;;  p               1   40[COMRAM] unsigned char 
  3917 ;;  i               1   35[COMRAM] unsigned char 
  3918 ;;  sign            1   34[COMRAM] unsigned char 
  3919 ;; Return value:  Size  Location     Type
  3920 ;;                  4   26[COMRAM] unsigned char 
  3921 ;; Registers used:
  3922 ;;		wreg, status,2, status,0
  3923 ;; Tracked objects:
  3924 ;;		On entry : 0/0
  3925 ;;		On exit  : 0/0
  3926 ;;		Unchanged: 0/0
  3927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3928 ;;      Params:         4       0       0       0       0       0       0       0       0
  3929 ;;      Locals:        21       0       0       0       0       0       0       0       0
  3930 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3931 ;;      Totals:        29       0       0       0       0       0       0       0       0
  3932 ;;Total ram usage:       29 bytes
  3933 ;; Hardware stack levels used:    1
  3934 ;; Hardware stack levels required when called:    4
  3935 ;; This function calls:
  3936 ;;		Nothing
  3937 ;; This function is called by:
  3938 ;;		_ComputeWaterVol
  3939 ;;		_InitTankVariables
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943                           	psect	text17
  3944  00217A                     __ptext17:
  3945                           	callstack 0
  3946  00217A                     _sqrt:
  3947                           	callstack 25
  3948  00217A  501E               	movf	(sqrt@a+3)^0,w,c
  3949  00217C  0B80               	andlw	128
  3950  00217E  6E23               	movwf	sqrt@sign^0,c
  3951  002180  501E               	movf	(sqrt@a+3)^0,w,c
  3952  002182  241E               	addwf	(sqrt@a+3)^0,w,c
  3953  002184  6E29               	movwf	sqrt@p^0,c
  3954  002186  AE1D               	btfss	(sqrt@a+2)^0,7,c
  3955  002188  EFC8  F010         	goto	u4951
  3956  00218C  EFCA  F010         	goto	u4950
  3957  002190                     u4951:
  3958  002190  EFCB  F010         	goto	l4866
  3959  002194                     u4950:
  3960  002194  8029               	bsf	sqrt@p^0,0,c
  3961  002196                     l4866:
  3962  002196  C029  F02E         	movff	sqrt@p,sqrt@exp
  3963  00219A  6A2F               	clrf	(sqrt@exp+1)^0,c
  3964  00219C  0EFF               	movlw	255
  3965  00219E  141B               	andwf	sqrt@a^0,w,c
  3966  0021A0  6E34               	movwf	sqrt@frac^0,c
  3967  0021A2  0EFF               	movlw	255
  3968  0021A4  141C               	andwf	(sqrt@a+1)^0,w,c
  3969  0021A6  6E35               	movwf	(sqrt@frac+1)^0,c
  3970  0021A8  0E7F               	movlw	127
  3971  0021AA  141D               	andwf	(sqrt@a+2)^0,w,c
  3972  0021AC  6E36               	movwf	(sqrt@frac+2)^0,c
  3973  0021AE  0E00               	movlw	0
  3974  0021B0  141E               	andwf	(sqrt@a+3)^0,w,c
  3975  0021B2  6E37               	movwf	(sqrt@frac+3)^0,c
  3976  0021B4  502E               	movf	sqrt@exp^0,w,c
  3977  0021B6  102F               	iorwf	(sqrt@exp+1)^0,w,c
  3978  0021B8  B4D8               	btfsc	status,2,c
  3979  0021BA  EFE1  F010         	goto	u4961
  3980  0021BE  EFE3  F010         	goto	u4960
  3981  0021C2                     u4961:
  3982  0021C2  EFED  F010         	goto	l4876
  3983  0021C6                     u4960:
  3984  0021C6  8E36               	bsf	(sqrt@frac+2)^0,7,c
  3985  0021C8  282E               	incf	sqrt@exp^0,w,c
  3986  0021CA  102F               	iorwf	(sqrt@exp+1)^0,w,c
  3987  0021CC  A4D8               	btfss	status,2,c
  3988  0021CE  EFEB  F010         	goto	u4971
  3989  0021D2  EFED  F010         	goto	u4970
  3990  0021D6                     u4971:
  3991  0021D6  EFF5  F010         	goto	l4880
  3992  0021DA                     u4970:
  3993  0021DA                     l4876:
  3994  0021DA  0E00               	movlw	0
  3995  0021DC  6E34               	movwf	sqrt@frac^0,c
  3996  0021DE  0E00               	movlw	0
  3997  0021E0  6E35               	movwf	(sqrt@frac+1)^0,c
  3998  0021E2  0E00               	movlw	0
  3999  0021E4  6E36               	movwf	(sqrt@frac+2)^0,c
  4000  0021E6  0E00               	movlw	0
  4001  0021E8  6E37               	movwf	(sqrt@frac+3)^0,c
  4002  0021EA                     l4880:
  4003  0021EA  502E               	movf	sqrt@exp^0,w,c
  4004  0021EC  102F               	iorwf	(sqrt@exp+1)^0,w,c
  4005  0021EE  A4D8               	btfss	status,2,c
  4006  0021F0  EFFC  F010         	goto	u4981
  4007  0021F4  EFFE  F010         	goto	u4980
  4008  0021F8                     u4981:
  4009  0021F8  EF08  F011         	goto	l4886
  4010  0021FC                     u4980:
  4011  0021FC  0E00               	movlw	0
  4012  0021FE  6E1B               	movwf	?_sqrt^0,c
  4013  002200  0E00               	movlw	0
  4014  002202  6E1C               	movwf	(?_sqrt+1)^0,c
  4015  002204  0E00               	movlw	0
  4016  002206  6E1D               	movwf	(?_sqrt+2)^0,c
  4017  002208  0E00               	movlw	0
  4018  00220A  6E1E               	movwf	(?_sqrt+3)^0,c
  4019  00220C  EF4A  F012         	goto	l1460
  4020  002210                     l4886:
  4021  002210  5023               	movf	sqrt@sign^0,w,c
  4022  002212  B4D8               	btfsc	status,2,c
  4023  002214  EF0E  F011         	goto	u4991
  4024  002218  EF10  F011         	goto	u4990
  4025  00221C                     u4991:
  4026  00221C  EF2B  F011         	goto	l4898
  4027  002220                     u4990:
  4028  002220  0E00               	movlw	0
  4029  002222  6E30               	movwf	sqrt@root^0,c
  4030  002224  0E00               	movlw	0
  4031  002226  6E31               	movwf	(sqrt@root+1)^0,c
  4032  002228  0E40               	movlw	64
  4033  00222A  6E32               	movwf	(sqrt@root+2)^0,c
  4034  00222C  0E00               	movlw	0
  4035  00222E  6E33               	movwf	(sqrt@root+3)^0,c
  4036  002230  0E80               	movlw	128
  4037  002232  1232               	iorwf	(sqrt@root+2)^0,f,c
  4038  002234  0EFF               	movlw	255
  4039  002236  1233               	iorwf	(sqrt@root+3)^0,f,c
  4040  002238  0E00               	movlw	0
  4041  00223A  0100               	movlb	0	; () banked
  4042  00223C  6FE1               	movwf	(_errno+1)& (0+255),b
  4043  00223E  0E21               	movlw	33
  4044  002240  6FE0               	movwf	_errno& (0+255),b
  4045  002242                     l4894:
  4046  002242  C030  F01B         	movff	sqrt@root,?_sqrt
  4047  002246  C031  F01C         	movff	sqrt@root+1,?_sqrt+1
  4048  00224A  C032  F01D         	movff	sqrt@root+2,?_sqrt+2
  4049  00224E  C033  F01E         	movff	sqrt@root+3,?_sqrt+3
  4050  002252  EF4A  F012         	goto	l1460
  4051  002256                     l4898:
  4052  002256  282E               	incf	sqrt@exp^0,w,c
  4053  002258  102F               	iorwf	(sqrt@exp+1)^0,w,c
  4054  00225A  A4D8               	btfss	status,2,c
  4055  00225C  EF32  F011         	goto	u5001
  4056  002260  EF34  F011         	goto	u5000
  4057  002264                     u5001:
  4058  002264  EF3E  F011         	goto	l4906
  4059  002268                     u5000:
  4060  002268  0E00               	movlw	0
  4061  00226A  6E30               	movwf	sqrt@root^0,c
  4062  00226C  0E00               	movlw	0
  4063  00226E  6E31               	movwf	(sqrt@root+1)^0,c
  4064  002270  0E80               	movlw	128
  4065  002272  6E32               	movwf	(sqrt@root+2)^0,c
  4066  002274  0E7F               	movlw	127
  4067  002276  6E33               	movwf	(sqrt@root+3)^0,c
  4068  002278  EF21  F011         	goto	l4894
  4069  00227C                     l4906:
  4070  00227C  0E81               	movlw	129
  4071  00227E  262E               	addwf	sqrt@exp^0,f,c
  4072  002280  0EFF               	movlw	255
  4073  002282  222F               	addwfc	(sqrt@exp+1)^0,f,c
  4074  002284  502E               	movf	sqrt@exp^0,w,c
  4075  002286  0B01               	andlw	1
  4076  002288  6E29               	movwf	sqrt@p^0,c
  4077  00228A  342F               	rlcf	(sqrt@exp+1)^0,w,c
  4078  00228C  322F               	rrcf	(sqrt@exp+1)^0,f,c
  4079  00228E  322E               	rrcf	sqrt@exp^0,f,c
  4080  002290  0E7F               	movlw	127
  4081  002292  262E               	addwf	sqrt@exp^0,f,c
  4082  002294  0E00               	movlw	0
  4083  002296  222F               	addwfc	(sqrt@exp+1)^0,f,c
  4084  002298  90D8               	bcf	status,0,c
  4085  00229A  3434               	rlcf	sqrt@frac^0,w,c
  4086  00229C  6E25               	movwf	sqrt@tfrac^0,c
  4087  00229E  3435               	rlcf	(sqrt@frac+1)^0,w,c
  4088  0022A0  6E26               	movwf	(sqrt@tfrac+1)^0,c
  4089  0022A2  3436               	rlcf	(sqrt@frac+2)^0,w,c
  4090  0022A4  6E27               	movwf	(sqrt@tfrac+2)^0,c
  4091  0022A6  3437               	rlcf	(sqrt@frac+3)^0,w,c
  4092  0022A8  6E28               	movwf	(sqrt@tfrac+3)^0,c
  4093  0022AA  0E00               	movlw	0
  4094  0022AC  6E34               	movwf	sqrt@frac^0,c
  4095  0022AE  0E00               	movlw	0
  4096  0022B0  6E35               	movwf	(sqrt@frac+1)^0,c
  4097  0022B2  0E00               	movlw	0
  4098  0022B4  6E36               	movwf	(sqrt@frac+2)^0,c
  4099  0022B6  0E00               	movlw	0
  4100  0022B8  6E37               	movwf	(sqrt@frac+3)^0,c
  4101  0022BA  0E00               	movlw	0
  4102  0022BC  6E2A               	movwf	sqrt@grs^0,c
  4103  0022BE  0E00               	movlw	0
  4104  0022C0  6E2B               	movwf	(sqrt@grs+1)^0,c
  4105  0022C2  0E00               	movlw	0
  4106  0022C4  6E2C               	movwf	(sqrt@grs+2)^0,c
  4107  0022C6  0E01               	movlw	1
  4108  0022C8  6E2D               	movwf	(sqrt@grs+3)^0,c
  4109  0022CA  5029               	movf	sqrt@p^0,w,c
  4110  0022CC  B4D8               	btfsc	status,2,c
  4111  0022CE  EF6B  F011         	goto	u5011
  4112  0022D2  EF6D  F011         	goto	u5010
  4113  0022D6                     u5011:
  4114  0022D6  EF72  F011         	goto	l4916
  4115  0022DA                     u5010:
  4116  0022DA  90D8               	bcf	status,0,c
  4117  0022DC  3625               	rlcf	sqrt@tfrac^0,f,c
  4118  0022DE  3626               	rlcf	(sqrt@tfrac+1)^0,f,c
  4119  0022E0  3627               	rlcf	(sqrt@tfrac+2)^0,f,c
  4120  0022E2  3628               	rlcf	(sqrt@tfrac+3)^0,f,c
  4121  0022E4                     l4916:
  4122  0022E4  0E00               	movlw	0
  4123  0022E6  6E24               	movwf	sqrt@i^0,c
  4124  0022E8  EFCA  F011         	goto	l4930
  4125  0022EC                     l4918:
  4126  0022EC  502A               	movf	sqrt@grs^0,w,c
  4127  0022EE  1234               	iorwf	sqrt@frac^0,f,c
  4128  0022F0  502B               	movf	(sqrt@grs+1)^0,w,c
  4129  0022F2  1235               	iorwf	(sqrt@frac+1)^0,f,c
  4130  0022F4  502C               	movf	(sqrt@grs+2)^0,w,c
  4131  0022F6  1236               	iorwf	(sqrt@frac+2)^0,f,c
  4132  0022F8  502D               	movf	(sqrt@grs+3)^0,w,c
  4133  0022FA  1237               	iorwf	(sqrt@frac+3)^0,f,c
  4134  0022FC  5034               	movf	sqrt@frac^0,w,c
  4135  0022FE  5C25               	subwf	sqrt@tfrac^0,w,c
  4136  002300  5035               	movf	(sqrt@frac+1)^0,w,c
  4137  002302  5826               	subwfb	(sqrt@tfrac+1)^0,w,c
  4138  002304  5036               	movf	(sqrt@frac+2)^0,w,c
  4139  002306  5827               	subwfb	(sqrt@tfrac+2)^0,w,c
  4140  002308  5037               	movf	(sqrt@frac+3)^0,w,c
  4141  00230A  5828               	subwfb	(sqrt@tfrac+3)^0,w,c
  4142  00230C  A0D8               	btfss	status,0,c
  4143  00230E  EF8B  F011         	goto	u5021
  4144  002312  EF8D  F011         	goto	u5020
  4145  002316                     u5021:
  4146  002316  EF9F  F011         	goto	l4922
  4147  00231A                     u5020:
  4148  00231A  5034               	movf	sqrt@frac^0,w,c
  4149  00231C  5E25               	subwf	sqrt@tfrac^0,f,c
  4150  00231E  5035               	movf	(sqrt@frac+1)^0,w,c
  4151  002320  5A26               	subwfb	(sqrt@tfrac+1)^0,f,c
  4152  002322  5036               	movf	(sqrt@frac+2)^0,w,c
  4153  002324  5A27               	subwfb	(sqrt@tfrac+2)^0,f,c
  4154  002326  5037               	movf	(sqrt@frac+3)^0,w,c
  4155  002328  5A28               	subwfb	(sqrt@tfrac+3)^0,f,c
  4156  00232A  502A               	movf	sqrt@grs^0,w,c
  4157  00232C  2634               	addwf	sqrt@frac^0,f,c
  4158  00232E  502B               	movf	(sqrt@grs+1)^0,w,c
  4159  002330  2235               	addwfc	(sqrt@frac+1)^0,f,c
  4160  002332  502C               	movf	(sqrt@grs+2)^0,w,c
  4161  002334  2236               	addwfc	(sqrt@frac+2)^0,f,c
  4162  002336  502D               	movf	(sqrt@grs+3)^0,w,c
  4163  002338  2237               	addwfc	(sqrt@frac+3)^0,f,c
  4164  00233A  EFAF  F011         	goto	l4924
  4165  00233E                     l4922:
  4166  00233E  1C2A               	comf	sqrt@grs^0,w,c
  4167  002340  6E1F               	movwf	??_sqrt^0,c
  4168  002342  1C2B               	comf	(sqrt@grs+1)^0,w,c
  4169  002344  6E20               	movwf	(??_sqrt+1)^0,c
  4170  002346  1C2C               	comf	(sqrt@grs+2)^0,w,c
  4171  002348  6E21               	movwf	(??_sqrt+2)^0,c
  4172  00234A  1C2D               	comf	(sqrt@grs+3)^0,w,c
  4173  00234C  6E22               	movwf	(??_sqrt+3)^0,c
  4174  00234E  501F               	movf	??_sqrt^0,w,c
  4175  002350  1634               	andwf	sqrt@frac^0,f,c
  4176  002352  5020               	movf	(??_sqrt+1)^0,w,c
  4177  002354  1635               	andwf	(sqrt@frac+1)^0,f,c
  4178  002356  5021               	movf	(??_sqrt+2)^0,w,c
  4179  002358  1636               	andwf	(sqrt@frac+2)^0,f,c
  4180  00235A  5022               	movf	(??_sqrt+3)^0,w,c
  4181  00235C  1637               	andwf	(sqrt@frac+3)^0,f,c
  4182  00235E                     l4924:
  4183  00235E  C02A  F01F         	movff	sqrt@grs,??_sqrt
  4184  002362  C02B  F020         	movff	sqrt@grs+1,??_sqrt+1
  4185  002366  C02C  F021         	movff	sqrt@grs+2,??_sqrt+2
  4186  00236A  C02D  F022         	movff	sqrt@grs+3,??_sqrt+3
  4187  00236E  90D8               	bcf	status,0,c
  4188  002370  3222               	rrcf	(??_sqrt+3)^0,f,c
  4189  002372  3221               	rrcf	(??_sqrt+2)^0,f,c
  4190  002374  3220               	rrcf	(??_sqrt+1)^0,f,c
  4191  002376  321F               	rrcf	??_sqrt^0,f,c
  4192  002378  C01F  F02A         	movff	??_sqrt,sqrt@grs
  4193  00237C  C020  F02B         	movff	??_sqrt+1,sqrt@grs+1
  4194  002380  C021  F02C         	movff	??_sqrt+2,sqrt@grs+2
  4195  002384  C022  F02D         	movff	??_sqrt+3,sqrt@grs+3
  4196  002388  90D8               	bcf	status,0,c
  4197  00238A  3625               	rlcf	sqrt@tfrac^0,f,c
  4198  00238C  3626               	rlcf	(sqrt@tfrac+1)^0,f,c
  4199  00238E  3627               	rlcf	(sqrt@tfrac+2)^0,f,c
  4200  002390  3628               	rlcf	(sqrt@tfrac+3)^0,f,c
  4201  002392  2A24               	incf	sqrt@i^0,f,c
  4202  002394                     l4930:
  4203  002394  0E18               	movlw	24
  4204  002396  6424               	cpfsgt	sqrt@i^0,c
  4205  002398  EFD0  F011         	goto	u5031
  4206  00239C  EFD2  F011         	goto	u5030
  4207  0023A0                     u5031:
  4208  0023A0  EF76  F011         	goto	l4918
  4209  0023A4                     u5030:
  4210  0023A4  C034  F01F         	movff	sqrt@frac,??_sqrt
  4211  0023A8  C035  F020         	movff	sqrt@frac+1,??_sqrt+1
  4212  0023AC  C036  F021         	movff	sqrt@frac+2,??_sqrt+2
  4213  0023B0  C037  F022         	movff	sqrt@frac+3,??_sqrt+3
  4214  0023B4  90D8               	bcf	status,0,c
  4215  0023B6  3222               	rrcf	(??_sqrt+3)^0,f,c
  4216  0023B8  3221               	rrcf	(??_sqrt+2)^0,f,c
  4217  0023BA  3220               	rrcf	(??_sqrt+1)^0,f,c
  4218  0023BC  321F               	rrcf	??_sqrt^0,f,c
  4219  0023BE  C01F  F034         	movff	??_sqrt,sqrt@frac
  4220  0023C2  C020  F035         	movff	??_sqrt+1,sqrt@frac+1
  4221  0023C6  C021  F036         	movff	??_sqrt+2,sqrt@frac+2
  4222  0023CA  C022  F037         	movff	??_sqrt+3,sqrt@frac+3
  4223  0023CE  0E01               	movlw	1
  4224  0023D0  1434               	andwf	sqrt@frac^0,w,c
  4225  0023D2  6E2A               	movwf	sqrt@grs^0,c
  4226  0023D4  0E00               	movlw	0
  4227  0023D6  1435               	andwf	(sqrt@frac+1)^0,w,c
  4228  0023D8  6E2B               	movwf	(sqrt@grs+1)^0,c
  4229  0023DA  0E00               	movlw	0
  4230  0023DC  1436               	andwf	(sqrt@frac+2)^0,w,c
  4231  0023DE  6E2C               	movwf	(sqrt@grs+2)^0,c
  4232  0023E0  0E00               	movlw	0
  4233  0023E2  1437               	andwf	(sqrt@frac+3)^0,w,c
  4234  0023E4  6E2D               	movwf	(sqrt@grs+3)^0,c
  4235  0023E6  C034  F01F         	movff	sqrt@frac,??_sqrt
  4236  0023EA  C035  F020         	movff	sqrt@frac+1,??_sqrt+1
  4237  0023EE  C036  F021         	movff	sqrt@frac+2,??_sqrt+2
  4238  0023F2  C037  F022         	movff	sqrt@frac+3,??_sqrt+3
  4239  0023F6  90D8               	bcf	status,0,c
  4240  0023F8  3222               	rrcf	(??_sqrt+3)^0,f,c
  4241  0023FA  3221               	rrcf	(??_sqrt+2)^0,f,c
  4242  0023FC  3220               	rrcf	(??_sqrt+1)^0,f,c
  4243  0023FE  321F               	rrcf	??_sqrt^0,f,c
  4244  002400  C01F  F034         	movff	??_sqrt,sqrt@frac
  4245  002404  C020  F035         	movff	??_sqrt+1,sqrt@frac+1
  4246  002408  C021  F036         	movff	??_sqrt+2,sqrt@frac+2
  4247  00240C  C022  F037         	movff	??_sqrt+3,sqrt@frac+3
  4248  002410  502A               	movf	sqrt@grs^0,w,c
  4249  002412  2634               	addwf	sqrt@frac^0,f,c
  4250  002414  502B               	movf	(sqrt@grs+1)^0,w,c
  4251  002416  2235               	addwfc	(sqrt@frac+1)^0,f,c
  4252  002418  502C               	movf	(sqrt@grs+2)^0,w,c
  4253  00241A  2236               	addwfc	(sqrt@frac+2)^0,f,c
  4254  00241C  502D               	movf	(sqrt@grs+3)^0,w,c
  4255  00241E  2237               	addwfc	(sqrt@frac+3)^0,f,c
  4256  002420  A037               	btfss	(sqrt@frac+3)^0,0,c
  4257  002422  EF15  F012         	goto	u5041
  4258  002426  EF17  F012         	goto	u5040
  4259  00242A                     u5041:
  4260  00242A  EF2E  F012         	goto	l4942
  4261  00242E                     u5040:
  4262  00242E  C034  F01F         	movff	sqrt@frac,??_sqrt
  4263  002432  C035  F020         	movff	sqrt@frac+1,??_sqrt+1
  4264  002436  C036  F021         	movff	sqrt@frac+2,??_sqrt+2
  4265  00243A  C037  F022         	movff	sqrt@frac+3,??_sqrt+3
  4266  00243E  90D8               	bcf	status,0,c
  4267  002440  3222               	rrcf	(??_sqrt+3)^0,f,c
  4268  002442  3221               	rrcf	(??_sqrt+2)^0,f,c
  4269  002444  3220               	rrcf	(??_sqrt+1)^0,f,c
  4270  002446  321F               	rrcf	??_sqrt^0,f,c
  4271  002448  C01F  F034         	movff	??_sqrt,sqrt@frac
  4272  00244C  C020  F035         	movff	??_sqrt+1,sqrt@frac+1
  4273  002450  C021  F036         	movff	??_sqrt+2,sqrt@frac+2
  4274  002454  C022  F037         	movff	??_sqrt+3,sqrt@frac+3
  4275  002458  4A2E               	infsnz	sqrt@exp^0,f,c
  4276  00245A  2A2F               	incf	(sqrt@exp+1)^0,f,c
  4277  00245C                     l4942:
  4278  00245C  0EFF               	movlw	255
  4279  00245E  1434               	andwf	sqrt@frac^0,w,c
  4280  002460  6E30               	movwf	sqrt@root^0,c
  4281  002462  0EFF               	movlw	255
  4282  002464  1435               	andwf	(sqrt@frac+1)^0,w,c
  4283  002466  6E31               	movwf	(sqrt@root+1)^0,c
  4284  002468  0E7F               	movlw	127
  4285  00246A  1436               	andwf	(sqrt@frac+2)^0,w,c
  4286  00246C  6E32               	movwf	(sqrt@root+2)^0,c
  4287  00246E  0E00               	movlw	0
  4288  002470  1437               	andwf	(sqrt@frac+3)^0,w,c
  4289  002472  6E33               	movwf	(sqrt@root+3)^0,c
  4290  002474  C02E  F029         	movff	sqrt@exp,sqrt@p
  4291  002478  A029               	btfss	sqrt@p^0,0,c
  4292  00247A  EF41  F012         	goto	u5051
  4293  00247E  EF43  F012         	goto	u5050
  4294  002482                     u5051:
  4295  002482  EF44  F012         	goto	l4950
  4296  002486                     u5050:
  4297  002486  8E32               	bsf	(sqrt@root+2)^0,7,c
  4298  002488                     l4950:
  4299  002488  90D8               	bcf	status,0,c
  4300  00248A  3029               	rrcf	sqrt@p^0,w,c
  4301  00248C  6E33               	movwf	(sqrt@root+3)^0,c
  4302  00248E  9E33               	bcf	(sqrt@root+3)^0,7,c
  4303  002490  EF21  F011         	goto	l4894
  4304  002494                     l1460:
  4305  002494  0012               	return		;funcret
  4306  002496                     __end_of_sqrt:
  4307                           	callstack 0
  4308                           
  4309 ;; *************** function ___fldiv *****************
  4310 ;; Defined at:
  4311 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  b               4    1[COMRAM] unsigned char 
  4314 ;;  a               4    5[COMRAM] unsigned char 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;  grs             4   20[COMRAM] unsigned long 
  4317 ;;  rem             4   13[COMRAM] unsigned long 
  4318 ;;  new_exp         2   18[COMRAM] int 
  4319 ;;  aexp            1   25[COMRAM] unsigned char 
  4320 ;;  bexp            1   24[COMRAM] unsigned char 
  4321 ;;  sign            1   17[COMRAM] unsigned char 
  4322 ;; Return value:  Size  Location     Type
  4323 ;;                  4    1[COMRAM] unsigned char 
  4324 ;; Registers used:
  4325 ;;		wreg, status,2, status,0
  4326 ;; Tracked objects:
  4327 ;;		On entry : 0/0
  4328 ;;		On exit  : 0/0
  4329 ;;		Unchanged: 0/0
  4330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4331 ;;      Params:         8       0       0       0       0       0       0       0       0
  4332 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4333 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4334 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4335 ;;Total ram usage:       25 bytes
  4336 ;; Hardware stack levels used:    1
  4337 ;; Hardware stack levels required when called:    4
  4338 ;; This function calls:
  4339 ;;		Nothing
  4340 ;; This function is called by:
  4341 ;;		_ComputeWaterVol
  4342 ;;		_exp
  4343 ;; This function uses a non-reentrant model
  4344 ;;
  4345                           
  4346                           	psect	text18
  4347  001AB6                     __ptext18:
  4348                           	callstack 0
  4349  001AB6                     ___fldiv:
  4350                           	callstack 23
  4351  001AB6  5005               	movf	(___fldiv@b+3)^0,w,c
  4352  001AB8  0B80               	andlw	128
  4353  001ABA  6E12               	movwf	___fldiv@sign^0,c
  4354  001ABC  5005               	movf	(___fldiv@b+3)^0,w,c
  4355  001ABE  2405               	addwf	(___fldiv@b+3)^0,w,c
  4356  001AC0  6E19               	movwf	___fldiv@bexp^0,c
  4357  001AC2  AE04               	btfss	(___fldiv@b+2)^0,7,c
  4358  001AC4  EF66  F00D         	goto	u3861
  4359  001AC8  EF68  F00D         	goto	u3860
  4360  001ACC                     u3861:
  4361  001ACC  EF69  F00D         	goto	l4178
  4362  001AD0                     u3860:
  4363  001AD0  8019               	bsf	___fldiv@bexp^0,0,c
  4364  001AD2                     l4178:
  4365  001AD2  5019               	movf	___fldiv@bexp^0,w,c
  4366  001AD4  B4D8               	btfsc	status,2,c
  4367  001AD6  EF6F  F00D         	goto	u3871
  4368  001ADA  EF71  F00D         	goto	u3870
  4369  001ADE                     u3871:
  4370  001ADE  EF86  F00D         	goto	l4188
  4371  001AE2                     u3870:
  4372  001AE2  2819               	incf	___fldiv@bexp^0,w,c
  4373  001AE4  A4D8               	btfss	status,2,c
  4374  001AE6  EF77  F00D         	goto	u3881
  4375  001AEA  EF79  F00D         	goto	u3880
  4376  001AEE                     u3881:
  4377  001AEE  EF81  F00D         	goto	l4184
  4378  001AF2                     u3880:
  4379  001AF2  0E00               	movlw	0
  4380  001AF4  6E02               	movwf	___fldiv@b^0,c
  4381  001AF6  0E00               	movlw	0
  4382  001AF8  6E03               	movwf	(___fldiv@b+1)^0,c
  4383  001AFA  0E00               	movlw	0
  4384  001AFC  6E04               	movwf	(___fldiv@b+2)^0,c
  4385  001AFE  0E00               	movlw	0
  4386  001B00  6E05               	movwf	(___fldiv@b+3)^0,c
  4387  001B02                     l4184:
  4388  001B02  8E04               	bsf	(___fldiv@b+2)^0,7,c
  4389  001B04  0E00               	movlw	0
  4390  001B06  6E05               	movwf	(___fldiv@b+3)^0,c
  4391  001B08  EF8E  F00D         	goto	l4190
  4392  001B0C                     l4188:
  4393  001B0C  0E00               	movlw	0
  4394  001B0E  6E02               	movwf	___fldiv@b^0,c
  4395  001B10  0E00               	movlw	0
  4396  001B12  6E03               	movwf	(___fldiv@b+1)^0,c
  4397  001B14  0E00               	movlw	0
  4398  001B16  6E04               	movwf	(___fldiv@b+2)^0,c
  4399  001B18  0E00               	movlw	0
  4400  001B1A  6E05               	movwf	(___fldiv@b+3)^0,c
  4401  001B1C                     l4190:
  4402  001B1C  5009               	movf	(___fldiv@a+3)^0,w,c
  4403  001B1E  0B80               	andlw	128
  4404  001B20  1A12               	xorwf	___fldiv@sign^0,f,c
  4405  001B22  5009               	movf	(___fldiv@a+3)^0,w,c
  4406  001B24  2409               	addwf	(___fldiv@a+3)^0,w,c
  4407  001B26  6E1A               	movwf	___fldiv@aexp^0,c
  4408  001B28  AE08               	btfss	(___fldiv@a+2)^0,7,c
  4409  001B2A  EF99  F00D         	goto	u3891
  4410  001B2E  EF9B  F00D         	goto	u3890
  4411  001B32                     u3891:
  4412  001B32  EF9C  F00D         	goto	l4198
  4413  001B36                     u3890:
  4414  001B36  801A               	bsf	___fldiv@aexp^0,0,c
  4415  001B38                     l4198:
  4416  001B38  501A               	movf	___fldiv@aexp^0,w,c
  4417  001B3A  B4D8               	btfsc	status,2,c
  4418  001B3C  EFA2  F00D         	goto	u3901
  4419  001B40  EFA4  F00D         	goto	u3900
  4420  001B44                     u3901:
  4421  001B44  EFB9  F00D         	goto	l4208
  4422  001B48                     u3900:
  4423  001B48  281A               	incf	___fldiv@aexp^0,w,c
  4424  001B4A  A4D8               	btfss	status,2,c
  4425  001B4C  EFAA  F00D         	goto	u3911
  4426  001B50  EFAC  F00D         	goto	u3910
  4427  001B54                     u3911:
  4428  001B54  EFB4  F00D         	goto	l4204
  4429  001B58                     u3910:
  4430  001B58  0E00               	movlw	0
  4431  001B5A  6E06               	movwf	___fldiv@a^0,c
  4432  001B5C  0E00               	movlw	0
  4433  001B5E  6E07               	movwf	(___fldiv@a+1)^0,c
  4434  001B60  0E00               	movlw	0
  4435  001B62  6E08               	movwf	(___fldiv@a+2)^0,c
  4436  001B64  0E00               	movlw	0
  4437  001B66  6E09               	movwf	(___fldiv@a+3)^0,c
  4438  001B68                     l4204:
  4439  001B68  8E08               	bsf	(___fldiv@a+2)^0,7,c
  4440  001B6A  0E00               	movlw	0
  4441  001B6C  6E09               	movwf	(___fldiv@a+3)^0,c
  4442  001B6E  EFC1  F00D         	goto	l4210
  4443  001B72                     l4208:
  4444  001B72  0E00               	movlw	0
  4445  001B74  6E06               	movwf	___fldiv@a^0,c
  4446  001B76  0E00               	movlw	0
  4447  001B78  6E07               	movwf	(___fldiv@a+1)^0,c
  4448  001B7A  0E00               	movlw	0
  4449  001B7C  6E08               	movwf	(___fldiv@a+2)^0,c
  4450  001B7E  0E00               	movlw	0
  4451  001B80  6E09               	movwf	(___fldiv@a+3)^0,c
  4452  001B82                     l4210:
  4453  001B82  5006               	movf	___fldiv@a^0,w,c
  4454  001B84  1007               	iorwf	(___fldiv@a+1)^0,w,c
  4455  001B86  1008               	iorwf	(___fldiv@a+2)^0,w,c
  4456  001B88  1009               	iorwf	(___fldiv@a+3)^0,w,c
  4457  001B8A  A4D8               	btfss	status,2,c
  4458  001B8C  EFCA  F00D         	goto	u3921
  4459  001B90  EFCC  F00D         	goto	u3920
  4460  001B94                     u3921:
  4461  001B94  EFE4  F00D         	goto	l4222
  4462  001B98                     u3920:
  4463  001B98  0E00               	movlw	0
  4464  001B9A  6E02               	movwf	___fldiv@b^0,c
  4465  001B9C  0E00               	movlw	0
  4466  001B9E  6E03               	movwf	(___fldiv@b+1)^0,c
  4467  001BA0  0E00               	movlw	0
  4468  001BA2  6E04               	movwf	(___fldiv@b+2)^0,c
  4469  001BA4  0E00               	movlw	0
  4470  001BA6  6E05               	movwf	(___fldiv@b+3)^0,c
  4471  001BA8  0E80               	movlw	128
  4472  001BAA  1204               	iorwf	(___fldiv@b+2)^0,f,c
  4473  001BAC  0E7F               	movlw	127
  4474  001BAE  1205               	iorwf	(___fldiv@b+3)^0,f,c
  4475  001BB0                     l4216:
  4476  001BB0  5012               	movf	___fldiv@sign^0,w,c
  4477  001BB2  1205               	iorwf	(___fldiv@b+3)^0,f,c
  4478  001BB4  C002  F002         	movff	___fldiv@b,?___fldiv
  4479  001BB8  C003  F003         	movff	___fldiv@b+1,?___fldiv+1
  4480  001BBC  C004  F004         	movff	___fldiv@b+2,?___fldiv+2
  4481  001BC0  C005  F005         	movff	___fldiv@b+3,?___fldiv+3
  4482  001BC4  EF27  F00F         	goto	l1399
  4483  001BC8                     l4222:
  4484  001BC8  5019               	movf	___fldiv@bexp^0,w,c
  4485  001BCA  A4D8               	btfss	status,2,c
  4486  001BCC  EFEA  F00D         	goto	u3931
  4487  001BD0  EFEC  F00D         	goto	u3930
  4488  001BD4                     u3931:
  4489  001BD4  EFF6  F00D         	goto	l4230
  4490  001BD8                     u3930:
  4491  001BD8  0E00               	movlw	0
  4492  001BDA  6E02               	movwf	?___fldiv^0,c
  4493  001BDC  0E00               	movlw	0
  4494  001BDE  6E03               	movwf	(?___fldiv+1)^0,c
  4495  001BE0  0E00               	movlw	0
  4496  001BE2  6E04               	movwf	(?___fldiv+2)^0,c
  4497  001BE4  0E00               	movlw	0
  4498  001BE6  6E05               	movwf	(?___fldiv+3)^0,c
  4499  001BE8  EF27  F00F         	goto	l1399
  4500  001BEC                     l4230:
  4501  001BEC  501A               	movf	___fldiv@aexp^0,w,c
  4502  001BEE  C019  F00A         	movff	___fldiv@bexp,??___fldiv
  4503  001BF2  6A0B               	clrf	(??___fldiv+1)^0,c
  4504  001BF4  5E0A               	subwf	??___fldiv^0,f,c
  4505  001BF6  0E00               	movlw	0
  4506  001BF8  5A0B               	subwfb	(??___fldiv+1)^0,f,c
  4507  001BFA  0E7F               	movlw	127
  4508  001BFC  240A               	addwf	??___fldiv^0,w,c
  4509  001BFE  6E13               	movwf	___fldiv@new_exp^0,c
  4510  001C00  0E00               	movlw	0
  4511  001C02  200B               	addwfc	(??___fldiv+1)^0,w,c
  4512  001C04  6E14               	movwf	(___fldiv@new_exp+1)^0,c
  4513  001C06  C002  F00E         	movff	___fldiv@b,___fldiv@rem
  4514  001C0A  C003  F00F         	movff	___fldiv@b+1,___fldiv@rem+1
  4515  001C0E  C004  F010         	movff	___fldiv@b+2,___fldiv@rem+2
  4516  001C12  C005  F011         	movff	___fldiv@b+3,___fldiv@rem+3
  4517  001C16  0E00               	movlw	0
  4518  001C18  6E02               	movwf	___fldiv@b^0,c
  4519  001C1A  0E00               	movlw	0
  4520  001C1C  6E03               	movwf	(___fldiv@b+1)^0,c
  4521  001C1E  0E00               	movlw	0
  4522  001C20  6E04               	movwf	(___fldiv@b+2)^0,c
  4523  001C22  0E00               	movlw	0
  4524  001C24  6E05               	movwf	(___fldiv@b+3)^0,c
  4525  001C26  0E00               	movlw	0
  4526  001C28  6E15               	movwf	___fldiv@grs^0,c
  4527  001C2A  0E00               	movlw	0
  4528  001C2C  6E16               	movwf	(___fldiv@grs+1)^0,c
  4529  001C2E  0E00               	movlw	0
  4530  001C30  6E17               	movwf	(___fldiv@grs+2)^0,c
  4531  001C32  0E00               	movlw	0
  4532  001C34  6E18               	movwf	(___fldiv@grs+3)^0,c
  4533  001C36  0E00               	movlw	0
  4534  001C38  6E1A               	movwf	___fldiv@aexp^0,c
  4535  001C3A  EF57  F00E         	goto	l1401
  4536  001C3E                     l4240:
  4537  001C3E  501A               	movf	___fldiv@aexp^0,w,c
  4538  001C40  B4D8               	btfsc	status,2,c
  4539  001C42  EF25  F00E         	goto	u3941
  4540  001C46  EF27  F00E         	goto	u3940
  4541  001C4A                     u3941:
  4542  001C4A  EF3E  F00E         	goto	l4248
  4543  001C4E                     u3940:
  4544  001C4E  90D8               	bcf	status,0,c
  4545  001C50  360E               	rlcf	___fldiv@rem^0,f,c
  4546  001C52  360F               	rlcf	(___fldiv@rem+1)^0,f,c
  4547  001C54  3610               	rlcf	(___fldiv@rem+2)^0,f,c
  4548  001C56  3611               	rlcf	(___fldiv@rem+3)^0,f,c
  4549  001C58  90D8               	bcf	status,0,c
  4550  001C5A  3602               	rlcf	___fldiv@b^0,f,c
  4551  001C5C  3603               	rlcf	(___fldiv@b+1)^0,f,c
  4552  001C5E  3604               	rlcf	(___fldiv@b+2)^0,f,c
  4553  001C60  3605               	rlcf	(___fldiv@b+3)^0,f,c
  4554  001C62  AE18               	btfss	(___fldiv@grs+3)^0,7,c
  4555  001C64  EF36  F00E         	goto	u3951
  4556  001C68  EF38  F00E         	goto	u3950
  4557  001C6C                     u3951:
  4558  001C6C  EF39  F00E         	goto	l1404
  4559  001C70                     u3950:
  4560  001C70  8002               	bsf	___fldiv@b^0,0,c
  4561  001C72                     l1404:
  4562  001C72  90D8               	bcf	status,0,c
  4563  001C74  3615               	rlcf	___fldiv@grs^0,f,c
  4564  001C76  3616               	rlcf	(___fldiv@grs+1)^0,f,c
  4565  001C78  3617               	rlcf	(___fldiv@grs+2)^0,f,c
  4566  001C7A  3618               	rlcf	(___fldiv@grs+3)^0,f,c
  4567  001C7C                     l4248:
  4568  001C7C  5006               	movf	___fldiv@a^0,w,c
  4569  001C7E  5C0E               	subwf	___fldiv@rem^0,w,c
  4570  001C80  5007               	movf	(___fldiv@a+1)^0,w,c
  4571  001C82  580F               	subwfb	(___fldiv@rem+1)^0,w,c
  4572  001C84  5008               	movf	(___fldiv@a+2)^0,w,c
  4573  001C86  5810               	subwfb	(___fldiv@rem+2)^0,w,c
  4574  001C88  5009               	movf	(___fldiv@a+3)^0,w,c
  4575  001C8A  5811               	subwfb	(___fldiv@rem+3)^0,w,c
  4576  001C8C  A0D8               	btfss	status,0,c
  4577  001C8E  EF4B  F00E         	goto	u3961
  4578  001C92  EF4D  F00E         	goto	u3960
  4579  001C96                     u3961:
  4580  001C96  EF56  F00E         	goto	l4254
  4581  001C9A                     u3960:
  4582  001C9A  8C18               	bsf	(___fldiv@grs+3)^0,6,c
  4583  001C9C  5006               	movf	___fldiv@a^0,w,c
  4584  001C9E  5E0E               	subwf	___fldiv@rem^0,f,c
  4585  001CA0  5007               	movf	(___fldiv@a+1)^0,w,c
  4586  001CA2  5A0F               	subwfb	(___fldiv@rem+1)^0,f,c
  4587  001CA4  5008               	movf	(___fldiv@a+2)^0,w,c
  4588  001CA6  5A10               	subwfb	(___fldiv@rem+2)^0,f,c
  4589  001CA8  5009               	movf	(___fldiv@a+3)^0,w,c
  4590  001CAA  5A11               	subwfb	(___fldiv@rem+3)^0,f,c
  4591  001CAC                     l4254:
  4592  001CAC  2A1A               	incf	___fldiv@aexp^0,f,c
  4593  001CAE                     l1401:
  4594  001CAE  0E19               	movlw	25
  4595  001CB0  641A               	cpfsgt	___fldiv@aexp^0,c
  4596  001CB2  EF5D  F00E         	goto	u3971
  4597  001CB6  EF5F  F00E         	goto	u3970
  4598  001CBA                     u3971:
  4599  001CBA  EF1F  F00E         	goto	l4240
  4600  001CBE                     u3970:
  4601  001CBE  500E               	movf	___fldiv@rem^0,w,c
  4602  001CC0  100F               	iorwf	(___fldiv@rem+1)^0,w,c
  4603  001CC2  1010               	iorwf	(___fldiv@rem+2)^0,w,c
  4604  001CC4  1011               	iorwf	(___fldiv@rem+3)^0,w,c
  4605  001CC6  B4D8               	btfsc	status,2,c
  4606  001CC8  EF68  F00E         	goto	u3981
  4607  001CCC  EF6A  F00E         	goto	u3980
  4608  001CD0                     u3981:
  4609  001CD0  EF82  F00E         	goto	l4266
  4610  001CD4                     u3980:
  4611  001CD4  8015               	bsf	___fldiv@grs^0,0,c
  4612  001CD6  EF82  F00E         	goto	l4266
  4613  001CDA                     l4260:
  4614  001CDA  90D8               	bcf	status,0,c
  4615  001CDC  3602               	rlcf	___fldiv@b^0,f,c
  4616  001CDE  3603               	rlcf	(___fldiv@b+1)^0,f,c
  4617  001CE0  3604               	rlcf	(___fldiv@b+2)^0,f,c
  4618  001CE2  3605               	rlcf	(___fldiv@b+3)^0,f,c
  4619  001CE4  AE18               	btfss	(___fldiv@grs+3)^0,7,c
  4620  001CE6  EF77  F00E         	goto	u3991
  4621  001CEA  EF79  F00E         	goto	u3990
  4622  001CEE                     u3991:
  4623  001CEE  EF7A  F00E         	goto	l1410
  4624  001CF2                     u3990:
  4625  001CF2  8002               	bsf	___fldiv@b^0,0,c
  4626  001CF4                     l1410:
  4627  001CF4  90D8               	bcf	status,0,c
  4628  001CF6  3615               	rlcf	___fldiv@grs^0,f,c
  4629  001CF8  3616               	rlcf	(___fldiv@grs+1)^0,f,c
  4630  001CFA  3617               	rlcf	(___fldiv@grs+2)^0,f,c
  4631  001CFC  3618               	rlcf	(___fldiv@grs+3)^0,f,c
  4632  001CFE  0613               	decf	___fldiv@new_exp^0,f,c
  4633  001D00  A0D8               	btfss	status,0,c
  4634  001D02  0614               	decf	(___fldiv@new_exp+1)^0,f,c
  4635  001D04                     l4266:
  4636  001D04  AE04               	btfss	(___fldiv@b+2)^0,7,c
  4637  001D06  EF87  F00E         	goto	u4001
  4638  001D0A  EF89  F00E         	goto	u4000
  4639  001D0E                     u4001:
  4640  001D0E  EF6D  F00E         	goto	l4260
  4641  001D12                     u4000:
  4642  001D12  0E00               	movlw	0
  4643  001D14  6E1A               	movwf	___fldiv@aexp^0,c
  4644  001D16  AE18               	btfss	(___fldiv@grs+3)^0,7,c
  4645  001D18  EF90  F00E         	goto	u4011
  4646  001D1C  EF92  F00E         	goto	u4010
  4647  001D20                     u4011:
  4648  001D20  EFB6  F00E         	goto	l1412
  4649  001D24                     u4010:
  4650  001D24  0EFF               	movlw	255
  4651  001D26  1415               	andwf	___fldiv@grs^0,w,c
  4652  001D28  6E0A               	movwf	??___fldiv^0,c
  4653  001D2A  0EFF               	movlw	255
  4654  001D2C  1416               	andwf	(___fldiv@grs+1)^0,w,c
  4655  001D2E  6E0B               	movwf	(??___fldiv+1)^0,c
  4656  001D30  0EFF               	movlw	255
  4657  001D32  1417               	andwf	(___fldiv@grs+2)^0,w,c
  4658  001D34  6E0C               	movwf	(??___fldiv+2)^0,c
  4659  001D36  0E7F               	movlw	127
  4660  001D38  1418               	andwf	(___fldiv@grs+3)^0,w,c
  4661  001D3A  6E0D               	movwf	(??___fldiv+3)^0,c
  4662  001D3C  500A               	movf	??___fldiv^0,w,c
  4663  001D3E  100B               	iorwf	(??___fldiv+1)^0,w,c
  4664  001D40  100C               	iorwf	(??___fldiv+2)^0,w,c
  4665  001D42  100D               	iorwf	(??___fldiv+3)^0,w,c
  4666  001D44  B4D8               	btfsc	status,2,c
  4667  001D46  EFA7  F00E         	goto	u4021
  4668  001D4A  EFA9  F00E         	goto	u4020
  4669  001D4E                     u4021:
  4670  001D4E  EFAD  F00E         	goto	l1413
  4671  001D52                     u4020:
  4672  001D52                     l4274:
  4673  001D52  0E01               	movlw	1
  4674  001D54  6E1A               	movwf	___fldiv@aexp^0,c
  4675  001D56  EFB6  F00E         	goto	l1412
  4676  001D5A                     l1413:
  4677  001D5A  A002               	btfss	___fldiv@b^0,0,c
  4678  001D5C  EFB2  F00E         	goto	u4031
  4679  001D60  EFB4  F00E         	goto	u4030
  4680  001D64                     u4031:
  4681  001D64  EFB6  F00E         	goto	l1412
  4682  001D68                     u4030:
  4683  001D68  EFA9  F00E         	goto	l4274
  4684  001D6C                     l1412:
  4685  001D6C  501A               	movf	___fldiv@aexp^0,w,c
  4686  001D6E  B4D8               	btfsc	status,2,c
  4687  001D70  EFBC  F00E         	goto	u4041
  4688  001D74  EFBE  F00E         	goto	u4040
  4689  001D78                     u4041:
  4690  001D78  EFE2  F00E         	goto	l4286
  4691  001D7C                     u4040:
  4692  001D7C  0E01               	movlw	1
  4693  001D7E  2602               	addwf	___fldiv@b^0,f,c
  4694  001D80  0E00               	movlw	0
  4695  001D82  2203               	addwfc	(___fldiv@b+1)^0,f,c
  4696  001D84  2204               	addwfc	(___fldiv@b+2)^0,f,c
  4697  001D86  2205               	addwfc	(___fldiv@b+3)^0,f,c
  4698  001D88  A005               	btfss	(___fldiv@b+3)^0,0,c
  4699  001D8A  EFC9  F00E         	goto	u4051
  4700  001D8E  EFCB  F00E         	goto	u4050
  4701  001D92                     u4051:
  4702  001D92  EFE2  F00E         	goto	l4286
  4703  001D96                     u4050:
  4704  001D96  C002  F00A         	movff	___fldiv@b,??___fldiv
  4705  001D9A  C003  F00B         	movff	___fldiv@b+1,??___fldiv+1
  4706  001D9E  C004  F00C         	movff	___fldiv@b+2,??___fldiv+2
  4707  001DA2  C005  F00D         	movff	___fldiv@b+3,??___fldiv+3
  4708  001DA6  340D               	rlcf	(??___fldiv+3)^0,w,c
  4709  001DA8  320D               	rrcf	(??___fldiv+3)^0,f,c
  4710  001DAA  320C               	rrcf	(??___fldiv+2)^0,f,c
  4711  001DAC  320B               	rrcf	(??___fldiv+1)^0,f,c
  4712  001DAE  320A               	rrcf	??___fldiv^0,f,c
  4713  001DB0  C00A  F002         	movff	??___fldiv,___fldiv@b
  4714  001DB4  C00B  F003         	movff	??___fldiv+1,___fldiv@b+1
  4715  001DB8  C00C  F004         	movff	??___fldiv+2,___fldiv@b+2
  4716  001DBC  C00D  F005         	movff	??___fldiv+3,___fldiv@b+3
  4717  001DC0  4A13               	infsnz	___fldiv@new_exp^0,f,c
  4718  001DC2  2A14               	incf	(___fldiv@new_exp+1)^0,f,c
  4719  001DC4                     l4286:
  4720  001DC4  BE14               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4721  001DC6  EFED  F00E         	goto	u4061
  4722  001DCA  5014               	movf	(___fldiv@new_exp+1)^0,w,c
  4723  001DCC  E108               	bnz	u4060
  4724  001DCE  2813               	incf	___fldiv@new_exp^0,w,c
  4725  001DD0  A0D8               	btfss	status,0,c
  4726  001DD2  EFED  F00E         	goto	u4061
  4727  001DD6  EFEF  F00E         	goto	u4060
  4728  001DDA                     u4061:
  4729  001DDA  EFFA  F00E         	goto	l4290
  4730  001DDE                     u4060:
  4731  001DDE  0E00               	movlw	0
  4732  001DE0  6E14               	movwf	(___fldiv@new_exp+1)^0,c
  4733  001DE2  6813               	setf	___fldiv@new_exp^0,c
  4734  001DE4  0E00               	movlw	0
  4735  001DE6  6E02               	movwf	___fldiv@b^0,c
  4736  001DE8  0E00               	movlw	0
  4737  001DEA  6E03               	movwf	(___fldiv@b+1)^0,c
  4738  001DEC  0E00               	movlw	0
  4739  001DEE  6E04               	movwf	(___fldiv@b+2)^0,c
  4740  001DF0  0E00               	movlw	0
  4741  001DF2  6E05               	movwf	(___fldiv@b+3)^0,c
  4742  001DF4                     l4290:
  4743  001DF4  BE14               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4744  001DF6  EF07  F00F         	goto	u4070
  4745  001DFA  5014               	movf	(___fldiv@new_exp+1)^0,w,c
  4746  001DFC  E106               	bnz	u4071
  4747  001DFE  0413               	decf	___fldiv@new_exp^0,w,c
  4748  001E00  B0D8               	btfsc	status,0,c
  4749  001E02  EF05  F00F         	goto	u4071
  4750  001E06  EF07  F00F         	goto	u4070
  4751  001E0A                     u4071:
  4752  001E0A  EF15  F00F         	goto	l4294
  4753  001E0E                     u4070:
  4754  001E0E  0E00               	movlw	0
  4755  001E10  6E14               	movwf	(___fldiv@new_exp+1)^0,c
  4756  001E12  0E00               	movlw	0
  4757  001E14  6E13               	movwf	___fldiv@new_exp^0,c
  4758  001E16  0E00               	movlw	0
  4759  001E18  6E02               	movwf	___fldiv@b^0,c
  4760  001E1A  0E00               	movlw	0
  4761  001E1C  6E03               	movwf	(___fldiv@b+1)^0,c
  4762  001E1E  0E00               	movlw	0
  4763  001E20  6E04               	movwf	(___fldiv@b+2)^0,c
  4764  001E22  0E00               	movlw	0
  4765  001E24  6E05               	movwf	(___fldiv@b+3)^0,c
  4766  001E26  0E00               	movlw	0
  4767  001E28  6E12               	movwf	___fldiv@sign^0,c
  4768  001E2A                     l4294:
  4769  001E2A  C013  F019         	movff	___fldiv@new_exp,___fldiv@bexp
  4770  001E2E  A019               	btfss	___fldiv@bexp^0,0,c
  4771  001E30  EF1C  F00F         	goto	u4081
  4772  001E34  EF1E  F00F         	goto	u4080
  4773  001E38                     u4081:
  4774  001E38  EF21  F00F         	goto	l4300
  4775  001E3C                     u4080:
  4776  001E3C  8E04               	bsf	(___fldiv@b+2)^0,7,c
  4777  001E3E  EF22  F00F         	goto	l4302
  4778  001E42                     l4300:
  4779  001E42  9E04               	bcf	(___fldiv@b+2)^0,7,c
  4780  001E44                     l4302:
  4781  001E44  90D8               	bcf	status,0,c
  4782  001E46  3019               	rrcf	___fldiv@bexp^0,w,c
  4783  001E48  6E05               	movwf	(___fldiv@b+3)^0,c
  4784  001E4A  EFD8  F00D         	goto	l4216
  4785  001E4E                     l1399:
  4786  001E4E  0012               	return		;funcret
  4787  001E50                     __end_of___fldiv:
  4788                           	callstack 0
  4789                           
  4790 ;; *************** function _ComputeTOD *****************
  4791 ;; Defined at:
  4792 ;;		line 183 in file "main.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;  bIncDays        1   85[BANK0 ] unsigned char 
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4806 ;;      Params:         0       0       0       0       0       0       0       0       0
  4807 ;;      Locals:         0       1       0       0       0       0       0       0       0
  4808 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4809 ;;      Totals:         1       1       0       0       0       0       0       0       0
  4810 ;;Total ram usage:        2 bytes
  4811 ;; Hardware stack levels used:    1
  4812 ;; Hardware stack levels required when called:    7
  4813 ;; This function calls:
  4814 ;;		_LCD_GoTo
  4815 ;;		_LCD_WriteString
  4816 ;;		_sprintf
  4817 ;; This function is called by:
  4818 ;;		_main
  4819 ;; This function uses a non-reentrant model
  4820 ;;
  4821                           
  4822                           	psect	text19
  4823  003A0C                     __ptext19:
  4824                           	callstack 0
  4825  003A0C                     _ComputeTOD:
  4826                           	callstack 23
  4827  003A0C                     
  4828                           ;main.c: 185: bool bIncDays = 0;
  4829  003A0C  0E00               	movlw	0
  4830  003A0E  0100               	movlb	0	; () banked
  4831  003A10  6FB5               	movwf	ComputeTOD@bIncDays& (0+255),b
  4832  003A12                     
  4833                           ; BSR set to: 0
  4834                           ;main.c: 187: if (++giTotalSecs >= 999) giTotalSecs = 0;
  4835  003A12  4BE8               	infsnz	_giTotalSecs& (0+255),f,b
  4836  003A14  2BE9               	incf	(_giTotalSecs+1)& (0+255),f,b
  4837  003A16  0EE7               	movlw	231
  4838  003A18  5DE8               	subwf	_giTotalSecs& (0+255),w,b
  4839  003A1A  0E03               	movlw	3
  4840  003A1C  59E9               	subwfb	(_giTotalSecs+1)& (0+255),w,b
  4841  003A1E  A0D8               	btfss	status,0,c
  4842  003A20  EF14  F01D         	goto	u8351
  4843  003A24  EF16  F01D         	goto	u8350
  4844  003A28                     u8351:
  4845  003A28  EF1A  F01D         	goto	l7120
  4846  003A2C                     u8350:
  4847  003A2C                     
  4848                           ; BSR set to: 0
  4849  003A2C  0E00               	movlw	0
  4850  003A2E  6FE9               	movwf	(_giTotalSecs+1)& (0+255),b
  4851  003A30  0E00               	movlw	0
  4852  003A32  6FE8               	movwf	_giTotalSecs& (0+255),b
  4853  003A34                     l7120:
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;main.c: 188: if (++giSecs >= 60)
  4857  003A34  2BF2               	incf	_giSecs& (0+255),f,b
  4858  003A36  0E3B               	movlw	59
  4859  003A38  65F2               	cpfsgt	_giSecs& (0+255),b
  4860  003A3A  EF21  F01D         	goto	u8361
  4861  003A3E  EF23  F01D         	goto	u8360
  4862  003A42                     u8361:
  4863  003A42  EF3D  F01D         	goto	l7132
  4864  003A46                     u8360:
  4865  003A46                     
  4866                           ; BSR set to: 0
  4867                           ;main.c: 189: {;main.c: 190: giSecs = 0;
  4868  003A46  0E00               	movlw	0
  4869  003A48  6FF2               	movwf	_giSecs& (0+255),b
  4870  003A4A                     
  4871                           ; BSR set to: 0
  4872                           ;main.c: 191: if (++giMins >= 60)
  4873  003A4A  2BF1               	incf	_giMins& (0+255),f,b
  4874  003A4C  0E3B               	movlw	59
  4875  003A4E  65F1               	cpfsgt	_giMins& (0+255),b
  4876  003A50  EF2C  F01D         	goto	u8371
  4877  003A54  EF2E  F01D         	goto	u8370
  4878  003A58                     u8371:
  4879  003A58  EF3D  F01D         	goto	l7132
  4880  003A5C                     u8370:
  4881  003A5C                     
  4882                           ; BSR set to: 0
  4883                           ;main.c: 192: {;main.c: 193: giMins = 0;
  4884  003A5C  0E00               	movlw	0
  4885  003A5E  6FF1               	movwf	_giMins& (0+255),b
  4886  003A60                     
  4887                           ; BSR set to: 0
  4888                           ;main.c: 194: if (++giHours >= 24){
  4889  003A60  2BF0               	incf	_giHours& (0+255),f,b
  4890  003A62  0E17               	movlw	23
  4891  003A64  65F0               	cpfsgt	_giHours& (0+255),b
  4892  003A66  EF37  F01D         	goto	u8381
  4893  003A6A  EF39  F01D         	goto	u8380
  4894  003A6E                     u8381:
  4895  003A6E  EF3D  F01D         	goto	l7132
  4896  003A72                     u8380:
  4897  003A72                     
  4898                           ; BSR set to: 0
  4899                           ;main.c: 195: giHours = 0;
  4900  003A72  0E00               	movlw	0
  4901  003A74  6FF0               	movwf	_giHours& (0+255),b
  4902                           
  4903                           ;main.c: 196: bIncDays = 1;
  4904  003A76  0E01               	movlw	1
  4905  003A78  6FB5               	movwf	ComputeTOD@bIncDays& (0+255),b
  4906  003A7A                     l7132:
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;main.c: 201: {;main.c: 202: sprintf(gsTotalSecs, "%3i", giTotalSecs);
  4910  003A7A  0EFA               	movlw	low _gsTotalSecs
  4911  003A7C  6F8A               	movwf	sprintf@sp& (0+255),b
  4912  003A7E  0E00               	movlw	high _gsTotalSecs
  4913  003A80  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
  4914  003A82  0EFA               	movlw	low STR_4
  4915  003A84  6F8C               	movwf	sprintf@f& (0+255),b
  4916  003A86  0E5F               	movlw	high STR_4
  4917  003A88  6F8D               	movwf	(sprintf@f+1)& (0+255),b
  4918  003A8A  C0E8  F08E         	movff	_giTotalSecs,?_sprintf+4
  4919  003A8E  C0E9  F08F         	movff	_giTotalSecs+1,?_sprintf+5
  4920  003A92  EC09  F000         	call	_sprintf	;wreg free
  4921  003A96                     
  4922                           ;main.c: 203: LCD_GoTo (1, 12);
  4923  003A96  0E0C               	movlw	12
  4924  003A98  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  4925  003A9A  0E01               	movlw	1
  4926  003A9C  EC39  F021         	call	_LCD_GoTo
  4927  003AA0                     
  4928                           ;main.c: 204: LCD_WriteString (gsTotalSecs);
  4929  003AA0  0EFA               	movlw	low _gsTotalSecs
  4930  003AA2  6E05               	movwf	LCD_WriteString@iData^0,c
  4931  003AA4  0E00               	movlw	high _gsTotalSecs
  4932  003AA6  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  4933  003AA8  EC91  F020         	call	_LCD_WriteString	;wreg free
  4934  003AAC                     
  4935                           ;main.c: 205: };main.c: 208: if (bIncDays)
  4936  003AAC  0100               	movlb	0	; () banked
  4937  003AAE  51B5               	movf	ComputeTOD@bIncDays& (0+255),w,b
  4938  003AB0  B4D8               	btfsc	status,2,c
  4939  003AB2  EF5D  F01D         	goto	u8391
  4940  003AB6  EF5F  F01D         	goto	u8390
  4941  003ABA                     u8391:
  4942  003ABA  EF7D  F01D         	goto	l387
  4943  003ABE                     u8390:
  4944  003ABE                     
  4945                           ; BSR set to: 0
  4946                           ;main.c: 209: {;main.c: 210: if (++giDay > giMonthEndTbl[giMonth - 1])
  4947  003ABE  2BF9               	incf	_giDay& (0+255),f,b
  4948  003AC0  0EDB               	movlw	low (_giMonthEndTbl+65535)
  4949  003AC2  245D               	addwf	_giMonth^0,w,c
  4950  003AC4  6ED9               	movwf	fsr2l,c
  4951  003AC6  6ADA               	clrf	fsr2h,c
  4952  003AC8  0E01               	movlw	high (_giMonthEndTbl+65535)
  4953  003ACA  22DA               	addwfc	fsr2h,f,c
  4954  003ACC  51F9               	movf	_giDay& (0+255),w,b
  4955  003ACE  5CDE               	subwf	postinc2,w,c
  4956  003AD0  B0D8               	btfsc	status,0,c
  4957  003AD2  EF6D  F01D         	goto	u8401
  4958  003AD6  EF6F  F01D         	goto	u8400
  4959  003ADA                     u8401:
  4960  003ADA  EF7D  F01D         	goto	l387
  4961  003ADE                     u8400:
  4962  003ADE                     
  4963                           ; BSR set to: 0
  4964                           ;main.c: 211: {;main.c: 212: giDay = 1;
  4965  003ADE  0E01               	movlw	1
  4966  003AE0  6FF9               	movwf	_giDay& (0+255),b
  4967  003AE2                     
  4968                           ; BSR set to: 0
  4969                           ;main.c: 213: if (++giMonth > 12)
  4970  003AE2  2A5D               	incf	_giMonth^0,f,c
  4971  003AE4  0E0C               	movlw	12
  4972  003AE6  645D               	cpfsgt	_giMonth^0,c
  4973  003AE8  EF78  F01D         	goto	u8411
  4974  003AEC  EF7A  F01D         	goto	u8410
  4975  003AF0                     u8411:
  4976  003AF0  EF7D  F01D         	goto	l387
  4977  003AF4                     u8410:
  4978  003AF4                     
  4979                           ; BSR set to: 0
  4980                           ;main.c: 214: {;main.c: 215: giMonth = 1;
  4981  003AF4  0E01               	movlw	1
  4982  003AF6  6E5D               	movwf	_giMonth^0,c
  4983  003AF8                     
  4984                           ; BSR set to: 0
  4985                           ;main.c: 216: giYear ++;
  4986  003AF8  2BF8               	incf	_giYear& (0+255),f,b
  4987  003AFA                     l387:
  4988                           
  4989                           ; BSR set to: 0
  4990  003AFA  0012               	return		;funcret
  4991  003AFC                     __end_of_ComputeTOD:
  4992                           	callstack 0
  4993                           
  4994 ;; *************** function _sprintf *****************
  4995 ;; Defined at:
  4996 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  4997 ;; Parameters:    Size  Location     Type
  4998 ;;  sp              2   42[BANK0 ] PTR unsigned char 
  4999 ;;		 -> gsTotalSecs(4), sLine2(100), sLine1(100), 
  5000 ;;  f               2   44[BANK0 ] PTR const unsigned char 
  5001 ;;		 -> STR_4(4), STR_3(18), STR_2(23), 
  5002 ;; Auto vars:     Size  Location     Type
  5003 ;;  fval            4   78[BANK0 ] PTR const unsigned char 
  5004 ;;  val             4   70[BANK0 ] unsigned long 
  5005 ;;  tmpval          4   66[BANK0 ] struct .
  5006 ;;  prec            2   82[BANK0 ] int 
  5007 ;;  width           2   76[BANK0 ] int 
  5008 ;;  eexp            2   74[BANK0 ] int 
  5009 ;;  flag            2   64[BANK0 ] unsigned short 
  5010 ;;  len             2   62[BANK0 ] unsigned int 
  5011 ;;  ap              2   60[BANK0 ] PTR void [1]
  5012 ;;		 -> ?_sprintf(2), 
  5013 ;;  cp              2   58[BANK0 ] PTR const unsigned char 
  5014 ;;		 -> sprintf@c(1), 
  5015 ;;  c               1   84[BANK0 ] unsigned char 
  5016 ;;  d               1    0        unsigned char 
  5017 ;; Return value:  Size  Location     Type
  5018 ;;                  2   42[BANK0 ] int 
  5019 ;; Registers used:
  5020 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5021 ;; Tracked objects:
  5022 ;;		On entry : 0/0
  5023 ;;		On exit  : 0/0
  5024 ;;		Unchanged: 0/0
  5025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5026 ;;      Params:         0       8       0       0       0       0       0       0       0
  5027 ;;      Locals:         0      31       0       0       0       0       0       0       0
  5028 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5029 ;;      Totals:         0      43       0       0       0       0       0       0       0
  5030 ;;Total ram usage:       43 bytes
  5031 ;; Hardware stack levels used:    1
  5032 ;; Hardware stack levels required when called:    6
  5033 ;; This function calls:
  5034 ;;		___awdiv
  5035 ;;		___fladd
  5036 ;;		___fleq
  5037 ;;		___flge
  5038 ;;		___flmul
  5039 ;;		___flneg
  5040 ;;		___flsub
  5041 ;;		___fltol
  5042 ;;		___lldiv
  5043 ;;		___llmod
  5044 ;;		___wmul
  5045 ;;		___xxtofl
  5046 ;;		__div_to_l_
  5047 ;;		__tdiv_to_l_
  5048 ;;		_fround
  5049 ;;		_isdigit
  5050 ;;		_scale
  5051 ;; This function is called by:
  5052 ;;		_ComputeWaterVol
  5053 ;;		_ComputeTOD
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           	psect	text20
  5058  000012                     __ptext20:
  5059                           	callstack 0
  5060  000012                     _sprintf:
  5061                           	callstack 23
  5062  000012                     
  5063                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  5064  000012  0E8E               	movlw	low (?_sprintf+4)
  5065  000014  0100               	movlb	0	; () banked
  5066  000016  6F9C               	movwf	sprintf@ap& (0+255),b
  5067  000018  0E00               	movlw	high (?_sprintf+4)
  5068  00001A  6F9D               	movwf	(sprintf@ap+1)& (0+255),b
  5069                           
  5070                           ;doprnt.c: 553: while((c = *f++)) {
  5071  00001C  EFC6  F006         	goto	l6992
  5072  000020                     l6668:
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;doprnt.c: 555: if(c != '%')
  5076  000020  0E25               	movlw	37
  5077  000022  19B4               	xorwf	sprintf@c& (0+255),w,b
  5078  000024  B4D8               	btfsc	status,2,c
  5079  000026  EF17  F000         	goto	u7731
  5080  00002A  EF19  F000         	goto	u7730
  5081  00002E                     u7731:
  5082  00002E  EF23  F000         	goto	l6674
  5083  000032                     u7730:
  5084  000032                     
  5085                           ; BSR set to: 0
  5086                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  5087  000032  C08A  FFD9         	movff	sprintf@sp,fsr2l
  5088  000036  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  5089  00003A  C0B4  FFDF         	movff	sprintf@c,indf2
  5090  00003E                     
  5091                           ; BSR set to: 0
  5092  00003E  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  5093  000040  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  5094                           
  5095                           ;doprnt.c: 559: continue;
  5096  000042  EFC6  F006         	goto	l6992
  5097  000046                     l6674:
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  5101  000046  0E00               	movlw	0
  5102  000048  6FAD               	movwf	(sprintf@width+1)& (0+255),b
  5103  00004A  0E00               	movlw	0
  5104  00004C  6FAC               	movwf	sprintf@width& (0+255),b
  5105                           
  5106                           ;doprnt.c: 565: flag = 0;
  5107  00004E  0E00               	movlw	0
  5108  000050  6FA1               	movwf	(sprintf@flag+1)& (0+255),b
  5109  000052  0E00               	movlw	0
  5110  000054  6FA0               	movwf	sprintf@flag& (0+255),b
  5111  000056                     
  5112                           ; BSR set to: 0
  5113                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  5114  000056  C08C  FFF6         	movff	sprintf@f,tblptrl
  5115  00005A  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  5116  00005E                     	if	0	;tblptru may be non-zero
  5117  00005E                     	endif
  5118  00005E                     	if	0	;tblptru may be non-zero
  5119  00005E                     	endif
  5120  00005E  0008               	tblrd		*
  5121  000060  50F5               	movf	tablat,w,c
  5122  000062  EC2A  F022         	call	_isdigit
  5123  000066  A0D8               	btfss	status,0,c
  5124  000068  EF38  F000         	goto	u7741
  5125  00006C  EF3A  F000         	goto	u7740
  5126  000070                     u7741:
  5127  000070  EF73  F000         	goto	l6688
  5128  000074                     u7740:
  5129  000074                     
  5130                           ;doprnt.c: 615: width = 0;
  5131  000074  0E00               	movlw	0
  5132  000076  0100               	movlb	0	; () banked
  5133  000078  6FAD               	movwf	(sprintf@width+1)& (0+255),b
  5134  00007A  0E00               	movlw	0
  5135  00007C  6FAC               	movwf	sprintf@width& (0+255),b
  5136  00007E                     l6680:
  5137                           
  5138                           ;doprnt.c: 617: width *= 10;
  5139  00007E  C0AC  F002         	movff	sprintf@width,___wmul@multiplier
  5140  000082  C0AD  F003         	movff	sprintf@width+1,___wmul@multiplier+1
  5141  000086  0E00               	movlw	0
  5142  000088  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5143  00008A  0E0A               	movlw	10
  5144  00008C  6E04               	movwf	___wmul@multiplicand^0,c
  5145  00008E  EC43  F022         	call	___wmul	;wreg free
  5146  000092  C002  F0AC         	movff	?___wmul,sprintf@width
  5147  000096  C003  F0AD         	movff	?___wmul+1,sprintf@width+1
  5148  00009A                     
  5149                           ;doprnt.c: 618: width += *f++ - '0';
  5150  00009A  0ED0               	movlw	208
  5151  00009C  0100               	movlb	0	; () banked
  5152  00009E  6F92               	movwf	??_sprintf& (0+255),b
  5153  0000A0  0EFF               	movlw	255
  5154  0000A2  6F93               	movwf	(??_sprintf+1)& (0+255),b
  5155  0000A4  C08C  FFF6         	movff	sprintf@f,tblptrl
  5156  0000A8  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  5157  0000AC                     	if	0	;tblptru may be non-zero
  5158  0000AC                     	endif
  5159  0000AC                     	if	0	;tblptru may be non-zero
  5160  0000AC                     	endif
  5161  0000AC  0008               	tblrd		*
  5162  0000AE  50F5               	movf	tablat,w,c
  5163  0000B0  6F94               	movwf	(??_sprintf+2)& (0+255),b
  5164  0000B2  6B95               	clrf	(??_sprintf+3)& (0+255),b
  5165  0000B4  5192               	movf	??_sprintf& (0+255),w,b
  5166  0000B6  2794               	addwf	(??_sprintf+2)& (0+255),f,b
  5167  0000B8  5193               	movf	(??_sprintf+1)& (0+255),w,b
  5168  0000BA  2395               	addwfc	(??_sprintf+3)& (0+255),f,b
  5169  0000BC  5194               	movf	(??_sprintf+2)& (0+255),w,b
  5170  0000BE  27AC               	addwf	sprintf@width& (0+255),f,b
  5171  0000C0  5195               	movf	(??_sprintf+3)& (0+255),w,b
  5172  0000C2  23AD               	addwfc	(sprintf@width+1)& (0+255),f,b
  5173  0000C4                     
  5174                           ; BSR set to: 0
  5175  0000C4  4B8C               	infsnz	sprintf@f& (0+255),f,b
  5176  0000C6  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
  5177  0000C8                     
  5178                           ; BSR set to: 0
  5179                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  5180  0000C8  C08C  FFF6         	movff	sprintf@f,tblptrl
  5181  0000CC  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  5182  0000D0                     	if	0	;tblptru may be non-zero
  5183  0000D0                     	endif
  5184  0000D0                     	if	0	;tblptru may be non-zero
  5185  0000D0                     	endif
  5186  0000D0  0008               	tblrd		*
  5187  0000D2  50F5               	movf	tablat,w,c
  5188  0000D4  EC2A  F022         	call	_isdigit
  5189  0000D8  B0D8               	btfsc	status,0,c
  5190  0000DA  EF71  F000         	goto	u7751
  5191  0000DE  EF73  F000         	goto	u7750
  5192  0000E2                     u7751:
  5193  0000E2  EF3F  F000         	goto	l6680
  5194  0000E6                     u7750:
  5195  0000E6                     l6688:
  5196                           
  5197                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  5198  0000E6  C08C  FFF6         	movff	sprintf@f,tblptrl
  5199  0000EA  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  5200  0000EE                     	if	0	;tblptru may be non-zero
  5201  0000EE                     	endif
  5202  0000EE                     	if	0	;tblptru may be non-zero
  5203  0000EE                     	endif
  5204  0000EE  0008               	tblrd		*
  5205  0000F0  50F5               	movf	tablat,w,c
  5206  0000F2  0A2E               	xorlw	46
  5207  0000F4  A4D8               	btfss	status,2,c
  5208  0000F6  EF7F  F000         	goto	u7761
  5209  0000FA  EF81  F000         	goto	u7760
  5210  0000FE                     u7761:
  5211  0000FE  EFC1  F000         	goto	l6702
  5212  000102                     u7760:
  5213  000102                     
  5214                           ;doprnt.c: 629: flag |= 0x4000;
  5215  000102  0100               	movlb	0	; () banked
  5216  000104  8DA1               	bsf	(sprintf@flag+1)& (0+255),6,b
  5217                           
  5218                           ;doprnt.c: 630: f++;
  5219  000106  4B8C               	infsnz	sprintf@f& (0+255),f,b
  5220  000108  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
  5221  00010A                     
  5222                           ; BSR set to: 0
  5223                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  5224  00010A  0E00               	movlw	0
  5225  00010C  6FB3               	movwf	(sprintf@prec+1)& (0+255),b
  5226  00010E  0E00               	movlw	0
  5227  000110  6FB2               	movwf	sprintf@prec& (0+255),b
  5228                           
  5229                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  5230  000112  EFB0  F000         	goto	l6700
  5231  000116                     l6694:
  5232                           
  5233                           ;doprnt.c: 647: prec *= 10;
  5234  000116  C0B2  F002         	movff	sprintf@prec,___wmul@multiplier
  5235  00011A  C0B3  F003         	movff	sprintf@prec+1,___wmul@multiplier+1
  5236  00011E  0E00               	movlw	0
  5237  000120  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5238  000122  0E0A               	movlw	10
  5239  000124  6E04               	movwf	___wmul@multiplicand^0,c
  5240  000126  EC43  F022         	call	___wmul	;wreg free
  5241  00012A  C002  F0B2         	movff	?___wmul,sprintf@prec
  5242  00012E  C003  F0B3         	movff	?___wmul+1,sprintf@prec+1
  5243  000132                     
  5244                           ;doprnt.c: 648: prec += *f++ - '0';
  5245  000132  0ED0               	movlw	208
  5246  000134  0100               	movlb	0	; () banked
  5247  000136  6F92               	movwf	??_sprintf& (0+255),b
  5248  000138  0EFF               	movlw	255
  5249  00013A  6F93               	movwf	(??_sprintf+1)& (0+255),b
  5250  00013C  C08C  FFF6         	movff	sprintf@f,tblptrl
  5251  000140  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  5252  000144                     	if	0	;tblptru may be non-zero
  5253  000144                     	endif
  5254  000144                     	if	0	;tblptru may be non-zero
  5255  000144                     	endif
  5256  000144  0008               	tblrd		*
  5257  000146  50F5               	movf	tablat,w,c
  5258  000148  6F94               	movwf	(??_sprintf+2)& (0+255),b
  5259  00014A  6B95               	clrf	(??_sprintf+3)& (0+255),b
  5260  00014C  5192               	movf	??_sprintf& (0+255),w,b
  5261  00014E  2794               	addwf	(??_sprintf+2)& (0+255),f,b
  5262  000150  5193               	movf	(??_sprintf+1)& (0+255),w,b
  5263  000152  2395               	addwfc	(??_sprintf+3)& (0+255),f,b
  5264  000154  5194               	movf	(??_sprintf+2)& (0+255),w,b
  5265  000156  27B2               	addwf	sprintf@prec& (0+255),f,b
  5266  000158  5195               	movf	(??_sprintf+3)& (0+255),w,b
  5267  00015A  23B3               	addwfc	(sprintf@prec+1)& (0+255),f,b
  5268  00015C                     
  5269                           ; BSR set to: 0
  5270  00015C  4B8C               	infsnz	sprintf@f& (0+255),f,b
  5271  00015E  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
  5272  000160                     l6700:
  5273                           
  5274                           ; BSR set to: 0
  5275  000160  C08C  FFF6         	movff	sprintf@f,tblptrl
  5276  000164  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  5277  000168                     	if	0	;tblptru may be non-zero
  5278  000168                     	endif
  5279  000168                     	if	0	;tblptru may be non-zero
  5280  000168                     	endif
  5281  000168  0008               	tblrd		*
  5282  00016A  50F5               	movf	tablat,w,c
  5283  00016C  EC2A  F022         	call	_isdigit
  5284  000170  B0D8               	btfsc	status,0,c
  5285  000172  EFBD  F000         	goto	u7771
  5286  000176  EFBF  F000         	goto	u7770
  5287  00017A                     u7771:
  5288  00017A  EF8B  F000         	goto	l6694
  5289  00017E                     u7770:
  5290  00017E  EF40  F001         	goto	l6742
  5291  000182                     l6702:
  5292                           
  5293                           ;doprnt.c: 652: prec = 0;
  5294  000182  0E00               	movlw	0
  5295  000184  0100               	movlb	0	; () banked
  5296  000186  6FB3               	movwf	(sprintf@prec+1)& (0+255),b
  5297  000188  0E00               	movlw	0
  5298  00018A  6FB2               	movwf	sprintf@prec& (0+255),b
  5299  00018C                     
  5300                           ; BSR set to: 0
  5301                           ;doprnt.c: 654: flag |= 0x1000;
  5302  00018C  89A1               	bsf	(sprintf@flag+1)& (0+255),4,b
  5303  00018E  EF40  F001         	goto	l6742
  5304  000192                     l6706:
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;doprnt.c: 689: flag |= 0x400;
  5308  000192  85A1               	bsf	(sprintf@flag+1)& (0+255),2,b
  5309                           
  5310                           ;doprnt.c: 690: break;
  5311  000194  EF61  F001         	goto	l6744
  5312  000198                     l6708:
  5313                           
  5314                           ; BSR set to: 0
  5315                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
  5316  000198  51B2               	movf	sprintf@prec& (0+255),w,b
  5317  00019A  11B3               	iorwf	(sprintf@prec+1)& (0+255),w,b
  5318  00019C  B4D8               	btfsc	status,2,c
  5319  00019E  EFD3  F000         	goto	u7781
  5320  0001A2  EFD5  F000         	goto	u7780
  5321  0001A6                     u7781:
  5322  0001A6  EFE8  F000         	goto	l6714
  5323  0001AA                     u7780:
  5324  0001AA                     
  5325                           ; BSR set to: 0
  5326  0001AA  519E               	movf	sprintf@len& (0+255),w,b
  5327  0001AC  5DB2               	subwf	sprintf@prec& (0+255),w,b
  5328  0001AE  51B3               	movf	(sprintf@prec+1)& (0+255),w,b
  5329  0001B0  0A80               	xorlw	128
  5330  0001B2  6F92               	movwf	??_sprintf& (0+255),b
  5331  0001B4  519F               	movf	(sprintf@len+1)& (0+255),w,b
  5332  0001B6  0A80               	xorlw	128
  5333  0001B8  5992               	subwfb	??_sprintf& (0+255),w,b
  5334  0001BA  B0D8               	btfsc	status,0,c
  5335  0001BC  EFE2  F000         	goto	u7791
  5336  0001C0  EFE4  F000         	goto	u7790
  5337  0001C4                     u7791:
  5338  0001C4  EFE8  F000         	goto	l6714
  5339  0001C8                     u7790:
  5340  0001C8                     
  5341                           ; BSR set to: 0
  5342                           ;doprnt.c: 780: len = (unsigned int)prec;
  5343  0001C8  C0B2  F09E         	movff	sprintf@prec,sprintf@len
  5344  0001CC  C0B3  F09F         	movff	sprintf@prec+1,sprintf@len+1
  5345  0001D0                     l6714:
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;doprnt.c: 783: if(((unsigned)width) > len)
  5349  0001D0  51AC               	movf	sprintf@width& (0+255),w,b
  5350  0001D2  5D9E               	subwf	sprintf@len& (0+255),w,b
  5351  0001D4  51AD               	movf	(sprintf@width+1)& (0+255),w,b
  5352  0001D6  599F               	subwfb	(sprintf@len+1)& (0+255),w,b
  5353  0001D8  B0D8               	btfsc	status,0,c
  5354  0001DA  EFF1  F000         	goto	u7801
  5355  0001DE  EFF3  F000         	goto	u7800
  5356  0001E2                     u7801:
  5357  0001E2  EFF9  F000         	goto	l6718
  5358  0001E6                     u7800:
  5359  0001E6                     
  5360                           ; BSR set to: 0
  5361                           ;doprnt.c: 784: width -= len;
  5362  0001E6  519E               	movf	sprintf@len& (0+255),w,b
  5363  0001E8  5FAC               	subwf	sprintf@width& (0+255),f,b
  5364  0001EA  519F               	movf	(sprintf@len+1)& (0+255),w,b
  5365  0001EC  5BAD               	subwfb	(sprintf@width+1)& (0+255),f,b
  5366  0001EE  EF07  F001         	goto	l6724
  5367  0001F2                     l6718:
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  5371  0001F2  0E00               	movlw	0
  5372  0001F4  6FAD               	movwf	(sprintf@width+1)& (0+255),b
  5373  0001F6  0E00               	movlw	0
  5374  0001F8  6FAC               	movwf	sprintf@width& (0+255),b
  5375  0001FA  EF07  F001         	goto	l6724
  5376  0001FE                     l6720:
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;doprnt.c: 791: ((*sp++ = (' ')));
  5380  0001FE  C08A  FFD9         	movff	sprintf@sp,fsr2l
  5381  000202  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  5382  000206  0E20               	movlw	32
  5383  000208  6EDF               	movwf	indf2,c
  5384  00020A                     
  5385                           ; BSR set to: 0
  5386  00020A  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  5387  00020C  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  5388  00020E                     l6724:
  5389                           
  5390                           ; BSR set to: 0
  5391  00020E  07AC               	decf	sprintf@width& (0+255),f,b
  5392  000210  A0D8               	btfss	status,0,c
  5393  000212  07AD               	decf	(sprintf@width+1)& (0+255),f,b
  5394  000214  29AC               	incf	sprintf@width& (0+255),w,b
  5395  000216  E106               	bnz	u7811
  5396  000218  29AD               	incf	(sprintf@width+1)& (0+255),w,b
  5397  00021A  A4D8               	btfss	status,2,c
  5398  00021C  EF12  F001         	goto	u7811
  5399  000220  EF14  F001         	goto	u7810
  5400  000224                     u7811:
  5401  000224  EFFF  F000         	goto	l6720
  5402  000228                     u7810:
  5403  000228  EF24  F001         	goto	l6732
  5404  00022C                     l6726:
  5405                           
  5406                           ; BSR set to: 0
  5407                           ;doprnt.c: 794: ((*sp++ = (*cp++)));
  5408  00022C  C09A  FFD9         	movff	sprintf@cp,fsr2l
  5409  000230  C09B  FFDA         	movff	sprintf@cp+1,fsr2h
  5410  000234  C08A  FFE1         	movff	sprintf@sp,fsr1l
  5411  000238  C08B  FFE2         	movff	sprintf@sp+1,fsr1h
  5412  00023C  CFDF FFE7          	movff	indf2,indf1
  5413  000240                     
  5414                           ; BSR set to: 0
  5415  000240  4B9A               	infsnz	sprintf@cp& (0+255),f,b
  5416  000242  2B9B               	incf	(sprintf@cp+1)& (0+255),f,b
  5417  000244                     
  5418                           ; BSR set to: 0
  5419  000244  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  5420  000246  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  5421  000248                     l6732:
  5422                           
  5423                           ; BSR set to: 0
  5424  000248  079E               	decf	sprintf@len& (0+255),f,b
  5425  00024A  A0D8               	btfss	status,0,c
  5426  00024C  079F               	decf	(sprintf@len+1)& (0+255),f,b
  5427  00024E  299E               	incf	sprintf@len& (0+255),w,b
  5428  000250  E106               	bnz	u7821
  5429  000252  299F               	incf	(sprintf@len+1)& (0+255),w,b
  5430  000254  A4D8               	btfss	status,2,c
  5431  000256  EF2F  F001         	goto	u7821
  5432  00025A  EF31  F001         	goto	u7820
  5433  00025E                     u7821:
  5434  00025E  EF16  F001         	goto	l6726
  5435  000262                     u7820:
  5436  000262  EFC6  F006         	goto	l6992
  5437  000266                     l6734:
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;doprnt.c: 831: cp = (char *)&c;
  5441  000266  0EB4               	movlw	low sprintf@c
  5442  000268  6F9A               	movwf	sprintf@cp& (0+255),b
  5443  00026A  0E00               	movlw	high sprintf@c
  5444  00026C  6F9B               	movwf	(sprintf@cp+1)& (0+255),b
  5445  00026E                     
  5446                           ; BSR set to: 0
  5447                           ;doprnt.c: 832: len = 1;
  5448  00026E  0E00               	movlw	0
  5449  000270  6F9F               	movwf	(sprintf@len+1)& (0+255),b
  5450  000272  0E01               	movlw	1
  5451  000274  6F9E               	movwf	sprintf@len& (0+255),b
  5452                           
  5453                           ;doprnt.c: 833: goto dostring;
  5454  000276  EFCC  F000         	goto	l6708
  5455  00027A                     l6738:
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;doprnt.c: 844: flag |= 0x40;
  5459  00027A  8DA0               	bsf	sprintf@flag& (0+255),6,b
  5460                           
  5461                           ;doprnt.c: 845: break;
  5462  00027C  EF61  F001         	goto	l6744
  5463  000280                     l6742:
  5464  000280  C08C  FFF6         	movff	sprintf@f,tblptrl
  5465  000284  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  5466  000288  0100               	movlb	0	; () banked
  5467  00028A  4B8C               	infsnz	sprintf@f& (0+255),f,b
  5468  00028C  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
  5469  00028E                     	if	0	;tblptru may be non-zero
  5470  00028E                     	endif
  5471  00028E                     	if	0	;tblptru may be non-zero
  5472  00028E                     	endif
  5473  00028E  0008               	tblrd		*
  5474  000290  CFF5 F0B4          	movff	tablat,sprintf@c
  5475  000294  51B4               	movf	sprintf@c& (0+255),w,b
  5476                           
  5477                           ; Switch size 1, requested type "simple"
  5478                           ; Number of cases is 5, Range of values is 0 to 117
  5479                           ; switch strategies available:
  5480                           ; Name         Instructions Cycles
  5481                           ; simple_byte           16     9 (average)
  5482                           ;	Chosen strategy is simple_byte
  5483  000296  0A00               	xorlw	0	; case 0
  5484  000298  B4D8               	btfsc	status,2,c
  5485  00029A  EFD7  F006         	goto	l6994
  5486  00029E  0A64               	xorlw	100	; case 100
  5487  0002A0  B4D8               	btfsc	status,2,c
  5488  0002A2  EF61  F001         	goto	l6744
  5489  0002A6  0A02               	xorlw	2	; case 102
  5490  0002A8  B4D8               	btfsc	status,2,c
  5491  0002AA  EFC9  F000         	goto	l6706
  5492  0002AE  0A0F               	xorlw	15	; case 105
  5493  0002B0  B4D8               	btfsc	status,2,c
  5494  0002B2  EF61  F001         	goto	l6744
  5495  0002B6  0A1C               	xorlw	28	; case 117
  5496  0002B8  B4D8               	btfsc	status,2,c
  5497  0002BA  EF3D  F001         	goto	l6738
  5498  0002BE  EF33  F001         	goto	l6734
  5499  0002C2                     l6744:
  5500                           
  5501                           ; BSR set to: 0
  5502                           ;doprnt.c: 851: if(flag & (0x700)) {
  5503  0002C2  0E07               	movlw	7
  5504  0002C4  15A1               	andwf	(sprintf@flag+1)& (0+255),w,b
  5505  0002C6  B4D8               	btfsc	status,2,c
  5506  0002C8  EF68  F001         	goto	u7831
  5507  0002CC  EF6A  F001         	goto	u7830
  5508  0002D0                     u7831:
  5509  0002D0  EF3D  F005         	goto	l725
  5510  0002D4                     u7830:
  5511  0002D4                     
  5512                           ; BSR set to: 0
  5513                           ;doprnt.c: 853: if(flag & 0x1000)
  5514  0002D4  A9A1               	btfss	(sprintf@flag+1)& (0+255),4,b
  5515  0002D6  EF6F  F001         	goto	u7841
  5516  0002DA  EF71  F001         	goto	u7840
  5517  0002DE                     u7841:
  5518  0002DE  EF75  F001         	goto	l6750
  5519  0002E2                     u7840:
  5520  0002E2                     
  5521                           ; BSR set to: 0
  5522                           ;doprnt.c: 855: prec = 6;
  5523  0002E2  0E00               	movlw	0
  5524  0002E4  6FB3               	movwf	(sprintf@prec+1)& (0+255),b
  5525  0002E6  0E06               	movlw	6
  5526  0002E8  6FB2               	movwf	sprintf@prec& (0+255),b
  5527  0002EA                     l6750:
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5531  0002EA  C09C  FFD9         	movff	sprintf@ap,fsr2l
  5532  0002EE  C09D  FFDA         	movff	sprintf@ap+1,fsr2h
  5533  0002F2  CFDE F0AE          	movff	postinc2,sprintf@fval
  5534  0002F6  CFDE F0AF          	movff	postinc2,sprintf@fval+1
  5535  0002FA  CFDE F0B0          	movff	postinc2,sprintf@fval+2
  5536  0002FE  CFDE F0B1          	movff	postinc2,sprintf@fval+3
  5537  000302                     
  5538                           ; BSR set to: 0
  5539  000302  0E04               	movlw	4
  5540  000304  279C               	addwf	sprintf@ap& (0+255),f,b
  5541  000306  0E00               	movlw	0
  5542  000308  239D               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5543  00030A                     
  5544                           ; BSR set to: 0
  5545                           ;doprnt.c: 857: if(fval < 0.0) {
  5546  00030A  BFB1               	btfsc	(sprintf@fval+3)& (0+255),7,b
  5547  00030C  EF8C  F001         	goto	u7850
  5548  000310  EF8A  F001         	goto	u7851
  5549  000314                     u7851:
  5550  000314  EFA1  F001         	goto	l6760
  5551  000318                     u7850:
  5552  000318                     
  5553                           ; BSR set to: 0
  5554                           ;doprnt.c: 858: fval = -fval;
  5555  000318  C0AE  F002         	movff	sprintf@fval,___flneg@f1
  5556  00031C  C0AF  F003         	movff	sprintf@fval+1,___flneg@f1+1
  5557  000320  C0B0  F004         	movff	sprintf@fval+2,___flneg@f1+2
  5558  000324  C0B1  F005         	movff	sprintf@fval+3,___flneg@f1+3
  5559  000328  EC0E  F022         	call	___flneg	;wreg free
  5560  00032C  C002  F0AE         	movff	?___flneg,sprintf@fval
  5561  000330  C003  F0AF         	movff	?___flneg+1,sprintf@fval+1
  5562  000334  C004  F0B0         	movff	?___flneg+2,sprintf@fval+2
  5563  000338  C005  F0B1         	movff	?___flneg+3,sprintf@fval+3
  5564  00033C                     
  5565                           ;doprnt.c: 859: flag |= 0x03;
  5566  00033C  0E03               	movlw	3
  5567  00033E  0100               	movlb	0	; () banked
  5568  000340  13A0               	iorwf	sprintf@flag& (0+255),f,b
  5569  000342                     l6760:
  5570                           
  5571                           ; BSR set to: 0
  5572                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  5573  000342  0E00               	movlw	0
  5574  000344  6FAB               	movwf	(sprintf@eexp+1)& (0+255),b
  5575  000346  0E00               	movlw	0
  5576  000348  6FAA               	movwf	sprintf@eexp& (0+255),b
  5577  00034A                     
  5578                           ; BSR set to: 0
  5579                           ;doprnt.c: 862: if( fval!=0) {
  5580  00034A  C0AE  F033         	movff	sprintf@fval,___fleq@ff1
  5581  00034E  C0AF  F034         	movff	sprintf@fval+1,___fleq@ff1+1
  5582  000352  C0B0  F035         	movff	sprintf@fval+2,___fleq@ff1+2
  5583  000356  C0B1  F036         	movff	sprintf@fval+3,___fleq@ff1+3
  5584  00035A  0E00               	movlw	0
  5585  00035C  6E37               	movwf	___fleq@ff2^0,c
  5586  00035E  0E00               	movlw	0
  5587  000360  6E38               	movwf	(___fleq@ff2+1)^0,c
  5588  000362  0E00               	movlw	0
  5589  000364  6E39               	movwf	(___fleq@ff2+2)^0,c
  5590  000366  0E00               	movlw	0
  5591  000368  6E3A               	movwf	(___fleq@ff2+3)^0,c
  5592  00036A  EC9A  F01E         	call	___fleq	;wreg free
  5593  00036E  B0D8               	btfsc	status,0,c
  5594  000370  EFBC  F001         	goto	u7861
  5595  000374  EFBE  F001         	goto	u7860
  5596  000378                     u7861:
  5597  000378  EF51  F002         	goto	l6788
  5598  00037C                     u7860:
  5599  00037C                     
  5600                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  5601  00037C  0100               	movlb	0	; () banked
  5602  00037E  35B0               	rlcf	(sprintf@fval+2)& (0+255),w,b
  5603  000380  35B1               	rlcf	(sprintf@fval+3)& (0+255),w,b
  5604  000382  0F82               	addlw	130
  5605  000384  6FAA               	movwf	sprintf@eexp& (0+255),b
  5606  000386  6BAB               	clrf	(sprintf@eexp+1)& (0+255),b
  5607  000388  0EFF               	movlw	255
  5608  00038A  23AB               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  5609  00038C                     
  5610                           ; BSR set to: 0
  5611                           ;doprnt.c: 864: eexp--;
  5612  00038C  07AA               	decf	sprintf@eexp& (0+255),f,b
  5613  00038E  A0D8               	btfss	status,0,c
  5614  000390  07AB               	decf	(sprintf@eexp+1)& (0+255),f,b
  5615  000392                     
  5616                           ; BSR set to: 0
  5617                           ;doprnt.c: 865: eexp *= 3;
  5618  000392  C0AA  F002         	movff	sprintf@eexp,___wmul@multiplier
  5619  000396  C0AB  F003         	movff	sprintf@eexp+1,___wmul@multiplier+1
  5620  00039A  0E00               	movlw	0
  5621  00039C  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5622  00039E  0E03               	movlw	3
  5623  0003A0  6E04               	movwf	___wmul@multiplicand^0,c
  5624  0003A2  EC43  F022         	call	___wmul	;wreg free
  5625  0003A6  C002  F0AA         	movff	?___wmul,sprintf@eexp
  5626  0003AA  C003  F0AB         	movff	?___wmul+1,sprintf@eexp+1
  5627  0003AE                     
  5628                           ;doprnt.c: 866: eexp /= 10;
  5629  0003AE  C0AA  F008         	movff	sprintf@eexp,___awdiv@dividend
  5630  0003B2  C0AB  F009         	movff	sprintf@eexp+1,___awdiv@dividend+1
  5631  0003B6  0E00               	movlw	0
  5632  0003B8  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  5633  0003BA  0E0A               	movlw	10
  5634  0003BC  6E0A               	movwf	___awdiv@divisor^0,c
  5635  0003BE  ECE0  F01D         	call	___awdiv	;wreg free
  5636  0003C2  C008  F0AA         	movff	?___awdiv,sprintf@eexp
  5637  0003C6  C009  F0AB         	movff	?___awdiv+1,sprintf@eexp+1
  5638  0003CA                     
  5639                           ;doprnt.c: 867: if(eexp < 0)
  5640  0003CA  0100               	movlb	0	; () banked
  5641  0003CC  BFAB               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  5642  0003CE  EFED  F001         	goto	u7870
  5643  0003D2  EFEB  F001         	goto	u7871
  5644  0003D6                     u7871:
  5645  0003D6  EFF0  F001         	goto	l6776
  5646  0003DA                     u7870:
  5647  0003DA                     
  5648                           ; BSR set to: 0
  5649                           ;doprnt.c: 868: eexp--;
  5650  0003DA  07AA               	decf	sprintf@eexp& (0+255),f,b
  5651  0003DC  A0D8               	btfss	status,0,c
  5652  0003DE  07AB               	decf	(sprintf@eexp+1)& (0+255),f,b
  5653  0003E0                     l6776:
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  5657  0003E0  51AA               	movf	sprintf@eexp& (0+255),w,b
  5658  0003E2  0800               	sublw	0
  5659  0003E4  EC55  F00B         	call	_scale
  5660  0003E8  C053  F0A2         	movff	?_scale,sprintf@tmpval
  5661  0003EC  C054  F0A3         	movff	?_scale+1,sprintf@tmpval+1
  5662  0003F0  C055  F0A4         	movff	?_scale+2,sprintf@tmpval+2
  5663  0003F4  C056  F0A5         	movff	?_scale+3,sprintf@tmpval+3
  5664  0003F8                     
  5665                           ;doprnt.c: 873: tmpval.integ *= fval;
  5666  0003F8  C0A2  F047         	movff	sprintf@tmpval,___flmul@b
  5667  0003FC  C0A3  F048         	movff	sprintf@tmpval+1,___flmul@b+1
  5668  000400  C0A4  F049         	movff	sprintf@tmpval+2,___flmul@b+2
  5669  000404  C0A5  F04A         	movff	sprintf@tmpval+3,___flmul@b+3
  5670  000408  C0AE  F04B         	movff	sprintf@fval,___flmul@a
  5671  00040C  C0AF  F04C         	movff	sprintf@fval+1,___flmul@a+1
  5672  000410  C0B0  F04D         	movff	sprintf@fval+2,___flmul@a+2
  5673  000414  C0B1  F04E         	movff	sprintf@fval+3,___flmul@a+3
  5674  000418  EC3F  F009         	call	___flmul	;wreg free
  5675  00041C  C047  F0A2         	movff	?___flmul,sprintf@tmpval
  5676  000420  C048  F0A3         	movff	?___flmul+1,sprintf@tmpval+1
  5677  000424  C049  F0A4         	movff	?___flmul+2,sprintf@tmpval+2
  5678  000428  C04A  F0A5         	movff	?___flmul+3,sprintf@tmpval+3
  5679  00042C                     
  5680                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  5681  00042C  C0A2  F002         	movff	sprintf@tmpval,___flge@ff1
  5682  000430  C0A3  F003         	movff	sprintf@tmpval+1,___flge@ff1+1
  5683  000434  C0A4  F004         	movff	sprintf@tmpval+2,___flge@ff1+2
  5684  000438  C0A5  F005         	movff	sprintf@tmpval+3,___flge@ff1+3
  5685  00043C  0E00               	movlw	0
  5686  00043E  6E06               	movwf	___flge@ff2^0,c
  5687  000440  0E00               	movlw	0
  5688  000442  6E07               	movwf	(___flge@ff2+1)^0,c
  5689  000444  0E80               	movlw	128
  5690  000446  6E08               	movwf	(___flge@ff2+2)^0,c
  5691  000448  0E3F               	movlw	63
  5692  00044A  6E09               	movwf	(___flge@ff2+3)^0,c
  5693  00044C  EC06  F01C         	call	___flge	;wreg free
  5694  000450  B0D8               	btfsc	status,0,c
  5695  000452  EF2D  F002         	goto	u7881
  5696  000456  EF2F  F002         	goto	u7880
  5697  00045A                     u7881:
  5698  00045A  EF35  F002         	goto	l6784
  5699  00045E                     u7880:
  5700  00045E                     
  5701                           ;doprnt.c: 875: eexp--;
  5702  00045E  0100               	movlb	0	; () banked
  5703  000460  07AA               	decf	sprintf@eexp& (0+255),f,b
  5704  000462  A0D8               	btfss	status,0,c
  5705  000464  07AB               	decf	(sprintf@eexp+1)& (0+255),f,b
  5706  000466  EF51  F002         	goto	l6788
  5707  00046A                     l6784:
  5708                           
  5709                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  5710  00046A  C0A2  F002         	movff	sprintf@tmpval,___flge@ff1
  5711  00046E  C0A3  F003         	movff	sprintf@tmpval+1,___flge@ff1+1
  5712  000472  C0A4  F004         	movff	sprintf@tmpval+2,___flge@ff1+2
  5713  000476  C0A5  F005         	movff	sprintf@tmpval+3,___flge@ff1+3
  5714  00047A  0E00               	movlw	0
  5715  00047C  6E06               	movwf	___flge@ff2^0,c
  5716  00047E  0E00               	movlw	0
  5717  000480  6E07               	movwf	(___flge@ff2+1)^0,c
  5718  000482  0E20               	movlw	32
  5719  000484  6E08               	movwf	(___flge@ff2+2)^0,c
  5720  000486  0E41               	movlw	65
  5721  000488  6E09               	movwf	(___flge@ff2+3)^0,c
  5722  00048A  EC06  F01C         	call	___flge	;wreg free
  5723  00048E  A0D8               	btfss	status,0,c
  5724  000490  EF4C  F002         	goto	u7891
  5725  000494  EF4E  F002         	goto	u7890
  5726  000498                     u7891:
  5727  000498  EF51  F002         	goto	l6788
  5728  00049C                     u7890:
  5729  00049C                     
  5730                           ;doprnt.c: 877: eexp++;
  5731  00049C  0100               	movlb	0	; () banked
  5732  00049E  4BAA               	infsnz	sprintf@eexp& (0+255),f,b
  5733  0004A0  2BAB               	incf	(sprintf@eexp+1)& (0+255),f,b
  5734  0004A2                     l6788:
  5735                           
  5736                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  5737  0004A2  0100               	movlb	0	; () banked
  5738  0004A4  BFB3               	btfsc	(sprintf@prec+1)& (0+255),7,b
  5739  0004A6  EF60  F002         	goto	u7900
  5740  0004AA  51B3               	movf	(sprintf@prec+1)& (0+255),w,b
  5741  0004AC  E107               	bnz	u7901
  5742  0004AE  0E0D               	movlw	13
  5743  0004B0  5DB2               	subwf	sprintf@prec& (0+255),w,b
  5744  0004B2  B0D8               	btfsc	status,0,c
  5745  0004B4  EF5E  F002         	goto	u7901
  5746  0004B8  EF60  F002         	goto	u7900
  5747  0004BC                     u7901:
  5748  0004BC  EF7D  F002         	goto	l6792
  5749  0004C0                     u7900:
  5750  0004C0                     
  5751                           ; BSR set to: 0
  5752                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  5753  0004C0  C0AE  F076         	movff	sprintf@fval,___fladd@b
  5754  0004C4  C0AF  F077         	movff	sprintf@fval+1,___fladd@b+1
  5755  0004C8  C0B0  F078         	movff	sprintf@fval+2,___fladd@b+2
  5756  0004CC  C0B1  F079         	movff	sprintf@fval+3,___fladd@b+3
  5757  0004D0  51B2               	movf	sprintf@prec& (0+255),w,b
  5758  0004D2  ECBF  F013         	call	_fround
  5759  0004D6  C053  F07A         	movff	?_fround,___fladd@a
  5760  0004DA  C054  F07B         	movff	?_fround+1,___fladd@a+1
  5761  0004DE  C055  F07C         	movff	?_fround+2,___fladd@a+2
  5762  0004E2  C056  F07D         	movff	?_fround+3,___fladd@a+3
  5763  0004E6  ECDE  F006         	call	___fladd	;wreg free
  5764  0004EA  C076  F0AE         	movff	?___fladd,sprintf@fval
  5765  0004EE  C077  F0AF         	movff	?___fladd+1,sprintf@fval+1
  5766  0004F2  C078  F0B0         	movff	?___fladd+2,sprintf@fval+2
  5767  0004F6  C079  F0B1         	movff	?___fladd+3,sprintf@fval+3
  5768  0004FA                     l6792:
  5769                           
  5770                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  5771  0004FA  0100               	movlb	0	; () banked
  5772  0004FC  BFAB               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  5773  0004FE  EF8C  F002         	goto	u7910
  5774  000502  51AB               	movf	(sprintf@eexp+1)& (0+255),w,b
  5775  000504  E107               	bnz	u7911
  5776  000506  0E0A               	movlw	10
  5777  000508  5DAA               	subwf	sprintf@eexp& (0+255),w,b
  5778  00050A  B0D8               	btfsc	status,0,c
  5779  00050C  EF8A  F002         	goto	u7911
  5780  000510  EF8C  F002         	goto	u7910
  5781  000514                     u7911:
  5782  000514  EFC9  F002         	goto	l6800
  5783  000518                     u7910:
  5784  000518                     
  5785                           ; BSR set to: 0
  5786  000518  C0AE  F033         	movff	sprintf@fval,___fleq@ff1
  5787  00051C  C0AF  F034         	movff	sprintf@fval+1,___fleq@ff1+1
  5788  000520  C0B0  F035         	movff	sprintf@fval+2,___fleq@ff1+2
  5789  000524  C0B1  F036         	movff	sprintf@fval+3,___fleq@ff1+3
  5790  000528  0E00               	movlw	0
  5791  00052A  6E37               	movwf	___fleq@ff2^0,c
  5792  00052C  0E00               	movlw	0
  5793  00052E  6E38               	movwf	(___fleq@ff2+1)^0,c
  5794  000530  0E00               	movlw	0
  5795  000532  6E39               	movwf	(___fleq@ff2+2)^0,c
  5796  000534  0E00               	movlw	0
  5797  000536  6E3A               	movwf	(___fleq@ff2+3)^0,c
  5798  000538  EC9A  F01E         	call	___fleq	;wreg free
  5799  00053C  B0D8               	btfsc	status,0,c
  5800  00053E  EFA3  F002         	goto	u7921
  5801  000542  EFA5  F002         	goto	u7920
  5802  000546                     u7921:
  5803  000546  EF1E  F003         	goto	l6814
  5804  00054A                     u7920:
  5805  00054A  C0AE  F01B         	movff	sprintf@fval,___fltol@f1
  5806  00054E  C0AF  F01C         	movff	sprintf@fval+1,___fltol@f1+1
  5807  000552  C0B0  F01D         	movff	sprintf@fval+2,___fltol@f1+2
  5808  000556  C0B1  F01E         	movff	sprintf@fval+3,___fltol@f1+3
  5809  00055A  EC01  F01B         	call	___fltol	;wreg free
  5810  00055E  501B               	movf	?___fltol^0,w,c
  5811  000560  101C               	iorwf	(?___fltol+1)^0,w,c
  5812  000562  101D               	iorwf	(?___fltol+2)^0,w,c
  5813  000564  101E               	iorwf	(?___fltol+3)^0,w,c
  5814  000566  A4D8               	btfss	status,2,c
  5815  000568  EFB8  F002         	goto	u7931
  5816  00056C  EFBA  F002         	goto	u7930
  5817  000570                     u7931:
  5818  000570  EF1E  F003         	goto	l6814
  5819  000574                     u7930:
  5820  000574  0100               	movlb	0	; () banked
  5821  000576  BFAB               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  5822  000578  EFC7  F002         	goto	u7941
  5823  00057C  51AB               	movf	(sprintf@eexp+1)& (0+255),w,b
  5824  00057E  E109               	bnz	u7940
  5825  000580  0E02               	movlw	2
  5826  000582  5DAA               	subwf	sprintf@eexp& (0+255),w,b
  5827  000584  A0D8               	btfss	status,0,c
  5828  000586  EFC7  F002         	goto	u7941
  5829  00058A  EFC9  F002         	goto	u7940
  5830  00058E                     u7941:
  5831  00058E  EF1E  F003         	goto	l6814
  5832  000592                     u7940:
  5833  000592                     l6800:
  5834                           
  5835                           ; BSR set to: 0
  5836                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  5837  000592  C0A2  F002         	movff	sprintf@tmpval,___flge@ff1
  5838  000596  C0A3  F003         	movff	sprintf@tmpval+1,___flge@ff1+1
  5839  00059A  C0A4  F004         	movff	sprintf@tmpval+2,___flge@ff1+2
  5840  00059E  C0A5  F005         	movff	sprintf@tmpval+3,___flge@ff1+3
  5841  0005A2  0E5F               	movlw	95
  5842  0005A4  6E06               	movwf	___flge@ff2^0,c
  5843  0005A6  0E70               	movlw	112
  5844  0005A8  6E07               	movwf	(___flge@ff2+1)^0,c
  5845  0005AA  0E89               	movlw	137
  5846  0005AC  6E08               	movwf	(___flge@ff2+2)^0,c
  5847  0005AE  0E40               	movlw	64
  5848  0005B0  6E09               	movwf	(___flge@ff2+3)^0,c
  5849  0005B2  EC06  F01C         	call	___flge	;wreg free
  5850  0005B6  B0D8               	btfsc	status,0,c
  5851  0005B8  EFE0  F002         	goto	u7951
  5852  0005BC  EFE2  F002         	goto	u7950
  5853  0005C0                     u7951:
  5854  0005C0  EFE9  F002         	goto	l6804
  5855  0005C4                     u7950:
  5856  0005C4                     
  5857                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5858  0005C4  0100               	movlb	0	; () banked
  5859  0005C6  0EF7               	movlw	247
  5860  0005C8  27AA               	addwf	sprintf@eexp& (0+255),f,b
  5861  0005CA  0EFF               	movlw	255
  5862  0005CC  23AB               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  5863                           
  5864                           ;doprnt.c: 1148: }else{
  5865  0005CE  EFEE  F002         	goto	l6806
  5866  0005D2                     l6804:
  5867                           
  5868                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5869  0005D2  0100               	movlb	0	; () banked
  5870  0005D4  0EF8               	movlw	248
  5871  0005D6  27AA               	addwf	sprintf@eexp& (0+255),f,b
  5872  0005D8  0EFF               	movlw	255
  5873  0005DA  23AB               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  5874  0005DC                     l6806:
  5875                           
  5876                           ; BSR set to: 0
  5877                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5878  0005DC  51AA               	movf	sprintf@eexp& (0+255),w,b
  5879  0005DE  EC55  F00B         	call	_scale
  5880  0005E2  C053  F0A2         	movff	?_scale,sprintf@tmpval
  5881  0005E6  C054  F0A3         	movff	?_scale+1,sprintf@tmpval+1
  5882  0005EA  C055  F0A4         	movff	?_scale+2,sprintf@tmpval+2
  5883  0005EE  C056  F0A5         	movff	?_scale+3,sprintf@tmpval+3
  5884  0005F2  C0AE  F002         	movff	sprintf@fval,__div_to_l_@f1
  5885  0005F6  C0AF  F003         	movff	sprintf@fval+1,__div_to_l_@f1+1
  5886  0005FA  C0B0  F004         	movff	sprintf@fval+2,__div_to_l_@f1+2
  5887  0005FE  C0B1  F005         	movff	sprintf@fval+3,__div_to_l_@f1+3
  5888  000602  C0A2  F006         	movff	sprintf@tmpval,__div_to_l_@f2
  5889  000606  C0A3  F007         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  5890  00060A  C0A4  F008         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  5891  00060E  C0A5  F009         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  5892  000612  EC97  F018         	call	__div_to_l_	;wreg free
  5893  000616  C002  F0A6         	movff	?__div_to_l_,sprintf@val
  5894  00061A  C003  F0A7         	movff	?__div_to_l_+1,sprintf@val+1
  5895  00061E  C004  F0A8         	movff	?__div_to_l_+2,sprintf@val+2
  5896  000622  C005  F0A9         	movff	?__div_to_l_+3,sprintf@val+3
  5897  000626                     
  5898                           ;doprnt.c: 1155: fval = 0.0;
  5899  000626  0E00               	movlw	0
  5900  000628  0100               	movlb	0	; () banked
  5901  00062A  6FAE               	movwf	sprintf@fval& (0+255),b
  5902  00062C  0E00               	movlw	0
  5903  00062E  6FAF               	movwf	(sprintf@fval+1)& (0+255),b
  5904  000630  0E00               	movlw	0
  5905  000632  6FB0               	movwf	(sprintf@fval+2)& (0+255),b
  5906  000634  0E00               	movlw	0
  5907  000636  6FB1               	movwf	(sprintf@fval+3)& (0+255),b
  5908                           
  5909                           ;doprnt.c: 1156: } else {
  5910  000638  EF5A  F003         	goto	l6818
  5911  00063C                     l6814:
  5912                           
  5913                           ;doprnt.c: 1157: val = (unsigned long)fval;
  5914  00063C  C0AE  F01B         	movff	sprintf@fval,___fltol@f1
  5915  000640  C0AF  F01C         	movff	sprintf@fval+1,___fltol@f1+1
  5916  000644  C0B0  F01D         	movff	sprintf@fval+2,___fltol@f1+2
  5917  000648  C0B1  F01E         	movff	sprintf@fval+3,___fltol@f1+3
  5918  00064C  EC01  F01B         	call	___fltol	;wreg free
  5919  000650  C01B  F0A6         	movff	?___fltol,sprintf@val
  5920  000654  C01C  F0A7         	movff	?___fltol+1,sprintf@val+1
  5921  000658  C01D  F0A8         	movff	?___fltol+2,sprintf@val+2
  5922  00065C  C01E  F0A9         	movff	?___fltol+3,sprintf@val+3
  5923                           
  5924                           ;doprnt.c: 1158: fval -= (double)val;
  5925  000660  C0AE  F082         	movff	sprintf@fval,___flsub@b
  5926  000664  C0AF  F083         	movff	sprintf@fval+1,___flsub@b+1
  5927  000668  C0B0  F084         	movff	sprintf@fval+2,___flsub@b+2
  5928  00066C  C0B1  F085         	movff	sprintf@fval+3,___flsub@b+3
  5929  000670  C0A6  F025         	movff	sprintf@val,___xxtofl@val
  5930  000674  C0A7  F026         	movff	sprintf@val+1,___xxtofl@val+1
  5931  000678  C0A8  F027         	movff	sprintf@val+2,___xxtofl@val+2
  5932  00067C  C0A9  F028         	movff	sprintf@val+3,___xxtofl@val+3
  5933  000680  0E00               	movlw	0
  5934  000682  EC42  F016         	call	___xxtofl
  5935  000686  C025  F086         	movff	?___xxtofl,___flsub@a
  5936  00068A  C026  F087         	movff	?___xxtofl+1,___flsub@a+1
  5937  00068E  C027  F088         	movff	?___xxtofl+2,___flsub@a+2
  5938  000692  C028  F089         	movff	?___xxtofl+3,___flsub@a+3
  5939  000696  ECEA  F021         	call	___flsub	;wreg free
  5940  00069A  C082  F0AE         	movff	?___flsub,sprintf@fval
  5941  00069E  C083  F0AF         	movff	?___flsub+1,sprintf@fval+1
  5942  0006A2  C084  F0B0         	movff	?___flsub+2,sprintf@fval+2
  5943  0006A6  C085  F0B1         	movff	?___flsub+3,sprintf@fval+3
  5944  0006AA                     
  5945                           ;doprnt.c: 1159: eexp = 0;
  5946  0006AA  0E00               	movlw	0
  5947  0006AC  0100               	movlb	0	; () banked
  5948  0006AE  6FAB               	movwf	(sprintf@eexp+1)& (0+255),b
  5949  0006B0  0E00               	movlw	0
  5950  0006B2  6FAA               	movwf	sprintf@eexp& (0+255),b
  5951  0006B4                     l6818:
  5952                           
  5953                           ; BSR set to: 0
  5954                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  5955  0006B4  0E01               	movlw	1
  5956  0006B6  6FB4               	movwf	sprintf@c& (0+255),b
  5957  0006B8                     l6820:
  5958                           
  5959                           ; BSR set to: 0
  5960  0006B8  0E0A               	movlw	10
  5961  0006BA  19B4               	xorwf	sprintf@c& (0+255),w,b
  5962  0006BC  A4D8               	btfss	status,2,c
  5963  0006BE  EF63  F003         	goto	u7961
  5964  0006C2  EF65  F003         	goto	u7960
  5965  0006C6                     u7961:
  5966  0006C6  EF67  F003         	goto	l6824
  5967  0006CA                     u7960:
  5968  0006CA  EF87  F003         	goto	l6832
  5969  0006CE                     l6824:
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;doprnt.c: 1163: if(val < dpowers[c])
  5973  0006CE  51B4               	movf	sprintf@c& (0+255),w,b
  5974  0006D0  0D04               	mullw	4
  5975  0006D2  0E77               	movlw	low _dpowers
  5976  0006D4  24F3               	addwf	243,w,c
  5977  0006D6  6EF6               	movwf	tblptrl,c
  5978  0006D8  0E5F               	movlw	high _dpowers
  5979  0006DA  20F4               	addwfc	244,w,c
  5980  0006DC  6EF7               	movwf	tblptrh,c
  5981  0006DE                     	if	0	;There are less than 3 active tblptr bytes
  5982  0006DE                     	endif
  5983  0006DE  0009               	tblrd		*+
  5984  0006E0  50F5               	movf	tablat,w,c
  5985  0006E2  5DA6               	subwf	sprintf@val& (0+255),w,b
  5986  0006E4  0009               	tblrd		*+
  5987  0006E6  50F5               	movf	tablat,w,c
  5988  0006E8  59A7               	subwfb	(sprintf@val+1)& (0+255),w,b
  5989  0006EA  0009               	tblrd		*+
  5990  0006EC  50F5               	movf	tablat,w,c
  5991  0006EE  59A8               	subwfb	(sprintf@val+2)& (0+255),w,b
  5992  0006F0  0009               	tblrd		*+
  5993  0006F2  50F5               	movf	tablat,w,c
  5994  0006F4  59A9               	subwfb	(sprintf@val+3)& (0+255),w,b
  5995  0006F6  B0D8               	btfsc	status,0,c
  5996  0006F8  EF80  F003         	goto	u7971
  5997  0006FC  EF82  F003         	goto	u7970
  5998  000700                     u7971:
  5999  000700  EF84  F003         	goto	l6828
  6000  000704                     u7970:
  6001  000704  EF87  F003         	goto	l6832
  6002  000708                     l6828:
  6003                           
  6004                           ; BSR set to: 0
  6005  000708  2BB4               	incf	sprintf@c& (0+255),f,b
  6006  00070A  EF5C  F003         	goto	l6820
  6007  00070E                     l6832:
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;doprnt.c: 1168: width -= prec + c + eexp;
  6011  00070E  51B4               	movf	sprintf@c& (0+255),w,b
  6012  000710  25B2               	addwf	sprintf@prec& (0+255),w,b
  6013  000712  6F92               	movwf	??_sprintf& (0+255),b
  6014  000714  0E00               	movlw	0
  6015  000716  21B3               	addwfc	(sprintf@prec+1)& (0+255),w,b
  6016  000718  6F93               	movwf	(??_sprintf+1)& (0+255),b
  6017  00071A  51AA               	movf	sprintf@eexp& (0+255),w,b
  6018  00071C  2792               	addwf	??_sprintf& (0+255),f,b
  6019  00071E  51AB               	movf	(sprintf@eexp+1)& (0+255),w,b
  6020  000720  2393               	addwfc	(??_sprintf+1)& (0+255),f,b
  6021  000722  5192               	movf	??_sprintf& (0+255),w,b
  6022  000724  5FAC               	subwf	sprintf@width& (0+255),f,b
  6023  000726  5193               	movf	(??_sprintf+1)& (0+255),w,b
  6024  000728  5BAD               	subwfb	(sprintf@width+1)& (0+255),f,b
  6025                           
  6026                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  6027  00072A  51B2               	movf	sprintf@prec& (0+255),w,b
  6028  00072C  11B3               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6029  00072E  B4D8               	btfsc	status,2,c
  6030  000730  EF9C  F003         	goto	u7981
  6031  000734  EF9E  F003         	goto	u7980
  6032  000738                     u7981:
  6033  000738  EFA1  F003         	goto	l6836
  6034  00073C                     u7980:
  6035  00073C                     
  6036                           ; BSR set to: 0
  6037                           ;doprnt.c: 1174: width--;
  6038  00073C  07AC               	decf	sprintf@width& (0+255),f,b
  6039  00073E  A0D8               	btfss	status,0,c
  6040  000740  07AD               	decf	(sprintf@width+1)& (0+255),f,b
  6041  000742                     l6836:
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;doprnt.c: 1175: if(flag & 0x03)
  6045  000742  0E03               	movlw	3
  6046  000744  15A0               	andwf	sprintf@flag& (0+255),w,b
  6047  000746  6F92               	movwf	??_sprintf& (0+255),b
  6048  000748  0E00               	movlw	0
  6049  00074A  15A1               	andwf	(sprintf@flag+1)& (0+255),w,b
  6050  00074C  6F93               	movwf	(??_sprintf+1)& (0+255),b
  6051  00074E  5192               	movf	??_sprintf& (0+255),w,b
  6052  000750  1193               	iorwf	(??_sprintf+1)& (0+255),w,b
  6053  000752  B4D8               	btfsc	status,2,c
  6054  000754  EFAE  F003         	goto	u7991
  6055  000758  EFB0  F003         	goto	u7990
  6056  00075C                     u7991:
  6057  00075C  EFBF  F003         	goto	l6846
  6058  000760                     u7990:
  6059  000760                     l6838:
  6060                           
  6061                           ; BSR set to: 0
  6062                           ;doprnt.c: 1176: width--;
  6063  000760  07AC               	decf	sprintf@width& (0+255),f,b
  6064  000762  A0D8               	btfss	status,0,c
  6065  000764  07AD               	decf	(sprintf@width+1)& (0+255),f,b
  6066  000766  EFBF  F003         	goto	l6846
  6067  00076A                     l6840:
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  6071  00076A  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6072  00076E  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6073  000772  0E20               	movlw	32
  6074  000774  6EDF               	movwf	indf2,c
  6075  000776                     
  6076                           ; BSR set to: 0
  6077  000776  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6078  000778  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6079  00077A  EFB0  F003         	goto	l6838
  6080  00077E                     l6846:
  6081                           
  6082                           ; BSR set to: 0
  6083  00077E  BFAD               	btfsc	(sprintf@width+1)& (0+255),7,b
  6084  000780  EFCC  F003         	goto	u8000
  6085  000784  51AD               	movf	(sprintf@width+1)& (0+255),w,b
  6086  000786  E106               	bnz	u8001
  6087  000788  05AC               	decf	sprintf@width& (0+255),w,b
  6088  00078A  B0D8               	btfsc	status,0,c
  6089  00078C  EFCA  F003         	goto	u8001
  6090  000790  EFCC  F003         	goto	u8000
  6091  000794                     u8001:
  6092  000794  EFB5  F003         	goto	l6840
  6093  000798                     u8000:
  6094  000798                     
  6095                           ; BSR set to: 0
  6096                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  6097  000798  0E03               	movlw	3
  6098  00079A  15A0               	andwf	sprintf@flag& (0+255),w,b
  6099  00079C  6F92               	movwf	??_sprintf& (0+255),b
  6100  00079E  0E00               	movlw	0
  6101  0007A0  15A1               	andwf	(sprintf@flag+1)& (0+255),w,b
  6102  0007A2  6F93               	movwf	(??_sprintf+1)& (0+255),b
  6103  0007A4  5192               	movf	??_sprintf& (0+255),w,b
  6104  0007A6  1193               	iorwf	(??_sprintf+1)& (0+255),w,b
  6105  0007A8  B4D8               	btfsc	status,2,c
  6106  0007AA  EFD9  F003         	goto	u8011
  6107  0007AE  EFDB  F003         	goto	u8010
  6108  0007B2                     u8011:
  6109  0007B2  EF2F  F004         	goto	l6862
  6110  0007B6                     u8010:
  6111  0007B6                     
  6112                           ; BSR set to: 0
  6113                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  6114  0007B6  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6115  0007BA  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6116  0007BE  0E2D               	movlw	45
  6117  0007C0  6EDF               	movwf	indf2,c
  6118  0007C2                     l6852:
  6119                           
  6120                           ; BSR set to: 0
  6121  0007C2  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6122  0007C4  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6123  0007C6  EF2F  F004         	goto	l6862
  6124  0007CA                     l6854:
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  6128  0007CA  C0A6  F002         	movff	sprintf@val,___lldiv@dividend
  6129  0007CE  C0A7  F003         	movff	sprintf@val+1,___lldiv@dividend+1
  6130  0007D2  C0A8  F004         	movff	sprintf@val+2,___lldiv@dividend+2
  6131  0007D6  C0A9  F005         	movff	sprintf@val+3,___lldiv@dividend+3
  6132  0007DA  51B4               	movf	sprintf@c& (0+255),w,b
  6133  0007DC  0D04               	mullw	4
  6134  0007DE  0E77               	movlw	low _dpowers
  6135  0007E0  24F3               	addwf	243,w,c
  6136  0007E2  6EF6               	movwf	tblptrl,c
  6137  0007E4  0E5F               	movlw	high _dpowers
  6138  0007E6  20F4               	addwfc	244,w,c
  6139  0007E8  6EF7               	movwf	tblptrh,c
  6140  0007EA                     	if	0	;There are less than 3 active tblptr bytes
  6141  0007EA                     	endif
  6142  0007EA  0009               	tblrd		*+
  6143  0007EC  CFF5 F006          	movff	tablat,___lldiv@divisor
  6144  0007F0  0009               	tblrd		*+
  6145  0007F2  CFF5 F007          	movff	tablat,___lldiv@divisor+1
  6146  0007F6  0009               	tblrd		*+
  6147  0007F8  CFF5 F008          	movff	tablat,___lldiv@divisor+2
  6148  0007FC  000A               	tblrd		*-
  6149  0007FE  CFF5 F009          	movff	tablat,___lldiv@divisor+3
  6150  000802  ECEF  F01E         	call	___lldiv	;wreg free
  6151  000806  C002  F0A2         	movff	?___lldiv,sprintf@tmpval
  6152  00080A  C003  F0A3         	movff	?___lldiv+1,sprintf@tmpval+1
  6153  00080E  C004  F0A4         	movff	?___lldiv+2,sprintf@tmpval+2
  6154  000812  C005  F0A5         	movff	?___lldiv+3,sprintf@tmpval+3
  6155  000816                     
  6156                           ;doprnt.c: 1228: tmpval.vd %= 10;
  6157  000816  C0A2  F00F         	movff	sprintf@tmpval,___llmod@dividend
  6158  00081A  C0A3  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6159  00081E  C0A4  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6160  000822  C0A5  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6161  000826  0E0A               	movlw	10
  6162  000828  6E13               	movwf	___llmod@divisor^0,c
  6163  00082A  0E00               	movlw	0
  6164  00082C  6E14               	movwf	(___llmod@divisor+1)^0,c
  6165  00082E  0E00               	movlw	0
  6166  000830  6E15               	movwf	(___llmod@divisor+2)^0,c
  6167  000832  0E00               	movlw	0
  6168  000834  6E16               	movwf	(___llmod@divisor+3)^0,c
  6169  000836  EC93  F01F         	call	___llmod	;wreg free
  6170  00083A  C00F  F0A2         	movff	?___llmod,sprintf@tmpval
  6171  00083E  C010  F0A3         	movff	?___llmod+1,sprintf@tmpval+1
  6172  000842  C011  F0A4         	movff	?___llmod+2,sprintf@tmpval+2
  6173  000846  C012  F0A5         	movff	?___llmod+3,sprintf@tmpval+3
  6174  00084A                     
  6175                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  6176  00084A  0100               	movlb	0	; () banked
  6177  00084C  51A2               	movf	sprintf@tmpval& (0+255),w,b
  6178  00084E  0F30               	addlw	48
  6179  000850  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6180  000854  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6181  000858  6EDF               	movwf	indf2,c
  6182  00085A  EFE1  F003         	goto	l6852
  6183  00085E                     l6862:
  6184                           
  6185                           ; BSR set to: 0
  6186  00085E  07B4               	decf	sprintf@c& (0+255),f,b
  6187  000860  29B4               	incf	sprintf@c& (0+255),w,b
  6188  000862  A4D8               	btfss	status,2,c
  6189  000864  EF36  F004         	goto	u8021
  6190  000868  EF38  F004         	goto	u8020
  6191  00086C                     u8021:
  6192  00086C  EFE5  F003         	goto	l6854
  6193  000870                     u8020:
  6194  000870  EF45  F004         	goto	l6870
  6195  000874                     l6864:
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  6199  000874  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6200  000878  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6201  00087C  0E30               	movlw	48
  6202  00087E  6EDF               	movwf	indf2,c
  6203  000880                     
  6204                           ; BSR set to: 0
  6205  000880  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6206  000882  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6207  000884                     
  6208                           ; BSR set to: 0
  6209                           ;doprnt.c: 1235: eexp--;
  6210  000884  07AA               	decf	sprintf@eexp& (0+255),f,b
  6211  000886  A0D8               	btfss	status,0,c
  6212  000888  07AB               	decf	(sprintf@eexp+1)& (0+255),f,b
  6213  00088A                     l6870:
  6214                           
  6215                           ; BSR set to: 0
  6216  00088A  BFAB               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  6217  00088C  EF52  F004         	goto	u8030
  6218  000890  51AB               	movf	(sprintf@eexp+1)& (0+255),w,b
  6219  000892  E106               	bnz	u8031
  6220  000894  05AA               	decf	sprintf@eexp& (0+255),w,b
  6221  000896  B0D8               	btfsc	status,0,c
  6222  000898  EF50  F004         	goto	u8031
  6223  00089C  EF52  F004         	goto	u8030
  6224  0008A0                     u8031:
  6225  0008A0  EF3A  F004         	goto	l6864
  6226  0008A4                     u8030:
  6227  0008A4                     
  6228                           ; BSR set to: 0
  6229                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  6230  0008A4  BFB3               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6231  0008A6  EF5E  F004         	goto	u8041
  6232  0008AA  51B3               	movf	(sprintf@prec+1)& (0+255),w,b
  6233  0008AC  E109               	bnz	u8040
  6234  0008AE  0E09               	movlw	9
  6235  0008B0  5DB2               	subwf	sprintf@prec& (0+255),w,b
  6236  0008B2  A0D8               	btfss	status,0,c
  6237  0008B4  EF5E  F004         	goto	u8041
  6238  0008B8  EF60  F004         	goto	u8040
  6239  0008BC                     u8041:
  6240  0008BC  EF64  F004         	goto	l759
  6241  0008C0                     u8040:
  6242  0008C0                     
  6243                           ; BSR set to: 0
  6244                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6245  0008C0  0E08               	movlw	8
  6246  0008C2  6FB4               	movwf	sprintf@c& (0+255),b
  6247  0008C4  EF66  F004         	goto	l6876
  6248  0008C8                     l759:
  6249                           
  6250                           ; BSR set to: 0
  6251                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  6252  0008C8  C0B2  F0B4         	movff	sprintf@prec,sprintf@c
  6253  0008CC                     l6876:
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;doprnt.c: 1241: prec -= (int)c;
  6257  0008CC  51B4               	movf	sprintf@c& (0+255),w,b
  6258  0008CE  5FB2               	subwf	sprintf@prec& (0+255),f,b
  6259  0008D0  0E00               	movlw	0
  6260  0008D2  5BB3               	subwfb	(sprintf@prec+1)& (0+255),f,b
  6261  0008D4                     
  6262                           ; BSR set to: 0
  6263                           ;doprnt.c: 1245: if(c)
  6264  0008D4  51B4               	movf	sprintf@c& (0+255),w,b
  6265  0008D6  B4D8               	btfsc	status,2,c
  6266  0008D8  EF70  F004         	goto	u8051
  6267  0008DC  EF72  F004         	goto	u8050
  6268  0008E0                     u8051:
  6269  0008E0  EF7A  F004         	goto	l6884
  6270  0008E4                     u8050:
  6271  0008E4                     
  6272                           ; BSR set to: 0
  6273                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  6274  0008E4  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6275  0008E8  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6276  0008EC  0E2E               	movlw	46
  6277  0008EE  6EDF               	movwf	indf2,c
  6278  0008F0                     
  6279                           ; BSR set to: 0
  6280  0008F0  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6281  0008F2  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6282  0008F4                     l6884:
  6283                           
  6284                           ; BSR set to: 0
  6285                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  6286  0008F4  51B4               	movf	sprintf@c& (0+255),w,b
  6287  0008F6  EC55  F00B         	call	_scale
  6288  0008FA  C053  F096         	movff	?_scale,_sprintf$2373
  6289  0008FE  C054  F097         	movff	?_scale+1,_sprintf$2373+1
  6290  000902  C055  F098         	movff	?_scale+2,_sprintf$2373+2
  6291  000906  C056  F099         	movff	?_scale+3,_sprintf$2373+3
  6292  00090A                     
  6293                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  6294  00090A  C0AE  F04B         	movff	sprintf@fval,___flmul@a
  6295  00090E  C0AF  F04C         	movff	sprintf@fval+1,___flmul@a+1
  6296  000912  C0B0  F04D         	movff	sprintf@fval+2,___flmul@a+2
  6297  000916  C0B1  F04E         	movff	sprintf@fval+3,___flmul@a+3
  6298  00091A  C096  F047         	movff	_sprintf$2373,___flmul@b
  6299  00091E  C097  F048         	movff	_sprintf$2373+1,___flmul@b+1
  6300  000922  C098  F049         	movff	_sprintf$2373+2,___flmul@b+2
  6301  000926  C099  F04A         	movff	_sprintf$2373+3,___flmul@b+3
  6302  00092A  EC3F  F009         	call	___flmul	;wreg free
  6303  00092E  C047  F01B         	movff	?___flmul,___fltol@f1
  6304  000932  C048  F01C         	movff	?___flmul+1,___fltol@f1+1
  6305  000936  C049  F01D         	movff	?___flmul+2,___fltol@f1+2
  6306  00093A  C04A  F01E         	movff	?___flmul+3,___fltol@f1+3
  6307  00093E  EC01  F01B         	call	___fltol	;wreg free
  6308  000942  C01B  F0A6         	movff	?___fltol,sprintf@val
  6309  000946  C01C  F0A7         	movff	?___fltol+1,sprintf@val+1
  6310  00094A  C01D  F0A8         	movff	?___fltol+2,sprintf@val+2
  6311  00094E  C01E  F0A9         	movff	?___fltol+3,sprintf@val+3
  6312                           
  6313                           ;doprnt.c: 1254: while(c--) {
  6314  000952  EF1B  F005         	goto	l6898
  6315  000956                     l6888:
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  6319  000956  C0A6  F002         	movff	sprintf@val,___lldiv@dividend
  6320  00095A  C0A7  F003         	movff	sprintf@val+1,___lldiv@dividend+1
  6321  00095E  C0A8  F004         	movff	sprintf@val+2,___lldiv@dividend+2
  6322  000962  C0A9  F005         	movff	sprintf@val+3,___lldiv@dividend+3
  6323  000966  51B4               	movf	sprintf@c& (0+255),w,b
  6324  000968  0D04               	mullw	4
  6325  00096A  0E77               	movlw	low _dpowers
  6326  00096C  24F3               	addwf	243,w,c
  6327  00096E  6EF6               	movwf	tblptrl,c
  6328  000970  0E5F               	movlw	high _dpowers
  6329  000972  20F4               	addwfc	244,w,c
  6330  000974  6EF7               	movwf	tblptrh,c
  6331  000976                     	if	0	;There are less than 3 active tblptr bytes
  6332  000976                     	endif
  6333  000976  0009               	tblrd		*+
  6334  000978  CFF5 F006          	movff	tablat,___lldiv@divisor
  6335  00097C  0009               	tblrd		*+
  6336  00097E  CFF5 F007          	movff	tablat,___lldiv@divisor+1
  6337  000982  0009               	tblrd		*+
  6338  000984  CFF5 F008          	movff	tablat,___lldiv@divisor+2
  6339  000988  000A               	tblrd		*-
  6340  00098A  CFF5 F009          	movff	tablat,___lldiv@divisor+3
  6341  00098E  ECEF  F01E         	call	___lldiv	;wreg free
  6342  000992  C002  F0A2         	movff	?___lldiv,sprintf@tmpval
  6343  000996  C003  F0A3         	movff	?___lldiv+1,sprintf@tmpval+1
  6344  00099A  C004  F0A4         	movff	?___lldiv+2,sprintf@tmpval+2
  6345  00099E  C005  F0A5         	movff	?___lldiv+3,sprintf@tmpval+3
  6346  0009A2                     
  6347                           ;doprnt.c: 1256: tmpval.vd %= 10;
  6348  0009A2  C0A2  F00F         	movff	sprintf@tmpval,___llmod@dividend
  6349  0009A6  C0A3  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6350  0009AA  C0A4  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6351  0009AE  C0A5  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6352  0009B2  0E0A               	movlw	10
  6353  0009B4  6E13               	movwf	___llmod@divisor^0,c
  6354  0009B6  0E00               	movlw	0
  6355  0009B8  6E14               	movwf	(___llmod@divisor+1)^0,c
  6356  0009BA  0E00               	movlw	0
  6357  0009BC  6E15               	movwf	(___llmod@divisor+2)^0,c
  6358  0009BE  0E00               	movlw	0
  6359  0009C0  6E16               	movwf	(___llmod@divisor+3)^0,c
  6360  0009C2  EC93  F01F         	call	___llmod	;wreg free
  6361  0009C6  C00F  F0A2         	movff	?___llmod,sprintf@tmpval
  6362  0009CA  C010  F0A3         	movff	?___llmod+1,sprintf@tmpval+1
  6363  0009CE  C011  F0A4         	movff	?___llmod+2,sprintf@tmpval+2
  6364  0009D2  C012  F0A5         	movff	?___llmod+3,sprintf@tmpval+3
  6365  0009D6                     
  6366                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  6367  0009D6  0100               	movlb	0	; () banked
  6368  0009D8  51A2               	movf	sprintf@tmpval& (0+255),w,b
  6369  0009DA  0F30               	addlw	48
  6370  0009DC  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6371  0009E0  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6372  0009E4  6EDF               	movwf	indf2,c
  6373  0009E6                     
  6374                           ; BSR set to: 0
  6375  0009E6  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6376  0009E8  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6377  0009EA                     
  6378                           ; BSR set to: 0
  6379                           ;doprnt.c: 1258: val %= dpowers[c];
  6380  0009EA  C0A6  F00F         	movff	sprintf@val,___llmod@dividend
  6381  0009EE  C0A7  F010         	movff	sprintf@val+1,___llmod@dividend+1
  6382  0009F2  C0A8  F011         	movff	sprintf@val+2,___llmod@dividend+2
  6383  0009F6  C0A9  F012         	movff	sprintf@val+3,___llmod@dividend+3
  6384  0009FA  51B4               	movf	sprintf@c& (0+255),w,b
  6385  0009FC  0D04               	mullw	4
  6386  0009FE  0E77               	movlw	low _dpowers
  6387  000A00  24F3               	addwf	243,w,c
  6388  000A02  6EF6               	movwf	tblptrl,c
  6389  000A04  0E5F               	movlw	high _dpowers
  6390  000A06  20F4               	addwfc	244,w,c
  6391  000A08  6EF7               	movwf	tblptrh,c
  6392  000A0A                     	if	0	;There are less than 3 active tblptr bytes
  6393  000A0A                     	endif
  6394  000A0A  0009               	tblrd		*+
  6395  000A0C  CFF5 F013          	movff	tablat,___llmod@divisor
  6396  000A10  0009               	tblrd		*+
  6397  000A12  CFF5 F014          	movff	tablat,___llmod@divisor+1
  6398  000A16  0009               	tblrd		*+
  6399  000A18  CFF5 F015          	movff	tablat,___llmod@divisor+2
  6400  000A1C  000A               	tblrd		*-
  6401  000A1E  CFF5 F016          	movff	tablat,___llmod@divisor+3
  6402  000A22  EC93  F01F         	call	___llmod	;wreg free
  6403  000A26  C00F  F0A6         	movff	?___llmod,sprintf@val
  6404  000A2A  C010  F0A7         	movff	?___llmod+1,sprintf@val+1
  6405  000A2E  C011  F0A8         	movff	?___llmod+2,sprintf@val+2
  6406  000A32  C012  F0A9         	movff	?___llmod+3,sprintf@val+3
  6407  000A36                     l6898:
  6408  000A36  0100               	movlb	0	; () banked
  6409  000A38  07B4               	decf	sprintf@c& (0+255),f,b
  6410  000A3A  29B4               	incf	sprintf@c& (0+255),w,b
  6411  000A3C  A4D8               	btfss	status,2,c
  6412  000A3E  EF23  F005         	goto	u8061
  6413  000A42  EF25  F005         	goto	u8060
  6414  000A46                     u8061:
  6415  000A46  EFAB  F004         	goto	l6888
  6416  000A4A                     u8060:
  6417  000A4A  EF32  F005         	goto	l6906
  6418  000A4E                     l6900:
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  6422  000A4E  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6423  000A52  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6424  000A56  0E30               	movlw	48
  6425  000A58  6EDF               	movwf	indf2,c
  6426  000A5A                     
  6427                           ; BSR set to: 0
  6428  000A5A  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6429  000A5C  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6430  000A5E                     
  6431                           ; BSR set to: 0
  6432                           ;doprnt.c: 1263: prec--;
  6433  000A5E  07B2               	decf	sprintf@prec& (0+255),f,b
  6434  000A60  A0D8               	btfss	status,0,c
  6435  000A62  07B3               	decf	(sprintf@prec+1)& (0+255),f,b
  6436  000A64                     l6906:
  6437                           
  6438                           ; BSR set to: 0
  6439  000A64  51B2               	movf	sprintf@prec& (0+255),w,b
  6440  000A66  11B3               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6441  000A68  A4D8               	btfss	status,2,c
  6442  000A6A  EF39  F005         	goto	u8071
  6443  000A6E  EF3B  F005         	goto	u8070
  6444  000A72                     u8071:
  6445  000A72  EF27  F005         	goto	l6900
  6446  000A76                     u8070:
  6447  000A76  EFC6  F006         	goto	l6992
  6448  000A7A                     l725:
  6449                           
  6450                           ; BSR set to: 0
  6451                           ;doprnt.c: 1272: };doprnt.c: 1277: if((flag & 0x40) == 0x00)
  6452  000A7A  BDA0               	btfsc	sprintf@flag& (0+255),6,b
  6453  000A7C  EF42  F005         	goto	u8081
  6454  000A80  EF44  F005         	goto	u8080
  6455  000A84                     u8081:
  6456  000A84  EF68  F005         	goto	l6918
  6457  000A88                     u8080:
  6458  000A88                     
  6459                           ; BSR set to: 0
  6460                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_arg((*(int **)ap),
      +                           (int)0));
  6461  000A88  C09C  FFD9         	movff	sprintf@ap,fsr2l
  6462  000A8C  C09D  FFDA         	movff	sprintf@ap+1,fsr2h
  6463  000A90  CFDE F0A6          	movff	postinc2,sprintf@val
  6464  000A94  CFDD F0A7          	movff	postdec2,sprintf@val+1
  6465  000A98  0E00               	movlw	0
  6466  000A9A  BFA7               	btfsc	(sprintf@val+1)& (0+255),7,b
  6467  000A9C  0EFF               	movlw	-1
  6468  000A9E  6FA8               	movwf	(sprintf@val+2)& (0+255),b
  6469  000AA0  6FA9               	movwf	(sprintf@val+3)& (0+255),b
  6470  000AA2                     
  6471                           ; BSR set to: 0
  6472  000AA2  0E02               	movlw	2
  6473  000AA4  279C               	addwf	sprintf@ap& (0+255),f,b
  6474  000AA6  0E00               	movlw	0
  6475  000AA8  239D               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6476  000AAA                     
  6477                           ; BSR set to: 0
  6478                           ;doprnt.c: 1287: if((long)val < 0) {
  6479  000AAA  BFA9               	btfsc	(sprintf@val+3)& (0+255),7,b
  6480  000AAC  EF5C  F005         	goto	u8090
  6481  000AB0  EF5A  F005         	goto	u8091
  6482  000AB4                     u8091:
  6483  000AB4  EF7A  F005         	goto	l6922
  6484  000AB8                     u8090:
  6485  000AB8                     
  6486                           ; BSR set to: 0
  6487                           ;doprnt.c: 1288: flag |= 0x03;
  6488  000AB8  0E03               	movlw	3
  6489  000ABA  13A0               	iorwf	sprintf@flag& (0+255),f,b
  6490  000ABC                     
  6491                           ; BSR set to: 0
  6492                           ;doprnt.c: 1289: val = -val;
  6493  000ABC  1FA9               	comf	(sprintf@val+3)& (0+255),f,b
  6494  000ABE  1FA8               	comf	(sprintf@val+2)& (0+255),f,b
  6495  000AC0  1FA7               	comf	(sprintf@val+1)& (0+255),f,b
  6496  000AC2  6DA6               	negf	sprintf@val& (0+255),b
  6497  000AC4  0E00               	movlw	0
  6498  000AC6  23A7               	addwfc	(sprintf@val+1)& (0+255),f,b
  6499  000AC8  23A8               	addwfc	(sprintf@val+2)& (0+255),f,b
  6500  000ACA  23A9               	addwfc	(sprintf@val+3)& (0+255),f,b
  6501  000ACC  EF7A  F005         	goto	l6922
  6502  000AD0                     l6918:
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  6506  000AD0  C09C  FFD9         	movff	sprintf@ap,fsr2l
  6507  000AD4  C09D  FFDA         	movff	sprintf@ap+1,fsr2h
  6508  000AD8  CFDE F092          	movff	postinc2,??_sprintf
  6509  000ADC  CFDD F093          	movff	postdec2,??_sprintf+1
  6510  000AE0  C092  F0A6         	movff	??_sprintf,sprintf@val
  6511  000AE4  C093  F0A7         	movff	??_sprintf+1,sprintf@val+1
  6512  000AE8  6BA8               	clrf	(sprintf@val+2)& (0+255),b
  6513  000AEA  6BA9               	clrf	(sprintf@val+3)& (0+255),b
  6514  000AEC                     
  6515                           ; BSR set to: 0
  6516  000AEC  0E02               	movlw	2
  6517  000AEE  279C               	addwf	sprintf@ap& (0+255),f,b
  6518  000AF0  0E00               	movlw	0
  6519  000AF2  239D               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6520  000AF4                     l6922:
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;doprnt.c: 1313: };doprnt.c: 1316: if(prec == 0 && val == 0)
  6524  000AF4  51B2               	movf	sprintf@prec& (0+255),w,b
  6525  000AF6  11B3               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6526  000AF8  A4D8               	btfss	status,2,c
  6527  000AFA  EF81  F005         	goto	u8101
  6528  000AFE  EF83  F005         	goto	u8100
  6529  000B02                     u8101:
  6530  000B02  EF90  F005         	goto	l6928
  6531  000B06                     u8100:
  6532  000B06                     
  6533                           ; BSR set to: 0
  6534  000B06  51A6               	movf	sprintf@val& (0+255),w,b
  6535  000B08  11A7               	iorwf	(sprintf@val+1)& (0+255),w,b
  6536  000B0A  11A8               	iorwf	(sprintf@val+2)& (0+255),w,b
  6537  000B0C  11A9               	iorwf	(sprintf@val+3)& (0+255),w,b
  6538  000B0E  A4D8               	btfss	status,2,c
  6539  000B10  EF8C  F005         	goto	u8111
  6540  000B14  EF8E  F005         	goto	u8110
  6541  000B18                     u8111:
  6542  000B18  EF90  F005         	goto	l6928
  6543  000B1C                     u8110:
  6544  000B1C                     
  6545                           ; BSR set to: 0
  6546                           ;doprnt.c: 1317: prec++;
  6547  000B1C  4BB2               	infsnz	sprintf@prec& (0+255),f,b
  6548  000B1E  2BB3               	incf	(sprintf@prec+1)& (0+255),f,b
  6549  000B20                     l6928:
  6550                           
  6551                           ; BSR set to: 0
  6552                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6553  000B20  0E01               	movlw	1
  6554  000B22  6FB4               	movwf	sprintf@c& (0+255),b
  6555  000B24                     l6930:
  6556                           
  6557                           ; BSR set to: 0
  6558  000B24  0E0A               	movlw	10
  6559  000B26  19B4               	xorwf	sprintf@c& (0+255),w,b
  6560  000B28  A4D8               	btfss	status,2,c
  6561  000B2A  EF99  F005         	goto	u8121
  6562  000B2E  EF9B  F005         	goto	u8120
  6563  000B32                     u8121:
  6564  000B32  EF9D  F005         	goto	l6934
  6565  000B36                     u8120:
  6566  000B36  EFBD  F005         	goto	l6942
  6567  000B3A                     l6934:
  6568                           
  6569                           ; BSR set to: 0
  6570                           ;doprnt.c: 1332: if(val < dpowers[c])
  6571  000B3A  51B4               	movf	sprintf@c& (0+255),w,b
  6572  000B3C  0D04               	mullw	4
  6573  000B3E  0E77               	movlw	low _dpowers
  6574  000B40  24F3               	addwf	243,w,c
  6575  000B42  6EF6               	movwf	tblptrl,c
  6576  000B44  0E5F               	movlw	high _dpowers
  6577  000B46  20F4               	addwfc	244,w,c
  6578  000B48  6EF7               	movwf	tblptrh,c
  6579  000B4A                     	if	0	;There are less than 3 active tblptr bytes
  6580  000B4A                     	endif
  6581  000B4A  0009               	tblrd		*+
  6582  000B4C  50F5               	movf	tablat,w,c
  6583  000B4E  5DA6               	subwf	sprintf@val& (0+255),w,b
  6584  000B50  0009               	tblrd		*+
  6585  000B52  50F5               	movf	tablat,w,c
  6586  000B54  59A7               	subwfb	(sprintf@val+1)& (0+255),w,b
  6587  000B56  0009               	tblrd		*+
  6588  000B58  50F5               	movf	tablat,w,c
  6589  000B5A  59A8               	subwfb	(sprintf@val+2)& (0+255),w,b
  6590  000B5C  0009               	tblrd		*+
  6591  000B5E  50F5               	movf	tablat,w,c
  6592  000B60  59A9               	subwfb	(sprintf@val+3)& (0+255),w,b
  6593  000B62  B0D8               	btfsc	status,0,c
  6594  000B64  EFB6  F005         	goto	u8131
  6595  000B68  EFB8  F005         	goto	u8130
  6596  000B6C                     u8131:
  6597  000B6C  EFBA  F005         	goto	l6938
  6598  000B70                     u8130:
  6599  000B70  EFBD  F005         	goto	l6942
  6600  000B74                     l6938:
  6601                           
  6602                           ; BSR set to: 0
  6603  000B74  2BB4               	incf	sprintf@c& (0+255),f,b
  6604  000B76  EF92  F005         	goto	l6930
  6605  000B7A                     l6942:
  6606                           
  6607                           ; BSR set to: 0
  6608                           ;doprnt.c: 1365: if(c < prec)
  6609  000B7A  51B4               	movf	sprintf@c& (0+255),w,b
  6610  000B7C  6F92               	movwf	??_sprintf& (0+255),b
  6611  000B7E  6B93               	clrf	(??_sprintf+1)& (0+255),b
  6612  000B80  51B2               	movf	sprintf@prec& (0+255),w,b
  6613  000B82  5D92               	subwf	??_sprintf& (0+255),w,b
  6614  000B84  5193               	movf	(??_sprintf+1)& (0+255),w,b
  6615  000B86  0A80               	xorlw	128
  6616  000B88  6F94               	movwf	(??_sprintf+2)& (0+255),b
  6617  000B8A  51B3               	movf	(sprintf@prec+1)& (0+255),w,b
  6618  000B8C  0A80               	xorlw	128
  6619  000B8E  5994               	subwfb	(??_sprintf+2)& (0+255),w,b
  6620  000B90  B0D8               	btfsc	status,0,c
  6621  000B92  EFCD  F005         	goto	u8141
  6622  000B96  EFCF  F005         	goto	u8140
  6623  000B9A                     u8141:
  6624  000B9A  EFD3  F005         	goto	l6946
  6625  000B9E                     u8140:
  6626  000B9E                     
  6627                           ; BSR set to: 0
  6628                           ;doprnt.c: 1366: c = (char)prec;
  6629  000B9E  C0B2  F0B4         	movff	sprintf@prec,sprintf@c
  6630  000BA2  EFE8  F005         	goto	l6950
  6631  000BA6                     l6946:
  6632                           
  6633                           ; BSR set to: 0
  6634                           ;doprnt.c: 1367: else if(prec < c)
  6635  000BA6  51B4               	movf	sprintf@c& (0+255),w,b
  6636  000BA8  6F92               	movwf	??_sprintf& (0+255),b
  6637  000BAA  6B93               	clrf	(??_sprintf+1)& (0+255),b
  6638  000BAC  5192               	movf	??_sprintf& (0+255),w,b
  6639  000BAE  5DB2               	subwf	sprintf@prec& (0+255),w,b
  6640  000BB0  51B3               	movf	(sprintf@prec+1)& (0+255),w,b
  6641  000BB2  0A80               	xorlw	128
  6642  000BB4  6F94               	movwf	(??_sprintf+2)& (0+255),b
  6643  000BB6  5193               	movf	(??_sprintf+1)& (0+255),w,b
  6644  000BB8  0A80               	xorlw	128
  6645  000BBA  5994               	subwfb	(??_sprintf+2)& (0+255),w,b
  6646  000BBC  B0D8               	btfsc	status,0,c
  6647  000BBE  EFE3  F005         	goto	u8151
  6648  000BC2  EFE5  F005         	goto	u8150
  6649  000BC6                     u8151:
  6650  000BC6  EFE8  F005         	goto	l6950
  6651  000BCA                     u8150:
  6652  000BCA                     
  6653                           ; BSR set to: 0
  6654                           ;doprnt.c: 1368: prec = c;
  6655  000BCA  C0B4  F0B2         	movff	sprintf@c,sprintf@prec
  6656  000BCE  6BB3               	clrf	(sprintf@prec+1)& (0+255),b
  6657  000BD0                     l6950:
  6658                           
  6659                           ; BSR set to: 0
  6660                           ;doprnt.c: 1371: if(width && flag & 0x03)
  6661  000BD0  51AC               	movf	sprintf@width& (0+255),w,b
  6662  000BD2  11AD               	iorwf	(sprintf@width+1)& (0+255),w,b
  6663  000BD4  B4D8               	btfsc	status,2,c
  6664  000BD6  EFEF  F005         	goto	u8161
  6665  000BDA  EFF1  F005         	goto	u8160
  6666  000BDE                     u8161:
  6667  000BDE  EF03  F006         	goto	l6956
  6668  000BE2                     u8160:
  6669  000BE2                     
  6670                           ; BSR set to: 0
  6671  000BE2  0E03               	movlw	3
  6672  000BE4  15A0               	andwf	sprintf@flag& (0+255),w,b
  6673  000BE6  6F92               	movwf	??_sprintf& (0+255),b
  6674  000BE8  0E00               	movlw	0
  6675  000BEA  15A1               	andwf	(sprintf@flag+1)& (0+255),w,b
  6676  000BEC  6F93               	movwf	(??_sprintf+1)& (0+255),b
  6677  000BEE  5192               	movf	??_sprintf& (0+255),w,b
  6678  000BF0  1193               	iorwf	(??_sprintf+1)& (0+255),w,b
  6679  000BF2  B4D8               	btfsc	status,2,c
  6680  000BF4  EFFE  F005         	goto	u8171
  6681  000BF8  EF00  F006         	goto	u8170
  6682  000BFC                     u8171:
  6683  000BFC  EF03  F006         	goto	l6956
  6684  000C00                     u8170:
  6685  000C00                     
  6686                           ; BSR set to: 0
  6687                           ;doprnt.c: 1372: width--;
  6688  000C00  07AC               	decf	sprintf@width& (0+255),f,b
  6689  000C02  A0D8               	btfss	status,0,c
  6690  000C04  07AD               	decf	(sprintf@width+1)& (0+255),f,b
  6691  000C06                     l6956:
  6692                           
  6693                           ; BSR set to: 0
  6694                           ;doprnt.c: 1374: if(flag & 0x4000) {
  6695  000C06  ADA1               	btfss	(sprintf@flag+1)& (0+255),6,b
  6696  000C08  EF08  F006         	goto	u8181
  6697  000C0C  EF0A  F006         	goto	u8180
  6698  000C10                     u8181:
  6699  000C10  EF23  F006         	goto	l6964
  6700  000C14                     u8180:
  6701  000C14                     
  6702                           ; BSR set to: 0
  6703                           ;doprnt.c: 1375: if(width > prec)
  6704  000C14  51AC               	movf	sprintf@width& (0+255),w,b
  6705  000C16  5DB2               	subwf	sprintf@prec& (0+255),w,b
  6706  000C18  51B3               	movf	(sprintf@prec+1)& (0+255),w,b
  6707  000C1A  0A80               	xorlw	128
  6708  000C1C  6F92               	movwf	??_sprintf& (0+255),b
  6709  000C1E  51AD               	movf	(sprintf@width+1)& (0+255),w,b
  6710  000C20  0A80               	xorlw	128
  6711  000C22  5992               	subwfb	??_sprintf& (0+255),w,b
  6712  000C24  B0D8               	btfsc	status,0,c
  6713  000C26  EF17  F006         	goto	u8191
  6714  000C2A  EF19  F006         	goto	u8190
  6715  000C2E                     u8191:
  6716  000C2E  EF1F  F006         	goto	l6962
  6717  000C32                     u8190:
  6718  000C32                     
  6719                           ; BSR set to: 0
  6720                           ;doprnt.c: 1376: width -= prec;
  6721  000C32  51B2               	movf	sprintf@prec& (0+255),w,b
  6722  000C34  5FAC               	subwf	sprintf@width& (0+255),f,b
  6723  000C36  51B3               	movf	(sprintf@prec+1)& (0+255),w,b
  6724  000C38  5BAD               	subwfb	(sprintf@width+1)& (0+255),f,b
  6725  000C3A  EF23  F006         	goto	l6964
  6726  000C3E                     l6962:
  6727                           
  6728                           ; BSR set to: 0
  6729                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  6730  000C3E  0E00               	movlw	0
  6731  000C40  6FAD               	movwf	(sprintf@width+1)& (0+255),b
  6732  000C42  0E00               	movlw	0
  6733  000C44  6FAC               	movwf	sprintf@width& (0+255),b
  6734  000C46                     l6964:
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  6738  000C46  51B4               	movf	sprintf@c& (0+255),w,b
  6739  000C48  6F92               	movwf	??_sprintf& (0+255),b
  6740  000C4A  6B93               	clrf	(??_sprintf+1)& (0+255),b
  6741  000C4C  51AC               	movf	sprintf@width& (0+255),w,b
  6742  000C4E  5D92               	subwf	??_sprintf& (0+255),w,b
  6743  000C50  5193               	movf	(??_sprintf+1)& (0+255),w,b
  6744  000C52  0A80               	xorlw	128
  6745  000C54  6F94               	movwf	(??_sprintf+2)& (0+255),b
  6746  000C56  51AD               	movf	(sprintf@width+1)& (0+255),w,b
  6747  000C58  0A80               	xorlw	128
  6748  000C5A  5994               	subwfb	(??_sprintf+2)& (0+255),w,b
  6749  000C5C  B0D8               	btfsc	status,0,c
  6750  000C5E  EF33  F006         	goto	u8201
  6751  000C62  EF35  F006         	goto	u8200
  6752  000C66                     u8201:
  6753  000C66  EF3B  F006         	goto	l6968
  6754  000C6A                     u8200:
  6755  000C6A                     
  6756                           ; BSR set to: 0
  6757                           ;doprnt.c: 1408: width -= c;
  6758  000C6A  51B4               	movf	sprintf@c& (0+255),w,b
  6759  000C6C  5FAC               	subwf	sprintf@width& (0+255),f,b
  6760  000C6E  0E00               	movlw	0
  6761  000C70  5BAD               	subwfb	(sprintf@width+1)& (0+255),f,b
  6762  000C72  EF3F  F006         	goto	l6970
  6763  000C76                     l6968:
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  6767  000C76  0E00               	movlw	0
  6768  000C78  6FAD               	movwf	(sprintf@width+1)& (0+255),b
  6769  000C7A  0E00               	movlw	0
  6770  000C7C  6FAC               	movwf	sprintf@width& (0+255),b
  6771  000C7E                     l6970:
  6772                           
  6773                           ; BSR set to: 0
  6774                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  6775  000C7E  51AC               	movf	sprintf@width& (0+255),w,b
  6776  000C80  11AD               	iorwf	(sprintf@width+1)& (0+255),w,b
  6777  000C82  B4D8               	btfsc	status,2,c
  6778  000C84  EF46  F006         	goto	u8211
  6779  000C88  EF48  F006         	goto	u8210
  6780  000C8C                     u8211:
  6781  000C8C  EF5C  F006         	goto	l6978
  6782  000C90                     u8210:
  6783  000C90                     l6972:
  6784                           
  6785                           ; BSR set to: 0
  6786                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  6787  000C90  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6788  000C94  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6789  000C98  0E20               	movlw	32
  6790  000C9A  6EDF               	movwf	indf2,c
  6791  000C9C                     
  6792                           ; BSR set to: 0
  6793  000C9C  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6794  000C9E  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6795  000CA0                     
  6796                           ; BSR set to: 0
  6797                           ;doprnt.c: 1457: while(--width);
  6798  000CA0  07AC               	decf	sprintf@width& (0+255),f,b
  6799  000CA2  A0D8               	btfss	status,0,c
  6800  000CA4  07AD               	decf	(sprintf@width+1)& (0+255),f,b
  6801  000CA6  51AC               	movf	sprintf@width& (0+255),w,b
  6802  000CA8  11AD               	iorwf	(sprintf@width+1)& (0+255),w,b
  6803  000CAA  A4D8               	btfss	status,2,c
  6804  000CAC  EF5A  F006         	goto	u8221
  6805  000CB0  EF5C  F006         	goto	u8220
  6806  000CB4                     u8221:
  6807  000CB4  EF48  F006         	goto	l6972
  6808  000CB8                     u8220:
  6809  000CB8                     l6978:
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;doprnt.c: 1464: if(flag & 0x03)
  6813  000CB8  0E03               	movlw	3
  6814  000CBA  15A0               	andwf	sprintf@flag& (0+255),w,b
  6815  000CBC  6F92               	movwf	??_sprintf& (0+255),b
  6816  000CBE  0E00               	movlw	0
  6817  000CC0  15A1               	andwf	(sprintf@flag+1)& (0+255),w,b
  6818  000CC2  6F93               	movwf	(??_sprintf+1)& (0+255),b
  6819  000CC4  5192               	movf	??_sprintf& (0+255),w,b
  6820  000CC6  1193               	iorwf	(??_sprintf+1)& (0+255),w,b
  6821  000CC8  B4D8               	btfsc	status,2,c
  6822  000CCA  EF69  F006         	goto	u8231
  6823  000CCE  EF6B  F006         	goto	u8230
  6824  000CD2                     u8231:
  6825  000CD2  EFB9  F006         	goto	l6990
  6826  000CD6                     u8230:
  6827  000CD6                     
  6828                           ; BSR set to: 0
  6829                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  6830  000CD6  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6831  000CDA  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6832  000CDE  0E2D               	movlw	45
  6833  000CE0  6EDF               	movwf	indf2,c
  6834  000CE2                     l6982:
  6835                           
  6836                           ; BSR set to: 0
  6837  000CE2  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6838  000CE4  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6839  000CE6  EFB9  F006         	goto	l6990
  6840  000CEA                     l6984:
  6841                           
  6842                           ; BSR set to: 0
  6843                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  6844  000CEA  C0B2  F092         	movff	sprintf@prec,??_sprintf
  6845  000CEE  C0B3  F093         	movff	sprintf@prec+1,??_sprintf+1
  6846  000CF2  90D8               	bcf	status,0,c
  6847  000CF4  3792               	rlcf	??_sprintf& (0+255),f,b
  6848  000CF6  3793               	rlcf	(??_sprintf+1)& (0+255),f,b
  6849  000CF8  90D8               	bcf	status,0,c
  6850  000CFA  3792               	rlcf	??_sprintf& (0+255),f,b
  6851  000CFC  3793               	rlcf	(??_sprintf+1)& (0+255),f,b
  6852  000CFE  0E77               	movlw	low _dpowers
  6853  000D00  2592               	addwf	??_sprintf& (0+255),w,b
  6854  000D02  6EF6               	movwf	tblptrl,c
  6855  000D04  0E5F               	movlw	high _dpowers
  6856  000D06  2193               	addwfc	(??_sprintf+1)& (0+255),w,b
  6857  000D08  6EF7               	movwf	tblptrh,c
  6858  000D0A                     	if	0	;There are less than 3 active tblptr bytes
  6859  000D0A                     	endif
  6860  000D0A  0009               	tblrd		*+
  6861  000D0C  CFF5 F006          	movff	tablat,___lldiv@divisor
  6862  000D10  0009               	tblrd		*+
  6863  000D12  CFF5 F007          	movff	tablat,___lldiv@divisor+1
  6864  000D16  0009               	tblrd		*+
  6865  000D18  CFF5 F008          	movff	tablat,___lldiv@divisor+2
  6866  000D1C  000A               	tblrd		*-
  6867  000D1E  CFF5 F009          	movff	tablat,___lldiv@divisor+3
  6868  000D22  C0A6  F002         	movff	sprintf@val,___lldiv@dividend
  6869  000D26  C0A7  F003         	movff	sprintf@val+1,___lldiv@dividend+1
  6870  000D2A  C0A8  F004         	movff	sprintf@val+2,___lldiv@dividend+2
  6871  000D2E  C0A9  F005         	movff	sprintf@val+3,___lldiv@dividend+3
  6872  000D32  ECEF  F01E         	call	___lldiv	;wreg free
  6873  000D36  C002  F00F         	movff	?___lldiv,___llmod@dividend
  6874  000D3A  C003  F010         	movff	?___lldiv+1,___llmod@dividend+1
  6875  000D3E  C004  F011         	movff	?___lldiv+2,___llmod@dividend+2
  6876  000D42  C005  F012         	movff	?___lldiv+3,___llmod@dividend+3
  6877  000D46  0E0A               	movlw	10
  6878  000D48  6E13               	movwf	___llmod@divisor^0,c
  6879  000D4A  0E00               	movlw	0
  6880  000D4C  6E14               	movwf	(___llmod@divisor+1)^0,c
  6881  000D4E  0E00               	movlw	0
  6882  000D50  6E15               	movwf	(___llmod@divisor+2)^0,c
  6883  000D52  0E00               	movlw	0
  6884  000D54  6E16               	movwf	(___llmod@divisor+3)^0,c
  6885  000D56  EC93  F01F         	call	___llmod	;wreg free
  6886  000D5A  500F               	movf	?___llmod^0,w,c
  6887  000D5C  0F30               	addlw	48
  6888  000D5E  0100               	movlb	0	; () banked
  6889  000D60  6FB4               	movwf	sprintf@c& (0+255),b
  6890  000D62                     
  6891                           ; BSR set to: 0
  6892                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  6893  000D62  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6894  000D66  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6895  000D6A  C0B4  FFDF         	movff	sprintf@c,indf2
  6896  000D6E  EF71  F006         	goto	l6982
  6897  000D72                     l6990:
  6898                           
  6899                           ; BSR set to: 0
  6900  000D72  07B2               	decf	sprintf@prec& (0+255),f,b
  6901  000D74  A0D8               	btfss	status,0,c
  6902  000D76  07B3               	decf	(sprintf@prec+1)& (0+255),f,b
  6903  000D78  29B2               	incf	sprintf@prec& (0+255),w,b
  6904  000D7A  E106               	bnz	u8241
  6905  000D7C  29B3               	incf	(sprintf@prec+1)& (0+255),w,b
  6906  000D7E  A4D8               	btfss	status,2,c
  6907  000D80  EFC4  F006         	goto	u8241
  6908  000D84  EFC6  F006         	goto	u8240
  6909  000D88                     u8241:
  6910  000D88  EF75  F006         	goto	l6984
  6911  000D8C                     u8240:
  6912  000D8C                     l6992:
  6913                           
  6914                           ; BSR set to: 0
  6915  000D8C  C08C  FFF6         	movff	sprintf@f,tblptrl
  6916  000D90  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  6917  000D94  4B8C               	infsnz	sprintf@f& (0+255),f,b
  6918  000D96  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
  6919  000D98                     	if	0	;tblptru may be non-zero
  6920  000D98                     	endif
  6921  000D98                     	if	0	;tblptru may be non-zero
  6922  000D98                     	endif
  6923  000D98  0008               	tblrd		*
  6924  000D9A  CFF5 F0B4          	movff	tablat,sprintf@c
  6925  000D9E  51B4               	movf	sprintf@c& (0+255),w,b
  6926  000DA0  A4D8               	btfss	status,2,c
  6927  000DA2  EFD5  F006         	goto	u8251
  6928  000DA6  EFD7  F006         	goto	u8250
  6929  000DAA                     u8251:
  6930  000DAA  EF10  F000         	goto	l6668
  6931  000DAE                     u8250:
  6932  000DAE                     l6994:
  6933                           
  6934                           ; BSR set to: 0
  6935                           ;doprnt.c: 1564: *sp = 0;
  6936  000DAE  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6937  000DB2  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6938  000DB6  0E00               	movlw	0
  6939  000DB8  6EDF               	movwf	indf2,c
  6940  000DBA                     
  6941                           ; BSR set to: 0
  6942  000DBA  0012               	return		;funcret
  6943  000DBC                     __end_of_sprintf:
  6944                           	callstack 0
  6945                           
  6946 ;; *************** function _scale *****************
  6947 ;; Defined at:
  6948 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  6949 ;; Parameters:    Size  Location     Type
  6950 ;;  scl             1    wreg     char 
  6951 ;; Auto vars:     Size  Location     Type
  6952 ;;  scl             1   90[COMRAM] char 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  4   82[COMRAM] char 
  6955 ;; Registers used:
  6956 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6962 ;;      Params:         4       0       0       0       0       0       0       0       0
  6963 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6964 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6965 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6966 ;;Total ram usage:        9 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    5
  6969 ;; This function calls:
  6970 ;;		___awdiv
  6971 ;;		___awmod
  6972 ;;		___flmul
  6973 ;; This function is called by:
  6974 ;;		_sprintf
  6975 ;; This function uses a non-reentrant model
  6976 ;;
  6977                           
  6978                           	psect	text21
  6979  0016AA                     __ptext21:
  6980                           	callstack 0
  6981  0016AA                     _scale:
  6982                           	callstack 23
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;incstack = 0
  6986                           ;scale@scl stored from wreg
  6987  0016AA  6E5B               	movwf	scale@scl^0,c
  6988  0016AC                     
  6989                           ;doprnt.c: 436: if(scl < 0) {
  6990  0016AC  BE5B               	btfsc	scale@scl^0,7,c
  6991  0016AE  EF5D  F00B         	goto	u7290
  6992  0016B2  EF5B  F00B         	goto	u7291
  6993  0016B6                     u7291:
  6994  0016B6  EF5D  F00C         	goto	l6388
  6995  0016BA                     u7290:
  6996  0016BA                     
  6997                           ;doprnt.c: 437: scl = -scl;
  6998  0016BA  6C5B               	negf	scale@scl^0,c
  6999                           
  7000                           ;doprnt.c: 438: if(scl>=110)
  7001  0016BC  505B               	movf	scale@scl^0,w,c
  7002  0016BE  0A80               	xorlw	128
  7003  0016C0  0F12               	addlw	-238
  7004  0016C2  A0D8               	btfss	status,0,c
  7005  0016C4  EF66  F00B         	goto	u7301
  7006  0016C8  EF68  F00B         	goto	u7300
  7007  0016CC                     u7301:
  7008  0016CC  EFF1  F00B         	goto	l6378
  7009  0016D0                     u7300:
  7010  0016D0                     
  7011                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  7012  0016D0  0E00               	movlw	0
  7013  0016D2  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7014  0016D4  0E0A               	movlw	10
  7015  0016D6  6E0A               	movwf	___awdiv@divisor^0,c
  7016  0016D8  0E00               	movlw	0
  7017  0016DA  6E05               	movwf	(___awmod@divisor+1)^0,c
  7018  0016DC  0E64               	movlw	100
  7019  0016DE  6E04               	movwf	___awmod@divisor^0,c
  7020  0016E0  505B               	movf	scale@scl^0,w,c
  7021  0016E2  6E02               	movwf	___awmod@dividend^0,c
  7022  0016E4  6A03               	clrf	(___awmod@dividend+1)^0,c
  7023  0016E6  BE02               	btfsc	___awmod@dividend^0,7,c
  7024  0016E8  0603               	decf	(___awmod@dividend+1)^0,f,c
  7025  0016EA  EC42  F01E         	call	___awmod	;wreg free
  7026  0016EE  C002  F008         	movff	?___awmod,___awdiv@dividend
  7027  0016F2  C003  F009         	movff	?___awmod+1,___awdiv@dividend+1
  7028  0016F6  ECE0  F01D         	call	___awdiv	;wreg free
  7029  0016FA  0E09               	movlw	9
  7030  0016FC  2608               	addwf	?___awdiv^0,f,c
  7031  0016FE  5008               	movf	?___awdiv^0,w,c
  7032  001700  0D04               	mullw	4
  7033  001702  0E1B               	movlw	low __npowers_
  7034  001704  24F3               	addwf	243,w,c
  7035  001706  6EF6               	movwf	tblptrl,c
  7036  001708  0E5F               	movlw	high __npowers_
  7037  00170A  20F4               	addwfc	244,w,c
  7038  00170C  6EF7               	movwf	tblptrh,c
  7039  00170E                     	if	0	;There are less than 3 active tblptr bytes
  7040  00170E                     	endif
  7041  00170E  0009               	tblrd		*+
  7042  001710  CFF5 F04B          	movff	tablat,___flmul@a
  7043  001714  0009               	tblrd		*+
  7044  001716  CFF5 F04C          	movff	tablat,___flmul@a+1
  7045  00171A  0009               	tblrd		*+
  7046  00171C  CFF5 F04D          	movff	tablat,___flmul@a+2
  7047  001720  000A               	tblrd		*-
  7048  001722  CFF5 F04E          	movff	tablat,___flmul@a+3
  7049  001726  0E00               	movlw	0
  7050  001728  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7051  00172A  0E64               	movlw	100
  7052  00172C  6E0A               	movwf	___awdiv@divisor^0,c
  7053  00172E  505B               	movf	scale@scl^0,w,c
  7054  001730  6E08               	movwf	___awdiv@dividend^0,c
  7055  001732  6A09               	clrf	(___awdiv@dividend+1)^0,c
  7056  001734  BE08               	btfsc	___awdiv@dividend^0,7,c
  7057  001736  0609               	decf	(___awdiv@dividend+1)^0,f,c
  7058  001738  ECE0  F01D         	call	___awdiv	;wreg free
  7059  00173C  0E12               	movlw	18
  7060  00173E  2608               	addwf	?___awdiv^0,f,c
  7061  001740  5008               	movf	?___awdiv^0,w,c
  7062  001742  0D04               	mullw	4
  7063  001744  0E1B               	movlw	low __npowers_
  7064  001746  24F3               	addwf	243,w,c
  7065  001748  6EF6               	movwf	tblptrl,c
  7066  00174A  0E5F               	movlw	high __npowers_
  7067  00174C  20F4               	addwfc	244,w,c
  7068  00174E  6EF7               	movwf	tblptrh,c
  7069  001750                     	if	0	;There are less than 3 active tblptr bytes
  7070  001750                     	endif
  7071  001750  0009               	tblrd		*+
  7072  001752  CFF5 F047          	movff	tablat,___flmul@b
  7073  001756  0009               	tblrd		*+
  7074  001758  CFF5 F048          	movff	tablat,___flmul@b+1
  7075  00175C  0009               	tblrd		*+
  7076  00175E  CFF5 F049          	movff	tablat,___flmul@b+2
  7077  001762  000A               	tblrd		*-
  7078  001764  CFF5 F04A          	movff	tablat,___flmul@b+3
  7079  001768  EC3F  F009         	call	___flmul	;wreg free
  7080  00176C  C047  F057         	movff	?___flmul,_scale$2372
  7081  001770  C048  F058         	movff	?___flmul+1,_scale$2372+1
  7082  001774  C049  F059         	movff	?___flmul+2,_scale$2372+2
  7083  001778  C04A  F05A         	movff	?___flmul+3,_scale$2372+3
  7084                           
  7085                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  7086  00177C  C057  F047         	movff	_scale$2372,___flmul@b
  7087  001780  C058  F048         	movff	_scale$2372+1,___flmul@b+1
  7088  001784  C059  F049         	movff	_scale$2372+2,___flmul@b+2
  7089  001788  C05A  F04A         	movff	_scale$2372+3,___flmul@b+3
  7090  00178C  0E00               	movlw	0
  7091  00178E  6E05               	movwf	(___awmod@divisor+1)^0,c
  7092  001790  0E0A               	movlw	10
  7093  001792  6E04               	movwf	___awmod@divisor^0,c
  7094  001794  505B               	movf	scale@scl^0,w,c
  7095  001796  6E02               	movwf	___awmod@dividend^0,c
  7096  001798  6A03               	clrf	(___awmod@dividend+1)^0,c
  7097  00179A  BE02               	btfsc	___awmod@dividend^0,7,c
  7098  00179C  0603               	decf	(___awmod@dividend+1)^0,f,c
  7099  00179E  EC42  F01E         	call	___awmod	;wreg free
  7100  0017A2  5002               	movf	?___awmod^0,w,c
  7101  0017A4  0D04               	mullw	4
  7102  0017A6  0E1B               	movlw	low __npowers_
  7103  0017A8  24F3               	addwf	243,w,c
  7104  0017AA  6EF6               	movwf	tblptrl,c
  7105  0017AC  0E5F               	movlw	high __npowers_
  7106  0017AE  20F4               	addwfc	244,w,c
  7107  0017B0  6EF7               	movwf	tblptrh,c
  7108  0017B2                     	if	0	;There are less than 3 active tblptr bytes
  7109  0017B2                     	endif
  7110  0017B2  0009               	tblrd		*+
  7111  0017B4  CFF5 F04B          	movff	tablat,___flmul@a
  7112  0017B8  0009               	tblrd		*+
  7113  0017BA  CFF5 F04C          	movff	tablat,___flmul@a+1
  7114  0017BE  0009               	tblrd		*+
  7115  0017C0  CFF5 F04D          	movff	tablat,___flmul@a+2
  7116  0017C4  000A               	tblrd		*-
  7117  0017C6  CFF5 F04E          	movff	tablat,___flmul@a+3
  7118  0017CA  EC3F  F009         	call	___flmul	;wreg free
  7119  0017CE  C047  F053         	movff	?___flmul,?_scale
  7120  0017D2  C048  F054         	movff	?___flmul+1,?_scale+1
  7121  0017D6  C049  F055         	movff	?___flmul+2,?_scale+2
  7122  0017DA  C04A  F056         	movff	?___flmul+3,?_scale+3
  7123  0017DE  EF5A  F00D         	goto	l687
  7124  0017E2                     l6378:
  7125                           
  7126                           ;doprnt.c: 440: else if(scl > 10)
  7127  0017E2  505B               	movf	scale@scl^0,w,c
  7128  0017E4  0A80               	xorlw	128
  7129  0017E6  0F75               	addlw	-139
  7130  0017E8  A0D8               	btfss	status,0,c
  7131  0017EA  EFF9  F00B         	goto	u7311
  7132  0017EE  EFFB  F00B         	goto	u7310
  7133  0017F2                     u7311:
  7134  0017F2  EF47  F00C         	goto	l6384
  7135  0017F6                     u7310:
  7136  0017F6                     
  7137                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  7138  0017F6  0E00               	movlw	0
  7139  0017F8  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7140  0017FA  0E0A               	movlw	10
  7141  0017FC  6E0A               	movwf	___awdiv@divisor^0,c
  7142  0017FE  505B               	movf	scale@scl^0,w,c
  7143  001800  6E08               	movwf	___awdiv@dividend^0,c
  7144  001802  6A09               	clrf	(___awdiv@dividend+1)^0,c
  7145  001804  BE08               	btfsc	___awdiv@dividend^0,7,c
  7146  001806  0609               	decf	(___awdiv@dividend+1)^0,f,c
  7147  001808  ECE0  F01D         	call	___awdiv	;wreg free
  7148  00180C  0E09               	movlw	9
  7149  00180E  2608               	addwf	?___awdiv^0,f,c
  7150  001810  5008               	movf	?___awdiv^0,w,c
  7151  001812  0D04               	mullw	4
  7152  001814  0E1B               	movlw	low __npowers_
  7153  001816  24F3               	addwf	243,w,c
  7154  001818  6EF6               	movwf	tblptrl,c
  7155  00181A  0E5F               	movlw	high __npowers_
  7156  00181C  20F4               	addwfc	244,w,c
  7157  00181E  6EF7               	movwf	tblptrh,c
  7158  001820                     	if	0	;There are less than 3 active tblptr bytes
  7159  001820                     	endif
  7160  001820  0009               	tblrd		*+
  7161  001822  CFF5 F047          	movff	tablat,___flmul@b
  7162  001826  0009               	tblrd		*+
  7163  001828  CFF5 F048          	movff	tablat,___flmul@b+1
  7164  00182C  0009               	tblrd		*+
  7165  00182E  CFF5 F049          	movff	tablat,___flmul@b+2
  7166  001832  000A               	tblrd		*-
  7167  001834  CFF5 F04A          	movff	tablat,___flmul@b+3
  7168  001838  0E00               	movlw	0
  7169  00183A  6E05               	movwf	(___awmod@divisor+1)^0,c
  7170  00183C  0E0A               	movlw	10
  7171  00183E  6E04               	movwf	___awmod@divisor^0,c
  7172  001840  505B               	movf	scale@scl^0,w,c
  7173  001842  6E02               	movwf	___awmod@dividend^0,c
  7174  001844  6A03               	clrf	(___awmod@dividend+1)^0,c
  7175  001846  BE02               	btfsc	___awmod@dividend^0,7,c
  7176  001848  0603               	decf	(___awmod@dividend+1)^0,f,c
  7177  00184A  EC42  F01E         	call	___awmod	;wreg free
  7178  00184E  5002               	movf	?___awmod^0,w,c
  7179  001850  0D04               	mullw	4
  7180  001852  0E1B               	movlw	low __npowers_
  7181  001854  24F3               	addwf	243,w,c
  7182  001856  6EF6               	movwf	tblptrl,c
  7183  001858  0E5F               	movlw	high __npowers_
  7184  00185A  20F4               	addwfc	244,w,c
  7185  00185C  6EF7               	movwf	tblptrh,c
  7186  00185E                     	if	0	;There are less than 3 active tblptr bytes
  7187  00185E                     	endif
  7188  00185E  0009               	tblrd		*+
  7189  001860  CFF5 F04B          	movff	tablat,___flmul@a
  7190  001864  0009               	tblrd		*+
  7191  001866  CFF5 F04C          	movff	tablat,___flmul@a+1
  7192  00186A  0009               	tblrd		*+
  7193  00186C  CFF5 F04D          	movff	tablat,___flmul@a+2
  7194  001870  000A               	tblrd		*-
  7195  001872  CFF5 F04E          	movff	tablat,___flmul@a+3
  7196  001876  EC3F  F009         	call	___flmul	;wreg free
  7197  00187A  C047  F053         	movff	?___flmul,?_scale
  7198  00187E  C048  F054         	movff	?___flmul+1,?_scale+1
  7199  001882  C049  F055         	movff	?___flmul+2,?_scale+2
  7200  001886  C04A  F056         	movff	?___flmul+3,?_scale+3
  7201  00188A  EF5A  F00D         	goto	l687
  7202  00188E                     l6384:
  7203                           
  7204                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  7205  00188E  505B               	movf	scale@scl^0,w,c
  7206  001890  0D04               	mullw	4
  7207  001892  0E1B               	movlw	low __npowers_
  7208  001894  24F3               	addwf	243,w,c
  7209  001896  6EF6               	movwf	tblptrl,c
  7210  001898  0E5F               	movlw	high __npowers_
  7211  00189A  20F4               	addwfc	244,w,c
  7212  00189C  6EF7               	movwf	tblptrh,c
  7213  00189E                     	if	0	;There are less than 3 active tblptr bytes
  7214  00189E                     	endif
  7215  00189E  0009               	tblrd		*+
  7216  0018A0  CFF5 F053          	movff	tablat,?_scale
  7217  0018A4  0009               	tblrd		*+
  7218  0018A6  CFF5 F054          	movff	tablat,?_scale+1
  7219  0018AA  0009               	tblrd		*+
  7220  0018AC  CFF5 F055          	movff	tablat,?_scale+2
  7221  0018B0  000A               	tblrd		*-
  7222  0018B2  CFF5 F056          	movff	tablat,?_scale+3
  7223  0018B6  EF5A  F00D         	goto	l687
  7224  0018BA                     l6388:
  7225                           
  7226                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  7227  0018BA  505B               	movf	scale@scl^0,w,c
  7228  0018BC  0A80               	xorlw	128
  7229  0018BE  0F12               	addlw	-238
  7230  0018C0  A0D8               	btfss	status,0,c
  7231  0018C2  EF65  F00C         	goto	u7321
  7232  0018C6  EF67  F00C         	goto	u7320
  7233  0018CA                     u7321:
  7234  0018CA  EFF0  F00C         	goto	l6396
  7235  0018CE                     u7320:
  7236  0018CE                     
  7237                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  7238  0018CE  0E00               	movlw	0
  7239  0018D0  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7240  0018D2  0E0A               	movlw	10
  7241  0018D4  6E0A               	movwf	___awdiv@divisor^0,c
  7242  0018D6  0E00               	movlw	0
  7243  0018D8  6E05               	movwf	(___awmod@divisor+1)^0,c
  7244  0018DA  0E64               	movlw	100
  7245  0018DC  6E04               	movwf	___awmod@divisor^0,c
  7246  0018DE  505B               	movf	scale@scl^0,w,c
  7247  0018E0  6E02               	movwf	___awmod@dividend^0,c
  7248  0018E2  6A03               	clrf	(___awmod@dividend+1)^0,c
  7249  0018E4  BE02               	btfsc	___awmod@dividend^0,7,c
  7250  0018E6  0603               	decf	(___awmod@dividend+1)^0,f,c
  7251  0018E8  EC42  F01E         	call	___awmod	;wreg free
  7252  0018EC  C002  F008         	movff	?___awmod,___awdiv@dividend
  7253  0018F0  C003  F009         	movff	?___awmod+1,___awdiv@dividend+1
  7254  0018F4  ECE0  F01D         	call	___awdiv	;wreg free
  7255  0018F8  0E09               	movlw	9
  7256  0018FA  2608               	addwf	?___awdiv^0,f,c
  7257  0018FC  5008               	movf	?___awdiv^0,w,c
  7258  0018FE  0D04               	mullw	4
  7259  001900  0EE7               	movlw	low __powers_
  7260  001902  24F3               	addwf	243,w,c
  7261  001904  6EF6               	movwf	tblptrl,c
  7262  001906  0E5E               	movlw	high __powers_
  7263  001908  20F4               	addwfc	244,w,c
  7264  00190A  6EF7               	movwf	tblptrh,c
  7265  00190C                     	if	0	;There are less than 3 active tblptr bytes
  7266  00190C                     	endif
  7267  00190C  0009               	tblrd		*+
  7268  00190E  CFF5 F04B          	movff	tablat,___flmul@a
  7269  001912  0009               	tblrd		*+
  7270  001914  CFF5 F04C          	movff	tablat,___flmul@a+1
  7271  001918  0009               	tblrd		*+
  7272  00191A  CFF5 F04D          	movff	tablat,___flmul@a+2
  7273  00191E  000A               	tblrd		*-
  7274  001920  CFF5 F04E          	movff	tablat,___flmul@a+3
  7275  001924  0E00               	movlw	0
  7276  001926  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7277  001928  0E64               	movlw	100
  7278  00192A  6E0A               	movwf	___awdiv@divisor^0,c
  7279  00192C  505B               	movf	scale@scl^0,w,c
  7280  00192E  6E08               	movwf	___awdiv@dividend^0,c
  7281  001930  6A09               	clrf	(___awdiv@dividend+1)^0,c
  7282  001932  BE08               	btfsc	___awdiv@dividend^0,7,c
  7283  001934  0609               	decf	(___awdiv@dividend+1)^0,f,c
  7284  001936  ECE0  F01D         	call	___awdiv	;wreg free
  7285  00193A  0E12               	movlw	18
  7286  00193C  2608               	addwf	?___awdiv^0,f,c
  7287  00193E  5008               	movf	?___awdiv^0,w,c
  7288  001940  0D04               	mullw	4
  7289  001942  0EE7               	movlw	low __powers_
  7290  001944  24F3               	addwf	243,w,c
  7291  001946  6EF6               	movwf	tblptrl,c
  7292  001948  0E5E               	movlw	high __powers_
  7293  00194A  20F4               	addwfc	244,w,c
  7294  00194C  6EF7               	movwf	tblptrh,c
  7295  00194E                     	if	0	;There are less than 3 active tblptr bytes
  7296  00194E                     	endif
  7297  00194E  0009               	tblrd		*+
  7298  001950  CFF5 F047          	movff	tablat,___flmul@b
  7299  001954  0009               	tblrd		*+
  7300  001956  CFF5 F048          	movff	tablat,___flmul@b+1
  7301  00195A  0009               	tblrd		*+
  7302  00195C  CFF5 F049          	movff	tablat,___flmul@b+2
  7303  001960  000A               	tblrd		*-
  7304  001962  CFF5 F04A          	movff	tablat,___flmul@b+3
  7305  001966  EC3F  F009         	call	___flmul	;wreg free
  7306  00196A  C047  F057         	movff	?___flmul,_scale$2372
  7307  00196E  C048  F058         	movff	?___flmul+1,_scale$2372+1
  7308  001972  C049  F059         	movff	?___flmul+2,_scale$2372+2
  7309  001976  C04A  F05A         	movff	?___flmul+3,_scale$2372+3
  7310                           
  7311                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  7312  00197A  C057  F047         	movff	_scale$2372,___flmul@b
  7313  00197E  C058  F048         	movff	_scale$2372+1,___flmul@b+1
  7314  001982  C059  F049         	movff	_scale$2372+2,___flmul@b+2
  7315  001986  C05A  F04A         	movff	_scale$2372+3,___flmul@b+3
  7316  00198A  0E00               	movlw	0
  7317  00198C  6E05               	movwf	(___awmod@divisor+1)^0,c
  7318  00198E  0E0A               	movlw	10
  7319  001990  6E04               	movwf	___awmod@divisor^0,c
  7320  001992  505B               	movf	scale@scl^0,w,c
  7321  001994  6E02               	movwf	___awmod@dividend^0,c
  7322  001996  6A03               	clrf	(___awmod@dividend+1)^0,c
  7323  001998  BE02               	btfsc	___awmod@dividend^0,7,c
  7324  00199A  0603               	decf	(___awmod@dividend+1)^0,f,c
  7325  00199C  EC42  F01E         	call	___awmod	;wreg free
  7326  0019A0  5002               	movf	?___awmod^0,w,c
  7327  0019A2  0D04               	mullw	4
  7328  0019A4  0EE7               	movlw	low __powers_
  7329  0019A6  24F3               	addwf	243,w,c
  7330  0019A8  6EF6               	movwf	tblptrl,c
  7331  0019AA  0E5E               	movlw	high __powers_
  7332  0019AC  20F4               	addwfc	244,w,c
  7333  0019AE  6EF7               	movwf	tblptrh,c
  7334  0019B0                     	if	0	;There are less than 3 active tblptr bytes
  7335  0019B0                     	endif
  7336  0019B0  0009               	tblrd		*+
  7337  0019B2  CFF5 F04B          	movff	tablat,___flmul@a
  7338  0019B6  0009               	tblrd		*+
  7339  0019B8  CFF5 F04C          	movff	tablat,___flmul@a+1
  7340  0019BC  0009               	tblrd		*+
  7341  0019BE  CFF5 F04D          	movff	tablat,___flmul@a+2
  7342  0019C2  000A               	tblrd		*-
  7343  0019C4  CFF5 F04E          	movff	tablat,___flmul@a+3
  7344  0019C8  EC3F  F009         	call	___flmul	;wreg free
  7345  0019CC  C047  F053         	movff	?___flmul,?_scale
  7346  0019D0  C048  F054         	movff	?___flmul+1,?_scale+1
  7347  0019D4  C049  F055         	movff	?___flmul+2,?_scale+2
  7348  0019D8  C04A  F056         	movff	?___flmul+3,?_scale+3
  7349  0019DC  EF5A  F00D         	goto	l687
  7350  0019E0                     l6396:
  7351                           
  7352                           ;doprnt.c: 446: else if(scl > 10)
  7353  0019E0  505B               	movf	scale@scl^0,w,c
  7354  0019E2  0A80               	xorlw	128
  7355  0019E4  0F75               	addlw	-139
  7356  0019E6  A0D8               	btfss	status,0,c
  7357  0019E8  EFF8  F00C         	goto	u7331
  7358  0019EC  EFFA  F00C         	goto	u7330
  7359  0019F0                     u7331:
  7360  0019F0  EF46  F00D         	goto	l6402
  7361  0019F4                     u7330:
  7362  0019F4                     
  7363                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  7364  0019F4  0E00               	movlw	0
  7365  0019F6  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7366  0019F8  0E0A               	movlw	10
  7367  0019FA  6E0A               	movwf	___awdiv@divisor^0,c
  7368  0019FC  505B               	movf	scale@scl^0,w,c
  7369  0019FE  6E08               	movwf	___awdiv@dividend^0,c
  7370  001A00  6A09               	clrf	(___awdiv@dividend+1)^0,c
  7371  001A02  BE08               	btfsc	___awdiv@dividend^0,7,c
  7372  001A04  0609               	decf	(___awdiv@dividend+1)^0,f,c
  7373  001A06  ECE0  F01D         	call	___awdiv	;wreg free
  7374  001A0A  0E09               	movlw	9
  7375  001A0C  2608               	addwf	?___awdiv^0,f,c
  7376  001A0E  5008               	movf	?___awdiv^0,w,c
  7377  001A10  0D04               	mullw	4
  7378  001A12  0EE7               	movlw	low __powers_
  7379  001A14  24F3               	addwf	243,w,c
  7380  001A16  6EF6               	movwf	tblptrl,c
  7381  001A18  0E5E               	movlw	high __powers_
  7382  001A1A  20F4               	addwfc	244,w,c
  7383  001A1C  6EF7               	movwf	tblptrh,c
  7384  001A1E                     	if	0	;There are less than 3 active tblptr bytes
  7385  001A1E                     	endif
  7386  001A1E  0009               	tblrd		*+
  7387  001A20  CFF5 F047          	movff	tablat,___flmul@b
  7388  001A24  0009               	tblrd		*+
  7389  001A26  CFF5 F048          	movff	tablat,___flmul@b+1
  7390  001A2A  0009               	tblrd		*+
  7391  001A2C  CFF5 F049          	movff	tablat,___flmul@b+2
  7392  001A30  000A               	tblrd		*-
  7393  001A32  CFF5 F04A          	movff	tablat,___flmul@b+3
  7394  001A36  0E00               	movlw	0
  7395  001A38  6E05               	movwf	(___awmod@divisor+1)^0,c
  7396  001A3A  0E0A               	movlw	10
  7397  001A3C  6E04               	movwf	___awmod@divisor^0,c
  7398  001A3E  505B               	movf	scale@scl^0,w,c
  7399  001A40  6E02               	movwf	___awmod@dividend^0,c
  7400  001A42  6A03               	clrf	(___awmod@dividend+1)^0,c
  7401  001A44  BE02               	btfsc	___awmod@dividend^0,7,c
  7402  001A46  0603               	decf	(___awmod@dividend+1)^0,f,c
  7403  001A48  EC42  F01E         	call	___awmod	;wreg free
  7404  001A4C  5002               	movf	?___awmod^0,w,c
  7405  001A4E  0D04               	mullw	4
  7406  001A50  0EE7               	movlw	low __powers_
  7407  001A52  24F3               	addwf	243,w,c
  7408  001A54  6EF6               	movwf	tblptrl,c
  7409  001A56  0E5E               	movlw	high __powers_
  7410  001A58  20F4               	addwfc	244,w,c
  7411  001A5A  6EF7               	movwf	tblptrh,c
  7412  001A5C                     	if	0	;There are less than 3 active tblptr bytes
  7413  001A5C                     	endif
  7414  001A5C  0009               	tblrd		*+
  7415  001A5E  CFF5 F04B          	movff	tablat,___flmul@a
  7416  001A62  0009               	tblrd		*+
  7417  001A64  CFF5 F04C          	movff	tablat,___flmul@a+1
  7418  001A68  0009               	tblrd		*+
  7419  001A6A  CFF5 F04D          	movff	tablat,___flmul@a+2
  7420  001A6E  000A               	tblrd		*-
  7421  001A70  CFF5 F04E          	movff	tablat,___flmul@a+3
  7422  001A74  EC3F  F009         	call	___flmul	;wreg free
  7423  001A78  C047  F053         	movff	?___flmul,?_scale
  7424  001A7C  C048  F054         	movff	?___flmul+1,?_scale+1
  7425  001A80  C049  F055         	movff	?___flmul+2,?_scale+2
  7426  001A84  C04A  F056         	movff	?___flmul+3,?_scale+3
  7427  001A88  EF5A  F00D         	goto	l687
  7428  001A8C                     l6402:
  7429                           
  7430                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  7431  001A8C  505B               	movf	scale@scl^0,w,c
  7432  001A8E  0D04               	mullw	4
  7433  001A90  0EE7               	movlw	low __powers_
  7434  001A92  24F3               	addwf	243,w,c
  7435  001A94  6EF6               	movwf	tblptrl,c
  7436  001A96  0E5E               	movlw	high __powers_
  7437  001A98  20F4               	addwfc	244,w,c
  7438  001A9A  6EF7               	movwf	tblptrh,c
  7439  001A9C                     	if	0	;There are less than 3 active tblptr bytes
  7440  001A9C                     	endif
  7441  001A9C  0009               	tblrd		*+
  7442  001A9E  CFF5 F053          	movff	tablat,?_scale
  7443  001AA2  0009               	tblrd		*+
  7444  001AA4  CFF5 F054          	movff	tablat,?_scale+1
  7445  001AA8  0009               	tblrd		*+
  7446  001AAA  CFF5 F055          	movff	tablat,?_scale+2
  7447  001AAE  000A               	tblrd		*-
  7448  001AB0  CFF5 F056          	movff	tablat,?_scale+3
  7449  001AB4                     l687:
  7450  001AB4  0012               	return		;funcret
  7451  001AB6                     __end_of_scale:
  7452                           	callstack 0
  7453                           
  7454 ;; *************** function ___awmod *****************
  7455 ;; Defined at:
  7456 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  dividend        2    1[COMRAM] int 
  7459 ;;  divisor         2    3[COMRAM] int 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;  sign            1    6[COMRAM] unsigned char 
  7462 ;;  counter         1    5[COMRAM] unsigned char 
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  2    1[COMRAM] int 
  7465 ;; Registers used:
  7466 ;;		wreg, status,2, status,0
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7472 ;;      Params:         4       0       0       0       0       0       0       0       0
  7473 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7475 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7476 ;;Total ram usage:        6 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; Hardware stack levels required when called:    4
  7479 ;; This function calls:
  7480 ;;		Nothing
  7481 ;; This function is called by:
  7482 ;;		_scale
  7483 ;; This function uses a non-reentrant model
  7484 ;;
  7485                           
  7486                           	psect	text22
  7487  003C84                     __ptext22:
  7488                           	callstack 0
  7489  003C84                     ___awmod:
  7490                           	callstack 23
  7491  003C84  0E00               	movlw	0
  7492  003C86  6E07               	movwf	___awmod@sign^0,c
  7493  003C88  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  7494  003C8A  EF4B  F01E         	goto	u6910
  7495  003C8E  EF49  F01E         	goto	u6911
  7496  003C92                     u6911:
  7497  003C92  EF51  F01E         	goto	l6186
  7498  003C96                     u6910:
  7499  003C96  6C02               	negf	___awmod@dividend^0,c
  7500  003C98  1E03               	comf	(___awmod@dividend+1)^0,f,c
  7501  003C9A  B0D8               	btfsc	status,0,c
  7502  003C9C  2A03               	incf	(___awmod@dividend+1)^0,f,c
  7503  003C9E  0E01               	movlw	1
  7504  003CA0  6E07               	movwf	___awmod@sign^0,c
  7505  003CA2                     l6186:
  7506  003CA2  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  7507  003CA4  EF58  F01E         	goto	u6920
  7508  003CA8  EF56  F01E         	goto	u6921
  7509  003CAC                     u6921:
  7510  003CAC  EF5C  F01E         	goto	l6190
  7511  003CB0                     u6920:
  7512  003CB0  6C04               	negf	___awmod@divisor^0,c
  7513  003CB2  1E05               	comf	(___awmod@divisor+1)^0,f,c
  7514  003CB4  B0D8               	btfsc	status,0,c
  7515  003CB6  2A05               	incf	(___awmod@divisor+1)^0,f,c
  7516  003CB8                     l6190:
  7517  003CB8  5004               	movf	___awmod@divisor^0,w,c
  7518  003CBA  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  7519  003CBC  B4D8               	btfsc	status,2,c
  7520  003CBE  EF63  F01E         	goto	u6931
  7521  003CC2  EF65  F01E         	goto	u6930
  7522  003CC6                     u6931:
  7523  003CC6  EF89  F01E         	goto	l6206
  7524  003CCA                     u6930:
  7525  003CCA  0E01               	movlw	1
  7526  003CCC  6E06               	movwf	___awmod@counter^0,c
  7527  003CCE  EF6D  F01E         	goto	l6196
  7528  003CD2                     l6194:
  7529  003CD2  90D8               	bcf	status,0,c
  7530  003CD4  3604               	rlcf	___awmod@divisor^0,f,c
  7531  003CD6  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  7532  003CD8  2A06               	incf	___awmod@counter^0,f,c
  7533  003CDA                     l6196:
  7534  003CDA  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  7535  003CDC  EF72  F01E         	goto	u6941
  7536  003CE0  EF74  F01E         	goto	u6940
  7537  003CE4                     u6941:
  7538  003CE4  EF69  F01E         	goto	l6194
  7539  003CE8                     u6940:
  7540  003CE8                     l6198:
  7541  003CE8  5004               	movf	___awmod@divisor^0,w,c
  7542  003CEA  5C02               	subwf	___awmod@dividend^0,w,c
  7543  003CEC  5005               	movf	(___awmod@divisor+1)^0,w,c
  7544  003CEE  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  7545  003CF0  A0D8               	btfss	status,0,c
  7546  003CF2  EF7D  F01E         	goto	u6951
  7547  003CF6  EF7F  F01E         	goto	u6950
  7548  003CFA                     u6951:
  7549  003CFA  EF83  F01E         	goto	l6202
  7550  003CFE                     u6950:
  7551  003CFE  5004               	movf	___awmod@divisor^0,w,c
  7552  003D00  5E02               	subwf	___awmod@dividend^0,f,c
  7553  003D02  5005               	movf	(___awmod@divisor+1)^0,w,c
  7554  003D04  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  7555  003D06                     l6202:
  7556  003D06  90D8               	bcf	status,0,c
  7557  003D08  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  7558  003D0A  3204               	rrcf	___awmod@divisor^0,f,c
  7559  003D0C  2E06               	decfsz	___awmod@counter^0,f,c
  7560  003D0E  EF74  F01E         	goto	l6198
  7561  003D12                     l6206:
  7562  003D12  5007               	movf	___awmod@sign^0,w,c
  7563  003D14  B4D8               	btfsc	status,2,c
  7564  003D16  EF8F  F01E         	goto	u6961
  7565  003D1A  EF91  F01E         	goto	u6960
  7566  003D1E                     u6961:
  7567  003D1E  EF95  F01E         	goto	l6210
  7568  003D22                     u6960:
  7569  003D22  6C02               	negf	___awmod@dividend^0,c
  7570  003D24  1E03               	comf	(___awmod@dividend+1)^0,f,c
  7571  003D26  B0D8               	btfsc	status,0,c
  7572  003D28  2A03               	incf	(___awmod@dividend+1)^0,f,c
  7573  003D2A                     l6210:
  7574  003D2A  C002  F002         	movff	___awmod@dividend,?___awmod
  7575  003D2E  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  7576  003D32  0012               	return		;funcret
  7577  003D34                     __end_of___awmod:
  7578                           	callstack 0
  7579                           
  7580 ;; *************** function ___awdiv *****************
  7581 ;; Defined at:
  7582 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awdiv.c"
  7583 ;; Parameters:    Size  Location     Type
  7584 ;;  dividend        2    7[COMRAM] int 
  7585 ;;  divisor         2    9[COMRAM] int 
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;  quotient        2   13[COMRAM] int 
  7588 ;;  sign            1   12[COMRAM] unsigned char 
  7589 ;;  counter         1   11[COMRAM] unsigned char 
  7590 ;; Return value:  Size  Location     Type
  7591 ;;                  2    7[COMRAM] int 
  7592 ;; Registers used:
  7593 ;;		wreg, status,2, status,0
  7594 ;; Tracked objects:
  7595 ;;		On entry : 0/0
  7596 ;;		On exit  : 0/0
  7597 ;;		Unchanged: 0/0
  7598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7599 ;;      Params:         4       0       0       0       0       0       0       0       0
  7600 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7602 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7603 ;;Total ram usage:        8 bytes
  7604 ;; Hardware stack levels used:    1
  7605 ;; Hardware stack levels required when called:    4
  7606 ;; This function calls:
  7607 ;;		Nothing
  7608 ;; This function is called by:
  7609 ;;		_scale
  7610 ;;		_sprintf
  7611 ;; This function uses a non-reentrant model
  7612 ;;
  7613                           
  7614                           	psect	text23
  7615  003BC0                     __ptext23:
  7616                           	callstack 0
  7617  003BC0                     ___awdiv:
  7618                           	callstack 23
  7619  003BC0  0E00               	movlw	0
  7620  003BC2  6E0D               	movwf	___awdiv@sign^0,c
  7621  003BC4  BE0B               	btfsc	(___awdiv@divisor+1)^0,7,c
  7622  003BC6  EFE9  F01D         	goto	u6850
  7623  003BCA  EFE7  F01D         	goto	u6851
  7624  003BCE                     u6851:
  7625  003BCE  EFEF  F01D         	goto	l6142
  7626  003BD2                     u6850:
  7627  003BD2  6C0A               	negf	___awdiv@divisor^0,c
  7628  003BD4  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
  7629  003BD6  B0D8               	btfsc	status,0,c
  7630  003BD8  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
  7631  003BDA  0E01               	movlw	1
  7632  003BDC  6E0D               	movwf	___awdiv@sign^0,c
  7633  003BDE                     l6142:
  7634  003BDE  BE09               	btfsc	(___awdiv@dividend+1)^0,7,c
  7635  003BE0  EFF6  F01D         	goto	u6860
  7636  003BE4  EFF4  F01D         	goto	u6861
  7637  003BE8                     u6861:
  7638  003BE8  EFFC  F01D         	goto	l6148
  7639  003BEC                     u6860:
  7640  003BEC  6C08               	negf	___awdiv@dividend^0,c
  7641  003BEE  1E09               	comf	(___awdiv@dividend+1)^0,f,c
  7642  003BF0  B0D8               	btfsc	status,0,c
  7643  003BF2  2A09               	incf	(___awdiv@dividend+1)^0,f,c
  7644  003BF4  0E01               	movlw	1
  7645  003BF6  1A0D               	xorwf	___awdiv@sign^0,f,c
  7646  003BF8                     l6148:
  7647  003BF8  0E00               	movlw	0
  7648  003BFA  6E0F               	movwf	(___awdiv@quotient+1)^0,c
  7649  003BFC  0E00               	movlw	0
  7650  003BFE  6E0E               	movwf	___awdiv@quotient^0,c
  7651  003C00  500A               	movf	___awdiv@divisor^0,w,c
  7652  003C02  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
  7653  003C04  B4D8               	btfsc	status,2,c
  7654  003C06  EF07  F01E         	goto	u6871
  7655  003C0A  EF09  F01E         	goto	u6870
  7656  003C0E                     u6871:
  7657  003C0E  EF31  F01E         	goto	l6170
  7658  003C12                     u6870:
  7659  003C12  0E01               	movlw	1
  7660  003C14  6E0C               	movwf	___awdiv@counter^0,c
  7661  003C16  EF11  F01E         	goto	l6156
  7662  003C1A                     l6154:
  7663  003C1A  90D8               	bcf	status,0,c
  7664  003C1C  360A               	rlcf	___awdiv@divisor^0,f,c
  7665  003C1E  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
  7666  003C20  2A0C               	incf	___awdiv@counter^0,f,c
  7667  003C22                     l6156:
  7668  003C22  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  7669  003C24  EF16  F01E         	goto	u6881
  7670  003C28  EF18  F01E         	goto	u6880
  7671  003C2C                     u6881:
  7672  003C2C  EF0D  F01E         	goto	l6154
  7673  003C30                     u6880:
  7674  003C30                     l6158:
  7675  003C30  90D8               	bcf	status,0,c
  7676  003C32  360E               	rlcf	___awdiv@quotient^0,f,c
  7677  003C34  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
  7678  003C36  500A               	movf	___awdiv@divisor^0,w,c
  7679  003C38  5C08               	subwf	___awdiv@dividend^0,w,c
  7680  003C3A  500B               	movf	(___awdiv@divisor+1)^0,w,c
  7681  003C3C  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
  7682  003C3E  A0D8               	btfss	status,0,c
  7683  003C40  EF24  F01E         	goto	u6891
  7684  003C44  EF26  F01E         	goto	u6890
  7685  003C48                     u6891:
  7686  003C48  EF2B  F01E         	goto	l6166
  7687  003C4C                     u6890:
  7688  003C4C  500A               	movf	___awdiv@divisor^0,w,c
  7689  003C4E  5E08               	subwf	___awdiv@dividend^0,f,c
  7690  003C50  500B               	movf	(___awdiv@divisor+1)^0,w,c
  7691  003C52  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
  7692  003C54  800E               	bsf	___awdiv@quotient^0,0,c
  7693  003C56                     l6166:
  7694  003C56  90D8               	bcf	status,0,c
  7695  003C58  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
  7696  003C5A  320A               	rrcf	___awdiv@divisor^0,f,c
  7697  003C5C  2E0C               	decfsz	___awdiv@counter^0,f,c
  7698  003C5E  EF18  F01E         	goto	l6158
  7699  003C62                     l6170:
  7700  003C62  500D               	movf	___awdiv@sign^0,w,c
  7701  003C64  B4D8               	btfsc	status,2,c
  7702  003C66  EF37  F01E         	goto	u6901
  7703  003C6A  EF39  F01E         	goto	u6900
  7704  003C6E                     u6901:
  7705  003C6E  EF3D  F01E         	goto	l6174
  7706  003C72                     u6900:
  7707  003C72  6C0E               	negf	___awdiv@quotient^0,c
  7708  003C74  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
  7709  003C76  B0D8               	btfsc	status,0,c
  7710  003C78  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
  7711  003C7A                     l6174:
  7712  003C7A  C00E  F008         	movff	___awdiv@quotient,?___awdiv
  7713  003C7E  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  7714  003C82  0012               	return		;funcret
  7715  003C84                     __end_of___awdiv:
  7716                           	callstack 0
  7717                           
  7718 ;; *************** function _isdigit *****************
  7719 ;; Defined at:
  7720 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\isdigit.c"
  7721 ;; Parameters:    Size  Location     Type
  7722 ;;  c               1    wreg     unsigned char 
  7723 ;; Auto vars:     Size  Location     Type
  7724 ;;  c               1    3[COMRAM] unsigned char 
  7725 ;; Return value:  Size  Location     Type
  7726 ;;		None               void
  7727 ;; Registers used:
  7728 ;;		wreg, status,2, status,0
  7729 ;; Tracked objects:
  7730 ;;		On entry : 0/0
  7731 ;;		On exit  : 0/0
  7732 ;;		Unchanged: 0/0
  7733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7734 ;;      Params:         0       0       0       0       0       0       0       0       0
  7735 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7736 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7737 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7738 ;;Total ram usage:        3 bytes
  7739 ;; Hardware stack levels used:    1
  7740 ;; Hardware stack levels required when called:    4
  7741 ;; This function calls:
  7742 ;;		Nothing
  7743 ;; This function is called by:
  7744 ;;		_sprintf
  7745 ;; This function uses a non-reentrant model
  7746 ;;
  7747                           
  7748                           	psect	text24
  7749  004454                     __ptext24:
  7750                           	callstack 0
  7751  004454                     _isdigit:
  7752                           	callstack 24
  7753                           
  7754                           ;incstack = 0
  7755                           ;isdigit@c stored from wreg
  7756  004454  6E04               	movwf	isdigit@c^0,c
  7757  004456  0E00               	movlw	0
  7758  004458  6E03               	movwf	_isdigit$2071^0,c
  7759  00445A  0E3A               	movlw	58
  7760  00445C  6004               	cpfslt	isdigit@c^0,c
  7761  00445E  EF33  F022         	goto	u7341
  7762  004462  EF35  F022         	goto	u7340
  7763  004466                     u7341:
  7764  004466  EF3F  F022         	goto	l6414
  7765  00446A                     u7340:
  7766  00446A  0E2F               	movlw	47
  7767  00446C  6404               	cpfsgt	isdigit@c^0,c
  7768  00446E  EF3B  F022         	goto	u7351
  7769  004472  EF3D  F022         	goto	u7350
  7770  004476                     u7351:
  7771  004476  EF3F  F022         	goto	l6414
  7772  00447A                     u7350:
  7773  00447A  0E01               	movlw	1
  7774  00447C  6E03               	movwf	_isdigit$2071^0,c
  7775  00447E                     l6414:
  7776  00447E  C003  F002         	movff	_isdigit$2071,??_isdigit
  7777  004482  3002               	rrcf	??_isdigit^0,w,c
  7778  004484  0012               	return		;funcret
  7779  004486                     __end_of_isdigit:
  7780                           	callstack 0
  7781                           
  7782 ;; *************** function _fround *****************
  7783 ;; Defined at:
  7784 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  7785 ;; Parameters:    Size  Location     Type
  7786 ;;  prec            1    wreg     unsigned char 
  7787 ;; Auto vars:     Size  Location     Type
  7788 ;;  prec            1   21[BANK0 ] unsigned char 
  7789 ;; Return value:  Size  Location     Type
  7790 ;;                  4   82[COMRAM] unsigned char 
  7791 ;; Registers used:
  7792 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7793 ;; Tracked objects:
  7794 ;;		On entry : 0/0
  7795 ;;		On exit  : 0/0
  7796 ;;		Unchanged: 0/0
  7797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7798 ;;      Params:         4       0       0       0       0       0       0       0       0
  7799 ;;      Locals:         0       9       0       0       0       0       0       0       0
  7800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7801 ;;      Totals:         4       9       0       0       0       0       0       0       0
  7802 ;;Total ram usage:       13 bytes
  7803 ;; Hardware stack levels used:    1
  7804 ;; Hardware stack levels required when called:    5
  7805 ;; This function calls:
  7806 ;;		___flmul
  7807 ;;		___lwdiv
  7808 ;;		___lwmod
  7809 ;; This function is called by:
  7810 ;;		_sprintf
  7811 ;; This function uses a non-reentrant model
  7812 ;;
  7813                           
  7814                           	psect	text25
  7815  00277E                     __ptext25:
  7816                           	callstack 0
  7817  00277E                     _fround:
  7818                           	callstack 23
  7819                           
  7820                           ;incstack = 0
  7821                           ;fround@prec stored from wreg
  7822  00277E  0100               	movlb	0	; () banked
  7823  002780  6F75               	movwf	fround@prec& (0+255),b
  7824  002782                     
  7825                           ;doprnt.c: 421: if(prec>=110)
  7826  002782  0E6D               	movlw	109
  7827  002784  0100               	movlb	0	; () banked
  7828  002786  6575               	cpfsgt	fround@prec& (0+255),b
  7829  002788  EFC8  F013         	goto	u7271
  7830  00278C  EFCA  F013         	goto	u7270
  7831  002790                     u7271:
  7832  002790  EF77  F014         	goto	l6358
  7833  002794                     u7270:
  7834  002794                     
  7835                           ; BSR set to: 0
  7836                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7837  002794  0E00               	movlw	0
  7838  002796  6E4B               	movwf	___flmul@a^0,c
  7839  002798  0E00               	movlw	0
  7840  00279A  6E4C               	movwf	(___flmul@a+1)^0,c
  7841  00279C  0E00               	movlw	0
  7842  00279E  6E4D               	movwf	(___flmul@a+2)^0,c
  7843  0027A0  0E3F               	movlw	63
  7844  0027A2  6E4E               	movwf	(___flmul@a+3)^0,c
  7845  0027A4  0E00               	movlw	0
  7846  0027A6  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  7847  0027A8  0E64               	movlw	100
  7848  0027AA  6E09               	movwf	___lwdiv@divisor^0,c
  7849  0027AC  C075  F007         	movff	fround@prec,___lwdiv@dividend
  7850  0027B0  6A08               	clrf	(___lwdiv@dividend+1)^0,c
  7851  0027B2  ECCD  F020         	call	___lwdiv	;wreg free
  7852  0027B6  90D8               	bcf	status,0,c
  7853  0027B8  3607               	rlcf	?___lwdiv^0,f,c
  7854  0027BA  3608               	rlcf	(?___lwdiv+1)^0,f,c
  7855  0027BC  90D8               	bcf	status,0,c
  7856  0027BE  3607               	rlcf	?___lwdiv^0,f,c
  7857  0027C0  3608               	rlcf	(?___lwdiv+1)^0,f,c
  7858  0027C2  0E48               	movlw	72
  7859  0027C4  2607               	addwf	?___lwdiv^0,f,c
  7860  0027C6  0E00               	movlw	0
  7861  0027C8  2208               	addwfc	(?___lwdiv+1)^0,f,c
  7862  0027CA  0E1B               	movlw	low __npowers_
  7863  0027CC  2407               	addwf	?___lwdiv^0,w,c
  7864  0027CE  6EF6               	movwf	tblptrl,c
  7865  0027D0  0E5F               	movlw	high __npowers_
  7866  0027D2  2008               	addwfc	(?___lwdiv+1)^0,w,c
  7867  0027D4  6EF7               	movwf	tblptrh,c
  7868  0027D6                     	if	0	;There are less than 3 active tblptr bytes
  7869  0027D6                     	endif
  7870  0027D6  0009               	tblrd		*+
  7871  0027D8  CFF5 F047          	movff	tablat,___flmul@b
  7872  0027DC  0009               	tblrd		*+
  7873  0027DE  CFF5 F048          	movff	tablat,___flmul@b+1
  7874  0027E2  0009               	tblrd		*+
  7875  0027E4  CFF5 F049          	movff	tablat,___flmul@b+2
  7876  0027E8  000A               	tblrd		*-
  7877  0027EA  CFF5 F04A          	movff	tablat,___flmul@b+3
  7878  0027EE  EC3F  F009         	call	___flmul	;wreg free
  7879  0027F2  C047  F071         	movff	?___flmul,_fround$2370
  7880  0027F6  C048  F072         	movff	?___flmul+1,_fround$2370+1
  7881  0027FA  C049  F073         	movff	?___flmul+2,_fround$2370+2
  7882  0027FE  C04A  F074         	movff	?___flmul+3,_fround$2370+3
  7883                           
  7884                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7885  002802  0E00               	movlw	0
  7886  002804  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  7887  002806  0E0A               	movlw	10
  7888  002808  6E09               	movwf	___lwdiv@divisor^0,c
  7889  00280A  0E00               	movlw	0
  7890  00280C  6E05               	movwf	(___lwmod@divisor+1)^0,c
  7891  00280E  0E64               	movlw	100
  7892  002810  6E04               	movwf	___lwmod@divisor^0,c
  7893  002812  C075  F002         	movff	fround@prec,___lwmod@dividend
  7894  002816  6A03               	clrf	(___lwmod@dividend+1)^0,c
  7895  002818  EC07  F021         	call	___lwmod	;wreg free
  7896  00281C  C002  F007         	movff	?___lwmod,___lwdiv@dividend
  7897  002820  C003  F008         	movff	?___lwmod+1,___lwdiv@dividend+1
  7898  002824  ECCD  F020         	call	___lwdiv	;wreg free
  7899  002828  90D8               	bcf	status,0,c
  7900  00282A  3607               	rlcf	?___lwdiv^0,f,c
  7901  00282C  3608               	rlcf	(?___lwdiv+1)^0,f,c
  7902  00282E  90D8               	bcf	status,0,c
  7903  002830  3607               	rlcf	?___lwdiv^0,f,c
  7904  002832  3608               	rlcf	(?___lwdiv+1)^0,f,c
  7905  002834  0E24               	movlw	36
  7906  002836  2607               	addwf	?___lwdiv^0,f,c
  7907  002838  0E00               	movlw	0
  7908  00283A  2208               	addwfc	(?___lwdiv+1)^0,f,c
  7909  00283C  0E1B               	movlw	low __npowers_
  7910  00283E  2407               	addwf	?___lwdiv^0,w,c
  7911  002840  6EF6               	movwf	tblptrl,c
  7912  002842  0E5F               	movlw	high __npowers_
  7913  002844  2008               	addwfc	(?___lwdiv+1)^0,w,c
  7914  002846  6EF7               	movwf	tblptrh,c
  7915  002848                     	if	0	;There are less than 3 active tblptr bytes
  7916  002848                     	endif
  7917  002848  0009               	tblrd		*+
  7918  00284A  CFF5 F04B          	movff	tablat,___flmul@a
  7919  00284E  0009               	tblrd		*+
  7920  002850  CFF5 F04C          	movff	tablat,___flmul@a+1
  7921  002854  0009               	tblrd		*+
  7922  002856  CFF5 F04D          	movff	tablat,___flmul@a+2
  7923  00285A  000A               	tblrd		*-
  7924  00285C  CFF5 F04E          	movff	tablat,___flmul@a+3
  7925  002860  C071  F047         	movff	_fround$2370,___flmul@b
  7926  002864  C072  F048         	movff	_fround$2370+1,___flmul@b+1
  7927  002868  C073  F049         	movff	_fround$2370+2,___flmul@b+2
  7928  00286C  C074  F04A         	movff	_fround$2370+3,___flmul@b+3
  7929  002870  EC3F  F009         	call	___flmul	;wreg free
  7930  002874  C047  F06D         	movff	?___flmul,_fround$2371
  7931  002878  C048  F06E         	movff	?___flmul+1,_fround$2371+1
  7932  00287C  C049  F06F         	movff	?___flmul+2,_fround$2371+2
  7933  002880  C04A  F070         	movff	?___flmul+3,_fround$2371+3
  7934                           
  7935                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7936  002884  C06D  F047         	movff	_fround$2371,___flmul@b
  7937  002888  C06E  F048         	movff	_fround$2371+1,___flmul@b+1
  7938  00288C  C06F  F049         	movff	_fround$2371+2,___flmul@b+2
  7939  002890  C070  F04A         	movff	_fround$2371+3,___flmul@b+3
  7940  002894  0E00               	movlw	0
  7941  002896  6E05               	movwf	(___lwmod@divisor+1)^0,c
  7942  002898  0E0A               	movlw	10
  7943  00289A  6E04               	movwf	___lwmod@divisor^0,c
  7944  00289C  C075  F002         	movff	fround@prec,___lwmod@dividend
  7945  0028A0  6A03               	clrf	(___lwmod@dividend+1)^0,c
  7946  0028A2  EC07  F021         	call	___lwmod	;wreg free
  7947  0028A6  90D8               	bcf	status,0,c
  7948  0028A8  3602               	rlcf	?___lwmod^0,f,c
  7949  0028AA  3603               	rlcf	(?___lwmod+1)^0,f,c
  7950  0028AC  90D8               	bcf	status,0,c
  7951  0028AE  3602               	rlcf	?___lwmod^0,f,c
  7952  0028B0  3603               	rlcf	(?___lwmod+1)^0,f,c
  7953  0028B2  0E1B               	movlw	low __npowers_
  7954  0028B4  2402               	addwf	?___lwmod^0,w,c
  7955  0028B6  6EF6               	movwf	tblptrl,c
  7956  0028B8  0E5F               	movlw	high __npowers_
  7957  0028BA  2003               	addwfc	(?___lwmod+1)^0,w,c
  7958  0028BC  6EF7               	movwf	tblptrh,c
  7959  0028BE                     	if	0	;There are less than 3 active tblptr bytes
  7960  0028BE                     	endif
  7961  0028BE  0009               	tblrd		*+
  7962  0028C0  CFF5 F04B          	movff	tablat,___flmul@a
  7963  0028C4  0009               	tblrd		*+
  7964  0028C6  CFF5 F04C          	movff	tablat,___flmul@a+1
  7965  0028CA  0009               	tblrd		*+
  7966  0028CC  CFF5 F04D          	movff	tablat,___flmul@a+2
  7967  0028D0  000A               	tblrd		*-
  7968  0028D2  CFF5 F04E          	movff	tablat,___flmul@a+3
  7969  0028D6  EC3F  F009         	call	___flmul	;wreg free
  7970  0028DA  C047  F053         	movff	?___flmul,?_fround
  7971  0028DE  C048  F054         	movff	?___flmul+1,?_fround+1
  7972  0028E2  C049  F055         	movff	?___flmul+2,?_fround+2
  7973  0028E6  C04A  F056         	movff	?___flmul+3,?_fround+3
  7974  0028EA  EF11  F015         	goto	l680
  7975  0028EE                     l6358:
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;doprnt.c: 423: else if(prec > 10)
  7979  0028EE  0E0A               	movlw	10
  7980  0028F0  6575               	cpfsgt	fround@prec& (0+255),b
  7981  0028F2  EF7D  F014         	goto	u7281
  7982  0028F6  EF7F  F014         	goto	u7280
  7983  0028FA                     u7281:
  7984  0028FA  EFEB  F014         	goto	l6364
  7985  0028FE                     u7280:
  7986  0028FE                     
  7987                           ; BSR set to: 0
  7988                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  7989  0028FE  0E00               	movlw	0
  7990  002900  6E4B               	movwf	___flmul@a^0,c
  7991  002902  0E00               	movlw	0
  7992  002904  6E4C               	movwf	(___flmul@a+1)^0,c
  7993  002906  0E00               	movlw	0
  7994  002908  6E4D               	movwf	(___flmul@a+2)^0,c
  7995  00290A  0E3F               	movlw	63
  7996  00290C  6E4E               	movwf	(___flmul@a+3)^0,c
  7997  00290E  0E00               	movlw	0
  7998  002910  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  7999  002912  0E0A               	movlw	10
  8000  002914  6E09               	movwf	___lwdiv@divisor^0,c
  8001  002916  C075  F007         	movff	fround@prec,___lwdiv@dividend
  8002  00291A  6A08               	clrf	(___lwdiv@dividend+1)^0,c
  8003  00291C  ECCD  F020         	call	___lwdiv	;wreg free
  8004  002920  90D8               	bcf	status,0,c
  8005  002922  3607               	rlcf	?___lwdiv^0,f,c
  8006  002924  3608               	rlcf	(?___lwdiv+1)^0,f,c
  8007  002926  90D8               	bcf	status,0,c
  8008  002928  3607               	rlcf	?___lwdiv^0,f,c
  8009  00292A  3608               	rlcf	(?___lwdiv+1)^0,f,c
  8010  00292C  0E24               	movlw	36
  8011  00292E  2607               	addwf	?___lwdiv^0,f,c
  8012  002930  0E00               	movlw	0
  8013  002932  2208               	addwfc	(?___lwdiv+1)^0,f,c
  8014  002934  0E1B               	movlw	low __npowers_
  8015  002936  2407               	addwf	?___lwdiv^0,w,c
  8016  002938  6EF6               	movwf	tblptrl,c
  8017  00293A  0E5F               	movlw	high __npowers_
  8018  00293C  2008               	addwfc	(?___lwdiv+1)^0,w,c
  8019  00293E  6EF7               	movwf	tblptrh,c
  8020  002940                     	if	0	;There are less than 3 active tblptr bytes
  8021  002940                     	endif
  8022  002940  0009               	tblrd		*+
  8023  002942  CFF5 F047          	movff	tablat,___flmul@b
  8024  002946  0009               	tblrd		*+
  8025  002948  CFF5 F048          	movff	tablat,___flmul@b+1
  8026  00294C  0009               	tblrd		*+
  8027  00294E  CFF5 F049          	movff	tablat,___flmul@b+2
  8028  002952  000A               	tblrd		*-
  8029  002954  CFF5 F04A          	movff	tablat,___flmul@b+3
  8030  002958  EC3F  F009         	call	___flmul	;wreg free
  8031  00295C  C047  F071         	movff	?___flmul,_fround$2370
  8032  002960  C048  F072         	movff	?___flmul+1,_fround$2370+1
  8033  002964  C049  F073         	movff	?___flmul+2,_fround$2370+2
  8034  002968  C04A  F074         	movff	?___flmul+3,_fround$2370+3
  8035                           
  8036                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  8037  00296C  C071  F047         	movff	_fround$2370,___flmul@b
  8038  002970  C072  F048         	movff	_fround$2370+1,___flmul@b+1
  8039  002974  C073  F049         	movff	_fround$2370+2,___flmul@b+2
  8040  002978  C074  F04A         	movff	_fround$2370+3,___flmul@b+3
  8041  00297C  0E00               	movlw	0
  8042  00297E  6E05               	movwf	(___lwmod@divisor+1)^0,c
  8043  002980  0E0A               	movlw	10
  8044  002982  6E04               	movwf	___lwmod@divisor^0,c
  8045  002984  C075  F002         	movff	fround@prec,___lwmod@dividend
  8046  002988  6A03               	clrf	(___lwmod@dividend+1)^0,c
  8047  00298A  EC07  F021         	call	___lwmod	;wreg free
  8048  00298E  90D8               	bcf	status,0,c
  8049  002990  3602               	rlcf	?___lwmod^0,f,c
  8050  002992  3603               	rlcf	(?___lwmod+1)^0,f,c
  8051  002994  90D8               	bcf	status,0,c
  8052  002996  3602               	rlcf	?___lwmod^0,f,c
  8053  002998  3603               	rlcf	(?___lwmod+1)^0,f,c
  8054  00299A  0E1B               	movlw	low __npowers_
  8055  00299C  2402               	addwf	?___lwmod^0,w,c
  8056  00299E  6EF6               	movwf	tblptrl,c
  8057  0029A0  0E5F               	movlw	high __npowers_
  8058  0029A2  2003               	addwfc	(?___lwmod+1)^0,w,c
  8059  0029A4  6EF7               	movwf	tblptrh,c
  8060  0029A6                     	if	0	;There are less than 3 active tblptr bytes
  8061  0029A6                     	endif
  8062  0029A6  0009               	tblrd		*+
  8063  0029A8  CFF5 F04B          	movff	tablat,___flmul@a
  8064  0029AC  0009               	tblrd		*+
  8065  0029AE  CFF5 F04C          	movff	tablat,___flmul@a+1
  8066  0029B2  0009               	tblrd		*+
  8067  0029B4  CFF5 F04D          	movff	tablat,___flmul@a+2
  8068  0029B8  000A               	tblrd		*-
  8069  0029BA  CFF5 F04E          	movff	tablat,___flmul@a+3
  8070  0029BE  EC3F  F009         	call	___flmul	;wreg free
  8071  0029C2  C047  F053         	movff	?___flmul,?_fround
  8072  0029C6  C048  F054         	movff	?___flmul+1,?_fround+1
  8073  0029CA  C049  F055         	movff	?___flmul+2,?_fround+2
  8074  0029CE  C04A  F056         	movff	?___flmul+3,?_fround+3
  8075  0029D2  EF11  F015         	goto	l680
  8076  0029D6                     l6364:
  8077                           
  8078                           ; BSR set to: 0
  8079                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  8080  0029D6  5175               	movf	fround@prec& (0+255),w,b
  8081  0029D8  0D04               	mullw	4
  8082  0029DA  0E1B               	movlw	low __npowers_
  8083  0029DC  24F3               	addwf	243,w,c
  8084  0029DE  6EF6               	movwf	tblptrl,c
  8085  0029E0  0E5F               	movlw	high __npowers_
  8086  0029E2  20F4               	addwfc	244,w,c
  8087  0029E4  6EF7               	movwf	tblptrh,c
  8088  0029E6                     	if	0	;There are less than 3 active tblptr bytes
  8089  0029E6                     	endif
  8090  0029E6  0009               	tblrd		*+
  8091  0029E8  CFF5 F047          	movff	tablat,___flmul@b
  8092  0029EC  0009               	tblrd		*+
  8093  0029EE  CFF5 F048          	movff	tablat,___flmul@b+1
  8094  0029F2  0009               	tblrd		*+
  8095  0029F4  CFF5 F049          	movff	tablat,___flmul@b+2
  8096  0029F8  000A               	tblrd		*-
  8097  0029FA  CFF5 F04A          	movff	tablat,___flmul@b+3
  8098  0029FE  0E00               	movlw	0
  8099  002A00  6E4B               	movwf	___flmul@a^0,c
  8100  002A02  0E00               	movlw	0
  8101  002A04  6E4C               	movwf	(___flmul@a+1)^0,c
  8102  002A06  0E00               	movlw	0
  8103  002A08  6E4D               	movwf	(___flmul@a+2)^0,c
  8104  002A0A  0E3F               	movlw	63
  8105  002A0C  6E4E               	movwf	(___flmul@a+3)^0,c
  8106  002A0E  EC3F  F009         	call	___flmul	;wreg free
  8107  002A12  C047  F053         	movff	?___flmul,?_fround
  8108  002A16  C048  F054         	movff	?___flmul+1,?_fround+1
  8109  002A1A  C049  F055         	movff	?___flmul+2,?_fround+2
  8110  002A1E  C04A  F056         	movff	?___flmul+3,?_fround+3
  8111  002A22                     l680:
  8112  002A22  0012               	return		;funcret
  8113  002A24                     __end_of_fround:
  8114                           	callstack 0
  8115                           
  8116 ;; *************** function ___lwmod *****************
  8117 ;; Defined at:
  8118 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;  dividend        2    1[COMRAM] unsigned int 
  8121 ;;  divisor         2    3[COMRAM] unsigned int 
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;  counter         1    5[COMRAM] unsigned char 
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  2    1[COMRAM] unsigned int 
  8126 ;; Registers used:
  8127 ;;		wreg, status,2, status,0
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8133 ;;      Params:         4       0       0       0       0       0       0       0       0
  8134 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8135 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8136 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8137 ;;Total ram usage:        5 bytes
  8138 ;; Hardware stack levels used:    1
  8139 ;; Hardware stack levels required when called:    4
  8140 ;; This function calls:
  8141 ;;		Nothing
  8142 ;; This function is called by:
  8143 ;;		_fround
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           	psect	text26
  8148  00420E                     __ptext26:
  8149                           	callstack 0
  8150  00420E                     ___lwmod:
  8151                           	callstack 23
  8152  00420E  5004               	movf	___lwmod@divisor^0,w,c
  8153  004210  1005               	iorwf	(___lwmod@divisor+1)^0,w,c
  8154  004212  B4D8               	btfsc	status,2,c
  8155  004214  EF0E  F021         	goto	u7011
  8156  004218  EF10  F021         	goto	u7010
  8157  00421C                     u7011:
  8158  00421C  EF34  F021         	goto	l1318
  8159  004220                     u7010:
  8160  004220  0E01               	movlw	1
  8161  004222  6E06               	movwf	___lwmod@counter^0,c
  8162  004224  EF18  F021         	goto	l6250
  8163  004228                     l6248:
  8164  004228  90D8               	bcf	status,0,c
  8165  00422A  3604               	rlcf	___lwmod@divisor^0,f,c
  8166  00422C  3605               	rlcf	(___lwmod@divisor+1)^0,f,c
  8167  00422E  2A06               	incf	___lwmod@counter^0,f,c
  8168  004230                     l6250:
  8169  004230  AE05               	btfss	(___lwmod@divisor+1)^0,7,c
  8170  004232  EF1D  F021         	goto	u7021
  8171  004236  EF1F  F021         	goto	u7020
  8172  00423A                     u7021:
  8173  00423A  EF14  F021         	goto	l6248
  8174  00423E                     u7020:
  8175  00423E                     l6252:
  8176  00423E  5004               	movf	___lwmod@divisor^0,w,c
  8177  004240  5C02               	subwf	___lwmod@dividend^0,w,c
  8178  004242  5005               	movf	(___lwmod@divisor+1)^0,w,c
  8179  004244  5803               	subwfb	(___lwmod@dividend+1)^0,w,c
  8180  004246  A0D8               	btfss	status,0,c
  8181  004248  EF28  F021         	goto	u7031
  8182  00424C  EF2A  F021         	goto	u7030
  8183  004250                     u7031:
  8184  004250  EF2E  F021         	goto	l6256
  8185  004254                     u7030:
  8186  004254  5004               	movf	___lwmod@divisor^0,w,c
  8187  004256  5E02               	subwf	___lwmod@dividend^0,f,c
  8188  004258  5005               	movf	(___lwmod@divisor+1)^0,w,c
  8189  00425A  5A03               	subwfb	(___lwmod@dividend+1)^0,f,c
  8190  00425C                     l6256:
  8191  00425C  90D8               	bcf	status,0,c
  8192  00425E  3205               	rrcf	(___lwmod@divisor+1)^0,f,c
  8193  004260  3204               	rrcf	___lwmod@divisor^0,f,c
  8194  004262  2E06               	decfsz	___lwmod@counter^0,f,c
  8195  004264  EF1F  F021         	goto	l6252
  8196  004268                     l1318:
  8197  004268  C002  F002         	movff	___lwmod@dividend,?___lwmod
  8198  00426C  C003  F003         	movff	___lwmod@dividend+1,?___lwmod+1
  8199  004270  0012               	return		;funcret
  8200  004272                     __end_of___lwmod:
  8201                           	callstack 0
  8202                           
  8203 ;; *************** function ___lwdiv *****************
  8204 ;; Defined at:
  8205 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  8206 ;; Parameters:    Size  Location     Type
  8207 ;;  dividend        2    6[COMRAM] unsigned int 
  8208 ;;  divisor         2    8[COMRAM] unsigned int 
  8209 ;; Auto vars:     Size  Location     Type
  8210 ;;  quotient        2   11[COMRAM] unsigned int 
  8211 ;;  counter         1   10[COMRAM] unsigned char 
  8212 ;; Return value:  Size  Location     Type
  8213 ;;                  2    6[COMRAM] unsigned int 
  8214 ;; Registers used:
  8215 ;;		wreg, status,2, status,0
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/0
  8218 ;;		On exit  : 0/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8221 ;;      Params:         4       0       0       0       0       0       0       0       0
  8222 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8224 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8225 ;;Total ram usage:        7 bytes
  8226 ;; Hardware stack levels used:    1
  8227 ;; Hardware stack levels required when called:    4
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		_fround
  8232 ;; This function uses a non-reentrant model
  8233 ;;
  8234                           
  8235                           	psect	text27
  8236  00419A                     __ptext27:
  8237                           	callstack 0
  8238  00419A                     ___lwdiv:
  8239                           	callstack 23
  8240  00419A  0E00               	movlw	0
  8241  00419C  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  8242  00419E  0E00               	movlw	0
  8243  0041A0  6E0C               	movwf	___lwdiv@quotient^0,c
  8244  0041A2  5009               	movf	___lwdiv@divisor^0,w,c
  8245  0041A4  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8246  0041A6  B4D8               	btfsc	status,2,c
  8247  0041A8  EFD8  F020         	goto	u6981
  8248  0041AC  EFDA  F020         	goto	u6980
  8249  0041B0                     u6981:
  8250  0041B0  EF02  F021         	goto	l1308
  8251  0041B4                     u6980:
  8252  0041B4  0E01               	movlw	1
  8253  0041B6  6E0B               	movwf	___lwdiv@counter^0,c
  8254  0041B8  EFE2  F020         	goto	l6230
  8255  0041BC                     l6228:
  8256  0041BC  90D8               	bcf	status,0,c
  8257  0041BE  3609               	rlcf	___lwdiv@divisor^0,f,c
  8258  0041C0  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8259  0041C2  2A0B               	incf	___lwdiv@counter^0,f,c
  8260  0041C4                     l6230:
  8261  0041C4  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8262  0041C6  EFE7  F020         	goto	u6991
  8263  0041CA  EFE9  F020         	goto	u6990
  8264  0041CE                     u6991:
  8265  0041CE  EFDE  F020         	goto	l6228
  8266  0041D2                     u6990:
  8267  0041D2                     l6232:
  8268  0041D2  90D8               	bcf	status,0,c
  8269  0041D4  360C               	rlcf	___lwdiv@quotient^0,f,c
  8270  0041D6  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8271  0041D8  5009               	movf	___lwdiv@divisor^0,w,c
  8272  0041DA  5C07               	subwf	___lwdiv@dividend^0,w,c
  8273  0041DC  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8274  0041DE  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8275  0041E0  A0D8               	btfss	status,0,c
  8276  0041E2  EFF5  F020         	goto	u7001
  8277  0041E6  EFF7  F020         	goto	u7000
  8278  0041EA                     u7001:
  8279  0041EA  EFFC  F020         	goto	l6240
  8280  0041EE                     u7000:
  8281  0041EE  5009               	movf	___lwdiv@divisor^0,w,c
  8282  0041F0  5E07               	subwf	___lwdiv@dividend^0,f,c
  8283  0041F2  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8284  0041F4  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8285  0041F6  800C               	bsf	___lwdiv@quotient^0,0,c
  8286  0041F8                     l6240:
  8287  0041F8  90D8               	bcf	status,0,c
  8288  0041FA  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8289  0041FC  3209               	rrcf	___lwdiv@divisor^0,f,c
  8290  0041FE  2E0B               	decfsz	___lwdiv@counter^0,f,c
  8291  004200  EFE9  F020         	goto	l6232
  8292  004204                     l1308:
  8293  004204  C00C  F007         	movff	___lwdiv@quotient,?___lwdiv
  8294  004208  C00D  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8295  00420C  0012               	return		;funcret
  8296  00420E                     __end_of___lwdiv:
  8297                           	callstack 0
  8298                           
  8299 ;; *************** function ___flmul *****************
  8300 ;; Defined at:
  8301 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  8302 ;; Parameters:    Size  Location     Type
  8303 ;;  b               4   70[COMRAM] unsigned int 
  8304 ;;  a               4   74[COMRAM] unsigned int 
  8305 ;; Auto vars:     Size  Location     Type
  8306 ;;  prod            4    7[BANK0 ] struct .
  8307 ;;  grs             4    2[BANK0 ] unsigned long 
  8308 ;;  temp            2   11[BANK0 ] struct .
  8309 ;;  bexp            1    6[BANK0 ] unsigned char 
  8310 ;;  aexp            1    1[BANK0 ] unsigned char 
  8311 ;;  sign            1    0[BANK0 ] unsigned char 
  8312 ;; Return value:  Size  Location     Type
  8313 ;;                  4   70[COMRAM] unsigned char 
  8314 ;; Registers used:
  8315 ;;		wreg, status,2, status,0, prodl, prodh
  8316 ;; Tracked objects:
  8317 ;;		On entry : 0/0
  8318 ;;		On exit  : 0/0
  8319 ;;		Unchanged: 0/0
  8320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8321 ;;      Params:         8       0       0       0       0       0       0       0       0
  8322 ;;      Locals:         0      13       0       0       0       0       0       0       0
  8323 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8324 ;;      Totals:        12      13       0       0       0       0       0       0       0
  8325 ;;Total ram usage:       25 bytes
  8326 ;; Hardware stack levels used:    1
  8327 ;; Hardware stack levels required when called:    4
  8328 ;; This function calls:
  8329 ;;		Nothing
  8330 ;; This function is called by:
  8331 ;;		_ComputeWaterVol
  8332 ;;		_InitTankVariables
  8333 ;;		_fround
  8334 ;;		_scale
  8335 ;;		_sprintf
  8336 ;;		_pow
  8337 ;;		_exp
  8338 ;;		_eval_poly
  8339 ;;		_log
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           	psect	text28
  8344  00127E                     __ptext28:
  8345                           	callstack 0
  8346  00127E                     ___flmul:
  8347                           	callstack 22
  8348  00127E  504A               	movf	(___flmul@b+3)^0,w,c
  8349  001280  0B80               	andlw	128
  8350  001282  0100               	movlb	0	; () banked
  8351  001284  6F60               	movwf	___flmul@sign& (0+255),b
  8352  001286  504A               	movf	(___flmul@b+3)^0,w,c
  8353  001288  244A               	addwf	(___flmul@b+3)^0,w,c
  8354  00128A  6F66               	movwf	___flmul@bexp& (0+255),b
  8355  00128C                     
  8356                           ; BSR set to: 0
  8357  00128C  AE49               	btfss	(___flmul@b+2)^0,7,c
  8358  00128E  EF4B  F009         	goto	u6421
  8359  001292  EF4D  F009         	goto	u6420
  8360  001296                     u6421:
  8361  001296  EF4E  F009         	goto	l5872
  8362  00129A                     u6420:
  8363  00129A                     
  8364                           ; BSR set to: 0
  8365  00129A  8166               	bsf	___flmul@bexp& (0+255),0,b
  8366  00129C                     l5872:
  8367                           
  8368                           ; BSR set to: 0
  8369  00129C  5166               	movf	___flmul@bexp& (0+255),w,b
  8370  00129E  B4D8               	btfsc	status,2,c
  8371  0012A0  EF54  F009         	goto	u6431
  8372  0012A4  EF56  F009         	goto	u6430
  8373  0012A8                     u6431:
  8374  0012A8  EF69  F009         	goto	l5880
  8375  0012AC                     u6430:
  8376  0012AC                     
  8377                           ; BSR set to: 0
  8378  0012AC  2966               	incf	___flmul@bexp& (0+255),w,b
  8379  0012AE  A4D8               	btfss	status,2,c
  8380  0012B0  EF5C  F009         	goto	u6441
  8381  0012B4  EF5E  F009         	goto	u6440
  8382  0012B8                     u6441:
  8383  0012B8  EF66  F009         	goto	l5878
  8384  0012BC                     u6440:
  8385  0012BC                     
  8386                           ; BSR set to: 0
  8387  0012BC  0E00               	movlw	0
  8388  0012BE  6E47               	movwf	___flmul@b^0,c
  8389  0012C0  0E00               	movlw	0
  8390  0012C2  6E48               	movwf	(___flmul@b+1)^0,c
  8391  0012C4  0E00               	movlw	0
  8392  0012C6  6E49               	movwf	(___flmul@b+2)^0,c
  8393  0012C8  0E00               	movlw	0
  8394  0012CA  6E4A               	movwf	(___flmul@b+3)^0,c
  8395  0012CC                     l5878:
  8396                           
  8397                           ; BSR set to: 0
  8398  0012CC  8E49               	bsf	(___flmul@b+2)^0,7,c
  8399  0012CE  EF71  F009         	goto	l5882
  8400  0012D2                     l5880:
  8401                           
  8402                           ; BSR set to: 0
  8403  0012D2  0E00               	movlw	0
  8404  0012D4  6E47               	movwf	___flmul@b^0,c
  8405  0012D6  0E00               	movlw	0
  8406  0012D8  6E48               	movwf	(___flmul@b+1)^0,c
  8407  0012DA  0E00               	movlw	0
  8408  0012DC  6E49               	movwf	(___flmul@b+2)^0,c
  8409  0012DE  0E00               	movlw	0
  8410  0012E0  6E4A               	movwf	(___flmul@b+3)^0,c
  8411  0012E2                     l5882:
  8412                           
  8413                           ; BSR set to: 0
  8414  0012E2  504E               	movf	(___flmul@a+3)^0,w,c
  8415  0012E4  0B80               	andlw	128
  8416  0012E6  1B60               	xorwf	___flmul@sign& (0+255),f,b
  8417  0012E8                     
  8418                           ; BSR set to: 0
  8419  0012E8  504E               	movf	(___flmul@a+3)^0,w,c
  8420  0012EA  244E               	addwf	(___flmul@a+3)^0,w,c
  8421  0012EC  6F61               	movwf	___flmul@aexp& (0+255),b
  8422  0012EE                     
  8423                           ; BSR set to: 0
  8424  0012EE  AE4D               	btfss	(___flmul@a+2)^0,7,c
  8425  0012F0  EF7C  F009         	goto	u6451
  8426  0012F4  EF7E  F009         	goto	u6450
  8427  0012F8                     u6451:
  8428  0012F8  EF7F  F009         	goto	l5890
  8429  0012FC                     u6450:
  8430  0012FC                     
  8431                           ; BSR set to: 0
  8432  0012FC  8161               	bsf	___flmul@aexp& (0+255),0,b
  8433  0012FE                     l5890:
  8434                           
  8435                           ; BSR set to: 0
  8436  0012FE  5161               	movf	___flmul@aexp& (0+255),w,b
  8437  001300  B4D8               	btfsc	status,2,c
  8438  001302  EF85  F009         	goto	u6461
  8439  001306  EF87  F009         	goto	u6460
  8440  00130A                     u6461:
  8441  00130A  EF9A  F009         	goto	l5898
  8442  00130E                     u6460:
  8443  00130E                     
  8444                           ; BSR set to: 0
  8445  00130E  2961               	incf	___flmul@aexp& (0+255),w,b
  8446  001310  A4D8               	btfss	status,2,c
  8447  001312  EF8D  F009         	goto	u6471
  8448  001316  EF8F  F009         	goto	u6470
  8449  00131A                     u6471:
  8450  00131A  EF97  F009         	goto	l5896
  8451  00131E                     u6470:
  8452  00131E                     
  8453                           ; BSR set to: 0
  8454  00131E  0E00               	movlw	0
  8455  001320  6E4B               	movwf	___flmul@a^0,c
  8456  001322  0E00               	movlw	0
  8457  001324  6E4C               	movwf	(___flmul@a+1)^0,c
  8458  001326  0E00               	movlw	0
  8459  001328  6E4D               	movwf	(___flmul@a+2)^0,c
  8460  00132A  0E00               	movlw	0
  8461  00132C  6E4E               	movwf	(___flmul@a+3)^0,c
  8462  00132E                     l5896:
  8463                           
  8464                           ; BSR set to: 0
  8465  00132E  8E4D               	bsf	(___flmul@a+2)^0,7,c
  8466  001330  EFA2  F009         	goto	l1431
  8467  001334                     l5898:
  8468                           
  8469                           ; BSR set to: 0
  8470  001334  0E00               	movlw	0
  8471  001336  6E4B               	movwf	___flmul@a^0,c
  8472  001338  0E00               	movlw	0
  8473  00133A  6E4C               	movwf	(___flmul@a+1)^0,c
  8474  00133C  0E00               	movlw	0
  8475  00133E  6E4D               	movwf	(___flmul@a+2)^0,c
  8476  001340  0E00               	movlw	0
  8477  001342  6E4E               	movwf	(___flmul@a+3)^0,c
  8478  001344                     l1431:
  8479                           
  8480                           ; BSR set to: 0
  8481  001344  5161               	movf	___flmul@aexp& (0+255),w,b
  8482  001346  B4D8               	btfsc	status,2,c
  8483  001348  EFA8  F009         	goto	u6481
  8484  00134C  EFAA  F009         	goto	u6480
  8485  001350                     u6481:
  8486  001350  EFB2  F009         	goto	l5902
  8487  001354                     u6480:
  8488  001354                     
  8489                           ; BSR set to: 0
  8490  001354  5166               	movf	___flmul@bexp& (0+255),w,b
  8491  001356  A4D8               	btfss	status,2,c
  8492  001358  EFB0  F009         	goto	u6491
  8493  00135C  EFB2  F009         	goto	u6490
  8494  001360                     u6491:
  8495  001360  EFBC  F009         	goto	l5906
  8496  001364                     u6490:
  8497  001364                     l5902:
  8498                           
  8499                           ; BSR set to: 0
  8500  001364  0E00               	movlw	0
  8501  001366  6E47               	movwf	?___flmul^0,c
  8502  001368  0E00               	movlw	0
  8503  00136A  6E48               	movwf	(?___flmul+1)^0,c
  8504  00136C  0E00               	movlw	0
  8505  00136E  6E49               	movwf	(?___flmul+2)^0,c
  8506  001370  0E00               	movlw	0
  8507  001372  6E4A               	movwf	(?___flmul+3)^0,c
  8508  001374  EF54  F00B         	goto	l1435
  8509  001378                     l5906:
  8510                           
  8511                           ; BSR set to: 0
  8512  001378  504D               	movf	(___flmul@a+2)^0,w,c
  8513  00137A  0247               	mulwf	___flmul@b^0,c
  8514  00137C  CFF3 F06B          	movff	prodl,___flmul@temp
  8515  001380  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8516  001384                     
  8517                           ; BSR set to: 0
  8518  001384  516B               	movf	___flmul@temp& (0+255),w,b
  8519  001386  6F62               	movwf	___flmul@grs& (0+255),b
  8520  001388  6B63               	clrf	(___flmul@grs+1)& (0+255),b
  8521  00138A  6B64               	clrf	(___flmul@grs+2)& (0+255),b
  8522  00138C  6B65               	clrf	(___flmul@grs+3)& (0+255),b
  8523  00138E                     
  8524                           ; BSR set to: 0
  8525  00138E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8526  001390  6F67               	movwf	___flmul@prod& (0+255),b
  8527  001392  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  8528  001394  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  8529  001396  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  8530  001398  504C               	movf	(___flmul@a+1)^0,w,c
  8531  00139A  0248               	mulwf	(___flmul@b+1)^0,c
  8532  00139C  CFF3 F06B          	movff	prodl,___flmul@temp
  8533  0013A0  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8534  0013A4                     
  8535                           ; BSR set to: 0
  8536  0013A4  516B               	movf	___flmul@temp& (0+255),w,b
  8537  0013A6  2762               	addwf	___flmul@grs& (0+255),f,b
  8538  0013A8  0E00               	movlw	0
  8539  0013AA  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8540  0013AC  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8541  0013AE  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8542  0013B0                     
  8543                           ; BSR set to: 0
  8544  0013B0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8545  0013B2  2767               	addwf	___flmul@prod& (0+255),f,b
  8546  0013B4  0E00               	movlw	0
  8547  0013B6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8548  0013B8  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8549  0013BA  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8550  0013BC  504B               	movf	___flmul@a^0,w,c
  8551  0013BE  0249               	mulwf	(___flmul@b+2)^0,c
  8552  0013C0  CFF3 F06B          	movff	prodl,___flmul@temp
  8553  0013C4  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8554  0013C8                     
  8555                           ; BSR set to: 0
  8556  0013C8  516B               	movf	___flmul@temp& (0+255),w,b
  8557  0013CA  2762               	addwf	___flmul@grs& (0+255),f,b
  8558  0013CC  0E00               	movlw	0
  8559  0013CE  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8560  0013D0  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8561  0013D2  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8562  0013D4                     
  8563                           ; BSR set to: 0
  8564  0013D4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8565  0013D6  2767               	addwf	___flmul@prod& (0+255),f,b
  8566  0013D8  0E00               	movlw	0
  8567  0013DA  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8568  0013DC  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8569  0013DE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8570  0013E0                     
  8571                           ; BSR set to: 0
  8572  0013E0  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  8573  0013E4  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  8574  0013E8  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  8575  0013EC  6B62               	clrf	___flmul@grs& (0+255),b
  8576  0013EE                     
  8577                           ; BSR set to: 0
  8578  0013EE  504B               	movf	___flmul@a^0,w,c
  8579  0013F0  0248               	mulwf	(___flmul@b+1)^0,c
  8580  0013F2  CFF3 F06B          	movff	prodl,___flmul@temp
  8581  0013F6  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8582  0013FA                     
  8583                           ; BSR set to: 0
  8584  0013FA  516B               	movf	___flmul@temp& (0+255),w,b
  8585  0013FC  2762               	addwf	___flmul@grs& (0+255),f,b
  8586  0013FE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8587  001400  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8588  001402  0E00               	movlw	0
  8589  001404  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8590  001406  0E00               	movlw	0
  8591  001408  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8592  00140A                     
  8593                           ; BSR set to: 0
  8594  00140A  504C               	movf	(___flmul@a+1)^0,w,c
  8595  00140C  0247               	mulwf	___flmul@b^0,c
  8596  00140E  CFF3 F06B          	movff	prodl,___flmul@temp
  8597  001412  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8598  001416                     
  8599                           ; BSR set to: 0
  8600  001416  516B               	movf	___flmul@temp& (0+255),w,b
  8601  001418  2762               	addwf	___flmul@grs& (0+255),f,b
  8602  00141A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8603  00141C  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8604  00141E  0E00               	movlw	0
  8605  001420  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8606  001422  0E00               	movlw	0
  8607  001424  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8608  001426                     
  8609                           ; BSR set to: 0
  8610  001426  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  8611  00142A  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  8612  00142E  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  8613  001432  6B62               	clrf	___flmul@grs& (0+255),b
  8614  001434  504B               	movf	___flmul@a^0,w,c
  8615  001436  0247               	mulwf	___flmul@b^0,c
  8616  001438  CFF3 F06B          	movff	prodl,___flmul@temp
  8617  00143C  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8618  001440                     
  8619                           ; BSR set to: 0
  8620  001440  516B               	movf	___flmul@temp& (0+255),w,b
  8621  001442  2762               	addwf	___flmul@grs& (0+255),f,b
  8622  001444  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8623  001446  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8624  001448  0E00               	movlw	0
  8625  00144A  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8626  00144C  0E00               	movlw	0
  8627  00144E  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8628  001450                     
  8629                           ; BSR set to: 0
  8630  001450  504D               	movf	(___flmul@a+2)^0,w,c
  8631  001452  0248               	mulwf	(___flmul@b+1)^0,c
  8632  001454  CFF3 F06B          	movff	prodl,___flmul@temp
  8633  001458  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8634  00145C  516B               	movf	___flmul@temp& (0+255),w,b
  8635  00145E  2767               	addwf	___flmul@prod& (0+255),f,b
  8636  001460  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8637  001462  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8638  001464  0E00               	movlw	0
  8639  001466  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8640  001468  0E00               	movlw	0
  8641  00146A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8642  00146C                     
  8643                           ; BSR set to: 0
  8644  00146C  504C               	movf	(___flmul@a+1)^0,w,c
  8645  00146E  0249               	mulwf	(___flmul@b+2)^0,c
  8646  001470  CFF3 F06B          	movff	prodl,___flmul@temp
  8647  001474  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8648  001478                     
  8649                           ; BSR set to: 0
  8650  001478  516B               	movf	___flmul@temp& (0+255),w,b
  8651  00147A  2767               	addwf	___flmul@prod& (0+255),f,b
  8652  00147C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8653  00147E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8654  001480  0E00               	movlw	0
  8655  001482  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8656  001484  0E00               	movlw	0
  8657  001486  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8658  001488  504D               	movf	(___flmul@a+2)^0,w,c
  8659  00148A  0249               	mulwf	(___flmul@b+2)^0,c
  8660  00148C  CFF3 F06B          	movff	prodl,___flmul@temp
  8661  001490  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8662  001494                     
  8663                           ; BSR set to: 0
  8664  001494  516B               	movf	___flmul@temp& (0+255),w,b
  8665  001496  6E4F               	movwf	??___flmul^0,c
  8666  001498  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8667  00149A  6E50               	movwf	(??___flmul+1)^0,c
  8668  00149C  6A51               	clrf	(??___flmul+2)^0,c
  8669  00149E  6A52               	clrf	(??___flmul+3)^0,c
  8670  0014A0  C051  F052         	movff	??___flmul+2,??___flmul+3
  8671  0014A4  C050  F051         	movff	??___flmul+1,??___flmul+2
  8672  0014A8  C04F  F050         	movff	??___flmul,??___flmul+1
  8673  0014AC  6A4F               	clrf	??___flmul^0,c
  8674  0014AE  504F               	movf	??___flmul^0,w,c
  8675  0014B0  2767               	addwf	___flmul@prod& (0+255),f,b
  8676  0014B2  5050               	movf	(??___flmul+1)^0,w,c
  8677  0014B4  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8678  0014B6  5051               	movf	(??___flmul+2)^0,w,c
  8679  0014B8  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8680  0014BA  5052               	movf	(??___flmul+3)^0,w,c
  8681  0014BC  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8682  0014BE                     
  8683                           ; BSR set to: 0
  8684  0014BE  C062  F04F         	movff	___flmul@grs,??___flmul
  8685  0014C2  C063  F050         	movff	___flmul@grs+1,??___flmul+1
  8686  0014C6  C064  F051         	movff	___flmul@grs+2,??___flmul+2
  8687  0014CA  C065  F052         	movff	___flmul@grs+3,??___flmul+3
  8688  0014CE  0E19               	movlw	25
  8689  0014D0  EF6F  F00A         	goto	u6500
  8690  0014D4                     u6505:
  8691  0014D4  90D8               	bcf	status,0,c
  8692  0014D6  3252               	rrcf	(??___flmul+3)^0,f,c
  8693  0014D8  3251               	rrcf	(??___flmul+2)^0,f,c
  8694  0014DA  3250               	rrcf	(??___flmul+1)^0,f,c
  8695  0014DC  324F               	rrcf	??___flmul^0,f,c
  8696  0014DE                     u6500:
  8697  0014DE  2EE8               	decfsz	wreg,f,c
  8698  0014E0  EF6A  F00A         	goto	u6505
  8699  0014E4  504F               	movf	??___flmul^0,w,c
  8700  0014E6  2767               	addwf	___flmul@prod& (0+255),f,b
  8701  0014E8  5050               	movf	(??___flmul+1)^0,w,c
  8702  0014EA  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8703  0014EC  5051               	movf	(??___flmul+2)^0,w,c
  8704  0014EE  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8705  0014F0  5052               	movf	(??___flmul+3)^0,w,c
  8706  0014F2  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8707  0014F4                     
  8708                           ; BSR set to: 0
  8709  0014F4  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  8710  0014F8  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  8711  0014FC  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  8712  001500  6B62               	clrf	___flmul@grs& (0+255),b
  8713  001502                     
  8714                           ; BSR set to: 0
  8715  001502  5161               	movf	___flmul@aexp& (0+255),w,b
  8716  001504  C066  F04F         	movff	___flmul@bexp,??___flmul
  8717  001508  6A50               	clrf	(??___flmul+1)^0,c
  8718  00150A  264F               	addwf	??___flmul^0,f,c
  8719  00150C  0E00               	movlw	0
  8720  00150E  2250               	addwfc	(??___flmul+1)^0,f,c
  8721  001510  0E82               	movlw	130
  8722  001512  244F               	addwf	??___flmul^0,w,c
  8723  001514  6F6B               	movwf	___flmul@temp& (0+255),b
  8724  001516  0EFF               	movlw	255
  8725  001518  2050               	addwfc	(??___flmul+1)^0,w,c
  8726  00151A  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  8727  00151C  EFA5  F00A         	goto	l5954
  8728  001520                     l5948:
  8729                           
  8730                           ; BSR set to: 0
  8731  001520  90D8               	bcf	status,0,c
  8732  001522  3767               	rlcf	___flmul@prod& (0+255),f,b
  8733  001524  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8734  001526  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8735  001528  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8736  00152A                     
  8737                           ; BSR set to: 0
  8738  00152A  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  8739  00152C  EF9A  F00A         	goto	u6511
  8740  001530  EF9C  F00A         	goto	u6510
  8741  001534                     u6511:
  8742  001534  EF9D  F00A         	goto	l1438
  8743  001538                     u6510:
  8744  001538                     
  8745                           ; BSR set to: 0
  8746  001538  8167               	bsf	___flmul@prod& (0+255),0,b
  8747  00153A                     l1438:
  8748                           
  8749                           ; BSR set to: 0
  8750  00153A  90D8               	bcf	status,0,c
  8751  00153C  3762               	rlcf	___flmul@grs& (0+255),f,b
  8752  00153E  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8753  001540  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8754  001542  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8755  001544  076B               	decf	___flmul@temp& (0+255),f,b
  8756  001546  A0D8               	btfss	status,0,c
  8757  001548  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  8758  00154A                     l5954:
  8759                           
  8760                           ; BSR set to: 0
  8761  00154A  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  8762  00154C  EFAA  F00A         	goto	u6521
  8763  001550  EFAC  F00A         	goto	u6520
  8764  001554                     u6521:
  8765  001554  EF90  F00A         	goto	l5948
  8766  001558                     u6520:
  8767  001558                     
  8768                           ; BSR set to: 0
  8769  001558  0E00               	movlw	0
  8770  00155A  6F61               	movwf	___flmul@aexp& (0+255),b
  8771  00155C                     
  8772                           ; BSR set to: 0
  8773  00155C  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  8774  00155E  EFB3  F00A         	goto	u6531
  8775  001562  EFB5  F00A         	goto	u6530
  8776  001566                     u6531:
  8777  001566  EFD9  F00A         	goto	l1440
  8778  00156A                     u6530:
  8779  00156A                     
  8780                           ; BSR set to: 0
  8781  00156A  0EFF               	movlw	255
  8782  00156C  1562               	andwf	___flmul@grs& (0+255),w,b
  8783  00156E  6E4F               	movwf	??___flmul^0,c
  8784  001570  0EFF               	movlw	255
  8785  001572  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
  8786  001574  6E50               	movwf	(??___flmul+1)^0,c
  8787  001576  0EFF               	movlw	255
  8788  001578  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
  8789  00157A  6E51               	movwf	(??___flmul+2)^0,c
  8790  00157C  0E7F               	movlw	127
  8791  00157E  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
  8792  001580  6E52               	movwf	(??___flmul+3)^0,c
  8793  001582  504F               	movf	??___flmul^0,w,c
  8794  001584  1050               	iorwf	(??___flmul+1)^0,w,c
  8795  001586  1051               	iorwf	(??___flmul+2)^0,w,c
  8796  001588  1052               	iorwf	(??___flmul+3)^0,w,c
  8797  00158A  B4D8               	btfsc	status,2,c
  8798  00158C  EFCA  F00A         	goto	u6541
  8799  001590  EFCC  F00A         	goto	u6540
  8800  001594                     u6541:
  8801  001594  EFD0  F00A         	goto	l1441
  8802  001598                     u6540:
  8803  001598                     l5962:
  8804                           
  8805                           ; BSR set to: 0
  8806  001598  0E01               	movlw	1
  8807  00159A  6F61               	movwf	___flmul@aexp& (0+255),b
  8808  00159C  EFD9  F00A         	goto	l1440
  8809  0015A0                     l1441:
  8810                           
  8811                           ; BSR set to: 0
  8812  0015A0  A167               	btfss	___flmul@prod& (0+255),0,b
  8813  0015A2  EFD5  F00A         	goto	u6551
  8814  0015A6  EFD7  F00A         	goto	u6550
  8815  0015AA                     u6551:
  8816  0015AA  EFD9  F00A         	goto	l1440
  8817  0015AE                     u6550:
  8818  0015AE  EFCC  F00A         	goto	l5962
  8819  0015B2                     l1440:
  8820                           
  8821                           ; BSR set to: 0
  8822  0015B2  5161               	movf	___flmul@aexp& (0+255),w,b
  8823  0015B4  B4D8               	btfsc	status,2,c
  8824  0015B6  EFDF  F00A         	goto	u6561
  8825  0015BA  EFE1  F00A         	goto	u6560
  8826  0015BE                     u6561:
  8827  0015BE  EF05  F00B         	goto	l5974
  8828  0015C2                     u6560:
  8829  0015C2                     
  8830                           ; BSR set to: 0
  8831  0015C2  0E01               	movlw	1
  8832  0015C4  2767               	addwf	___flmul@prod& (0+255),f,b
  8833  0015C6  0E00               	movlw	0
  8834  0015C8  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8835  0015CA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8836  0015CC  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8837  0015CE                     
  8838                           ; BSR set to: 0
  8839  0015CE  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  8840  0015D0  EFEC  F00A         	goto	u6571
  8841  0015D4  EFEE  F00A         	goto	u6570
  8842  0015D8                     u6571:
  8843  0015D8  EF05  F00B         	goto	l5974
  8844  0015DC                     u6570:
  8845  0015DC                     
  8846                           ; BSR set to: 0
  8847  0015DC  C067  F04F         	movff	___flmul@prod,??___flmul
  8848  0015E0  C068  F050         	movff	___flmul@prod+1,??___flmul+1
  8849  0015E4  C069  F051         	movff	___flmul@prod+2,??___flmul+2
  8850  0015E8  C06A  F052         	movff	___flmul@prod+3,??___flmul+3
  8851  0015EC  3452               	rlcf	(??___flmul+3)^0,w,c
  8852  0015EE  3252               	rrcf	(??___flmul+3)^0,f,c
  8853  0015F0  3251               	rrcf	(??___flmul+2)^0,f,c
  8854  0015F2  3250               	rrcf	(??___flmul+1)^0,f,c
  8855  0015F4  324F               	rrcf	??___flmul^0,f,c
  8856  0015F6  C04F  F067         	movff	??___flmul,___flmul@prod
  8857  0015FA  C050  F068         	movff	??___flmul+1,___flmul@prod+1
  8858  0015FE  C051  F069         	movff	??___flmul+2,___flmul@prod+2
  8859  001602  C052  F06A         	movff	??___flmul+3,___flmul@prod+3
  8860  001606                     
  8861                           ; BSR set to: 0
  8862  001606  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  8863  001608  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  8864  00160A                     l5974:
  8865                           
  8866                           ; BSR set to: 0
  8867  00160A  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8868  00160C  EF10  F00B         	goto	u6581
  8869  001610  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8870  001612  E108               	bnz	u6580
  8871  001614  296B               	incf	___flmul@temp& (0+255),w,b
  8872  001616  A0D8               	btfss	status,0,c
  8873  001618  EF10  F00B         	goto	u6581
  8874  00161C  EF12  F00B         	goto	u6580
  8875  001620                     u6581:
  8876  001620  EF1C  F00B         	goto	l5978
  8877  001624                     u6580:
  8878  001624                     
  8879                           ; BSR set to: 0
  8880  001624  0E00               	movlw	0
  8881  001626  6F67               	movwf	___flmul@prod& (0+255),b
  8882  001628  0E00               	movlw	0
  8883  00162A  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8884  00162C  0E80               	movlw	128
  8885  00162E  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8886  001630  0E7F               	movlw	127
  8887  001632  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8888  001634  EF4A  F00B         	goto	l5990
  8889  001638                     l5978:
  8890                           
  8891                           ; BSR set to: 0
  8892  001638  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8893  00163A  EF29  F00B         	goto	u6590
  8894  00163E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8895  001640  E106               	bnz	u6591
  8896  001642  056B               	decf	___flmul@temp& (0+255),w,b
  8897  001644  B0D8               	btfsc	status,0,c
  8898  001646  EF27  F00B         	goto	u6591
  8899  00164A  EF29  F00B         	goto	u6590
  8900  00164E                     u6591:
  8901  00164E  EF35  F00B         	goto	l1448
  8902  001652                     u6590:
  8903  001652                     
  8904                           ; BSR set to: 0
  8905  001652  0E00               	movlw	0
  8906  001654  6F67               	movwf	___flmul@prod& (0+255),b
  8907  001656  0E00               	movlw	0
  8908  001658  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8909  00165A  0E00               	movlw	0
  8910  00165C  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8911  00165E  0E00               	movlw	0
  8912  001660  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8913  001662  0E00               	movlw	0
  8914  001664  6F60               	movwf	___flmul@sign& (0+255),b
  8915  001666  EF4A  F00B         	goto	l5990
  8916  00166A                     l1448:
  8917                           
  8918                           ; BSR set to: 0
  8919  00166A  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  8920  00166E                     
  8921                           ; BSR set to: 0
  8922  00166E  0EFF               	movlw	255
  8923  001670  1767               	andwf	___flmul@prod& (0+255),f,b
  8924  001672  0EFF               	movlw	255
  8925  001674  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  8926  001676  0E7F               	movlw	127
  8927  001678  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  8928  00167A  0E00               	movlw	0
  8929  00167C  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  8930  00167E                     
  8931                           ; BSR set to: 0
  8932  00167E  A166               	btfss	___flmul@bexp& (0+255),0,b
  8933  001680  EF44  F00B         	goto	u6601
  8934  001684  EF46  F00B         	goto	u6600
  8935  001688                     u6601:
  8936  001688  EF47  F00B         	goto	l5988
  8937  00168C                     u6600:
  8938  00168C                     
  8939                           ; BSR set to: 0
  8940  00168C  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  8941  00168E                     l5988:
  8942                           
  8943                           ; BSR set to: 0
  8944  00168E  90D8               	bcf	status,0,c
  8945  001690  3166               	rrcf	___flmul@bexp& (0+255),w,b
  8946  001692  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8947  001694                     l5990:
  8948                           
  8949                           ; BSR set to: 0
  8950  001694  5160               	movf	___flmul@sign& (0+255),w,b
  8951  001696  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  8952  001698                     
  8953                           ; BSR set to: 0
  8954  001698  C067  F047         	movff	___flmul@prod,?___flmul
  8955  00169C  C068  F048         	movff	___flmul@prod+1,?___flmul+1
  8956  0016A0  C069  F049         	movff	___flmul@prod+2,?___flmul+2
  8957  0016A4  C06A  F04A         	movff	___flmul@prod+3,?___flmul+3
  8958  0016A8                     l1435:
  8959                           
  8960                           ; BSR set to: 0
  8961  0016A8  0012               	return		;funcret
  8962  0016AA                     __end_of___flmul:
  8963                           	callstack 0
  8964                           
  8965 ;; *************** function __tdiv_to_l_ *****************
  8966 ;; Defined at:
  8967 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\ftdivl.c"
  8968 ;; Parameters:    Size  Location     Type
  8969 ;;  f1              4    1[COMRAM] float 
  8970 ;;  f2              4    5[COMRAM] float 
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;  quot            4   12[COMRAM] unsigned long 
  8973 ;;  exp1            1   17[COMRAM] unsigned char 
  8974 ;;  cntr            1   16[COMRAM] unsigned char 
  8975 ;; Return value:  Size  Location     Type
  8976 ;;                  4    1[COMRAM] unsigned long 
  8977 ;; Registers used:
  8978 ;;		wreg, status,2, status,0
  8979 ;; Tracked objects:
  8980 ;;		On entry : 0/0
  8981 ;;		On exit  : 0/0
  8982 ;;		Unchanged: 0/0
  8983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8984 ;;      Params:         8       0       0       0       0       0       0       0       0
  8985 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8986 ;;      Temps:          3       0       0       0       0       0       0       0       0
  8987 ;;      Totals:        17       0       0       0       0       0       0       0       0
  8988 ;;Total ram usage:       17 bytes
  8989 ;; Hardware stack levels used:    1
  8990 ;; Hardware stack levels required when called:    4
  8991 ;; This function calls:
  8992 ;;		Nothing
  8993 ;; This function is called by:
  8994 ;;		_sprintf
  8995 ;; This function uses a non-reentrant model
  8996 ;;
  8997                           
  8998                           	psect	text29
  8999  002FD8                     __ptext29:
  9000                           	callstack 0
  9001  002FD8                     __tdiv_to_l_:
  9002                           	callstack 24
  9003  002FD8  C004  F00A         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9004  002FDC  6A0B               	clrf	(??__tdiv_to_l_+1)^0,c
  9005  002FDE  6A0C               	clrf	(??__tdiv_to_l_+2)^0,c
  9006  002FE0  3403               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  9007  002FE2  360A               	rlcf	??__tdiv_to_l_^0,f,c
  9008  002FE4  E301               	bnc	u7361
  9009  002FE6  800B               	bsf	(??__tdiv_to_l_+1)^0,0,c
  9010  002FE8                     u7361:
  9011  002FE8  500A               	movf	??__tdiv_to_l_^0,w,c
  9012  002FEA  6E12               	movwf	__tdiv_to_l_@exp1^0,c
  9013  002FEC  5012               	movf	__tdiv_to_l_@exp1^0,w,c
  9014  002FEE  A4D8               	btfss	status,2,c
  9015  002FF0  EFFC  F017         	goto	u7371
  9016  002FF4  EFFE  F017         	goto	u7370
  9017  002FF8                     u7371:
  9018  002FF8  EF08  F018         	goto	l6424
  9019  002FFC                     u7370:
  9020  002FFC                     l6420:
  9021  002FFC  0E00               	movlw	0
  9022  002FFE  6E02               	movwf	?__tdiv_to_l_^0,c
  9023  003000  0E00               	movlw	0
  9024  003002  6E03               	movwf	(?__tdiv_to_l_+1)^0,c
  9025  003004  0E00               	movlw	0
  9026  003006  6E04               	movwf	(?__tdiv_to_l_+2)^0,c
  9027  003008  0E00               	movlw	0
  9028  00300A  6E05               	movwf	(?__tdiv_to_l_+3)^0,c
  9029  00300C  EF96  F018         	goto	l1158
  9030  003010                     l6424:
  9031  003010  C008  F00A         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9032  003014  6A0B               	clrf	(??__tdiv_to_l_+1)^0,c
  9033  003016  6A0C               	clrf	(??__tdiv_to_l_+2)^0,c
  9034  003018  3407               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  9035  00301A  360A               	rlcf	??__tdiv_to_l_^0,f,c
  9036  00301C  E301               	bnc	u7381
  9037  00301E  800B               	bsf	(??__tdiv_to_l_+1)^0,0,c
  9038  003020                     u7381:
  9039  003020  500A               	movf	??__tdiv_to_l_^0,w,c
  9040  003022  6E11               	movwf	__tdiv_to_l_@cntr^0,c
  9041  003024  5011               	movf	__tdiv_to_l_@cntr^0,w,c
  9042  003026  A4D8               	btfss	status,2,c
  9043  003028  EF18  F018         	goto	u7391
  9044  00302C  EF1A  F018         	goto	u7390
  9045  003030                     u7391:
  9046  003030  EF1C  F018         	goto	l6430
  9047  003034                     u7390:
  9048  003034  EFFE  F017         	goto	l6420
  9049  003038                     l6430:
  9050  003038  8E03               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  9051  00303A  0EFF               	movlw	255
  9052  00303C  1602               	andwf	__tdiv_to_l_@f1^0,f,c
  9053  00303E  0EFF               	movlw	255
  9054  003040  1603               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  9055  003042  0E00               	movlw	0
  9056  003044  1604               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  9057  003046  8E07               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  9058  003048  0EFF               	movlw	255
  9059  00304A  1606               	andwf	__tdiv_to_l_@f2^0,f,c
  9060  00304C  0EFF               	movlw	255
  9061  00304E  1607               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  9062  003050  0E00               	movlw	0
  9063  003052  1608               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  9064  003054  0E00               	movlw	0
  9065  003056  6E0D               	movwf	__tdiv_to_l_@quot^0,c
  9066  003058  0E00               	movlw	0
  9067  00305A  6E0E               	movwf	(__tdiv_to_l_@quot+1)^0,c
  9068  00305C  0E00               	movlw	0
  9069  00305E  6E0F               	movwf	(__tdiv_to_l_@quot+2)^0,c
  9070  003060  0E00               	movlw	0
  9071  003062  6E10               	movwf	(__tdiv_to_l_@quot+3)^0,c
  9072  003064  0E7F               	movlw	127
  9073  003066  5E12               	subwf	__tdiv_to_l_@exp1^0,f,c
  9074  003068  5011               	movf	__tdiv_to_l_@cntr^0,w,c
  9075  00306A  0F98               	addlw	152
  9076  00306C  5E12               	subwf	__tdiv_to_l_@exp1^0,f,c
  9077  00306E  0E18               	movlw	24
  9078  003070  6E11               	movwf	__tdiv_to_l_@cntr^0,c
  9079  003072                     l1160:
  9080  003072  90D8               	bcf	status,0,c
  9081  003074  360D               	rlcf	__tdiv_to_l_@quot^0,f,c
  9082  003076  360E               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  9083  003078  360F               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  9084  00307A  3610               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  9085  00307C  5006               	movf	__tdiv_to_l_@f2^0,w,c
  9086  00307E  5C02               	subwf	__tdiv_to_l_@f1^0,w,c
  9087  003080  5007               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  9088  003082  5803               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  9089  003084  5008               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  9090  003086  5804               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  9091  003088  A0D8               	btfss	status,0,c
  9092  00308A  EF49  F018         	goto	u7401
  9093  00308E  EF4B  F018         	goto	u7400
  9094  003092                     u7401:
  9095  003092  EF52  F018         	goto	l1161
  9096  003096                     u7400:
  9097  003096  5006               	movf	__tdiv_to_l_@f2^0,w,c
  9098  003098  5E02               	subwf	__tdiv_to_l_@f1^0,f,c
  9099  00309A  5007               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  9100  00309C  5A03               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  9101  00309E  5008               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  9102  0030A0  5A04               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  9103  0030A2  800D               	bsf	__tdiv_to_l_@quot^0,0,c
  9104  0030A4                     l1161:
  9105  0030A4  90D8               	bcf	status,0,c
  9106  0030A6  3602               	rlcf	__tdiv_to_l_@f1^0,f,c
  9107  0030A8  3603               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  9108  0030AA  3604               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  9109  0030AC  2E11               	decfsz	__tdiv_to_l_@cntr^0,f,c
  9110  0030AE  EF39  F018         	goto	l1160
  9111  0030B2  BE12               	btfsc	__tdiv_to_l_@exp1^0,7,c
  9112  0030B4  EF60  F018         	goto	u7410
  9113  0030B8  EF5E  F018         	goto	u7411
  9114  0030BC                     u7411:
  9115  0030BC  EF76  F018         	goto	l6464
  9116  0030C0                     u7410:
  9117  0030C0  5012               	movf	__tdiv_to_l_@exp1^0,w,c
  9118  0030C2  0A80               	xorlw	128
  9119  0030C4  0F97               	addlw	151
  9120  0030C6  B0D8               	btfsc	status,0,c
  9121  0030C8  EF68  F018         	goto	u7421
  9122  0030CC  EF6A  F018         	goto	u7420
  9123  0030D0                     u7421:
  9124  0030D0  EF6C  F018         	goto	l6460
  9125  0030D4                     u7420:
  9126  0030D4  EFFE  F017         	goto	l6420
  9127  0030D8                     l6460:
  9128  0030D8  90D8               	bcf	status,0,c
  9129  0030DA  3210               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  9130  0030DC  320F               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  9131  0030DE  320E               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  9132  0030E0  320D               	rrcf	__tdiv_to_l_@quot^0,f,c
  9133  0030E2  3E12               	incfsz	__tdiv_to_l_@exp1^0,f,c
  9134  0030E4  EF6C  F018         	goto	l6460
  9135  0030E8  EF8E  F018         	goto	l1167
  9136  0030EC                     l6464:
  9137  0030EC  0E17               	movlw	23
  9138  0030EE  6412               	cpfsgt	__tdiv_to_l_@exp1^0,c
  9139  0030F0  EF7C  F018         	goto	u7431
  9140  0030F4  EF7E  F018         	goto	u7430
  9141  0030F8                     u7431:
  9142  0030F8  EF86  F018         	goto	l6472
  9143  0030FC                     u7430:
  9144  0030FC  EFFE  F017         	goto	l6420
  9145  003100                     l6470:
  9146  003100  90D8               	bcf	status,0,c
  9147  003102  360D               	rlcf	__tdiv_to_l_@quot^0,f,c
  9148  003104  360E               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  9149  003106  360F               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  9150  003108  3610               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  9151  00310A  0612               	decf	__tdiv_to_l_@exp1^0,f,c
  9152  00310C                     l6472:
  9153  00310C  5012               	movf	__tdiv_to_l_@exp1^0,w,c
  9154  00310E  A4D8               	btfss	status,2,c
  9155  003110  EF8C  F018         	goto	u7441
  9156  003114  EF8E  F018         	goto	u7440
  9157  003118                     u7441:
  9158  003118  EF80  F018         	goto	l6470
  9159  00311C                     u7440:
  9160  00311C                     l1167:
  9161  00311C  C00D  F002         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9162  003120  C00E  F003         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9163  003124  C00F  F004         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9164  003128  C010  F005         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9165  00312C                     l1158:
  9166  00312C  0012               	return		;funcret
  9167  00312E                     __end_of__tdiv_to_l_:
  9168                           	callstack 0
  9169                           
  9170 ;; *************** function __div_to_l_ *****************
  9171 ;; Defined at:
  9172 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fldivl.c"
  9173 ;; Parameters:    Size  Location     Type
  9174 ;;  f1              4    1[COMRAM] unsigned long 
  9175 ;;  f2              4    5[COMRAM] unsigned long 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;  quot            4    9[COMRAM] unsigned long 
  9178 ;;  exp1            1   14[COMRAM] unsigned char 
  9179 ;;  cntr            1   13[COMRAM] unsigned char 
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  4    1[COMRAM] unsigned long 
  9182 ;; Registers used:
  9183 ;;		wreg, status,2, status,0
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9189 ;;      Params:         8       0       0       0       0       0       0       0       0
  9190 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9192 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9193 ;;Total ram usage:       14 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; Hardware stack levels required when called:    4
  9196 ;; This function calls:
  9197 ;;		Nothing
  9198 ;; This function is called by:
  9199 ;;		_sprintf
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           	psect	text30
  9204  00312E                     __ptext30:
  9205                           	callstack 0
  9206  00312E                     __div_to_l_:
  9207                           	callstack 24
  9208  00312E  3404               	rlcf	(__div_to_l_@f1+2)^0,w,c
  9209  003130  3405               	rlcf	(__div_to_l_@f1+3)^0,w,c
  9210  003132  6E0F               	movwf	__div_to_l_@exp1^0,c
  9211  003134  500F               	movf	__div_to_l_@exp1^0,w,c
  9212  003136  A4D8               	btfss	status,2,c
  9213  003138  EFA0  F018         	goto	u7451
  9214  00313C  EFA2  F018         	goto	u7450
  9215  003140                     u7451:
  9216  003140  EFAC  F018         	goto	l6480
  9217  003144                     u7450:
  9218  003144                     l6476:
  9219  003144  0E00               	movlw	0
  9220  003146  6E02               	movwf	?__div_to_l_^0,c
  9221  003148  0E00               	movlw	0
  9222  00314A  6E03               	movwf	(?__div_to_l_+1)^0,c
  9223  00314C  0E00               	movlw	0
  9224  00314E  6E04               	movwf	(?__div_to_l_+2)^0,c
  9225  003150  0E00               	movlw	0
  9226  003152  6E05               	movwf	(?__div_to_l_+3)^0,c
  9227  003154  EF3C  F019         	goto	l1049
  9228  003158                     l6480:
  9229  003158  3408               	rlcf	(__div_to_l_@f2+2)^0,w,c
  9230  00315A  3409               	rlcf	(__div_to_l_@f2+3)^0,w,c
  9231  00315C  6E0E               	movwf	__div_to_l_@cntr^0,c
  9232  00315E  500E               	movf	__div_to_l_@cntr^0,w,c
  9233  003160  A4D8               	btfss	status,2,c
  9234  003162  EFB5  F018         	goto	u7461
  9235  003166  EFB7  F018         	goto	u7460
  9236  00316A                     u7461:
  9237  00316A  EFB9  F018         	goto	l6486
  9238  00316E                     u7460:
  9239  00316E  EFA2  F018         	goto	l6476
  9240  003172                     l6486:
  9241  003172  8E04               	bsf	(__div_to_l_@f1+2)^0,7,c
  9242  003174  0EFF               	movlw	255
  9243  003176  1602               	andwf	__div_to_l_@f1^0,f,c
  9244  003178  0EFF               	movlw	255
  9245  00317A  1603               	andwf	(__div_to_l_@f1+1)^0,f,c
  9246  00317C  0EFF               	movlw	255
  9247  00317E  1604               	andwf	(__div_to_l_@f1+2)^0,f,c
  9248  003180  0E00               	movlw	0
  9249  003182  1605               	andwf	(__div_to_l_@f1+3)^0,f,c
  9250  003184  8E08               	bsf	(__div_to_l_@f2+2)^0,7,c
  9251  003186  0EFF               	movlw	255
  9252  003188  1606               	andwf	__div_to_l_@f2^0,f,c
  9253  00318A  0EFF               	movlw	255
  9254  00318C  1607               	andwf	(__div_to_l_@f2+1)^0,f,c
  9255  00318E  0EFF               	movlw	255
  9256  003190  1608               	andwf	(__div_to_l_@f2+2)^0,f,c
  9257  003192  0E00               	movlw	0
  9258  003194  1609               	andwf	(__div_to_l_@f2+3)^0,f,c
  9259  003196  0E00               	movlw	0
  9260  003198  6E0A               	movwf	__div_to_l_@quot^0,c
  9261  00319A  0E00               	movlw	0
  9262  00319C  6E0B               	movwf	(__div_to_l_@quot+1)^0,c
  9263  00319E  0E00               	movlw	0
  9264  0031A0  6E0C               	movwf	(__div_to_l_@quot+2)^0,c
  9265  0031A2  0E00               	movlw	0
  9266  0031A4  6E0D               	movwf	(__div_to_l_@quot+3)^0,c
  9267  0031A6  0E7F               	movlw	127
  9268  0031A8  5E0F               	subwf	__div_to_l_@exp1^0,f,c
  9269  0031AA  500E               	movf	__div_to_l_@cntr^0,w,c
  9270  0031AC  0FA0               	addlw	160
  9271  0031AE  5E0F               	subwf	__div_to_l_@exp1^0,f,c
  9272  0031B0  0E20               	movlw	32
  9273  0031B2  6E0E               	movwf	__div_to_l_@cntr^0,c
  9274  0031B4                     l6500:
  9275  0031B4  90D8               	bcf	status,0,c
  9276  0031B6  360A               	rlcf	__div_to_l_@quot^0,f,c
  9277  0031B8  360B               	rlcf	(__div_to_l_@quot+1)^0,f,c
  9278  0031BA  360C               	rlcf	(__div_to_l_@quot+2)^0,f,c
  9279  0031BC  360D               	rlcf	(__div_to_l_@quot+3)^0,f,c
  9280  0031BE  5006               	movf	__div_to_l_@f2^0,w,c
  9281  0031C0  5C02               	subwf	__div_to_l_@f1^0,w,c
  9282  0031C2  5007               	movf	(__div_to_l_@f2+1)^0,w,c
  9283  0031C4  5803               	subwfb	(__div_to_l_@f1+1)^0,w,c
  9284  0031C6  5008               	movf	(__div_to_l_@f2+2)^0,w,c
  9285  0031C8  5804               	subwfb	(__div_to_l_@f1+2)^0,w,c
  9286  0031CA  5009               	movf	(__div_to_l_@f2+3)^0,w,c
  9287  0031CC  5805               	subwfb	(__div_to_l_@f1+3)^0,w,c
  9288  0031CE  A0D8               	btfss	status,0,c
  9289  0031D0  EFEC  F018         	goto	u7471
  9290  0031D4  EFEE  F018         	goto	u7470
  9291  0031D8                     u7471:
  9292  0031D8  EFF7  F018         	goto	l6508
  9293  0031DC                     u7470:
  9294  0031DC  5006               	movf	__div_to_l_@f2^0,w,c
  9295  0031DE  5E02               	subwf	__div_to_l_@f1^0,f,c
  9296  0031E0  5007               	movf	(__div_to_l_@f2+1)^0,w,c
  9297  0031E2  5A03               	subwfb	(__div_to_l_@f1+1)^0,f,c
  9298  0031E4  5008               	movf	(__div_to_l_@f2+2)^0,w,c
  9299  0031E6  5A04               	subwfb	(__div_to_l_@f1+2)^0,f,c
  9300  0031E8  5009               	movf	(__div_to_l_@f2+3)^0,w,c
  9301  0031EA  5A05               	subwfb	(__div_to_l_@f1+3)^0,f,c
  9302  0031EC  800A               	bsf	__div_to_l_@quot^0,0,c
  9303  0031EE                     l6508:
  9304  0031EE  90D8               	bcf	status,0,c
  9305  0031F0  3602               	rlcf	__div_to_l_@f1^0,f,c
  9306  0031F2  3603               	rlcf	(__div_to_l_@f1+1)^0,f,c
  9307  0031F4  3604               	rlcf	(__div_to_l_@f1+2)^0,f,c
  9308  0031F6  3605               	rlcf	(__div_to_l_@f1+3)^0,f,c
  9309  0031F8  2E0E               	decfsz	__div_to_l_@cntr^0,f,c
  9310  0031FA  EFDA  F018         	goto	l6500
  9311  0031FE  BE0F               	btfsc	__div_to_l_@exp1^0,7,c
  9312  003200  EF06  F019         	goto	u7480
  9313  003204  EF04  F019         	goto	u7481
  9314  003208                     u7481:
  9315  003208  EF1C  F019         	goto	l6524
  9316  00320C                     u7480:
  9317  00320C  500F               	movf	__div_to_l_@exp1^0,w,c
  9318  00320E  0A80               	xorlw	128
  9319  003210  0F9F               	addlw	159
  9320  003212  B0D8               	btfsc	status,0,c
  9321  003214  EF0E  F019         	goto	u7491
  9322  003218  EF10  F019         	goto	u7490
  9323  00321C                     u7491:
  9324  00321C  EF12  F019         	goto	l6520
  9325  003220                     u7490:
  9326  003220  EFA2  F018         	goto	l6476
  9327  003224                     l6520:
  9328  003224  90D8               	bcf	status,0,c
  9329  003226  320D               	rrcf	(__div_to_l_@quot+3)^0,f,c
  9330  003228  320C               	rrcf	(__div_to_l_@quot+2)^0,f,c
  9331  00322A  320B               	rrcf	(__div_to_l_@quot+1)^0,f,c
  9332  00322C  320A               	rrcf	__div_to_l_@quot^0,f,c
  9333  00322E  3E0F               	incfsz	__div_to_l_@exp1^0,f,c
  9334  003230  EF12  F019         	goto	l6520
  9335  003234  EF34  F019         	goto	l1058
  9336  003238                     l6524:
  9337  003238  0E1F               	movlw	31
  9338  00323A  640F               	cpfsgt	__div_to_l_@exp1^0,c
  9339  00323C  EF22  F019         	goto	u7501
  9340  003240  EF24  F019         	goto	u7500
  9341  003244                     u7501:
  9342  003244  EF2C  F019         	goto	l6532
  9343  003248                     u7500:
  9344  003248  EFA2  F018         	goto	l6476
  9345  00324C                     l6530:
  9346  00324C  90D8               	bcf	status,0,c
  9347  00324E  360A               	rlcf	__div_to_l_@quot^0,f,c
  9348  003250  360B               	rlcf	(__div_to_l_@quot+1)^0,f,c
  9349  003252  360C               	rlcf	(__div_to_l_@quot+2)^0,f,c
  9350  003254  360D               	rlcf	(__div_to_l_@quot+3)^0,f,c
  9351  003256  060F               	decf	__div_to_l_@exp1^0,f,c
  9352  003258                     l6532:
  9353  003258  500F               	movf	__div_to_l_@exp1^0,w,c
  9354  00325A  A4D8               	btfss	status,2,c
  9355  00325C  EF32  F019         	goto	u7511
  9356  003260  EF34  F019         	goto	u7510
  9357  003264                     u7511:
  9358  003264  EF26  F019         	goto	l6530
  9359  003268                     u7510:
  9360  003268                     l1058:
  9361  003268  C00A  F002         	movff	__div_to_l_@quot,?__div_to_l_
  9362  00326C  C00B  F003         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9363  003270  C00C  F004         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9364  003274  C00D  F005         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9365  003278                     l1049:
  9366  003278  0012               	return		;funcret
  9367  00327A                     __end_of__div_to_l_:
  9368                           	callstack 0
  9369                           
  9370 ;; *************** function ___xxtofl *****************
  9371 ;; Defined at:
  9372 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  9373 ;; Parameters:    Size  Location     Type
  9374 ;;  sign            1    wreg     unsigned char 
  9375 ;;  val             4   36[COMRAM] long 
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;  sign            1   44[COMRAM] unsigned char 
  9378 ;;  arg             4   46[COMRAM] unsigned long 
  9379 ;;  exp             1   45[COMRAM] unsigned char 
  9380 ;; Return value:  Size  Location     Type
  9381 ;;                  4   36[COMRAM] unsigned char 
  9382 ;; Registers used:
  9383 ;;		wreg, status,2, status,0
  9384 ;; Tracked objects:
  9385 ;;		On entry : 0/0
  9386 ;;		On exit  : 0/0
  9387 ;;		Unchanged: 0/0
  9388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9389 ;;      Params:         4       0       0       0       0       0       0       0       0
  9390 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9391 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9392 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9393 ;;Total ram usage:       14 bytes
  9394 ;; Hardware stack levels used:    1
  9395 ;; Hardware stack levels required when called:    4
  9396 ;; This function calls:
  9397 ;;		Nothing
  9398 ;; This function is called by:
  9399 ;;		_ComputeWaterVol
  9400 ;;		_sprintf
  9401 ;;		_pow
  9402 ;;		_exp
  9403 ;;		_floor
  9404 ;;		_log
  9405 ;; This function uses a non-reentrant model
  9406 ;;
  9407                           
  9408                           	psect	text31
  9409  002C84                     __ptext31:
  9410                           	callstack 0
  9411  002C84                     ___xxtofl:
  9412                           	callstack 23
  9413                           
  9414                           ;incstack = 0
  9415                           ;___xxtofl@sign stored from wreg
  9416  002C84  6E2D               	movwf	___xxtofl@sign^0,c
  9417  002C86  502D               	movf	___xxtofl@sign^0,w,c
  9418  002C88  B4D8               	btfsc	status,2,c
  9419  002C8A  EF49  F016         	goto	u6731
  9420  002C8E  EF4B  F016         	goto	u6730
  9421  002C92                     u6731:
  9422  002C92  EF6D  F016         	goto	l1492
  9423  002C96                     u6730:
  9424  002C96  BE28               	btfsc	(___xxtofl@val+3)^0,7,c
  9425  002C98  EF52  F016         	goto	u6740
  9426  002C9C  EF50  F016         	goto	u6741
  9427  002CA0                     u6741:
  9428  002CA0  EF6D  F016         	goto	l1492
  9429  002CA4                     u6740:
  9430  002CA4  C025  F029         	movff	___xxtofl@val,??___xxtofl
  9431  002CA8  C026  F02A         	movff	___xxtofl@val+1,??___xxtofl+1
  9432  002CAC  C027  F02B         	movff	___xxtofl@val+2,??___xxtofl+2
  9433  002CB0  C028  F02C         	movff	___xxtofl@val+3,??___xxtofl+3
  9434  002CB4  1E29               	comf	??___xxtofl^0,f,c
  9435  002CB6  1E2A               	comf	(??___xxtofl+1)^0,f,c
  9436  002CB8  1E2B               	comf	(??___xxtofl+2)^0,f,c
  9437  002CBA  1E2C               	comf	(??___xxtofl+3)^0,f,c
  9438  002CBC  2A29               	incf	??___xxtofl^0,f,c
  9439  002CBE  0E00               	movlw	0
  9440  002CC0  222A               	addwfc	(??___xxtofl+1)^0,f,c
  9441  002CC2  222B               	addwfc	(??___xxtofl+2)^0,f,c
  9442  002CC4  222C               	addwfc	(??___xxtofl+3)^0,f,c
  9443  002CC6  C029  F02F         	movff	??___xxtofl,___xxtofl@arg
  9444  002CCA  C02A  F030         	movff	??___xxtofl+1,___xxtofl@arg+1
  9445  002CCE  C02B  F031         	movff	??___xxtofl+2,___xxtofl@arg+2
  9446  002CD2  C02C  F032         	movff	??___xxtofl+3,___xxtofl@arg+3
  9447  002CD6  EF75  F016         	goto	l6068
  9448  002CDA                     l1492:
  9449  002CDA  C025  F02F         	movff	___xxtofl@val,___xxtofl@arg
  9450  002CDE  C026  F030         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9451  002CE2  C027  F031         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9452  002CE6  C028  F032         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9453  002CEA                     l6068:
  9454  002CEA  5025               	movf	___xxtofl@val^0,w,c
  9455  002CEC  1026               	iorwf	(___xxtofl@val+1)^0,w,c
  9456  002CEE  1027               	iorwf	(___xxtofl@val+2)^0,w,c
  9457  002CF0  1028               	iorwf	(___xxtofl@val+3)^0,w,c
  9458  002CF2  A4D8               	btfss	status,2,c
  9459  002CF4  EF7E  F016         	goto	u6751
  9460  002CF8  EF80  F016         	goto	u6750
  9461  002CFC                     u6751:
  9462  002CFC  EF8A  F016         	goto	l6074
  9463  002D00                     u6750:
  9464  002D00  0E00               	movlw	0
  9465  002D02  6E25               	movwf	?___xxtofl^0,c
  9466  002D04  0E00               	movlw	0
  9467  002D06  6E26               	movwf	(?___xxtofl+1)^0,c
  9468  002D08  0E00               	movlw	0
  9469  002D0A  6E27               	movwf	(?___xxtofl+2)^0,c
  9470  002D0C  0E00               	movlw	0
  9471  002D0E  6E28               	movwf	(?___xxtofl+3)^0,c
  9472  002D10  EF1B  F017         	goto	l1495
  9473  002D14                     l6074:
  9474  002D14  0E96               	movlw	150
  9475  002D16  6E2E               	movwf	___xxtofl@exp^0,c
  9476  002D18  EF94  F016         	goto	l6078
  9477  002D1C                     l6076:
  9478  002D1C  2A2E               	incf	___xxtofl@exp^0,f,c
  9479  002D1E  90D8               	bcf	status,0,c
  9480  002D20  3232               	rrcf	(___xxtofl@arg+3)^0,f,c
  9481  002D22  3231               	rrcf	(___xxtofl@arg+2)^0,f,c
  9482  002D24  3230               	rrcf	(___xxtofl@arg+1)^0,f,c
  9483  002D26  322F               	rrcf	___xxtofl@arg^0,f,c
  9484  002D28                     l6078:
  9485  002D28  0E00               	movlw	0
  9486  002D2A  142F               	andwf	___xxtofl@arg^0,w,c
  9487  002D2C  6E29               	movwf	??___xxtofl^0,c
  9488  002D2E  0E00               	movlw	0
  9489  002D30  1430               	andwf	(___xxtofl@arg+1)^0,w,c
  9490  002D32  6E2A               	movwf	(??___xxtofl+1)^0,c
  9491  002D34  0E00               	movlw	0
  9492  002D36  1431               	andwf	(___xxtofl@arg+2)^0,w,c
  9493  002D38  6E2B               	movwf	(??___xxtofl+2)^0,c
  9494  002D3A  0EFE               	movlw	254
  9495  002D3C  1432               	andwf	(___xxtofl@arg+3)^0,w,c
  9496  002D3E  6E2C               	movwf	(??___xxtofl+3)^0,c
  9497  002D40  5029               	movf	??___xxtofl^0,w,c
  9498  002D42  102A               	iorwf	(??___xxtofl+1)^0,w,c
  9499  002D44  102B               	iorwf	(??___xxtofl+2)^0,w,c
  9500  002D46  102C               	iorwf	(??___xxtofl+3)^0,w,c
  9501  002D48  A4D8               	btfss	status,2,c
  9502  002D4A  EFA9  F016         	goto	u6761
  9503  002D4E  EFAB  F016         	goto	u6760
  9504  002D52                     u6761:
  9505  002D52  EF8E  F016         	goto	l6076
  9506  002D56                     u6760:
  9507  002D56  EFB9  F016         	goto	l1499
  9508  002D5A                     l6080:
  9509  002D5A  2A2E               	incf	___xxtofl@exp^0,f,c
  9510  002D5C  0E01               	movlw	1
  9511  002D5E  262F               	addwf	___xxtofl@arg^0,f,c
  9512  002D60  0E00               	movlw	0
  9513  002D62  2230               	addwfc	(___xxtofl@arg+1)^0,f,c
  9514  002D64  2231               	addwfc	(___xxtofl@arg+2)^0,f,c
  9515  002D66  2232               	addwfc	(___xxtofl@arg+3)^0,f,c
  9516  002D68  90D8               	bcf	status,0,c
  9517  002D6A  3232               	rrcf	(___xxtofl@arg+3)^0,f,c
  9518  002D6C  3231               	rrcf	(___xxtofl@arg+2)^0,f,c
  9519  002D6E  3230               	rrcf	(___xxtofl@arg+1)^0,f,c
  9520  002D70  322F               	rrcf	___xxtofl@arg^0,f,c
  9521  002D72                     l1499:
  9522  002D72  0E00               	movlw	0
  9523  002D74  142F               	andwf	___xxtofl@arg^0,w,c
  9524  002D76  6E29               	movwf	??___xxtofl^0,c
  9525  002D78  0E00               	movlw	0
  9526  002D7A  1430               	andwf	(___xxtofl@arg+1)^0,w,c
  9527  002D7C  6E2A               	movwf	(??___xxtofl+1)^0,c
  9528  002D7E  0E00               	movlw	0
  9529  002D80  1431               	andwf	(___xxtofl@arg+2)^0,w,c
  9530  002D82  6E2B               	movwf	(??___xxtofl+2)^0,c
  9531  002D84  0EFF               	movlw	255
  9532  002D86  1432               	andwf	(___xxtofl@arg+3)^0,w,c
  9533  002D88  6E2C               	movwf	(??___xxtofl+3)^0,c
  9534  002D8A  5029               	movf	??___xxtofl^0,w,c
  9535  002D8C  102A               	iorwf	(??___xxtofl+1)^0,w,c
  9536  002D8E  102B               	iorwf	(??___xxtofl+2)^0,w,c
  9537  002D90  102C               	iorwf	(??___xxtofl+3)^0,w,c
  9538  002D92  A4D8               	btfss	status,2,c
  9539  002D94  EFCE  F016         	goto	u6771
  9540  002D98  EFD0  F016         	goto	u6770
  9541  002D9C                     u6771:
  9542  002D9C  EFAD  F016         	goto	l6080
  9543  002DA0                     u6770:
  9544  002DA0  EFD8  F016         	goto	l6088
  9545  002DA4                     l6086:
  9546  002DA4  062E               	decf	___xxtofl@exp^0,f,c
  9547  002DA6  90D8               	bcf	status,0,c
  9548  002DA8  362F               	rlcf	___xxtofl@arg^0,f,c
  9549  002DAA  3630               	rlcf	(___xxtofl@arg+1)^0,f,c
  9550  002DAC  3631               	rlcf	(___xxtofl@arg+2)^0,f,c
  9551  002DAE  3632               	rlcf	(___xxtofl@arg+3)^0,f,c
  9552  002DB0                     l6088:
  9553  002DB0  BE31               	btfsc	(___xxtofl@arg+2)^0,7,c
  9554  002DB2  EFDD  F016         	goto	u6781
  9555  002DB6  EFDF  F016         	goto	u6780
  9556  002DBA                     u6781:
  9557  002DBA  EFE7  F016         	goto	l1506
  9558  002DBE                     u6780:
  9559  002DBE  0E02               	movlw	2
  9560  002DC0  602E               	cpfslt	___xxtofl@exp^0,c
  9561  002DC2  EFE5  F016         	goto	u6791
  9562  002DC6  EFE7  F016         	goto	u6790
  9563  002DCA                     u6791:
  9564  002DCA  EFD2  F016         	goto	l6086
  9565  002DCE                     u6790:
  9566  002DCE                     l1506:
  9567  002DCE  B02E               	btfsc	___xxtofl@exp^0,0,c
  9568  002DD0  EFEC  F016         	goto	u6801
  9569  002DD4  EFEE  F016         	goto	u6800
  9570  002DD8                     u6801:
  9571  002DD8  EFEF  F016         	goto	l6094
  9572  002DDC                     u6800:
  9573  002DDC  9E31               	bcf	(___xxtofl@arg+2)^0,7,c
  9574  002DDE                     l6094:
  9575  002DDE  90D8               	bcf	status,0,c
  9576  002DE0  322E               	rrcf	___xxtofl@exp^0,f,c
  9577  002DE2  C02E  F029         	movff	___xxtofl@exp,??___xxtofl
  9578  002DE6  6A2A               	clrf	(??___xxtofl+1)^0,c
  9579  002DE8  6A2B               	clrf	(??___xxtofl+2)^0,c
  9580  002DEA  6A2C               	clrf	(??___xxtofl+3)^0,c
  9581  002DEC  C029  F02C         	movff	??___xxtofl,??___xxtofl+3
  9582  002DF0  6A2B               	clrf	(??___xxtofl+2)^0,c
  9583  002DF2  6A2A               	clrf	(??___xxtofl+1)^0,c
  9584  002DF4  6A29               	clrf	??___xxtofl^0,c
  9585  002DF6  5029               	movf	??___xxtofl^0,w,c
  9586  002DF8  122F               	iorwf	___xxtofl@arg^0,f,c
  9587  002DFA  502A               	movf	(??___xxtofl+1)^0,w,c
  9588  002DFC  1230               	iorwf	(___xxtofl@arg+1)^0,f,c
  9589  002DFE  502B               	movf	(??___xxtofl+2)^0,w,c
  9590  002E00  1231               	iorwf	(___xxtofl@arg+2)^0,f,c
  9591  002E02  502C               	movf	(??___xxtofl+3)^0,w,c
  9592  002E04  1232               	iorwf	(___xxtofl@arg+3)^0,f,c
  9593  002E06  502D               	movf	___xxtofl@sign^0,w,c
  9594  002E08  B4D8               	btfsc	status,2,c
  9595  002E0A  EF09  F017         	goto	u6811
  9596  002E0E  EF0B  F017         	goto	u6810
  9597  002E12                     u6811:
  9598  002E12  EF13  F017         	goto	l6104
  9599  002E16                     u6810:
  9600  002E16  BE28               	btfsc	(___xxtofl@val+3)^0,7,c
  9601  002E18  EF12  F017         	goto	u6820
  9602  002E1C  EF10  F017         	goto	u6821
  9603  002E20                     u6821:
  9604  002E20  EF13  F017         	goto	l6104
  9605  002E24                     u6820:
  9606  002E24  8E32               	bsf	(___xxtofl@arg+3)^0,7,c
  9607  002E26                     l6104:
  9608  002E26  C02F  F025         	movff	___xxtofl@arg,?___xxtofl
  9609  002E2A  C030  F026         	movff	___xxtofl@arg+1,?___xxtofl+1
  9610  002E2E  C031  F027         	movff	___xxtofl@arg+2,?___xxtofl+2
  9611  002E32  C032  F028         	movff	___xxtofl@arg+3,?___xxtofl+3
  9612  002E36                     l1495:
  9613  002E36  0012               	return		;funcret
  9614  002E38                     __end_of___xxtofl:
  9615                           	callstack 0
  9616                           
  9617 ;; *************** function ___wmul *****************
  9618 ;; Defined at:
  9619 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;  multiplier      2    1[COMRAM] unsigned int 
  9622 ;;  multiplicand    2    3[COMRAM] unsigned int 
  9623 ;; Auto vars:     Size  Location     Type
  9624 ;;  product         2    5[COMRAM] unsigned int 
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  2    1[COMRAM] unsigned int 
  9627 ;; Registers used:
  9628 ;;		wreg, status,2, status,0, prodl, prodh
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9634 ;;      Params:         4       0       0       0       0       0       0       0       0
  9635 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9637 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9638 ;;Total ram usage:        6 bytes
  9639 ;; Hardware stack levels used:    1
  9640 ;; Hardware stack levels required when called:    4
  9641 ;; This function calls:
  9642 ;;		Nothing
  9643 ;; This function is called by:
  9644 ;;		_sprintf
  9645 ;; This function uses a non-reentrant model
  9646 ;;
  9647                           
  9648                           	psect	text32
  9649  004486                     __ptext32:
  9650                           	callstack 0
  9651  004486                     ___wmul:
  9652                           	callstack 24
  9653  004486  5002               	movf	___wmul@multiplier^0,w,c
  9654  004488  0204               	mulwf	___wmul@multiplicand^0,c
  9655  00448A  CFF3 F006          	movff	prodl,___wmul@product
  9656  00448E  CFF4 F007          	movff	prodh,___wmul@product+1
  9657  004492  5002               	movf	___wmul@multiplier^0,w,c
  9658  004494  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  9659  004496  50F3               	movf	243,w,c
  9660  004498  2607               	addwf	(___wmul@product+1)^0,f,c
  9661  00449A  5003               	movf	(___wmul@multiplier+1)^0,w,c
  9662  00449C  0204               	mulwf	___wmul@multiplicand^0,c
  9663  00449E  50F3               	movf	243,w,c
  9664  0044A0  2607               	addwf	(___wmul@product+1)^0,f,c
  9665  0044A2  C006  F002         	movff	___wmul@product,?___wmul
  9666  0044A6  C007  F003         	movff	___wmul@product+1,?___wmul+1
  9667  0044AA  0012               	return		;funcret
  9668  0044AC                     __end_of___wmul:
  9669                           	callstack 0
  9670                           
  9671 ;; *************** function ___llmod *****************
  9672 ;; Defined at:
  9673 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\llmod.c"
  9674 ;; Parameters:    Size  Location     Type
  9675 ;;  dividend        4   14[COMRAM] unsigned long 
  9676 ;;  divisor         4   18[COMRAM] unsigned long 
  9677 ;; Auto vars:     Size  Location     Type
  9678 ;;  counter         1   22[COMRAM] unsigned char 
  9679 ;; Return value:  Size  Location     Type
  9680 ;;                  4   14[COMRAM] unsigned long 
  9681 ;; Registers used:
  9682 ;;		wreg, status,2, status,0
  9683 ;; Tracked objects:
  9684 ;;		On entry : 0/0
  9685 ;;		On exit  : 0/0
  9686 ;;		Unchanged: 0/0
  9687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9688 ;;      Params:         8       0       0       0       0       0       0       0       0
  9689 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9691 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9692 ;;Total ram usage:        9 bytes
  9693 ;; Hardware stack levels used:    1
  9694 ;; Hardware stack levels required when called:    4
  9695 ;; This function calls:
  9696 ;;		Nothing
  9697 ;; This function is called by:
  9698 ;;		_sprintf
  9699 ;; This function uses a non-reentrant model
  9700 ;;
  9701                           
  9702                           	psect	text33
  9703  003F26                     __ptext33:
  9704                           	callstack 0
  9705  003F26                     ___llmod:
  9706                           	callstack 24
  9707  003F26  5013               	movf	___llmod@divisor^0,w,c
  9708  003F28  1014               	iorwf	(___llmod@divisor+1)^0,w,c
  9709  003F2A  1015               	iorwf	(___llmod@divisor+2)^0,w,c
  9710  003F2C  1016               	iorwf	(___llmod@divisor+3)^0,w,c
  9711  003F2E  B4D8               	btfsc	status,2,c
  9712  003F30  EF9C  F01F         	goto	u7551
  9713  003F34  EF9E  F01F         	goto	u7550
  9714  003F38                     u7551:
  9715  003F38  EFCE  F01F         	goto	l1237
  9716  003F3C                     u7550:
  9717  003F3C  0E01               	movlw	1
  9718  003F3E  6E17               	movwf	___llmod@counter^0,c
  9719  003F40  EFA8  F01F         	goto	l6568
  9720  003F44                     l6566:
  9721  003F44  90D8               	bcf	status,0,c
  9722  003F46  3613               	rlcf	___llmod@divisor^0,f,c
  9723  003F48  3614               	rlcf	(___llmod@divisor+1)^0,f,c
  9724  003F4A  3615               	rlcf	(___llmod@divisor+2)^0,f,c
  9725  003F4C  3616               	rlcf	(___llmod@divisor+3)^0,f,c
  9726  003F4E  2A17               	incf	___llmod@counter^0,f,c
  9727  003F50                     l6568:
  9728  003F50  AE16               	btfss	(___llmod@divisor+3)^0,7,c
  9729  003F52  EFAD  F01F         	goto	u7561
  9730  003F56  EFAF  F01F         	goto	u7560
  9731  003F5A                     u7561:
  9732  003F5A  EFA2  F01F         	goto	l6566
  9733  003F5E                     u7560:
  9734  003F5E                     l6570:
  9735  003F5E  5013               	movf	___llmod@divisor^0,w,c
  9736  003F60  5C0F               	subwf	___llmod@dividend^0,w,c
  9737  003F62  5014               	movf	(___llmod@divisor+1)^0,w,c
  9738  003F64  5810               	subwfb	(___llmod@dividend+1)^0,w,c
  9739  003F66  5015               	movf	(___llmod@divisor+2)^0,w,c
  9740  003F68  5811               	subwfb	(___llmod@dividend+2)^0,w,c
  9741  003F6A  5016               	movf	(___llmod@divisor+3)^0,w,c
  9742  003F6C  5812               	subwfb	(___llmod@dividend+3)^0,w,c
  9743  003F6E  A0D8               	btfss	status,0,c
  9744  003F70  EFBC  F01F         	goto	u7571
  9745  003F74  EFBE  F01F         	goto	u7570
  9746  003F78                     u7571:
  9747  003F78  EFC6  F01F         	goto	l6574
  9748  003F7C                     u7570:
  9749  003F7C  5013               	movf	___llmod@divisor^0,w,c
  9750  003F7E  5E0F               	subwf	___llmod@dividend^0,f,c
  9751  003F80  5014               	movf	(___llmod@divisor+1)^0,w,c
  9752  003F82  5A10               	subwfb	(___llmod@dividend+1)^0,f,c
  9753  003F84  5015               	movf	(___llmod@divisor+2)^0,w,c
  9754  003F86  5A11               	subwfb	(___llmod@dividend+2)^0,f,c
  9755  003F88  5016               	movf	(___llmod@divisor+3)^0,w,c
  9756  003F8A  5A12               	subwfb	(___llmod@dividend+3)^0,f,c
  9757  003F8C                     l6574:
  9758  003F8C  90D8               	bcf	status,0,c
  9759  003F8E  3216               	rrcf	(___llmod@divisor+3)^0,f,c
  9760  003F90  3215               	rrcf	(___llmod@divisor+2)^0,f,c
  9761  003F92  3214               	rrcf	(___llmod@divisor+1)^0,f,c
  9762  003F94  3213               	rrcf	___llmod@divisor^0,f,c
  9763  003F96  2E17               	decfsz	___llmod@counter^0,f,c
  9764  003F98  EFAF  F01F         	goto	l6570
  9765  003F9C                     l1237:
  9766  003F9C  C00F  F00F         	movff	___llmod@dividend,?___llmod
  9767  003FA0  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
  9768  003FA4  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
  9769  003FA8  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
  9770  003FAC  0012               	return		;funcret
  9771  003FAE                     __end_of___llmod:
  9772                           	callstack 0
  9773                           
  9774 ;; *************** function ___lldiv *****************
  9775 ;; Defined at:
  9776 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  9777 ;; Parameters:    Size  Location     Type
  9778 ;;  dividend        4    1[COMRAM] unsigned long 
  9779 ;;  divisor         4    5[COMRAM] unsigned long 
  9780 ;; Auto vars:     Size  Location     Type
  9781 ;;  quotient        4    9[COMRAM] unsigned long 
  9782 ;;  counter         1   13[COMRAM] unsigned char 
  9783 ;; Return value:  Size  Location     Type
  9784 ;;                  4    1[COMRAM] unsigned long 
  9785 ;; Registers used:
  9786 ;;		wreg, status,2, status,0
  9787 ;; Tracked objects:
  9788 ;;		On entry : 0/0
  9789 ;;		On exit  : 0/0
  9790 ;;		Unchanged: 0/0
  9791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9792 ;;      Params:         8       0       0       0       0       0       0       0       0
  9793 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9794 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9795 ;;      Totals:        13       0       0       0       0       0       0       0       0
  9796 ;;Total ram usage:       13 bytes
  9797 ;; Hardware stack levels used:    1
  9798 ;; Hardware stack levels required when called:    4
  9799 ;; This function calls:
  9800 ;;		Nothing
  9801 ;; This function is called by:
  9802 ;;		_sprintf
  9803 ;; This function uses a non-reentrant model
  9804 ;;
  9805                           
  9806                           	psect	text34
  9807  003DDE                     __ptext34:
  9808                           	callstack 0
  9809  003DDE                     ___lldiv:
  9810                           	callstack 24
  9811  003DDE  0E00               	movlw	0
  9812  003DE0  6E0A               	movwf	___lldiv@quotient^0,c
  9813  003DE2  0E00               	movlw	0
  9814  003DE4  6E0B               	movwf	(___lldiv@quotient+1)^0,c
  9815  003DE6  0E00               	movlw	0
  9816  003DE8  6E0C               	movwf	(___lldiv@quotient+2)^0,c
  9817  003DEA  0E00               	movlw	0
  9818  003DEC  6E0D               	movwf	(___lldiv@quotient+3)^0,c
  9819  003DEE  5006               	movf	___lldiv@divisor^0,w,c
  9820  003DF0  1007               	iorwf	(___lldiv@divisor+1)^0,w,c
  9821  003DF2  1008               	iorwf	(___lldiv@divisor+2)^0,w,c
  9822  003DF4  1009               	iorwf	(___lldiv@divisor+3)^0,w,c
  9823  003DF6  B4D8               	btfsc	status,2,c
  9824  003DF8  EF00  F01F         	goto	u7521
  9825  003DFC  EF02  F01F         	goto	u7520
  9826  003E00                     u7521:
  9827  003E00  EF38  F01F         	goto	l822
  9828  003E04                     u7520:
  9829  003E04  0E01               	movlw	1
  9830  003E06  6E0E               	movwf	___lldiv@counter^0,c
  9831  003E08  EF0C  F01F         	goto	l6548
  9832  003E0C                     l6546:
  9833  003E0C  90D8               	bcf	status,0,c
  9834  003E0E  3606               	rlcf	___lldiv@divisor^0,f,c
  9835  003E10  3607               	rlcf	(___lldiv@divisor+1)^0,f,c
  9836  003E12  3608               	rlcf	(___lldiv@divisor+2)^0,f,c
  9837  003E14  3609               	rlcf	(___lldiv@divisor+3)^0,f,c
  9838  003E16  2A0E               	incf	___lldiv@counter^0,f,c
  9839  003E18                     l6548:
  9840  003E18  AE09               	btfss	(___lldiv@divisor+3)^0,7,c
  9841  003E1A  EF11  F01F         	goto	u7531
  9842  003E1E  EF13  F01F         	goto	u7530
  9843  003E22                     u7531:
  9844  003E22  EF06  F01F         	goto	l6546
  9845  003E26                     u7530:
  9846  003E26                     l6550:
  9847  003E26  90D8               	bcf	status,0,c
  9848  003E28  360A               	rlcf	___lldiv@quotient^0,f,c
  9849  003E2A  360B               	rlcf	(___lldiv@quotient+1)^0,f,c
  9850  003E2C  360C               	rlcf	(___lldiv@quotient+2)^0,f,c
  9851  003E2E  360D               	rlcf	(___lldiv@quotient+3)^0,f,c
  9852  003E30  5006               	movf	___lldiv@divisor^0,w,c
  9853  003E32  5C02               	subwf	___lldiv@dividend^0,w,c
  9854  003E34  5007               	movf	(___lldiv@divisor+1)^0,w,c
  9855  003E36  5803               	subwfb	(___lldiv@dividend+1)^0,w,c
  9856  003E38  5008               	movf	(___lldiv@divisor+2)^0,w,c
  9857  003E3A  5804               	subwfb	(___lldiv@dividend+2)^0,w,c
  9858  003E3C  5009               	movf	(___lldiv@divisor+3)^0,w,c
  9859  003E3E  5805               	subwfb	(___lldiv@dividend+3)^0,w,c
  9860  003E40  A0D8               	btfss	status,0,c
  9861  003E42  EF25  F01F         	goto	u7541
  9862  003E46  EF27  F01F         	goto	u7540
  9863  003E4A                     u7541:
  9864  003E4A  EF30  F01F         	goto	l6558
  9865  003E4E                     u7540:
  9866  003E4E  5006               	movf	___lldiv@divisor^0,w,c
  9867  003E50  5E02               	subwf	___lldiv@dividend^0,f,c
  9868  003E52  5007               	movf	(___lldiv@divisor+1)^0,w,c
  9869  003E54  5A03               	subwfb	(___lldiv@dividend+1)^0,f,c
  9870  003E56  5008               	movf	(___lldiv@divisor+2)^0,w,c
  9871  003E58  5A04               	subwfb	(___lldiv@dividend+2)^0,f,c
  9872  003E5A  5009               	movf	(___lldiv@divisor+3)^0,w,c
  9873  003E5C  5A05               	subwfb	(___lldiv@dividend+3)^0,f,c
  9874  003E5E  800A               	bsf	___lldiv@quotient^0,0,c
  9875  003E60                     l6558:
  9876  003E60  90D8               	bcf	status,0,c
  9877  003E62  3209               	rrcf	(___lldiv@divisor+3)^0,f,c
  9878  003E64  3208               	rrcf	(___lldiv@divisor+2)^0,f,c
  9879  003E66  3207               	rrcf	(___lldiv@divisor+1)^0,f,c
  9880  003E68  3206               	rrcf	___lldiv@divisor^0,f,c
  9881  003E6A  2E0E               	decfsz	___lldiv@counter^0,f,c
  9882  003E6C  EF13  F01F         	goto	l6550
  9883  003E70                     l822:
  9884  003E70  C00A  F002         	movff	___lldiv@quotient,?___lldiv
  9885  003E74  C00B  F003         	movff	___lldiv@quotient+1,?___lldiv+1
  9886  003E78  C00C  F004         	movff	___lldiv@quotient+2,?___lldiv+2
  9887  003E7C  C00D  F005         	movff	___lldiv@quotient+3,?___lldiv+3
  9888  003E80  0012               	return		;funcret
  9889  003E82                     __end_of___lldiv:
  9890                           	callstack 0
  9891                           
  9892 ;; *************** function ___fltol *****************
  9893 ;; Defined at:
  9894 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  9895 ;; Parameters:    Size  Location     Type
  9896 ;;  f1              4   26[COMRAM] unsigned long 
  9897 ;; Auto vars:     Size  Location     Type
  9898 ;;  exp1            1   35[COMRAM] unsigned char 
  9899 ;;  sign1           1   34[COMRAM] unsigned char 
  9900 ;; Return value:  Size  Location     Type
  9901 ;;                  4   26[COMRAM] long 
  9902 ;; Registers used:
  9903 ;;		wreg, status,2, status,0
  9904 ;; Tracked objects:
  9905 ;;		On entry : 0/0
  9906 ;;		On exit  : 0/0
  9907 ;;		Unchanged: 0/0
  9908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9909 ;;      Params:         4       0       0       0       0       0       0       0       0
  9910 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9911 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9912 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9913 ;;Total ram usage:       10 bytes
  9914 ;; Hardware stack levels used:    1
  9915 ;; Hardware stack levels required when called:    4
  9916 ;; This function calls:
  9917 ;;		Nothing
  9918 ;; This function is called by:
  9919 ;;		_ComputeWaterVol
  9920 ;;		_sprintf
  9921 ;;		_pow
  9922 ;;		_exp
  9923 ;;		_floor
  9924 ;; This function uses a non-reentrant model
  9925 ;;
  9926                           
  9927                           	psect	text35
  9928  003602                     __ptext35:
  9929                           	callstack 0
  9930  003602                     ___fltol:
  9931                           	callstack 22
  9932  003602  341D               	rlcf	(___fltol@f1+2)^0,w,c
  9933  003604  341E               	rlcf	(___fltol@f1+3)^0,w,c
  9934  003606  6E24               	movwf	___fltol@exp1^0,c
  9935  003608  5024               	movf	___fltol@exp1^0,w,c
  9936  00360A  A4D8               	btfss	status,2,c
  9937  00360C  EF0A  F01B         	goto	u6661
  9938  003610  EF0C  F01B         	goto	u6660
  9939  003614                     u6661:
  9940  003614  EF16  F01B         	goto	l6024
  9941  003618                     u6660:
  9942  003618                     l6020:
  9943  003618  0E00               	movlw	0
  9944  00361A  6E1B               	movwf	?___fltol^0,c
  9945  00361C  0E00               	movlw	0
  9946  00361E  6E1C               	movwf	(?___fltol+1)^0,c
  9947  003620  0E00               	movlw	0
  9948  003622  6E1D               	movwf	(?___fltol+2)^0,c
  9949  003624  0E00               	movlw	0
  9950  003626  6E1E               	movwf	(?___fltol+3)^0,c
  9951  003628  EF83  F01B         	goto	l1101
  9952  00362C                     l6024:
  9953  00362C  C01B  F01F         	movff	___fltol@f1,??___fltol
  9954  003630  C01C  F020         	movff	___fltol@f1+1,??___fltol+1
  9955  003634  C01D  F021         	movff	___fltol@f1+2,??___fltol+2
  9956  003638  C01E  F022         	movff	___fltol@f1+3,??___fltol+3
  9957  00363C  0E20               	movlw	32
  9958  00363E  EF26  F01B         	goto	u6670
  9959  003642                     u6675:
  9960  003642  90D8               	bcf	status,0,c
  9961  003644  3222               	rrcf	(??___fltol+3)^0,f,c
  9962  003646  3221               	rrcf	(??___fltol+2)^0,f,c
  9963  003648  3220               	rrcf	(??___fltol+1)^0,f,c
  9964  00364A  321F               	rrcf	??___fltol^0,f,c
  9965  00364C                     u6670:
  9966  00364C  2EE8               	decfsz	wreg,f,c
  9967  00364E  EF21  F01B         	goto	u6675
  9968  003652  501F               	movf	??___fltol^0,w,c
  9969  003654  6E23               	movwf	___fltol@sign1^0,c
  9970  003656  8E1D               	bsf	(___fltol@f1+2)^0,7,c
  9971  003658  0EFF               	movlw	255
  9972  00365A  161B               	andwf	___fltol@f1^0,f,c
  9973  00365C  0EFF               	movlw	255
  9974  00365E  161C               	andwf	(___fltol@f1+1)^0,f,c
  9975  003660  0EFF               	movlw	255
  9976  003662  161D               	andwf	(___fltol@f1+2)^0,f,c
  9977  003664  0E00               	movlw	0
  9978  003666  161E               	andwf	(___fltol@f1+3)^0,f,c
  9979  003668  0E96               	movlw	150
  9980  00366A  5E24               	subwf	___fltol@exp1^0,f,c
  9981  00366C  BE24               	btfsc	___fltol@exp1^0,7,c
  9982  00366E  EF3D  F01B         	goto	u6680
  9983  003672  EF3B  F01B         	goto	u6681
  9984  003676                     u6681:
  9985  003676  EF53  F01B         	goto	l6044
  9986  00367A                     u6680:
  9987  00367A  5024               	movf	___fltol@exp1^0,w,c
  9988  00367C  0A80               	xorlw	128
  9989  00367E  0F97               	addlw	151
  9990  003680  B0D8               	btfsc	status,0,c
  9991  003682  EF45  F01B         	goto	u6691
  9992  003686  EF47  F01B         	goto	u6690
  9993  00368A                     u6691:
  9994  00368A  EF49  F01B         	goto	l6040
  9995  00368E                     u6690:
  9996  00368E  EF0C  F01B         	goto	l6020
  9997  003692                     l6040:
  9998  003692  90D8               	bcf	status,0,c
  9999  003694  321E               	rrcf	(___fltol@f1+3)^0,f,c
 10000  003696  321D               	rrcf	(___fltol@f1+2)^0,f,c
 10001  003698  321C               	rrcf	(___fltol@f1+1)^0,f,c
 10002  00369A  321B               	rrcf	___fltol@f1^0,f,c
 10003  00369C  3E24               	incfsz	___fltol@exp1^0,f,c
 10004  00369E  EF49  F01B         	goto	l6040
 10005  0036A2  EF6B  F01B         	goto	l6054
 10006  0036A6                     l6044:
 10007  0036A6  0E1F               	movlw	31
 10008  0036A8  6424               	cpfsgt	___fltol@exp1^0,c
 10009  0036AA  EF59  F01B         	goto	u6701
 10010  0036AE  EF5B  F01B         	goto	u6700
 10011  0036B2                     u6701:
 10012  0036B2  EF63  F01B         	goto	l6052
 10013  0036B6                     u6700:
 10014  0036B6  EF0C  F01B         	goto	l6020
 10015  0036BA                     l6050:
 10016  0036BA  90D8               	bcf	status,0,c
 10017  0036BC  361B               	rlcf	___fltol@f1^0,f,c
 10018  0036BE  361C               	rlcf	(___fltol@f1+1)^0,f,c
 10019  0036C0  361D               	rlcf	(___fltol@f1+2)^0,f,c
 10020  0036C2  361E               	rlcf	(___fltol@f1+3)^0,f,c
 10021  0036C4  0624               	decf	___fltol@exp1^0,f,c
 10022  0036C6                     l6052:
 10023  0036C6  5024               	movf	___fltol@exp1^0,w,c
 10024  0036C8  A4D8               	btfss	status,2,c
 10025  0036CA  EF69  F01B         	goto	u6711
 10026  0036CE  EF6B  F01B         	goto	u6710
 10027  0036D2                     u6711:
 10028  0036D2  EF5D  F01B         	goto	l6050
 10029  0036D6                     u6710:
 10030  0036D6                     l6054:
 10031  0036D6  5023               	movf	___fltol@sign1^0,w,c
 10032  0036D8  B4D8               	btfsc	status,2,c
 10033  0036DA  EF71  F01B         	goto	u6721
 10034  0036DE  EF73  F01B         	goto	u6720
 10035  0036E2                     u6721:
 10036  0036E2  EF7B  F01B         	goto	l6058
 10037  0036E6                     u6720:
 10038  0036E6  1E1E               	comf	(___fltol@f1+3)^0,f,c
 10039  0036E8  1E1D               	comf	(___fltol@f1+2)^0,f,c
 10040  0036EA  1E1C               	comf	(___fltol@f1+1)^0,f,c
 10041  0036EC  6C1B               	negf	___fltol@f1^0,c
 10042  0036EE  0E00               	movlw	0
 10043  0036F0  221C               	addwfc	(___fltol@f1+1)^0,f,c
 10044  0036F2  221D               	addwfc	(___fltol@f1+2)^0,f,c
 10045  0036F4  221E               	addwfc	(___fltol@f1+3)^0,f,c
 10046  0036F6                     l6058:
 10047  0036F6  C01B  F01B         	movff	___fltol@f1,?___fltol
 10048  0036FA  C01C  F01C         	movff	___fltol@f1+1,?___fltol+1
 10049  0036FE  C01D  F01D         	movff	___fltol@f1+2,?___fltol+2
 10050  003702  C01E  F01E         	movff	___fltol@f1+3,?___fltol+3
 10051  003706                     l1101:
 10052  003706  0012               	return		;funcret
 10053  003708                     __end_of___fltol:
 10054                           	callstack 0
 10055                           
 10056 ;; *************** function ___flsub *****************
 10057 ;; Defined at:
 10058 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;  b               4   34[BANK0 ] long 
 10061 ;;  a               4   38[BANK0 ] long 
 10062 ;; Auto vars:     Size  Location     Type
 10063 ;;		None
 10064 ;; Return value:  Size  Location     Type
 10065 ;;                  4   34[BANK0 ] long 
 10066 ;; Registers used:
 10067 ;;		wreg, status,2, status,0, cstack
 10068 ;; Tracked objects:
 10069 ;;		On entry : 0/0
 10070 ;;		On exit  : 0/0
 10071 ;;		Unchanged: 0/0
 10072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10073 ;;      Params:         0       8       0       0       0       0       0       0       0
 10074 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10075 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10076 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10077 ;;Total ram usage:        8 bytes
 10078 ;; Hardware stack levels used:    1
 10079 ;; Hardware stack levels required when called:    5
 10080 ;; This function calls:
 10081 ;;		___fladd
 10082 ;; This function is called by:
 10083 ;;		_ComputeWaterVol
 10084 ;;		_sprintf
 10085 ;;		_exp
 10086 ;; This function uses a non-reentrant model
 10087 ;;
 10088                           
 10089                           	psect	text36
 10090  0043D4                     __ptext36:
 10091                           	callstack 0
 10092  0043D4                     ___flsub:
 10093                           	callstack 22
 10094  0043D4  0E00               	movlw	0
 10095  0043D6  0100               	movlb	0	; () banked
 10096  0043D8  1B86               	xorwf	___flsub@a& (0+255),f,b
 10097  0043DA  0E00               	movlw	0
 10098  0043DC  1B87               	xorwf	(___flsub@a+1)& (0+255),f,b
 10099  0043DE  0E00               	movlw	0
 10100  0043E0  1B88               	xorwf	(___flsub@a+2)& (0+255),f,b
 10101  0043E2  0E80               	movlw	128
 10102  0043E4  1B89               	xorwf	(___flsub@a+3)& (0+255),f,b
 10103  0043E6                     
 10104                           ; BSR set to: 0
 10105  0043E6  C082  F076         	movff	___flsub@b,___fladd@b
 10106  0043EA  C083  F077         	movff	___flsub@b+1,___fladd@b+1
 10107  0043EE  C084  F078         	movff	___flsub@b+2,___fladd@b+2
 10108  0043F2  C085  F079         	movff	___flsub@b+3,___fladd@b+3
 10109  0043F6  C086  F07A         	movff	___flsub@a,___fladd@a
 10110  0043FA  C087  F07B         	movff	___flsub@a+1,___fladd@a+1
 10111  0043FE  C088  F07C         	movff	___flsub@a+2,___fladd@a+2
 10112  004402  C089  F07D         	movff	___flsub@a+3,___fladd@a+3
 10113  004406  ECDE  F006         	call	___fladd	;wreg free
 10114  00440A  C076  F082         	movff	?___fladd,?___flsub
 10115  00440E  C077  F083         	movff	?___fladd+1,?___flsub+1
 10116  004412  C078  F084         	movff	?___fladd+2,?___flsub+2
 10117  004416  C079  F085         	movff	?___fladd+3,?___flsub+3
 10118  00441A  0012               	return		;funcret
 10119  00441C                     __end_of___flsub:
 10120                           	callstack 0
 10121                           
 10122 ;; *************** function ___fladd *****************
 10123 ;; Defined at:
 10124 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
 10125 ;; Parameters:    Size  Location     Type
 10126 ;;  b               4   22[BANK0 ] long 
 10127 ;;  a               4   26[BANK0 ] long 
 10128 ;; Auto vars:     Size  Location     Type
 10129 ;;  grs             1   33[BANK0 ] unsigned char 
 10130 ;;  bexp            1   32[BANK0 ] unsigned char 
 10131 ;;  aexp            1   31[BANK0 ] unsigned char 
 10132 ;;  signs           1   30[BANK0 ] unsigned char 
 10133 ;; Return value:  Size  Location     Type
 10134 ;;                  4   22[BANK0 ] unsigned char 
 10135 ;; Registers used:
 10136 ;;		wreg, status,2, status,0
 10137 ;; Tracked objects:
 10138 ;;		On entry : 0/0
 10139 ;;		On exit  : 0/0
 10140 ;;		Unchanged: 0/0
 10141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10142 ;;      Params:         0       8       0       0       0       0       0       0       0
 10143 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10144 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10145 ;;      Totals:         4      12       0       0       0       0       0       0       0
 10146 ;;Total ram usage:       16 bytes
 10147 ;; Hardware stack levels used:    1
 10148 ;; Hardware stack levels required when called:    4
 10149 ;; This function calls:
 10150 ;;		Nothing
 10151 ;; This function is called by:
 10152 ;;		_ComputeWaterVol
 10153 ;;		_sprintf
 10154 ;;		___flsub
 10155 ;;		_eval_poly
 10156 ;;		_floor
 10157 ;;		_log
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161                           	psect	text37
 10162  000DBC                     __ptext37:
 10163                           	callstack 0
 10164  000DBC                     ___fladd:
 10165                           	callstack 22
 10166  000DBC  0100               	movlb	0	; () banked
 10167  000DBE  5179               	movf	(___fladd@b+3)& (0+255),w,b
 10168  000DC0  0B80               	andlw	128
 10169  000DC2  6F7E               	movwf	___fladd@signs& (0+255),b
 10170  000DC4  5179               	movf	(___fladd@b+3)& (0+255),w,b
 10171  000DC6  2579               	addwf	(___fladd@b+3)& (0+255),w,b
 10172  000DC8  6F80               	movwf	___fladd@bexp& (0+255),b
 10173  000DCA                     
 10174                           ; BSR set to: 0
 10175  000DCA  AF78               	btfss	(___fladd@b+2)& (0+255),7,b
 10176  000DCC  EFEA  F006         	goto	u6031
 10177  000DD0  EFEC  F006         	goto	u6030
 10178  000DD4                     u6031:
 10179  000DD4  EFED  F006         	goto	l5670
 10180  000DD8                     u6030:
 10181  000DD8                     
 10182                           ; BSR set to: 0
 10183  000DD8  8180               	bsf	___fladd@bexp& (0+255),0,b
 10184  000DDA                     l5670:
 10185                           
 10186                           ; BSR set to: 0
 10187  000DDA  5180               	movf	___fladd@bexp& (0+255),w,b
 10188  000DDC  B4D8               	btfsc	status,2,c
 10189  000DDE  EFF3  F006         	goto	u6041
 10190  000DE2  EFF5  F006         	goto	u6040
 10191  000DE6                     u6041:
 10192  000DE6  EF0A  F007         	goto	l5680
 10193  000DEA                     u6040:
 10194  000DEA                     
 10195                           ; BSR set to: 0
 10196  000DEA  2980               	incf	___fladd@bexp& (0+255),w,b
 10197  000DEC  A4D8               	btfss	status,2,c
 10198  000DEE  EFFB  F006         	goto	u6051
 10199  000DF2  EFFD  F006         	goto	u6050
 10200  000DF6                     u6051:
 10201  000DF6  EF05  F007         	goto	l5676
 10202  000DFA                     u6050:
 10203  000DFA                     
 10204                           ; BSR set to: 0
 10205  000DFA  0E00               	movlw	0
 10206  000DFC  6F76               	movwf	___fladd@b& (0+255),b
 10207  000DFE  0E00               	movlw	0
 10208  000E00  6F77               	movwf	(___fladd@b+1)& (0+255),b
 10209  000E02  0E00               	movlw	0
 10210  000E04  6F78               	movwf	(___fladd@b+2)& (0+255),b
 10211  000E06  0E00               	movlw	0
 10212  000E08  6F79               	movwf	(___fladd@b+3)& (0+255),b
 10213  000E0A                     l5676:
 10214                           
 10215                           ; BSR set to: 0
 10216  000E0A  8F78               	bsf	(___fladd@b+2)& (0+255),7,b
 10217  000E0C                     
 10218                           ; BSR set to: 0
 10219  000E0C  0E00               	movlw	0
 10220  000E0E  6F79               	movwf	(___fladd@b+3)& (0+255),b
 10221  000E10  EF12  F007         	goto	l5682
 10222  000E14                     l5680:
 10223                           
 10224                           ; BSR set to: 0
 10225  000E14  0E00               	movlw	0
 10226  000E16  6F76               	movwf	___fladd@b& (0+255),b
 10227  000E18  0E00               	movlw	0
 10228  000E1A  6F77               	movwf	(___fladd@b+1)& (0+255),b
 10229  000E1C  0E00               	movlw	0
 10230  000E1E  6F78               	movwf	(___fladd@b+2)& (0+255),b
 10231  000E20  0E00               	movlw	0
 10232  000E22  6F79               	movwf	(___fladd@b+3)& (0+255),b
 10233  000E24                     l5682:
 10234                           
 10235                           ; BSR set to: 0
 10236  000E24  517D               	movf	(___fladd@a+3)& (0+255),w,b
 10237  000E26  0B80               	andlw	128
 10238  000E28  6F7F               	movwf	___fladd@aexp& (0+255),b
 10239  000E2A                     
 10240                           ; BSR set to: 0
 10241  000E2A  517E               	movf	___fladd@signs& (0+255),w,b
 10242  000E2C  197F               	xorwf	___fladd@aexp& (0+255),w,b
 10243  000E2E  B4D8               	btfsc	status,2,c
 10244  000E30  EF1C  F007         	goto	u6061
 10245  000E34  EF1E  F007         	goto	u6060
 10246  000E38                     u6061:
 10247  000E38  EF1F  F007         	goto	l5688
 10248  000E3C                     u6060:
 10249  000E3C                     
 10250                           ; BSR set to: 0
 10251  000E3C  8D7E               	bsf	___fladd@signs& (0+255),6,b
 10252  000E3E                     l5688:
 10253                           
 10254                           ; BSR set to: 0
 10255  000E3E  517D               	movf	(___fladd@a+3)& (0+255),w,b
 10256  000E40  257D               	addwf	(___fladd@a+3)& (0+255),w,b
 10257  000E42  6F7F               	movwf	___fladd@aexp& (0+255),b
 10258  000E44                     
 10259                           ; BSR set to: 0
 10260  000E44  AF7C               	btfss	(___fladd@a+2)& (0+255),7,b
 10261  000E46  EF27  F007         	goto	u6071
 10262  000E4A  EF29  F007         	goto	u6070
 10263  000E4E                     u6071:
 10264  000E4E  EF2A  F007         	goto	l5694
 10265  000E52                     u6070:
 10266  000E52                     
 10267                           ; BSR set to: 0
 10268  000E52  817F               	bsf	___fladd@aexp& (0+255),0,b
 10269  000E54                     l5694:
 10270                           
 10271                           ; BSR set to: 0
 10272  000E54  517F               	movf	___fladd@aexp& (0+255),w,b
 10273  000E56  B4D8               	btfsc	status,2,c
 10274  000E58  EF30  F007         	goto	u6081
 10275  000E5C  EF32  F007         	goto	u6080
 10276  000E60                     u6081:
 10277  000E60  EF47  F007         	goto	l5704
 10278  000E64                     u6080:
 10279  000E64                     
 10280                           ; BSR set to: 0
 10281  000E64  297F               	incf	___fladd@aexp& (0+255),w,b
 10282  000E66  A4D8               	btfss	status,2,c
 10283  000E68  EF38  F007         	goto	u6091
 10284  000E6C  EF3A  F007         	goto	u6090
 10285  000E70                     u6091:
 10286  000E70  EF42  F007         	goto	l5700
 10287  000E74                     u6090:
 10288  000E74                     
 10289                           ; BSR set to: 0
 10290  000E74  0E00               	movlw	0
 10291  000E76  6F7A               	movwf	___fladd@a& (0+255),b
 10292  000E78  0E00               	movlw	0
 10293  000E7A  6F7B               	movwf	(___fladd@a+1)& (0+255),b
 10294  000E7C  0E00               	movlw	0
 10295  000E7E  6F7C               	movwf	(___fladd@a+2)& (0+255),b
 10296  000E80  0E00               	movlw	0
 10297  000E82  6F7D               	movwf	(___fladd@a+3)& (0+255),b
 10298  000E84                     l5700:
 10299                           
 10300                           ; BSR set to: 0
 10301  000E84  8F7C               	bsf	(___fladd@a+2)& (0+255),7,b
 10302  000E86                     
 10303                           ; BSR set to: 0
 10304  000E86  0E00               	movlw	0
 10305  000E88  6F7D               	movwf	(___fladd@a+3)& (0+255),b
 10306  000E8A  EF4F  F007         	goto	l5706
 10307  000E8E                     l5704:
 10308                           
 10309                           ; BSR set to: 0
 10310  000E8E  0E00               	movlw	0
 10311  000E90  6F7A               	movwf	___fladd@a& (0+255),b
 10312  000E92  0E00               	movlw	0
 10313  000E94  6F7B               	movwf	(___fladd@a+1)& (0+255),b
 10314  000E96  0E00               	movlw	0
 10315  000E98  6F7C               	movwf	(___fladd@a+2)& (0+255),b
 10316  000E9A  0E00               	movlw	0
 10317  000E9C  6F7D               	movwf	(___fladd@a+3)& (0+255),b
 10318  000E9E                     l5706:
 10319                           
 10320                           ; BSR set to: 0
 10321  000E9E  5180               	movf	___fladd@bexp& (0+255),w,b
 10322  000EA0  5D7F               	subwf	___fladd@aexp& (0+255),w,b
 10323  000EA2  B0D8               	btfsc	status,0,c
 10324  000EA4  EF56  F007         	goto	u6101
 10325  000EA8  EF58  F007         	goto	u6100
 10326  000EAC                     u6101:
 10327  000EAC  EF7F  F007         	goto	l5742
 10328  000EB0                     u6100:
 10329  000EB0                     
 10330                           ; BSR set to: 0
 10331  000EB0  AD7E               	btfss	___fladd@signs& (0+255),6,b
 10332  000EB2  EF5D  F007         	goto	u6111
 10333  000EB6  EF5F  F007         	goto	u6110
 10334  000EBA                     u6111:
 10335  000EBA  EF61  F007         	goto	l5712
 10336  000EBE                     u6110:
 10337  000EBE                     
 10338                           ; BSR set to: 0
 10339  000EBE  0E80               	movlw	128
 10340  000EC0  1B7E               	xorwf	___fladd@signs& (0+255),f,b
 10341  000EC2                     l5712:
 10342                           
 10343                           ; BSR set to: 0
 10344  000EC2  C080  F081         	movff	___fladd@bexp,___fladd@grs
 10345  000EC6                     
 10346                           ; BSR set to: 0
 10347  000EC6  C07F  F080         	movff	___fladd@aexp,___fladd@bexp
 10348  000ECA                     
 10349                           ; BSR set to: 0
 10350  000ECA  C081  F07F         	movff	___fladd@grs,___fladd@aexp
 10351  000ECE                     
 10352                           ; BSR set to: 0
 10353  000ECE  C076  F081         	movff	___fladd@b,___fladd@grs
 10354  000ED2                     
 10355                           ; BSR set to: 0
 10356  000ED2  C07A  F076         	movff	___fladd@a,___fladd@b
 10357  000ED6                     
 10358                           ; BSR set to: 0
 10359  000ED6  C081  F07A         	movff	___fladd@grs,___fladd@a
 10360  000EDA                     
 10361                           ; BSR set to: 0
 10362  000EDA  C077  F081         	movff	___fladd@b+1,___fladd@grs
 10363  000EDE                     
 10364                           ; BSR set to: 0
 10365  000EDE  C07B  F077         	movff	___fladd@a+1,___fladd@b+1
 10366  000EE2                     
 10367                           ; BSR set to: 0
 10368  000EE2  C081  F07B         	movff	___fladd@grs,___fladd@a+1
 10369  000EE6                     
 10370                           ; BSR set to: 0
 10371  000EE6  C078  F081         	movff	___fladd@b+2,___fladd@grs
 10372  000EEA                     
 10373                           ; BSR set to: 0
 10374  000EEA  C07C  F078         	movff	___fladd@a+2,___fladd@b+2
 10375  000EEE                     
 10376                           ; BSR set to: 0
 10377  000EEE  C081  F07C         	movff	___fladd@grs,___fladd@a+2
 10378  000EF2                     
 10379                           ; BSR set to: 0
 10380  000EF2  C079  F081         	movff	___fladd@b+3,___fladd@grs
 10381  000EF6                     
 10382                           ; BSR set to: 0
 10383  000EF6  C07D  F079         	movff	___fladd@a+3,___fladd@b+3
 10384  000EFA                     
 10385                           ; BSR set to: 0
 10386  000EFA  C081  F07D         	movff	___fladd@grs,___fladd@a+3
 10387  000EFE                     l5742:
 10388                           
 10389                           ; BSR set to: 0
 10390  000EFE  0E00               	movlw	0
 10391  000F00  6F81               	movwf	___fladd@grs& (0+255),b
 10392  000F02                     
 10393                           ; BSR set to: 0
 10394  000F02  5180               	movf	___fladd@bexp& (0+255),w,b
 10395  000F04  C07F  F057         	movff	___fladd@aexp,??___fladd
 10396  000F08  6A58               	clrf	(??___fladd+1)^0,c
 10397  000F0A  5E57               	subwf	??___fladd^0,f,c
 10398  000F0C  0E00               	movlw	0
 10399  000F0E  5A58               	subwfb	(??___fladd+1)^0,f,c
 10400  000F10  BE58               	btfsc	(??___fladd+1)^0,7,c
 10401  000F12  EF94  F007         	goto	u6121
 10402  000F16  5058               	movf	(??___fladd+1)^0,w,c
 10403  000F18  E109               	bnz	u6120
 10404  000F1A  0E1A               	movlw	26
 10405  000F1C  5C57               	subwf	??___fladd^0,w,c
 10406  000F1E  A0D8               	btfss	status,0,c
 10407  000F20  EF94  F007         	goto	u6121
 10408  000F24  EF96  F007         	goto	u6120
 10409  000F28                     u6121:
 10410  000F28  EFCD  F007         	goto	l1346
 10411  000F2C                     u6120:
 10412  000F2C                     
 10413                           ; BSR set to: 0
 10414  000F2C  5176               	movf	___fladd@b& (0+255),w,b
 10415  000F2E  1177               	iorwf	(___fladd@b+1)& (0+255),w,b
 10416  000F30  1178               	iorwf	(___fladd@b+2)& (0+255),w,b
 10417  000F32  1179               	iorwf	(___fladd@b+3)& (0+255),w,b
 10418  000F34  A4D8               	btfss	status,2,c
 10419  000F36  EF9F  F007         	goto	u6131
 10420  000F3A  EFA2  F007         	goto	u6130
 10421  000F3E                     u6131:
 10422  000F3E  0E01               	movlw	1
 10423  000F40  EFA3  F007         	goto	u6140
 10424  000F44                     u6130:
 10425  000F44  0E00               	movlw	0
 10426  000F46                     u6140:
 10427  000F46  6F81               	movwf	___fladd@grs& (0+255),b
 10428  000F48                     
 10429                           ; BSR set to: 0
 10430  000F48  0E00               	movlw	0
 10431  000F4A  6F76               	movwf	___fladd@b& (0+255),b
 10432  000F4C  0E00               	movlw	0
 10433  000F4E  6F77               	movwf	(___fladd@b+1)& (0+255),b
 10434  000F50  0E00               	movlw	0
 10435  000F52  6F78               	movwf	(___fladd@b+2)& (0+255),b
 10436  000F54  0E00               	movlw	0
 10437  000F56  6F79               	movwf	(___fladd@b+3)& (0+255),b
 10438  000F58                     
 10439                           ; BSR set to: 0
 10440  000F58  C07F  F080         	movff	___fladd@aexp,___fladd@bexp
 10441  000F5C  EFD6  F007         	goto	l1345
 10442  000F60                     l1347:
 10443                           
 10444                           ; BSR set to: 0
 10445  000F60  A181               	btfss	___fladd@grs& (0+255),0,b
 10446  000F62  EFB5  F007         	goto	u6151
 10447  000F66  EFB7  F007         	goto	u6150
 10448  000F6A                     u6151:
 10449  000F6A  EFBD  F007         	goto	l5754
 10450  000F6E                     u6150:
 10451  000F6E                     
 10452                           ; BSR set to: 0
 10453  000F6E  90D8               	bcf	status,0,c
 10454  000F70  3181               	rrcf	___fladd@grs& (0+255),w,b
 10455  000F72  0901               	iorlw	1
 10456  000F74  6F81               	movwf	___fladd@grs& (0+255),b
 10457  000F76  EFBF  F007         	goto	l5756
 10458  000F7A                     l5754:
 10459                           
 10460                           ; BSR set to: 0
 10461  000F7A  90D8               	bcf	status,0,c
 10462  000F7C  3381               	rrcf	___fladd@grs& (0+255),f,b
 10463  000F7E                     l5756:
 10464                           
 10465                           ; BSR set to: 0
 10466  000F7E  A176               	btfss	___fladd@b& (0+255),0,b
 10467  000F80  EFC4  F007         	goto	u6161
 10468  000F84  EFC6  F007         	goto	u6160
 10469  000F88                     u6161:
 10470  000F88  EFC7  F007         	goto	l5760
 10471  000F8C                     u6160:
 10472  000F8C                     
 10473                           ; BSR set to: 0
 10474  000F8C  8F81               	bsf	___fladd@grs& (0+255),7,b
 10475  000F8E                     l5760:
 10476                           
 10477                           ; BSR set to: 0
 10478  000F8E  3579               	rlcf	(___fladd@b+3)& (0+255),w,b
 10479  000F90  3379               	rrcf	(___fladd@b+3)& (0+255),f,b
 10480  000F92  3378               	rrcf	(___fladd@b+2)& (0+255),f,b
 10481  000F94  3377               	rrcf	(___fladd@b+1)& (0+255),f,b
 10482  000F96  3376               	rrcf	___fladd@b& (0+255),f,b
 10483  000F98                     
 10484                           ; BSR set to: 0
 10485  000F98  2B80               	incf	___fladd@bexp& (0+255),f,b
 10486  000F9A                     l1346:
 10487                           
 10488                           ; BSR set to: 0
 10489  000F9A  517F               	movf	___fladd@aexp& (0+255),w,b
 10490  000F9C  5D80               	subwf	___fladd@bexp& (0+255),w,b
 10491  000F9E  A0D8               	btfss	status,0,c
 10492  000FA0  EFD4  F007         	goto	u6171
 10493  000FA4  EFD6  F007         	goto	u6170
 10494  000FA8                     u6171:
 10495  000FA8  EFB0  F007         	goto	l1347
 10496  000FAC                     u6170:
 10497  000FAC                     l1345:
 10498                           
 10499                           ; BSR set to: 0
 10500  000FAC  BD7E               	btfsc	___fladd@signs& (0+255),6,b
 10501  000FAE  EFDB  F007         	goto	u6181
 10502  000FB2  EFDD  F007         	goto	u6180
 10503  000FB6                     u6181:
 10504  000FB6  EF1D  F008         	goto	l5788
 10505  000FBA                     u6180:
 10506  000FBA                     
 10507                           ; BSR set to: 0
 10508  000FBA  5180               	movf	___fladd@bexp& (0+255),w,b
 10509  000FBC  A4D8               	btfss	status,2,c
 10510  000FBE  EFE3  F007         	goto	u6191
 10511  000FC2  EFE5  F007         	goto	u6190
 10512  000FC6                     u6191:
 10513  000FC6  EFEF  F007         	goto	l5770
 10514  000FCA                     u6190:
 10515  000FCA                     
 10516                           ; BSR set to: 0
 10517  000FCA  0E00               	movlw	0
 10518  000FCC  6F76               	movwf	?___fladd& (0+255),b
 10519  000FCE  0E00               	movlw	0
 10520  000FD0  6F77               	movwf	(?___fladd+1)& (0+255),b
 10521  000FD2  0E00               	movlw	0
 10522  000FD4  6F78               	movwf	(?___fladd+2)& (0+255),b
 10523  000FD6  0E00               	movlw	0
 10524  000FD8  6F79               	movwf	(?___fladd+3)& (0+255),b
 10525  000FDA  EF3E  F009         	goto	l1354
 10526  000FDE                     l5770:
 10527                           
 10528                           ; BSR set to: 0
 10529  000FDE  517A               	movf	___fladd@a& (0+255),w,b
 10530  000FE0  2776               	addwf	___fladd@b& (0+255),f,b
 10531  000FE2  517B               	movf	(___fladd@a+1)& (0+255),w,b
 10532  000FE4  2377               	addwfc	(___fladd@b+1)& (0+255),f,b
 10533  000FE6  517C               	movf	(___fladd@a+2)& (0+255),w,b
 10534  000FE8  2378               	addwfc	(___fladd@b+2)& (0+255),f,b
 10535  000FEA  517D               	movf	(___fladd@a+3)& (0+255),w,b
 10536  000FEC  2379               	addwfc	(___fladd@b+3)& (0+255),f,b
 10537  000FEE                     
 10538                           ; BSR set to: 0
 10539  000FEE  A179               	btfss	(___fladd@b+3)& (0+255),0,b
 10540  000FF0  EFFC  F007         	goto	u6201
 10541  000FF4  EFFE  F007         	goto	u6200
 10542  000FF8                     u6201:
 10543  000FF8  EFAA  F008         	goto	l5824
 10544  000FFC                     u6200:
 10545  000FFC                     
 10546                           ; BSR set to: 0
 10547  000FFC  A181               	btfss	___fladd@grs& (0+255),0,b
 10548  000FFE  EF03  F008         	goto	u6211
 10549  001002  EF05  F008         	goto	u6210
 10550  001006                     u6211:
 10551  001006  EF0B  F008         	goto	l5778
 10552  00100A                     u6210:
 10553  00100A                     
 10554                           ; BSR set to: 0
 10555  00100A  90D8               	bcf	status,0,c
 10556  00100C  3181               	rrcf	___fladd@grs& (0+255),w,b
 10557  00100E  0901               	iorlw	1
 10558  001010  6F81               	movwf	___fladd@grs& (0+255),b
 10559  001012  EF0D  F008         	goto	l5780
 10560  001016                     l5778:
 10561                           
 10562                           ; BSR set to: 0
 10563  001016  90D8               	bcf	status,0,c
 10564  001018  3381               	rrcf	___fladd@grs& (0+255),f,b
 10565  00101A                     l5780:
 10566                           
 10567                           ; BSR set to: 0
 10568  00101A  A176               	btfss	___fladd@b& (0+255),0,b
 10569  00101C  EF12  F008         	goto	u6221
 10570  001020  EF14  F008         	goto	u6220
 10571  001024                     u6221:
 10572  001024  EF15  F008         	goto	l5784
 10573  001028                     u6220:
 10574  001028                     
 10575                           ; BSR set to: 0
 10576  001028  8F81               	bsf	___fladd@grs& (0+255),7,b
 10577  00102A                     l5784:
 10578                           
 10579                           ; BSR set to: 0
 10580  00102A  3579               	rlcf	(___fladd@b+3)& (0+255),w,b
 10581  00102C  3379               	rrcf	(___fladd@b+3)& (0+255),f,b
 10582  00102E  3378               	rrcf	(___fladd@b+2)& (0+255),f,b
 10583  001030  3377               	rrcf	(___fladd@b+1)& (0+255),f,b
 10584  001032  3376               	rrcf	___fladd@b& (0+255),f,b
 10585  001034                     
 10586                           ; BSR set to: 0
 10587  001034  2B80               	incf	___fladd@bexp& (0+255),f,b
 10588  001036  EFAA  F008         	goto	l5824
 10589  00103A                     l5788:
 10590                           
 10591                           ; BSR set to: 0
 10592  00103A  517A               	movf	___fladd@a& (0+255),w,b
 10593  00103C  5D76               	subwf	___fladd@b& (0+255),w,b
 10594  00103E  517B               	movf	(___fladd@a+1)& (0+255),w,b
 10595  001040  5977               	subwfb	(___fladd@b+1)& (0+255),w,b
 10596  001042  517C               	movf	(___fladd@a+2)& (0+255),w,b
 10597  001044  5978               	subwfb	(___fladd@b+2)& (0+255),w,b
 10598  001046  5179               	movf	(___fladd@b+3)& (0+255),w,b
 10599  001048  0A80               	xorlw	128
 10600  00104A  6E57               	movwf	??___fladd^0,c
 10601  00104C  517D               	movf	(___fladd@a+3)& (0+255),w,b
 10602  00104E  0A80               	xorlw	128
 10603  001050  5857               	subwfb	??___fladd^0,w,c
 10604  001052  B0D8               	btfsc	status,0,c
 10605  001054  EF2E  F008         	goto	u6231
 10606  001058  EF30  F008         	goto	u6230
 10607  00105C                     u6231:
 10608  00105C  EF5B  F008         	goto	l5798
 10609  001060                     u6230:
 10610  001060                     
 10611                           ; BSR set to: 0
 10612  001060  5176               	movf	___fladd@b& (0+255),w,b
 10613  001062  5D7A               	subwf	___fladd@a& (0+255),w,b
 10614  001064  6E57               	movwf	??___fladd^0,c
 10615  001066  5177               	movf	(___fladd@b+1)& (0+255),w,b
 10616  001068  597B               	subwfb	(___fladd@a+1)& (0+255),w,b
 10617  00106A  6E58               	movwf	(??___fladd+1)^0,c
 10618  00106C  5178               	movf	(___fladd@b+2)& (0+255),w,b
 10619  00106E  597C               	subwfb	(___fladd@a+2)& (0+255),w,b
 10620  001070  6E59               	movwf	(??___fladd+2)^0,c
 10621  001072  5179               	movf	(___fladd@b+3)& (0+255),w,b
 10622  001074  597D               	subwfb	(___fladd@a+3)& (0+255),w,b
 10623  001076  6E5A               	movwf	(??___fladd+3)^0,c
 10624  001078  0EFF               	movlw	255
 10625  00107A  2457               	addwf	??___fladd^0,w,c
 10626  00107C  6F76               	movwf	___fladd@b& (0+255),b
 10627  00107E  0EFF               	movlw	255
 10628  001080  2058               	addwfc	(??___fladd+1)^0,w,c
 10629  001082  6F77               	movwf	(___fladd@b+1)& (0+255),b
 10630  001084  0EFF               	movlw	255
 10631  001086  2059               	addwfc	(??___fladd+2)^0,w,c
 10632  001088  6F78               	movwf	(___fladd@b+2)& (0+255),b
 10633  00108A  0EFF               	movlw	255
 10634  00108C  205A               	addwfc	(??___fladd+3)^0,w,c
 10635  00108E  6F79               	movwf	(___fladd@b+3)& (0+255),b
 10636  001090  0E80               	movlw	128
 10637  001092  1B7E               	xorwf	___fladd@signs& (0+255),f,b
 10638  001094                     
 10639                           ; BSR set to: 0
 10640  001094  6D81               	negf	___fladd@grs& (0+255),b
 10641  001096                     
 10642                           ; BSR set to: 0
 10643  001096  5181               	movf	___fladd@grs& (0+255),w,b
 10644  001098  A4D8               	btfss	status,2,c
 10645  00109A  EF51  F008         	goto	u6241
 10646  00109E  EF53  F008         	goto	u6240
 10647  0010A2                     u6241:
 10648  0010A2  EF63  F008         	goto	l1362
 10649  0010A6                     u6240:
 10650  0010A6                     
 10651                           ; BSR set to: 0
 10652  0010A6  0E01               	movlw	1
 10653  0010A8  2776               	addwf	___fladd@b& (0+255),f,b
 10654  0010AA  0E00               	movlw	0
 10655  0010AC  2377               	addwfc	(___fladd@b+1)& (0+255),f,b
 10656  0010AE  2378               	addwfc	(___fladd@b+2)& (0+255),f,b
 10657  0010B0  2379               	addwfc	(___fladd@b+3)& (0+255),f,b
 10658  0010B2  EF63  F008         	goto	l1362
 10659  0010B6                     l5798:
 10660                           
 10661                           ; BSR set to: 0
 10662  0010B6  517A               	movf	___fladd@a& (0+255),w,b
 10663  0010B8  5F76               	subwf	___fladd@b& (0+255),f,b
 10664  0010BA  517B               	movf	(___fladd@a+1)& (0+255),w,b
 10665  0010BC  5B77               	subwfb	(___fladd@b+1)& (0+255),f,b
 10666  0010BE  517C               	movf	(___fladd@a+2)& (0+255),w,b
 10667  0010C0  5B78               	subwfb	(___fladd@b+2)& (0+255),f,b
 10668  0010C2  517D               	movf	(___fladd@a+3)& (0+255),w,b
 10669  0010C4  5B79               	subwfb	(___fladd@b+3)& (0+255),f,b
 10670  0010C6                     l1362:
 10671                           
 10672                           ; BSR set to: 0
 10673  0010C6  5176               	movf	___fladd@b& (0+255),w,b
 10674  0010C8  1177               	iorwf	(___fladd@b+1)& (0+255),w,b
 10675  0010CA  1178               	iorwf	(___fladd@b+2)& (0+255),w,b
 10676  0010CC  1179               	iorwf	(___fladd@b+3)& (0+255),w,b
 10677  0010CE  A4D8               	btfss	status,2,c
 10678  0010D0  EF6C  F008         	goto	u6251
 10679  0010D4  EF6E  F008         	goto	u6250
 10680  0010D8                     u6251:
 10681  0010D8  EFA3  F008         	goto	l5822
 10682  0010DC                     u6250:
 10683  0010DC                     
 10684                           ; BSR set to: 0
 10685  0010DC  5181               	movf	___fladd@grs& (0+255),w,b
 10686  0010DE  A4D8               	btfss	status,2,c
 10687  0010E0  EF74  F008         	goto	u6261
 10688  0010E4  EF76  F008         	goto	u6260
 10689  0010E8                     u6261:
 10690  0010E8  EFA3  F008         	goto	l5822
 10691  0010EC                     u6260:
 10692  0010EC                     
 10693                           ; BSR set to: 0
 10694  0010EC  0E00               	movlw	0
 10695  0010EE  6F76               	movwf	?___fladd& (0+255),b
 10696  0010F0  0E00               	movlw	0
 10697  0010F2  6F77               	movwf	(?___fladd+1)& (0+255),b
 10698  0010F4  0E00               	movlw	0
 10699  0010F6  6F78               	movwf	(?___fladd+2)& (0+255),b
 10700  0010F8  0E00               	movlw	0
 10701  0010FA  6F79               	movwf	(?___fladd+3)& (0+255),b
 10702  0010FC  EF3E  F009         	goto	l1354
 10703  001100                     l5806:
 10704                           
 10705                           ; BSR set to: 0
 10706  001100  90D8               	bcf	status,0,c
 10707  001102  3776               	rlcf	___fladd@b& (0+255),f,b
 10708  001104  3777               	rlcf	(___fladd@b+1)& (0+255),f,b
 10709  001106  3778               	rlcf	(___fladd@b+2)& (0+255),f,b
 10710  001108  3779               	rlcf	(___fladd@b+3)& (0+255),f,b
 10711  00110A                     
 10712                           ; BSR set to: 0
 10713  00110A  AF81               	btfss	___fladd@grs& (0+255),7,b
 10714  00110C  EF8A  F008         	goto	u6271
 10715  001110  EF8C  F008         	goto	u6270
 10716  001114                     u6271:
 10717  001114  EF8D  F008         	goto	l5812
 10718  001118                     u6270:
 10719  001118                     
 10720                           ; BSR set to: 0
 10721  001118  8176               	bsf	___fladd@b& (0+255),0,b
 10722  00111A                     l5812:
 10723                           
 10724                           ; BSR set to: 0
 10725  00111A  A181               	btfss	___fladd@grs& (0+255),0,b
 10726  00111C  EF92  F008         	goto	u6281
 10727  001120  EF94  F008         	goto	u6280
 10728  001124                     u6281:
 10729  001124  EF98  F008         	goto	l5816
 10730  001128                     u6280:
 10731  001128                     
 10732                           ; BSR set to: 0
 10733  001128  80D8               	bsf	status,0,c
 10734  00112A  3781               	rlcf	___fladd@grs& (0+255),f,b
 10735  00112C  EF9A  F008         	goto	l5818
 10736  001130                     l5816:
 10737                           
 10738                           ; BSR set to: 0
 10739  001130  90D8               	bcf	status,0,c
 10740  001132  3781               	rlcf	___fladd@grs& (0+255),f,b
 10741  001134                     l5818:
 10742                           
 10743                           ; BSR set to: 0
 10744  001134  5180               	movf	___fladd@bexp& (0+255),w,b
 10745  001136  B4D8               	btfsc	status,2,c
 10746  001138  EFA0  F008         	goto	u6291
 10747  00113C  EFA2  F008         	goto	u6290
 10748  001140                     u6291:
 10749  001140  EFA3  F008         	goto	l5822
 10750  001144                     u6290:
 10751  001144                     
 10752                           ; BSR set to: 0
 10753  001144  0780               	decf	___fladd@bexp& (0+255),f,b
 10754  001146                     l5822:
 10755                           
 10756                           ; BSR set to: 0
 10757  001146  AF78               	btfss	(___fladd@b+2)& (0+255),7,b
 10758  001148  EFA8  F008         	goto	u6301
 10759  00114C  EFAA  F008         	goto	u6300
 10760  001150                     u6301:
 10761  001150  EF80  F008         	goto	l5806
 10762  001154                     u6300:
 10763  001154                     l5824:
 10764                           
 10765                           ; BSR set to: 0
 10766  001154  0E00               	movlw	0
 10767  001156  6F7F               	movwf	___fladd@aexp& (0+255),b
 10768  001158                     
 10769                           ; BSR set to: 0
 10770  001158  AF81               	btfss	___fladd@grs& (0+255),7,b
 10771  00115A  EFB1  F008         	goto	u6311
 10772  00115E  EFB3  F008         	goto	u6310
 10773  001162                     u6311:
 10774  001162  EFCB  F008         	goto	l1371
 10775  001166                     u6310:
 10776  001166                     
 10777                           ; BSR set to: 0
 10778  001166  C081  F057         	movff	___fladd@grs,??___fladd
 10779  00116A  0E7F               	movlw	127
 10780  00116C  1657               	andwf	??___fladd^0,f,c
 10781  00116E  B4D8               	btfsc	status,2,c
 10782  001170  EFBC  F008         	goto	u6321
 10783  001174  EFBE  F008         	goto	u6320
 10784  001178                     u6321:
 10785  001178  EFC2  F008         	goto	l1372
 10786  00117C                     u6320:
 10787  00117C                     l5830:
 10788                           
 10789                           ; BSR set to: 0
 10790  00117C  0E01               	movlw	1
 10791  00117E  6F7F               	movwf	___fladd@aexp& (0+255),b
 10792  001180  EFCB  F008         	goto	l1371
 10793  001184                     l1372:
 10794                           
 10795                           ; BSR set to: 0
 10796  001184  A176               	btfss	___fladd@b& (0+255),0,b
 10797  001186  EFC7  F008         	goto	u6331
 10798  00118A  EFC9  F008         	goto	u6330
 10799  00118E                     u6331:
 10800  00118E  EFCB  F008         	goto	l1371
 10801  001192                     u6330:
 10802  001192  EFBE  F008         	goto	l5830
 10803  001196                     l1371:
 10804                           
 10805                           ; BSR set to: 0
 10806  001196  517F               	movf	___fladd@aexp& (0+255),w,b
 10807  001198  B4D8               	btfsc	status,2,c
 10808  00119A  EFD1  F008         	goto	u6341
 10809  00119E  EFD3  F008         	goto	u6340
 10810  0011A2                     u6341:
 10811  0011A2  EFFE  F008         	goto	l5842
 10812  0011A6                     u6340:
 10813  0011A6                     
 10814                           ; BSR set to: 0
 10815  0011A6  0E01               	movlw	1
 10816  0011A8  2776               	addwf	___fladd@b& (0+255),f,b
 10817  0011AA  0E00               	movlw	0
 10818  0011AC  2377               	addwfc	(___fladd@b+1)& (0+255),f,b
 10819  0011AE  2378               	addwfc	(___fladd@b+2)& (0+255),f,b
 10820  0011B0  2379               	addwfc	(___fladd@b+3)& (0+255),f,b
 10821  0011B2                     
 10822                           ; BSR set to: 0
 10823  0011B2  A179               	btfss	(___fladd@b+3)& (0+255),0,b
 10824  0011B4  EFDE  F008         	goto	u6351
 10825  0011B8  EFE0  F008         	goto	u6350
 10826  0011BC                     u6351:
 10827  0011BC  EFFE  F008         	goto	l5842
 10828  0011C0                     u6350:
 10829  0011C0                     
 10830                           ; BSR set to: 0
 10831  0011C0  C076  F057         	movff	___fladd@b,??___fladd
 10832  0011C4  C077  F058         	movff	___fladd@b+1,??___fladd+1
 10833  0011C8  C078  F059         	movff	___fladd@b+2,??___fladd+2
 10834  0011CC  C079  F05A         	movff	___fladd@b+3,??___fladd+3
 10835  0011D0  345A               	rlcf	(??___fladd+3)^0,w,c
 10836  0011D2  325A               	rrcf	(??___fladd+3)^0,f,c
 10837  0011D4  3259               	rrcf	(??___fladd+2)^0,f,c
 10838  0011D6  3258               	rrcf	(??___fladd+1)^0,f,c
 10839  0011D8  3257               	rrcf	??___fladd^0,f,c
 10840  0011DA  C057  F076         	movff	??___fladd,___fladd@b
 10841  0011DE  C058  F077         	movff	??___fladd+1,___fladd@b+1
 10842  0011E2  C059  F078         	movff	??___fladd+2,___fladd@b+2
 10843  0011E6  C05A  F079         	movff	??___fladd+3,___fladd@b+3
 10844  0011EA  2980               	incf	___fladd@bexp& (0+255),w,b
 10845  0011EC  B4D8               	btfsc	status,2,c
 10846  0011EE  EFFB  F008         	goto	u6361
 10847  0011F2  EFFD  F008         	goto	u6360
 10848  0011F6                     u6361:
 10849  0011F6  EFFE  F008         	goto	l5842
 10850  0011FA                     u6360:
 10851  0011FA                     
 10852                           ; BSR set to: 0
 10853  0011FA  2B80               	incf	___fladd@bexp& (0+255),f,b
 10854  0011FC                     l5842:
 10855                           
 10856                           ; BSR set to: 0
 10857  0011FC  2980               	incf	___fladd@bexp& (0+255),w,b
 10858  0011FE  B4D8               	btfsc	status,2,c
 10859  001200  EF04  F009         	goto	u6371
 10860  001204  EF06  F009         	goto	u6370
 10861  001208                     u6371:
 10862  001208  EF0E  F009         	goto	l5846
 10863  00120C                     u6370:
 10864  00120C                     
 10865                           ; BSR set to: 0
 10866  00120C  5180               	movf	___fladd@bexp& (0+255),w,b
 10867  00120E  A4D8               	btfss	status,2,c
 10868  001210  EF0C  F009         	goto	u6381
 10869  001214  EF0E  F009         	goto	u6380
 10870  001218                     u6381:
 10871  001218  EF20  F009         	goto	l5850
 10872  00121C                     u6380:
 10873  00121C                     l5846:
 10874                           
 10875                           ; BSR set to: 0
 10876  00121C  0E00               	movlw	0
 10877  00121E  6F76               	movwf	___fladd@b& (0+255),b
 10878  001220  0E00               	movlw	0
 10879  001222  6F77               	movwf	(___fladd@b+1)& (0+255),b
 10880  001224  0E00               	movlw	0
 10881  001226  6F78               	movwf	(___fladd@b+2)& (0+255),b
 10882  001228  0E00               	movlw	0
 10883  00122A  6F79               	movwf	(___fladd@b+3)& (0+255),b
 10884  00122C  5180               	movf	___fladd@bexp& (0+255),w,b
 10885  00122E  A4D8               	btfss	status,2,c
 10886  001230  EF1C  F009         	goto	u6391
 10887  001234  EF1E  F009         	goto	u6390
 10888  001238                     u6391:
 10889  001238  EF20  F009         	goto	l5850
 10890  00123C                     u6390:
 10891  00123C                     
 10892                           ; BSR set to: 0
 10893  00123C  0E00               	movlw	0
 10894  00123E  6F7E               	movwf	___fladd@signs& (0+255),b
 10895  001240                     l5850:
 10896                           
 10897                           ; BSR set to: 0
 10898  001240  A180               	btfss	___fladd@bexp& (0+255),0,b
 10899  001242  EF25  F009         	goto	u6401
 10900  001246  EF27  F009         	goto	u6400
 10901  00124A                     u6401:
 10902  00124A  EF2A  F009         	goto	l5854
 10903  00124E                     u6400:
 10904  00124E                     
 10905                           ; BSR set to: 0
 10906  00124E  8F78               	bsf	(___fladd@b+2)& (0+255),7,b
 10907  001250  EF2B  F009         	goto	l5856
 10908  001254                     l5854:
 10909                           
 10910                           ; BSR set to: 0
 10911  001254  9F78               	bcf	(___fladd@b+2)& (0+255),7,b
 10912  001256                     l5856:
 10913                           
 10914                           ; BSR set to: 0
 10915  001256  90D8               	bcf	status,0,c
 10916  001258  3180               	rrcf	___fladd@bexp& (0+255),w,b
 10917  00125A  6F79               	movwf	(___fladd@b+3)& (0+255),b
 10918  00125C                     
 10919                           ; BSR set to: 0
 10920  00125C  AF7E               	btfss	___fladd@signs& (0+255),7,b
 10921  00125E  EF33  F009         	goto	u6411
 10922  001262  EF35  F009         	goto	u6410
 10923  001266                     u6411:
 10924  001266  EF36  F009         	goto	l5862
 10925  00126A                     u6410:
 10926  00126A                     
 10927                           ; BSR set to: 0
 10928  00126A  8F79               	bsf	(___fladd@b+3)& (0+255),7,b
 10929  00126C                     l5862:
 10930                           
 10931                           ; BSR set to: 0
 10932  00126C  C076  F076         	movff	___fladd@b,?___fladd
 10933  001270  C077  F077         	movff	___fladd@b+1,?___fladd+1
 10934  001274  C078  F078         	movff	___fladd@b+2,?___fladd+2
 10935  001278  C079  F079         	movff	___fladd@b+3,?___fladd+3
 10936  00127C                     l1354:
 10937                           
 10938                           ; BSR set to: 0
 10939  00127C  0012               	return		;funcret
 10940  00127E                     __end_of___fladd:
 10941                           	callstack 0
 10942                           
 10943 ;; *************** function ___flneg *****************
 10944 ;; Defined at:
 10945 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flneg.c"
 10946 ;; Parameters:    Size  Location     Type
 10947 ;;  f1              4    1[COMRAM] unsigned char 
 10948 ;; Auto vars:     Size  Location     Type
 10949 ;;		None
 10950 ;; Return value:  Size  Location     Type
 10951 ;;                  4    1[COMRAM] unsigned char 
 10952 ;; Registers used:
 10953 ;;		wreg, status,2, status,0
 10954 ;; Tracked objects:
 10955 ;;		On entry : 0/0
 10956 ;;		On exit  : 0/0
 10957 ;;		Unchanged: 0/0
 10958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10959 ;;      Params:         4       0       0       0       0       0       0       0       0
 10960 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10961 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10962 ;;      Totals:         4       0       0       0       0       0       0       0       0
 10963 ;;Total ram usage:        4 bytes
 10964 ;; Hardware stack levels used:    1
 10965 ;; Hardware stack levels required when called:    4
 10966 ;; This function calls:
 10967 ;;		Nothing
 10968 ;; This function is called by:
 10969 ;;		_sprintf
 10970 ;;		_pow
 10971 ;;		_exp
 10972 ;; This function uses a non-reentrant model
 10973 ;;
 10974                           
 10975                           	psect	text38
 10976  00441C                     __ptext38:
 10977                           	callstack 0
 10978  00441C                     ___flneg:
 10979                           	callstack 23
 10980  00441C  5002               	movf	___flneg@f1^0,w,c
 10981  00441E  1003               	iorwf	(___flneg@f1+1)^0,w,c
 10982  004420  1004               	iorwf	(___flneg@f1+2)^0,w,c
 10983  004422  1005               	iorwf	(___flneg@f1+3)^0,w,c
 10984  004424  B4D8               	btfsc	status,2,c
 10985  004426  EF17  F022         	goto	u6971
 10986  00442A  EF19  F022         	goto	u6970
 10987  00442E                     u6971:
 10988  00442E  EF21  F022         	goto	l6218
 10989  004432                     u6970:
 10990  004432  0E00               	movlw	0
 10991  004434  1A02               	xorwf	___flneg@f1^0,f,c
 10992  004436  0E00               	movlw	0
 10993  004438  1A03               	xorwf	(___flneg@f1+1)^0,f,c
 10994  00443A  0E00               	movlw	0
 10995  00443C  1A04               	xorwf	(___flneg@f1+2)^0,f,c
 10996  00443E  0E80               	movlw	128
 10997  004440  1A05               	xorwf	(___flneg@f1+3)^0,f,c
 10998  004442                     l6218:
 10999  004442  C002  F002         	movff	___flneg@f1,?___flneg
 11000  004446  C003  F003         	movff	___flneg@f1+1,?___flneg+1
 11001  00444A  C004  F004         	movff	___flneg@f1+2,?___flneg+2
 11002  00444E  C005  F005         	movff	___flneg@f1+3,?___flneg+3
 11003  004452  0012               	return		;funcret
 11004  004454                     __end_of___flneg:
 11005                           	callstack 0
 11006                           
 11007 ;; *************** function ___flge *****************
 11008 ;; Defined at:
 11009 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flge.c"
 11010 ;; Parameters:    Size  Location     Type
 11011 ;;  ff1             4    1[COMRAM] unsigned char 
 11012 ;;  ff2             4    5[COMRAM] unsigned char 
 11013 ;; Auto vars:     Size  Location     Type
 11014 ;;		None
 11015 ;; Return value:  Size  Location     Type
 11016 ;;		None               void
 11017 ;; Registers used:
 11018 ;;		wreg, status,2, status,0
 11019 ;; Tracked objects:
 11020 ;;		On entry : 0/0
 11021 ;;		On exit  : 0/0
 11022 ;;		Unchanged: 0/0
 11023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11024 ;;      Params:         8       0       0       0       0       0       0       0       0
 11025 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11026 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11027 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11028 ;;Total ram usage:       12 bytes
 11029 ;; Hardware stack levels used:    1
 11030 ;; Hardware stack levels required when called:    4
 11031 ;; This function calls:
 11032 ;;		Nothing
 11033 ;; This function is called by:
 11034 ;;		_sprintf
 11035 ;;		_pow
 11036 ;;		_exp
 11037 ;;		_floor
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           	psect	text39
 11042  00380C                     __ptext39:
 11043                           	callstack 0
 11044  00380C                     ___flge:
 11045                           	callstack 22
 11046  00380C  0E00               	movlw	0
 11047  00380E  1402               	andwf	___flge@ff1^0,w,c
 11048  003810  6E0A               	movwf	??___flge^0,c
 11049  003812  0E00               	movlw	0
 11050  003814  1403               	andwf	(___flge@ff1+1)^0,w,c
 11051  003816  6E0B               	movwf	(??___flge+1)^0,c
 11052  003818  0E80               	movlw	128
 11053  00381A  1404               	andwf	(___flge@ff1+2)^0,w,c
 11054  00381C  6E0C               	movwf	(??___flge+2)^0,c
 11055  00381E  0E7F               	movlw	127
 11056  003820  1405               	andwf	(___flge@ff1+3)^0,w,c
 11057  003822  6E0D               	movwf	(??___flge+3)^0,c
 11058  003824  500A               	movf	??___flge^0,w,c
 11059  003826  100B               	iorwf	(??___flge+1)^0,w,c
 11060  003828  100C               	iorwf	(??___flge+2)^0,w,c
 11061  00382A  100D               	iorwf	(??___flge+3)^0,w,c
 11062  00382C  A4D8               	btfss	status,2,c
 11063  00382E  EF1B  F01C         	goto	u6611
 11064  003832  EF1D  F01C         	goto	u6610
 11065  003836                     u6611:
 11066  003836  EF25  F01C         	goto	l6000
 11067  00383A                     u6610:
 11068  00383A  0E00               	movlw	0
 11069  00383C  6E02               	movwf	___flge@ff1^0,c
 11070  00383E  0E00               	movlw	0
 11071  003840  6E03               	movwf	(___flge@ff1+1)^0,c
 11072  003842  0E00               	movlw	0
 11073  003844  6E04               	movwf	(___flge@ff1+2)^0,c
 11074  003846  0E00               	movlw	0
 11075  003848  6E05               	movwf	(___flge@ff1+3)^0,c
 11076  00384A                     l6000:
 11077  00384A  0E00               	movlw	0
 11078  00384C  1406               	andwf	___flge@ff2^0,w,c
 11079  00384E  6E0A               	movwf	??___flge^0,c
 11080  003850  0E00               	movlw	0
 11081  003852  1407               	andwf	(___flge@ff2+1)^0,w,c
 11082  003854  6E0B               	movwf	(??___flge+1)^0,c
 11083  003856  0E80               	movlw	128
 11084  003858  1408               	andwf	(___flge@ff2+2)^0,w,c
 11085  00385A  6E0C               	movwf	(??___flge+2)^0,c
 11086  00385C  0E7F               	movlw	127
 11087  00385E  1409               	andwf	(___flge@ff2+3)^0,w,c
 11088  003860  6E0D               	movwf	(??___flge+3)^0,c
 11089  003862  500A               	movf	??___flge^0,w,c
 11090  003864  100B               	iorwf	(??___flge+1)^0,w,c
 11091  003866  100C               	iorwf	(??___flge+2)^0,w,c
 11092  003868  100D               	iorwf	(??___flge+3)^0,w,c
 11093  00386A  A4D8               	btfss	status,2,c
 11094  00386C  EF3A  F01C         	goto	u6621
 11095  003870  EF3C  F01C         	goto	u6620
 11096  003874                     u6621:
 11097  003874  EF44  F01C         	goto	l6004
 11098  003878                     u6620:
 11099  003878  0E00               	movlw	0
 11100  00387A  6E06               	movwf	___flge@ff2^0,c
 11101  00387C  0E00               	movlw	0
 11102  00387E  6E07               	movwf	(___flge@ff2+1)^0,c
 11103  003880  0E00               	movlw	0
 11104  003882  6E08               	movwf	(___flge@ff2+2)^0,c
 11105  003884  0E00               	movlw	0
 11106  003886  6E09               	movwf	(___flge@ff2+3)^0,c
 11107  003888                     l6004:
 11108  003888  AE05               	btfss	(___flge@ff1+3)^0,7,c
 11109  00388A  EF49  F01C         	goto	u6631
 11110  00388E  EF4B  F01C         	goto	u6630
 11111  003892                     u6631:
 11112  003892  EF54  F01C         	goto	l6008
 11113  003896                     u6630:
 11114  003896  6C02               	negf	___flge@ff1^0,c
 11115  003898  1E03               	comf	(___flge@ff1+1)^0,f,c
 11116  00389A  B0D8               	btfsc	status,0,c
 11117  00389C  2A03               	incf	(___flge@ff1+1)^0,f,c
 11118  00389E  1E04               	comf	(___flge@ff1+2)^0,f,c
 11119  0038A0  B0D8               	btfsc	status,0,c
 11120  0038A2  2A04               	incf	(___flge@ff1+2)^0,f,c
 11121  0038A4  0E80               	movlw	128
 11122  0038A6  5605               	subfwb	(___flge@ff1+3)^0,f,c
 11123  0038A8                     l6008:
 11124  0038A8  AE09               	btfss	(___flge@ff2+3)^0,7,c
 11125  0038AA  EF59  F01C         	goto	u6641
 11126  0038AE  EF5B  F01C         	goto	u6640
 11127  0038B2                     u6641:
 11128  0038B2  EF64  F01C         	goto	l1073
 11129  0038B6                     u6640:
 11130  0038B6  6C06               	negf	___flge@ff2^0,c
 11131  0038B8  1E07               	comf	(___flge@ff2+1)^0,f,c
 11132  0038BA  B0D8               	btfsc	status,0,c
 11133  0038BC  2A07               	incf	(___flge@ff2+1)^0,f,c
 11134  0038BE  1E08               	comf	(___flge@ff2+2)^0,f,c
 11135  0038C0  B0D8               	btfsc	status,0,c
 11136  0038C2  2A08               	incf	(___flge@ff2+2)^0,f,c
 11137  0038C4  0E80               	movlw	128
 11138  0038C6  5609               	subfwb	(___flge@ff2+3)^0,f,c
 11139  0038C8                     l1073:
 11140  0038C8  0E00               	movlw	0
 11141  0038CA  1A02               	xorwf	___flge@ff1^0,f,c
 11142  0038CC  0E00               	movlw	0
 11143  0038CE  1A03               	xorwf	(___flge@ff1+1)^0,f,c
 11144  0038D0  0E00               	movlw	0
 11145  0038D2  1A04               	xorwf	(___flge@ff1+2)^0,f,c
 11146  0038D4  0E80               	movlw	128
 11147  0038D6  1A05               	xorwf	(___flge@ff1+3)^0,f,c
 11148  0038D8  0E00               	movlw	0
 11149  0038DA  1A06               	xorwf	___flge@ff2^0,f,c
 11150  0038DC  0E00               	movlw	0
 11151  0038DE  1A07               	xorwf	(___flge@ff2+1)^0,f,c
 11152  0038E0  0E00               	movlw	0
 11153  0038E2  1A08               	xorwf	(___flge@ff2+2)^0,f,c
 11154  0038E4  0E80               	movlw	128
 11155  0038E6  1A09               	xorwf	(___flge@ff2+3)^0,f,c
 11156  0038E8  5006               	movf	___flge@ff2^0,w,c
 11157  0038EA  5C02               	subwf	___flge@ff1^0,w,c
 11158  0038EC  5007               	movf	(___flge@ff2+1)^0,w,c
 11159  0038EE  5803               	subwfb	(___flge@ff1+1)^0,w,c
 11160  0038F0  5008               	movf	(___flge@ff2+2)^0,w,c
 11161  0038F2  5804               	subwfb	(___flge@ff1+2)^0,w,c
 11162  0038F4  5009               	movf	(___flge@ff2+3)^0,w,c
 11163  0038F6  5805               	subwfb	(___flge@ff1+3)^0,w,c
 11164  0038F8  B0D8               	btfsc	status,0,c
 11165  0038FA  EF81  F01C         	goto	u6651
 11166  0038FE  EF83  F01C         	goto	u6650
 11167  003902                     u6651:
 11168  003902  EF86  F01C         	goto	l6014
 11169  003906                     u6650:
 11170  003906  90D8               	bcf	status,0,c
 11171  003908  EF87  F01C         	goto	l1074
 11172  00390C                     l6014:
 11173  00390C  80D8               	bsf	status,0,c
 11174  00390E                     l1074:
 11175  00390E  0012               	return		;funcret
 11176  003910                     __end_of___flge:
 11177                           	callstack 0
 11178                           
 11179 ;; *************** function ___fleq *****************
 11180 ;; Defined at:
 11181 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fleq.c"
 11182 ;; Parameters:    Size  Location     Type
 11183 ;;  ff1             4   50[COMRAM] unsigned char 
 11184 ;;  ff2             4   54[COMRAM] unsigned char 
 11185 ;; Auto vars:     Size  Location     Type
 11186 ;;		None
 11187 ;; Return value:  Size  Location     Type
 11188 ;;		None               void
 11189 ;; Registers used:
 11190 ;;		wreg, status,2, status,0
 11191 ;; Tracked objects:
 11192 ;;		On entry : 0/0
 11193 ;;		On exit  : 0/0
 11194 ;;		Unchanged: 0/0
 11195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11196 ;;      Params:         8       0       0       0       0       0       0       0       0
 11197 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11198 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11199 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11200 ;;Total ram usage:       12 bytes
 11201 ;; Hardware stack levels used:    1
 11202 ;; Hardware stack levels required when called:    4
 11203 ;; This function calls:
 11204 ;;		Nothing
 11205 ;; This function is called by:
 11206 ;;		_sprintf
 11207 ;;		_pow
 11208 ;;		_exp
 11209 ;;		_frexp
 11210 ;;		_ldexp
 11211 ;;		_log
 11212 ;; This function uses a non-reentrant model
 11213 ;;
 11214                           
 11215                           	psect	text40
 11216  003D34                     __ptext40:
 11217                           	callstack 0
 11218  003D34                     ___fleq:
 11219                           	callstack 22
 11220  003D34  0E00               	movlw	0
 11221  003D36  1433               	andwf	___fleq@ff1^0,w,c
 11222  003D38  6E3B               	movwf	??___fleq^0,c
 11223  003D3A  0E00               	movlw	0
 11224  003D3C  1434               	andwf	(___fleq@ff1+1)^0,w,c
 11225  003D3E  6E3C               	movwf	(??___fleq+1)^0,c
 11226  003D40  0E80               	movlw	128
 11227  003D42  1435               	andwf	(___fleq@ff1+2)^0,w,c
 11228  003D44  6E3D               	movwf	(??___fleq+2)^0,c
 11229  003D46  0E7F               	movlw	127
 11230  003D48  1436               	andwf	(___fleq@ff1+3)^0,w,c
 11231  003D4A  6E3E               	movwf	(??___fleq+3)^0,c
 11232  003D4C  503B               	movf	??___fleq^0,w,c
 11233  003D4E  103C               	iorwf	(??___fleq+1)^0,w,c
 11234  003D50  103D               	iorwf	(??___fleq+2)^0,w,c
 11235  003D52  103E               	iorwf	(??___fleq+3)^0,w,c
 11236  003D54  A4D8               	btfss	status,2,c
 11237  003D56  EFAF  F01E         	goto	u6001
 11238  003D5A  EFB1  F01E         	goto	u6000
 11239  003D5E                     u6001:
 11240  003D5E  EFB9  F01E         	goto	l5652
 11241  003D62                     u6000:
 11242  003D62  0E00               	movlw	0
 11243  003D64  6E33               	movwf	___fleq@ff1^0,c
 11244  003D66  0E00               	movlw	0
 11245  003D68  6E34               	movwf	(___fleq@ff1+1)^0,c
 11246  003D6A  0E00               	movlw	0
 11247  003D6C  6E35               	movwf	(___fleq@ff1+2)^0,c
 11248  003D6E  0E00               	movlw	0
 11249  003D70  6E36               	movwf	(___fleq@ff1+3)^0,c
 11250  003D72                     l5652:
 11251  003D72  0E00               	movlw	0
 11252  003D74  1437               	andwf	___fleq@ff2^0,w,c
 11253  003D76  6E3B               	movwf	??___fleq^0,c
 11254  003D78  0E00               	movlw	0
 11255  003D7A  1438               	andwf	(___fleq@ff2+1)^0,w,c
 11256  003D7C  6E3C               	movwf	(??___fleq+1)^0,c
 11257  003D7E  0E80               	movlw	128
 11258  003D80  1439               	andwf	(___fleq@ff2+2)^0,w,c
 11259  003D82  6E3D               	movwf	(??___fleq+2)^0,c
 11260  003D84  0E7F               	movlw	127
 11261  003D86  143A               	andwf	(___fleq@ff2+3)^0,w,c
 11262  003D88  6E3E               	movwf	(??___fleq+3)^0,c
 11263  003D8A  503B               	movf	??___fleq^0,w,c
 11264  003D8C  103C               	iorwf	(??___fleq+1)^0,w,c
 11265  003D8E  103D               	iorwf	(??___fleq+2)^0,w,c
 11266  003D90  103E               	iorwf	(??___fleq+3)^0,w,c
 11267  003D92  A4D8               	btfss	status,2,c
 11268  003D94  EFCE  F01E         	goto	u6011
 11269  003D98  EFD0  F01E         	goto	u6010
 11270  003D9C                     u6011:
 11271  003D9C  EFD8  F01E         	goto	l5656
 11272  003DA0                     u6010:
 11273  003DA0  0E00               	movlw	0
 11274  003DA2  6E37               	movwf	___fleq@ff2^0,c
 11275  003DA4  0E00               	movlw	0
 11276  003DA6  6E38               	movwf	(___fleq@ff2+1)^0,c
 11277  003DA8  0E00               	movlw	0
 11278  003DAA  6E39               	movwf	(___fleq@ff2+2)^0,c
 11279  003DAC  0E00               	movlw	0
 11280  003DAE  6E3A               	movwf	(___fleq@ff2+3)^0,c
 11281  003DB0                     l5656:
 11282  003DB0  5037               	movf	___fleq@ff2^0,w,c
 11283  003DB2  1833               	xorwf	___fleq@ff1^0,w,c
 11284  003DB4  E10F               	bnz	u6020
 11285  003DB6  5038               	movf	(___fleq@ff2+1)^0,w,c
 11286  003DB8  1834               	xorwf	(___fleq@ff1+1)^0,w,c
 11287  003DBA  E10C               	bnz	u6020
 11288  003DBC  5039               	movf	(___fleq@ff2+2)^0,w,c
 11289  003DBE  1835               	xorwf	(___fleq@ff1+2)^0,w,c
 11290  003DC0  E109               	bnz	u6020
 11291  003DC2  503A               	movf	(___fleq@ff2+3)^0,w,c
 11292  003DC4  1836               	xorwf	(___fleq@ff1+3)^0,w,c
 11293  003DC6  B4D8               	btfsc	status,2,c
 11294  003DC8  EFE8  F01E         	goto	u6021
 11295  003DCC  EFEA  F01E         	goto	u6020
 11296  003DD0                     u6021:
 11297  003DD0  EFED  F01E         	goto	l5660
 11298  003DD4                     u6020:
 11299  003DD4  90D8               	bcf	status,0,c
 11300  003DD6  EFEE  F01E         	goto	l1067
 11301  003DDA                     l5660:
 11302  003DDA  80D8               	bsf	status,0,c
 11303  003DDC                     l1067:
 11304  003DDC  0012               	return		;funcret
 11305  003DDE                     __end_of___fleq:
 11306                           	callstack 0
 11307                           
 11308 ;; *************** function _LCD_WriteString *****************
 11309 ;; Defined at:
 11310 ;;		line 59 in file "LCD.c"
 11311 ;; Parameters:    Size  Location     Type
 11312 ;;  iData           2    4[COMRAM] PTR unsigned char 
 11313 ;;		 -> gsTotalSecs(4), sLine2(100), sLine1(100), STR_1(12), 
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;  ix              1    8[COMRAM] unsigned char 
 11316 ;; Return value:  Size  Location     Type
 11317 ;;                  1    wreg      void 
 11318 ;; Registers used:
 11319 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11325 ;;      Params:         2       0       0       0       0       0       0       0       0
 11326 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11327 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11328 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11329 ;;Total ram usage:        5 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; Hardware stack levels required when called:    5
 11332 ;; This function calls:
 11333 ;;		_LCD_WriteChar
 11334 ;; This function is called by:
 11335 ;;		_main
 11336 ;;		_ComputeWaterVol
 11337 ;;		_ComputeTOD
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           	psect	text41
 11342  004122                     __ptext41:
 11343                           	callstack 0
 11344  004122                     _LCD_WriteString:
 11345                           	callstack 25
 11346  004122                     
 11347                           ;LCD.c: 61: uint8_t ix = 0;
 11348  004122  0E00               	movlw	0
 11349  004124  6E09               	movwf	LCD_WriteString@ix^0,c
 11350                           
 11351                           ;LCD.c: 62: while (iData[ix]) {
 11352  004126  EFAE  F020         	goto	l6652
 11353  00412A                     l6648:
 11354                           
 11355                           ;LCD.c: 63: LCD_WriteChar (iData[ix]);
 11356  00412A  5009               	movf	LCD_WriteString@ix^0,w,c
 11357  00412C  2405               	addwf	LCD_WriteString@iData^0,w,c
 11358  00412E  6E07               	movwf	??_LCD_WriteString^0,c
 11359  004130  0E00               	movlw	0
 11360  004132  2006               	addwfc	(LCD_WriteString@iData+1)^0,w,c
 11361  004134  6E08               	movwf	(??_LCD_WriteString+1)^0,c
 11362  004136  C007  FFF6         	movff	??_LCD_WriteString,tblptrl
 11363  00413A  C008  FFF7         	movff	??_LCD_WriteString+1,tblptrh
 11364  00413E  6AF8               	clrf	tblptru,c
 11365  004140  0E07               	movlw	(high __ramtop+-1)
 11366  004142  64F7               	cpfsgt	tblptrh,c
 11367  004144  D003               	bra	u7687
 11368  004146  0008               	tblrd		*
 11369  004148  50F5               	movf	tablat,w,c
 11370  00414A  D005               	bra	u7680
 11371  00414C                     u7687:
 11372  00414C  CFF6 FFE1          	movff	tblptrl,fsr1l
 11373  004150  CFF7 FFE2          	movff	tblptrh,fsr1h
 11374  004154  50E7               	movf	indf1,w,c
 11375  004156                     u7680:
 11376  004156  EC67  F021         	call	_LCD_WriteChar
 11377  00415A                     
 11378                           ;LCD.c: 64: ix ++;
 11379  00415A  2A09               	incf	LCD_WriteString@ix^0,f,c
 11380  00415C                     l6652:
 11381  00415C  5009               	movf	LCD_WriteString@ix^0,w,c
 11382  00415E  2405               	addwf	LCD_WriteString@iData^0,w,c
 11383  004160  6E07               	movwf	??_LCD_WriteString^0,c
 11384  004162  0E00               	movlw	0
 11385  004164  2006               	addwfc	(LCD_WriteString@iData+1)^0,w,c
 11386  004166  6E08               	movwf	(??_LCD_WriteString+1)^0,c
 11387  004168  C007  FFF6         	movff	??_LCD_WriteString,tblptrl
 11388  00416C  C008  FFF7         	movff	??_LCD_WriteString+1,tblptrh
 11389  004170  6AF8               	clrf	tblptru,c
 11390  004172  0E07               	movlw	(high __ramtop+-1)
 11391  004174  64F7               	cpfsgt	tblptrh,c
 11392  004176  D003               	bra	u7697
 11393  004178  0008               	tblrd		*
 11394  00417A  50F5               	movf	tablat,w,c
 11395  00417C  D005               	bra	u7690
 11396  00417E                     u7697:
 11397  00417E  CFF6 FFE1          	movff	tblptrl,fsr1l
 11398  004182  CFF7 FFE2          	movff	tblptrh,fsr1h
 11399  004186  50E7               	movf	indf1,w,c
 11400  004188                     u7690:
 11401  004188  0900               	iorlw	0
 11402  00418A  A4D8               	btfss	status,2,c
 11403  00418C  EFCA  F020         	goto	u7701
 11404  004190  EFCC  F020         	goto	u7700
 11405  004194                     u7701:
 11406  004194  EF95  F020         	goto	l6648
 11407  004198                     u7700:
 11408  004198  0012               	return		;funcret
 11409  00419A                     __end_of_LCD_WriteString:
 11410                           	callstack 0
 11411                           
 11412 ;; *************** function _LCD_WriteChar *****************
 11413 ;; Defined at:
 11414 ;;		line 46 in file "LCD.c"
 11415 ;; Parameters:    Size  Location     Type
 11416 ;;  iChar           1    wreg     unsigned char 
 11417 ;; Auto vars:     Size  Location     Type
 11418 ;;  iChar           1    3[COMRAM] unsigned char 
 11419 ;; Return value:  Size  Location     Type
 11420 ;;                  1    wreg      void 
 11421 ;; Registers used:
 11422 ;;		wreg, status,2, status,0
 11423 ;; Tracked objects:
 11424 ;;		On entry : 0/0
 11425 ;;		On exit  : 0/0
 11426 ;;		Unchanged: 0/0
 11427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11428 ;;      Params:         0       0       0       0       0       0       0       0       0
 11429 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11430 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11431 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11432 ;;Total ram usage:        3 bytes
 11433 ;; Hardware stack levels used:    1
 11434 ;; Hardware stack levels required when called:    4
 11435 ;; This function calls:
 11436 ;;		Nothing
 11437 ;; This function is called by:
 11438 ;;		_LCD_WriteString
 11439 ;; This function uses a non-reentrant model
 11440 ;;
 11441                           
 11442                           	psect	text42
 11443  0042CE                     __ptext42:
 11444                           	callstack 0
 11445  0042CE                     _LCD_WriteChar:
 11446                           	callstack 25
 11447                           
 11448                           ;incstack = 0
 11449                           ;LCD_WriteChar@iChar stored from wreg
 11450  0042CE  6E04               	movwf	LCD_WriteChar@iChar^0,c
 11451  0042D0  8689               	bsf	137,3,c	;volatile
 11452  0042D2  9489               	bcf	137,2,c	;volatile
 11453  0042D4  8289               	bsf	137,1,c	;volatile
 11454  0042D6                     
 11455                           ;LCD.c: 52: LATB = iChar;
 11456  0042D6  C004  FF8A         	movff	LCD_WriteChar@iChar,3978	;volatile
 11457  0042DA                     
 11458                           ;LCD.c: 53: LATC6 = iChar>>6;
 11459  0042DA  C004  F002         	movff	LCD_WriteChar@iChar,??_LCD_WriteChar
 11460  0042DE  0E06               	movlw	6
 11461  0042E0  6E03               	movwf	(??_LCD_WriteChar+1)^0,c
 11462  0042E2                     u7215:
 11463  0042E2  90D8               	bcf	status,0,c
 11464  0042E4  3202               	rrcf	??_LCD_WriteChar^0,f,c
 11465  0042E6  2E03               	decfsz	(??_LCD_WriteChar+1)^0,f,c
 11466  0042E8  EF71  F021         	goto	u7215
 11467  0042EC  3002               	rrcf	??_LCD_WriteChar^0,w,c
 11468  0042EE  B0D8               	btfsc	status,0,c
 11469  0042F0  EF7C  F021         	goto	u7221
 11470  0042F4  EF7F  F021         	goto	u7220
 11471  0042F8                     u7221:
 11472  0042F8  8C8B               	bsf	3979,6,c	;volatile
 11473  0042FA  EF80  F021         	goto	u7235
 11474  0042FE                     u7220:
 11475  0042FE  9C8B               	bcf	3979,6,c	;volatile
 11476  004300                     u7235:
 11477  004300                     
 11478                           ;LCD.c: 54: LATC7 = iChar>>7;
 11479  004300  6A02               	clrf	??_LCD_WriteChar^0,c
 11480  004302  AE04               	btfss	LCD_WriteChar@iChar^0,7,c
 11481  004304  D001               	bra	u7245
 11482  004306  2A02               	incf	??_LCD_WriteChar^0,f,c
 11483  004308                     u7245:
 11484  004308  3002               	rrcf	??_LCD_WriteChar^0,w,c
 11485  00430A  B0D8               	btfsc	status,0,c
 11486  00430C  EF8A  F021         	goto	u7251
 11487  004310  EF8D  F021         	goto	u7250
 11488  004314                     u7251:
 11489  004314  8E8B               	bsf	3979,7,c	;volatile
 11490  004316  EF8E  F021         	goto	u7265
 11491  00431A                     u7250:
 11492  00431A  9E8B               	bcf	3979,7,c	;volatile
 11493  00431C                     u7265:
 11494  00431C  9289               	bcf	137,1,c	;volatile
 11495  00431E                     
 11496                           ;LCD.c: 56: _delay((unsigned long)((40+10)*(8000000/4000000.0)));
 11497  00431E  0E21               	movlw	33
 11498  004320                     u8507:
 11499  004320  2EE8               	decfsz	wreg,f,c
 11500  004322  D7FE               	bra	u8507
 11501  004324  F000               	nop	
 11502  004326  0012               	return		;funcret
 11503  004328                     __end_of_LCD_WriteChar:
 11504                           	callstack 0
 11505                           
 11506 ;; *************** function _LCD_GoTo *****************
 11507 ;; Defined at:
 11508 ;;		line 68 in file "LCD.c"
 11509 ;; Parameters:    Size  Location     Type
 11510 ;;  iLine           1    wreg     unsigned char 
 11511 ;;  iCharPos        1    8[COMRAM] unsigned char 
 11512 ;; Auto vars:     Size  Location     Type
 11513 ;;  iLine           1   14[COMRAM] unsigned char 
 11514 ;;  iPos            1   11[COMRAM] unsigned char 
 11515 ;; Return value:  Size  Location     Type
 11516 ;;                  1    wreg      void 
 11517 ;; Registers used:
 11518 ;;		wreg, status,2, status,0, cstack
 11519 ;; Tracked objects:
 11520 ;;		On entry : 0/0
 11521 ;;		On exit  : 0/0
 11522 ;;		Unchanged: 0/0
 11523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11524 ;;      Params:         1       0       0       0       0       0       0       0       0
 11525 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11526 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11527 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11528 ;;Total ram usage:        7 bytes
 11529 ;; Hardware stack levels used:    1
 11530 ;; Hardware stack levels required when called:    5
 11531 ;; This function calls:
 11532 ;;		_LCD_WriteCmd
 11533 ;; This function is called by:
 11534 ;;		_ComputeWaterVol
 11535 ;;		_ComputeTOD
 11536 ;; This function uses a non-reentrant model
 11537 ;;
 11538                           
 11539                           	psect	text43
 11540  004272                     __ptext43:
 11541                           	callstack 0
 11542  004272                     _LCD_GoTo:
 11543                           	callstack 24
 11544                           
 11545                           ;incstack = 0
 11546                           ;LCD_GoTo@iLine stored from wreg
 11547  004272  6E0F               	movwf	LCD_GoTo@iLine^0,c
 11548  004274                     
 11549                           ;LCD.c: 70: uint8_t iPos;;LCD.c: 71: if (iLine < 2)
 11550  004274  0E02               	movlw	2
 11551  004276  600F               	cpfslt	LCD_GoTo@iLine^0,c
 11552  004278  EF40  F021         	goto	u7711
 11553  00427C  EF42  F021         	goto	u7710
 11554  004280                     u7711:
 11555  004280  EF5E  F021         	goto	l6664
 11556  004284                     u7710:
 11557  004284                     
 11558                           ;LCD.c: 72: iPos = (iLine == 0) ?;LCD.c: 73: (0x80 | iCharPos) :;LCD.c: 74: (0xC0 | iCha
      +                          rPos);
 11559  004284  500F               	movf	LCD_GoTo@iLine^0,w,c
 11560  004286  B4D8               	btfsc	status,2,c
 11561  004288  EF48  F021         	goto	u7721
 11562  00428C  EF4A  F021         	goto	u7720
 11563  004290                     u7721:
 11564  004290  EF54  F021         	goto	l6660
 11565  004294                     u7720:
 11566  004294  0EC0               	movlw	192
 11567  004296  C009  F00A         	movff	LCD_GoTo@iCharPos,??_LCD_GoTo
 11568  00429A  6A0B               	clrf	(??_LCD_GoTo+1)^0,c
 11569  00429C  100A               	iorwf	??_LCD_GoTo^0,w,c
 11570  00429E  6E0D               	movwf	_LCD_GoTo$1411^0,c
 11571  0042A0  500B               	movf	(??_LCD_GoTo+1)^0,w,c
 11572  0042A2  6E0E               	movwf	(_LCD_GoTo$1411+1)^0,c
 11573  0042A4  EF5C  F021         	goto	l6662
 11574  0042A8                     l6660:
 11575  0042A8  0E80               	movlw	128
 11576  0042AA  C009  F00A         	movff	LCD_GoTo@iCharPos,??_LCD_GoTo
 11577  0042AE  6A0B               	clrf	(??_LCD_GoTo+1)^0,c
 11578  0042B0  100A               	iorwf	??_LCD_GoTo^0,w,c
 11579  0042B2  6E0D               	movwf	_LCD_GoTo$1411^0,c
 11580  0042B4  500B               	movf	(??_LCD_GoTo+1)^0,w,c
 11581  0042B6  6E0E               	movwf	(_LCD_GoTo$1411+1)^0,c
 11582  0042B8                     l6662:
 11583  0042B8  C00D  F00C         	movff	_LCD_GoTo$1411,LCD_GoTo@iPos
 11584  0042BC                     l6664:
 11585                           
 11586                           ;LCD.c: 75: LCD_WriteCmd (0x80 | iPos, 40+10);
 11587  0042BC  0E00               	movlw	0
 11588  0042BE  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
 11589  0042C0  0E32               	movlw	50
 11590  0042C2  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
 11591  0042C4  500C               	movf	LCD_GoTo@iPos^0,w,c
 11592  0042C6  0980               	iorlw	128
 11593  0042C8  EC18  F020         	call	_LCD_WriteCmd
 11594  0042CC  0012               	return		;funcret
 11595  0042CE                     __end_of_LCD_GoTo:
 11596                           	callstack 0
 11597                           
 11598 ;; *************** function _LCD_WriteCmd *****************
 11599 ;; Defined at:
 11600 ;;		line 33 in file "LCD.c"
 11601 ;; Parameters:    Size  Location     Type
 11602 ;;  iCmd            1    wreg     unsigned char 
 11603 ;;  iDelay          2    1[COMRAM] unsigned int 
 11604 ;; Auto vars:     Size  Location     Type
 11605 ;;  iCmd            1    7[COMRAM] unsigned char 
 11606 ;;  i               2    5[COMRAM] int 
 11607 ;; Return value:  Size  Location     Type
 11608 ;;                  1    wreg      void 
 11609 ;; Registers used:
 11610 ;;		wreg, status,2, status,0
 11611 ;; Tracked objects:
 11612 ;;		On entry : 0/0
 11613 ;;		On exit  : 0/0
 11614 ;;		Unchanged: 0/0
 11615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11616 ;;      Params:         2       0       0       0       0       0       0       0       0
 11617 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11618 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11619 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11620 ;;Total ram usage:        7 bytes
 11621 ;; Hardware stack levels used:    1
 11622 ;; Hardware stack levels required when called:    4
 11623 ;; This function calls:
 11624 ;;		Nothing
 11625 ;; This function is called by:
 11626 ;;		_LCD_Init
 11627 ;;		_LCD_GoTo
 11628 ;;		_LCD_ClearScreen
 11629 ;; This function uses a non-reentrant model
 11630 ;;
 11631                           
 11632                           	psect	text44
 11633  004030                     __ptext44:
 11634                           	callstack 0
 11635  004030                     _LCD_WriteCmd:
 11636                           	callstack 25
 11637                           
 11638                           ;incstack = 0
 11639                           ;LCD_WriteCmd@iCmd stored from wreg
 11640  004030  6E08               	movwf	LCD_WriteCmd@iCmd^0,c
 11641  004032  9689               	bcf	137,3,c	;volatile
 11642  004034  9489               	bcf	137,2,c	;volatile
 11643  004036                     
 11644                           ;LCD.c: 37: LATB = iCmd;
 11645  004036  C008  FF8A         	movff	LCD_WriteCmd@iCmd,3978	;volatile
 11646  00403A                     
 11647                           ;LCD.c: 38: LATC6 = iCmd>>6;
 11648  00403A  C008  F004         	movff	LCD_WriteCmd@iCmd,??_LCD_WriteCmd
 11649  00403E  0E06               	movlw	6
 11650  004040  6E05               	movwf	(??_LCD_WriteCmd+1)^0,c
 11651  004042                     u7145:
 11652  004042  90D8               	bcf	status,0,c
 11653  004044  3204               	rrcf	??_LCD_WriteCmd^0,f,c
 11654  004046  2E05               	decfsz	(??_LCD_WriteCmd+1)^0,f,c
 11655  004048  EF21  F020         	goto	u7145
 11656  00404C  3004               	rrcf	??_LCD_WriteCmd^0,w,c
 11657  00404E  B0D8               	btfsc	status,0,c
 11658  004050  EF2C  F020         	goto	u7151
 11659  004054  EF2F  F020         	goto	u7150
 11660  004058                     u7151:
 11661  004058  8C8B               	bsf	3979,6,c	;volatile
 11662  00405A  EF30  F020         	goto	u7165
 11663  00405E                     u7150:
 11664  00405E  9C8B               	bcf	3979,6,c	;volatile
 11665  004060                     u7165:
 11666  004060                     
 11667                           ;LCD.c: 39: LATC7 = iCmd>>7;
 11668  004060  6A04               	clrf	??_LCD_WriteCmd^0,c
 11669  004062  AE08               	btfss	LCD_WriteCmd@iCmd^0,7,c
 11670  004064  D001               	bra	u7175
 11671  004066  2A04               	incf	??_LCD_WriteCmd^0,f,c
 11672  004068                     u7175:
 11673  004068  3004               	rrcf	??_LCD_WriteCmd^0,w,c
 11674  00406A  B0D8               	btfsc	status,0,c
 11675  00406C  EF3A  F020         	goto	u7181
 11676  004070  EF3D  F020         	goto	u7180
 11677  004074                     u7181:
 11678  004074  8E8B               	bsf	3979,7,c	;volatile
 11679  004076  EF3E  F020         	goto	u7195
 11680  00407A                     u7180:
 11681  00407A  9E8B               	bcf	3979,7,c	;volatile
 11682  00407C                     u7195:
 11683  00407C  8289               	bsf	137,1,c	;volatile
 11684  00407E  9289               	bcf	137,1,c	;volatile
 11685  004080                     
 11686                           ;LCD.c: 42: for (int i = 0; i<iDelay; i++)
 11687  004080  0E00               	movlw	0
 11688  004082  6E07               	movwf	(LCD_WriteCmd@i+1)^0,c
 11689  004084  0E00               	movlw	0
 11690  004086  6E06               	movwf	LCD_WriteCmd@i^0,c
 11691  004088  EF49  F020         	goto	l6340
 11692  00408C                     l561:
 11693                           
 11694                           ;LCD.c: 43: _delay((unsigned long)((1)*(8000000/4000000.0)));
 11695  00408C  D000               	nop2		;2 cycle nop
 11696  00408E  4A06               	infsnz	LCD_WriteCmd@i^0,f,c
 11697  004090  2A07               	incf	(LCD_WriteCmd@i+1)^0,f,c
 11698  004092                     l6340:
 11699  004092  5002               	movf	LCD_WriteCmd@iDelay^0,w,c
 11700  004094  5C06               	subwf	LCD_WriteCmd@i^0,w,c
 11701  004096  5003               	movf	(LCD_WriteCmd@iDelay+1)^0,w,c
 11702  004098  5807               	subwfb	(LCD_WriteCmd@i+1)^0,w,c
 11703  00409A  A0D8               	btfss	status,0,c
 11704  00409C  EF52  F020         	goto	u7201
 11705  0040A0  EF54  F020         	goto	u7200
 11706  0040A4                     u7201:
 11707  0040A4  EF46  F020         	goto	l561
 11708  0040A8                     u7200:
 11709  0040A8  0012               	return		;funcret
 11710  0040AA                     __end_of_LCD_WriteCmd:
 11711                           	callstack 0
 11712                           
 11713 ;; *************** function _CCP2_Init *****************
 11714 ;; Defined at:
 11715 ;;		line 22 in file "CCP2.c"
 11716 ;; Parameters:    Size  Location     Type
 11717 ;;		None
 11718 ;; Auto vars:     Size  Location     Type
 11719 ;;		None
 11720 ;; Return value:  Size  Location     Type
 11721 ;;                  1    wreg      void 
 11722 ;; Registers used:
 11723 ;;		wreg, status,2
 11724 ;; Tracked objects:
 11725 ;;		On entry : 0/0
 11726 ;;		On exit  : 0/0
 11727 ;;		Unchanged: 0/0
 11728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11729 ;;      Params:         0       0       0       0       0       0       0       0       0
 11730 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11731 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11732 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11733 ;;Total ram usage:        0 bytes
 11734 ;; Hardware stack levels used:    1
 11735 ;; Hardware stack levels required when called:    4
 11736 ;; This function calls:
 11737 ;;		Nothing
 11738 ;; This function is called by:
 11739 ;;		_main
 11740 ;; This function uses a non-reentrant model
 11741 ;;
 11742                           
 11743                           	psect	text45
 11744  004548                     __ptext45:
 11745                           	callstack 0
 11746  004548                     _CCP2_Init:
 11747                           	callstack 26
 11748  004548                     
 11749                           ;CCP2.c: 25: CCP2CON = 0x0C;
 11750  004548  0E0C               	movlw	12
 11751  00454A  6EBA               	movwf	186,c	;volatile
 11752                           
 11753                           ;CCP2.c: 26: CCPR2L = 99>>2;
 11754  00454C  0E18               	movlw	24
 11755  00454E  6EBB               	movwf	187,c	;volatile
 11756                           
 11757                           ;CCP2.c: 27: CCP2CONbits.DC2B = 99 & 0x03;
 11758  004550  0E30               	movlw	48
 11759  004552  12BA               	iorwf	186,f,c	;volatile
 11760                           
 11761                           ;CCP2.c: 28: CCPR2H = 0x00;
 11762  004554  0E00               	movlw	0
 11763  004556  6EBC               	movwf	188,c	;volatile
 11764  004558  0012               	return		;funcret
 11765  00455A                     __end_of_CCP2_Init:
 11766                           	callstack 0
 11767                           
 11768 ;; *************** function _CCP1_Init *****************
 11769 ;; Defined at:
 11770 ;;		line 13 in file "CCP1.c"
 11771 ;; Parameters:    Size  Location     Type
 11772 ;;		None
 11773 ;; Auto vars:     Size  Location     Type
 11774 ;;		None
 11775 ;; Return value:  Size  Location     Type
 11776 ;;                  1    wreg      void 
 11777 ;; Registers used:
 11778 ;;		wreg, status,2
 11779 ;; Tracked objects:
 11780 ;;		On entry : 0/0
 11781 ;;		On exit  : 0/0
 11782 ;;		Unchanged: 0/0
 11783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11784 ;;      Params:         0       0       0       0       0       0       0       0       0
 11785 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11786 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11787 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11788 ;;Total ram usage:        0 bytes
 11789 ;; Hardware stack levels used:    1
 11790 ;; Hardware stack levels required when called:    4
 11791 ;; This function calls:
 11792 ;;		Nothing
 11793 ;; This function is called by:
 11794 ;;		_main
 11795 ;; This function uses a non-reentrant model
 11796 ;;
 11797                           
 11798                           	psect	text46
 11799  00455A                     __ptext46:
 11800                           	callstack 0
 11801  00455A                     _CCP1_Init:
 11802                           	callstack 26
 11803  00455A                     
 11804                           ;CCP1.c: 17: CCP1CON = 0x00;
 11805  00455A  0E00               	movlw	0
 11806  00455C  6EBD               	movwf	189,c	;volatile
 11807                           
 11808                           ;CCP1.c: 19: CCPR1H = 0x00;
 11809  00455E  0E00               	movlw	0
 11810  004560  6EBF               	movwf	191,c	;volatile
 11811                           
 11812                           ;CCP1.c: 20: CCPR1L = 0x00;
 11813  004562  0E00               	movlw	0
 11814  004564  6EBE               	movwf	190,c	;volatile
 11815  004566                     
 11816                           ;CCP1.c: 22: PIR1bits.CCP1IF = 0;
 11817  004566  949E               	bcf	158,2,c	;volatile
 11818  004568                     
 11819                           ;CCP1.c: 23: PIE1bits.CCP1IE = 0;
 11820  004568  949D               	bcf	157,2,c	;volatile
 11821  00456A  0012               	return		;funcret
 11822  00456C                     __end_of_CCP1_Init:
 11823                           	callstack 0
 11824                           
 11825 ;; *************** function _INTERRUPT_InterruptManager *****************
 11826 ;; Defined at:
 11827 ;;		line 15 in file "Interrupt_Mgr.c"
 11828 ;; Parameters:    Size  Location     Type
 11829 ;;		None
 11830 ;; Auto vars:     Size  Location     Type
 11831 ;;		None
 11832 ;; Return value:  Size  Location     Type
 11833 ;;                  1    wreg      void 
 11834 ;; Registers used:
 11835 ;;		wreg, status,2, status,0, cstack
 11836 ;; Tracked objects:
 11837 ;;		On entry : 0/0
 11838 ;;		On exit  : 0/0
 11839 ;;		Unchanged: 0/0
 11840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11841 ;;      Params:         0       0       0       0       0       0       0       0       0
 11842 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11843 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11844 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11845 ;;Total ram usage:        0 bytes
 11846 ;; Hardware stack levels used:    1
 11847 ;; Hardware stack levels required when called:    3
 11848 ;; This function calls:
 11849 ;;		_CCP1_ISR
 11850 ;;		_Timer0_ISR
 11851 ;;		_Timer2_ISR
 11852 ;;		_Timer3_ISR
 11853 ;; This function is called by:
 11854 ;;		Interrupt level 2
 11855 ;; This function uses a non-reentrant model
 11856 ;;
 11857                           
 11858                           	psect	intcode
 11859  000008                     __pintcode:
 11860                           	callstack 0
 11861  000008                     _INTERRUPT_InterruptManager:
 11862                           	callstack 21
 11863                           
 11864                           ;incstack = 0
 11865  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11866  00000A  ED41  F01F         	call	int_func,f	;refresh shadow registers
 11867                           
 11868                           	psect	intcode_body
 11869  003E82                     __pintcode_body:
 11870                           	callstack 21
 11871  003E82                     int_func:
 11872                           	callstack 21
 11873  003E82  0006               	pop		; remove dummy address from shadow register refresh
 11874  003E84                     
 11875                           ;Interrupt_Mgr.c: 18: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 11876  003E84  AAF2               	btfss	242,5,c	;volatile
 11877  003E86  EF47  F01F         	goto	i2u584_41
 11878  003E8A  EF49  F01F         	goto	i2u584_40
 11879  003E8E                     i2u584_41:
 11880  003E8E  EF54  F01F         	goto	i2l53
 11881  003E92                     i2u584_40:
 11882  003E92  A4F2               	btfss	242,2,c	;volatile
 11883  003E94  EF4E  F01F         	goto	i2u585_41
 11884  003E98  EF50  F01F         	goto	i2u585_40
 11885  003E9C                     i2u585_41:
 11886  003E9C  EF54  F01F         	goto	i2l53
 11887  003EA0                     i2u585_40:
 11888  003EA0                     
 11889                           ;Interrupt_Mgr.c: 19: {;Interrupt_Mgr.c: 20: Timer0_ISR();
 11890  003EA0  ECD7  F01F         	call	_Timer0_ISR	;wreg free
 11891                           
 11892                           ;Interrupt_Mgr.c: 21: }
 11893  003EA4  EF91  F01F         	goto	i2l63
 11894  003EA8                     i2l53:
 11895                           
 11896                           ;Interrupt_Mgr.c: 22: else if(INTCONbits.PEIE == 1)
 11897  003EA8  ACF2               	btfss	242,6,c	;volatile
 11898  003EAA  EF59  F01F         	goto	i2u586_41
 11899  003EAE  EF5B  F01F         	goto	i2u586_40
 11900  003EB2                     i2u586_41:
 11901  003EB2  EF91  F01F         	goto	i2l63
 11902  003EB6                     i2u586_40:
 11903  003EB6                     
 11904                           ;Interrupt_Mgr.c: 23: {;Interrupt_Mgr.c: 24: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF 
      +                          == 1)
 11905  003EB6  A2A0               	btfss	160,1,c	;volatile
 11906  003EB8  EF60  F01F         	goto	i2u587_41
 11907  003EBC  EF62  F01F         	goto	i2u587_40
 11908  003EC0                     i2u587_41:
 11909  003EC0  EF6D  F01F         	goto	i2l56
 11910  003EC4                     i2u587_40:
 11911  003EC4  A2A1               	btfss	161,1,c	;volatile
 11912  003EC6  EF67  F01F         	goto	i2u588_41
 11913  003ECA  EF69  F01F         	goto	i2u588_40
 11914  003ECE                     i2u588_41:
 11915  003ECE  EF6D  F01F         	goto	i2l56
 11916  003ED2                     i2u588_40:
 11917  003ED2                     
 11918                           ;Interrupt_Mgr.c: 25: {;Interrupt_Mgr.c: 26: Timer3_ISR();
 11919  003ED2  ECC0  F021         	call	_Timer3_ISR	;wreg free
 11920                           
 11921                           ;Interrupt_Mgr.c: 27: }
 11922  003ED6  EF91  F01F         	goto	i2l63
 11923  003EDA                     i2l56:
 11924                           
 11925                           ;Interrupt_Mgr.c: 28: else if(PIE1bits.CCP1IE == 1 && PIR1bits.CCP1IF == 1)
 11926  003EDA  A49D               	btfss	157,2,c	;volatile
 11927  003EDC  EF72  F01F         	goto	i2u589_41
 11928  003EE0  EF74  F01F         	goto	i2u589_40
 11929  003EE4                     i2u589_41:
 11930  003EE4  EF7F  F01F         	goto	i2l58
 11931  003EE8                     i2u589_40:
 11932  003EE8  A49E               	btfss	158,2,c	;volatile
 11933  003EEA  EF79  F01F         	goto	i2u590_41
 11934  003EEE  EF7B  F01F         	goto	i2u590_40
 11935  003EF2                     i2u590_41:
 11936  003EF2  EF7F  F01F         	goto	i2l58
 11937  003EF6                     i2u590_40:
 11938  003EF6                     
 11939                           ;Interrupt_Mgr.c: 29: {;Interrupt_Mgr.c: 30: CCP1_ISR();
 11940  003EF6  EC68  F022         	call	_CCP1_ISR	;wreg free
 11941                           
 11942                           ;Interrupt_Mgr.c: 31: }
 11943  003EFA  EF91  F01F         	goto	i2l63
 11944  003EFE                     i2l58:
 11945                           
 11946                           ;Interrupt_Mgr.c: 32: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 11947  003EFE  A29D               	btfss	157,1,c	;volatile
 11948  003F00  EF84  F01F         	goto	i2u591_41
 11949  003F04  EF86  F01F         	goto	i2u591_40
 11950  003F08                     i2u591_41:
 11951  003F08  EF91  F01F         	goto	i2l57
 11952  003F0C                     i2u591_40:
 11953  003F0C  A29E               	btfss	158,1,c	;volatile
 11954  003F0E  EF8B  F01F         	goto	i2u592_41
 11955  003F12  EF8D  F01F         	goto	i2u592_40
 11956  003F16                     i2u592_41:
 11957  003F16  EF91  F01F         	goto	i2l57
 11958  003F1A                     i2u592_40:
 11959  003F1A                     
 11960                           ;Interrupt_Mgr.c: 33: {;Interrupt_Mgr.c: 34: Timer2_ISR();
 11961  003F1A  ECC8  F022         	call	_Timer2_ISR	;wreg free
 11962                           
 11963                           ;Interrupt_Mgr.c: 35: }
 11964  003F1E  EF91  F01F         	goto	i2l63
 11965  003F22                     i2l57:
 11966  003F22                     i2l63:
 11967  003F22  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 11968  003F24  0011               	retfie		f
 11969  003F26                     __end_of_INTERRUPT_InterruptManager:
 11970                           	callstack 0
 11971                           
 11972 ;; *************** function _Timer3_ISR *****************
 11973 ;; Defined at:
 11974 ;;		line 20 in file "Timer_3.c"
 11975 ;; Parameters:    Size  Location     Type
 11976 ;;		None
 11977 ;; Auto vars:     Size  Location     Type
 11978 ;;		None
 11979 ;; Return value:  Size  Location     Type
 11980 ;;                  1    wreg      void 
 11981 ;; Registers used:
 11982 ;;		wreg, status,2, status,0, cstack
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/0
 11985 ;;		On exit  : 0/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11988 ;;      Params:         0       0       0       0       0       0       0       0       0
 11989 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11990 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11991 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11992 ;;Total ram usage:        0 bytes
 11993 ;; Hardware stack levels used:    1
 11994 ;; Hardware stack levels required when called:    2
 11995 ;; This function calls:
 11996 ;;		_StartDepthDetection
 11997 ;; This function is called by:
 11998 ;;		_INTERRUPT_InterruptManager
 11999 ;; This function uses a non-reentrant model
 12000 ;;
 12001                           
 12002                           	psect	text48
 12003  004380                     __ptext48:
 12004                           	callstack 0
 12005  004380                     _Timer3_ISR:
 12006                           	callstack 21
 12007  004380                     
 12008                           ;Timer_3.c: 22: T3CONbits.TMR3ON = 0;
 12009  004380  90B1               	bcf	177,0,c	;volatile
 12010  004382                     
 12011                           ;Timer_3.c: 23: TMR3H = (uint8_t)(Timer3_Reload>>8);
 12012  004382  0100               	movlb	0	; () banked
 12013  004384  51F6               	movf	(_Timer3_Reload+1)& (0+255),w,b
 12014  004386  6EB3               	movwf	179,c	;volatile
 12015  004388                     
 12016                           ; BSR set to: 0
 12017                           ;Timer_3.c: 24: TMR3L = (uint8_t) Timer3_Reload;
 12018  004388  C0F5  FFB2         	movff	_Timer3_Reload,4018	;volatile
 12019  00438C                     
 12020                           ; BSR set to: 0
 12021                           ;Timer_3.c: 26: PIR2bits.TMR3IF = 0;
 12022  00438C  92A1               	bcf	161,1,c	;volatile
 12023  00438E                     
 12024                           ; BSR set to: 0
 12025                           ;Timer_3.c: 27: T3CONbits.TMR3ON = 1;
 12026  00438E  80B1               	bsf	177,0,c	;volatile
 12027  004390                     
 12028                           ; BSR set to: 0
 12029                           ;Timer_3.c: 29: Timer3_Cntr ++;
 12030  004390  4BE2               	infsnz	_Timer3_Cntr& (0+255),f,b
 12031  004392  2BE3               	incf	(_Timer3_Cntr+1)& (0+255),f,b
 12032  004394                     
 12033                           ; BSR set to: 0
 12034                           ;Timer_3.c: 30: if (Timer3_Sampling)
 12035  004394  51ED               	movf	_Timer3_Sampling& (0+255),w,b
 12036  004396  B4D8               	btfsc	status,2,c
 12037  004398  EFD0  F021         	goto	i2u572_41
 12038  00439C  EFD2  F021         	goto	i2u572_40
 12039  0043A0                     i2u572_41:
 12040  0043A0  EFD9  F021         	goto	i2l5390
 12041  0043A4                     i2u572_40:
 12042  0043A4                     
 12043                           ; BSR set to: 0
 12044                           ;Timer_3.c: 31: {;Timer_3.c: 32: Timer3_Sampling = 0;
 12045  0043A4  0E00               	movlw	0
 12046  0043A6  6FED               	movwf	_Timer3_Sampling& (0+255),b
 12047  0043A8                     
 12048                           ; BSR set to: 0
 12049                           ;Timer_3.c: 33: LATAbits.LATA5 = 1;
 12050  0043A8  8A89               	bsf	137,5,c	;volatile
 12051                           
 12052                           ;Timer_3.c: 34: Timer3_Cntr = 0;
 12053  0043AA  0E00               	movlw	0
 12054  0043AC  6FE3               	movwf	(_Timer3_Cntr+1)& (0+255),b
 12055  0043AE  0E00               	movlw	0
 12056  0043B0  6FE2               	movwf	_Timer3_Cntr& (0+255),b
 12057  0043B2                     i2l5390:
 12058                           
 12059                           ; BSR set to: 0
 12060                           ;Timer_3.c: 36: };Timer_3.c: 37: if (Timer3_Cntr >= 10)
 12061  0043B2  51E3               	movf	(_Timer3_Cntr+1)& (0+255),w,b
 12062  0043B4  E109               	bnz	i2u573_40
 12063  0043B6  0E0A               	movlw	10
 12064  0043B8  5DE2               	subwf	_Timer3_Cntr& (0+255),w,b
 12065  0043BA  A0D8               	btfss	status,0,c
 12066  0043BC  EFE2  F021         	goto	i2u573_41
 12067  0043C0  EFE4  F021         	goto	i2u573_40
 12068  0043C4                     i2u573_41:
 12069  0043C4  EFE9  F021         	goto	i2l250
 12070  0043C8                     i2u573_40:
 12071  0043C8                     
 12072                           ; BSR set to: 0
 12073                           ;Timer_3.c: 38: {;Timer_3.c: 39: Timer3_Sampling = 1;
 12074  0043C8  0E01               	movlw	1
 12075  0043CA  6FED               	movwf	_Timer3_Sampling& (0+255),b
 12076  0043CC                     
 12077                           ; BSR set to: 0
 12078                           ;Timer_3.c: 40: LATAbits.LATA5 = 0;
 12079  0043CC  9A89               	bcf	137,5,c	;volatile
 12080  0043CE                     
 12081                           ; BSR set to: 0
 12082                           ;Timer_3.c: 41: StartDepthDetection();
 12083  0043CE  ECB6  F022         	call	_StartDepthDetection	;wreg free
 12084  0043D2                     i2l250:
 12085  0043D2  0012               	return		;funcret
 12086  0043D4                     __end_of_Timer3_ISR:
 12087                           	callstack 0
 12088                           
 12089 ;; *************** function _Timer2_ISR *****************
 12090 ;; Defined at:
 12091 ;;		line 9 in file "Timer_2.c"
 12092 ;; Parameters:    Size  Location     Type
 12093 ;;		None
 12094 ;; Auto vars:     Size  Location     Type
 12095 ;;		None
 12096 ;; Return value:  Size  Location     Type
 12097 ;;                  1    wreg      void 
 12098 ;; Registers used:
 12099 ;;		wreg, status,2
 12100 ;; Tracked objects:
 12101 ;;		On entry : 0/0
 12102 ;;		On exit  : 0/0
 12103 ;;		Unchanged: 0/0
 12104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12105 ;;      Params:         0       0       0       0       0       0       0       0       0
 12106 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12107 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12108 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12109 ;;Total ram usage:        0 bytes
 12110 ;; Hardware stack levels used:    1
 12111 ;; This function calls:
 12112 ;;		Nothing
 12113 ;; This function is called by:
 12114 ;;		_INTERRUPT_InterruptManager
 12115 ;; This function uses a non-reentrant model
 12116 ;;
 12117                           
 12118                           	psect	text49
 12119  004590                     __ptext49:
 12120                           	callstack 0
 12121  004590                     _Timer2_ISR:
 12122                           	callstack 23
 12123  004590                     
 12124                           ;Timer_2.c: 14: T2CONbits.TMR2ON = 0;
 12125  004590  94CA               	bcf	202,2,c	;volatile
 12126  004592                     
 12127                           ;Timer_2.c: 16: TMR2 = 0;
 12128  004592  0E00               	movlw	0
 12129  004594  6ECC               	movwf	204,c	;volatile
 12130  004596                     
 12131                           ;Timer_2.c: 17: PIE1bits.TMR2IE = 0;
 12132  004596  929D               	bcf	157,1,c	;volatile
 12133  004598                     
 12134                           ;Timer_2.c: 18: PIR1bits.TMR2IF = 0;
 12135  004598  929E               	bcf	158,1,c	;volatile
 12136  00459A  0012               	return		;funcret
 12137  00459C                     __end_of_Timer2_ISR:
 12138                           	callstack 0
 12139                           
 12140 ;; *************** function _Timer0_ISR *****************
 12141 ;; Defined at:
 12142 ;;		line 19 in file "Timer_0.c"
 12143 ;; Parameters:    Size  Location     Type
 12144 ;;		None
 12145 ;; Auto vars:     Size  Location     Type
 12146 ;;		None
 12147 ;; Return value:  Size  Location     Type
 12148 ;;                  1    wreg      void 
 12149 ;; Registers used:
 12150 ;;		wreg, status,2, status,0, cstack
 12151 ;; Tracked objects:
 12152 ;;		On entry : 0/0
 12153 ;;		On exit  : 0/0
 12154 ;;		Unchanged: 0/0
 12155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12156 ;;      Params:         0       0       0       0       0       0       0       0       0
 12157 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12158 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12159 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12160 ;;Total ram usage:        1 bytes
 12161 ;; Hardware stack levels used:    1
 12162 ;; Hardware stack levels required when called:    2
 12163 ;; This function calls:
 12164 ;;		_StartDepthDetection
 12165 ;; This function is called by:
 12166 ;;		_INTERRUPT_InterruptManager
 12167 ;; This function uses a non-reentrant model
 12168 ;;
 12169                           
 12170                           	psect	text50
 12171  003FAE                     __ptext50:
 12172                           	callstack 0
 12173  003FAE                     _Timer0_ISR:
 12174                           	callstack 21
 12175  003FAE  0E00               	movlw	0
 12176  003FB0  6ED7               	movwf	215,c	;volatile
 12177  003FB2  0E00               	movlw	0
 12178  003FB4  6ED6               	movwf	214,c	;volatile
 12179  003FB6                     
 12180                           ;Timer_0.c: 22: INTCONbits.TMR0IF = 0;
 12181  003FB6  94F2               	bcf	242,2,c	;volatile
 12182  003FB8                     
 12183                           ;Timer_0.c: 24: if (LATAbits.LATA5 == 0) LATAbits.LATA5 = 1;
 12184  003FB8  BA89               	btfsc	137,5,c	;volatile
 12185  003FBA  EFE1  F01F         	goto	i2u567_41
 12186  003FBE  EFE3  F01F         	goto	i2u567_40
 12187  003FC2                     i2u567_41:
 12188  003FC2  EFE4  F01F         	goto	i2l5354
 12189  003FC6                     i2u567_40:
 12190  003FC6  8A89               	bsf	137,5,c	;volatile
 12191  003FC8                     i2l5354:
 12192                           
 12193                           ;Timer_0.c: 25: if (++iSampleCntr == 10)
 12194  003FC8  0100               	movlb	0	; () banked
 12195  003FCA  2BEE               	incf	_iSampleCntr& (0+255),f,b
 12196  003FCC  0E0A               	movlw	10
 12197  003FCE  19EE               	xorwf	_iSampleCntr& (0+255),w,b
 12198  003FD0  A4D8               	btfss	status,2,c
 12199  003FD2  EFED  F01F         	goto	i2u568_41
 12200  003FD6  EFEF  F01F         	goto	i2u568_40
 12201  003FDA                     i2u568_41:
 12202  003FDA  EFF4  F01F         	goto	i2l5362
 12203  003FDE                     i2u568_40:
 12204  003FDE                     
 12205                           ; BSR set to: 0
 12206                           ;Timer_0.c: 26: {;Timer_0.c: 27: LATAbits.LATA5 = 0;
 12207  003FDE  9A89               	bcf	137,5,c	;volatile
 12208  003FE0                     
 12209                           ; BSR set to: 0
 12210                           ;Timer_0.c: 28: iSampleCntr = 0;
 12211  003FE0  0E00               	movlw	0
 12212  003FE2  6FEE               	movwf	_iSampleCntr& (0+255),b
 12213  003FE4                     
 12214                           ; BSR set to: 0
 12215                           ;Timer_0.c: 29: StartDepthDetection();
 12216  003FE4  ECB6  F022         	call	_StartDepthDetection	;wreg free
 12217  003FE8                     i2l5362:
 12218                           
 12219                           ;Timer_0.c: 30: };Timer_0.c: 32: if (++imSCntr == 200)
 12220  003FE8  0100               	movlb	0	; () banked
 12221  003FEA  4BE4               	infsnz	_imSCntr& (0+255),f,b
 12222  003FEC  2BE5               	incf	(_imSCntr+1)& (0+255),f,b
 12223  003FEE  0EC8               	movlw	200
 12224  003FF0  19E4               	xorwf	_imSCntr& (0+255),w,b
 12225  003FF2  11E5               	iorwf	(_imSCntr+1)& (0+255),w,b
 12226  003FF4  A4D8               	btfss	status,2,c
 12227  003FF6  EFFF  F01F         	goto	i2u569_41
 12228  003FFA  EF01  F020         	goto	i2u569_40
 12229  003FFE                     i2u569_41:
 12230  003FFE  EF17  F020         	goto	i2l135
 12231  004002                     i2u569_40:
 12232  004002                     
 12233                           ; BSR set to: 0
 12234                           ;Timer_0.c: 33: {;Timer_0.c: 34: PORTCbits.RC0 = !PORTCbits.RC0;
 12235  004002  A082               	btfss	130,0,c	;volatile
 12236  004004  EF06  F020         	goto	i2u570_41
 12237  004008  EF0A  F020         	goto	i2u570_40
 12238  00400C                     i2u570_41:
 12239  00400C  6A01               	clrf	??_Timer0_ISR^0,c
 12240  00400E  2A01               	incf	??_Timer0_ISR^0,f,c
 12241  004010  EF0B  F020         	goto	i2u571_48
 12242  004014                     i2u570_40:
 12243  004014  6A01               	clrf	??_Timer0_ISR^0,c
 12244  004016                     i2u571_48:
 12245  004016  5082               	movf	130,w,c	;volatile
 12246  004018  1801               	xorwf	??_Timer0_ISR^0,w,c
 12247  00401A  0BFE               	andlw	-2
 12248  00401C  1801               	xorwf	??_Timer0_ISR^0,w,c
 12249  00401E  6E82               	movwf	130,c	;volatile
 12250  004020                     
 12251                           ;Timer_0.c: 35: gb_UpdateTime = 1;
 12252  004020  0E01               	movlw	1
 12253  004022  0100               	movlb	0	; () banked
 12254  004024  6FF4               	movwf	_gb_UpdateTime& (0+255),b	;volatile
 12255  004026                     
 12256                           ; BSR set to: 0
 12257                           ;Timer_0.c: 36: imSCntr = 0;
 12258  004026  0E00               	movlw	0
 12259  004028  6FE5               	movwf	(_imSCntr+1)& (0+255),b
 12260  00402A  0E00               	movlw	0
 12261  00402C  6FE4               	movwf	_imSCntr& (0+255),b
 12262  00402E                     i2l135:
 12263                           
 12264                           ; BSR set to: 0
 12265  00402E  0012               	return		;funcret
 12266  004030                     __end_of_Timer0_ISR:
 12267                           	callstack 0
 12268                           
 12269 ;; *************** function _StartDepthDetection *****************
 12270 ;; Defined at:
 12271 ;;		line 21 in file "Timer_2.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;		None
 12274 ;; Auto vars:     Size  Location     Type
 12275 ;;		None
 12276 ;; Return value:  Size  Location     Type
 12277 ;;                  1    wreg      void 
 12278 ;; Registers used:
 12279 ;;		wreg, status,2, cstack
 12280 ;; Tracked objects:
 12281 ;;		On entry : 0/0
 12282 ;;		On exit  : 0/0
 12283 ;;		Unchanged: 0/0
 12284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12285 ;;      Params:         0       0       0       0       0       0       0       0       0
 12286 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12287 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12288 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12289 ;;Total ram usage:        0 bytes
 12290 ;; Hardware stack levels used:    1
 12291 ;; Hardware stack levels required when called:    1
 12292 ;; This function calls:
 12293 ;;		_CCP1_Activate
 12294 ;; This function is called by:
 12295 ;;		_Timer0_ISR
 12296 ;;		_Timer3_ISR
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300                           	psect	text51
 12301  00456C                     __ptext51:
 12302                           	callstack 0
 12303  00456C                     _StartDepthDetection:
 12304                           	callstack 21
 12305  00456C                     
 12306                           ;Timer_2.c: 27: TMR2 = 0;
 12307  00456C  0E00               	movlw	0
 12308  00456E  6ECC               	movwf	204,c	;volatile
 12309  004570                     
 12310                           ;Timer_2.c: 28: PIR1bits.TMR2IF = 0;
 12311  004570  929E               	bcf	158,1,c	;volatile
 12312  004572                     
 12313                           ;Timer_2.c: 29: PIE1bits.TMR2IE = 1;
 12314  004572  829D               	bsf	157,1,c	;volatile
 12315  004574                     
 12316                           ;Timer_2.c: 30: T2CONbits.TMR2ON = 1;
 12317  004574  84CA               	bsf	202,2,c	;volatile
 12318  004576                     
 12319                           ;Timer_2.c: 31: CCP1_Activate();
 12320  004576  ECBF  F022         	call	_CCP1_Activate	;wreg free
 12321  00457A                     
 12322                           ;Timer_2.c: 32: T1CONbits.TMR1ON = 1;
 12323  00457A  80CD               	bsf	205,0,c	;volatile
 12324  00457C  0012               	return		;funcret
 12325  00457E                     __end_of_StartDepthDetection:
 12326                           	callstack 0
 12327                           
 12328 ;; *************** function _CCP1_Activate *****************
 12329 ;; Defined at:
 12330 ;;		line 49 in file "CCP1.c"
 12331 ;; Parameters:    Size  Location     Type
 12332 ;;		None
 12333 ;; Auto vars:     Size  Location     Type
 12334 ;;		None
 12335 ;; Return value:  Size  Location     Type
 12336 ;;                  1    wreg      void 
 12337 ;; Registers used:
 12338 ;;		wreg, status,2
 12339 ;; Tracked objects:
 12340 ;;		On entry : 0/0
 12341 ;;		On exit  : 0/0
 12342 ;;		Unchanged: 0/0
 12343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12344 ;;      Params:         0       0       0       0       0       0       0       0       0
 12345 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12346 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12347 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12348 ;;Total ram usage:        0 bytes
 12349 ;; Hardware stack levels used:    1
 12350 ;; This function calls:
 12351 ;;		Nothing
 12352 ;; This function is called by:
 12353 ;;		_StartDepthDetection
 12354 ;; This function uses a non-reentrant model
 12355 ;;
 12356                           
 12357                           	psect	text52
 12358  00457E                     __ptext52:
 12359                           	callstack 0
 12360  00457E                     _CCP1_Activate:
 12361                           	callstack 21
 12362  00457E                     
 12363                           ;CCP1.c: 51: CCPR1H = 0;
 12364  00457E  0E00               	movlw	0
 12365  004580  6EBF               	movwf	191,c	;volatile
 12366                           
 12367                           ;CCP1.c: 52: CCPR1L = 0;
 12368  004582  0E00               	movlw	0
 12369  004584  6EBE               	movwf	190,c	;volatile
 12370                           
 12371                           ;CCP1.c: 53: CCP1CON = 0x04;
 12372  004586  0E04               	movlw	4
 12373  004588  6EBD               	movwf	189,c	;volatile
 12374  00458A                     
 12375                           ;CCP1.c: 54: PIR1bits.CCP1IF = 0;
 12376  00458A  949E               	bcf	158,2,c	;volatile
 12377  00458C                     
 12378                           ;CCP1.c: 55: PIE1bits.CCP1IE = 1;
 12379  00458C  849D               	bsf	157,2,c	;volatile
 12380  00458E  0012               	return		;funcret
 12381  004590                     __end_of_CCP1_Activate:
 12382                           	callstack 0
 12383                           
 12384 ;; *************** function _CCP1_ISR *****************
 12385 ;; Defined at:
 12386 ;;		line 32 in file "CCP1.c"
 12387 ;; Parameters:    Size  Location     Type
 12388 ;;		None
 12389 ;; Auto vars:     Size  Location     Type
 12390 ;;		None
 12391 ;; Return value:  Size  Location     Type
 12392 ;;                  1    wreg      void 
 12393 ;; Registers used:
 12394 ;;		wreg, status,2, cstack
 12395 ;; Tracked objects:
 12396 ;;		On entry : 0/0
 12397 ;;		On exit  : 0/0
 12398 ;;		Unchanged: 0/0
 12399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12400 ;;      Params:         0       0       0       0       0       0       0       0       0
 12401 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12402 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12403 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12404 ;;Total ram usage:        0 bytes
 12405 ;; Hardware stack levels used:    1
 12406 ;; Hardware stack levels required when called:    1
 12407 ;; This function calls:
 12408 ;;		_Timer1_Reset
 12409 ;; This function is called by:
 12410 ;;		_INTERRUPT_InterruptManager
 12411 ;; This function uses a non-reentrant model
 12412 ;;
 12413                           
 12414                           	psect	text53
 12415  0044D0                     __ptext53:
 12416                           	callstack 0
 12417  0044D0                     _CCP1_ISR:
 12418                           	callstack 22
 12419  0044D0                     
 12420                           ;CCP1.c: 35: giEchoCounter.EPl = CCPR1L;
 12421  0044D0  CFBE F0EA          	movff	4030,_giEchoCounter	;volatile
 12422                           
 12423                           ;CCP1.c: 36: giEchoCounter.EPh = CCPR1H;
 12424  0044D4  CFBF F0EB          	movff	4031,_giEchoCounter+1	;volatile
 12425  0044D8                     
 12426                           ;CCP1.c: 39: CCP1CON = 0x00;
 12427  0044D8  0E00               	movlw	0
 12428  0044DA  6EBD               	movwf	189,c	;volatile
 12429                           
 12430                           ;CCP1.c: 40: CCPR1H = 0;
 12431  0044DC  0E00               	movlw	0
 12432  0044DE  6EBF               	movwf	191,c	;volatile
 12433                           
 12434                           ;CCP1.c: 41: CCPR1L = 0;
 12435  0044E0  0E00               	movlw	0
 12436  0044E2  6EBE               	movwf	190,c	;volatile
 12437  0044E4                     
 12438                           ;CCP1.c: 43: PIR1bits.CCP1IF = 0;
 12439  0044E4  949E               	bcf	158,2,c	;volatile
 12440  0044E6                     
 12441                           ;CCP1.c: 44: PIE1bits.CCP1IE = 0;
 12442  0044E6  949D               	bcf	157,2,c	;volatile
 12443  0044E8                     
 12444                           ;CCP1.c: 45: Timer1_Reset();
 12445  0044E8  ECCE  F022         	call	_Timer1_Reset	;wreg free
 12446  0044EC                     
 12447                           ;CCP1.c: 46: gb_EchoDetected = 1;
 12448  0044EC  0E01               	movlw	1
 12449  0044EE  0100               	movlb	0	; () banked
 12450  0044F0  6FF3               	movwf	_gb_EchoDetected& (0+255),b	;volatile
 12451  0044F2                     
 12452                           ; BSR set to: 0
 12453  0044F2  0012               	return		;funcret
 12454  0044F4                     __end_of_CCP1_ISR:
 12455                           	callstack 0
 12456                           
 12457 ;; *************** function _Timer1_Reset *****************
 12458 ;; Defined at:
 12459 ;;		line 26 in file "Timer_1.c"
 12460 ;; Parameters:    Size  Location     Type
 12461 ;;		None
 12462 ;; Auto vars:     Size  Location     Type
 12463 ;;		None
 12464 ;; Return value:  Size  Location     Type
 12465 ;;                  1    wreg      void 
 12466 ;; Registers used:
 12467 ;;		wreg, status,2
 12468 ;; Tracked objects:
 12469 ;;		On entry : 0/0
 12470 ;;		On exit  : 0/0
 12471 ;;		Unchanged: 0/0
 12472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12473 ;;      Params:         0       0       0       0       0       0       0       0       0
 12474 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12475 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12476 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12477 ;;Total ram usage:        0 bytes
 12478 ;; Hardware stack levels used:    1
 12479 ;; This function calls:
 12480 ;;		Nothing
 12481 ;; This function is called by:
 12482 ;;		_CCP1_ISR
 12483 ;; This function uses a non-reentrant model
 12484 ;;
 12485                           
 12486                           	psect	text54
 12487  00459C                     __ptext54:
 12488                           	callstack 0
 12489  00459C                     _Timer1_Reset:
 12490                           	callstack 22
 12491  00459C                     
 12492                           ;Timer_1.c: 28: T1CONbits.TMR1ON = 0;
 12493  00459C  90CD               	bcf	205,0,c	;volatile
 12494  00459E                     
 12495                           ;Timer_1.c: 29: TMR1H = 0;
 12496  00459E  0E00               	movlw	0
 12497  0045A0  6ECF               	movwf	207,c	;volatile
 12498                           
 12499                           ;Timer_1.c: 30: TMR1L = 0;
 12500  0045A2  0E00               	movlw	0
 12501  0045A4  6ECE               	movwf	206,c	;volatile
 12502  0045A6  0012               	return		;funcret
 12503  0045A8                     __end_of_Timer1_Reset:
 12504                           	callstack 0
 12505                           
 12506                           	psect	rparam
 12507  0000                     
 12508                           	psect	temp
 12509  00005E                     btemp:
 12510                           	callstack 0
 12511  00005E                     	ds	1
 12512  0000                     int$flags	set	btemp
 12513  0000                     wtemp8	set	btemp+1
 12514  0000                     ttemp5	set	btemp+1
 12515  0000                     ttemp6	set	btemp+4
 12516  0000                     ttemp7	set	btemp+8
 12517                           
 12518                           	psect	idloc
 12519                           
 12520                           ;Config register IDLOC0 @ 0x200000
 12521                           ;	unspecified, using default values
 12522  200000                     	org	2097152
 12523  200000  FF                 	db	255
 12524                           
 12525                           ;Config register IDLOC1 @ 0x200001
 12526                           ;	unspecified, using default values
 12527  200001                     	org	2097153
 12528  200001  FF                 	db	255
 12529                           
 12530                           ;Config register IDLOC2 @ 0x200002
 12531                           ;	unspecified, using default values
 12532  200002                     	org	2097154
 12533  200002  FF                 	db	255
 12534                           
 12535                           ;Config register IDLOC3 @ 0x200003
 12536                           ;	unspecified, using default values
 12537  200003                     	org	2097155
 12538  200003  FF                 	db	255
 12539                           
 12540                           ;Config register IDLOC4 @ 0x200004
 12541                           ;	unspecified, using default values
 12542  200004                     	org	2097156
 12543  200004  FF                 	db	255
 12544                           
 12545                           ;Config register IDLOC5 @ 0x200005
 12546                           ;	unspecified, using default values
 12547  200005                     	org	2097157
 12548  200005  FF                 	db	255
 12549                           
 12550                           ;Config register IDLOC6 @ 0x200006
 12551                           ;	unspecified, using default values
 12552  200006                     	org	2097158
 12553  200006  FF                 	db	255
 12554                           
 12555                           ;Config register IDLOC7 @ 0x200007
 12556                           ;	unspecified, using default values
 12557  200007                     	org	2097159
 12558  200007  FF                 	db	255
 12559                           
 12560                           	psect	config
 12561                           
 12562                           ;Config register CONFIG1L @ 0x300000
 12563                           ;	PLL Prescaler Selection bits
 12564                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
 12565                           ;	System Clock Postscaler Selection bits
 12566                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 12567                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 12568                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
 12569  300000                     	org	3145728
 12570  300000  21                 	db	33
 12571                           
 12572                           ;Config register CONFIG1H @ 0x300001
 12573                           ;	Oscillator Selection bits
 12574                           ;	FOSC = HS, HS oscillator (HS)
 12575                           ;	Fail-Safe Clock Monitor Enable bit
 12576                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12577                           ;	Internal/External Oscillator Switchover bit
 12578                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12579  300001                     	org	3145729
 12580  300001  0C                 	db	12
 12581                           
 12582                           ;Config register CONFIG2L @ 0x300002
 12583                           ;	Power-up Timer Enable bit
 12584                           ;	PWRT = OFF, PWRT disabled
 12585                           ;	Brown-out Reset Enable bits
 12586                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 12587                           ;	Brown-out Reset Voltage bits
 12588                           ;	BORV = 2, Setting 1 2.79V
 12589                           ;	USB Voltage Regulator Enable bit
 12590                           ;	VREGEN = OFF, USB voltage regulator disabled
 12591  300002                     	org	3145730
 12592  300002  11                 	db	17
 12593                           
 12594                           ;Config register CONFIG2H @ 0x300003
 12595                           ;	Watchdog Timer Enable bit
 12596                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 12597                           ;	Watchdog Timer Postscale Select bits
 12598                           ;	WDTPS = 32768, 1:32768
 12599  300003                     	org	3145731
 12600  300003  1E                 	db	30
 12601                           
 12602                           ; Padding undefined space
 12603  300004                     	org	3145732
 12604  300004  FF                 	db	255
 12605                           
 12606                           ;Config register CONFIG3H @ 0x300005
 12607                           ;	CCP2 MUX bit
 12608                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 12609                           ;	PORTB A/D Enable bit
 12610                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 12611                           ;	Low-Power Timer 1 Oscillator Enable bit
 12612                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 12613                           ;	MCLR Pin Enable bit
 12614                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 12615  300005                     	org	3145733
 12616  300005  81                 	db	129
 12617                           
 12618                           ;Config register CONFIG4L @ 0x300006
 12619                           ;	Stack Full/Underflow Reset Enable bit
 12620                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12621                           ;	Single-Supply ICSP Enable bit
 12622                           ;	LVP = OFF, Single-Supply ICSP disabled
 12623                           ;	Extended Instruction Set Enable bit
 12624                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12625                           ;	Background Debugger Enable bit
 12626                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 12627  300006                     	org	3145734
 12628  300006  81                 	db	129
 12629                           
 12630                           ; Padding undefined space
 12631  300007                     	org	3145735
 12632  300007  FF                 	db	255
 12633                           
 12634                           ;Config register CONFIG5L @ 0x300008
 12635                           ;	Code Protection bit
 12636                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 12637                           ;	Code Protection bit
 12638                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 12639                           ;	Code Protection bit
 12640                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 12641  300008                     	org	3145736
 12642  300008  0F                 	db	15
 12643                           
 12644                           ;Config register CONFIG5H @ 0x300009
 12645                           ;	Boot Block Code Protection bit
 12646                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 12647                           ;	Data EEPROM Code Protection bit
 12648                           ;	CPD = OFF, Data EEPROM is not code-protected
 12649  300009                     	org	3145737
 12650  300009  C0                 	db	192
 12651                           
 12652                           ;Config register CONFIG6L @ 0x30000A
 12653                           ;	Write Protection bit
 12654                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 12655                           ;	Write Protection bit
 12656                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 12657                           ;	Write Protection bit
 12658                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 12659  30000A                     	org	3145738
 12660  30000A  0F                 	db	15
 12661                           
 12662                           ;Config register CONFIG6H @ 0x30000B
 12663                           ;	Configuration Register Write Protection bit
 12664                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12665                           ;	Boot Block Write Protection bit
 12666                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 12667                           ;	Data EEPROM Write Protection bit
 12668                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12669  30000B                     	org	3145739
 12670  30000B  E0                 	db	224
 12671                           
 12672                           ;Config register CONFIG7L @ 0x30000C
 12673                           ;	Table Read Protection bit
 12674                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12675                           ;	Table Read Protection bit
 12676                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12677                           ;	Table Read Protection bit
 12678                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 12679  30000C                     	org	3145740
 12680  30000C  0F                 	db	15
 12681                           
 12682                           ;Config register CONFIG7H @ 0x30000D
 12683                           ;	Boot Block Table Read Protection bit
 12684                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 12685  30000D                     	org	3145741
 12686  30000D  40                 	db	64
 12687                           tosu	equ	0xFFF
 12688                           tosh	equ	0xFFE
 12689                           tosl	equ	0xFFD
 12690                           stkptr	equ	0xFFC
 12691                           pclatu	equ	0xFFB
 12692                           pclath	equ	0xFFA
 12693                           pcl	equ	0xFF9
 12694                           tblptru	equ	0xFF8
 12695                           tblptrh	equ	0xFF7
 12696                           tblptrl	equ	0xFF6
 12697                           tablat	equ	0xFF5
 12698                           prodh	equ	0xFF4
 12699                           prodl	equ	0xFF3
 12700                           indf0	equ	0xFEF
 12701                           postinc0	equ	0xFEE
 12702                           postdec0	equ	0xFED
 12703                           preinc0	equ	0xFEC
 12704                           plusw0	equ	0xFEB
 12705                           fsr0h	equ	0xFEA
 12706                           fsr0l	equ	0xFE9
 12707                           wreg	equ	0xFE8
 12708                           indf1	equ	0xFE7
 12709                           postinc1	equ	0xFE6
 12710                           postdec1	equ	0xFE5
 12711                           preinc1	equ	0xFE4
 12712                           plusw1	equ	0xFE3
 12713                           fsr1h	equ	0xFE2
 12714                           fsr1l	equ	0xFE1
 12715                           bsr	equ	0xFE0
 12716                           indf2	equ	0xFDF
 12717                           postinc2	equ	0xFDE
 12718                           postdec2	equ	0xFDD
 12719                           preinc2	equ	0xFDC
 12720                           plusw2	equ	0xFDB
 12721                           fsr2h	equ	0xFDA
 12722                           fsr2l	equ	0xFD9
 12723                           status	equ	0xFD8

Data Sizes:
    Strings     57
    Constant    222
    Data        40
    BSS         245
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      93
    BANK0           160    124     158
    BANK1           256      0     250
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(BANK0[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_4(CODE[4]), STR_3(CODE[18]), STR_2(CODE[23]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> gsTotalSecs(BANK0[4]), sLine2(BANK1[100]), sLine1(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_WriteString@iData	PTR unsigned char  size(2) Largest target is 100
		 -> gsTotalSecs(BANK0[4]), sLine2(BANK1[100]), sLine1(BANK1[100]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _main->_ComputeTOD
    _LCD_Init->_LCD_WriteCmd
    _pow->_log
    _log->___fladd
    _exp->_ldexp
    _exp->_log
    _floor->___fladd
    _frexp->___fleq
    _eval_poly->___fladd
    _sqrt->___fldiv
    _sprintf->_scale
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->_frexp
    ___xxtofl->___fltol
    ___llmod->___lldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->_fround
    ___fleq->___xxtofl
    _LCD_WriteString->_LCD_WriteChar
    _LCD_GoTo->_LCD_WriteCmd

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_Timer0_ISR

Critical Paths under _main in BANK0

    _main->_ComputeWaterVol
    _InitTankVariables->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___fladd
    _eval_poly->___fladd
    _ComputeWaterVol->_sprintf
    _ComputeTOD->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  239253
                                            120 BANK0      4     4      0
                          _CCP1_Init
                          _CCP2_Init
                         _ComputeTOD
                    _ComputeWaterVol
                  _InitTankVariables
                           _LCD_Init
                    _LCD_WriteString
                            _SysInit
                        _Timer0_Init
                        _Timer1_Init
                        _Timer2_Init
 ---------------------------------------------------------------------------------
 (1) _Timer2_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SysInit                                              0     0      0       0
                            _OscInit
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OscInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     927
                                              8 COMRAM     2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _InitTankVariables                                    4     4      0  102432
                                             88 BANK0      4     4      0
                            ___flmul
                                _pow
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _pow                                                 21    13      8   93852
                                             67 BANK0     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   31122
                                             90 COMRAM     2     2      0
                                             50 BANK0      4     0      4
                            ___fladd
                             ___fleq
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                 11     7      4   48196
                                             56 BANK0     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                8     2      6    2749
                                             90 COMRAM     2     2      0
                                             50 BANK0      6     0      6
                             ___fleq
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                               10     6      4   11381
                                             34 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                8     2      6    2892
                                             62 COMRAM     8     2      6
                             ___fleq
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     8      8   12649
                                             34 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) _ComputeWaterVol                                     35    35      0   78819
                                             85 BANK0     35    35      0
                           _LCD_GoTo
                    _LCD_WriteString
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                29    25      4    1033
                                             26 COMRAM    29    25      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1855
                                              1 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _ComputeTOD                                           2     2      0   56455
                                             91 COMRAM     1     1      0
                                             85 BANK0      1     1      0
                           _LCD_GoTo
                    _LCD_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             44    36      8   54579
                                             42 BANK0     43    35      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                                9     5      4   11360
                                             82 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1513
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1705
                                              7 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13     9      4    9416
                                             82 COMRAM     4     0      4
                                             13 BANK0      9     9      0
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     772
                                              1 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     781
                                              6 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    7513
                                             70 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                            ___fltol (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     634
                                              1 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     634
                                              1 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                             36 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     772
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     952
                                             14 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     781
                                              1 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1057
                                             26 COMRAM    10     6      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    5087
                                             34 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    4342
                                             86 COMRAM     4     4      0
                                             22 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
                             _fround (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     425
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1526
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    2210
                                             50 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      5     3      2     583
                                              4 COMRAM     5     3      2
                      _LCD_WriteChar
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteChar                                        3     3      0      93
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_GoTo                                             7     6      1    1256
                                              8 COMRAM     7     6      1
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         7     5      2     791
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _CCP2_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0       0
                           _CCP1_ISR
                         _Timer0_ISR
                         _Timer2_ISR
                         _Timer3_ISR
 ---------------------------------------------------------------------------------
 (8) _Timer3_ISR                                           0     0      0       0
                _StartDepthDetection
 ---------------------------------------------------------------------------------
 (8) _Timer2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                           1     1      0       0
                                              0 COMRAM     1     1      0
                _StartDepthDetection
 ---------------------------------------------------------------------------------
 (9) _StartDepthDetection                                  0     0      0       0
                      _CCP1_Activate
 ---------------------------------------------------------------------------------
 (10) _CCP1_Activate                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP1_ISR                                             0     0      0       0
                       _Timer1_Reset
 ---------------------------------------------------------------------------------
 (9) _Timer1_Reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP1_Init
   _CCP2_Init
   _ComputeTOD
     _LCD_GoTo
       _LCD_WriteCmd
     _LCD_WriteString
       _LCD_WriteChar
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fldiv (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _sqrt (ARG)
           ___fldiv (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
         _sqrt (ARG)
           ___fldiv (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
               _sqrt (ARG)
                 ___fldiv (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _sqrt (ARG)
             ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
       ___fltol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fldiv (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fldiv (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
   _ComputeWaterVol
     _LCD_GoTo
       _LCD_WriteCmd
     _LCD_WriteString
       _LCD_WriteChar
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
         _sqrt (ARG)
           ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
       _fround (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fldiv (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _sqrt (ARG)
         ___fldiv (ARG)
     ___fldiv
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
       _sqrt (ARG)
         ___fldiv (ARG)
     ___flsub
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fldiv (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _sqrt (ARG)
           ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
     ___fltol
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
         _fround (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fldiv (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
         _sqrt (ARG)
           ___fldiv (ARG)
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
         _sqrt (ARG)
           ___fldiv (ARG)
       ___flneg
       ___flsub
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
               _sqrt (ARG)
                 ___fldiv (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _sqrt (ARG)
             ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
       ___fltol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fldiv (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
       _isdigit
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fldiv (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
     _sqrt
       ___fldiv (ARG)
   _InitTankVariables
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___fldiv (ARG)
       ___fltol (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
       _sqrt (ARG)
         ___fldiv (ARG)
     _pow
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
       ___flge
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
         _sqrt (ARG)
           ___fldiv (ARG)
       ___flneg
       ___fltol
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
       _exp
         ___fldiv
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fldiv (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
               _sqrt (ARG)
                 ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                 _sqrt (ARG)
                   ___fldiv (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _sqrt (ARG)
               ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
         ___fltol
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
         ___xxtofl
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
         _eval_poly
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
               _sqrt (ARG)
                 ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                 _sqrt (ARG)
                   ___fldiv (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _sqrt (ARG)
               ___fldiv (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fldiv (ARG)
         _floor
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
               _sqrt (ARG)
                 ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                 _sqrt (ARG)
                   ___fldiv (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _sqrt (ARG)
               ___fldiv (ARG)
           ___flge
           ___fltol
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
           ___xxtofl
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _frexp
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
         _ldexp
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
           _eval_poly (ARG)
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                 _sqrt (ARG)
                   ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                   _frexp (ARG)
                     ___fleq
                       ___xxtofl (ARG)
                         ___fltol (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                   _sqrt (ARG)
                     ___fldiv (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _sqrt (ARG)
                 ___fldiv (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
               _sqrt (ARG)
                 ___fldiv (ARG)
         _log (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
               _sqrt (ARG)
                 ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                 _sqrt (ARG)
                   ___fldiv (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _sqrt (ARG)
               ___fldiv (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fldiv (ARG)
           ___xxtofl
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                 _sqrt (ARG)
                   ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
               _fround (ARG)
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                   ___lwdiv (ARG)
                     ___lwmod (ARG)
                   ___lwmod (ARG)
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
                   _frexp (ARG)
                     ___fleq
                       ___xxtofl (ARG)
                         ___fltol (ARG)
                           ___awdiv (ARG)
                             ___awmod (ARG)
                           ___awmod (ARG)
                           ___fldiv (ARG)
                   _sqrt (ARG)
                     ___fldiv (ARG)
                 ___lwdiv
                   ___lwmod (ARG)
                 ___lwmod
               _sqrt (ARG)
                 ___fldiv (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
               _sqrt (ARG)
                 ___fldiv (ARG)
           _frexp
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
       _log
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
           _fround (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
               _sqrt (ARG)
                 ___fldiv (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
           _sqrt (ARG)
             ___fldiv (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fldiv (ARG)
         ___xxtofl
           ___fltol (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
         _eval_poly
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                       ___fldiv (ARG)
               _sqrt (ARG)
                 ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
             _fround (ARG)
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___fldiv (ARG)
                 ___lwdiv (ARG)
                   ___lwmod (ARG)
                 ___lwmod (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___awdiv (ARG)
                           ___awmod (ARG)
                         ___awmod (ARG)
                         ___fldiv (ARG)
                 _sqrt (ARG)
                   ___fldiv (ARG)
               ___lwdiv
                 ___lwmod (ARG)
               ___lwmod
             _sqrt (ARG)
               ___fldiv (ARG)
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___fldiv (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fldiv (ARG)
         _frexp
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___fldiv (ARG)
     _sqrt
       ___fldiv (ARG)
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteChar
   _SysInit
     _OscInit
     _PIN_MANAGER_Initialize
   _Timer0_Init
   _Timer1_Init
   _Timer2_Init

 _INTERRUPT_InterruptManager (ROOT)
   _CCP1_ISR
     _Timer1_Reset
   _Timer0_ISR
     _StartDepthDetection
       _CCP1_Activate
   _Timer2_ISR
   _Timer3_ISR
     _StartDepthDetection
       _CCP1_Activate

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FA       7       97.7%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7C      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5D       1       98.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F5      20        0.0%
DATA                 0      0     1F5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Apr 27 10:02:37 2021

                       ___fldiv@aexp 001A                         ___fldiv@bexp 0019  
                 __size_of_CCP1_Init 0012                         ___fldiv@sign 0012  
                 __size_of_CCP2_Init 0012                                   l74 45B0  
                                 l77 45BA                         ___awdiv@sign 000D  
                ___wmul@multiplicand 0004                                  l138 4546  
                                l500 4558                                  l408 44CE  
                                l193 4522                                  l453 456A  
                                l373 2178                                  l358 3A04  
                                l552 4032                                  l376 3600  
                                l561 408C                                  l554 4034  
                                l570 42D4                                  l563 40A8  
                                l387 3AFA                                  l580 4198  
                                l573 431E                                  l725 0A7A  
                                l549 437E                                  l574 4326  
                                l566 42D0                                  l822 3E70  
                                l654 4534                                  l568 42D2  
                                l680 2A22                                  l588 42CC  
                                l829 3E80                                  l687 1AB4  
                                l759 08C8                                  l792 0DBA  
                                l795 44AA                                  _PR2 000FCB  
                                _exp 2496                                  _log 2E38  
                                _pow 2A24                         ___awmod@sign 0007  
                                wreg 000FE8                    ??_LCD_WriteString 0007  
                       ___flmul@aexp 0061                         ___flmul@bexp 0066  
                       ___flmul@sign 0060                         ___flmul@temp 006B  
                       ___flmul@prod 0067                         ___fltol@exp1 0024  
                               l1101 3706                                 l1026 3C82  
                               l1039 3D32                                 l1160 3072  
                               l1073 38C8                                 l1049 3278  
                               l1161 30A4                                 l1401 1CAE  
                               l1074 390E                                 l1058 3268  
                               l1410 1CF4                                 l1067 3DDC  
                               l1315 420C                                 l1244 3FAC  
                               l1308 4204                                 l1412 1D6C  
                               l1404 1C72                                 l1237 3F9C  
                               l1325 4270                                 l1413 1D5A  
                               l1078 4452                                 l1158 312C  
                               l1318 4268                                 l1167 311C  
                               l1431 1344                                 l1440 15B2  
                               l1345 0FAC                                 l1441 15A0  
                               l1362 10C6                                 l1354 127C  
                               l1346 0F9A                                 l1506 2DCE  
                               l1530 2C72                                 l1371 1196  
                               l1347 0F60                                 l1435 16A8  
                               l1515 4484                                 l1372 1184  
                               l1460 2494                                 l1525 2A98  
                               l1438 153A                                 l1526 2C82  
                               l1448 166A                                 l4200 1B48  
                               l1544 277C                                 l4210 1B82  
                               l4202 1B58                                 l1554 37FA  
                               l1570 3BBE                                 l1562 33BC  
                               l1387 441A                                 l1555 380A  
                               l1492 2CDA                                 l4300 1E42  
                               l4212 1B98                                 l4204 1B68  
                               l1564 33AC                                 l1548 276C  
                               l4302 1E44                                 l4230 1BEC  
                               l4214 1BA8                                 l4222 1BC8  
                               l4206 1B6A                                 l1574 34F4  
                               l1495 2E36                                 l1399 1E4E  
                               l6000 384A                                 l4240 1C3E  
                               l4232 1C06                                 l4224 1BD8  
                               l4216 1BB0                                 l4208 1B72  
                               l1592 2FD6                                 l6010 38B6  
                               l6002 3878                                 l4250 1C9A  
                               l4242 1C4E                                 l4234 1C16  
                               l4226 1BD8                                 l4218 1BB4  
                               l1499 2D72                                 l6012 3906  
                               l6004 3888                                 l6020 3618  
                               l6100 2E16                                 l4260 1CDA  
                               l4252 1C9C                                 l4244 1C62  
                               l4236 1C26                                 l4180 1AE2  
                               l4172 1AB6                                 l6014 390C  
                               l6006 3896                                 l6030 3668  
                               l6102 2E24                                 l4270 1D16  
                               l4262 1CE4                                 l4254 1CAC  
                               l4246 1C70                                 l4238 1C36  
                               l4190 1B1C                                 l4182 1AF2  
                               l4174 1AC2                                 l6110 3B2E  
                               l6008 38A8                                 l6040 3692  
                               l6032 366C                                 l6024 362C  
                               l6104 2E26                                 l6200 3CFE  
                               l4280 1D88                                 l4272 1D24  
                               l4264 1CF2                                 l4256 1CBE  
                               l4248 1C7C                                 l4192 1B22  
                               l4184 1B02                                 l4176 1AD0  
                               l6120 3BA4                                 l6112 3B3E  
                               l7000 2A2A                                 l6130 43E6  
                               l6050 36BA                                 l6042 369C  
                               l6034 367A                                 l6026 3656  
                               l6018 3602                                 l6210 3D2A  
                               l6202 3D06                                 l4290 1DF4  
                               l4282 1D96                                 l4274 1D52  
                               l4258 1CD4                                 l4266 1D04  
                               l4194 1B28                                 l4186 1B04  
                               l4178 1AD2                                 l6122 3BAC  
                               l7010 2AE0                                 l7002 2A5C  
                               l5410 45A8                                 l6052 36C6  
                               l6044 36A6                                 l6028 3658  
                               l6140 3BDA                                 l6204 3D0C  
                               l4292 1E0E                                 l4284 1DC0  
                               l4268 1D12                                 l4196 1B36  
                               l4188 1B0C                                 l7100 20FE  
                               l6124 3BAE                                 l6116 3B52  
                               l6108 3AFC                                 l7004 2A8E  
                               l5412 4536                                 l5420 451E  
                               l6214 441C                                 l6054 36D6  
                               l6070 2D00                                 l6062 2C86  
                               l6230 41C4                                 l6222 419A  
                               l6150 3C00                                 l6142 3BDE  
                               l6134 3BC0                                 l6206 3D12  
                               l4294 1E2A                                 l4278 1D7C  
                               l4286 1DC4                                 l4198 1B38  
                               l7110 2144                                 l7102 2100  
                               l6118 3B94                                 l6310 3492  
                               l7030 2C14                                 l7022 2B90  
                               l7014 2AF6                                 l5414 453E  
                               l5422 4520                                 l6216 4432  
                               l6128 43D4                                 l6056 36E6  
                               l6080 2D5A                                 l6064 2C96  
                               l6240 41F8                                 l6232 41D2  
                               l6224 41A2                                 l6160 3C36  
                               l6152 3C12                                 l6144 3BEC  
                               l6136 3BC4                                 l6208 3D22  
                               l7120 3A34                                 l4296 1E2E  
                               l4288 1DDE                                 l7112 2176  
                               l7104 210A                                 l6320 34BA  
                               l6304 3466                                 l7032 2C38  
                               l7024 2B98                                 l7016 2B06  
                               l7008 2AAE                                 l7040 4338  
                               l5416 4540                                 l7200 39D0  
                               l6330 4060                                 l6218 4442  
                               l6058 36F6                                 l6090 2DBE  
                               l6082 2D5C                                 l6074 2D14  
                               l6066 2CA4                                 l6242 41FE  
                               l6234 41D8                                 l6226 41B4  
                               l6250 4230                                 l6410 446A  
                               l6162 3C4C                                 l6154 3C1A  
                               l6170 3C62                                 l6146 3BF4  
                               l6138 3BD2                                 l6402 1A8C  
                               l7130 3A72                                 l7122 3A46  
                               l7114 3A0C                                 l4298 1E3C  
                               l7106 212E                                 l6322 34E4  
                               l6306 347C                                 l7034 2C4A  
                               l7018 2B72                                 l7026 2BBC  
                               l7050 4354                                 l7042 4338  
                               l5418 4512                                 l7202 39EC  
                               l5460 455A                                 l6340 4092  
                               l6332 407C                                 l5700 0E84  
                               l6092 2DDC                                 l6084 2D68  
                               l6076 2D1C                                 l6068 2CEA  
                               l6500 31B4                                 l6420 2FFC  
                               l6236 41EE                                 l6228 41BC  
                               l6252 423E                                 l6244 420E  
                               l6412 447A                                 l6172 3C72  
                               l6164 3C54                                 l6156 3C22  
                               l6148 3BF8                                 l6180 3C88  
                               l7140 3ABE                                 l7124 3A4A  
                               l7132 3A7A                                 l7116 3A12  
                               l4900 2268                                 l7108 213A  
                               l6260 327A                                 l6316 34A6  
                               l6308 3484                                 l7028 2BE0  
                               l7060 352C                                 l7052 4362  
                               l7044 4346                                 l7204 39FA  
                               l5462 4566                                 l6334 407E  
                               l6326 4036                                 l6342 42D6  
                               l5710 0EBE                                 l5702 0E86  
                               l6094 2DDE                                 l6086 2DA4  
                               l6078 2D28                                 l6510 31F8  
                               l6502 31BE                                 l6430 3038  
                               l6238 41F6                                 l6254 4254  
                               l6246 4220                                 l6350 2782  
                               l6414 447E                                 l6406 4456  
                               l6174 3C7A                                 l6166 3C56  
                               l6158 3C30                                 l6190 3CB8  
                               l6182 3C96                                 l7142 3ADE  
                               l7134 3A96                                 l7126 3A5C  
                               l7118 3A2C                                 l4910 22BA  
                               l7070 1E50                                 l6270 32C8  
                               l6262 3296                                 l7062 3560  
                               l7054 4370                                 l7046 4346  
                               l7038 4328                                 l7206 39FE  
                               l7150 3910                                 l5464 4568  
                               l6336 4080                                 l6328 403A  
                               l6344 42DA                                 l5800 10DC  
                               l5720 0ED2                                 l5712 0EC2  
                               l5704 0E8E                                 l6096 2DE2  
                               l6088 2DB0                                 l6520 3224  
                               l6512 31FE                                 l6504 31DC  
                               l6440 3068                                 l6432 303A  
                               l6424 3010                                 l6256 425C  
                               l6248 4228                                 l6360 28FE  
                               l6352 2794                                 l6408 445A  
                               l6168 3C5C                                 l6192 3CCA  
                               l6184 3C9E                                 l7144 3AE2  
                               l7136 3AA0                                 l7128 3A60  
                               l4920 231A                                 l4912 22CA  
                               l7080 1F80                                 l7072 1E50  
                               l6280 3372                                 l6264 32A6  
                               l6600 2496                                 l7064 3572  
                               l7056 4370                                 l7048 4354  
                               l5456 4524                                 l7160 3940  
                               l7152 3914                                 l5466 4548  
                               l6338 408E                                 l6346 4300  
                               l5650 3D62                                 l5810 1118  
                               l5802 10EC                                 l5730 0EE6  
                               l5722 0ED6                                 l5714 0EC6  
                               l5706 0E9E                                 l6098 2E06  
                               l6530 324C                                 l6522 322E  
                               l6514 320C                                 l6506 31EC  
                               l6450 30AC                                 l6442 306E  
                               l6434 3048                                 l6418 2FD8  
                               l6258 4262                                 l6194 3CD2  
                               l6186 3CA2                                 l6178 3C84  
                               l6370 16BA                                 l7146 3AF4  
                               l7138 3AAC                                 l4922 233E  
                               l4930 2394                                 l4914 22DA  
                               l4906 227C                                 l7082 1FE0  
                               l7074 1E86                                 l6266 32B4  
                               l6274 32DC                                 l6290 33BE  
                               l6602 24C8                                 l7066 35A6  
                               l7058 34F6                                 l4834 44AC  
                               l5458 4528                                 l7170 395A  
                               l7162 394A                                 l7154 3918  
                               l6348 431C                                 l5660 3DDA  
                               l5652 3D72                                 l5820 1144  
                               l5812 111A                                 l5740 0EFA  
                               l5732 0EEA                                 l5724 0EDA  
                               l5716 0ECA                                 l5708 0EB0  
                               l6540 3DDE                                 l6532 3258  
                               l6524 3238                                 l6508 31EE  
                               l6460 30D8                                 l6452 30B2  
                               l6444 307C                                 l6436 3054  
                               l5900 1354                                 l6364 29D6  
                               l6196 3CDA                                 l6188 3CB0  
                               l6380 17F6                                 l6372 16D0  
                               l6700 0160                                 l7148 3AF8  
                               l4940 242E                                 l4932 23A4  
                               l4924 235E                                 l4916 22E4  
                               l4908 22AA                                 l4860 217A  
                               l7092 20C6                                 l7084 2014  
                               l7076 1E98                                 l6284 3708  
                               l6276 32F2                                 l6292 33F0  
                               l6620 2594                                 l6612 252E  
                               l7068 35B8                                 l4836 44CC  
                               l7180 396A                                 l7172 395E  
                               l7164 394E                                 l7156 3924  
                               ?_exp 0098                                 ?_log 0092  
                               l5654 3DA0                                 l5830 117C  
                               l5814 1128                                 l5806 1100  
                               l5822 1146                                 l5750 0F58  
                               l5734 0EEE                                 l5726 0EDE  
                               l5718 0ECE                                 l5742 0EFE  
                               l5670 0DDA                                 l6550 3E26  
                               l6542 3DEE                                 l6534 4486  
                               l6470 3100                                 l6462 30E2  
                               l6454 30C0                                 l6446 3096  
                               l6438 3064                                 l5910 138E  
                               l5902 1364                                 l6358 28EE  
                               l6198 3CE8                                 l6390 18CE  
                               l6710 01AA                                 l6702 0182  
                               l4950 2488                                 l4942 245C  
                               l4934 23CE                                 l4926 2388  
                               l4918 22EC                                 l4870 21B4  
                               l4862 2186                                 l7094 20D4  
                               l7086 2048                                 l7078 1F28  
                               l6286 3752                                 l6278 3306  
                               l6630 263C                                 l6622 25A4  
                               l6614 2560                                 l6606 24DE  
                               l4838 45B2                                 l7190 399A  
                               l7182 397C                                 l7174 3962  
                               l7166 3952                                 l7158 3932  
                               l5656 3DB0                                 l5648 3D34  
                               l5840 11FA                                 l5816 1130  
                               l5808 110A                                 l5824 1154  
                               l5760 0F8E                                 l5752 0F6E  
                               l5744 0F02                                 l5736 0EF2  
                               l5728 0EE2                                 l5672 0DEA  
                               l5680 0E14                                 l5664 0DBC  
                               l6560 3E6A                                 l6552 3E30  
                               l6544 3E04                                 l6536 44A2  
                               l6480 3158                                 l6472 310C  
                               l6464 30EC                                 l6448 30A2  
                               l5920 13E0                                 l5912 13A4  
                               l6384 188E                                 l6368 16AC  
                               l6800 0592                                 l6720 01FE  
                               l6712 01C8                                 l6704 018C  
                               l4952 248E                                 l4944 2474  
                               l4936 23E6                                 l4928 2392  
                               l4880 21EA                                 l4872 21C6  
                               l4864 2194                                 l7096 20E6  
                               l7088 20AA                                 l6288 37E6  
                               l6296 3406                                 l6632 2688  
                               l6624 25C8                                 l6608 2510  
                               l7192 39A0                                 l7184 3980  
                               l7176 3966                                 l7168 3956  
                               l6650 415A                                 l5658 3DD4  
                               l5850 1240                                 l5834 11A6  
                               l5842 11FC                                 l5826 1158  
                               l5818 1134                                 l5770 0FDE  
                               l5762 0F98                                 l5754 0F7A  
                               l5746 0F2C                                 l5738 0EF6  
                               l5690 0E44                                 l5682 0E24  
                               l5674 0DFA                                 l5666 0DCA  
                               l6554 3E4E                                 l6546 3E0C  
                               l6570 3F5E                                 l6562 3F26  
                               l6490 3184                                 l6474 312E  
                               l5930 1426                                 l5922 13EE  
                               l5914 13B0                                 l5906 1378  
                               l6378 17E2                                 l6802 05C4  
                               l6730 0244                                 l6722 020A  
                               l6714 01D0                                 l6706 0192  
                               l4946 2478                                 l4938 2420  
                               l4890 2230                                 l4882 21FC  
                               l4874 21C8                                 l4866 2196  
                               l7098 20EC                                 l6298 344A  
                               l6642 2734                                 l6634 26DA  
                               l6626 25FC                                 l6618 257E  
                               l7194 39B0                                 l7186 3986  
                               l7178 3968                                 l6660 42A8  
                               l6652 415C                                 l5860 126A  
                               l5852 124E                                 l5844 120C  
                               l5836 11B2                                 l5828 1166  
                               l5780 101A                                 l5772 0FEE  
                               l5764 0FBA                                 l5756 0F7E  
                               l5748 0F48                                 l5692 0E52  
                               l5684 0E2A                                 l5676 0E0A  
                               l5668 0DD8                                 l6556 3E5E  
                               l6548 3E18                                 l6572 3F7C  
                               l6564 3F3C                                 l6492 3196  
                               l6476 3144                                 l5940 1494  
                               l5932 1440                                 l5924 13FA  
                               l5916 13C8                                 l5908 1384  
                               l6396 19E0                                 l6388 18BA  
                               l6900 0A4E                                 l6820 06B8  
                               l6812 0626                                 l6804 05D2  
                               l6732 0248                                 l6724 020E  
                               l6716 01E6                                 l6708 0198  
                               l4948 2486                                 l4892 2238  
                               l4876 21DA                                 l4868 219C  
                               l6636 26EC                                 l6628 2620  
                               l6580 2E48                                 l7196 39BE  
                               l7188 3996                                 l6662 42B8  
                               l6654 4274                                 l6646 4122  
                               l5862 126C                                 l5854 1254  
                               l5846 121C                                 l5838 11C0  
                               l5790 1060                                 l5782 1028  
                               l5774 0FFC                                 l5766 0FCA  
                               l5758 0F8C                                 l5694 0E54  
                               l5686 0E3C                                 l5678 0E0C  
                               l6558 3E60                                 l6574 3F8C  
                               l6566 3F44                                 l6494 31A6  
                               l6486 3172                                 l5950 152A  
                               l5942 14BE                                 l5934 1450  
                               l5926 140A                                 l5918 13D4  
                               l5870 129A                                 l6398 19F4  
                               l6910 0AA2                                 l6902 0A5A  
                               l6806 05DC                                 l6814 063C  
                               l6750 02EA                                 l6734 0266  
                               l6726 022C                                 l6718 01F2  
                               l6742 0280                                 l6670 0032  
                               l4894 2242                                 l4886 2210  
                               l6638 271E                                 l6590 2EB4  
                               l7198 39C0                                 l6656 4284  
                               l6664 42BC                                 l6648 412A  
                               l5856 1256                                 l5848 123C  
                               l5792 1094                                 l5784 102A  
                               l5776 100A                                 l5696 0E64  
                               l5688 0E3E                                 l6576 3F96  
                               l6568 3F50                                 l6496 31AA  
                               l6488 3174                                 l5960 156A  
                               l5952 1538                                 l5944 14F4  
                               l5936 146C                                 l5928 1416  
                               l5880 12D2                                 l5872 129C  
                               l6920 0AEC                                 l6912 0AAA  
                               l6904 0A5E                                 l6840 076A  
                               l6832 070E                                 l6824 06CE  
                               l6816 06AA                                 l6808 05F2  
                               l6760 0342                                 l6752 0302  
                               l6736 026E                                 l6728 0240  
                               l6744 02C2                                 l6680 007E  
                               l6672 003E                                 l4888 2220  
                               l6592 2F2A                                 l6584 2E64  
                               l6658 4294                                 l5858 125C  
                               l5794 1096                                 l5786 1034  
                               l5778 1016                                 l5698 0E74  
                               l6498 31B0                                 l5970 15DC  
                               l5962 1598                                 l5954 154A  
                               l5946 1502                                 l5938 1478  
                               l5890 12FE                                 l5882 12E2  
                               l5874 12AC                                 l5866 127E  
                               l6930 0B24                                 l6914 0AB8  
                               l6922 0AF4                                 l6906 0A64  
                               l6850 07B6                                 l6842 0776  
                               l6834 073C                                 l6818 06B4  
                               l6770 03AE                                 l6762 034A  
                               l6754 030A                                 l6746 02D4  
                               l6738 027A                                 l6690 0102  
                               l6682 009A                                 l6674 0046  
                               l6666 0012                                 l4898 2256  
                               l6594 2F30                                 l6586 2E96  
                               l6578 2E38                                 l5796 10A6  
                               l5788 103A                                 l5980 1652  
                               l5972 1606                                 l5956 1558  
                               l5948 1520                                 l5892 130E  
                               l5884 12E8                                 l5876 12BC  
                               l5868 128C                                 l6924 0B06  
                               l6916 0ABC                                 l6908 0A88  
                               l6852 07C2                                 l6836 0742  
                               l6828 0708                                 l6780 042C  
                               l6772 03CA                                 l6764 037C  
                               l6756 0318                                 l6748 02E2  
                               l6692 010A                                 l6684 00C4  
                               l6676 0056                                 l6668 0020  
                               l6596 2F66                                 l5798 10B6  
                               l5982 166E                                 l5990 1694  
                               l5966 15C2                                 l5974 160A  
                               l5958 155C                                 l5894 131E  
                               l5886 12EE                                 l5878 12CC  
                               l6950 0BD0                                 l6942 0B7A  
                               l6934 0B3A                                 l6926 0B1C  
                               l6918 0AD0                                 l6870 088A  
                               l6854 07CA                                 l6862 085E  
                               l6838 0760                                 l6846 077E  
                               l6790 04C0                                 l6782 045E  
                               l6774 03DA                                 l6766 038C  
                               l6758 033C                                 l6694 0116  
                               l6686 00C8                                 l6678 0074  
                               l5992 1698                                 l5984 167E  
                               l5976 1624                                 l5968 15CE  
                               l5896 132E                                 l5888 12FC  
                               l6960 0C32                                 l6952 0BE2  
                               l6944 0B9E                                 l6928 0B20  
                               l6880 08E4                                 l6872 08A4  
                               l6864 0874                                 l6856 0816  
                               l6848 0798                                 l6792 04FA  
                               l6784 046A                                 l6776 03E0  
                               l6768 0392                                 l6696 0132  
                               l6688 00E6                                 l5986 168C  
                               l5978 1638                                 l5898 1334  
                               l6970 0C7E                                 l6962 0C3E  
                               l6954 0C00                                 l6946 0BA6  
                               l6938 0B74                                 l6890 09A2  
                               l6882 08F0                                 l6874 08C0  
                               l6866 0880                                 l6858 084A  
                               l6794 0518                                 l6786 049C  
                               l6778 03F8                                 l6698 015C  
                               l5996 380C                                 l5988 168E  
                               l6980 0CD6                                 l6972 0C90  
                               l6964 0C46                                 l6956 0C06  
                               l6948 0BCA                                 l6892 09D6  
                               l6884 08F4                                 l6876 08CC  
                               l6868 0884                                 l6796 054A  
                               l6788 04A2                                 l5998 383A  
                               l6982 0CE2                                 l6990 0D72  
                               l6974 0C9C                                 l6966 0C6A  
                               l6958 0C14                                 l6894 09E6  
                               l6886 090A                                 l6878 08D4  
                               l6798 0574                                 l6984 0CEA  
                               l6976 0CA0                                 l6968 0C76  
                               l6896 09EA                                 l6888 0956  
                               l6992 0D8C                                 l6986 0D62  
                               l6978 0CB8                                 l6898 0A36  
                               l6994 0DAE                                 ?_pow 00A3  
                               l6998 2A24                                 STR_1 5FEE  
                               STR_2 5FC5                                 STR_3 5FDC  
                               STR_4 5FFA                                 _LATA 000F89  
                               _LATB 000F8A                                 _LATC 000F8B  
                               u4000 1D12                                 u4001 1D0E  
                               u4010 1D24                                 u4011 1D20  
                               u4020 1D52                                 u4021 1D4E  
                               u4030 1D68                                 u4031 1D64  
                               u4040 1D7C                                 u5000 2268  
                               u4041 1D78                                 u5001 2264  
                               u4050 1D96                                 u5010 22DA  
                               u4051 1D92                                 u5011 22D6  
                               u4060 1DDE                                 u5020 231A  
                               u4061 1DDA                                 u5021 2316  
                               u4070 1E0E                                 u5030 23A4  
                               u4071 1E0A                                 u5031 23A0  
                               u6000 3D62                                 u4080 1E3C  
                               u5040 242E                                 u6001 3D5E  
                               u4081 1E38                                 u5041 242A  
                               u6010 3DA0                                 u5050 2486  
                               u6011 3D9C                                 u5051 2482  
                               u6020 3DD4                                 u6100 0EB0  
                               u6021 3DD0                                 u6101 0EAC  
                               u6110 0EBE                                 u6030 0DD8  
                               u6111 0EBA                                 u6031 0DD4  
                               u6200 0FFC                                 u6120 0F2C  
                               u6040 0DEA                                 u7000 41EE  
                               u6201 0FF8                                 u6121 0F28  
                               u6041 0DE6                                 u7001 41EA  
                               u6210 100A                                 u6130 0F44  
                               u6050 0DFA                                 u7010 4220  
                               u6211 1006                                 u6131 0F3E  
                               u6051 0DF6                                 u7011 421C  
                               u6300 1154                                 u6220 1028  
                               u6140 0F46                                 u6060 0E3C  
                               u7020 423E                                 u3900 1B48  
                               u7100 3430                                 u6301 1150  
                               u6221 1024                                 u6061 0E38  
                               u7021 423A                                 u3901 1B44  
                               u7101 3428                                 u6310 1166  
                               u6230 1060                                 u6150 0F6E  
                               u6070 0E52                                 u7030 4254  
                               u3910 1B58                                 u7110 344A  
                               u6311 1162                                 u6231 105C  
                               u6151 0F6A                                 u6071 0E4E  
                               u7031 4250                                 u3911 1B54  
                               u7111 3446                                 u7200 40A8  
                               u6400 124E                                 u6320 117C  
                               u6240 10A6                                 u6160 0F8C  
                               u6080 0E64                                 u8000 0798  
                               u3920 1B98                                 u7040 32A6  
                               u7120 347C                                 u7201 40A4  
                               u6401 124A                                 u6321 1178  
                               u6241 10A2                                 u6161 0F88  
                               u6081 0E60                                 u8001 0794  
                               u3921 1B94                                 u7041 32A2  
                               u7121 3478                                 u6410 126A  
                               u6330 1192                                 u6250 10DC  
                               u6170 0FAC                                 u6090 0E74  
                               u8010 07B6                                 u3930 1BD8  
                               u7050 32B4                                 u7130 3492  
                               u6411 1266                                 u6331 118E  
                               u6251 10D8                                 u6171 0FA8  
                               u6091 0E70                                 u8011 07B2  
                               u3931 1BD4                                 u7051 32B0  
                               u7131 348E                                 u7220 42FE  
                               u6340 11A6                                 u6260 10EC  
                               u6180 0FBA                                 u6500 14DE  
                               u6420 129A                                 u7300 16D0  
                               u8100 0B06                                 u8020 0870  
                               u3940 1C4E                                 u3860 1AD0  
                               u7060 32F2                                 u7108 3432  
                               u7221 42F8                                 u6341 11A2  
                               u6261 10E8                                 u6181 0FB6  
                               u6421 1296                                 u7301 16CC  
                               u8101 0B02                                 u8021 086C  
                               u3941 1C4A                                 u3861 1ACC  
                               u7061 32EE                                 u7150 405E  
                               u6350 11C0                                 u6270 1118  
                               u6190 0FCA                                 u6510 1538  
                               u6430 12AC                                 u7310 17F6  
                               u8110 0B1C                                 u8030 08A4  
                               u3950 1C70                                 u3870 1AE2  
                               u7070 3372                                 u7151 4058  
                               u7215 42E2                                 u6351 11BC  
                               u6271 1114                                 u6191 0FC6  
                               u6511 1534                                 u6431 12A8  
                               u7311 17F2                                 u8111 0B18  
                               u8031 08A0                                 u3951 1C6C  
                               u3871 1ADE                                 u7071 336E  
                               u6360 11FA                                 u6280 1128  
                               u7400 3096                                 u6600 168C  
                               u6520 1558                                 u6440 12BC  
                               u7320 18CE                                 u8200 0C6A  
                               u8120 0B36                                 u8040 08C0  
                               u3960 1C9A                                 u3880 1AF2  
                               u7080 37FA                                 u7145 4042  
                               u6361 11F6                                 u6281 1124  
                               u7401 3092                                 u6601 1688  
                               u6521 1554                                 u6505 14D4  
                               u6441 12B8                                 u7321 18CA  
                               u8201 0C66                                 u8121 0B32  
                               u8041 08BC                                 u3961 1C96  
                               u3881 1AEE                                 u7081 37F6  
                               u7250 431A                                 u6610 383A  
                               u6370 120C                                 u6290 1144  
                               u7410 30C0                                 u6530 156A  
                               u6450 12FC                                 u7330 19F4  
                               u8210 0C90                                 u8130 0B70  
                               u8050 08E4                                 u3970 1CBE  
                               u3890 1B36                                 u7090 33F0  
                               u7251 4314                                 u7235 4300  
                               u6611 3836                                 u6371 1208  
                               u6291 1140                                 u7411 30BC  
                               u6531 1566                                 u6451 12F8  
                               u7331 19F0                                 u8211 0C8C  
                               u8131 0B6C                                 u8051 08E0  
                               u3971 1CBA                                 u3891 1B32  
                               u7091 33EC                                 u7180 407A  
                               u6620 3878                                 u6380 121C  
                               u6700 36B6                                 u7500 3248  
                               u7420 30D4                                 u6540 1598  
                               u6460 130E                                 u7340 446A  
                               u8220 0CB8                                 u8140 0B9E  
                               u8060 0A4A                                 u3980 1CD4  
                               u8300 2B72                                 i2l53 3EA8  
                               u7181 4074                                 u7165 4060  
                               u7245 4308                                 u6621 3874  
                               u6381 1218                                 u6701 36B2  
                               u7501 3244                                 u7421 30D0  
                               u6541 1594                                 u6461 130A  
                               u7341 4466                                 u8221 0CB4  
                               u8141 0B9A                                 u8061 0A46  
                               u3981 1CD0                                 u8301 2B6E  
                               u6630 3896                                 u6390 123C  
                               u6710 36D6                                 u7510 3268  
                               u7430 30FC                                 u6550 15AE  
                               u6470 131E                                 u7270 2794  
                               u7350 447A                                 u8230 0CD6  
                               u8150 0BCA                                 u8070 0A76  
                               u3990 1CF2                                 u4950 2194  
                               u8310 2C4A                                 i2l63 3F22  
                               u7175 4068                                 u6631 3892  
                               u6391 1238                                 u6711 36D2  
                               u7511 3264                                 u7431 30F8  
                               u6551 15AA                                 u6471 131A  
                               u7271 2790                                 u7351 4476  
                               u8231 0CD2                                 u8151 0BC6  
                               u8071 0A72                                 u3991 1CEE  
                               u4951 2190                                 u8311 2C46  
                               i2l56 3EDA                                 u6640 38B6  
                               u6720 36E6                                 u7520 3E04  
                               u6800 2DDC                                 u7440 311C  
                               u6560 15C2                                 u6480 1354  
                               u7280 28FE                                 u8240 0D8C  
                               u8160 0BE2                                 u8080 0A88  
                               u8400 3ADE                                 u4960 21C6  
                               u8320 20D4                                 u7600 24C8  
                               i2l57 3F22                                 u7265 431C  
                               u6641 38B2                                 u6721 36E2  
                               u7521 3E00                                 u6801 2DD8  
                               u7441 3118                                 u7361 2FE8  
                               u6561 15BE                                 u6481 1350  
                               u7281 28FA                                 u8241 0D88  
                               u8161 0BDE                                 u8081 0A84  
                               u8401 3ADA                                 u4961 21C2  
                               u8321 20D0                                 u7601 24C4  
                               i2l58 3EFE                                 u6650 3906  
                               u7530 3E26                                 u6810 2E16  
                               u6730 2C96                                 u7450 3144  
                               u7370 2FFC                                 u6570 15DC  
                               u6490 1364                                 u7290 16BA  
                               u8250 0DAE                                 u8170 0C00  
                               u8090 0AB8                                 u8410 3AF4  
                               u4970 21DA                                 u8330 20E6  
                               u7610 2510                                 u7195 407C  
                               u6651 3902                                 u7531 3E22  
                               u6811 2E12                                 u6731 2C92  
                               u7451 3140                                 u7371 2FF8  
                               u6571 15D8                                 u6491 1360  
                               u7291 16B6                                 u8251 0DAA  
                               u8171 0BFC                                 u8091 0AB4  
                               u8411 3AF0                                 u4971 21D6  
                               u8331 20E2                                 u7611 250C  
                               u7700 4198                                 u6660 3618  
                               u7540 3E4E                                 u6820 2E24  
                               u6740 2CA4                                 u7460 316E  
                               u6580 1624                                 u6900 3C72  
                               u8180 0C14                                 u4980 21FC  
                               u8340 20FE                                 u7620 2560  
                               u8260 2A5C                                 u8420 3932  
                               u7701 4194                                 u6661 3614  
                               u7541 3E4A                                 u6821 2E20  
                               u6741 2CA0                                 u7461 316A  
                               u7381 3020                                 u6581 1620  
                               u6901 3C6E                                 u8181 0C10  
                               u4981 21F8                                 u8341 20FA  
                               u7621 255C                                 u8261 2A58  
                               u8421 392E                                 u7710 4284  
                               u6670 364C                                 u7550 3F3C  
                               u6750 2D00                                 u7470 31DC  
                               u7390 3034                                 u6590 1652  
                               u6910 3C96                                 u8190 0C32  
                               u8350 3A2C                                 u4990 2220  
                               u6830 3B2E                                 u7630 2590  
                               u8270 2A8E                                 u8430 397C  
                               u7711 4280                                 u7551 3F38  
                               u6751 2CFC                                 u7471 31D8  
                               u7391 3030                                 u6591 164E  
                               u6911 3C92                                 u8191 0C2E  
                               u8351 3A28                                 u4991 221C  
                               u6831 3B2A                                 u7631 258A  
                               u8271 2A8A                                 u8431 3978  
                               u7720 4294                                 u6680 367A  
                               u7560 3F5E                                 u6760 2D56  
                               u7480 320C                                 u6920 3CB0  
                               u7800 01E6                                 u8360 3A46  
                               u6840 3B82                                 u7640 2592  
                               u8280 2AE0                                 u8440 3996  
                               u7721 4290                                 u6681 3676  
                               u7561 3F5A                                 u6761 2D52  
                               u7481 3208                                 u6921 3CAC  
                               u7801 01E2                                 u8361 3A42  
                               u6841 3B7A                                 u8281 2ADC  
                               u8441 3992                                 u6690 368E  
                               u7570 3F7C                                 u6770 2DA0  
                               u7490 3220                                 u6850 3BD2  
                               u6930 3CCA                                 u7810 0228  
                               u7730 0032                                 u8370 3A5C  
                               u7650 25A4                                 u8290 2B06  
                               u8450 39B0                                 u8507 4320  
                               u6691 368A                                 u6675 3642  
                               u7571 3F78                                 u6771 2D9C  
                               u7491 321C                                 u6851 3BCE  
                               u6931 3CC6                                 u7811 0224  
                               u7731 002E                                 u8371 3A58  
                               u7651 25A0                                 u8291 2B02  
                               u8451 39AC                                 u6780 2DBE  
                               u6860 3BEC                                 u6940 3CE8  
                               u7900 04C0                                 u7820 0262  
                               u7740 0074                                 u8380 3A72  
                               u7660 26EC                                 u7580 2E48  
                               u8460 39BE                                 u6781 2DBA  
                               u6861 3BE8                                 u6941 3CE4  
                               u7901 04BC                                 u7821 025E  
                               u7741 0070                                 u8381 3A6E  
                               u7661 26E8                                 u7581 2E44  
                               u8461 39BA                                 u6790 2DCE  
                               u6870 3C12                                 u6950 3CFE  
                               u7910 0518                                 u7830 02D4  
                               u7750 00E6                                 u8390 3ABE  
                               u7670 271E                                 u7590 2E96  
                               u8470 39EC                                 u6791 2DCA  
                               u6871 3C0E                                 u6951 3CFA  
                               u7911 0514                                 u7831 02D0  
                               u7751 00E2                                 u8391 3ABA  
                               u7671 271A                                 u7591 2E92  
                               u8471 39E8                                 u7680 4156  
                               u6880 3C30                                 u6960 3D22  
                               u7920 054A                                 u7840 02E2  
                               u7760 0102                                 u6848 3B84  
                               u8480 39FA                                 u6881 3C2C  
                               u6961 3D1E                                 u7921 0546  
                               u7841 02DE                                 u7761 00FE  
                               u8481 39F6                                 u7690 4188  
                               u6970 4432                                 u6890 3C4C  
                               u7930 0574                                 u7850 0318  
                               u7770 017E                                 u6971 442E  
                               u6891 3C48                                 u7931 0570  
                               u7851 0314                                 u7771 017A  
                               u6980 41B4                                 u7940 0592  
                               u7860 037C                                 u7780 01AA  
                               u6981 41B0                                 u7941 058E  
                               u7861 0378                                 u7781 01A6  
                               u6990 41D2                                 u7950 05C4  
                               u7870 03DA                                 u7790 01C8  
                               u7687 414C                                 u6991 41CE  
                               u7951 05C0                                 u7871 03D6  
                               u7791 01C4                                 u7960 06CA  
                               u7880 045E                                 u7697 417E  
                               u7961 06C6                                 u7881 045A  
                               u8497 432E                                 u7970 0704  
                               u7890 049C                                 u7971 0700  
                               u7891 0498                                 u7980 073C  
                               u7981 0738                                 u7990 0760  
                               u7991 075C                                 _TMR2 000FCC  
                _StartDepthDetection 456C                                 _main 3910  
                   __end_of_CCP1_ISR 44F4                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 indf1 000FE7  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 btemp 005E  
                               _sqrt 217A                                 exp@x 0098  
                               log@x 0092                                 pow@x 00A3  
                               pow@y 00A7                                 prodh 000FF4  
                               prodl 000FF3                                 start 000E  
                    ___fldiv@new_exp 0013                         _sprintf$2373 0096  
                      ?_LCD_WriteCmd 0002                        _LCD_WriteChar 42CE  
                       ___param_bank 000000                      __end_of_OscInit 45BC  
                              ??_exp 005D                                ??_log 005B  
                              ??_pow 005D                     __end_of_LCD_GoTo 42CE  
                   __end_of_LCD_Init 4380                 ?_StartDepthDetection 0001  
                      ___fltol@sign1 0023                      __end_of___fladd 127E  
                              ?_main 0001                      __end_of___fldiv 1E50  
                    __end_of___awdiv 3C84                      __end_of___flneg 4454  
                    __end_of_SysInit 45B2                      __end_of___awmod 3D34  
                    __end_of___flmul 16AA                      __end_of___flsub 441C  
                    __end_of___fltol 3708                      __end_of___lldiv 3E82  
                              ?_sqrt 001B                                _T0CON 000FD5  
                    ___awdiv@divisor 000A                                _T1CON 000FCD  
                    __end_of___llmod 3FAE                                _T2CON 000FCA  
                              _T3CON 000FB1                                _LATC6 007C5E  
                              _LATC7 007C5F                      __end_of___lwdiv 420E  
                    __end_of___lwmod 4272                                i2l135 402E  
                              i2l250 43D2                                i2l190 457C  
                              i2l187 459A                                i2l456 44F2  
                              i2l459 458E                                i2l657 45A6  
                    ___awdiv@counter 000C                                _TMR0H 000FD7  
                              _TMR1H 000FCF                                _TMR0L 000FD6  
                              _TMR3H 000FB3                                _TMR1L 000FCE  
                              _TMR3L 000FB2                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                       LCD_GoTo@iPos 000C          ComputeWaterVol@iPercentFull 00D7  
             __size_of_CCP1_Activate 0012                                _giDay 00F9  
                    __end_of_dpowers 5F9F                                _floor 327A  
                              _ldexp 33BE                                _frexp 3AFC  
                              _errno 00E0                                _scale 16AA  
                    __end_of_isdigit 4486                 ComputeWaterVol@iGals 00CD  
                  __end_of_CCP1_Init 456C                    __end_of_CCP2_Init 455A  
                         _ComputeTOD 3A0C                                tablat 000FF5  
                              pow@yi 00B4                                ttemp5 005F  
                              sqrt@a 001B                                ttemp6 0062  
                              ttemp7 0066                                sqrt@i 0024  
                              sqrt@p 0029                __end_of_Timer0_Reload 5FC5  
                              status 000FD8                                wtemp8 005F  
                    __end_of_sprintf 0DBC                          exp@exponent 00A0  
                     ??_LCD_WriteCmd 0004                       ?_LCD_WriteChar 0001  
                        ldexp@newexp 0096                      __initialization 40AA  
                        log@exponent 005B                         __end_of_main 3A0C  
                       __end_of_sqrt 2496                ??_StartDepthDetection 0001  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 00D8  
                             ??_sqrt 001F                        __activetblptr 000002  
               __size_of__tdiv_to_l_ 0156                 LCD_WriteString@iData 0005  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             ?_floor 0082                               ?_ldexp 0092  
                             ?_frexp 003F                     ___llmod@dividend 000F  
                             ?_scale 0053                               _CCPR1H 000FBF  
                             _CCPR2H 000FBC                               _CCPR1L 000FBE  
                             _CCPR2L 000FBB                     ___awdiv@dividend 0008  
                             i2l3442 4590                               i2l3444 4592  
                             i2l4510 458A                               i2l3446 4596  
                             i2l5400 44D8                               i2l4512 458C  
                             i2l3448 4598                               i2l5402 44E4  
                             i2l5404 44E6                               i2l4508 457E  
                             i2l5342 459C                               i2l5406 44E8  
                             i2l5350 3FB8                               i2l5344 459E  
                             i2l5408 44EC                               i2l5360 3FE4  
                             i2l5352 3FC6                               i2l5362 3FE8  
                             i2l5354 3FC8                               i2l5346 3FAE  
                             i2l5364 4002                               i2l5356 3FDE  
                             i2l5348 3FB6                               i2l5380 438E  
                             i2l5372 4380                               i2l5366 4020  
                             i2l5358 3FE0                               i2l5390 43B2  
                             i2l5382 4390                               i2l5374 4382  
                             i2l5550 3E92                               i2l4840 456C  
                             i2l5368 4026                               i2l5392 43C8  
                             i2l5384 4394                               i2l5376 4388  
                             i2l5560 3EE8                               i2l5552 3EA0  
                             i2l4850 457A                               i2l4842 4570  
                             i2l5394 43CC                               i2l5386 43A4  
                             i2l5378 438C                               i2l5562 3EF6  
                             i2l5554 3EB6                               i2l4844 4572  
                             i2l5396 43CE                               i2l5388 43A8  
                             i2l5564 3F0C                               i2l5556 3EC4  
                             i2l5548 3E84                               i2l5398 44D0  
                             i2l4846 4574                               i2l5566 3F1A  
                             i2l5558 3ED2                               i2l4848 4576  
                             _OSCCON 000FD3                     __end_of___xxtofl 2E38  
                      LCD_GoTo@iLine 000F               _InitTankVariables$2369 00B8  
                      ??_Timer0_Init 0002                    _InitTankVariables 34F6  
                      ??_Timer1_Init 0002                        ??_Timer2_Init 0002  
                          ??_OscInit 0002                           _Timer0_ISR 3FAE  
                         _Timer2_ISR 4590                           _Timer3_ISR 4380  
                   LCD_WriteCmd@iCmd 0008                     __end_of__powers_ 5F1B  
                      _CCP1_Activate 457E                   ?_InitTankVariables 0001  
                             ___flge 380C                               ___fleq 3D34  
                          ??___fladd 0057                               ___wmul 4486  
                          ??___fldiv 000A                            ??___awdiv 000C  
                          ??___flneg 0006                            ??_SysInit 0002  
                             _giMins 00F1                            ??___awmod 0006  
                             _giSecs 00F2                            ??___flmul 004F  
                          ??___flsub 005B                            ??___fltol 001F  
           __size_of_ComputeWaterVol 032A                               _giYear 00F8  
                          ??___lldiv 000A                               _sLine1 0178  
                             _sLine2 0114                            ??___llmod 0017  
                          ??___lwdiv 000B                            ??___lwmod 0006  
                             _fround 277E                               clear_0 4102  
                             clear_1 410E                     ___awdiv@quotient 000E  
                    ___awmod@divisor 0004                      ___awmod@counter 0006  
                ??_InitTankVariables 005D                               floor@i 0086  
                             floor@x 0082                            ?_CCP1_ISR 0001  
                       __pdataCOMRAM 005D                            ??_isdigit 0002  
                       __mediumconst 5EE6                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                  _giBacklight_Timer 00E6                            ??_sprintf 0092  
                        ?_ComputeTOD 0001                           ___flge@ff1 0002  
                         ___flge@ff2 0006                         ___xxtofl@arg 002F  
                   __end_ofexp@coeff 5F77                         ___xxtofl@exp 002E  
                       ___xxtofl@val 0025                           ___fleq@ff1 0033  
                         ___fleq@ff2 0037                     __end_oflog@coeff 5FC3  
                         __accesstop 0060              __end_of__initialization 4114  
                          ?_LCD_GoTo 0009                            ?_LCD_Init 0001  
                         ___flneg@f1 0002            __end_of_InitTankVariables 3602  
                    ??_LCD_WriteChar 0002                         eval_poly@res 008E  
                      ___rparam_used 000001                           ___fltol@f1 001B  
                 ComputeTOD@bIncDays 00B5                    _gd_TankGalsPer_mm 0108  
                     ?_CCP1_Activate 0001                        _giEchoCounter 00EA  
                     __pcstackCOMRAM 0001                         __pidataBANK0 45BC  
                       __pidataBANK1 44F4                      _LCD_WriteString 4122  
                      __end_of_floor 33BE                        __end_of_ldexp 34F6  
                      __end_of_frexp 3BC0                        __end_of_scale 1AB6  
                __end_of_Timer0_Init 4548                  __end_of_Timer1_Init 4536  
                __end_of_Timer2_Init 4524                           __div_to_l_ 312E  
                         ??_CCP1_ISR 0001                 __end_of_LCD_WriteCmd 40AA  
         ComputeWaterVol@d_mmPerTick 00C1                      __div_to_l_@exp1 000F  
                            ??_floor 005B                              ??_ldexp 005B  
                    __div_to_l_@cntr 000E                              ??_frexp 0045  
                            ??_scale 0057                      __div_to_l_@quot 000A  
                       sprintf@width 00AC                           __pbssBANK0 00DC  
                         __pbssBANK1 0100                   __size_of_eval_poly 0104  
                         ??_LCD_GoTo 000A                           ??_LCD_Init 0009  
                      __div_to_l_@f1 0002                        __div_to_l_@f2 0006  
                      ?_Timer1_Reset 0001                          ?_Timer0_ISR 0001  
                        ?_Timer2_ISR 0001                          ?_Timer3_ISR 0001  
                            ?___flge 0002                              ?___fleq 0033  
                            ?___wmul 0002                              _CCP1CON 000FBD  
                            _CCP2CON 000FBA                           _gsCurrDate 01F1  
                            ?_fround 0053                           _gsCurrTime 01E8  
                __size_of_ComputeTOD 00F0                    ??_ComputeWaterVol 00B5  
                          ?___xxtofl 0025                              _OSCTUNE 000F9B  
                      _gb_UpdateTime 00F4           __size_of_InitTankVariables 010C  
                    _Timer3_Sampling 00ED                            _CCP1_Init 455A  
                          _CCP2_Init 4548                      ??_CCP1_Activate 0001  
                     ??_Timer1_Reset 0001              __end_of_LCD_WriteString 419A  
                            _OscInit 45B2                    __end_of__npowers_ 5F4F  
                            __Hparam 0000                          _Timer0_Init 4536  
                         _scale$2372 0057                          _Timer1_Init 4524  
                        _Timer2_Init 4512                          _Timer3_Cntr 00E2  
                            __Lparam 0000                        LCD_WriteCmd@i 0006  
                    __size_of___flge 0104                      __size_of___fleq 00AA  
                            ___fladd 0DBC                              ___fldiv 1AB6  
                            ___awdiv 3BC0                              ___flneg 441C  
                            _SysInit 45A8                              ___awmod 3C84  
                            ___flmul 127E                              ___flsub 43D4  
                            ___fltol 3602                              ___lldiv 3DDE  
                    __size_of___wmul 0026                              ___llmod 3F26  
                            ___lwdiv 419A                              ___lwmod 420E  
                            _gd_Temp 0110                              _giHours 00F0  
                            _giMonth 005D                              __pcinit 40AA  
                            _imSCntr 00E4                    __end_of_eval_poly 380C  
                    __size_of_fround 02A6                              __ramtop 0800  
                            __ptext0 3910                              __ptext1 4512  
                            __ptext2 4524                              __ptext3 4536  
                            __ptext4 45A8                              __ptext5 44AC  
                            __ptext6 45B2                              __ptext7 4328  
                            __ptext8 34F6                              __ptext9 2A24  
                          _T1CONbits 000FCD                          ?__div_to_l_ 0002  
                            _dpowers 5F77                            _T2CONbits 000FCA  
                       __size_of_exp 02E8                         __size_of_log 01A0  
                            _isdigit 4454                         __size_of_pow 0260  
                         ??___xxtofl 0029                            _T3CONbits 000FB1  
                   ___awmod@dividend 0002             ??_PIN_MANAGER_Initialize 0002  
                __size_of_Timer0_ISR 0082                  __size_of_Timer2_ISR 000C  
                __size_of_Timer3_ISR 0054                              _sprintf 0012  
                     __pintcode_body 3E82                 end_of_initialization 4114  
                            exp@sign 00A2                        __Lmediumconst 5EE6  
                            int_func 3E82                           ?_CCP1_Init 0001  
                         ?_CCP2_Init 0001                      ___lldiv@divisor 0006  
        __end_of_StartDepthDetection 457E                              pow@sign 00B3  
                    ___lldiv@counter 000E                              postdec1 000FE5  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc2 000FDE                              sqrt@grs 002A  
                            sqrt@exp 002E                       __tdiv_to_l_@f1 0002  
                     __tdiv_to_l_@f2 0006                        ??__tdiv_to_l_ 000A  
              __size_of_LCD_WriteCmd 007A                            _PORTAbits 000F80  
                          _PORTBbits 000F81                            _PORTCbits 000F82  
                        ___fladd@grs 0081                        ___xxtofl@sign 002D  
                          _TRISBbits 000F93                    __size_of_CCP1_ISR 0024  
                        ___fldiv@grs 0015                          ___fldiv@rem 000E  
                   LCD_GoTo@iCharPos 0009                         ??_ComputeTOD 005C  
     ComputeWaterVol@dWaterHeight_mm 00D3                          ___flmul@grs 0062  
                  LCD_WriteString@ix 0009                          _CCP2CONbits 000FBA  
                  __size_of_LCD_GoTo 005C                     ?_LCD_WriteString 0005  
                  __size_of_LCD_Init 0058                  __size_of__div_to_l_ 014C  
                       _LCD_WriteCmd 4030                       __end_of___flge 3910  
                     __end_of___fleq 3DDE                       _gd_Default_SOS 0100  
                     __end_of___wmul 44AC                        __pidataCOMRAM 45C5  
                      _giMonthEndTbl 01DC                   __end_of_ComputeTOD 3AFC  
                ComputeWaterVol@dSOS 00C9                       __end_of_fround 2A24  
                         floor@expon 008A                 __end_of_Timer1_Reset 45A8  
      ComputeWaterVol@dEmptySpace_mm 00CF                  start_initialization 40AA  
                        _iSampleCntr 00EE                           eval_poly@d 0086  
                         eval_poly@n 0088                           eval_poly@x 0082  
                         ldexp@value 0092      __size_of_PIN_MANAGER_Initialize 0024  
                __end_of__tdiv_to_l_ 312E                          __end_of_exp 277E  
                        __end_of_log 2FD8                          __end_of_pow 2C84  
                         frexp@value 003F                      ___llmod@divisor 0013  
                        ??_CCP1_Init 0002                          ??_CCP2_Init 0002  
                      _Timer0_Reload 5FC3                      ___llmod@counter 0017  
              __end_of_LCD_WriteChar 4328                         ??_Timer0_ISR 0001  
                       ??_Timer2_ISR 0001                        _Timer3_Reload 00F5  
                       ??_Timer3_ISR 0001                      _ComputeWaterVol 1E50  
                           ??___flge 000A                             ??___fleq 003B  
                           ??___wmul 0006                          __pdataBANK0 00F5  
                        __pdataBANK1 01DC                             ??_fround 0057  
                      sprintf@tmpval 00A2                            ___fladd@a 007A  
                          ___fladd@b 0076                           fround@prec 0075  
                          ___fldiv@a 0006                            ___fldiv@b 0002  
                          ___flmul@a 004B                            ___flmul@b 0047  
                          ___flsub@a 0086                            ___flsub@b 0082  
                      __pcstackBANK0 0060                    __size_of___xxtofl 01B4  
                 __end_of_Timer0_ISR 4030                         _isdigit$2071 0003  
                 __end_of_Timer2_ISR 459C                   __end_of_Timer3_ISR 43D4  
                        sprintf@flag 00A0                          sprintf@eexp 00AA  
                        sprintf@fval 00AE                          sprintf@prec 00B2  
                           ?_OscInit 0001                         ?_Timer0_Init 0001  
                       ?_Timer1_Init 0001                            _main$1042 00DA  
                       ?_Timer2_Init 0001                     ___lwdiv@dividend 0007  
             _PIN_MANAGER_Initialize 44AC                          _giTotalSecs 00E8  
                          __pintcode 0008                        __pmediumconst 5EE6  
                           ?___fladd 0076                             ?___fldiv 0002  
                           ?___awdiv 0008                             ?___flneg 0002  
                           ?_SysInit 0001                             ?___awmod 0002  
                           ?___flmul 0047                             ?___flsub 0082  
                           ?___fltol 001B                             ?___lldiv 0002  
                           ?___llmod 000F                            __npowers_ 5F1B  
                           ?___lwdiv 0007                             ?___lwmod 0002  
       ??_INTERRUPT_InterruptManager 0002                          __tdiv_to_l_ 2FD8  
                       ??__div_to_l_ 000A                             _CCP1_ISR 44D0  
                           ?_isdigit 0001                            _eval_poly 3708  
                   ___lwdiv@quotient 000C                             ?_sprintf 008A  
                     __size_of_floor 0144                       __size_of_ldexp 0138  
                     __size_of_frexp 00C4                       __size_of_scale 040C  
                           _LCD_GoTo 4272                             _LCD_Init 4328  
            __end_of_ComputeWaterVol 217A                       ___wmul@product 0006  
                           _LATAbits 000F89                             _PIE1bits 000F9D  
                           _PIE2bits 000FA0                __end_of_CCP1_Activate 4590  
__size_of_INTERRUPT_InterruptManager 3F1E                   _gd_SensorHeight_mm 010C  
                           _PIR1bits 000F9E                   __end_of__div_to_l_ 327A  
                           _PIR2bits 000FA1                             i2u570_40 4014  
                           i2u570_41 400C                             i2u571_48 4016  
                           i2u572_40 43A4                             i2u572_41 43A0  
                           i2u573_40 43C8                             i2u573_41 43C4  
                           i2u590_40 3EF6                             i2u590_41 3EF2  
                           i2u567_40 3FC6                             i2u591_40 3F0C  
                           i2u567_41 3FC2                             i2u591_41 3F08  
                           i2u568_40 3FDE                             i2u592_40 3F1A  
                           i2u584_40 3E92                             i2u568_41 3FDA  
                           i2u592_41 3F16                             i2u584_41 3E8E  
                           i2u569_40 4002                             i2u585_40 3EA0  
                           i2u569_41 3FFE                             i2u585_41 3E9C  
                           i2u586_40 3EB6                             i2u586_41 3EB2  
                           i2u587_40 3EC4                             i2u587_41 3EC0  
                           i2u588_40 3ED2                             i2u588_41 3ECE  
                           i2u589_40 3EE8                             i2u589_41 3EE4  
           ComputeWaterVol@dCurrTemp 00BD                __size_of_Timer1_Reset 000C  
               _gd_MaxWaterHeight_mm 0104                          _gsTotalSecs 00FA  
                  ___wmul@multiplier 0002             ComputeWaterVol@dWaterVol 00C5  
                _gd_TankSurfArea_mm2 00DC                           ?_eval_poly 0082  
                        _INTCON2bits 000FF1                            copy_data0 40BE  
                          copy_data1 40DE                      _gb_EchoDetected 00F3  
                          frexp@eptr 0043                             _bIncDays 00EF  
                           __Hrparam 0000                         _Timer1_Reset 459C  
                 LCD_WriteCmd@iDelay 0002                     __size_of_OscInit 000A  
                           __Lrparam 0000                   LCD_WriteChar@iChar 0004  
                   __size_of___fladd 04C2                     __size_of___fldiv 039A  
                   __size_of___awdiv 00C4                     __size_of___flneg 0038  
                   __size_of_SysInit 000A                     __size_of___awmod 00B0  
                   __size_of___flmul 042C                     __size_of___flsub 0048  
                   __size_of___fltol 0106                     __size_of___lldiv 00A4  
                   __size_of___llmod 0088         __size_of_StartDepthDetection 0012  
                   __size_of___lwdiv 0074                     __size_of___lwmod 0064  
                        _fround$2370 0071                          _fround$2371 006D  
                           _exp$2376 009C                           sprintf@len 009E  
                         sprintf@val 00A6                             ___xxtofl 2C84  
                   __size_of_isdigit 0032                      ___lwdiv@divisor 0009  
                    ___lwdiv@counter 000B                             __ptext10 2E38  
                           __ptext11 2496                             __ptext20 0012  
                           __ptext12 33BE                             __ptext21 16AA  
                           __ptext13 327A                             __ptext30 312E  
                           __ptext22 3C84                             __ptext14 3AFC  
                           __ptext31 2C84                             __ptext23 3BC0  
                           __ptext15 3708                             __ptext40 3D34  
                           __ptext32 4486                             __ptext24 4454  
                           __ptext16 1E50                             __ptext41 4122  
                           __ptext33 3F26                             __ptext25 277E  
                           __ptext17 217A                             __ptext50 3FAE  
                           __ptext42 42CE                             __ptext34 3DDE  
                           __ptext26 420E                             __ptext18 1AB6  
                           __ptext51 456C                             __ptext43 4272  
                           __ptext35 3602                             __ptext27 419A  
                           __ptext19 3A0C                             __ptext52 457E  
                           __ptext44 4030                             __ptext36 43D4  
                           __ptext28 127E                             __ptext53 44D0  
                           __ptext45 4548                             __ptext37 0DBC  
                           __ptext29 2FD8                             __ptext54 459C  
                           __ptext46 455A                             __ptext38 441C  
                           __ptext39 380C                             __ptext48 4380  
                           __ptext49 4590                             __powers_ 5EE7  
                           _pow$2374 00AB                             _pow$2375 00AF  
                   __size_of_sprintf 0DAA                        __size_of_main 00FC  
                   ?_ComputeWaterVol 0001                        __size_of_sqrt 031C  
               __size_of_Timer0_Init 0012                 __size_of_Timer1_Init 0012  
               __size_of_Timer2_Init 0012                             int$flags 005E  
 __end_of_INTERRUPT_InterruptManager 3F26           _INTERRUPT_InterruptManager 0008  
           __size_of_LCD_WriteString 0078                             exp@coeff 5F4F  
                           log@coeff 5F9F                           _INTCONbits 000FF2  
                        ??_eval_poly 008A                             isdigit@c 0004  
                           scale@scl 005B                            sqrt@tfrac 0025  
                           intlevel2 0000                            sprintf@ap 009C  
                          sprintf@cp 009A                     __tdiv_to_l_@exp1 0012  
                   __tdiv_to_l_@cntr 0011                            sprintf@sp 008A  
                   __tdiv_to_l_@quot 000D                     ___lwmod@dividend 0002  
                   ___lldiv@dividend 0002              ?_PIN_MANAGER_Initialize 0001  
                     _gbBacklight_On 00EC                        _LCD_GoTo$1411 000D  
                _giBacklight_Timeout 00F7                         ?__tdiv_to_l_ 0002  
                           sqrt@frac 0034                             sqrt@sign 0023  
                           sqrt@root 0030                             sprintf@c 00B4  
                           sprintf@f 008C                     ___lldiv@quotient 000A  
                    ___lwmod@divisor 0004                      ___lwmod@counter 0006  
             __size_of_LCD_WriteChar 005A                        ___fladd@signs 007E  
     __end_of_PIN_MANAGER_Initialize 44D0                         ___fladd@aexp 007F  
                       ___fladd@bexp 0080  
