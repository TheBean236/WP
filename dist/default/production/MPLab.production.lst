

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu May 27 09:36:31 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    65                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 12/02/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F2455 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataCOMRAM
   115  003D63                     __pidataCOMRAM:
   116                           	callstack 0
   117                           
   118                           ;initializer for _giMonth
   119  003D63  04                 	db	4
   120                           
   121                           	psect	idataBANK0
   122  003D5C                     __pidataBANK0:
   123                           	callstack 0
   124                           
   125                           ;initializer for _Timer3_Reload
   126  003D5C  FB1D               	dw	64285
   127                           
   128                           ;initializer for _Timer0_Reload
   129  003D5E  D8ED               	dw	55533
   130                           
   131                           ;initializer for _giBacklight_Timeout
   132  003D60  02                 	db	2
   133                           
   134                           ;initializer for _giYear
   135  003D61  15                 	db	21
   136                           
   137                           ;initializer for _giDay
   138  003D62  01                 	db	1
   139                           
   140                           	psect	idataBANK1
   141  003C4A                     __pidataBANK1:
   142                           	callstack 0
   143                           
   144                           ;initializer for _giMonthEndTbl
   145  003C4A  1F                 	db	31
   146  003C4B  1C                 	db	28
   147  003C4C  1F                 	db	31
   148  003C4D  1E                 	db	30
   149  003C4E  1F                 	db	31
   150  003C4F  1E                 	db	30
   151  003C50  1F                 	db	31
   152  003C51  1F                 	db	31
   153  003C52  1E                 	db	30
   154  003C53  1F                 	db	31
   155  003C54  1E                 	db	30
   156  003C55  1F                 	db	31
   157                           
   158                           ;initializer for _gsCurrTime
   159  003C56  30                 	db	48
   160  003C57  31                 	db	49
   161  003C58  3A                 	db	58
   162  003C59  30                 	db	48
   163  003C5A  30                 	db	48
   164  003C5B  3A                 	db	58
   165  003C5C  30                 	db	48
   166  003C5D  30                 	db	48
   167  003C5E  00                 	db	0
   168                           
   169                           ;initializer for _gsCurrDate
   170  003C5F  30                 	db	48
   171  003C60  31                 	db	49
   172  003C61  2F                 	db	47
   173  003C62  30                 	db	48
   174  003C63  34                 	db	52
   175  003C64  2F                 	db	47
   176  003C65  32                 	db	50
   177  003C66  31                 	db	49
   178  003C67  00                 	db	0
   179                           
   180                           ;initializer for _gsTotalSecs
   181  003C68  2D                 	db	45
   182  003C69  2D                 	db	45
   183  003C6A  2D                 	db	45
   184  003C6B  00                 	db	0
   185                           
   186                           	psect	smallconst
   187  000800                     __psmallconst:
   188                           	callstack 0
   189  000800  00                 	db	0
   190  000801                     _dpowers:
   191                           	callstack 0
   192  000801  0001               	dw	1
   193  000803  000A               	dw	10
   194  000805  0064               	dw	100
   195  000807  03E8               	dw	1000
   196  000809  2710               	dw	10000
   197  00080B                     __end_of_dpowers:
   198                           	callstack 0
   199  00080B                     exp@coeff:
   200                           	callstack 0
   201  00080B  0000               	dw	0
   202  00080D  3F80               	dw	16256
   203  00080F  7218               	dw	29208
   204  000811  3F31               	dw	16177
   205  000813  FDF0               	dw	65008
   206  000815  3E75               	dw	15989
   207  000817  5847               	dw	22599
   208  000819  3D63               	dw	15715
   209  00081B  9558               	dw	38232
   210  00081D  3C1D               	dw	15389
   211  00081F  C482               	dw	50306
   212  000821  3AAE               	dw	15022
   213  000823  78A8               	dw	30888
   214  000825  3921               	dw	14625
   215  000827  93EF               	dw	37871
   216  000829  3780               	dw	14208
   217  00082B  92A0               	dw	37536
   218  00082D  35A7               	dw	13735
   219  00082F  5646               	dw	22086
   220  000831  3415               	dw	13333
   221  000833                     __end_ofexp@coeff:
   222                           	callstack 0
   223  000833                     log@coeff:
   224                           	callstack 0
   225  000833  0000               	dw	0
   226  000835  0000               	dw	0
   227  000837  FFC4               	dw	65476
   228  000839  3F7F               	dw	16255
   229  00083B  EF80               	dw	61312
   230  00083D  BEFF               	dw	48895
   231  00083F  E190               	dw	57744
   232  000841  3EA9               	dw	16041
   233  000843  82EC               	dw	33516
   234  000845  BE76               	dw	48758
   235  000847  AD82               	dw	44418
   236  000849  3E2B               	dw	15915
   237  00084B  3C0E               	dw	15374
   238  00084D  BDC3               	dw	48579
   239  00084F  D187               	dw	53639
   240  000851  3D13               	dw	15635
   241  000853  7841               	dw	30785
   242  000855  BBD3               	dw	48083
   243  000857                     __end_oflog@coeff:
   244                           	callstack 0
   245  0000                     _ADCON0bits	set	4034
   246  0000                     _ADRESL	set	4035
   247  0000                     _ADCON2	set	4032
   248  0000                     _ADCON0	set	4034
   249  0000                     _T1CONbits	set	4045
   250  0000                     _TMR1L	set	4046
   251  0000                     _TMR1H	set	4047
   252  0000                     _T1CON	set	4045
   253  0000                     _LATCbits	set	3979
   254  0000                     _CCPR2H	set	4028
   255  0000                     _CCP2CONbits	set	4026
   256  0000                     _CCPR2L	set	4027
   257  0000                     _CCP2CON	set	4026
   258  0000                     _CCPR1L	set	4030
   259  0000                     _CCPR1H	set	4031
   260  0000                     _CCP1CON	set	4029
   261  0000                     _INTCON2bits	set	4081
   262  0000                     _ADCON1	set	4033
   263  0000                     _TRISCbits	set	3988
   264  0000                     _TRISAbits	set	3986
   265  0000                     _TRISC	set	3988
   266  0000                     _TRISB	set	3987
   267  0000                     _TRISA	set	3986
   268  0000                     _LATC	set	3979
   269  0000                     _LATB	set	3978
   270  0000                     _LATA	set	3977
   271  0000                     _PORTCbits	set	3970
   272  0000                     _T3CON	set	4017
   273  0000                     _TMR3L	set	4018
   274  0000                     _TMR3H	set	4019
   275  0000                     _T3CONbits	set	4017
   276  0000                     _T2CON	set	4042
   277  0000                     _PR2	set	4043
   278  0000                     _TMR2	set	4044
   279  0000                     _T2CONbits	set	4042
   280  0000                     _T0CON	set	4053
   281  0000                     _LATAbits	set	3977
   282  0000                     _TMR0L	set	4054
   283  0000                     _TMR0H	set	4055
   284  0000                     _OSCTUNE	set	3995
   285  0000                     _OSCCON	set	4051
   286  0000                     _PIR1bits	set	3998
   287  0000                     _PIE1bits	set	3997
   288  0000                     _PIR2bits	set	4001
   289  0000                     _PIE2bits	set	4000
   290  0000                     _INTCONbits	set	4082
   291  000857                     STR_3:
   292                           
   293                           ; BSR set to: 0
   294  000857  47                 	db	71	;'G'
   295  000858  61                 	db	97	;'a'
   296  000859  6C                 	db	108	;'l'
   297  00085A  73                 	db	115	;'s'
   298  00085B  3A                 	db	58	;':'
   299  00085C  25                 	db	37
   300  00085D  34                 	db	52	;'4'
   301  00085E  75                 	db	117	;'u'
   302  00085F  20                 	db	32
   303  000860  20                 	db	32
   304  000861  25                 	db	37
   305  000862  33                 	db	51	;'3'
   306  000863  75                 	db	117	;'u'
   307  000864  25                 	db	37
   308  000865  25                 	db	37
   309  000866  20                 	db	32
   310  000867  00                 	db	0
   311  000868                     STR_4:
   312                           
   313                           ; BSR set to: 0
   314  000868  45                 	db	69	;'E'
   315  000869  63                 	db	99	;'c'
   316  00086A  68                 	db	104	;'h'
   317  00086B  6F                 	db	111	;'o'
   318  00086C  3A                 	db	58	;':'
   319  00086D  25                 	db	37
   320  00086E  34                 	db	52	;'4'
   321  00086F  75                 	db	117	;'u'
   322  000870  20                 	db	32
   323  000871  25                 	db	37
   324  000872  32                 	db	50	;'2'
   325  000873  75                 	db	117	;'u'
   326  000874  2F                 	db	47
   327  000875  25                 	db	37
   328  000876  32                 	db	50	;'2'
   329  000877  75                 	db	117	;'u'
   330  000878  00                 	db	0
   331  000879                     STR_1:
   332                           
   333                           ; BSR set to: 0
   334  000879  4C                 	db	76	;'L'
   335  00087A  6F                 	db	111	;'o'
   336  00087B  61                 	db	97	;'a'
   337  00087C  64                 	db	100	;'d'
   338  00087D  69                 	db	105	;'i'
   339  00087E  6E                 	db	110	;'n'
   340  00087F  67                 	db	103	;'g'
   341  000880  2E                 	db	46
   342  000881  2E                 	db	46
   343  000882  2E                 	db	46
   344  000883  20                 	db	32
   345  000884  00                 	db	0
   346  000885                     STR_2:
   347                           
   348                           ; BSR set to: 0
   349  000885  25                 	db	37
   350  000886  33                 	db	51	;'3'
   351  000887  69                 	db	105	;'i'
   352  000888  00                 	db	0
   353  000889  00                 	db	0	; dummy byte at the end
   354  0000                     
   355                           ; #config settings
   356                           
   357                           	psect	cinit
   358  003782                     __pcinit:
   359                           	callstack 0
   360  003782                     start_initialization:
   361                           	callstack 0
   362  003782                     __initialization:
   363                           	callstack 0
   364                           
   365                           ; Initialize objects allocated to BANK1 (34 bytes)
   366                           ; load TBLPTR registers with __pidataBANK1
   367  003782  0E4A               	movlw	low __pidataBANK1
   368  003784  6EF6               	movwf	tblptrl,c
   369  003786  0E3C               	movlw	high __pidataBANK1
   370  003788  6EF7               	movwf	tblptrh,c
   371  00378A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   372  00378C  6EF8               	movwf	tblptru,c
   373  00378E  EE01  F0D0         	lfsr	0,__pdataBANK1
   374  003792  EE10 F022          	lfsr	1,34
   375  003796                     copy_data0:
   376  003796  0009               	tblrd		*+
   377  003798  CFF5 FFEE          	movff	tablat,postinc0
   378  00379C  50E5               	movf	postdec1,w,c
   379  00379E  50E1               	movf	fsr1l,w,c
   380  0037A0  E1FA               	bnz	copy_data0
   381                           
   382                           ; Initialize objects allocated to BANK0 (7 bytes)
   383                           ; load TBLPTR registers with __pidataBANK0
   384  0037A2  0E5C               	movlw	low __pidataBANK0
   385  0037A4  6EF6               	movwf	tblptrl,c
   386  0037A6  0E3D               	movlw	high __pidataBANK0
   387  0037A8  6EF7               	movwf	tblptrh,c
   388  0037AA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   389  0037AC  6EF8               	movwf	tblptru,c
   390  0037AE  EE00  F0F9         	lfsr	0,__pdataBANK0
   391  0037B2  EE10 F007          	lfsr	1,7
   392  0037B6                     copy_data1:
   393  0037B6  0009               	tblrd		*+
   394  0037B8  CFF5 FFEE          	movff	tablat,postinc0
   395  0037BC  50E5               	movf	postdec1,w,c
   396  0037BE  50E1               	movf	fsr1l,w,c
   397  0037C0  E1FA               	bnz	copy_data1
   398                           
   399                           ; Initialize objects allocated to COMRAM (1 bytes)
   400                           ; load TBLPTR registers with __pidataCOMRAM
   401  0037C2  0E63               	movlw	low __pidataCOMRAM
   402  0037C4  6EF6               	movwf	tblptrl,c
   403  0037C6  0E3D               	movlw	high __pidataCOMRAM
   404  0037C8  6EF7               	movwf	tblptrh,c
   405  0037CA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   406  0037CC  6EF8               	movwf	tblptru,c
   407  0037CE  0009               	tblrd		*+	;fetch initializer
   408  0037D0  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   409                           
   410                           ; Clear objects allocated to BANK1 (208 bytes)
   411  0037D4  EE01  F000         	lfsr	0,__pbssBANK1
   412  0037D8  0ED0               	movlw	208
   413  0037DA                     clear_0:
   414  0037DA  6AEE               	clrf	postinc0,c
   415  0037DC  06E8               	decf	wreg,f,c
   416  0037DE  E1FD               	bnz	clear_0
   417                           
   418                           ; Clear objects allocated to BANK0 (72 bytes)
   419  0037E0  EE00  F0B1         	lfsr	0,__pbssBANK0
   420  0037E4  0E48               	movlw	72
   421  0037E6                     clear_1:
   422  0037E6  6AEE               	clrf	postinc0,c
   423  0037E8  06E8               	decf	wreg,f,c
   424  0037EA  E1FD               	bnz	clear_1
   425  0037EC                     end_of_initialization:
   426                           	callstack 0
   427  0037EC                     __end_of__initialization:
   428                           	callstack 0
   429  0037EC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   430  0037EE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   431  0037F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   432  0037F2  6EF8               	movwf	tblptru,c
   433  0037F4  0100               	movlb	0
   434  0037F6  EF4D  F016         	goto	_main	;jump to C main() function
   435                           
   436                           	psect	dataCOMRAM
   437  00005E                     __pdataCOMRAM:
   438                           	callstack 0
   439  00005E                     _giMonth:
   440                           	callstack 0
   441  00005E                     	ds	1
   442                           
   443                           	psect	bssBANK0
   444  0000B1                     __pbssBANK0:
   445                           	callstack 0
   446  0000B1                     _gd_MaxWaterHeight_mm:
   447                           	callstack 0
   448  0000B1                     	ds	4
   449  0000B5                     _gd_TankGalsPer_mm:
   450                           	callstack 0
   451  0000B5                     	ds	4
   452  0000B9                     _gd_SensorHeight_mm:
   453                           	callstack 0
   454  0000B9                     	ds	4
   455  0000BD                     _gd_TankSurfArea_mm2:
   456                           	callstack 0
   457  0000BD                     	ds	4
   458  0000C1                     _gfRRatio:
   459                           	callstack 0
   460  0000C1                     	ds	4
   461  0000C5                     _gfRtherm:
   462                           	callstack 0
   463  0000C5                     	ds	4
   464  0000C9                     _gfVtherm:
   465                           	callstack 0
   466  0000C9                     	ds	4
   467  0000CD                     _gfAirTempC:
   468                           	callstack 0
   469  0000CD                     	ds	4
   470  0000D1                     _errno:
   471                           	callstack 0
   472  0000D1                     	ds	2
   473  0000D3                     _Timer3_Cntr:
   474                           	callstack 0
   475  0000D3                     	ds	2
   476  0000D5                     _imSCntr:
   477                           	callstack 0
   478  0000D5                     	ds	2
   479  0000D7                     _giBacklight_Timer:
   480                           	callstack 0
   481  0000D7                     	ds	2
   482  0000D9                     _giTotalSecs:
   483                           	callstack 0
   484  0000D9                     	ds	2
   485  0000DB                     _giEmptySpace_mm:
   486                           	callstack 0
   487  0000DB                     	ds	2
   488  0000DD                     _giPercentFull:
   489                           	callstack 0
   490  0000DD                     	ds	2
   491  0000DF                     _giGals:
   492                           	callstack 0
   493  0000DF                     	ds	2
   494  0000E1                     _giAirTempF:
   495                           	callstack 0
   496  0000E1                     	ds	2
   497  0000E3                     _giAirTempC:
   498                           	callstack 0
   499  0000E3                     	ds	2
   500  0000E5                     _giEchoCounter:
   501                           	callstack 0
   502  0000E5                     	ds	2
   503  0000E7                     _gbBacklight_On:
   504                           	callstack 0
   505  0000E7                     	ds	1
   506  0000E8                     _Timer3_Sampling:
   507                           	callstack 0
   508  0000E8                     	ds	1
   509  0000E9                     _iSampleCntr:
   510                           	callstack 0
   511  0000E9                     	ds	1
   512  0000EA                     _bIncDays:
   513                           	callstack 0
   514  0000EA                     	ds	1
   515  0000EB                     _giHours:
   516                           	callstack 0
   517  0000EB                     	ds	1
   518  0000EC                     _giMins:
   519                           	callstack 0
   520  0000EC                     	ds	1
   521  0000ED                     _giSecs:
   522                           	callstack 0
   523  0000ED                     	ds	1
   524  0000EE                     _gb_TempCaptured:
   525                           	callstack 0
   526  0000EE                     	ds	1
   527  0000EF                     _gb_Temp_Done:
   528                           	callstack 0
   529  0000EF                     	ds	1
   530  0000F0                     _gb_Temp_Captured:
   531                           	callstack 0
   532  0000F0                     	ds	1
   533  0000F1                     _gb_EchoDetected:
   534                           	callstack 0
   535  0000F1                     	ds	1
   536  0000F2                     _gb_UpdateTime:
   537                           	callstack 0
   538  0000F2                     	ds	1
   539  0000F3                     _gfLnRRatio:
   540                           	callstack 0
   541  0000F3                     	ds	4
   542  0000F7                     _giTempCapture:
   543                           	callstack 0
   544  0000F7                     	ds	2
   545                           
   546                           	psect	dataBANK0
   547  0000F9                     __pdataBANK0:
   548                           	callstack 0
   549  0000F9                     _Timer3_Reload:
   550                           	callstack 0
   551  0000F9                     	ds	2
   552  0000FB                     _Timer0_Reload:
   553                           	callstack 0
   554  0000FB                     	ds	2
   555  0000FD                     _giBacklight_Timeout:
   556                           	callstack 0
   557  0000FD                     	ds	1
   558  0000FE                     _giYear:
   559                           	callstack 0
   560  0000FE                     	ds	1
   561  0000FF                     _giDay:
   562                           	callstack 0
   563  0000FF                     	ds	1
   564                           
   565                           	psect	bssBANK1
   566  000100                     __pbssBANK1:
   567                           	callstack 0
   568  000100                     _gd_Default_SOS:
   569                           	callstack 0
   570  000100                     	ds	4
   571  000104                     _gd_Temp:
   572                           	callstack 0
   573  000104                     	ds	4
   574  000108                     _sLine2:
   575                           	callstack 0
   576  000108                     	ds	100
   577  00016C                     _sLine1:
   578                           	callstack 0
   579  00016C                     	ds	100
   580                           
   581                           	psect	dataBANK1
   582  0001D0                     __pdataBANK1:
   583                           	callstack 0
   584  0001D0                     _giMonthEndTbl:
   585                           	callstack 0
   586  0001D0                     	ds	12
   587  0001DC                     _gsCurrTime:
   588                           	callstack 0
   589  0001DC                     	ds	9
   590  0001E5                     _gsCurrDate:
   591                           	callstack 0
   592  0001E5                     	ds	9
   593  0001EE                     _gsTotalSecs:
   594                           	callstack 0
   595  0001EE                     	ds	4
   596                           
   597                           	psect	cstackBANK0
   598  000060                     __pcstackBANK0:
   599                           	callstack 0
   600  000060                     ??___flmul:
   601  000060                     floor@i:
   602                           	callstack 0
   603  000060                     trunc@i:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x0
   607  000060                     	ds	4
   608  000064                     ___flmul@sign:
   609                           	callstack 0
   610  000064                     floor@expon:
   611                           	callstack 0
   612  000064                     trunc@expon:
   613                           	callstack 0
   614                           
   615                           ; 2 bytes @ 0x4
   616  000064                     	ds	1
   617  000065                     ___flmul@grs:
   618                           	callstack 0
   619                           
   620                           ; 4 bytes @ 0x5
   621  000065                     	ds	1
   622  000066                     ?___flsub:
   623                           	callstack 0
   624  000066                     ___flsub@b:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x6
   628  000066                     	ds	3
   629  000069                     ___flmul@aexp:
   630                           	callstack 0
   631                           
   632                           ; 1 bytes @ 0x9
   633  000069                     	ds	1
   634  00006A                     ___flmul@bexp:
   635                           	callstack 0
   636  00006A                     ___flsub@a:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0xA
   640  00006A                     	ds	1
   641  00006B                     ___flmul@prod:
   642                           	callstack 0
   643                           
   644                           ; 4 bytes @ 0xB
   645  00006B                     	ds	4
   646  00006F                     ___flmul@temp:
   647                           	callstack 0
   648                           
   649                           ; 2 bytes @ 0xF
   650  00006F                     	ds	2
   651  000071                     ?_round:
   652                           	callstack 0
   653  000071                     ?_eval_poly:
   654                           	callstack 0
   655  000071                     eval_poly@x:
   656                           	callstack 0
   657  000071                     round@x:
   658                           	callstack 0
   659                           
   660                           ; 4 bytes @ 0x11
   661  000071                     	ds	4
   662  000075                     eval_poly@d:
   663                           	callstack 0
   664  000075                     round@f:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0x15
   668  000075                     	ds	2
   669  000077                     eval_poly@n:
   670                           	callstack 0
   671                           
   672                           ; 2 bytes @ 0x17
   673  000077                     	ds	2
   674  000079                     ??_ComputeWaterVol:
   675  000079                     ??_eval_poly:
   676                           
   677                           ; 1 bytes @ 0x19
   678  000079                     	ds	4
   679  00007D                     eval_poly@res:
   680                           	callstack 0
   681                           
   682                           ; 4 bytes @ 0x1D
   683  00007D                     	ds	4
   684  000081                     ?_log:
   685                           	callstack 0
   686  000081                     ?_ldexp:
   687                           	callstack 0
   688  000081                     ComputeWaterVol@dCurrTemp:
   689                           	callstack 0
   690  000081                     log@x:
   691                           	callstack 0
   692  000081                     ldexp@value:
   693                           	callstack 0
   694                           
   695                           ; 4 bytes @ 0x21
   696  000081                     	ds	4
   697  000085                     log@exponent:
   698                           	callstack 0
   699  000085                     ldexp@newexp:
   700                           	callstack 0
   701  000085                     ComputeWaterVol@dWaterVol:
   702                           	callstack 0
   703                           
   704                           ; 4 bytes @ 0x25
   705  000085                     	ds	2
   706  000087                     ??_ldexp:
   707  000087                     _ComputeTemp$2688:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x27
   711  000087                     	ds	2
   712  000089                     ?_exp:
   713                           	callstack 0
   714  000089                     ComputeWaterVol@dSOS:
   715                           	callstack 0
   716  000089                     exp@x:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x29
   720  000089                     	ds	2
   721  00008B                     _ComputeTemp$2689:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x2B
   725  00008B                     	ds	2
   726  00008D                     _ComputeWaterVol$2691:
   727                           	callstack 0
   728  00008D                     _exp$2696:
   729                           	callstack 0
   730                           
   731                           ; 4 bytes @ 0x2D
   732  00008D                     	ds	2
   733  00008F                     _ComputeTemp$2690:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x2F
   737  00008F                     	ds	2
   738  000091                     exp@exponent:
   739                           	callstack 0
   740  000091                     ComputeWaterVol@d_mmPerTick:
   741                           	callstack 0
   742                           
   743                           ; 4 bytes @ 0x31
   744  000091                     	ds	2
   745  000093                     exp@sign:
   746                           	callstack 0
   747                           
   748                           ; 1 bytes @ 0x33
   749  000093                     	ds	1
   750  000094                     ?_pow:
   751                           	callstack 0
   752  000094                     pow@x:
   753                           	callstack 0
   754                           
   755                           ; 4 bytes @ 0x34
   756  000094                     	ds	1
   757  000095                     ComputeWaterVol@dWaterHeight_mm:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x35
   761  000095                     	ds	3
   762  000098                     pow@y:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x38
   766  000098                     	ds	1
   767  000099                     ComputeWaterVol@dEmptySpace_mm:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x39
   771  000099                     	ds	3
   772  00009C                     _pow$2694:
   773                           	callstack 0
   774                           
   775                           ; 4 bytes @ 0x3C
   776  00009C                     	ds	4
   777  0000A0                     _pow$2695:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x40
   781  0000A0                     	ds	4
   782  0000A4                     pow@sign:
   783                           	callstack 0
   784                           
   785                           ; 1 bytes @ 0x44
   786  0000A4                     	ds	1
   787  0000A5                     pow@yi:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x45
   791  0000A5                     	ds	4
   792  0000A9                     _InitTankVariables$2692:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x49
   796  0000A9                     	ds	4
   797  0000AD                     ??_main:
   798                           
   799                           ; 1 bytes @ 0x4D
   800  0000AD                     	ds	2
   801  0000AF                     _main$915:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x4F
   805  0000AF                     	ds	2
   806                           
   807                           	psect	cstackCOMRAM
   808  000001                     __pcstackCOMRAM:
   809                           	callstack 0
   810  000001                     ??_isdigit:
   811  000001                     ??_LCD_WriteChar:
   812  000001                     ?___wmul:
   813                           	callstack 0
   814  000001                     ?___lwdiv:
   815                           	callstack 0
   816  000001                     ?___fldiv:
   817                           	callstack 0
   818  000001                     ?___flneg:
   819                           	callstack 0
   820  000001                     LCD_WriteCmd@iDelay:
   821                           	callstack 0
   822  000001                     ___wmul@multiplier:
   823                           	callstack 0
   824  000001                     ___lwdiv@dividend:
   825                           	callstack 0
   826  000001                     ___flge@ff1:
   827                           	callstack 0
   828  000001                     ___flneg@f1:
   829                           	callstack 0
   830  000001                     ___fldiv@b:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x0
   834  000001                     	ds	1
   835  000002                     _isdigit$2385:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x1
   839  000002                     	ds	1
   840  000003                     ??_LCD_WriteCmd:
   841  000003                     LCD_WriteChar@iChar:
   842                           	callstack 0
   843  000003                     isdigit@c:
   844                           	callstack 0
   845  000003                     ___wmul@multiplicand:
   846                           	callstack 0
   847  000003                     ___lwdiv@divisor:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x2
   851  000003                     	ds	1
   852  000004                     LCD_WriteString@iData:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x3
   856  000004                     	ds	1
   857  000005                     LCD_WriteCmd@i:
   858                           	callstack 0
   859  000005                     ___wmul@product:
   860                           	callstack 0
   861  000005                     ___lwdiv@quotient:
   862                           	callstack 0
   863  000005                     ___flge@ff2:
   864                           	callstack 0
   865  000005                     ___fldiv@a:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x4
   869  000005                     	ds	1
   870  000006                     ??_LCD_WriteString:
   871  000006                     LCD_WriteCmd@iCmd:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0x5
   875  000006                     	ds	1
   876  000007                     ??_LCD_Init:
   877  000007                     LCD_GoTo@iCharPos:
   878                           	callstack 0
   879  000007                     ___lwdiv@counter:
   880                           	callstack 0
   881                           
   882                           ; 1 bytes @ 0x6
   883  000007                     	ds	1
   884  000008                     ??_LCD_GoTo:
   885  000008                     ?___lwmod:
   886                           	callstack 0
   887  000008                     LCD_WriteString@ix:
   888                           	callstack 0
   889  000008                     ___lwmod@dividend:
   890                           	callstack 0
   891                           
   892                           ; 2 bytes @ 0x7
   893  000008                     	ds	1
   894  000009                     ??___fldiv:
   895  000009                     ??___flge:
   896  000009                     LCD_WriteLine@iData:
   897                           	callstack 0
   898                           
   899                           ; 2 bytes @ 0x8
   900  000009                     	ds	1
   901  00000A                     _LCD_GoTo$1386:
   902                           	callstack 0
   903  00000A                     ___lwmod@divisor:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0x9
   907  00000A                     	ds	1
   908  00000B                     LCD_WriteLine@sLine:
   909                           	callstack 0
   910                           
   911                           ; 17 bytes @ 0xA
   912  00000B                     	ds	1
   913  00000C                     LCD_GoTo@iPos:
   914                           	callstack 0
   915  00000C                     ___lwmod@counter:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0xB
   919  00000C                     	ds	1
   920  00000D                     ?_sprintf:
   921                           	callstack 0
   922  00000D                     LCD_GoTo@iLine:
   923                           	callstack 0
   924  00000D                     sprintf@sp:
   925                           	callstack 0
   926  00000D                     ___fldiv@rem:
   927                           	callstack 0
   928                           
   929                           ; 4 bytes @ 0xC
   930  00000D                     	ds	2
   931  00000F                     sprintf@f:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0xE
   935  00000F                     	ds	2
   936  000011                     ___fldiv@sign:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x10
   940  000011                     	ds	1
   941  000012                     ___fldiv@new_exp:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0x11
   945  000012                     	ds	2
   946  000014                     ___fldiv@grs:
   947                           	callstack 0
   948                           
   949                           ; 4 bytes @ 0x13
   950  000014                     	ds	3
   951  000017                     ??_sprintf:
   952                           
   953                           ; 1 bytes @ 0x16
   954  000017                     	ds	1
   955  000018                     ___fldiv@bexp:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0x17
   959  000018                     	ds	1
   960  000019                     ___fldiv@aexp:
   961                           	callstack 0
   962                           
   963                           ; 1 bytes @ 0x18
   964  000019                     	ds	1
   965  00001A                     ?___fladd:
   966                           	callstack 0
   967  00001A                     ___fladd@b:
   968                           	callstack 0
   969                           
   970                           ; 4 bytes @ 0x19
   971  00001A                     	ds	1
   972  00001B                     sprintf@cp:
   973                           	callstack 0
   974                           
   975                           ; 2 bytes @ 0x1A
   976  00001B                     	ds	1
   977  00001C                     LCD_WriteLine@bInString:
   978                           	callstack 0
   979                           
   980                           ; 1 bytes @ 0x1B
   981  00001C                     	ds	1
   982  00001D                     sprintf@prec:
   983                           	callstack 0
   984  00001D                     LCD_WriteLine@i:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0x1C
   988  00001D                     	ds	1
   989  00001E                     sprintf@ap:
   990                           	callstack 0
   991  00001E                     ___fladd@a:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x1D
   995  00001E                     	ds	2
   996  000020                     sprintf@len:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x1F
  1000  000020                     	ds	2
  1001  000022                     ??___fladd:
  1002  000022                     sprintf@flag:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x21
  1006  000022                     	ds	1
  1007  000023                     sprintf@val:
  1008                           	callstack 0
  1009                           
  1010                           ; 2 bytes @ 0x22
  1011  000023                     	ds	2
  1012  000025                     sprintf@width:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x24
  1016  000025                     	ds	1
  1017  000026                     ___fladd@signs:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x25
  1021  000026                     	ds	1
  1022  000027                     sprintf@c:
  1023                           	callstack 0
  1024  000027                     ___fladd@aexp:
  1025                           	callstack 0
  1026                           
  1027                           ; 1 bytes @ 0x26
  1028  000027                     	ds	1
  1029  000028                     ___fladd@bexp:
  1030                           	callstack 0
  1031                           
  1032                           ; 1 bytes @ 0x27
  1033  000028                     	ds	1
  1034  000029                     ComputeTOD@bIncDays:
  1035                           	callstack 0
  1036  000029                     ___fladd@grs:
  1037                           	callstack 0
  1038                           
  1039                           ; 1 bytes @ 0x28
  1040  000029                     	ds	1
  1041  00002A                     ?_sqrt:
  1042                           	callstack 0
  1043  00002A                     ?___fltol:
  1044                           	callstack 0
  1045  00002A                     ___fltol@f1:
  1046                           	callstack 0
  1047  00002A                     sqrt@a:
  1048                           	callstack 0
  1049                           
  1050                           ; 4 bytes @ 0x29
  1051  00002A                     	ds	4
  1052  00002E                     ??_sqrt:
  1053  00002E                     ??___fltol:
  1054                           
  1055                           ; 1 bytes @ 0x2D
  1056  00002E                     	ds	4
  1057  000032                     ___fltol@sign1:
  1058                           	callstack 0
  1059  000032                     sqrt@sign:
  1060                           	callstack 0
  1061                           
  1062                           ; 1 bytes @ 0x31
  1063  000032                     	ds	1
  1064  000033                     ___fltol@exp1:
  1065                           	callstack 0
  1066  000033                     sqrt@i:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x32
  1070  000033                     	ds	1
  1071  000034                     ?___xxtofl:
  1072                           	callstack 0
  1073  000034                     sqrt@tfrac:
  1074                           	callstack 0
  1075  000034                     ___xxtofl@val:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x33
  1079  000034                     	ds	4
  1080  000038                     ??___xxtofl:
  1081  000038                     sqrt@p:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x37
  1085  000038                     	ds	1
  1086  000039                     sqrt@grs:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x38
  1090  000039                     	ds	3
  1091  00003C                     ___xxtofl@sign:
  1092                           	callstack 0
  1093                           
  1094                           ; 1 bytes @ 0x3B
  1095  00003C                     	ds	1
  1096  00003D                     ___xxtofl@exp:
  1097                           	callstack 0
  1098  00003D                     sqrt@exp:
  1099                           	callstack 0
  1100                           
  1101                           ; 2 bytes @ 0x3C
  1102  00003D                     	ds	1
  1103  00003E                     ___xxtofl@arg:
  1104                           	callstack 0
  1105                           
  1106                           ; 4 bytes @ 0x3D
  1107  00003E                     	ds	1
  1108  00003F                     sqrt@root:
  1109                           	callstack 0
  1110                           
  1111                           ; 4 bytes @ 0x3E
  1112  00003F                     	ds	3
  1113  000042                     ___fleq@ff1:
  1114                           	callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x41
  1117  000042                     	ds	1
  1118  000043                     sqrt@frac:
  1119                           	callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x42
  1122  000043                     	ds	3
  1123  000046                     ___fleq@ff2:
  1124                           	callstack 0
  1125                           
  1126                           ; 4 bytes @ 0x45
  1127  000046                     	ds	4
  1128  00004A                     ??___fleq:
  1129                           
  1130                           ; 1 bytes @ 0x49
  1131  00004A                     	ds	4
  1132  00004E                     ?_frexp:
  1133                           	callstack 0
  1134  00004E                     frexp@value:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0x4D
  1138  00004E                     	ds	4
  1139  000052                     frexp@eptr:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x51
  1143  000052                     	ds	2
  1144  000054                     ??_frexp:
  1145                           
  1146                           ; 1 bytes @ 0x53
  1147  000054                     	ds	2
  1148  000056                     ?___flmul:
  1149                           	callstack 0
  1150  000056                     ?_floor:
  1151                           	callstack 0
  1152  000056                     ?_trunc:
  1153                           	callstack 0
  1154  000056                     ___flmul@b:
  1155                           	callstack 0
  1156  000056                     floor@x:
  1157                           	callstack 0
  1158  000056                     trunc@x:
  1159                           	callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x55
  1162  000056                     	ds	4
  1163  00005A                     ___flmul@a:
  1164                           	callstack 0
  1165                           
  1166                           ; 4 bytes @ 0x59
  1167  00005A                     	ds	4
  1168  00005E                     
  1169                           ; 1 bytes @ 0x5D
  1170 ;;
  1171 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1172 ;;
  1173 ;; *************** function _main *****************
  1174 ;; Defined at:
  1175 ;;		line 23 in file "main.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0
  1190 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1191 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1192 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1193 ;;Total ram usage:        4 bytes
  1194 ;; Hardware stack levels required when called:    9
  1195 ;; This function calls:
  1196 ;;		_AN0_Init
  1197 ;;		_CCP1_Init
  1198 ;;		_CCP2_Init
  1199 ;;		_ComputeTOD
  1200 ;;		_ComputeTemp
  1201 ;;		_ComputeWaterVol
  1202 ;;		_InitTankVariables
  1203 ;;		_LCD_Init
  1204 ;;		_LCD_WriteString
  1205 ;;		_StartDepthDetection
  1206 ;;		_SysInit
  1207 ;;		_Timer0_Init
  1208 ;;		_Timer1_Init
  1209 ;;		_Timer2_Init
  1210 ;; This function is called by:
  1211 ;;		Startup code after reset
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text0
  1216  002C9A                     __ptext0:
  1217                           	callstack 0
  1218  002C9A                     _main:
  1219                           	callstack 22
  1220  002C9A                     
  1221                           ;main.c: 28: if (1)
  1222  002C9A  EC9F  F01E         	call	_SysInit	;wreg free
  1223  002C9E                     
  1224                           ;main.c: 29: {;main.c: 30: LCD_Init();
  1225  002C9E  EC3B  F01D         	call	_LCD_Init	;wreg free
  1226  002CA2                     
  1227                           ;main.c: 31: LCD_WriteString ((uint8_t *)"Loading... ");
  1228  002CA2  0E79               	movlw	low STR_1
  1229  002CA4  6E04               	movwf	LCD_WriteString@iData^0,c
  1230  002CA6  0E08               	movlw	high STR_1
  1231  002CA8  6E05               	movwf	(LCD_WriteString@iData+1)^0,c
  1232  002CAA  ECFD  F01B         	call	_LCD_WriteString	;wreg free
  1233  002CAE                     
  1234                           ;main.c: 32: };main.c: 35: giBacklight_Timeout = (PORTCbits.RC5 == 1) ? 180 : 2;
  1235  002CAE  BA82               	btfsc	130,5,c	;volatile
  1236  002CB0  EF5C  F016         	goto	u4311
  1237  002CB4  EF5E  F016         	goto	u4310
  1238  002CB8                     u4311:
  1239  002CB8  EF65  F016         	goto	l5101
  1240  002CBC                     u4310:
  1241  002CBC  0E00               	movlw	0
  1242  002CBE  0100               	movlb	0	; () banked
  1243  002CC0  6FB0               	movwf	(_main$915+1)& (0+255),b
  1244  002CC2  0E02               	movlw	2
  1245  002CC4  6FAF               	movwf	_main$915& (0+255),b
  1246  002CC6  EF6A  F016         	goto	l5103
  1247  002CCA                     l5101:
  1248  002CCA  0E00               	movlw	0
  1249  002CCC  0100               	movlb	0	; () banked
  1250  002CCE  6FB0               	movwf	(_main$915+1)& (0+255),b
  1251  002CD0  0EB4               	movlw	180
  1252  002CD2  6FAF               	movwf	_main$915& (0+255),b
  1253  002CD4                     l5103:
  1254                           
  1255                           ; BSR set to: 0
  1256  002CD4  C0AF  F0FD         	movff	_main$915,_giBacklight_Timeout
  1257  002CD8                     
  1258                           ; BSR set to: 0
  1259                           ;main.c: 37: InitTankVariables();
  1260  002CD8  ECDC  F016         	call	_InitTankVariables	;wreg free
  1261  002CDC                     
  1262                           ;main.c: 38: Timer0_Init();
  1263  002CDC  EC43  F01E         	call	_Timer0_Init	;wreg free
  1264  002CE0                     
  1265                           ;main.c: 39: Timer1_Init();
  1266  002CE0  EC60  F01E         	call	_Timer1_Init	;wreg free
  1267  002CE4                     
  1268                           ;main.c: 40: Timer2_Init();
  1269  002CE4  EC57  F01E         	call	_Timer2_Init	;wreg free
  1270  002CE8                     
  1271                           ;main.c: 41: CCP1_Init();
  1272  002CE8  EC7B  F01E         	call	_CCP1_Init	;wreg free
  1273  002CEC                     
  1274                           ;main.c: 42: CCP2_Init();
  1275  002CEC  EC72  F01E         	call	_CCP2_Init	;wreg free
  1276  002CF0                     
  1277                           ;main.c: 43: AN0_Init();
  1278  002CF0  EC8C  F01E         	call	_AN0_Init	;wreg free
  1279  002CF4                     
  1280                           ;main.c: 45: INTCONbits.GIE = 1;
  1281  002CF4  8EF2               	bsf	242,7,c	;volatile
  1282  002CF6                     
  1283                           ;main.c: 46: INTCONbits.PEIE = 1;
  1284  002CF6  8CF2               	bsf	242,6,c	;volatile
  1285  002CF8                     l5123:
  1286                           
  1287                           ;main.c: 60: {;main.c: 61: if (gb_TempCaptured)
  1288  002CF8  0100               	movlb	0	; () banked
  1289  002CFA  51EE               	movf	_gb_TempCaptured& (0+255),w,b	;volatile
  1290  002CFC  B4D8               	btfsc	status,2,c
  1291  002CFE  EF83  F016         	goto	u4321
  1292  002D02  EF85  F016         	goto	u4320
  1293  002D06                     u4321:
  1294  002D06  EF8B  F016         	goto	l5131
  1295  002D0A                     u4320:
  1296  002D0A                     
  1297                           ; BSR set to: 0
  1298                           ;main.c: 62: {;main.c: 63: gb_TempCaptured = 0;
  1299  002D0A  0E00               	movlw	0
  1300  002D0C  6FEE               	movwf	_gb_TempCaptured& (0+255),b	;volatile
  1301  002D0E                     
  1302                           ; BSR set to: 0
  1303                           ;main.c: 64: ComputeTemp();
  1304  002D0E  ECEB  F010         	call	_ComputeTemp	;wreg free
  1305  002D12                     
  1306                           ;main.c: 65: StartDepthDetection();
  1307  002D12  EC4D  F01E         	call	_StartDepthDetection	;wreg free
  1308  002D16                     l5131:
  1309                           
  1310                           ;main.c: 66: };main.c: 68: if (gb_EchoDetected)
  1311  002D16  0100               	movlb	0	; () banked
  1312  002D18  51F1               	movf	_gb_EchoDetected& (0+255),w,b	;volatile
  1313  002D1A  B4D8               	btfsc	status,2,c
  1314  002D1C  EF92  F016         	goto	u4331
  1315  002D20  EF94  F016         	goto	u4330
  1316  002D24                     u4331:
  1317  002D24  EF99  F016         	goto	l5137
  1318  002D28                     u4330:
  1319  002D28                     
  1320                           ; BSR set to: 0
  1321                           ;main.c: 69: {;main.c: 70: ComputeWaterVol();
  1322  002D28  ECF6  F00D         	call	_ComputeWaterVol	;wreg free
  1323  002D2C                     
  1324                           ;main.c: 71: gb_EchoDetected = 0;
  1325  002D2C  0E00               	movlw	0
  1326  002D2E  0100               	movlb	0	; () banked
  1327  002D30  6FF1               	movwf	_gb_EchoDetected& (0+255),b	;volatile
  1328  002D32                     l5137:
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;main.c: 72: };main.c: 74: if (gb_UpdateTime)
  1332  002D32  51F2               	movf	_gb_UpdateTime& (0+255),w,b	;volatile
  1333  002D34  B4D8               	btfsc	status,2,c
  1334  002D36  EF9F  F016         	goto	u4341
  1335  002D3A  EFA1  F016         	goto	u4340
  1336  002D3E                     u4341:
  1337  002D3E  EFA6  F016         	goto	l5143
  1338  002D42                     u4340:
  1339  002D42                     
  1340                           ; BSR set to: 0
  1341                           ;main.c: 75: {;main.c: 76: ComputeTOD();
  1342  002D42  ECE9  F018         	call	_ComputeTOD	;wreg free
  1343  002D46                     
  1344                           ;main.c: 77: gb_UpdateTime = 0;
  1345  002D46  0E00               	movlw	0
  1346  002D48  0100               	movlb	0	; () banked
  1347  002D4A  6FF2               	movwf	_gb_UpdateTime& (0+255),b	;volatile
  1348  002D4C                     l5143:
  1349                           
  1350                           ; BSR set to: 0
  1351                           ;main.c: 78: };main.c: 80: if (!gbBacklight_On)
  1352  002D4C  51E7               	movf	_gbBacklight_On& (0+255),w,b
  1353  002D4E  A4D8               	btfss	status,2,c
  1354  002D50  EFAC  F016         	goto	u4351
  1355  002D54  EFAE  F016         	goto	u4350
  1356  002D58                     u4351:
  1357  002D58  EFBE  F016         	goto	l5151
  1358  002D5C                     u4350:
  1359  002D5C                     
  1360                           ; BSR set to: 0
  1361                           ;main.c: 81: {;main.c: 82: if (PORTCbits.RC4 == 1)
  1362  002D5C  A882               	btfss	130,4,c	;volatile
  1363  002D5E  EFB3  F016         	goto	u4361
  1364  002D62  EFB5  F016         	goto	u4360
  1365  002D66                     u4361:
  1366  002D66  EF7C  F016         	goto	l5123
  1367  002D6A                     u4360:
  1368  002D6A                     
  1369                           ; BSR set to: 0
  1370                           ;main.c: 83: {;main.c: 84: LATAbits.LATA4 = 1;
  1371  002D6A  8889               	bsf	137,4,c	;volatile
  1372  002D6C                     
  1373                           ; BSR set to: 0
  1374                           ;main.c: 85: gbBacklight_On = 1;
  1375  002D6C  0E01               	movlw	1
  1376  002D6E  6FE7               	movwf	_gbBacklight_On& (0+255),b
  1377                           
  1378                           ;main.c: 86: giBacklight_Timer = 0;
  1379  002D70  0E00               	movlw	0
  1380  002D72  6FD8               	movwf	(_giBacklight_Timer+1)& (0+255),b
  1381  002D74  0E00               	movlw	0
  1382  002D76  6FD7               	movwf	_giBacklight_Timer& (0+255),b
  1383  002D78  EF7C  F016         	goto	l5123
  1384  002D7C                     l5151:
  1385                           
  1386                           ; BSR set to: 0
  1387                           ;main.c: 89: if (giBacklight_Timer > giBacklight_Timeout)
  1388  002D7C  51FD               	movf	_giBacklight_Timeout& (0+255),w,b
  1389  002D7E  6FAD               	movwf	??_main& (0+255),b
  1390  002D80  6BAE               	clrf	(??_main+1)& (0+255),b
  1391  002D82  51D7               	movf	_giBacklight_Timer& (0+255),w,b
  1392  002D84  5DAD               	subwf	??_main& (0+255),w,b
  1393  002D86  51D8               	movf	(_giBacklight_Timer+1)& (0+255),w,b
  1394  002D88  59AE               	subwfb	(??_main+1)& (0+255),w,b
  1395  002D8A  B0D8               	btfsc	status,0,c
  1396  002D8C  EFCA  F016         	goto	u4371
  1397  002D90  EFCC  F016         	goto	u4370
  1398  002D94                     u4371:
  1399  002D94  EF7C  F016         	goto	l5123
  1400  002D98                     u4370:
  1401  002D98                     
  1402                           ; BSR set to: 0
  1403                           ;main.c: 90: {;main.c: 91: if (PORTCbits.RC4 == 0)
  1404  002D98  B882               	btfsc	130,4,c	;volatile
  1405  002D9A  EFD1  F016         	goto	u4381
  1406  002D9E  EFD3  F016         	goto	u4380
  1407  002DA2                     u4381:
  1408  002DA2  EFD8  F016         	goto	l452
  1409  002DA6                     u4380:
  1410  002DA6                     
  1411                           ; BSR set to: 0
  1412                           ;main.c: 92: {;main.c: 93: gbBacklight_On = 0;
  1413  002DA6  0E00               	movlw	0
  1414  002DA8  6FE7               	movwf	_gbBacklight_On& (0+255),b
  1415  002DAA                     
  1416                           ; BSR set to: 0
  1417                           ;main.c: 94: LATAbits.LATA4 = 0;
  1418  002DAA  9889               	bcf	137,4,c	;volatile
  1419  002DAC  EF7C  F016         	goto	l5123
  1420  002DB0                     l452:
  1421                           
  1422                           ; BSR set to: 0
  1423  002DB0  EF7C  F016         	goto	l5123
  1424  002DB4  EF07  F000         	goto	start
  1425  002DB8                     __end_of_main:
  1426                           	callstack 0
  1427                           
  1428 ;; *************** function _Timer2_Init *****************
  1429 ;; Defined at:
  1430 ;;		line 23 in file "Timer_2.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;		None
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;		None
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1444 ;;      Params:         0       0       0       0       0       0       0       0       0
  1445 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1447 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1448 ;;Total ram usage:        0 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    3
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_main
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text1
  1459  003CAE                     __ptext1:
  1460                           	callstack 0
  1461  003CAE                     _Timer2_Init:
  1462                           	callstack 27
  1463  003CAE                     
  1464                           ;Timer_2.c: 26: PR2 = 0x31;
  1465  003CAE  0E31               	movlw	49
  1466  003CB0  6ECB               	movwf	203,c	;volatile
  1467                           
  1468                           ;Timer_2.c: 32: T2CON = (10-2)<<3 | 0 | 0;
  1469  003CB2  0E40               	movlw	64
  1470  003CB4  6ECA               	movwf	202,c	;volatile
  1471                           
  1472                           ;Timer_2.c: 34: TMR2 = 0;
  1473  003CB6  0E00               	movlw	0
  1474  003CB8  6ECC               	movwf	204,c	;volatile
  1475  003CBA                     
  1476                           ;Timer_2.c: 35: PIR1bits.TMR2IF = 0;
  1477  003CBA  929E               	bcf	158,1,c	;volatile
  1478  003CBC                     
  1479                           ;Timer_2.c: 36: PIE1bits.TMR2IE = 0;
  1480  003CBC  929D               	bcf	157,1,c	;volatile
  1481  003CBE  0012               	return		;funcret
  1482  003CC0                     __end_of_Timer2_Init:
  1483                           	callstack 0
  1484                           
  1485 ;; *************** function _Timer1_Init *****************
  1486 ;; Defined at:
  1487 ;;		line 10 in file "Timer_1.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1501 ;;      Params:         0       0       0       0       0       0       0       0       0
  1502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1504 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    3
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           	psect	text2
  1516  003CC0                     __ptext2:
  1517                           	callstack 0
  1518  003CC0                     _Timer1_Init:
  1519                           	callstack 27
  1520  003CC0                     
  1521                           ;Timer_1.c: 12: PIR1bits.TMR1IF = 0;
  1522  003CC0  909E               	bcf	158,0,c	;volatile
  1523                           
  1524                           ;Timer_1.c: 13: PIE1bits.TMR1IE = 0;
  1525  003CC2  909D               	bcf	157,0,c	;volatile
  1526  003CC4                     
  1527                           ;Timer_1.c: 20: T1CON = 0x80;
  1528  003CC4  0E80               	movlw	128
  1529  003CC6  6ECD               	movwf	205,c	;volatile
  1530                           
  1531                           ;Timer_1.c: 22: TMR1H = 0;
  1532  003CC8  0E00               	movlw	0
  1533  003CCA  6ECF               	movwf	207,c	;volatile
  1534                           
  1535                           ;Timer_1.c: 23: TMR1L = 0;
  1536  003CCC  0E00               	movlw	0
  1537  003CCE  6ECE               	movwf	206,c	;volatile
  1538  003CD0  0012               	return		;funcret
  1539  003CD2                     __end_of_Timer1_Init:
  1540                           	callstack 0
  1541                           
  1542 ;; *************** function _Timer0_Init *****************
  1543 ;; Defined at:
  1544 ;;		line 40 in file "Timer_0.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;		None
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  1    wreg      void 
  1551 ;; Registers used:
  1552 ;;		wreg, status,2
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1558 ;;      Params:         0       0       0       0       0       0       0       0       0
  1559 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1561 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1562 ;;Total ram usage:        0 bytes
  1563 ;; Hardware stack levels used:    1
  1564 ;; Hardware stack levels required when called:    3
  1565 ;; This function calls:
  1566 ;;		Nothing
  1567 ;; This function is called by:
  1568 ;;		_main
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text3
  1573  003C86                     __ptext3:
  1574                           	callstack 0
  1575  003C86                     _Timer0_Init:
  1576                           	callstack 27
  1577  003C86                     
  1578                           ;Timer_0.c: 42: TMR0H = Timer0_Reload >> 8;
  1579  003C86  0100               	movlb	0	; () banked
  1580  003C88  51FC               	movf	(_Timer0_Reload+1)& (0+255),w,b
  1581  003C8A  6ED7               	movwf	215,c	;volatile
  1582  003C8C                     
  1583                           ; BSR set to: 0
  1584                           ;Timer_0.c: 43: TMR0L = Timer0_Reload;
  1585  003C8C  C0FB  FFD6         	movff	_Timer0_Reload,4054	;volatile
  1586  003C90                     
  1587                           ; BSR set to: 0
  1588                           ;Timer_0.c: 45: INTCONbits.TMR0IF = 0;
  1589  003C90  94F2               	bcf	242,2,c	;volatile
  1590  003C92                     
  1591                           ; BSR set to: 0
  1592                           ;Timer_0.c: 46: INTCONbits.TMR0IE = 1;
  1593  003C92  8AF2               	bsf	242,5,c	;volatile
  1594                           
  1595                           ;Timer_0.c: 49: T0CON = 0x98;
  1596  003C94  0E98               	movlw	152
  1597  003C96  6ED5               	movwf	213,c	;volatile
  1598  003C98                     
  1599                           ; BSR set to: 0
  1600  003C98  0012               	return		;funcret
  1601  003C9A                     __end_of_Timer0_Init:
  1602                           	callstack 0
  1603                           
  1604 ;; *************** function _SysInit *****************
  1605 ;; Defined at:
  1606 ;;		line 10 in file "SysInit.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1620 ;;      Params:         0       0       0       0       0       0       0       0       0
  1621 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1622 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1623 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1624 ;;Total ram usage:        0 bytes
  1625 ;; Hardware stack levels used:    1
  1626 ;; Hardware stack levels required when called:    4
  1627 ;; This function calls:
  1628 ;;		_OscInit
  1629 ;;		_PIN_MANAGER_Initialize
  1630 ;; This function is called by:
  1631 ;;		_main
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           	psect	text4
  1636  003D3E                     __ptext4:
  1637                           	callstack 0
  1638  003D3E                     _SysInit:
  1639                           	callstack 26
  1640  003D3E                     
  1641                           ;SysInit.c: 12: PIN_MANAGER_Initialize();
  1642  003D3E  ECE8  F01D         	call	_PIN_MANAGER_Initialize	;wreg free
  1643                           
  1644                           ;SysInit.c: 13: OscInit();
  1645  003D42  ECA4  F01E         	call	_OscInit	;wreg free
  1646  003D46  0012               	return		;funcret
  1647  003D48                     __end_of_SysInit:
  1648                           	callstack 0
  1649                           
  1650 ;; *************** function _PIN_MANAGER_Initialize *****************
  1651 ;; Defined at:
  1652 ;;		line 26 in file "pin_manager.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg, status,2
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1666 ;;      Params:         0       0       0       0       0       0       0       0       0
  1667 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1669 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:    3
  1673 ;; This function calls:
  1674 ;;		Nothing
  1675 ;; This function is called by:
  1676 ;;		_SysInit
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text5
  1681  003BD0                     __ptext5:
  1682                           	callstack 0
  1683  003BD0                     _PIN_MANAGER_Initialize:
  1684                           	callstack 26
  1685  003BD0                     
  1686                           ;pin_manager.c: 35: LATA = 0x00;
  1687  003BD0  0E00               	movlw	0
  1688  003BD2  6E89               	movwf	137,c	;volatile
  1689                           
  1690                           ;pin_manager.c: 36: LATB = 0x00;
  1691  003BD4  0E00               	movlw	0
  1692  003BD6  6E8A               	movwf	138,c	;volatile
  1693                           
  1694                           ;pin_manager.c: 37: LATC = 0x00;
  1695  003BD8  0E00               	movlw	0
  1696  003BDA  6E8B               	movwf	139,c	;volatile
  1697  003BDC                     
  1698                           ;pin_manager.c: 47: TRISA = 0xff;
  1699  003BDC  6892               	setf	146,c	;volatile
  1700  003BDE                     
  1701                           ;pin_manager.c: 48: TRISB = 0xff;
  1702  003BDE  6893               	setf	147,c	;volatile
  1703  003BE0                     
  1704                           ;pin_manager.c: 49: TRISC = 0xff;
  1705  003BE0  6894               	setf	148,c	;volatile
  1706                           
  1707                           ;pin_manager.c: 52: TRISB = 0;
  1708  003BE2  0E00               	movlw	0
  1709  003BE4  6E93               	movwf	147,c	;volatile
  1710  003BE6                     
  1711                           ;pin_manager.c: 53: TRISAbits.RA1 = 0;
  1712  003BE6  9292               	bcf	146,1,c	;volatile
  1713  003BE8                     
  1714                           ;pin_manager.c: 54: TRISAbits.RA3 = 0;
  1715  003BE8  9692               	bcf	146,3,c	;volatile
  1716  003BEA                     
  1717                           ;pin_manager.c: 55: TRISAbits.RA2 = 0;
  1718  003BEA  9492               	bcf	146,2,c	;volatile
  1719  003BEC                     
  1720                           ;pin_manager.c: 56: TRISAbits.RA4 = 0;
  1721  003BEC  9892               	bcf	146,4,c	;volatile
  1722  003BEE                     
  1723                           ;pin_manager.c: 57: TRISAbits.TRISA5 = 0;
  1724  003BEE  9A92               	bcf	146,5,c	;volatile
  1725  003BF0                     
  1726                           ;pin_manager.c: 58: TRISCbits.RC0 = 0;
  1727  003BF0  9094               	bcf	148,0,c	;volatile
  1728  003BF2                     
  1729                           ;pin_manager.c: 59: TRISCbits.RC1 = 0;
  1730  003BF2  9294               	bcf	148,1,c	;volatile
  1731  003BF4                     
  1732                           ;pin_manager.c: 60: TRISCbits.RC6 = 0;
  1733  003BF4  9C94               	bcf	148,6,c	;volatile
  1734  003BF6                     
  1735                           ;pin_manager.c: 61: TRISCbits.RC7 = 0;
  1736  003BF6  9E94               	bcf	148,7,c	;volatile
  1737                           
  1738                           ;pin_manager.c: 81: ADCON1 = 0x0e;
  1739  003BF8  0E0E               	movlw	14
  1740  003BFA  6EC1               	movwf	193,c	;volatile
  1741  003BFC                     
  1742                           ;pin_manager.c: 89: INTCON2bits.nRBPU = 1;
  1743  003BFC  8EF1               	bsf	241,7,c	;volatile
  1744  003BFE  0012               	return		;funcret
  1745  003C00                     __end_of_PIN_MANAGER_Initialize:
  1746                           	callstack 0
  1747                           
  1748 ;; *************** function _OscInit *****************
  1749 ;; Defined at:
  1750 ;;		line 16 in file "SysInit.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;		None
  1753 ;; Auto vars:     Size  Location     Type
  1754 ;;		None
  1755 ;; Return value:  Size  Location     Type
  1756 ;;                  1    wreg      void 
  1757 ;; Registers used:
  1758 ;;		wreg, status,2
  1759 ;; Tracked objects:
  1760 ;;		On entry : 0/0
  1761 ;;		On exit  : 0/0
  1762 ;;		Unchanged: 0/0
  1763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1764 ;;      Params:         0       0       0       0       0       0       0       0       0
  1765 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1767 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1768 ;;Total ram usage:        0 bytes
  1769 ;; Hardware stack levels used:    1
  1770 ;; Hardware stack levels required when called:    3
  1771 ;; This function calls:
  1772 ;;		Nothing
  1773 ;; This function is called by:
  1774 ;;		_SysInit
  1775 ;; This function uses a non-reentrant model
  1776 ;;
  1777                           
  1778                           	psect	text6
  1779  003D48                     __ptext6:
  1780                           	callstack 0
  1781  003D48                     _OscInit:
  1782                           	callstack 26
  1783  003D48                     
  1784                           ;SysInit.c: 21: OSCCON = 0x10;
  1785  003D48  0E10               	movlw	16
  1786  003D4A  6ED3               	movwf	211,c	;volatile
  1787                           
  1788                           ;SysInit.c: 31: OSCTUNE = 0x00;
  1789  003D4C  0E00               	movlw	0
  1790  003D4E  6E9B               	movwf	155,c	;volatile
  1791  003D50  0012               	return		;funcret
  1792  003D52                     __end_of_OscInit:
  1793                           	callstack 0
  1794                           
  1795 ;; *************** function _StartDepthDetection *****************
  1796 ;; Defined at:
  1797 ;;		line 19 in file "DepthDetection.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;		None
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;		None
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg, status,2, cstack
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1811 ;;      Params:         0       0       0       0       0       0       0       0       0
  1812 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1814 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1815 ;;Total ram usage:        0 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    4
  1818 ;; This function calls:
  1819 ;;		_CCP1_Activate
  1820 ;; This function is called by:
  1821 ;;		_main
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           	psect	text7
  1826  003C9A                     __ptext7:
  1827                           	callstack 0
  1828  003C9A                     _StartDepthDetection:
  1829                           	callstack 26
  1830  003C9A                     
  1831                           ;DepthDetection.c: 25: TMR2 = 0;
  1832  003C9A  0E00               	movlw	0
  1833  003C9C  6ECC               	movwf	204,c	;volatile
  1834  003C9E                     
  1835                           ;DepthDetection.c: 26: PIR1bits.TMR2IF = 0;
  1836  003C9E  929E               	bcf	158,1,c	;volatile
  1837  003CA0                     
  1838                           ;DepthDetection.c: 27: PIE1bits.TMR2IE = 1;
  1839  003CA0  829D               	bsf	157,1,c	;volatile
  1840  003CA2                     
  1841                           ;DepthDetection.c: 28: T2CONbits.TMR2ON = 1;
  1842  003CA2  84CA               	bsf	202,2,c	;volatile
  1843  003CA4                     
  1844                           ;DepthDetection.c: 29: CCP1_Activate();
  1845  003CA4  EC69  F01E         	call	_CCP1_Activate	;wreg free
  1846  003CA8                     
  1847                           ;DepthDetection.c: 30: LATAbits.LATA5 = 0;
  1848  003CA8  9A89               	bcf	137,5,c	;volatile
  1849  003CAA                     
  1850                           ;DepthDetection.c: 31: T1CONbits.TMR1ON = 1;
  1851  003CAA  80CD               	bsf	205,0,c	;volatile
  1852  003CAC  0012               	return		;funcret
  1853  003CAE                     __end_of_StartDepthDetection:
  1854                           	callstack 0
  1855                           
  1856 ;; *************** function _CCP1_Activate *****************
  1857 ;; Defined at:
  1858 ;;		line 49 in file "CCP1.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, status,2
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1872 ;;      Params:         0       0       0       0       0       0       0       0       0
  1873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1875 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1876 ;;Total ram usage:        0 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    3
  1879 ;; This function calls:
  1880 ;;		Nothing
  1881 ;; This function is called by:
  1882 ;;		_StartDepthDetection
  1883 ;; This function uses a non-reentrant model
  1884 ;;
  1885                           
  1886                           	psect	text8
  1887  003CD2                     __ptext8:
  1888                           	callstack 0
  1889  003CD2                     _CCP1_Activate:
  1890                           	callstack 26
  1891  003CD2                     
  1892                           ;CCP1.c: 51: CCPR1H = 0;
  1893  003CD2  0E00               	movlw	0
  1894  003CD4  6EBF               	movwf	191,c	;volatile
  1895                           
  1896                           ;CCP1.c: 52: CCPR1L = 0;
  1897  003CD6  0E00               	movlw	0
  1898  003CD8  6EBE               	movwf	190,c	;volatile
  1899                           
  1900                           ;CCP1.c: 53: CCP1CON = 0x04;
  1901  003CDA  0E04               	movlw	4
  1902  003CDC  6EBD               	movwf	189,c	;volatile
  1903  003CDE                     
  1904                           ;CCP1.c: 54: PIR1bits.CCP1IF = 0;
  1905  003CDE  949E               	bcf	158,2,c	;volatile
  1906  003CE0                     
  1907                           ;CCP1.c: 55: PIE1bits.CCP1IE = 1;
  1908  003CE0  849D               	bsf	157,2,c	;volatile
  1909  003CE2  0012               	return		;funcret
  1910  003CE4                     __end_of_CCP1_Activate:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function _LCD_Init *****************
  1914 ;; Defined at:
  1915 ;;		line 12 in file "LCD.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;		None
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  iCmd            1    0        unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg, status,2, status,0, cstack
  1924 ;; Tracked objects:
  1925 ;;		On entry : 0/0
  1926 ;;		On exit  : 0/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1929 ;;      Params:         0       0       0       0       0       0       0       0       0
  1930 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1931 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1932 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1933 ;;Total ram usage:        2 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; Hardware stack levels required when called:    4
  1936 ;; This function calls:
  1937 ;;		_LCD_WriteCmd
  1938 ;; This function is called by:
  1939 ;;		_main
  1940 ;; This function uses a non-reentrant model
  1941 ;;
  1942                           
  1943                           	psect	text9
  1944  003A76                     __ptext9:
  1945                           	callstack 0
  1946  003A76                     _LCD_Init:
  1947                           	callstack 26
  1948  003A76                     
  1949                           ;LCD.c: 14: uint8_t iCmd;;LCD.c: 16: _delay((unsigned long)((15)*(8000000/4000.0)));
  1950  003A76  0E27               	movlw	39
  1951  003A78  6E07               	movwf	??_LCD_Init^0,c
  1952  003A7A  0EF5               	movlw	245
  1953  003A7C                     u4397:
  1954  003A7C  2EE8               	decfsz	wreg,f,c
  1955  003A7E  D7FE               	bra	u4397
  1956  003A80  2E07               	decfsz	??_LCD_Init^0,f,c
  1957  003A82  D7FC               	bra	u4397
  1958  003A84  F000               	nop	
  1959  003A86                     
  1960                           ;LCD.c: 18: LCD_WriteCmd (iCmd, 40+10);
  1961  003A86  0E00               	movlw	0
  1962  003A88  6E02               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1963  003A8A  0E32               	movlw	50
  1964  003A8C  6E01               	movwf	LCD_WriteCmd@iDelay^0,c
  1965  003A8E  0E3C               	movlw	60
  1966  003A90  EC73  F01C         	call	_LCD_WriteCmd
  1967  003A94                     
  1968                           ;LCD.c: 22: LCD_WriteCmd (iCmd, 40+10);
  1969  003A94  0E00               	movlw	0
  1970  003A96  6E02               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1971  003A98  0E32               	movlw	50
  1972  003A9A  6E01               	movwf	LCD_WriteCmd@iDelay^0,c
  1973  003A9C  0E08               	movlw	8
  1974  003A9E  EC73  F01C         	call	_LCD_WriteCmd
  1975  003AA2                     
  1976                           ;LCD.c: 25: LCD_WriteCmd (iCmd, 40+10);
  1977  003AA2  0E00               	movlw	0
  1978  003AA4  6E02               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1979  003AA6  0E32               	movlw	50
  1980  003AA8  6E01               	movwf	LCD_WriteCmd@iDelay^0,c
  1981  003AAA  0E06               	movlw	6
  1982  003AAC  EC73  F01C         	call	_LCD_WriteCmd
  1983  003AB0                     
  1984                           ;LCD.c: 27: LCD_WriteCmd (0x01, 2000);
  1985  003AB0  0E07               	movlw	7
  1986  003AB2  6E02               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1987  003AB4  0ED0               	movlw	208
  1988  003AB6  6E01               	movwf	LCD_WriteCmd@iDelay^0,c
  1989  003AB8  0E01               	movlw	1
  1990  003ABA  EC73  F01C         	call	_LCD_WriteCmd
  1991  003ABE                     
  1992                           ;LCD.c: 31: LCD_WriteCmd (iCmd, 40+10);
  1993  003ABE  0E00               	movlw	0
  1994  003AC0  6E02               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1995  003AC2  0E32               	movlw	50
  1996  003AC4  6E01               	movwf	LCD_WriteCmd@iDelay^0,c
  1997  003AC6  0E0C               	movlw	12
  1998  003AC8  EC73  F01C         	call	_LCD_WriteCmd
  1999  003ACC  0012               	return		;funcret
  2000  003ACE                     __end_of_LCD_Init:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function _InitTankVariables *****************
  2004 ;; Defined at:
  2005 ;;		line 73 in file "DepthDetection.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;		None
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;		None
  2010 ;; Return value:  Size  Location     Type
  2011 ;;                  1    wreg      void 
  2012 ;; Registers used:
  2013 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2014 ;; Tracked objects:
  2015 ;;		On entry : 0/0
  2016 ;;		On exit  : 0/0
  2017 ;;		Unchanged: 0/0
  2018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2019 ;;      Params:         0       0       0       0       0       0       0       0       0
  2020 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2021 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2022 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2023 ;;Total ram usage:        4 bytes
  2024 ;; Hardware stack levels used:    1
  2025 ;; Hardware stack levels required when called:    8
  2026 ;; This function calls:
  2027 ;;		___flmul
  2028 ;;		_pow
  2029 ;;		_sqrt
  2030 ;; This function is called by:
  2031 ;;		_main
  2032 ;; This function uses a non-reentrant model
  2033 ;;
  2034                           
  2035                           	psect	text10
  2036  002DB8                     __ptext10:
  2037                           	callstack 0
  2038  002DB8                     _InitTankVariables:
  2039                           	callstack 22
  2040  002DB8                     
  2041                           ;DepthDetection.c: 75: gd_TankSurfArea_mm2 = 3.1416926f * pow(48 * 25.4 / 2, 2);
  2042  002DB8  0E00               	movlw	0
  2043  002DBA  0100               	movlb	0	; () banked
  2044  002DBC  6F98               	movwf	pow@y& (0+255),b
  2045  002DBE  0E00               	movlw	0
  2046  002DC0  6F99               	movwf	(pow@y+1)& (0+255),b
  2047  002DC2  0E00               	movlw	0
  2048  002DC4  6F9A               	movwf	(pow@y+2)& (0+255),b
  2049  002DC6  0E40               	movlw	64
  2050  002DC8  6F9B               	movwf	(pow@y+3)& (0+255),b
  2051  002DCA  0E66               	movlw	102
  2052  002DCC  6F94               	movwf	pow@x& (0+255),b
  2053  002DCE  0E66               	movlw	102
  2054  002DD0  6F95               	movwf	(pow@x+1)& (0+255),b
  2055  002DD2  0E18               	movlw	24
  2056  002DD4  6F96               	movwf	(pow@x+2)& (0+255),b
  2057  002DD6  0E44               	movlw	68
  2058  002DD8  6F97               	movwf	(pow@x+3)& (0+255),b
  2059  002DDA  EC37  F012         	call	_pow	;wreg free
  2060  002DDE  C094  F0A9         	movff	?_pow,_InitTankVariables$2692
  2061  002DE2  C095  F0AA         	movff	?_pow+1,_InitTankVariables$2692+1
  2062  002DE6  C096  F0AB         	movff	?_pow+2,_InitTankVariables$2692+2
  2063  002DEA  C097  F0AC         	movff	?_pow+3,_InitTankVariables$2692+3
  2064  002DEE                     
  2065                           ;DepthDetection.c: 75: gd_TankSurfArea_mm2 = 3.1416926f * pow(48 * 25.4 / 2, 2);
  2066  002DEE  C0A9  F056         	movff	_InitTankVariables$2692,___flmul@b
  2067  002DF2  C0AA  F057         	movff	_InitTankVariables$2692+1,___flmul@b+1
  2068  002DF6  C0AB  F058         	movff	_InitTankVariables$2692+2,___flmul@b+2
  2069  002DFA  C0AC  F059         	movff	_InitTankVariables$2692+3,___flmul@b+3
  2070  002DFE  0E7E               	movlw	126
  2071  002E00  6E5A               	movwf	___flmul@a^0,c
  2072  002E02  0E11               	movlw	17
  2073  002E04  6E5B               	movwf	(___flmul@a+1)^0,c
  2074  002E06  0E49               	movlw	73
  2075  002E08  6E5C               	movwf	(___flmul@a+2)^0,c
  2076  002E0A  0E40               	movlw	64
  2077  002E0C  6E5D               	movwf	(___flmul@a+3)^0,c
  2078  002E0E  ECA5  F006         	call	___flmul	;wreg free
  2079  002E12  C056  F0BD         	movff	?___flmul,_gd_TankSurfArea_mm2
  2080  002E16  C057  F0BE         	movff	?___flmul+1,_gd_TankSurfArea_mm2+1
  2081  002E1A  C058  F0BF         	movff	?___flmul+2,_gd_TankSurfArea_mm2+2
  2082  002E1E  C059  F0C0         	movff	?___flmul+3,_gd_TankSurfArea_mm2+3
  2083  002E22                     
  2084                           ;DepthDetection.c: 76: gd_SensorHeight_mm = 72 * 25.4;
  2085  002E22  0E9A               	movlw	154
  2086  002E24  0100               	movlb	0	; () banked
  2087  002E26  6FB9               	movwf	_gd_SensorHeight_mm& (0+255),b
  2088  002E28  0E99               	movlw	153
  2089  002E2A  6FBA               	movwf	(_gd_SensorHeight_mm+1)& (0+255),b
  2090  002E2C  0EE4               	movlw	228
  2091  002E2E  6FBB               	movwf	(_gd_SensorHeight_mm+2)& (0+255),b
  2092  002E30  0E44               	movlw	68
  2093  002E32  6FBC               	movwf	(_gd_SensorHeight_mm+3)& (0+255),b
  2094  002E34                     
  2095                           ; BSR set to: 0
  2096                           ;DepthDetection.c: 77: gd_TankGalsPer_mm = gd_TankSurfArea_mm2 * 264.172052e-9;
  2097  002E34  C0BD  F056         	movff	_gd_TankSurfArea_mm2,___flmul@b
  2098  002E38  C0BE  F057         	movff	_gd_TankSurfArea_mm2+1,___flmul@b+1
  2099  002E3C  C0BF  F058         	movff	_gd_TankSurfArea_mm2+2,___flmul@b+2
  2100  002E40  C0C0  F059         	movff	_gd_TankSurfArea_mm2+3,___flmul@b+3
  2101  002E44  0E88               	movlw	136
  2102  002E46  6E5A               	movwf	___flmul@a^0,c
  2103  002E48  0ED3               	movlw	211
  2104  002E4A  6E5B               	movwf	(___flmul@a+1)^0,c
  2105  002E4C  0E8D               	movlw	141
  2106  002E4E  6E5C               	movwf	(___flmul@a+2)^0,c
  2107  002E50  0E34               	movlw	52
  2108  002E52  6E5D               	movwf	(___flmul@a+3)^0,c
  2109  002E54  ECA5  F006         	call	___flmul	;wreg free
  2110  002E58  C056  F0B5         	movff	?___flmul,_gd_TankGalsPer_mm
  2111  002E5C  C057  F0B6         	movff	?___flmul+1,_gd_TankGalsPer_mm+1
  2112  002E60  C058  F0B7         	movff	?___flmul+2,_gd_TankGalsPer_mm+2
  2113  002E64  C059  F0B8         	movff	?___flmul+3,_gd_TankGalsPer_mm+3
  2114  002E68                     
  2115                           ;DepthDetection.c: 78: gd_MaxWaterHeight_mm = 68 * 25.4;
  2116  002E68  0E66               	movlw	102
  2117  002E6A  0100               	movlb	0	; () banked
  2118  002E6C  6FB1               	movwf	_gd_MaxWaterHeight_mm& (0+255),b
  2119  002E6E  0EE6               	movlw	230
  2120  002E70  6FB2               	movwf	(_gd_MaxWaterHeight_mm+1)& (0+255),b
  2121  002E72  0ED7               	movlw	215
  2122  002E74  6FB3               	movwf	(_gd_MaxWaterHeight_mm+2)& (0+255),b
  2123  002E76  0E44               	movlw	68
  2124  002E78  6FB4               	movwf	(_gd_MaxWaterHeight_mm+3)& (0+255),b
  2125  002E7A                     
  2126                           ; BSR set to: 0
  2127                           ;DepthDetection.c: 79: gd_Default_SOS = 331.3e3 * sqrt( 1 + (20.0 / 273.15));
  2128  002E7A  0E45               	movlw	69
  2129  002E7C  6E2A               	movwf	sqrt@a^0,c
  2130  002E7E  0E5F               	movlw	95
  2131  002E80  6E2B               	movwf	(sqrt@a+1)^0,c
  2132  002E82  0E89               	movlw	137
  2133  002E84  6E2C               	movwf	(sqrt@a+2)^0,c
  2134  002E86  0E3F               	movlw	63
  2135  002E88  6E2D               	movwf	(sqrt@a+3)^0,c
  2136  002E8A  EC68  F00C         	call	_sqrt	;wreg free
  2137  002E8E  C02A  F056         	movff	?_sqrt,___flmul@b
  2138  002E92  C02B  F057         	movff	?_sqrt+1,___flmul@b+1
  2139  002E96  C02C  F058         	movff	?_sqrt+2,___flmul@b+2
  2140  002E9A  C02D  F059         	movff	?_sqrt+3,___flmul@b+3
  2141  002E9E  0E80               	movlw	128
  2142  002EA0  6E5A               	movwf	___flmul@a^0,c
  2143  002EA2  0EC4               	movlw	196
  2144  002EA4  6E5B               	movwf	(___flmul@a+1)^0,c
  2145  002EA6  0EA1               	movlw	161
  2146  002EA8  6E5C               	movwf	(___flmul@a+2)^0,c
  2147  002EAA  0E48               	movlw	72
  2148  002EAC  6E5D               	movwf	(___flmul@a+3)^0,c
  2149  002EAE  ECA5  F006         	call	___flmul	;wreg free
  2150  002EB2  C056  F100         	movff	?___flmul,_gd_Default_SOS
  2151  002EB6  C057  F101         	movff	?___flmul+1,_gd_Default_SOS+1
  2152  002EBA  C058  F102         	movff	?___flmul+2,_gd_Default_SOS+2
  2153  002EBE  C059  F103         	movff	?___flmul+3,_gd_Default_SOS+3
  2154  002EC2  0012               	return		;funcret
  2155  002EC4                     __end_of_InitTankVariables:
  2156                           	callstack 0
  2157                           
  2158 ;; *************** function _pow *****************
  2159 ;; Defined at:
  2160 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\pow.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  x               4   52[BANK0 ] void 
  2163 ;;  y               4   56[BANK0 ] void 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  yi              4   69[BANK0 ] unsigned long 
  2166 ;;  sign            1   68[BANK0 ] unsigned char 
  2167 ;; Return value:  Size  Location     Type
  2168 ;;                  4   52[BANK0 ] unsigned char 
  2169 ;; Registers used:
  2170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2171 ;; Tracked objects:
  2172 ;;		On entry : 0/0
  2173 ;;		On exit  : 0/0
  2174 ;;		Unchanged: 0/0
  2175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2176 ;;      Params:         0       8       0       0       0       0       0       0       0
  2177 ;;      Locals:         0      13       0       0       0       0       0       0       0
  2178 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2179 ;;      Totals:         0      21       0       0       0       0       0       0       0
  2180 ;;Total ram usage:       21 bytes
  2181 ;; Hardware stack levels used:    1
  2182 ;; Hardware stack levels required when called:    7
  2183 ;; This function calls:
  2184 ;;		___fleq
  2185 ;;		___flge
  2186 ;;		___flmul
  2187 ;;		___flneg
  2188 ;;		___fltol
  2189 ;;		___xxtofl
  2190 ;;		_exp
  2191 ;;		_log
  2192 ;; This function is called by:
  2193 ;;		_InitTankVariables
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text11
  2198  00246E                     __ptext11:
  2199                           	callstack 0
  2200  00246E                     _pow:
  2201                           	callstack 22
  2202  00246E  0E00               	movlw	0
  2203  002470  0100               	movlb	0	; () banked
  2204  002472  6FA4               	movwf	pow@sign& (0+255),b
  2205  002474                     
  2206                           ; BSR set to: 0
  2207  002474  C094  F042         	movff	pow@x,___fleq@ff1
  2208  002478  C095  F043         	movff	pow@x+1,___fleq@ff1+1
  2209  00247C  C096  F044         	movff	pow@x+2,___fleq@ff1+2
  2210  002480  C097  F045         	movff	pow@x+3,___fleq@ff1+3
  2211  002484  0E00               	movlw	0
  2212  002486  6E46               	movwf	___fleq@ff2^0,c
  2213  002488  0E00               	movlw	0
  2214  00248A  6E47               	movwf	(___fleq@ff2+1)^0,c
  2215  00248C  0E00               	movlw	0
  2216  00248E  6E48               	movwf	(___fleq@ff2+2)^0,c
  2217  002490  0E00               	movlw	0
  2218  002492  6E49               	movwf	(___fleq@ff2+3)^0,c
  2219  002494  ECDB  F01A         	call	___fleq	;wreg free
  2220  002498  A0D8               	btfss	status,0,c
  2221  00249A  EF51  F012         	goto	u4011
  2222  00249E  EF53  F012         	goto	u4010
  2223  0024A2                     u4011:
  2224  0024A2  EF7C  F012         	goto	l4817
  2225  0024A6                     u4010:
  2226  0024A6  0E00               	movlw	0
  2227  0024A8  6E01               	movwf	___flge@ff1^0,c
  2228  0024AA  0E00               	movlw	0
  2229  0024AC  6E02               	movwf	(___flge@ff1+1)^0,c
  2230  0024AE  0E00               	movlw	0
  2231  0024B0  6E03               	movwf	(___flge@ff1+2)^0,c
  2232  0024B2  0E00               	movlw	0
  2233  0024B4  6E04               	movwf	(___flge@ff1+3)^0,c
  2234  0024B6  C098  F005         	movff	pow@y,___flge@ff2
  2235  0024BA  C099  F006         	movff	pow@y+1,___flge@ff2+1
  2236  0024BE  C09A  F007         	movff	pow@y+2,___flge@ff2+2
  2237  0024C2  C09B  F008         	movff	pow@y+3,___flge@ff2+3
  2238  0024C6  ECE5  F017         	call	___flge	;wreg free
  2239  0024CA  A0D8               	btfss	status,0,c
  2240  0024CC  EF6A  F012         	goto	u4021
  2241  0024D0  EF6C  F012         	goto	u4020
  2242  0024D4                     u4021:
  2243  0024D4  EF71  F012         	goto	l1880
  2244  0024D8                     u4020:
  2245  0024D8  0E00               	movlw	0
  2246  0024DA  0100               	movlb	0	; () banked
  2247  0024DC  6FD2               	movwf	(_errno+1)& (0+255),b
  2248  0024DE  0E21               	movlw	33
  2249  0024E0  6FD1               	movwf	_errno& (0+255),b
  2250  0024E2                     l1880:
  2251  0024E2  0E00               	movlw	0
  2252  0024E4  0100               	movlb	0	; () banked
  2253  0024E6  6F94               	movwf	?_pow& (0+255),b
  2254  0024E8  0E00               	movlw	0
  2255  0024EA  6F95               	movwf	(?_pow+1)& (0+255),b
  2256  0024EC  0E00               	movlw	0
  2257  0024EE  6F96               	movwf	(?_pow+2)& (0+255),b
  2258  0024F0  0E00               	movlw	0
  2259  0024F2  6F97               	movwf	(?_pow+3)& (0+255),b
  2260  0024F4  EF66  F013         	goto	l1881
  2261  0024F8                     l4817:
  2262  0024F8  C098  F042         	movff	pow@y,___fleq@ff1
  2263  0024FC  C099  F043         	movff	pow@y+1,___fleq@ff1+1
  2264  002500  C09A  F044         	movff	pow@y+2,___fleq@ff1+2
  2265  002504  C09B  F045         	movff	pow@y+3,___fleq@ff1+3
  2266  002508  0E00               	movlw	0
  2267  00250A  6E46               	movwf	___fleq@ff2^0,c
  2268  00250C  0E00               	movlw	0
  2269  00250E  6E47               	movwf	(___fleq@ff2+1)^0,c
  2270  002510  0E00               	movlw	0
  2271  002512  6E48               	movwf	(___fleq@ff2+2)^0,c
  2272  002514  0E00               	movlw	0
  2273  002516  6E49               	movwf	(___fleq@ff2+3)^0,c
  2274  002518  ECDB  F01A         	call	___fleq	;wreg free
  2275  00251C  A0D8               	btfss	status,0,c
  2276  00251E  EF93  F012         	goto	u4031
  2277  002522  EF95  F012         	goto	u4030
  2278  002526                     u4031:
  2279  002526  EFA0  F012         	goto	l4823
  2280  00252A                     u4030:
  2281  00252A  0E00               	movlw	0
  2282  00252C  0100               	movlb	0	; () banked
  2283  00252E  6F94               	movwf	?_pow& (0+255),b
  2284  002530  0E00               	movlw	0
  2285  002532  6F95               	movwf	(?_pow+1)& (0+255),b
  2286  002534  0E80               	movlw	128
  2287  002536  6F96               	movwf	(?_pow+2)& (0+255),b
  2288  002538  0E3F               	movlw	63
  2289  00253A  6F97               	movwf	(?_pow+3)& (0+255),b
  2290  00253C  EF66  F013         	goto	l1881
  2291  002540                     l4823:
  2292  002540  0100               	movlb	0	; () banked
  2293  002542  BF97               	btfsc	(pow@x+3)& (0+255),7,b
  2294  002544  EFA8  F012         	goto	u4040
  2295  002548  EFA6  F012         	goto	u4041
  2296  00254C                     u4041:
  2297  00254C  EF03  F013         	goto	l4835
  2298  002550                     u4040:
  2299  002550                     
  2300                           ; BSR set to: 0
  2301  002550  C098  F02A         	movff	pow@y,___fltol@f1
  2302  002554  C099  F02B         	movff	pow@y+1,___fltol@f1+1
  2303  002558  C09A  F02C         	movff	pow@y+2,___fltol@f1+2
  2304  00255C  C09B  F02D         	movff	pow@y+3,___fltol@f1+3
  2305  002560  EC62  F017         	call	___fltol	;wreg free
  2306  002564  C02A  F0A5         	movff	?___fltol,pow@yi
  2307  002568  C02B  F0A6         	movff	?___fltol+1,pow@yi+1
  2308  00256C  C02C  F0A7         	movff	?___fltol+2,pow@yi+2
  2309  002570  C02D  F0A8         	movff	?___fltol+3,pow@yi+3
  2310  002574  C0A5  F034         	movff	pow@yi,___xxtofl@val
  2311  002578  C0A6  F035         	movff	pow@yi+1,___xxtofl@val+1
  2312  00257C  C0A7  F036         	movff	pow@yi+2,___xxtofl@val+2
  2313  002580  C0A8  F037         	movff	pow@yi+3,___xxtofl@val+3
  2314  002584  0E00               	movlw	0
  2315  002586  EC67  F013         	call	___xxtofl
  2316  00258A  C034  F042         	movff	?___xxtofl,___fleq@ff1
  2317  00258E  C035  F043         	movff	?___xxtofl+1,___fleq@ff1+1
  2318  002592  C036  F044         	movff	?___xxtofl+2,___fleq@ff1+2
  2319  002596  C037  F045         	movff	?___xxtofl+3,___fleq@ff1+3
  2320  00259A  C098  F046         	movff	pow@y,___fleq@ff2
  2321  00259E  C099  F047         	movff	pow@y+1,___fleq@ff2+1
  2322  0025A2  C09A  F048         	movff	pow@y+2,___fleq@ff2+2
  2323  0025A6  C09B  F049         	movff	pow@y+3,___fleq@ff2+3
  2324  0025AA  ECDB  F01A         	call	___fleq	;wreg free
  2325  0025AE  B0D8               	btfsc	status,0,c
  2326  0025B0  EFDC  F012         	goto	u4051
  2327  0025B4  EFDE  F012         	goto	u4050
  2328  0025B8                     u4051:
  2329  0025B8  EFED  F012         	goto	l4831
  2330  0025BC                     u4050:
  2331  0025BC  0E00               	movlw	0
  2332  0025BE  0100               	movlb	0	; () banked
  2333  0025C0  6FD2               	movwf	(_errno+1)& (0+255),b
  2334  0025C2  0E21               	movlw	33
  2335  0025C4  6FD1               	movwf	_errno& (0+255),b
  2336  0025C6  0E00               	movlw	0
  2337  0025C8  6F94               	movwf	?_pow& (0+255),b
  2338  0025CA  0E00               	movlw	0
  2339  0025CC  6F95               	movwf	(?_pow+1)& (0+255),b
  2340  0025CE  0E00               	movlw	0
  2341  0025D0  6F96               	movwf	(?_pow+2)& (0+255),b
  2342  0025D2  0E00               	movlw	0
  2343  0025D4  6F97               	movwf	(?_pow+3)& (0+255),b
  2344  0025D6  EF66  F013         	goto	l1881
  2345  0025DA                     l4831:
  2346  0025DA  0100               	movlb	0	; () banked
  2347  0025DC  51A5               	movf	pow@yi& (0+255),w,b
  2348  0025DE  0B01               	andlw	1
  2349  0025E0  6FA4               	movwf	pow@sign& (0+255),b
  2350  0025E2                     
  2351                           ; BSR set to: 0
  2352  0025E2  C094  F001         	movff	pow@x,___flneg@f1
  2353  0025E6  C095  F002         	movff	pow@x+1,___flneg@f1+1
  2354  0025EA  C096  F003         	movff	pow@x+2,___flneg@f1+2
  2355  0025EE  C097  F004         	movff	pow@x+3,___flneg@f1+3
  2356  0025F2  ECB3  F01D         	call	___flneg	;wreg free
  2357  0025F6  C001  F094         	movff	?___flneg,pow@x
  2358  0025FA  C002  F095         	movff	?___flneg+1,pow@x+1
  2359  0025FE  C003  F096         	movff	?___flneg+2,pow@x+2
  2360  002602  C004  F097         	movff	?___flneg+3,pow@x+3
  2361  002606                     l4835:
  2362  002606  C094  F081         	movff	pow@x,log@x
  2363  00260A  C095  F082         	movff	pow@x+1,log@x+1
  2364  00260E  C096  F083         	movff	pow@x+2,log@x+2
  2365  002612  C097  F084         	movff	pow@x+3,log@x+3
  2366  002616  EC41  F014         	call	_log	;wreg free
  2367  00261A  C081  F09C         	movff	?_log,_pow$2694
  2368  00261E  C082  F09D         	movff	?_log+1,_pow$2694+1
  2369  002622  C083  F09E         	movff	?_log+2,_pow$2694+2
  2370  002626  C084  F09F         	movff	?_log+3,_pow$2694+3
  2371  00262A  C09C  F056         	movff	_pow$2694,___flmul@b
  2372  00262E  C09D  F057         	movff	_pow$2694+1,___flmul@b+1
  2373  002632  C09E  F058         	movff	_pow$2694+2,___flmul@b+2
  2374  002636  C09F  F059         	movff	_pow$2694+3,___flmul@b+3
  2375  00263A  C098  F05A         	movff	pow@y,___flmul@a
  2376  00263E  C099  F05B         	movff	pow@y+1,___flmul@a+1
  2377  002642  C09A  F05C         	movff	pow@y+2,___flmul@a+2
  2378  002646  C09B  F05D         	movff	pow@y+3,___flmul@a+3
  2379  00264A  ECA5  F006         	call	___flmul	;wreg free
  2380  00264E  C056  F0A0         	movff	?___flmul,_pow$2695
  2381  002652  C057  F0A1         	movff	?___flmul+1,_pow$2695+1
  2382  002656  C058  F0A2         	movff	?___flmul+2,_pow$2695+2
  2383  00265A  C059  F0A3         	movff	?___flmul+3,_pow$2695+3
  2384  00265E  C0A0  F089         	movff	_pow$2695,exp@x
  2385  002662  C0A1  F08A         	movff	_pow$2695+1,exp@x+1
  2386  002666  C0A2  F08B         	movff	_pow$2695+2,exp@x+2
  2387  00266A  C0A3  F08C         	movff	_pow$2695+3,exp@x+3
  2388  00266E  EC77  F00F         	call	_exp	;wreg free
  2389  002672  C089  F094         	movff	?_exp,pow@x
  2390  002676  C08A  F095         	movff	?_exp+1,pow@x+1
  2391  00267A  C08B  F096         	movff	?_exp+2,pow@x+2
  2392  00267E  C08C  F097         	movff	?_exp+3,pow@x+3
  2393  002682  0100               	movlb	0	; () banked
  2394  002684  51A4               	movf	pow@sign& (0+255),w,b
  2395  002686  B4D8               	btfsc	status,2,c
  2396  002688  EF48  F013         	goto	u4061
  2397  00268C  EF4A  F013         	goto	u4060
  2398  002690                     u4061:
  2399  002690  EF5E  F013         	goto	l1885
  2400  002694                     u4060:
  2401  002694                     
  2402                           ; BSR set to: 0
  2403  002694  C094  F001         	movff	pow@x,___flneg@f1
  2404  002698  C095  F002         	movff	pow@x+1,___flneg@f1+1
  2405  00269C  C096  F003         	movff	pow@x+2,___flneg@f1+2
  2406  0026A0  C097  F004         	movff	pow@x+3,___flneg@f1+3
  2407  0026A4  ECB3  F01D         	call	___flneg	;wreg free
  2408  0026A8  C001  F094         	movff	?___flneg,?_pow
  2409  0026AC  C002  F095         	movff	?___flneg+1,?_pow+1
  2410  0026B0  C003  F096         	movff	?___flneg+2,?_pow+2
  2411  0026B4  C004  F097         	movff	?___flneg+3,?_pow+3
  2412  0026B8  EF66  F013         	goto	l1881
  2413  0026BC                     l1885:
  2414                           
  2415                           ; BSR set to: 0
  2416  0026BC  C094  F094         	movff	pow@x,?_pow
  2417  0026C0  C095  F095         	movff	pow@x+1,?_pow+1
  2418  0026C4  C096  F096         	movff	pow@x+2,?_pow+2
  2419  0026C8  C097  F097         	movff	pow@x+3,?_pow+3
  2420  0026CC                     l1881:
  2421  0026CC  0012               	return		;funcret
  2422  0026CE                     __end_of_pow:
  2423                           	callstack 0
  2424                           
  2425 ;; *************** function _exp *****************
  2426 ;; Defined at:
  2427 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\exp.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  x               4   41[BANK0 ] unsigned char 
  2430 ;; Auto vars:     Size  Location     Type
  2431 ;;  exponent        2   49[BANK0 ] int 
  2432 ;;  sign            1   51[BANK0 ] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;                  4   41[BANK0 ] unsigned char 
  2435 ;; Registers used:
  2436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2442 ;;      Params:         0       4       0       0       0       0       0       0       0
  2443 ;;      Locals:         0       7       0       0       0       0       0       0       0
  2444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2445 ;;      Totals:         0      11       0       0       0       0       0       0       0
  2446 ;;Total ram usage:       11 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:    6
  2449 ;; This function calls:
  2450 ;;		___fldiv
  2451 ;;		___fleq
  2452 ;;		___flge
  2453 ;;		___flmul
  2454 ;;		___flneg
  2455 ;;		___flsub
  2456 ;;		___fltol
  2457 ;;		___xxtofl
  2458 ;;		_eval_poly
  2459 ;;		_floor
  2460 ;;		_ldexp
  2461 ;; This function is called by:
  2462 ;;		_pow
  2463 ;; This function uses a non-reentrant model
  2464 ;;
  2465                           
  2466                           	psect	text12
  2467  001EEE                     __ptext12:
  2468                           	callstack 0
  2469  001EEE                     _exp:
  2470                           	callstack 22
  2471  001EEE  C089  F042         	movff	exp@x,___fleq@ff1
  2472  001EF2  C08A  F043         	movff	exp@x+1,___fleq@ff1+1
  2473  001EF6  C08B  F044         	movff	exp@x+2,___fleq@ff1+2
  2474  001EFA  C08C  F045         	movff	exp@x+3,___fleq@ff1+3
  2475  001EFE  0E00               	movlw	0
  2476  001F00  6E46               	movwf	___fleq@ff2^0,c
  2477  001F02  0E00               	movlw	0
  2478  001F04  6E47               	movwf	(___fleq@ff2+1)^0,c
  2479  001F06  0E00               	movlw	0
  2480  001F08  6E48               	movwf	(___fleq@ff2+2)^0,c
  2481  001F0A  0E00               	movlw	0
  2482  001F0C  6E49               	movwf	(___fleq@ff2+3)^0,c
  2483  001F0E  ECDB  F01A         	call	___fleq	;wreg free
  2484  001F12  A0D8               	btfss	status,0,c
  2485  001F14  EF8E  F00F         	goto	u3801
  2486  001F18  EF90  F00F         	goto	u3800
  2487  001F1C                     u3801:
  2488  001F1C  EF9B  F00F         	goto	l4587
  2489  001F20                     u3800:
  2490  001F20  0E00               	movlw	0
  2491  001F22  0100               	movlb	0	; () banked
  2492  001F24  6F89               	movwf	?_exp& (0+255),b
  2493  001F26  0E00               	movlw	0
  2494  001F28  6F8A               	movwf	(?_exp+1)& (0+255),b
  2495  001F2A  0E80               	movlw	128
  2496  001F2C  6F8B               	movwf	(?_exp+2)& (0+255),b
  2497  001F2E  0E3F               	movlw	63
  2498  001F30  6F8C               	movwf	(?_exp+3)& (0+255),b
  2499  001F32  EFEA  F010         	goto	l1899
  2500  001F36                     l4587:
  2501  001F36  0E18               	movlw	24
  2502  001F38  6E01               	movwf	___flge@ff1^0,c
  2503  001F3A  0E72               	movlw	114
  2504  001F3C  6E02               	movwf	(___flge@ff1+1)^0,c
  2505  001F3E  0E31               	movlw	49
  2506  001F40  6E03               	movwf	(___flge@ff1+2)^0,c
  2507  001F42  0E44               	movlw	68
  2508  001F44  6E04               	movwf	(___flge@ff1+3)^0,c
  2509  001F46  C089  F005         	movff	exp@x,___flge@ff2
  2510  001F4A  C08A  F006         	movff	exp@x+1,___flge@ff2+1
  2511  001F4E  C08B  F007         	movff	exp@x+2,___flge@ff2+2
  2512  001F52  C08C  F008         	movff	exp@x+3,___flge@ff2+3
  2513  001F56  ECE5  F017         	call	___flge	;wreg free
  2514  001F5A  B0D8               	btfsc	status,0,c
  2515  001F5C  EFB2  F00F         	goto	u3811
  2516  001F60  EFB4  F00F         	goto	u3810
  2517  001F64                     u3811:
  2518  001F64  EFC3  F00F         	goto	l4593
  2519  001F68                     u3810:
  2520  001F68  0E00               	movlw	0
  2521  001F6A  0100               	movlb	0	; () banked
  2522  001F6C  6FD2               	movwf	(_errno+1)& (0+255),b
  2523  001F6E  0E22               	movlw	34
  2524  001F70  6FD1               	movwf	_errno& (0+255),b
  2525  001F72  0EFF               	movlw	255
  2526  001F74  6F89               	movwf	?_exp& (0+255),b
  2527  001F76  0EFF               	movlw	255
  2528  001F78  6F8A               	movwf	(?_exp+1)& (0+255),b
  2529  001F7A  0E7F               	movlw	127
  2530  001F7C  6F8B               	movwf	(?_exp+2)& (0+255),b
  2531  001F7E  0E7F               	movlw	127
  2532  001F80  6F8C               	movwf	(?_exp+3)& (0+255),b
  2533  001F82  EFEA  F010         	goto	l1899
  2534  001F86                     l4593:
  2535  001F86  C089  F001         	movff	exp@x,___flge@ff1
  2536  001F8A  C08A  F002         	movff	exp@x+1,___flge@ff1+1
  2537  001F8E  C08B  F003         	movff	exp@x+2,___flge@ff1+2
  2538  001F92  C08C  F004         	movff	exp@x+3,___flge@ff1+3
  2539  001F96  0E87               	movlw	135
  2540  001F98  6E05               	movwf	___flge@ff2^0,c
  2541  001F9A  0E48               	movlw	72
  2542  001F9C  6E06               	movwf	(___flge@ff2+1)^0,c
  2543  001F9E  0E3A               	movlw	58
  2544  001FA0  6E07               	movwf	(___flge@ff2+2)^0,c
  2545  001FA2  0EC4               	movlw	196
  2546  001FA4  6E08               	movwf	(___flge@ff2+3)^0,c
  2547  001FA6  ECE5  F017         	call	___flge	;wreg free
  2548  001FAA  B0D8               	btfsc	status,0,c
  2549  001FAC  EFDA  F00F         	goto	u3821
  2550  001FB0  EFDC  F00F         	goto	u3820
  2551  001FB4                     u3821:
  2552  001FB4  EFEB  F00F         	goto	l4599
  2553  001FB8                     u3820:
  2554  001FB8  0E00               	movlw	0
  2555  001FBA  0100               	movlb	0	; () banked
  2556  001FBC  6FD2               	movwf	(_errno+1)& (0+255),b
  2557  001FBE  0E22               	movlw	34
  2558  001FC0  6FD1               	movwf	_errno& (0+255),b
  2559  001FC2  0E00               	movlw	0
  2560  001FC4  6F89               	movwf	?_exp& (0+255),b
  2561  001FC6  0E00               	movlw	0
  2562  001FC8  6F8A               	movwf	(?_exp+1)& (0+255),b
  2563  001FCA  0E00               	movlw	0
  2564  001FCC  6F8B               	movwf	(?_exp+2)& (0+255),b
  2565  001FCE  0E00               	movlw	0
  2566  001FD0  6F8C               	movwf	(?_exp+3)& (0+255),b
  2567  001FD2  EFEA  F010         	goto	l1899
  2568  001FD6                     l4599:
  2569  001FD6  0100               	movlb	0	; () banked
  2570  001FD8  BF8C               	btfsc	(exp@x+3)& (0+255),7,b
  2571  001FDA  EFF1  F00F         	goto	u3831
  2572  001FDE  EFF4  F00F         	goto	u3830
  2573  001FE2                     u3831:
  2574  001FE2  0E01               	movlw	1
  2575  001FE4  EFF5  F00F         	goto	u3840
  2576  001FE8                     u3830:
  2577  001FE8  0E00               	movlw	0
  2578  001FEA                     u3840:
  2579  001FEA  6F93               	movwf	exp@sign& (0+255),b
  2580  001FEC                     
  2581                           ; BSR set to: 0
  2582  001FEC  5193               	movf	exp@sign& (0+255),w,b
  2583  001FEE  B4D8               	btfsc	status,2,c
  2584  001FF0  EFFC  F00F         	goto	u3851
  2585  001FF4  EFFE  F00F         	goto	u3850
  2586  001FF8                     u3851:
  2587  001FF8  EF10  F010         	goto	l4605
  2588  001FFC                     u3850:
  2589  001FFC                     
  2590                           ; BSR set to: 0
  2591  001FFC  C089  F001         	movff	exp@x,___flneg@f1
  2592  002000  C08A  F002         	movff	exp@x+1,___flneg@f1+1
  2593  002004  C08B  F003         	movff	exp@x+2,___flneg@f1+2
  2594  002008  C08C  F004         	movff	exp@x+3,___flneg@f1+3
  2595  00200C  ECB3  F01D         	call	___flneg	;wreg free
  2596  002010  C001  F089         	movff	?___flneg,exp@x
  2597  002014  C002  F08A         	movff	?___flneg+1,exp@x+1
  2598  002018  C003  F08B         	movff	?___flneg+2,exp@x+2
  2599  00201C  C004  F08C         	movff	?___flneg+3,exp@x+3
  2600  002020                     l4605:
  2601  002020  C089  F056         	movff	exp@x,___flmul@b
  2602  002024  C08A  F057         	movff	exp@x+1,___flmul@b+1
  2603  002028  C08B  F058         	movff	exp@x+2,___flmul@b+2
  2604  00202C  C08C  F059         	movff	exp@x+3,___flmul@b+3
  2605  002030  0E3B               	movlw	59
  2606  002032  6E5A               	movwf	___flmul@a^0,c
  2607  002034  0EAA               	movlw	170
  2608  002036  6E5B               	movwf	(___flmul@a+1)^0,c
  2609  002038  0EB8               	movlw	184
  2610  00203A  6E5C               	movwf	(___flmul@a+2)^0,c
  2611  00203C  0E3F               	movlw	63
  2612  00203E  6E5D               	movwf	(___flmul@a+3)^0,c
  2613  002040  ECA5  F006         	call	___flmul	;wreg free
  2614  002044  C056  F089         	movff	?___flmul,exp@x
  2615  002048  C057  F08A         	movff	?___flmul+1,exp@x+1
  2616  00204C  C058  F08B         	movff	?___flmul+2,exp@x+2
  2617  002050  C059  F08C         	movff	?___flmul+3,exp@x+3
  2618  002054  C089  F056         	movff	exp@x,floor@x
  2619  002058  C08A  F057         	movff	exp@x+1,floor@x+1
  2620  00205C  C08B  F058         	movff	exp@x+2,floor@x+2
  2621  002060  C08C  F059         	movff	exp@x+3,floor@x+3
  2622  002064  EC10  F015         	call	_floor	;wreg free
  2623  002068  C056  F08D         	movff	?_floor,_exp$2696
  2624  00206C  C057  F08E         	movff	?_floor+1,_exp$2696+1
  2625  002070  C058  F08F         	movff	?_floor+2,_exp$2696+2
  2626  002074  C059  F090         	movff	?_floor+3,_exp$2696+3
  2627  002078  C08D  F02A         	movff	_exp$2696,___fltol@f1
  2628  00207C  C08E  F02B         	movff	_exp$2696+1,___fltol@f1+1
  2629  002080  C08F  F02C         	movff	_exp$2696+2,___fltol@f1+2
  2630  002084  C090  F02D         	movff	_exp$2696+3,___fltol@f1+3
  2631  002088  EC62  F017         	call	___fltol	;wreg free
  2632  00208C  C02A  F091         	movff	?___fltol,exp@exponent
  2633  002090  C02B  F092         	movff	?___fltol+1,exp@exponent+1
  2634  002094  C089  F066         	movff	exp@x,___flsub@b
  2635  002098  C08A  F067         	movff	exp@x+1,___flsub@b+1
  2636  00209C  C08B  F068         	movff	exp@x+2,___flsub@b+2
  2637  0020A0  C08C  F069         	movff	exp@x+3,___flsub@b+3
  2638  0020A4  C091  F034         	movff	exp@exponent,___xxtofl@val
  2639  0020A8  C092  F035         	movff	exp@exponent+1,___xxtofl@val+1
  2640  0020AC  0E00               	movlw	0
  2641  0020AE  BE35               	btfsc	(___xxtofl@val+1)^0,7,c
  2642  0020B0  0EFF               	movlw	-1
  2643  0020B2  6E36               	movwf	(___xxtofl@val+2)^0,c
  2644  0020B4  6E37               	movwf	(___xxtofl@val+3)^0,c
  2645  0020B6  0E01               	movlw	1
  2646  0020B8  EC67  F013         	call	___xxtofl
  2647  0020BC  C034  F06A         	movff	?___xxtofl,___flsub@a
  2648  0020C0  C035  F06B         	movff	?___xxtofl+1,___flsub@a+1
  2649  0020C4  C036  F06C         	movff	?___xxtofl+2,___flsub@a+2
  2650  0020C8  C037  F06D         	movff	?___xxtofl+3,___flsub@a+3
  2651  0020CC  EC8F  F01D         	call	___flsub	;wreg free
  2652  0020D0  C066  F089         	movff	?___flsub,exp@x
  2653  0020D4  C067  F08A         	movff	?___flsub+1,exp@x+1
  2654  0020D8  C068  F08B         	movff	?___flsub+2,exp@x+2
  2655  0020DC  C069  F08C         	movff	?___flsub+3,exp@x+3
  2656  0020E0  C089  F071         	movff	exp@x,eval_poly@x
  2657  0020E4  C08A  F072         	movff	exp@x+1,eval_poly@x+1
  2658  0020E8  C08B  F073         	movff	exp@x+2,eval_poly@x+2
  2659  0020EC  C08C  F074         	movff	exp@x+3,eval_poly@x+3
  2660  0020F0  0E0B               	movlw	low exp@coeff
  2661  0020F2  0100               	movlb	0	; () banked
  2662  0020F4  6F75               	movwf	eval_poly@d& (0+255),b
  2663  0020F6  0E08               	movlw	high exp@coeff
  2664  0020F8  6F76               	movwf	(eval_poly@d+1)& (0+255),b
  2665  0020FA  0E00               	movlw	0
  2666  0020FC  6F78               	movwf	(eval_poly@n+1)& (0+255),b
  2667  0020FE  0E09               	movlw	9
  2668  002100  6F77               	movwf	eval_poly@n& (0+255),b
  2669  002102  EC67  F018         	call	_eval_poly	;wreg free
  2670  002106  C071  F081         	movff	?_eval_poly,ldexp@value
  2671  00210A  C072  F082         	movff	?_eval_poly+1,ldexp@value+1
  2672  00210E  C073  F083         	movff	?_eval_poly+2,ldexp@value+2
  2673  002112  C074  F084         	movff	?_eval_poly+3,ldexp@value+3
  2674  002116  C091  F085         	movff	exp@exponent,ldexp@newexp
  2675  00211A  C092  F086         	movff	exp@exponent+1,ldexp@newexp+1
  2676  00211E  ECB1  F015         	call	_ldexp	;wreg free
  2677  002122  C081  F089         	movff	?_ldexp,exp@x
  2678  002126  C082  F08A         	movff	?_ldexp+1,exp@x+1
  2679  00212A  C083  F08B         	movff	?_ldexp+2,exp@x+2
  2680  00212E  C084  F08C         	movff	?_ldexp+3,exp@x+3
  2681  002132  0100               	movlb	0	; () banked
  2682  002134  5193               	movf	exp@sign& (0+255),w,b
  2683  002136  B4D8               	btfsc	status,2,c
  2684  002138  EFA0  F010         	goto	u3861
  2685  00213C  EFA2  F010         	goto	u3860
  2686  002140                     u3861:
  2687  002140  EFE2  F010         	goto	l1903
  2688  002144                     u3860:
  2689  002144                     
  2690                           ; BSR set to: 0
  2691  002144  C089  F042         	movff	exp@x,___fleq@ff1
  2692  002148  C08A  F043         	movff	exp@x+1,___fleq@ff1+1
  2693  00214C  C08B  F044         	movff	exp@x+2,___fleq@ff1+2
  2694  002150  C08C  F045         	movff	exp@x+3,___fleq@ff1+3
  2695  002154  0EFF               	movlw	255
  2696  002156  6E46               	movwf	___fleq@ff2^0,c
  2697  002158  0EFF               	movlw	255
  2698  00215A  6E47               	movwf	(___fleq@ff2+1)^0,c
  2699  00215C  0E7F               	movlw	127
  2700  00215E  6E48               	movwf	(___fleq@ff2+2)^0,c
  2701  002160  0E7F               	movlw	127
  2702  002162  6E49               	movwf	(___fleq@ff2+3)^0,c
  2703  002164  ECDB  F01A         	call	___fleq	;wreg free
  2704  002168  A0D8               	btfss	status,0,c
  2705  00216A  EFB9  F010         	goto	u3871
  2706  00216E  EFBB  F010         	goto	u3870
  2707  002172                     u3871:
  2708  002172  EFC6  F010         	goto	l4623
  2709  002176                     u3870:
  2710  002176  0E00               	movlw	0
  2711  002178  0100               	movlb	0	; () banked
  2712  00217A  6F89               	movwf	?_exp& (0+255),b
  2713  00217C  0E00               	movlw	0
  2714  00217E  6F8A               	movwf	(?_exp+1)& (0+255),b
  2715  002180  0E00               	movlw	0
  2716  002182  6F8B               	movwf	(?_exp+2)& (0+255),b
  2717  002184  0E00               	movlw	0
  2718  002186  6F8C               	movwf	(?_exp+3)& (0+255),b
  2719  002188  EFEA  F010         	goto	l1899
  2720  00218C                     l4623:
  2721  00218C  0E00               	movlw	0
  2722  00218E  6E01               	movwf	___fldiv@b^0,c
  2723  002190  0E00               	movlw	0
  2724  002192  6E02               	movwf	(___fldiv@b+1)^0,c
  2725  002194  0E80               	movlw	128
  2726  002196  6E03               	movwf	(___fldiv@b+2)^0,c
  2727  002198  0E3F               	movlw	63
  2728  00219A  6E04               	movwf	(___fldiv@b+3)^0,c
  2729  00219C  C089  F005         	movff	exp@x,___fldiv@a
  2730  0021A0  C08A  F006         	movff	exp@x+1,___fldiv@a+1
  2731  0021A4  C08B  F007         	movff	exp@x+2,___fldiv@a+2
  2732  0021A8  C08C  F008         	movff	exp@x+3,___fldiv@a+3
  2733  0021AC  EC9B  F00A         	call	___fldiv	;wreg free
  2734  0021B0  C001  F089         	movff	?___fldiv,?_exp
  2735  0021B4  C002  F08A         	movff	?___fldiv+1,?_exp+1
  2736  0021B8  C003  F08B         	movff	?___fldiv+2,?_exp+2
  2737  0021BC  C004  F08C         	movff	?___fldiv+3,?_exp+3
  2738  0021C0  EFEA  F010         	goto	l1899
  2739  0021C4                     l1903:
  2740                           
  2741                           ; BSR set to: 0
  2742  0021C4  C089  F089         	movff	exp@x,?_exp
  2743  0021C8  C08A  F08A         	movff	exp@x+1,?_exp+1
  2744  0021CC  C08B  F08B         	movff	exp@x+2,?_exp+2
  2745  0021D0  C08C  F08C         	movff	exp@x+3,?_exp+3
  2746  0021D4                     l1899:
  2747  0021D4  0012               	return		;funcret
  2748  0021D6                     __end_of_exp:
  2749                           	callstack 0
  2750                           
  2751 ;; *************** function _ldexp *****************
  2752 ;; Defined at:
  2753 ;;		line 277 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\frexp.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  value           4   33[BANK0 ] unsigned char 
  2756 ;;  newexp          2   37[BANK0 ] int 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  4   33[BANK0 ] int 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2768 ;;      Params:         0       6       0       0       0       0       0       0       0
  2769 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2770 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2771 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2772 ;;Total ram usage:        8 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    4
  2775 ;; This function calls:
  2776 ;;		___fleq
  2777 ;; This function is called by:
  2778 ;;		_exp
  2779 ;; This function uses a non-reentrant model
  2780 ;;
  2781                           
  2782                           	psect	text13
  2783  002B62                     __ptext13:
  2784                           	callstack 0
  2785  002B62                     _ldexp:
  2786                           	callstack 23
  2787  002B62  C081  F042         	movff	ldexp@value,___fleq@ff1
  2788  002B66  C082  F043         	movff	ldexp@value+1,___fleq@ff1+1
  2789  002B6A  C083  F044         	movff	ldexp@value+2,___fleq@ff1+2
  2790  002B6E  C084  F045         	movff	ldexp@value+3,___fleq@ff1+3
  2791  002B72  0E00               	movlw	0
  2792  002B74  6E46               	movwf	___fleq@ff2^0,c
  2793  002B76  0E00               	movlw	0
  2794  002B78  6E47               	movwf	(___fleq@ff2+1)^0,c
  2795  002B7A  0E00               	movlw	0
  2796  002B7C  6E48               	movwf	(___fleq@ff2+2)^0,c
  2797  002B7E  0E00               	movlw	0
  2798  002B80  6E49               	movwf	(___fleq@ff2+3)^0,c
  2799  002B82  ECDB  F01A         	call	___fleq	;wreg free
  2800  002B86  A0D8               	btfss	status,0,c
  2801  002B88  EFC8  F015         	goto	u3461
  2802  002B8C  EFCA  F015         	goto	u3460
  2803  002B90                     u3461:
  2804  002B90  EFD5  F015         	goto	l4345
  2805  002B94                     u3460:
  2806  002B94  0E00               	movlw	0
  2807  002B96  0100               	movlb	0	; () banked
  2808  002B98  6F81               	movwf	?_ldexp& (0+255),b
  2809  002B9A  0E00               	movlw	0
  2810  002B9C  6F82               	movwf	(?_ldexp+1)& (0+255),b
  2811  002B9E  0E00               	movlw	0
  2812  002BA0  6F83               	movwf	(?_ldexp+2)& (0+255),b
  2813  002BA2  0E00               	movlw	0
  2814  002BA4  6F84               	movwf	(?_ldexp+3)& (0+255),b
  2815  002BA6  EF4C  F016         	goto	l1864
  2816  002BAA                     l4345:
  2817  002BAA  0100               	movlb	0	; () banked
  2818  002BAC  5184               	movf	(ldexp@value+3)& (0+255),w,b
  2819  002BAE  0B7F               	andlw	127
  2820  002BB0  6F87               	movwf	??_ldexp& (0+255),b
  2821  002BB2  6B88               	clrf	(??_ldexp+1)& (0+255),b
  2822  002BB4  90D8               	bcf	status,0,c
  2823  002BB6  3787               	rlcf	??_ldexp& (0+255),f,b
  2824  002BB8  3788               	rlcf	(??_ldexp+1)& (0+255),f,b
  2825  002BBA  5187               	movf	??_ldexp& (0+255),w,b
  2826  002BBC  2785               	addwf	ldexp@newexp& (0+255),f,b
  2827  002BBE  5188               	movf	(??_ldexp+1)& (0+255),w,b
  2828  002BC0  2386               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  2829  002BC2  BF83               	btfsc	(ldexp@value+2)& (0+255),7,b
  2830  002BC4  EFE6  F015         	goto	u3471
  2831  002BC8  EFEA  F015         	goto	u3470
  2832  002BCC                     u3471:
  2833  002BCC  6B87               	clrf	??_ldexp& (0+255),b
  2834  002BCE  2B87               	incf	??_ldexp& (0+255),f,b
  2835  002BD0  EFEC  F015         	goto	u3478
  2836  002BD4                     u3470:
  2837  002BD4  0100               	movlb	0	; () banked
  2838  002BD6  6B87               	clrf	??_ldexp& (0+255),b
  2839  002BD8                     u3478:
  2840  002BD8  5187               	movf	??_ldexp& (0+255),w,b
  2841  002BDA  2785               	addwf	ldexp@newexp& (0+255),f,b
  2842  002BDC  0E00               	movlw	0
  2843  002BDE  2386               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  2844  002BE0  BF86               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  2845  002BE2  EFF7  F015         	goto	u3480
  2846  002BE6  EFF5  F015         	goto	u3481
  2847  002BEA                     u3481:
  2848  002BEA  EF05  F016         	goto	l4353
  2849  002BEE                     u3480:
  2850  002BEE                     
  2851                           ; BSR set to: 0
  2852  002BEE  0E00               	movlw	0
  2853  002BF0  6FD2               	movwf	(_errno+1)& (0+255),b
  2854  002BF2  0E22               	movlw	34
  2855  002BF4  6FD1               	movwf	_errno& (0+255),b
  2856  002BF6  0E00               	movlw	0
  2857  002BF8  6F81               	movwf	?_ldexp& (0+255),b
  2858  002BFA  0E00               	movlw	0
  2859  002BFC  6F82               	movwf	(?_ldexp+1)& (0+255),b
  2860  002BFE  0E00               	movlw	0
  2861  002C00  6F83               	movwf	(?_ldexp+2)& (0+255),b
  2862  002C02  0E00               	movlw	0
  2863  002C04  6F84               	movwf	(?_ldexp+3)& (0+255),b
  2864  002C06  EF4C  F016         	goto	l1864
  2865  002C0A                     l4353:
  2866                           
  2867                           ; BSR set to: 0
  2868  002C0A  BF86               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  2869  002C0C  EF0E  F016         	goto	u3491
  2870  002C10  0586               	decf	(ldexp@newexp+1)& (0+255),w,b
  2871  002C12  A0D8               	btfss	status,0,c
  2872  002C14  EF0E  F016         	goto	u3491
  2873  002C18  EF10  F016         	goto	u3490
  2874  002C1C                     u3491:
  2875  002C1C  EF2F  F016         	goto	l4369
  2876  002C20                     u3490:
  2877  002C20                     
  2878                           ; BSR set to: 0
  2879  002C20  0E00               	movlw	0
  2880  002C22  6FD2               	movwf	(_errno+1)& (0+255),b
  2881  002C24  0E22               	movlw	34
  2882  002C26  6FD1               	movwf	_errno& (0+255),b
  2883  002C28                     
  2884                           ; BSR set to: 0
  2885  002C28  BF84               	btfsc	(ldexp@value+3)& (0+255),7,b
  2886  002C2A  EF1B  F016         	goto	u3500
  2887  002C2E  EF19  F016         	goto	u3501
  2888  002C32                     u3501:
  2889  002C32  EF25  F016         	goto	l4365
  2890  002C36                     u3500:
  2891  002C36                     
  2892                           ; BSR set to: 0
  2893  002C36  0EFF               	movlw	255
  2894  002C38  6F81               	movwf	?_ldexp& (0+255),b
  2895  002C3A  0EFF               	movlw	255
  2896  002C3C  6F82               	movwf	(?_ldexp+1)& (0+255),b
  2897  002C3E  0E7F               	movlw	127
  2898  002C40  6F83               	movwf	(?_ldexp+2)& (0+255),b
  2899  002C42  0EFF               	movlw	255
  2900  002C44  6F84               	movwf	(?_ldexp+3)& (0+255),b
  2901  002C46  EF4C  F016         	goto	l1864
  2902  002C4A                     l4365:
  2903                           
  2904                           ; BSR set to: 0
  2905  002C4A  0EFF               	movlw	255
  2906  002C4C  6F81               	movwf	?_ldexp& (0+255),b
  2907  002C4E  0EFF               	movlw	255
  2908  002C50  6F82               	movwf	(?_ldexp+1)& (0+255),b
  2909  002C52  0E7F               	movlw	127
  2910  002C54  6F83               	movwf	(?_ldexp+2)& (0+255),b
  2911  002C56  0E7F               	movlw	127
  2912  002C58  6F84               	movwf	(?_ldexp+3)& (0+255),b
  2913  002C5A  EF4C  F016         	goto	l1864
  2914  002C5E                     l4369:
  2915                           
  2916                           ; BSR set to: 0
  2917  002C5E  3586               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  2918  002C60  3186               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  2919  002C62  6F88               	movwf	(??_ldexp+1)& (0+255),b
  2920  002C64  3185               	rrcf	ldexp@newexp& (0+255),w,b
  2921  002C66  6F87               	movwf	??_ldexp& (0+255),b
  2922  002C68  5184               	movf	(ldexp@value+3)& (0+255),w,b
  2923  002C6A  1987               	xorwf	??_ldexp& (0+255),w,b
  2924  002C6C  0B80               	andlw	-128
  2925  002C6E  1987               	xorwf	??_ldexp& (0+255),w,b
  2926  002C70  6F84               	movwf	(ldexp@value+3)& (0+255),b
  2927  002C72  C085  F087         	movff	ldexp@newexp,??_ldexp
  2928  002C76  0E01               	movlw	1
  2929  002C78  1787               	andwf	??_ldexp& (0+255),f,b
  2930  002C7A  3387               	rrcf	??_ldexp& (0+255),f,b
  2931  002C7C  3387               	rrcf	??_ldexp& (0+255),f,b
  2932  002C7E  5183               	movf	(ldexp@value+2)& (0+255),w,b
  2933  002C80  1987               	xorwf	??_ldexp& (0+255),w,b
  2934  002C82  0B7F               	andlw	-129
  2935  002C84  1987               	xorwf	??_ldexp& (0+255),w,b
  2936  002C86  6F83               	movwf	(ldexp@value+2)& (0+255),b
  2937  002C88                     
  2938                           ; BSR set to: 0
  2939  002C88  C081  F081         	movff	ldexp@value,?_ldexp
  2940  002C8C  C082  F082         	movff	ldexp@value+1,?_ldexp+1
  2941  002C90  C083  F083         	movff	ldexp@value+2,?_ldexp+2
  2942  002C94  C084  F084         	movff	ldexp@value+3,?_ldexp+3
  2943  002C98                     l1864:
  2944                           
  2945                           ; BSR set to: 0
  2946  002C98  0012               	return		;funcret
  2947  002C9A                     __end_of_ldexp:
  2948                           	callstack 0
  2949                           
  2950 ;; *************** function _floor *****************
  2951 ;; Defined at:
  2952 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\floor.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;  x               4   85[COMRAM] int 
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  i               4    0[BANK0 ] int 
  2957 ;;  expon           2    4[BANK0 ] int 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  4   85[COMRAM] int 
  2960 ;; Registers used:
  2961 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2967 ;;      Params:         4       0       0       0       0       0       0       0       0
  2968 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2969 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2970 ;;      Totals:         4       6       0       0       0       0       0       0       0
  2971 ;;Total ram usage:       10 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    5
  2974 ;; This function calls:
  2975 ;;		___fladd
  2976 ;;		___flge
  2977 ;;		___fltol
  2978 ;;		___xxtofl
  2979 ;;		_frexp
  2980 ;; This function is called by:
  2981 ;;		_exp
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text14
  2986  002A20                     __ptext14:
  2987                           	callstack 0
  2988  002A20                     _floor:
  2989                           	callstack 22
  2990  002A20  C056  F04E         	movff	floor@x,frexp@value
  2991  002A24  C057  F04F         	movff	floor@x+1,frexp@value+1
  2992  002A28  C058  F050         	movff	floor@x+2,frexp@value+2
  2993  002A2C  C059  F051         	movff	floor@x+3,frexp@value+3
  2994  002A30  0E64               	movlw	low floor@expon
  2995  002A32  6E52               	movwf	frexp@eptr^0,c
  2996  002A34  0E00               	movlw	high floor@expon
  2997  002A36  6E53               	movwf	(frexp@eptr+1)^0,c
  2998  002A38  ECBF  F019         	call	_frexp	;wreg free
  2999  002A3C  0100               	movlb	0	; () banked
  3000  002A3E  BF65               	btfsc	(floor@expon+1)& (0+255),7,b
  3001  002A40  EF26  F015         	goto	u3510
  3002  002A44  EF24  F015         	goto	u3511
  3003  002A48                     u3511:
  3004  002A48  EF41  F015         	goto	l4389
  3005  002A4C                     u3510:
  3006  002A4C                     
  3007                           ; BSR set to: 0
  3008  002A4C  BE59               	btfsc	(floor@x+3)^0,7,c
  3009  002A4E  EF2D  F015         	goto	u3520
  3010  002A52  EF2B  F015         	goto	u3521
  3011  002A56                     u3521:
  3012  002A56  EF37  F015         	goto	l4385
  3013  002A5A                     u3520:
  3014  002A5A                     
  3015                           ; BSR set to: 0
  3016  002A5A  0E00               	movlw	0
  3017  002A5C  6E56               	movwf	?_floor^0,c
  3018  002A5E  0E00               	movlw	0
  3019  002A60  6E57               	movwf	(?_floor+1)^0,c
  3020  002A62  0E80               	movlw	128
  3021  002A64  6E58               	movwf	(?_floor+2)^0,c
  3022  002A66  0EBF               	movlw	191
  3023  002A68  6E59               	movwf	(?_floor+3)^0,c
  3024  002A6A  EFB0  F015         	goto	l1911
  3025  002A6E                     l4385:
  3026                           
  3027                           ; BSR set to: 0
  3028  002A6E  0E00               	movlw	0
  3029  002A70  6E56               	movwf	?_floor^0,c
  3030  002A72  0E00               	movlw	0
  3031  002A74  6E57               	movwf	(?_floor+1)^0,c
  3032  002A76  0E00               	movlw	0
  3033  002A78  6E58               	movwf	(?_floor+2)^0,c
  3034  002A7A  0E00               	movlw	0
  3035  002A7C  6E59               	movwf	(?_floor+3)^0,c
  3036  002A7E  EFB0  F015         	goto	l1911
  3037  002A82                     l4389:
  3038                           
  3039                           ; BSR set to: 0
  3040  002A82  5165               	movf	(floor@expon+1)& (0+255),w,b
  3041  002A84  E109               	bnz	u3530
  3042  002A86  0E1D               	movlw	29
  3043  002A88  5D64               	subwf	floor@expon& (0+255),w,b
  3044  002A8A  A0D8               	btfss	status,0,c
  3045  002A8C  EF4A  F015         	goto	u3531
  3046  002A90  EF4C  F015         	goto	u3530
  3047  002A94                     u3531:
  3048  002A94  EF56  F015         	goto	l4393
  3049  002A98                     u3530:
  3050  002A98                     
  3051                           ; BSR set to: 0
  3052  002A98  C056  F056         	movff	floor@x,?_floor
  3053  002A9C  C057  F057         	movff	floor@x+1,?_floor+1
  3054  002AA0  C058  F058         	movff	floor@x+2,?_floor+2
  3055  002AA4  C059  F059         	movff	floor@x+3,?_floor+3
  3056  002AA8  EFB0  F015         	goto	l1911
  3057  002AAC                     l4393:
  3058                           
  3059                           ; BSR set to: 0
  3060  002AAC  C056  F02A         	movff	floor@x,___fltol@f1
  3061  002AB0  C057  F02B         	movff	floor@x+1,___fltol@f1+1
  3062  002AB4  C058  F02C         	movff	floor@x+2,___fltol@f1+2
  3063  002AB8  C059  F02D         	movff	floor@x+3,___fltol@f1+3
  3064  002ABC  EC62  F017         	call	___fltol	;wreg free
  3065  002AC0  C02A  F034         	movff	?___fltol,___xxtofl@val
  3066  002AC4  C02B  F035         	movff	?___fltol+1,___xxtofl@val+1
  3067  002AC8  C02C  F036         	movff	?___fltol+2,___xxtofl@val+2
  3068  002ACC  C02D  F037         	movff	?___fltol+3,___xxtofl@val+3
  3069  002AD0  0E01               	movlw	1
  3070  002AD2  EC67  F013         	call	___xxtofl
  3071  002AD6  C034  F060         	movff	?___xxtofl,floor@i
  3072  002ADA  C035  F061         	movff	?___xxtofl+1,floor@i+1
  3073  002ADE  C036  F062         	movff	?___xxtofl+2,floor@i+2
  3074  002AE2  C037  F063         	movff	?___xxtofl+3,floor@i+3
  3075  002AE6  C056  F001         	movff	floor@x,___flge@ff1
  3076  002AEA  C057  F002         	movff	floor@x+1,___flge@ff1+1
  3077  002AEE  C058  F003         	movff	floor@x+2,___flge@ff1+2
  3078  002AF2  C059  F004         	movff	floor@x+3,___flge@ff1+3
  3079  002AF6  C060  F005         	movff	floor@i,___flge@ff2
  3080  002AFA  C061  F006         	movff	floor@i+1,___flge@ff2+1
  3081  002AFE  C062  F007         	movff	floor@i+2,___flge@ff2+2
  3082  002B02  C063  F008         	movff	floor@i+3,___flge@ff2+3
  3083  002B06  ECE5  F017         	call	___flge	;wreg free
  3084  002B0A  B0D8               	btfsc	status,0,c
  3085  002B0C  EF8A  F015         	goto	u3541
  3086  002B10  EF8C  F015         	goto	u3540
  3087  002B14                     u3541:
  3088  002B14  EFA8  F015         	goto	l1913
  3089  002B18                     u3540:
  3090  002B18  C060  F01A         	movff	floor@i,___fladd@b
  3091  002B1C  C061  F01B         	movff	floor@i+1,___fladd@b+1
  3092  002B20  C062  F01C         	movff	floor@i+2,___fladd@b+2
  3093  002B24  C063  F01D         	movff	floor@i+3,___fladd@b+3
  3094  002B28  0E00               	movlw	0
  3095  002B2A  6E1E               	movwf	___fladd@a^0,c
  3096  002B2C  0E00               	movlw	0
  3097  002B2E  6E1F               	movwf	(___fladd@a+1)^0,c
  3098  002B30  0E80               	movlw	128
  3099  002B32  6E20               	movwf	(___fladd@a+2)^0,c
  3100  002B34  0EBF               	movlw	191
  3101  002B36  6E21               	movwf	(___fladd@a+3)^0,c
  3102  002B38  EC45  F004         	call	___fladd	;wreg free
  3103  002B3C  C01A  F056         	movff	?___fladd,?_floor
  3104  002B40  C01B  F057         	movff	?___fladd+1,?_floor+1
  3105  002B44  C01C  F058         	movff	?___fladd+2,?_floor+2
  3106  002B48  C01D  F059         	movff	?___fladd+3,?_floor+3
  3107  002B4C  EFB0  F015         	goto	l1911
  3108  002B50                     l1913:
  3109  002B50  C060  F056         	movff	floor@i,?_floor
  3110  002B54  C061  F057         	movff	floor@i+1,?_floor+1
  3111  002B58  C062  F058         	movff	floor@i+2,?_floor+2
  3112  002B5C  C063  F059         	movff	floor@i+3,?_floor+3
  3113  002B60                     l1911:
  3114  002B60  0012               	return		;funcret
  3115  002B62                     __end_of_floor:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function ___flge *****************
  3119 ;; Defined at:
  3120 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flge.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;  ff1             4    0[COMRAM] int 
  3123 ;;  ff2             4    4[COMRAM] int 
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;		None
  3126 ;; Return value:  Size  Location     Type
  3127 ;;		None               void
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3135 ;;      Params:         8       0       0       0       0       0       0       0       0
  3136 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3137 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3138 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3139 ;;Total ram usage:       12 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    3
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_pow
  3146 ;;		_exp
  3147 ;;		_floor
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text15
  3152  002FCA                     __ptext15:
  3153                           	callstack 0
  3154  002FCA                     ___flge:
  3155                           	callstack 23
  3156  002FCA  0E00               	movlw	0
  3157  002FCC  1401               	andwf	___flge@ff1^0,w,c
  3158  002FCE  6E09               	movwf	??___flge^0,c
  3159  002FD0  0E00               	movlw	0
  3160  002FD2  1402               	andwf	(___flge@ff1+1)^0,w,c
  3161  002FD4  6E0A               	movwf	(??___flge+1)^0,c
  3162  002FD6  0E80               	movlw	128
  3163  002FD8  1403               	andwf	(___flge@ff1+2)^0,w,c
  3164  002FDA  6E0B               	movwf	(??___flge+2)^0,c
  3165  002FDC  0E7F               	movlw	127
  3166  002FDE  1404               	andwf	(___flge@ff1+3)^0,w,c
  3167  002FE0  6E0C               	movwf	(??___flge+3)^0,c
  3168  002FE2  5009               	movf	??___flge^0,w,c
  3169  002FE4  100A               	iorwf	(??___flge+1)^0,w,c
  3170  002FE6  100B               	iorwf	(??___flge+2)^0,w,c
  3171  002FE8  100C               	iorwf	(??___flge+3)^0,w,c
  3172  002FEA  A4D8               	btfss	status,2,c
  3173  002FEC  EFFA  F017         	goto	u2831
  3174  002FF0  EFFC  F017         	goto	u2830
  3175  002FF4                     u2831:
  3176  002FF4  EF04  F018         	goto	l3975
  3177  002FF8                     u2830:
  3178  002FF8  0E00               	movlw	0
  3179  002FFA  6E01               	movwf	___flge@ff1^0,c
  3180  002FFC  0E00               	movlw	0
  3181  002FFE  6E02               	movwf	(___flge@ff1+1)^0,c
  3182  003000  0E00               	movlw	0
  3183  003002  6E03               	movwf	(___flge@ff1+2)^0,c
  3184  003004  0E00               	movlw	0
  3185  003006  6E04               	movwf	(___flge@ff1+3)^0,c
  3186  003008                     l3975:
  3187  003008  0E00               	movlw	0
  3188  00300A  1405               	andwf	___flge@ff2^0,w,c
  3189  00300C  6E09               	movwf	??___flge^0,c
  3190  00300E  0E00               	movlw	0
  3191  003010  1406               	andwf	(___flge@ff2+1)^0,w,c
  3192  003012  6E0A               	movwf	(??___flge+1)^0,c
  3193  003014  0E80               	movlw	128
  3194  003016  1407               	andwf	(___flge@ff2+2)^0,w,c
  3195  003018  6E0B               	movwf	(??___flge+2)^0,c
  3196  00301A  0E7F               	movlw	127
  3197  00301C  1408               	andwf	(___flge@ff2+3)^0,w,c
  3198  00301E  6E0C               	movwf	(??___flge+3)^0,c
  3199  003020  5009               	movf	??___flge^0,w,c
  3200  003022  100A               	iorwf	(??___flge+1)^0,w,c
  3201  003024  100B               	iorwf	(??___flge+2)^0,w,c
  3202  003026  100C               	iorwf	(??___flge+3)^0,w,c
  3203  003028  A4D8               	btfss	status,2,c
  3204  00302A  EF19  F018         	goto	u2841
  3205  00302E  EF1B  F018         	goto	u2840
  3206  003032                     u2841:
  3207  003032  EF23  F018         	goto	l3979
  3208  003036                     u2840:
  3209  003036  0E00               	movlw	0
  3210  003038  6E05               	movwf	___flge@ff2^0,c
  3211  00303A  0E00               	movlw	0
  3212  00303C  6E06               	movwf	(___flge@ff2+1)^0,c
  3213  00303E  0E00               	movlw	0
  3214  003040  6E07               	movwf	(___flge@ff2+2)^0,c
  3215  003042  0E00               	movlw	0
  3216  003044  6E08               	movwf	(___flge@ff2+3)^0,c
  3217  003046                     l3979:
  3218  003046  AE04               	btfss	(___flge@ff1+3)^0,7,c
  3219  003048  EF28  F018         	goto	u2851
  3220  00304C  EF2A  F018         	goto	u2850
  3221  003050                     u2851:
  3222  003050  EF33  F018         	goto	l3983
  3223  003054                     u2850:
  3224  003054  6C01               	negf	___flge@ff1^0,c
  3225  003056  1E02               	comf	(___flge@ff1+1)^0,f,c
  3226  003058  B0D8               	btfsc	status,0,c
  3227  00305A  2A02               	incf	(___flge@ff1+1)^0,f,c
  3228  00305C  1E03               	comf	(___flge@ff1+2)^0,f,c
  3229  00305E  B0D8               	btfsc	status,0,c
  3230  003060  2A03               	incf	(___flge@ff1+2)^0,f,c
  3231  003062  0E80               	movlw	128
  3232  003064  5604               	subfwb	(___flge@ff1+3)^0,f,c
  3233  003066                     l3983:
  3234  003066  AE08               	btfss	(___flge@ff2+3)^0,7,c
  3235  003068  EF38  F018         	goto	u2861
  3236  00306C  EF3A  F018         	goto	u2860
  3237  003070                     u2861:
  3238  003070  EF43  F018         	goto	l1407
  3239  003074                     u2860:
  3240  003074  6C05               	negf	___flge@ff2^0,c
  3241  003076  1E06               	comf	(___flge@ff2+1)^0,f,c
  3242  003078  B0D8               	btfsc	status,0,c
  3243  00307A  2A06               	incf	(___flge@ff2+1)^0,f,c
  3244  00307C  1E07               	comf	(___flge@ff2+2)^0,f,c
  3245  00307E  B0D8               	btfsc	status,0,c
  3246  003080  2A07               	incf	(___flge@ff2+2)^0,f,c
  3247  003082  0E80               	movlw	128
  3248  003084  5608               	subfwb	(___flge@ff2+3)^0,f,c
  3249  003086                     l1407:
  3250  003086  0E00               	movlw	0
  3251  003088  1A01               	xorwf	___flge@ff1^0,f,c
  3252  00308A  0E00               	movlw	0
  3253  00308C  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  3254  00308E  0E00               	movlw	0
  3255  003090  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  3256  003092  0E80               	movlw	128
  3257  003094  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  3258  003096  0E00               	movlw	0
  3259  003098  1A05               	xorwf	___flge@ff2^0,f,c
  3260  00309A  0E00               	movlw	0
  3261  00309C  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  3262  00309E  0E00               	movlw	0
  3263  0030A0  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  3264  0030A2  0E80               	movlw	128
  3265  0030A4  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  3266  0030A6  5005               	movf	___flge@ff2^0,w,c
  3267  0030A8  5C01               	subwf	___flge@ff1^0,w,c
  3268  0030AA  5006               	movf	(___flge@ff2+1)^0,w,c
  3269  0030AC  5802               	subwfb	(___flge@ff1+1)^0,w,c
  3270  0030AE  5007               	movf	(___flge@ff2+2)^0,w,c
  3271  0030B0  5803               	subwfb	(___flge@ff1+2)^0,w,c
  3272  0030B2  5008               	movf	(___flge@ff2+3)^0,w,c
  3273  0030B4  5804               	subwfb	(___flge@ff1+3)^0,w,c
  3274  0030B6  B0D8               	btfsc	status,0,c
  3275  0030B8  EF60  F018         	goto	u2871
  3276  0030BC  EF62  F018         	goto	u2870
  3277  0030C0                     u2871:
  3278  0030C0  EF65  F018         	goto	l3989
  3279  0030C4                     u2870:
  3280  0030C4  90D8               	bcf	status,0,c
  3281  0030C6  EF66  F018         	goto	l1408
  3282  0030CA                     l3989:
  3283  0030CA  80D8               	bsf	status,0,c
  3284  0030CC                     l1408:
  3285  0030CC  0012               	return		;funcret
  3286  0030CE                     __end_of___flge:
  3287                           	callstack 0
  3288                           
  3289 ;; *************** function ___flneg *****************
  3290 ;; Defined at:
  3291 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flneg.c"
  3292 ;; Parameters:    Size  Location     Type
  3293 ;;  f1              4    0[COMRAM] int 
  3294 ;; Auto vars:     Size  Location     Type
  3295 ;;		None
  3296 ;; Return value:  Size  Location     Type
  3297 ;;                  4    0[COMRAM] int 
  3298 ;; Registers used:
  3299 ;;		wreg, status,2, status,0
  3300 ;; Tracked objects:
  3301 ;;		On entry : 0/0
  3302 ;;		On exit  : 0/0
  3303 ;;		Unchanged: 0/0
  3304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3305 ;;      Params:         4       0       0       0       0       0       0       0       0
  3306 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3308 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3309 ;;Total ram usage:        4 bytes
  3310 ;; Hardware stack levels used:    1
  3311 ;; Hardware stack levels required when called:    3
  3312 ;; This function calls:
  3313 ;;		Nothing
  3314 ;; This function is called by:
  3315 ;;		_pow
  3316 ;;		_exp
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text16
  3321  003B66                     __ptext16:
  3322                           	callstack 0
  3323  003B66                     ___flneg:
  3324                           	callstack 24
  3325  003B66  5001               	movf	___flneg@f1^0,w,c
  3326  003B68  1002               	iorwf	(___flneg@f1+1)^0,w,c
  3327  003B6A  1003               	iorwf	(___flneg@f1+2)^0,w,c
  3328  003B6C  1004               	iorwf	(___flneg@f1+3)^0,w,c
  3329  003B6E  B4D8               	btfsc	status,2,c
  3330  003B70  EFBC  F01D         	goto	u3381
  3331  003B74  EFBE  F01D         	goto	u3380
  3332  003B78                     u3381:
  3333  003B78  EFC6  F01D         	goto	l4291
  3334  003B7C                     u3380:
  3335  003B7C  0E00               	movlw	0
  3336  003B7E  1A01               	xorwf	___flneg@f1^0,f,c
  3337  003B80  0E00               	movlw	0
  3338  003B82  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  3339  003B84  0E00               	movlw	0
  3340  003B86  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  3341  003B88  0E80               	movlw	128
  3342  003B8A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  3343  003B8C                     l4291:
  3344  003B8C  C001  F001         	movff	___flneg@f1,?___flneg
  3345  003B90  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  3346  003B94  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  3347  003B98  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  3348  003B9C  0012               	return		;funcret
  3349  003B9E                     __end_of___flneg:
  3350                           	callstack 0
  3351                           
  3352 ;; *************** function _ComputeWaterVol *****************
  3353 ;; Defined at:
  3354 ;;		line 34 in file "DepthDetection.c"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;		None
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  dEmptySpace_    4   57[BANK0 ] float 
  3359 ;;  dWaterHeight    4   53[BANK0 ] float 
  3360 ;;  d_mmPerTick     4   49[BANK0 ] float 
  3361 ;;  dSOS            4   41[BANK0 ] float 
  3362 ;;  dWaterVol       4   37[BANK0 ] float 
  3363 ;;  dCurrTemp       4   33[BANK0 ] float 
  3364 ;;  dEchoPeriod     4    0        float 
  3365 ;; Return value:  Size  Location     Type
  3366 ;;                  1    wreg      void 
  3367 ;; Registers used:
  3368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3369 ;; Tracked objects:
  3370 ;;		On entry : 0/0
  3371 ;;		On exit  : 0/0
  3372 ;;		Unchanged: 0/0
  3373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3374 ;;      Params:         0       0       0       0       0       0       0       0       0
  3375 ;;      Locals:         0      32       0       0       0       0       0       0       0
  3376 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3377 ;;      Totals:         0      36       0       0       0       0       0       0       0
  3378 ;;Total ram usage:       36 bytes
  3379 ;; Hardware stack levels used:    1
  3380 ;; Hardware stack levels required when called:    7
  3381 ;; This function calls:
  3382 ;;		_LCD_DisplayResults
  3383 ;;		___fladd
  3384 ;;		___fldiv
  3385 ;;		___flmul
  3386 ;;		___flsub
  3387 ;;		___fltol
  3388 ;;		___xxtofl
  3389 ;;		_round
  3390 ;;		_sqrt
  3391 ;; This function is called by:
  3392 ;;		_main
  3393 ;; This function uses a non-reentrant model
  3394 ;;
  3395                           
  3396                           	psect	text17
  3397  001BEC                     __ptext17:
  3398                           	callstack 0
  3399  001BEC                     _ComputeWaterVol:
  3400                           	callstack 23
  3401  001BEC  C0E5  F034         	movff	_giEchoCounter,___xxtofl@val	;volatile
  3402  001BF0  C0E6  F035         	movff	_giEchoCounter+1,___xxtofl@val+1	;volatile
  3403  001BF4  6A36               	clrf	(___xxtofl@val+2)^0,c
  3404  001BF6  6A37               	clrf	(___xxtofl@val+3)^0,c
  3405  001BF8  0E00               	movlw	0
  3406  001BFA  EC67  F013         	call	___xxtofl
  3407  001BFE  C034  F056         	movff	?___xxtofl,___flmul@b
  3408  001C02  C035  F057         	movff	?___xxtofl+1,___flmul@b+1
  3409  001C06  C036  F058         	movff	?___xxtofl+2,___flmul@b+2
  3410  001C0A  C037  F059         	movff	?___xxtofl+3,___flmul@b+3
  3411  001C0E  0EBD               	movlw	189
  3412  001C10  6E5A               	movwf	___flmul@a^0,c
  3413  001C12  0E37               	movlw	55
  3414  001C14  6E5B               	movwf	(___flmul@a+1)^0,c
  3415  001C16  0E06               	movlw	6
  3416  001C18  6E5C               	movwf	(___flmul@a+2)^0,c
  3417  001C1A  0E35               	movlw	53
  3418  001C1C  6E5D               	movwf	(___flmul@a+3)^0,c
  3419  001C1E  ECA5  F006         	call	___flmul	;wreg free
  3420  001C22                     
  3421                           ;DepthDetection.c: 45: dCurrTemp = gfAirTempC;
  3422  001C22  C0CD  F081         	movff	_gfAirTempC,ComputeWaterVol@dCurrTemp	;volatile
  3423  001C26  C0CE  F082         	movff	_gfAirTempC+1,ComputeWaterVol@dCurrTemp+1	;volatile
  3424  001C2A  C0CF  F083         	movff	_gfAirTempC+2,ComputeWaterVol@dCurrTemp+2	;volatile
  3425  001C2E  C0D0  F084         	movff	_gfAirTempC+3,ComputeWaterVol@dCurrTemp+3	;volatile
  3426                           
  3427                           ;DepthDetection.c: 46: dSOS = 331.3e3 * sqrt( 1 + (dCurrTemp / 273.15));
  3428  001C32  0E00               	movlw	0
  3429  001C34  6E1E               	movwf	___fladd@a^0,c
  3430  001C36  0E00               	movlw	0
  3431  001C38  6E1F               	movwf	(___fladd@a+1)^0,c
  3432  001C3A  0E80               	movlw	128
  3433  001C3C  6E20               	movwf	(___fladd@a+2)^0,c
  3434  001C3E  0E3F               	movlw	63
  3435  001C40  6E21               	movwf	(___fladd@a+3)^0,c
  3436  001C42  0E33               	movlw	51
  3437  001C44  6E05               	movwf	___fldiv@a^0,c
  3438  001C46  0E93               	movlw	147
  3439  001C48  6E06               	movwf	(___fldiv@a+1)^0,c
  3440  001C4A  0E88               	movlw	136
  3441  001C4C  6E07               	movwf	(___fldiv@a+2)^0,c
  3442  001C4E  0E43               	movlw	67
  3443  001C50  6E08               	movwf	(___fldiv@a+3)^0,c
  3444  001C52  C081  F001         	movff	ComputeWaterVol@dCurrTemp,___fldiv@b
  3445  001C56  C082  F002         	movff	ComputeWaterVol@dCurrTemp+1,___fldiv@b+1
  3446  001C5A  C083  F003         	movff	ComputeWaterVol@dCurrTemp+2,___fldiv@b+2
  3447  001C5E  C084  F004         	movff	ComputeWaterVol@dCurrTemp+3,___fldiv@b+3
  3448  001C62  EC9B  F00A         	call	___fldiv	;wreg free
  3449  001C66  C001  F01A         	movff	?___fldiv,___fladd@b
  3450  001C6A  C002  F01B         	movff	?___fldiv+1,___fladd@b+1
  3451  001C6E  C003  F01C         	movff	?___fldiv+2,___fladd@b+2
  3452  001C72  C004  F01D         	movff	?___fldiv+3,___fladd@b+3
  3453  001C76  EC45  F004         	call	___fladd	;wreg free
  3454  001C7A  C01A  F02A         	movff	?___fladd,sqrt@a
  3455  001C7E  C01B  F02B         	movff	?___fladd+1,sqrt@a+1
  3456  001C82  C01C  F02C         	movff	?___fladd+2,sqrt@a+2
  3457  001C86  C01D  F02D         	movff	?___fladd+3,sqrt@a+3
  3458  001C8A  EC68  F00C         	call	_sqrt	;wreg free
  3459  001C8E  C02A  F056         	movff	?_sqrt,___flmul@b
  3460  001C92  C02B  F057         	movff	?_sqrt+1,___flmul@b+1
  3461  001C96  C02C  F058         	movff	?_sqrt+2,___flmul@b+2
  3462  001C9A  C02D  F059         	movff	?_sqrt+3,___flmul@b+3
  3463  001C9E  0E80               	movlw	128
  3464  001CA0  6E5A               	movwf	___flmul@a^0,c
  3465  001CA2  0EC4               	movlw	196
  3466  001CA4  6E5B               	movwf	(___flmul@a+1)^0,c
  3467  001CA6  0EA1               	movlw	161
  3468  001CA8  6E5C               	movwf	(___flmul@a+2)^0,c
  3469  001CAA  0E48               	movlw	72
  3470  001CAC  6E5D               	movwf	(___flmul@a+3)^0,c
  3471  001CAE  ECA5  F006         	call	___flmul	;wreg free
  3472  001CB2  C056  F089         	movff	?___flmul,ComputeWaterVol@dSOS
  3473  001CB6  C057  F08A         	movff	?___flmul+1,ComputeWaterVol@dSOS+1
  3474  001CBA  C058  F08B         	movff	?___flmul+2,ComputeWaterVol@dSOS+2
  3475  001CBE  C059  F08C         	movff	?___flmul+3,ComputeWaterVol@dSOS+3
  3476                           
  3477                           ;DepthDetection.c: 51: if (0 == 0)
  3478  001CC2  0EBD               	movlw	189
  3479  001CC4  6E5A               	movwf	___flmul@a^0,c
  3480  001CC6  0E37               	movlw	55
  3481  001CC8  6E5B               	movwf	(___flmul@a+1)^0,c
  3482  001CCA  0E06               	movlw	6
  3483  001CCC  6E5C               	movwf	(___flmul@a+2)^0,c
  3484  001CCE  0E35               	movlw	53
  3485  001CD0  6E5D               	movwf	(___flmul@a+3)^0,c
  3486  001CD2  C089  F056         	movff	ComputeWaterVol@dSOS,___flmul@b
  3487  001CD6  C08A  F057         	movff	ComputeWaterVol@dSOS+1,___flmul@b+1
  3488  001CDA  C08B  F058         	movff	ComputeWaterVol@dSOS+2,___flmul@b+2
  3489  001CDE  C08C  F059         	movff	ComputeWaterVol@dSOS+3,___flmul@b+3
  3490  001CE2  ECA5  F006         	call	___flmul	;wreg free
  3491  001CE6  C056  F001         	movff	?___flmul,___fldiv@b
  3492  001CEA  C057  F002         	movff	?___flmul+1,___fldiv@b+1
  3493  001CEE  C058  F003         	movff	?___flmul+2,___fldiv@b+2
  3494  001CF2  C059  F004         	movff	?___flmul+3,___fldiv@b+3
  3495  001CF6  0E00               	movlw	0
  3496  001CF8  6E05               	movwf	___fldiv@a^0,c
  3497  001CFA  0E00               	movlw	0
  3498  001CFC  6E06               	movwf	(___fldiv@a+1)^0,c
  3499  001CFE  0E00               	movlw	0
  3500  001D00  6E07               	movwf	(___fldiv@a+2)^0,c
  3501  001D02  0E40               	movlw	64
  3502  001D04  6E08               	movwf	(___fldiv@a+3)^0,c
  3503  001D06  EC9B  F00A         	call	___fldiv	;wreg free
  3504  001D0A  C001  F091         	movff	?___fldiv,ComputeWaterVol@d_mmPerTick
  3505  001D0E  C002  F092         	movff	?___fldiv+1,ComputeWaterVol@d_mmPerTick+1
  3506  001D12  C003  F093         	movff	?___fldiv+2,ComputeWaterVol@d_mmPerTick+2
  3507  001D16  C004  F094         	movff	?___fldiv+3,ComputeWaterVol@d_mmPerTick+3
  3508                           
  3509                           ;DepthDetection.c: 52: dEmptySpace_mm = (giEchoCounter.EP16 - 4400) * d_mmPerTick;
  3510  001D1A  0ED0               	movlw	208
  3511  001D1C  0100               	movlb	0	; () banked
  3512  001D1E  6F79               	movwf	??_ComputeWaterVol& (0+255),b
  3513  001D20  0EEE               	movlw	238
  3514  001D22  6F7A               	movwf	(??_ComputeWaterVol+1)& (0+255),b
  3515  001D24  C0E5  F07B         	movff	_giEchoCounter,??_ComputeWaterVol+2	;volatile
  3516  001D28  C0E6  F07C         	movff	_giEchoCounter+1,??_ComputeWaterVol+3	;volatile
  3517  001D2C  5179               	movf	??_ComputeWaterVol& (0+255),w,b
  3518  001D2E  277B               	addwf	(??_ComputeWaterVol+2)& (0+255),f,b
  3519  001D30  517A               	movf	(??_ComputeWaterVol+1)& (0+255),w,b
  3520  001D32  237C               	addwfc	(??_ComputeWaterVol+3)& (0+255),f,b
  3521  001D34  C07B  F034         	movff	??_ComputeWaterVol+2,___xxtofl@val
  3522  001D38  C07C  F035         	movff	??_ComputeWaterVol+3,___xxtofl@val+1
  3523  001D3C  6A36               	clrf	(___xxtofl@val+2)^0,c
  3524  001D3E  6A37               	clrf	(___xxtofl@val+3)^0,c
  3525  001D40  0E00               	movlw	0
  3526  001D42  EC67  F013         	call	___xxtofl
  3527  001D46  C034  F056         	movff	?___xxtofl,___flmul@b
  3528  001D4A  C035  F057         	movff	?___xxtofl+1,___flmul@b+1
  3529  001D4E  C036  F058         	movff	?___xxtofl+2,___flmul@b+2
  3530  001D52  C037  F059         	movff	?___xxtofl+3,___flmul@b+3
  3531  001D56  C091  F05A         	movff	ComputeWaterVol@d_mmPerTick,___flmul@a
  3532  001D5A  C092  F05B         	movff	ComputeWaterVol@d_mmPerTick+1,___flmul@a+1
  3533  001D5E  C093  F05C         	movff	ComputeWaterVol@d_mmPerTick+2,___flmul@a+2
  3534  001D62  C094  F05D         	movff	ComputeWaterVol@d_mmPerTick+3,___flmul@a+3
  3535  001D66  ECA5  F006         	call	___flmul	;wreg free
  3536  001D6A  C056  F099         	movff	?___flmul,ComputeWaterVol@dEmptySpace_mm
  3537  001D6E  C057  F09A         	movff	?___flmul+1,ComputeWaterVol@dEmptySpace_mm+1
  3538  001D72  C058  F09B         	movff	?___flmul+2,ComputeWaterVol@dEmptySpace_mm+2
  3539  001D76  C059  F09C         	movff	?___flmul+3,ComputeWaterVol@dEmptySpace_mm+3
  3540  001D7A                     
  3541                           ;DepthDetection.c: 55: giEmptySpace_mm = dEmptySpace_mm;
  3542  001D7A  C099  F02A         	movff	ComputeWaterVol@dEmptySpace_mm,___fltol@f1
  3543  001D7E  C09A  F02B         	movff	ComputeWaterVol@dEmptySpace_mm+1,___fltol@f1+1
  3544  001D82  C09B  F02C         	movff	ComputeWaterVol@dEmptySpace_mm+2,___fltol@f1+2
  3545  001D86  C09C  F02D         	movff	ComputeWaterVol@dEmptySpace_mm+3,___fltol@f1+3
  3546  001D8A  EC62  F017         	call	___fltol	;wreg free
  3547  001D8E  C02A  F0DB         	movff	?___fltol,_giEmptySpace_mm	;volatile
  3548  001D92  C02B  F0DC         	movff	?___fltol+1,_giEmptySpace_mm+1	;volatile
  3549  001D96                     
  3550                           ;DepthDetection.c: 56: dWaterHeight_mm = gd_SensorHeight_mm - dEmptySpace_mm;
  3551  001D96  C0B9  F066         	movff	_gd_SensorHeight_mm,___flsub@b
  3552  001D9A  C0BA  F067         	movff	_gd_SensorHeight_mm+1,___flsub@b+1
  3553  001D9E  C0BB  F068         	movff	_gd_SensorHeight_mm+2,___flsub@b+2
  3554  001DA2  C0BC  F069         	movff	_gd_SensorHeight_mm+3,___flsub@b+3
  3555  001DA6  C099  F06A         	movff	ComputeWaterVol@dEmptySpace_mm,___flsub@a
  3556  001DAA  C09A  F06B         	movff	ComputeWaterVol@dEmptySpace_mm+1,___flsub@a+1
  3557  001DAE  C09B  F06C         	movff	ComputeWaterVol@dEmptySpace_mm+2,___flsub@a+2
  3558  001DB2  C09C  F06D         	movff	ComputeWaterVol@dEmptySpace_mm+3,___flsub@a+3
  3559  001DB6  EC8F  F01D         	call	___flsub	;wreg free
  3560  001DBA  C066  F095         	movff	?___flsub,ComputeWaterVol@dWaterHeight_mm
  3561  001DBE  C067  F096         	movff	?___flsub+1,ComputeWaterVol@dWaterHeight_mm+1
  3562  001DC2  C068  F097         	movff	?___flsub+2,ComputeWaterVol@dWaterHeight_mm+2
  3563  001DC6  C069  F098         	movff	?___flsub+3,ComputeWaterVol@dWaterHeight_mm+3
  3564                           
  3565                           ;DepthDetection.c: 57: dWaterVol = dWaterHeight_mm * gd_TankGalsPer_mm;
  3566  001DCA  C095  F056         	movff	ComputeWaterVol@dWaterHeight_mm,___flmul@b
  3567  001DCE  C096  F057         	movff	ComputeWaterVol@dWaterHeight_mm+1,___flmul@b+1
  3568  001DD2  C097  F058         	movff	ComputeWaterVol@dWaterHeight_mm+2,___flmul@b+2
  3569  001DD6  C098  F059         	movff	ComputeWaterVol@dWaterHeight_mm+3,___flmul@b+3
  3570  001DDA  C0B5  F05A         	movff	_gd_TankGalsPer_mm,___flmul@a
  3571  001DDE  C0B6  F05B         	movff	_gd_TankGalsPer_mm+1,___flmul@a+1
  3572  001DE2  C0B7  F05C         	movff	_gd_TankGalsPer_mm+2,___flmul@a+2
  3573  001DE6  C0B8  F05D         	movff	_gd_TankGalsPer_mm+3,___flmul@a+3
  3574  001DEA  ECA5  F006         	call	___flmul	;wreg free
  3575  001DEE  C056  F085         	movff	?___flmul,ComputeWaterVol@dWaterVol
  3576  001DF2  C057  F086         	movff	?___flmul+1,ComputeWaterVol@dWaterVol+1
  3577  001DF6  C058  F087         	movff	?___flmul+2,ComputeWaterVol@dWaterVol+2
  3578  001DFA  C059  F088         	movff	?___flmul+3,ComputeWaterVol@dWaterVol+3
  3579                           
  3580                           ;DepthDetection.c: 58: giPercentFull = dWaterHeight_mm * 100 / gd_MaxWaterHeight_mm;
  3581  001DFE  C0B1  F005         	movff	_gd_MaxWaterHeight_mm,___fldiv@a
  3582  001E02  C0B2  F006         	movff	_gd_MaxWaterHeight_mm+1,___fldiv@a+1
  3583  001E06  C0B3  F007         	movff	_gd_MaxWaterHeight_mm+2,___fldiv@a+2
  3584  001E0A  C0B4  F008         	movff	_gd_MaxWaterHeight_mm+3,___fldiv@a+3
  3585  001E0E  0E00               	movlw	0
  3586  001E10  6E5A               	movwf	___flmul@a^0,c
  3587  001E12  0E00               	movlw	0
  3588  001E14  6E5B               	movwf	(___flmul@a+1)^0,c
  3589  001E16  0EC8               	movlw	200
  3590  001E18  6E5C               	movwf	(___flmul@a+2)^0,c
  3591  001E1A  0E42               	movlw	66
  3592  001E1C  6E5D               	movwf	(___flmul@a+3)^0,c
  3593  001E1E  C095  F056         	movff	ComputeWaterVol@dWaterHeight_mm,___flmul@b
  3594  001E22  C096  F057         	movff	ComputeWaterVol@dWaterHeight_mm+1,___flmul@b+1
  3595  001E26  C097  F058         	movff	ComputeWaterVol@dWaterHeight_mm+2,___flmul@b+2
  3596  001E2A  C098  F059         	movff	ComputeWaterVol@dWaterHeight_mm+3,___flmul@b+3
  3597  001E2E  ECA5  F006         	call	___flmul	;wreg free
  3598  001E32  C056  F001         	movff	?___flmul,___fldiv@b
  3599  001E36  C057  F002         	movff	?___flmul+1,___fldiv@b+1
  3600  001E3A  C058  F003         	movff	?___flmul+2,___fldiv@b+2
  3601  001E3E  C059  F004         	movff	?___flmul+3,___fldiv@b+3
  3602  001E42  EC9B  F00A         	call	___fldiv	;wreg free
  3603  001E46  C001  F02A         	movff	?___fldiv,___fltol@f1
  3604  001E4A  C002  F02B         	movff	?___fldiv+1,___fltol@f1+1
  3605  001E4E  C003  F02C         	movff	?___fldiv+2,___fltol@f1+2
  3606  001E52  C004  F02D         	movff	?___fldiv+3,___fltol@f1+3
  3607  001E56  EC62  F017         	call	___fltol	;wreg free
  3608  001E5A  C02A  F0DD         	movff	?___fltol,_giPercentFull	;volatile
  3609  001E5E  C02B  F0DE         	movff	?___fltol+1,_giPercentFull+1	;volatile
  3610  001E62                     
  3611                           ;DepthDetection.c: 59: giGals = round(dWaterVol);
  3612  001E62  C085  F071         	movff	ComputeWaterVol@dWaterVol,round@x
  3613  001E66  C086  F072         	movff	ComputeWaterVol@dWaterVol+1,round@x+1
  3614  001E6A  C087  F073         	movff	ComputeWaterVol@dWaterVol+2,round@x+2
  3615  001E6E  C088  F074         	movff	ComputeWaterVol@dWaterVol+3,round@x+3
  3616  001E72  EC30  F01B         	call	_round	;wreg free
  3617  001E76  C071  F08D         	movff	?_round,_ComputeWaterVol$2691
  3618  001E7A  C072  F08E         	movff	?_round+1,_ComputeWaterVol$2691+1
  3619  001E7E  C073  F08F         	movff	?_round+2,_ComputeWaterVol$2691+2
  3620  001E82  C074  F090         	movff	?_round+3,_ComputeWaterVol$2691+3
  3621  001E86                     
  3622                           ;DepthDetection.c: 59: giGals = round(dWaterVol);
  3623  001E86  C08D  F02A         	movff	_ComputeWaterVol$2691,___fltol@f1
  3624  001E8A  C08E  F02B         	movff	_ComputeWaterVol$2691+1,___fltol@f1+1
  3625  001E8E  C08F  F02C         	movff	_ComputeWaterVol$2691+2,___fltol@f1+2
  3626  001E92  C090  F02D         	movff	_ComputeWaterVol$2691+3,___fltol@f1+3
  3627  001E96  EC62  F017         	call	___fltol	;wreg free
  3628  001E9A  C02A  F0DF         	movff	?___fltol,_giGals	;volatile
  3629  001E9E  C02B  F0E0         	movff	?___fltol+1,_giGals+1	;volatile
  3630  001EA2                     
  3631                           ;DepthDetection.c: 64: if (LATCbits.LATC0 == 1) {
  3632  001EA2  A08B               	btfss	139,0,c	;volatile
  3633  001EA4  EF56  F00F         	goto	u4101
  3634  001EA8  EF58  F00F         	goto	u4100
  3635  001EAC                     u4101:
  3636  001EAC  EF67  F00F         	goto	l5019
  3637  001EB0                     u4100:
  3638  001EB0                     
  3639                           ;DepthDetection.c: 65: if (giPercentFull < 25) LATCbits.LATC0 = 0;
  3640  001EB0  0100               	movlb	0	; () banked
  3641  001EB2  51DE               	movf	(_giPercentFull+1)& (0+255),w,b	;volatile
  3642  001EB4  E107               	bnz	u4111
  3643  001EB6  0E19               	movlw	25
  3644  001EB8  5DDD               	subwf	_giPercentFull& (0+255),w,b	;volatile
  3645  001EBA  B0D8               	btfsc	status,0,c
  3646  001EBC  EF62  F00F         	goto	u4111
  3647  001EC0  EF64  F00F         	goto	u4110
  3648  001EC4                     u4111:
  3649  001EC4  EF74  F00F         	goto	l5023
  3650  001EC8                     u4110:
  3651  001EC8                     
  3652                           ; BSR set to: 0
  3653  001EC8  908B               	bcf	139,0,c	;volatile
  3654  001ECA  EF74  F00F         	goto	l5023
  3655  001ECE                     l5019:
  3656                           
  3657                           ;DepthDetection.c: 67: if (giPercentFull > 80) LATCbits.LATC0 = 1;
  3658  001ECE  0100               	movlb	0	; () banked
  3659  001ED0  51DE               	movf	(_giPercentFull+1)& (0+255),w,b	;volatile
  3660  001ED2  E109               	bnz	u4120
  3661  001ED4  0E51               	movlw	81
  3662  001ED6  5DDD               	subwf	_giPercentFull& (0+255),w,b	;volatile
  3663  001ED8  A0D8               	btfss	status,0,c
  3664  001EDA  EF71  F00F         	goto	u4121
  3665  001EDE  EF73  F00F         	goto	u4120
  3666  001EE2                     u4121:
  3667  001EE2  EF74  F00F         	goto	l5023
  3668  001EE6                     u4120:
  3669  001EE6                     
  3670                           ; BSR set to: 0
  3671  001EE6  808B               	bsf	139,0,c	;volatile
  3672  001EE8                     l5023:
  3673                           
  3674                           ; BSR set to: 0
  3675  001EE8  EC81  F01B         	call	_LCD_DisplayResults	;wreg free
  3676  001EEC  0012               	return		;funcret
  3677  001EEE                     __end_of_ComputeWaterVol:
  3678                           	callstack 0
  3679                           
  3680 ;; *************** function _sqrt *****************
  3681 ;; Defined at:
  3682 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcsqrt.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  a               4   41[COMRAM] void 
  3685 ;; Auto vars:     Size  Location     Type
  3686 ;;  frac            4   66[COMRAM] unsigned long 
  3687 ;;  root            4   62[COMRAM] struct .
  3688 ;;  grs             4   56[COMRAM] unsigned long 
  3689 ;;  tfrac           4   51[COMRAM] unsigned long 
  3690 ;;  exp             2   60[COMRAM] int 
  3691 ;;  p               1   55[COMRAM] unsigned char 
  3692 ;;  i               1   50[COMRAM] unsigned char 
  3693 ;;  sign            1   49[COMRAM] unsigned char 
  3694 ;; Return value:  Size  Location     Type
  3695 ;;                  4   41[COMRAM] unsigned char 
  3696 ;; Registers used:
  3697 ;;		wreg, status,2, status,0
  3698 ;; Tracked objects:
  3699 ;;		On entry : 0/0
  3700 ;;		On exit  : 0/0
  3701 ;;		Unchanged: 0/0
  3702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3703 ;;      Params:         4       0       0       0       0       0       0       0       0
  3704 ;;      Locals:        21       0       0       0       0       0       0       0       0
  3705 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3706 ;;      Totals:        29       0       0       0       0       0       0       0       0
  3707 ;;Total ram usage:       29 bytes
  3708 ;; Hardware stack levels used:    1
  3709 ;; Hardware stack levels required when called:    3
  3710 ;; This function calls:
  3711 ;;		Nothing
  3712 ;; This function is called by:
  3713 ;;		_ComputeWaterVol
  3714 ;;		_InitTankVariables
  3715 ;; This function uses a non-reentrant model
  3716 ;;
  3717                           
  3718                           	psect	text18
  3719  0018D0                     __ptext18:
  3720                           	callstack 0
  3721  0018D0                     _sqrt:
  3722                           	callstack 26
  3723  0018D0  502D               	movf	(sqrt@a+3)^0,w,c
  3724  0018D2  0B80               	andlw	128
  3725  0018D4  6E32               	movwf	sqrt@sign^0,c
  3726  0018D6  502D               	movf	(sqrt@a+3)^0,w,c
  3727  0018D8  242D               	addwf	(sqrt@a+3)^0,w,c
  3728  0018DA  6E38               	movwf	sqrt@p^0,c
  3729  0018DC  AE2C               	btfss	(sqrt@a+2)^0,7,c
  3730  0018DE  EF73  F00C         	goto	u3901
  3731  0018E2  EF75  F00C         	goto	u3900
  3732  0018E6                     u3901:
  3733  0018E6  EF76  F00C         	goto	l4715
  3734  0018EA                     u3900:
  3735  0018EA  8038               	bsf	sqrt@p^0,0,c
  3736  0018EC                     l4715:
  3737  0018EC  C038  F03D         	movff	sqrt@p,sqrt@exp
  3738  0018F0  6A3E               	clrf	(sqrt@exp+1)^0,c
  3739  0018F2  0EFF               	movlw	255
  3740  0018F4  142A               	andwf	sqrt@a^0,w,c
  3741  0018F6  6E43               	movwf	sqrt@frac^0,c
  3742  0018F8  0EFF               	movlw	255
  3743  0018FA  142B               	andwf	(sqrt@a+1)^0,w,c
  3744  0018FC  6E44               	movwf	(sqrt@frac+1)^0,c
  3745  0018FE  0E7F               	movlw	127
  3746  001900  142C               	andwf	(sqrt@a+2)^0,w,c
  3747  001902  6E45               	movwf	(sqrt@frac+2)^0,c
  3748  001904  0E00               	movlw	0
  3749  001906  142D               	andwf	(sqrt@a+3)^0,w,c
  3750  001908  6E46               	movwf	(sqrt@frac+3)^0,c
  3751  00190A  503D               	movf	sqrt@exp^0,w,c
  3752  00190C  103E               	iorwf	(sqrt@exp+1)^0,w,c
  3753  00190E  B4D8               	btfsc	status,2,c
  3754  001910  EF8C  F00C         	goto	u3911
  3755  001914  EF8E  F00C         	goto	u3910
  3756  001918                     u3911:
  3757  001918  EF98  F00C         	goto	l4725
  3758  00191C                     u3910:
  3759  00191C  8E45               	bsf	(sqrt@frac+2)^0,7,c
  3760  00191E  283D               	incf	sqrt@exp^0,w,c
  3761  001920  103E               	iorwf	(sqrt@exp+1)^0,w,c
  3762  001922  A4D8               	btfss	status,2,c
  3763  001924  EF96  F00C         	goto	u3921
  3764  001928  EF98  F00C         	goto	u3920
  3765  00192C                     u3921:
  3766  00192C  EFA0  F00C         	goto	l4729
  3767  001930                     u3920:
  3768  001930                     l4725:
  3769  001930  0E00               	movlw	0
  3770  001932  6E43               	movwf	sqrt@frac^0,c
  3771  001934  0E00               	movlw	0
  3772  001936  6E44               	movwf	(sqrt@frac+1)^0,c
  3773  001938  0E00               	movlw	0
  3774  00193A  6E45               	movwf	(sqrt@frac+2)^0,c
  3775  00193C  0E00               	movlw	0
  3776  00193E  6E46               	movwf	(sqrt@frac+3)^0,c
  3777  001940                     l4729:
  3778  001940  503D               	movf	sqrt@exp^0,w,c
  3779  001942  103E               	iorwf	(sqrt@exp+1)^0,w,c
  3780  001944  A4D8               	btfss	status,2,c
  3781  001946  EFA7  F00C         	goto	u3931
  3782  00194A  EFA9  F00C         	goto	u3930
  3783  00194E                     u3931:
  3784  00194E  EFB3  F00C         	goto	l4735
  3785  001952                     u3930:
  3786  001952  0E00               	movlw	0
  3787  001954  6E2A               	movwf	?_sqrt^0,c
  3788  001956  0E00               	movlw	0
  3789  001958  6E2B               	movwf	(?_sqrt+1)^0,c
  3790  00195A  0E00               	movlw	0
  3791  00195C  6E2C               	movwf	(?_sqrt+2)^0,c
  3792  00195E  0E00               	movlw	0
  3793  001960  6E2D               	movwf	(?_sqrt+3)^0,c
  3794  001962  EFF5  F00D         	goto	l1777
  3795  001966                     l4735:
  3796  001966  5032               	movf	sqrt@sign^0,w,c
  3797  001968  B4D8               	btfsc	status,2,c
  3798  00196A  EFB9  F00C         	goto	u3941
  3799  00196E  EFBB  F00C         	goto	u3940
  3800  001972                     u3941:
  3801  001972  EFD6  F00C         	goto	l4747
  3802  001976                     u3940:
  3803  001976  0E00               	movlw	0
  3804  001978  6E3F               	movwf	sqrt@root^0,c
  3805  00197A  0E00               	movlw	0
  3806  00197C  6E40               	movwf	(sqrt@root+1)^0,c
  3807  00197E  0E40               	movlw	64
  3808  001980  6E41               	movwf	(sqrt@root+2)^0,c
  3809  001982  0E00               	movlw	0
  3810  001984  6E42               	movwf	(sqrt@root+3)^0,c
  3811  001986  0E80               	movlw	128
  3812  001988  1241               	iorwf	(sqrt@root+2)^0,f,c
  3813  00198A  0EFF               	movlw	255
  3814  00198C  1242               	iorwf	(sqrt@root+3)^0,f,c
  3815  00198E  0E00               	movlw	0
  3816  001990  0100               	movlb	0	; () banked
  3817  001992  6FD2               	movwf	(_errno+1)& (0+255),b
  3818  001994  0E21               	movlw	33
  3819  001996  6FD1               	movwf	_errno& (0+255),b
  3820  001998                     l4743:
  3821  001998  C03F  F02A         	movff	sqrt@root,?_sqrt
  3822  00199C  C040  F02B         	movff	sqrt@root+1,?_sqrt+1
  3823  0019A0  C041  F02C         	movff	sqrt@root+2,?_sqrt+2
  3824  0019A4  C042  F02D         	movff	sqrt@root+3,?_sqrt+3
  3825  0019A8  EFF5  F00D         	goto	l1777
  3826  0019AC                     l4747:
  3827  0019AC  283D               	incf	sqrt@exp^0,w,c
  3828  0019AE  103E               	iorwf	(sqrt@exp+1)^0,w,c
  3829  0019B0  A4D8               	btfss	status,2,c
  3830  0019B2  EFDD  F00C         	goto	u3951
  3831  0019B6  EFDF  F00C         	goto	u3950
  3832  0019BA                     u3951:
  3833  0019BA  EFE9  F00C         	goto	l4755
  3834  0019BE                     u3950:
  3835  0019BE  0E00               	movlw	0
  3836  0019C0  6E3F               	movwf	sqrt@root^0,c
  3837  0019C2  0E00               	movlw	0
  3838  0019C4  6E40               	movwf	(sqrt@root+1)^0,c
  3839  0019C6  0E80               	movlw	128
  3840  0019C8  6E41               	movwf	(sqrt@root+2)^0,c
  3841  0019CA  0E7F               	movlw	127
  3842  0019CC  6E42               	movwf	(sqrt@root+3)^0,c
  3843  0019CE  EFCC  F00C         	goto	l4743
  3844  0019D2                     l4755:
  3845  0019D2  0E81               	movlw	129
  3846  0019D4  263D               	addwf	sqrt@exp^0,f,c
  3847  0019D6  0EFF               	movlw	255
  3848  0019D8  223E               	addwfc	(sqrt@exp+1)^0,f,c
  3849  0019DA  503D               	movf	sqrt@exp^0,w,c
  3850  0019DC  0B01               	andlw	1
  3851  0019DE  6E38               	movwf	sqrt@p^0,c
  3852  0019E0  343E               	rlcf	(sqrt@exp+1)^0,w,c
  3853  0019E2  323E               	rrcf	(sqrt@exp+1)^0,f,c
  3854  0019E4  323D               	rrcf	sqrt@exp^0,f,c
  3855  0019E6  0E7F               	movlw	127
  3856  0019E8  263D               	addwf	sqrt@exp^0,f,c
  3857  0019EA  0E00               	movlw	0
  3858  0019EC  223E               	addwfc	(sqrt@exp+1)^0,f,c
  3859  0019EE  90D8               	bcf	status,0,c
  3860  0019F0  3443               	rlcf	sqrt@frac^0,w,c
  3861  0019F2  6E34               	movwf	sqrt@tfrac^0,c
  3862  0019F4  3444               	rlcf	(sqrt@frac+1)^0,w,c
  3863  0019F6  6E35               	movwf	(sqrt@tfrac+1)^0,c
  3864  0019F8  3445               	rlcf	(sqrt@frac+2)^0,w,c
  3865  0019FA  6E36               	movwf	(sqrt@tfrac+2)^0,c
  3866  0019FC  3446               	rlcf	(sqrt@frac+3)^0,w,c
  3867  0019FE  6E37               	movwf	(sqrt@tfrac+3)^0,c
  3868  001A00  0E00               	movlw	0
  3869  001A02  6E43               	movwf	sqrt@frac^0,c
  3870  001A04  0E00               	movlw	0
  3871  001A06  6E44               	movwf	(sqrt@frac+1)^0,c
  3872  001A08  0E00               	movlw	0
  3873  001A0A  6E45               	movwf	(sqrt@frac+2)^0,c
  3874  001A0C  0E00               	movlw	0
  3875  001A0E  6E46               	movwf	(sqrt@frac+3)^0,c
  3876  001A10  0E00               	movlw	0
  3877  001A12  6E39               	movwf	sqrt@grs^0,c
  3878  001A14  0E00               	movlw	0
  3879  001A16  6E3A               	movwf	(sqrt@grs+1)^0,c
  3880  001A18  0E00               	movlw	0
  3881  001A1A  6E3B               	movwf	(sqrt@grs+2)^0,c
  3882  001A1C  0E01               	movlw	1
  3883  001A1E  6E3C               	movwf	(sqrt@grs+3)^0,c
  3884  001A20  5038               	movf	sqrt@p^0,w,c
  3885  001A22  B4D8               	btfsc	status,2,c
  3886  001A24  EF16  F00D         	goto	u3961
  3887  001A28  EF18  F00D         	goto	u3960
  3888  001A2C                     u3961:
  3889  001A2C  EF1D  F00D         	goto	l4765
  3890  001A30                     u3960:
  3891  001A30  90D8               	bcf	status,0,c
  3892  001A32  3634               	rlcf	sqrt@tfrac^0,f,c
  3893  001A34  3635               	rlcf	(sqrt@tfrac+1)^0,f,c
  3894  001A36  3636               	rlcf	(sqrt@tfrac+2)^0,f,c
  3895  001A38  3637               	rlcf	(sqrt@tfrac+3)^0,f,c
  3896  001A3A                     l4765:
  3897  001A3A  0E00               	movlw	0
  3898  001A3C  6E33               	movwf	sqrt@i^0,c
  3899  001A3E  EF75  F00D         	goto	l4779
  3900  001A42                     l4767:
  3901  001A42  5039               	movf	sqrt@grs^0,w,c
  3902  001A44  1243               	iorwf	sqrt@frac^0,f,c
  3903  001A46  503A               	movf	(sqrt@grs+1)^0,w,c
  3904  001A48  1244               	iorwf	(sqrt@frac+1)^0,f,c
  3905  001A4A  503B               	movf	(sqrt@grs+2)^0,w,c
  3906  001A4C  1245               	iorwf	(sqrt@frac+2)^0,f,c
  3907  001A4E  503C               	movf	(sqrt@grs+3)^0,w,c
  3908  001A50  1246               	iorwf	(sqrt@frac+3)^0,f,c
  3909  001A52  5043               	movf	sqrt@frac^0,w,c
  3910  001A54  5C34               	subwf	sqrt@tfrac^0,w,c
  3911  001A56  5044               	movf	(sqrt@frac+1)^0,w,c
  3912  001A58  5835               	subwfb	(sqrt@tfrac+1)^0,w,c
  3913  001A5A  5045               	movf	(sqrt@frac+2)^0,w,c
  3914  001A5C  5836               	subwfb	(sqrt@tfrac+2)^0,w,c
  3915  001A5E  5046               	movf	(sqrt@frac+3)^0,w,c
  3916  001A60  5837               	subwfb	(sqrt@tfrac+3)^0,w,c
  3917  001A62  A0D8               	btfss	status,0,c
  3918  001A64  EF36  F00D         	goto	u3971
  3919  001A68  EF38  F00D         	goto	u3970
  3920  001A6C                     u3971:
  3921  001A6C  EF4A  F00D         	goto	l4771
  3922  001A70                     u3970:
  3923  001A70  5043               	movf	sqrt@frac^0,w,c
  3924  001A72  5E34               	subwf	sqrt@tfrac^0,f,c
  3925  001A74  5044               	movf	(sqrt@frac+1)^0,w,c
  3926  001A76  5A35               	subwfb	(sqrt@tfrac+1)^0,f,c
  3927  001A78  5045               	movf	(sqrt@frac+2)^0,w,c
  3928  001A7A  5A36               	subwfb	(sqrt@tfrac+2)^0,f,c
  3929  001A7C  5046               	movf	(sqrt@frac+3)^0,w,c
  3930  001A7E  5A37               	subwfb	(sqrt@tfrac+3)^0,f,c
  3931  001A80  5039               	movf	sqrt@grs^0,w,c
  3932  001A82  2643               	addwf	sqrt@frac^0,f,c
  3933  001A84  503A               	movf	(sqrt@grs+1)^0,w,c
  3934  001A86  2244               	addwfc	(sqrt@frac+1)^0,f,c
  3935  001A88  503B               	movf	(sqrt@grs+2)^0,w,c
  3936  001A8A  2245               	addwfc	(sqrt@frac+2)^0,f,c
  3937  001A8C  503C               	movf	(sqrt@grs+3)^0,w,c
  3938  001A8E  2246               	addwfc	(sqrt@frac+3)^0,f,c
  3939  001A90  EF5A  F00D         	goto	l4773
  3940  001A94                     l4771:
  3941  001A94  1C39               	comf	sqrt@grs^0,w,c
  3942  001A96  6E2E               	movwf	??_sqrt^0,c
  3943  001A98  1C3A               	comf	(sqrt@grs+1)^0,w,c
  3944  001A9A  6E2F               	movwf	(??_sqrt+1)^0,c
  3945  001A9C  1C3B               	comf	(sqrt@grs+2)^0,w,c
  3946  001A9E  6E30               	movwf	(??_sqrt+2)^0,c
  3947  001AA0  1C3C               	comf	(sqrt@grs+3)^0,w,c
  3948  001AA2  6E31               	movwf	(??_sqrt+3)^0,c
  3949  001AA4  502E               	movf	??_sqrt^0,w,c
  3950  001AA6  1643               	andwf	sqrt@frac^0,f,c
  3951  001AA8  502F               	movf	(??_sqrt+1)^0,w,c
  3952  001AAA  1644               	andwf	(sqrt@frac+1)^0,f,c
  3953  001AAC  5030               	movf	(??_sqrt+2)^0,w,c
  3954  001AAE  1645               	andwf	(sqrt@frac+2)^0,f,c
  3955  001AB0  5031               	movf	(??_sqrt+3)^0,w,c
  3956  001AB2  1646               	andwf	(sqrt@frac+3)^0,f,c
  3957  001AB4                     l4773:
  3958  001AB4  C039  F02E         	movff	sqrt@grs,??_sqrt
  3959  001AB8  C03A  F02F         	movff	sqrt@grs+1,??_sqrt+1
  3960  001ABC  C03B  F030         	movff	sqrt@grs+2,??_sqrt+2
  3961  001AC0  C03C  F031         	movff	sqrt@grs+3,??_sqrt+3
  3962  001AC4  90D8               	bcf	status,0,c
  3963  001AC6  3231               	rrcf	(??_sqrt+3)^0,f,c
  3964  001AC8  3230               	rrcf	(??_sqrt+2)^0,f,c
  3965  001ACA  322F               	rrcf	(??_sqrt+1)^0,f,c
  3966  001ACC  322E               	rrcf	??_sqrt^0,f,c
  3967  001ACE  C02E  F039         	movff	??_sqrt,sqrt@grs
  3968  001AD2  C02F  F03A         	movff	??_sqrt+1,sqrt@grs+1
  3969  001AD6  C030  F03B         	movff	??_sqrt+2,sqrt@grs+2
  3970  001ADA  C031  F03C         	movff	??_sqrt+3,sqrt@grs+3
  3971  001ADE  90D8               	bcf	status,0,c
  3972  001AE0  3634               	rlcf	sqrt@tfrac^0,f,c
  3973  001AE2  3635               	rlcf	(sqrt@tfrac+1)^0,f,c
  3974  001AE4  3636               	rlcf	(sqrt@tfrac+2)^0,f,c
  3975  001AE6  3637               	rlcf	(sqrt@tfrac+3)^0,f,c
  3976  001AE8  2A33               	incf	sqrt@i^0,f,c
  3977  001AEA                     l4779:
  3978  001AEA  0E18               	movlw	24
  3979  001AEC  6433               	cpfsgt	sqrt@i^0,c
  3980  001AEE  EF7B  F00D         	goto	u3981
  3981  001AF2  EF7D  F00D         	goto	u3980
  3982  001AF6                     u3981:
  3983  001AF6  EF21  F00D         	goto	l4767
  3984  001AFA                     u3980:
  3985  001AFA  C043  F02E         	movff	sqrt@frac,??_sqrt
  3986  001AFE  C044  F02F         	movff	sqrt@frac+1,??_sqrt+1
  3987  001B02  C045  F030         	movff	sqrt@frac+2,??_sqrt+2
  3988  001B06  C046  F031         	movff	sqrt@frac+3,??_sqrt+3
  3989  001B0A  90D8               	bcf	status,0,c
  3990  001B0C  3231               	rrcf	(??_sqrt+3)^0,f,c
  3991  001B0E  3230               	rrcf	(??_sqrt+2)^0,f,c
  3992  001B10  322F               	rrcf	(??_sqrt+1)^0,f,c
  3993  001B12  322E               	rrcf	??_sqrt^0,f,c
  3994  001B14  C02E  F043         	movff	??_sqrt,sqrt@frac
  3995  001B18  C02F  F044         	movff	??_sqrt+1,sqrt@frac+1
  3996  001B1C  C030  F045         	movff	??_sqrt+2,sqrt@frac+2
  3997  001B20  C031  F046         	movff	??_sqrt+3,sqrt@frac+3
  3998  001B24  0E01               	movlw	1
  3999  001B26  1443               	andwf	sqrt@frac^0,w,c
  4000  001B28  6E39               	movwf	sqrt@grs^0,c
  4001  001B2A  0E00               	movlw	0
  4002  001B2C  1444               	andwf	(sqrt@frac+1)^0,w,c
  4003  001B2E  6E3A               	movwf	(sqrt@grs+1)^0,c
  4004  001B30  0E00               	movlw	0
  4005  001B32  1445               	andwf	(sqrt@frac+2)^0,w,c
  4006  001B34  6E3B               	movwf	(sqrt@grs+2)^0,c
  4007  001B36  0E00               	movlw	0
  4008  001B38  1446               	andwf	(sqrt@frac+3)^0,w,c
  4009  001B3A  6E3C               	movwf	(sqrt@grs+3)^0,c
  4010  001B3C  C043  F02E         	movff	sqrt@frac,??_sqrt
  4011  001B40  C044  F02F         	movff	sqrt@frac+1,??_sqrt+1
  4012  001B44  C045  F030         	movff	sqrt@frac+2,??_sqrt+2
  4013  001B48  C046  F031         	movff	sqrt@frac+3,??_sqrt+3
  4014  001B4C  90D8               	bcf	status,0,c
  4015  001B4E  3231               	rrcf	(??_sqrt+3)^0,f,c
  4016  001B50  3230               	rrcf	(??_sqrt+2)^0,f,c
  4017  001B52  322F               	rrcf	(??_sqrt+1)^0,f,c
  4018  001B54  322E               	rrcf	??_sqrt^0,f,c
  4019  001B56  C02E  F043         	movff	??_sqrt,sqrt@frac
  4020  001B5A  C02F  F044         	movff	??_sqrt+1,sqrt@frac+1
  4021  001B5E  C030  F045         	movff	??_sqrt+2,sqrt@frac+2
  4022  001B62  C031  F046         	movff	??_sqrt+3,sqrt@frac+3
  4023  001B66  5039               	movf	sqrt@grs^0,w,c
  4024  001B68  2643               	addwf	sqrt@frac^0,f,c
  4025  001B6A  503A               	movf	(sqrt@grs+1)^0,w,c
  4026  001B6C  2244               	addwfc	(sqrt@frac+1)^0,f,c
  4027  001B6E  503B               	movf	(sqrt@grs+2)^0,w,c
  4028  001B70  2245               	addwfc	(sqrt@frac+2)^0,f,c
  4029  001B72  503C               	movf	(sqrt@grs+3)^0,w,c
  4030  001B74  2246               	addwfc	(sqrt@frac+3)^0,f,c
  4031  001B76  A046               	btfss	(sqrt@frac+3)^0,0,c
  4032  001B78  EFC0  F00D         	goto	u3991
  4033  001B7C  EFC2  F00D         	goto	u3990
  4034  001B80                     u3991:
  4035  001B80  EFD9  F00D         	goto	l4791
  4036  001B84                     u3990:
  4037  001B84  C043  F02E         	movff	sqrt@frac,??_sqrt
  4038  001B88  C044  F02F         	movff	sqrt@frac+1,??_sqrt+1
  4039  001B8C  C045  F030         	movff	sqrt@frac+2,??_sqrt+2
  4040  001B90  C046  F031         	movff	sqrt@frac+3,??_sqrt+3
  4041  001B94  90D8               	bcf	status,0,c
  4042  001B96  3231               	rrcf	(??_sqrt+3)^0,f,c
  4043  001B98  3230               	rrcf	(??_sqrt+2)^0,f,c
  4044  001B9A  322F               	rrcf	(??_sqrt+1)^0,f,c
  4045  001B9C  322E               	rrcf	??_sqrt^0,f,c
  4046  001B9E  C02E  F043         	movff	??_sqrt,sqrt@frac
  4047  001BA2  C02F  F044         	movff	??_sqrt+1,sqrt@frac+1
  4048  001BA6  C030  F045         	movff	??_sqrt+2,sqrt@frac+2
  4049  001BAA  C031  F046         	movff	??_sqrt+3,sqrt@frac+3
  4050  001BAE  4A3D               	infsnz	sqrt@exp^0,f,c
  4051  001BB0  2A3E               	incf	(sqrt@exp+1)^0,f,c
  4052  001BB2                     l4791:
  4053  001BB2  0EFF               	movlw	255
  4054  001BB4  1443               	andwf	sqrt@frac^0,w,c
  4055  001BB6  6E3F               	movwf	sqrt@root^0,c
  4056  001BB8  0EFF               	movlw	255
  4057  001BBA  1444               	andwf	(sqrt@frac+1)^0,w,c
  4058  001BBC  6E40               	movwf	(sqrt@root+1)^0,c
  4059  001BBE  0E7F               	movlw	127
  4060  001BC0  1445               	andwf	(sqrt@frac+2)^0,w,c
  4061  001BC2  6E41               	movwf	(sqrt@root+2)^0,c
  4062  001BC4  0E00               	movlw	0
  4063  001BC6  1446               	andwf	(sqrt@frac+3)^0,w,c
  4064  001BC8  6E42               	movwf	(sqrt@root+3)^0,c
  4065  001BCA  C03D  F038         	movff	sqrt@exp,sqrt@p
  4066  001BCE  A038               	btfss	sqrt@p^0,0,c
  4067  001BD0  EFEC  F00D         	goto	u4001
  4068  001BD4  EFEE  F00D         	goto	u4000
  4069  001BD8                     u4001:
  4070  001BD8  EFEF  F00D         	goto	l4799
  4071  001BDC                     u4000:
  4072  001BDC  8E41               	bsf	(sqrt@root+2)^0,7,c
  4073  001BDE                     l4799:
  4074  001BDE  90D8               	bcf	status,0,c
  4075  001BE0  3038               	rrcf	sqrt@p^0,w,c
  4076  001BE2  6E42               	movwf	(sqrt@root+3)^0,c
  4077  001BE4  9E42               	bcf	(sqrt@root+3)^0,7,c
  4078  001BE6  EFCC  F00C         	goto	l4743
  4079  001BEA                     l1777:
  4080  001BEA  0012               	return		;funcret
  4081  001BEC                     __end_of_sqrt:
  4082                           	callstack 0
  4083                           
  4084 ;; *************** function _LCD_DisplayResults *****************
  4085 ;; Defined at:
  4086 ;;		line 34 in file "LCD.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;		None
  4089 ;; Auto vars:     Size  Location     Type
  4090 ;;		None
  4091 ;; Return value:  Size  Location     Type
  4092 ;;                  1    wreg      void 
  4093 ;; Registers used:
  4094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4095 ;; Tracked objects:
  4096 ;;		On entry : 0/0
  4097 ;;		On exit  : 0/0
  4098 ;;		Unchanged: 0/0
  4099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4100 ;;      Params:         0       0       0       0       0       0       0       0       0
  4101 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4102 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4103 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4104 ;;Total ram usage:        0 bytes
  4105 ;; Hardware stack levels used:    1
  4106 ;; Hardware stack levels required when called:    6
  4107 ;; This function calls:
  4108 ;;		_LCD_GoTo
  4109 ;;		_LCD_WriteLine
  4110 ;;		_sprintf
  4111 ;; This function is called by:
  4112 ;;		_ComputeWaterVol
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text19
  4117  003702                     __ptext19:
  4118                           	callstack 0
  4119  003702                     _LCD_DisplayResults:
  4120                           	callstack 23
  4121  003702                     
  4122                           ;LCD.c: 36: LCD_GoTo (0, 0);
  4123  003702  0E00               	movlw	0
  4124  003704  6E07               	movwf	LCD_GoTo@iCharPos^0,c
  4125  003706  0E00               	movlw	0
  4126  003708  EC0D  F01D         	call	_LCD_GoTo
  4127  00370C                     
  4128                           ;LCD.c: 37: sprintf(sLine1, "Gals:%4u  %3u%% ", giGals, giPercentFull);
  4129  00370C  0E6C               	movlw	low _sLine1
  4130  00370E  6E0D               	movwf	sprintf@sp^0,c
  4131  003710  0E01               	movlw	high _sLine1
  4132  003712  6E0E               	movwf	(sprintf@sp+1)^0,c
  4133  003714  0E57               	movlw	low STR_3
  4134  003716  6E0F               	movwf	sprintf@f^0,c
  4135  003718  0E08               	movlw	high STR_3
  4136  00371A  6E10               	movwf	(sprintf@f+1)^0,c
  4137  00371C  C0DF  F011         	movff	_giGals,?_sprintf+4	;volatile
  4138  003720  C0E0  F012         	movff	_giGals+1,?_sprintf+5	;volatile
  4139  003724  C0DD  F013         	movff	_giPercentFull,?_sprintf+6	;volatile
  4140  003728  C0DE  F014         	movff	_giPercentFull+1,?_sprintf+7	;volatile
  4141  00372C  ECBB  F008         	call	_sprintf	;wreg free
  4142  003730                     
  4143                           ;LCD.c: 38: LCD_WriteLine (sLine1);
  4144  003730  0E6C               	movlw	low _sLine1
  4145  003732  6E09               	movwf	LCD_WriteLine@iData^0,c
  4146  003734  0E01               	movlw	high _sLine1
  4147  003736  6E0A               	movwf	(LCD_WriteLine@iData+1)^0,c
  4148  003738  EC21  F01A         	call	_LCD_WriteLine	;wreg free
  4149  00373C                     
  4150                           ;LCD.c: 40: LCD_GoTo(1, 0);
  4151  00373C  0E00               	movlw	0
  4152  00373E  6E07               	movwf	LCD_GoTo@iCharPos^0,c
  4153  003740  0E01               	movlw	1
  4154  003742  EC0D  F01D         	call	_LCD_GoTo
  4155  003746                     
  4156                           ;LCD.c: 41: sprintf(sLine2, "Echo:%4u %2u/%2u", giEmptySpace_mm,;LCD.c: 42: giAirTempC, 
      +                          giAirTempF);
  4157  003746  0E08               	movlw	low _sLine2
  4158  003748  6E0D               	movwf	sprintf@sp^0,c
  4159  00374A  0E01               	movlw	high _sLine2
  4160  00374C  6E0E               	movwf	(sprintf@sp+1)^0,c
  4161  00374E  0E68               	movlw	low STR_4
  4162  003750  6E0F               	movwf	sprintf@f^0,c
  4163  003752  0E08               	movlw	high STR_4
  4164  003754  6E10               	movwf	(sprintf@f+1)^0,c
  4165  003756  C0DB  F011         	movff	_giEmptySpace_mm,?_sprintf+4	;volatile
  4166  00375A  C0DC  F012         	movff	_giEmptySpace_mm+1,?_sprintf+5	;volatile
  4167  00375E  C0E3  F013         	movff	_giAirTempC,?_sprintf+6	;volatile
  4168  003762  C0E4  F014         	movff	_giAirTempC+1,?_sprintf+7	;volatile
  4169  003766  C0E1  F015         	movff	_giAirTempF,?_sprintf+8	;volatile
  4170  00376A  C0E2  F016         	movff	_giAirTempF+1,?_sprintf+9	;volatile
  4171  00376E  ECBB  F008         	call	_sprintf	;wreg free
  4172                           
  4173                           ;LCD.c: 43: LCD_WriteLine (sLine2);
  4174  003772  0E08               	movlw	low _sLine2
  4175  003774  6E09               	movwf	LCD_WriteLine@iData^0,c
  4176  003776  0E01               	movlw	high _sLine2
  4177  003778  6E0A               	movwf	(LCD_WriteLine@iData+1)^0,c
  4178  00377A  EC21  F01A         	call	_LCD_WriteLine	;wreg free
  4179  00377E                     
  4180                           ;LCD.c: 44: __nop();
  4181  00377E  F000               	nop	
  4182  003780  0012               	return		;funcret
  4183  003782                     __end_of_LCD_DisplayResults:
  4184                           	callstack 0
  4185                           
  4186 ;; *************** function _LCD_WriteLine *****************
  4187 ;; Defined at:
  4188 ;;		line 81 in file "LCD.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  iData           2    8[COMRAM] PTR unsigned char 
  4191 ;;		 -> sLine2(100), sLine1(100), 
  4192 ;; Auto vars:     Size  Location     Type
  4193 ;;  sLine          17   10[COMRAM] unsigned char [17]
  4194 ;;  i               2   28[COMRAM] int 
  4195 ;;  bInString       1   27[COMRAM] unsigned char 
  4196 ;; Return value:  Size  Location     Type
  4197 ;;                  1    wreg      void 
  4198 ;; Registers used:
  4199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4200 ;; Tracked objects:
  4201 ;;		On entry : 0/0
  4202 ;;		On exit  : 0/0
  4203 ;;		Unchanged: 0/0
  4204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4205 ;;      Params:         2       0       0       0       0       0       0       0       0
  4206 ;;      Locals:        20       0       0       0       0       0       0       0       0
  4207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4208 ;;      Totals:        22       0       0       0       0       0       0       0       0
  4209 ;;Total ram usage:       22 bytes
  4210 ;; Hardware stack levels used:    1
  4211 ;; Hardware stack levels required when called:    5
  4212 ;; This function calls:
  4213 ;;		_LCD_WriteString
  4214 ;; This function is called by:
  4215 ;;		_LCD_DisplayResults
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           	psect	text20
  4220  003442                     __ptext20:
  4221                           	callstack 0
  4222  003442                     _LCD_WriteLine:
  4223                           	callstack 23
  4224  003442                     
  4225                           ;LCD.c: 83: int i;;LCD.c: 84: uint8_t sLine[17];;LCD.c: 85: bool bInString = 1;
  4226  003442  0E01               	movlw	1
  4227  003444  6E1C               	movwf	LCD_WriteLine@bInString^0,c
  4228                           
  4229                           ;LCD.c: 88: for (i = 0; i < 16; i++)
  4230  003446  0E00               	movlw	0
  4231  003448  6E1E               	movwf	(LCD_WriteLine@i+1)^0,c
  4232  00344A  0E00               	movlw	0
  4233  00344C  6E1D               	movwf	LCD_WriteLine@i^0,c
  4234  00344E                     l4539:
  4235                           
  4236                           ;LCD.c: 89: {;LCD.c: 90: if (bInString)
  4237  00344E  501C               	movf	LCD_WriteLine@bInString^0,w,c
  4238  003450  B4D8               	btfsc	status,2,c
  4239  003452  EF2D  F01A         	goto	u3751
  4240  003456  EF2F  F01A         	goto	u3750
  4241  00345A                     u3751:
  4242  00345A  EF59  F01A         	goto	l4549
  4243  00345E                     u3750:
  4244  00345E                     
  4245                           ;LCD.c: 91: {;LCD.c: 92: if (iData[i] == 0)
  4246  00345E  501D               	movf	LCD_WriteLine@i^0,w,c
  4247  003460  2409               	addwf	LCD_WriteLine@iData^0,w,c
  4248  003462  6ED9               	movwf	fsr2l,c
  4249  003464  501E               	movf	(LCD_WriteLine@i+1)^0,w,c
  4250  003466  200A               	addwfc	(LCD_WriteLine@iData+1)^0,w,c
  4251  003468  6EDA               	movwf	fsr2h,c
  4252  00346A  50DF               	movf	indf2,w,c
  4253  00346C  A4D8               	btfss	status,2,c
  4254  00346E  EF3B  F01A         	goto	u3761
  4255  003472  EF3D  F01A         	goto	u3760
  4256  003476                     u3761:
  4257  003476  EF49  F01A         	goto	l4547
  4258  00347A                     u3760:
  4259  00347A                     
  4260                           ;LCD.c: 93: {;LCD.c: 94: bInString = 0;
  4261  00347A  0E00               	movlw	0
  4262  00347C  6E1C               	movwf	LCD_WriteLine@bInString^0,c
  4263  00347E                     
  4264                           ;LCD.c: 95: iData[i] = " ";
  4265  00347E  501D               	movf	LCD_WriteLine@i^0,w,c
  4266  003480  2409               	addwf	LCD_WriteLine@iData^0,w,c
  4267  003482  6ED9               	movwf	fsr2l,c
  4268  003484  501E               	movf	(LCD_WriteLine@i+1)^0,w,c
  4269  003486  200A               	addwfc	(LCD_WriteLine@iData+1)^0,w,c
  4270  003488  6EDA               	movwf	fsr2h,c
  4271  00348A  0E66               	movlw	low (STR_3+15)
  4272  00348C  6EDF               	movwf	indf2,c
  4273                           
  4274                           ;LCD.c: 96: }
  4275  00348E  EF61  F01A         	goto	l4551
  4276  003492                     l4547:
  4277                           
  4278                           ;LCD.c: 97: else;LCD.c: 98: sLine[i] = iData[i];
  4279  003492  501D               	movf	LCD_WriteLine@i^0,w,c
  4280  003494  2409               	addwf	LCD_WriteLine@iData^0,w,c
  4281  003496  6ED9               	movwf	fsr2l,c
  4282  003498  501E               	movf	(LCD_WriteLine@i+1)^0,w,c
  4283  00349A  200A               	addwfc	(LCD_WriteLine@iData+1)^0,w,c
  4284  00349C  6EDA               	movwf	fsr2h,c
  4285  00349E  0E0B               	movlw	low LCD_WriteLine@sLine
  4286  0034A0  241D               	addwf	LCD_WriteLine@i^0,w,c
  4287  0034A2  6EE1               	movwf	fsr1l,c
  4288  0034A4  0E00               	movlw	high LCD_WriteLine@sLine
  4289  0034A6  201E               	addwfc	(LCD_WriteLine@i+1)^0,w,c
  4290  0034A8  6EE2               	movwf	fsr1h,c
  4291  0034AA  CFDF FFE7          	movff	indf2,indf1
  4292  0034AE  EF61  F01A         	goto	l4551
  4293  0034B2                     l4549:
  4294                           
  4295                           ;LCD.c: 100: sLine[i] = " ";
  4296  0034B2  0E0B               	movlw	low LCD_WriteLine@sLine
  4297  0034B4  241D               	addwf	LCD_WriteLine@i^0,w,c
  4298  0034B6  6ED9               	movwf	fsr2l,c
  4299  0034B8  0E00               	movlw	high LCD_WriteLine@sLine
  4300  0034BA  201E               	addwfc	(LCD_WriteLine@i+1)^0,w,c
  4301  0034BC  6EDA               	movwf	fsr2h,c
  4302  0034BE  0E66               	movlw	low (STR_3+15)
  4303  0034C0  6EDF               	movwf	indf2,c
  4304  0034C2                     l4551:
  4305  0034C2  4A1D               	infsnz	LCD_WriteLine@i^0,f,c
  4306  0034C4  2A1E               	incf	(LCD_WriteLine@i+1)^0,f,c
  4307  0034C6  BE1E               	btfsc	(LCD_WriteLine@i+1)^0,7,c
  4308  0034C8  EF6F  F01A         	goto	u3771
  4309  0034CC  501E               	movf	(LCD_WriteLine@i+1)^0,w,c
  4310  0034CE  E109               	bnz	u3770
  4311  0034D0  0E10               	movlw	16
  4312  0034D2  5C1D               	subwf	LCD_WriteLine@i^0,w,c
  4313  0034D4  A0D8               	btfss	status,0,c
  4314  0034D6  EF6F  F01A         	goto	u3771
  4315  0034DA  EF71  F01A         	goto	u3770
  4316  0034DE                     u3771:
  4317  0034DE  EF27  F01A         	goto	l4539
  4318  0034E2                     u3770:
  4319  0034E2                     
  4320                           ;LCD.c: 101: };LCD.c: 102: sLine[i] = 0;
  4321  0034E2  0E0B               	movlw	low LCD_WriteLine@sLine
  4322  0034E4  241D               	addwf	LCD_WriteLine@i^0,w,c
  4323  0034E6  6ED9               	movwf	fsr2l,c
  4324  0034E8  0E00               	movlw	high LCD_WriteLine@sLine
  4325  0034EA  201E               	addwfc	(LCD_WriteLine@i+1)^0,w,c
  4326  0034EC  6EDA               	movwf	fsr2h,c
  4327  0034EE  0E00               	movlw	0
  4328  0034F0  6EDF               	movwf	indf2,c
  4329  0034F2                     
  4330                           ;LCD.c: 103: LCD_WriteString (sLine);
  4331  0034F2  0E0B               	movlw	low LCD_WriteLine@sLine
  4332  0034F4  6E04               	movwf	LCD_WriteString@iData^0,c
  4333  0034F6  0E00               	movlw	high LCD_WriteLine@sLine
  4334  0034F8  6E05               	movwf	(LCD_WriteString@iData+1)^0,c
  4335  0034FA  ECFD  F01B         	call	_LCD_WriteString	;wreg free
  4336  0034FE  0012               	return		;funcret
  4337  003500                     __end_of_LCD_WriteLine:
  4338                           	callstack 0
  4339                           
  4340 ;; *************** function _LCD_WriteString *****************
  4341 ;; Defined at:
  4342 ;;		line 73 in file "LCD.c"
  4343 ;; Parameters:    Size  Location     Type
  4344 ;;  iData           2    3[COMRAM] PTR unsigned char 
  4345 ;;		 -> LCD_WriteLine@sLine(17), STR_1(12), 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  ix              1    7[COMRAM] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      void 
  4350 ;; Registers used:
  4351 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4357 ;;      Params:         2       0       0       0       0       0       0       0       0
  4358 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4359 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4360 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4361 ;;Total ram usage:        5 bytes
  4362 ;; Hardware stack levels used:    1
  4363 ;; Hardware stack levels required when called:    4
  4364 ;; This function calls:
  4365 ;;		_LCD_WriteChar
  4366 ;; This function is called by:
  4367 ;;		_main
  4368 ;;		_LCD_WriteLine
  4369 ;; This function uses a non-reentrant model
  4370 ;;
  4371                           
  4372                           	psect	text21
  4373  0037FA                     __ptext21:
  4374                           	callstack 0
  4375  0037FA                     _LCD_WriteString:
  4376                           	callstack 26
  4377  0037FA                     
  4378                           ;LCD.c: 75: uint8_t ix = 0;
  4379  0037FA  0E00               	movlw	0
  4380  0037FC  6E08               	movwf	LCD_WriteString@ix^0,c
  4381                           
  4382                           ;LCD.c: 76: while (iData[ix]) {
  4383  0037FE  EF1A  F01C         	goto	l4109
  4384  003802                     l4105:
  4385                           
  4386                           ;LCD.c: 77: LCD_WriteChar (iData[ix]);
  4387  003802  5008               	movf	LCD_WriteString@ix^0,w,c
  4388  003804  2404               	addwf	LCD_WriteString@iData^0,w,c
  4389  003806  6E06               	movwf	??_LCD_WriteString^0,c
  4390  003808  0E00               	movlw	0
  4391  00380A  2005               	addwfc	(LCD_WriteString@iData+1)^0,w,c
  4392  00380C  6E07               	movwf	(??_LCD_WriteString+1)^0,c
  4393  00380E  C006  FFF6         	movff	??_LCD_WriteString,tblptrl
  4394  003812  C007  FFF7         	movff	??_LCD_WriteString+1,tblptrh
  4395  003816  6AF8               	clrf	tblptru,c
  4396  003818  0E07               	movlw	(high __ramtop+-1)
  4397  00381A  64F7               	cpfsgt	tblptrh,c
  4398  00381C  D003               	bra	u3077
  4399  00381E  0008               	tblrd		*
  4400  003820  50F5               	movf	tablat,w,c
  4401  003822  D005               	bra	u3070
  4402  003824                     u3077:
  4403  003824  CFF6 FFE1          	movff	tblptrl,fsr1l
  4404  003828  CFF7 FFE2          	movff	tblptrh,fsr1h
  4405  00382C  50E7               	movf	indf1,w,c
  4406  00382E                     u3070:
  4407  00382E  EC67  F01D         	call	_LCD_WriteChar
  4408  003832                     
  4409                           ;LCD.c: 78: ix ++;
  4410  003832  2A08               	incf	LCD_WriteString@ix^0,f,c
  4411  003834                     l4109:
  4412  003834  5008               	movf	LCD_WriteString@ix^0,w,c
  4413  003836  2404               	addwf	LCD_WriteString@iData^0,w,c
  4414  003838  6E06               	movwf	??_LCD_WriteString^0,c
  4415  00383A  0E00               	movlw	0
  4416  00383C  2005               	addwfc	(LCD_WriteString@iData+1)^0,w,c
  4417  00383E  6E07               	movwf	(??_LCD_WriteString+1)^0,c
  4418  003840  C006  FFF6         	movff	??_LCD_WriteString,tblptrl
  4419  003844  C007  FFF7         	movff	??_LCD_WriteString+1,tblptrh
  4420  003848  6AF8               	clrf	tblptru,c
  4421  00384A  0E07               	movlw	(high __ramtop+-1)
  4422  00384C  64F7               	cpfsgt	tblptrh,c
  4423  00384E  D003               	bra	u3087
  4424  003850  0008               	tblrd		*
  4425  003852  50F5               	movf	tablat,w,c
  4426  003854  D005               	bra	u3080
  4427  003856                     u3087:
  4428  003856  CFF6 FFE1          	movff	tblptrl,fsr1l
  4429  00385A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4430  00385E  50E7               	movf	indf1,w,c
  4431  003860                     u3080:
  4432  003860  0900               	iorlw	0
  4433  003862  A4D8               	btfss	status,2,c
  4434  003864  EF36  F01C         	goto	u3091
  4435  003868  EF38  F01C         	goto	u3090
  4436  00386C                     u3091:
  4437  00386C  EF01  F01C         	goto	l4105
  4438  003870                     u3090:
  4439  003870  0012               	return		;funcret
  4440  003872                     __end_of_LCD_WriteString:
  4441                           	callstack 0
  4442                           
  4443 ;; *************** function _LCD_WriteChar *****************
  4444 ;; Defined at:
  4445 ;;		line 60 in file "LCD.c"
  4446 ;; Parameters:    Size  Location     Type
  4447 ;;  iChar           1    wreg     unsigned char 
  4448 ;; Auto vars:     Size  Location     Type
  4449 ;;  iChar           1    2[COMRAM] unsigned char 
  4450 ;; Return value:  Size  Location     Type
  4451 ;;                  1    wreg      void 
  4452 ;; Registers used:
  4453 ;;		wreg, status,2, status,0
  4454 ;; Tracked objects:
  4455 ;;		On entry : 0/0
  4456 ;;		On exit  : 0/0
  4457 ;;		Unchanged: 0/0
  4458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4459 ;;      Params:         0       0       0       0       0       0       0       0       0
  4460 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4461 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4462 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4463 ;;Total ram usage:        3 bytes
  4464 ;; Hardware stack levels used:    1
  4465 ;; Hardware stack levels required when called:    3
  4466 ;; This function calls:
  4467 ;;		Nothing
  4468 ;; This function is called by:
  4469 ;;		_LCD_WriteString
  4470 ;; This function uses a non-reentrant model
  4471 ;;
  4472                           
  4473                           	psect	text22
  4474  003ACE                     __ptext22:
  4475                           	callstack 0
  4476  003ACE                     _LCD_WriteChar:
  4477                           	callstack 26
  4478                           
  4479                           ;incstack = 0
  4480                           ;LCD_WriteChar@iChar stored from wreg
  4481  003ACE  6E03               	movwf	LCD_WriteChar@iChar^0,c
  4482  003AD0  8689               	bsf	137,3,c	;volatile
  4483  003AD2  9489               	bcf	137,2,c	;volatile
  4484  003AD4  8289               	bsf	137,1,c	;volatile
  4485  003AD6                     
  4486                           ;LCD.c: 66: LATB = iChar;
  4487  003AD6  C003  FF8A         	movff	LCD_WriteChar@iChar,3978	;volatile
  4488  003ADA                     
  4489                           ;LCD.c: 67: LATCbits.LATC6 = iChar>>6;
  4490  003ADA  C003  F001         	movff	LCD_WriteChar@iChar,??_LCD_WriteChar
  4491  003ADE  0E06               	movlw	6
  4492  003AE0  6E02               	movwf	(??_LCD_WriteChar+1)^0,c
  4493  003AE2                     u2235:
  4494  003AE2  90D8               	bcf	status,0,c
  4495  003AE4  3201               	rrcf	??_LCD_WriteChar^0,f,c
  4496  003AE6  2E02               	decfsz	(??_LCD_WriteChar+1)^0,f,c
  4497  003AE8  EF71  F01D         	goto	u2235
  4498  003AEC  3A01               	swapf	??_LCD_WriteChar^0,f,c
  4499  003AEE  4601               	rlncf	??_LCD_WriteChar^0,f,c
  4500  003AF0  4601               	rlncf	??_LCD_WriteChar^0,f,c
  4501  003AF2  508B               	movf	139,w,c	;volatile
  4502  003AF4  1801               	xorwf	??_LCD_WriteChar^0,w,c
  4503  003AF6  0BBF               	andlw	-65
  4504  003AF8  1801               	xorwf	??_LCD_WriteChar^0,w,c
  4505  003AFA  6E8B               	movwf	139,c	;volatile
  4506  003AFC                     
  4507                           ;LCD.c: 68: LATCbits.LATC7 = iChar>>7;
  4508  003AFC  6A01               	clrf	??_LCD_WriteChar^0,c
  4509  003AFE  AE03               	btfss	LCD_WriteChar@iChar^0,7,c
  4510  003B00  D001               	bra	u2245
  4511  003B02  2A01               	incf	??_LCD_WriteChar^0,f,c
  4512  003B04                     u2245:
  4513  003B04  3201               	rrcf	??_LCD_WriteChar^0,f,c
  4514  003B06  3201               	rrcf	??_LCD_WriteChar^0,f,c
  4515  003B08  508B               	movf	139,w,c	;volatile
  4516  003B0A  1801               	xorwf	??_LCD_WriteChar^0,w,c
  4517  003B0C  0B7F               	andlw	-129
  4518  003B0E  1801               	xorwf	??_LCD_WriteChar^0,w,c
  4519  003B10  6E8B               	movwf	139,c	;volatile
  4520  003B12  9289               	bcf	137,1,c	;volatile
  4521  003B14                     
  4522                           ;LCD.c: 70: _delay((unsigned long)((40+10)*(8000000/4000000.0)));
  4523  003B14  0E21               	movlw	33
  4524  003B16                     u4407:
  4525  003B16  2EE8               	decfsz	wreg,f,c
  4526  003B18  D7FE               	bra	u4407
  4527  003B1A  F000               	nop	
  4528  003B1C  0012               	return		;funcret
  4529  003B1E                     __end_of_LCD_WriteChar:
  4530                           	callstack 0
  4531                           
  4532 ;; *************** function _ComputeTemp *****************
  4533 ;; Defined at:
  4534 ;;		line 56 in file "TempCalc.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0
  4549 ;;      Locals:         0      12       0       0       0       0       0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4551 ;;      Totals:         0      12       0       0       0       0       0       0       0
  4552 ;;Total ram usage:       12 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; Hardware stack levels required when called:    7
  4555 ;; This function calls:
  4556 ;;		___fladd
  4557 ;;		___fldiv
  4558 ;;		___flmul
  4559 ;;		___flsub
  4560 ;;		___fltol
  4561 ;;		___xxtofl
  4562 ;;		_log
  4563 ;;		_round
  4564 ;; This function is called by:
  4565 ;;		_main
  4566 ;; This function uses a non-reentrant model
  4567 ;;
  4568                           
  4569                           	psect	text23
  4570  0021D6                     __ptext23:
  4571                           	callstack 0
  4572  0021D6                     _ComputeTemp:
  4573                           	callstack 23
  4574  0021D6                     
  4575                           ;TempCalc.c: 58: gfVtherm = (5.075 * giTempCapture)/1023;
  4576  0021D6  0E66               	movlw	102
  4577  0021D8  6E5A               	movwf	___flmul@a^0,c
  4578  0021DA  0E66               	movlw	102
  4579  0021DC  6E5B               	movwf	(___flmul@a+1)^0,c
  4580  0021DE  0EA2               	movlw	162
  4581  0021E0  6E5C               	movwf	(___flmul@a+2)^0,c
  4582  0021E2  0E40               	movlw	64
  4583  0021E4  6E5D               	movwf	(___flmul@a+3)^0,c
  4584  0021E6  C0F7  F034         	movff	_giTempCapture,___xxtofl@val	;volatile
  4585  0021EA  C0F8  F035         	movff	_giTempCapture+1,___xxtofl@val+1	;volatile
  4586  0021EE  6A36               	clrf	(___xxtofl@val+2)^0,c
  4587  0021F0  6A37               	clrf	(___xxtofl@val+3)^0,c
  4588  0021F2  0E00               	movlw	0
  4589  0021F4  EC67  F013         	call	___xxtofl
  4590  0021F8  C034  F056         	movff	?___xxtofl,___flmul@b
  4591  0021FC  C035  F057         	movff	?___xxtofl+1,___flmul@b+1
  4592  002200  C036  F058         	movff	?___xxtofl+2,___flmul@b+2
  4593  002204  C037  F059         	movff	?___xxtofl+3,___flmul@b+3
  4594  002208  ECA5  F006         	call	___flmul	;wreg free
  4595  00220C  C056  F001         	movff	?___flmul,___fldiv@b
  4596  002210  C057  F002         	movff	?___flmul+1,___fldiv@b+1
  4597  002214  C058  F003         	movff	?___flmul+2,___fldiv@b+2
  4598  002218  C059  F004         	movff	?___flmul+3,___fldiv@b+3
  4599  00221C  0E00               	movlw	0
  4600  00221E  6E05               	movwf	___fldiv@a^0,c
  4601  002220  0EC0               	movlw	192
  4602  002222  6E06               	movwf	(___fldiv@a+1)^0,c
  4603  002224  0E7F               	movlw	127
  4604  002226  6E07               	movwf	(___fldiv@a+2)^0,c
  4605  002228  0E44               	movlw	68
  4606  00222A  6E08               	movwf	(___fldiv@a+3)^0,c
  4607  00222C  EC9B  F00A         	call	___fldiv	;wreg free
  4608  002230  C001  F0C9         	movff	?___fldiv,_gfVtherm
  4609  002234  C002  F0CA         	movff	?___fldiv+1,_gfVtherm+1
  4610  002238  C003  F0CB         	movff	?___fldiv+2,_gfVtherm+2
  4611  00223C  C004  F0CC         	movff	?___fldiv+3,_gfVtherm+3
  4612                           
  4613                           ;TempCalc.c: 59: gfRtherm = gfVtherm * 4700 / (5.075 - gfVtherm);
  4614  002240  0E00               	movlw	0
  4615  002242  6E5A               	movwf	___flmul@a^0,c
  4616  002244  0EE0               	movlw	224
  4617  002246  6E5B               	movwf	(___flmul@a+1)^0,c
  4618  002248  0E92               	movlw	146
  4619  00224A  6E5C               	movwf	(___flmul@a+2)^0,c
  4620  00224C  0E45               	movlw	69
  4621  00224E  6E5D               	movwf	(___flmul@a+3)^0,c
  4622  002250  C0C9  F056         	movff	_gfVtherm,___flmul@b
  4623  002254  C0CA  F057         	movff	_gfVtherm+1,___flmul@b+1
  4624  002258  C0CB  F058         	movff	_gfVtherm+2,___flmul@b+2
  4625  00225C  C0CC  F059         	movff	_gfVtherm+3,___flmul@b+3
  4626  002260  ECA5  F006         	call	___flmul	;wreg free
  4627  002264  C056  F001         	movff	?___flmul,___fldiv@b
  4628  002268  C057  F002         	movff	?___flmul+1,___fldiv@b+1
  4629  00226C  C058  F003         	movff	?___flmul+2,___fldiv@b+2
  4630  002270  C059  F004         	movff	?___flmul+3,___fldiv@b+3
  4631  002274  C0C9  F06A         	movff	_gfVtherm,___flsub@a
  4632  002278  C0CA  F06B         	movff	_gfVtherm+1,___flsub@a+1
  4633  00227C  C0CB  F06C         	movff	_gfVtherm+2,___flsub@a+2
  4634  002280  C0CC  F06D         	movff	_gfVtherm+3,___flsub@a+3
  4635  002284  0E66               	movlw	102
  4636  002286  0100               	movlb	0	; () banked
  4637  002288  6F66               	movwf	___flsub@b& (0+255),b
  4638  00228A  0E66               	movlw	102
  4639  00228C  6F67               	movwf	(___flsub@b+1)& (0+255),b
  4640  00228E  0EA2               	movlw	162
  4641  002290  6F68               	movwf	(___flsub@b+2)& (0+255),b
  4642  002292  0E40               	movlw	64
  4643  002294  6F69               	movwf	(___flsub@b+3)& (0+255),b
  4644  002296  EC8F  F01D         	call	___flsub	;wreg free
  4645  00229A  C066  F005         	movff	?___flsub,___fldiv@a
  4646  00229E  C067  F006         	movff	?___flsub+1,___fldiv@a+1
  4647  0022A2  C068  F007         	movff	?___flsub+2,___fldiv@a+2
  4648  0022A6  C069  F008         	movff	?___flsub+3,___fldiv@a+3
  4649  0022AA  EC9B  F00A         	call	___fldiv	;wreg free
  4650  0022AE  C001  F0C5         	movff	?___fldiv,_gfRtherm
  4651  0022B2  C002  F0C6         	movff	?___fldiv+1,_gfRtherm+1
  4652  0022B6  C003  F0C7         	movff	?___fldiv+2,_gfRtherm+2
  4653  0022BA  C004  F0C8         	movff	?___fldiv+3,_gfRtherm+3
  4654  0022BE                     
  4655                           ;TempCalc.c: 60: gfRRatio = gfRtherm / 0.01763227;
  4656  0022BE  C0C5  F001         	movff	_gfRtherm,___fldiv@b
  4657  0022C2  C0C6  F002         	movff	_gfRtherm+1,___fldiv@b+1
  4658  0022C6  C0C7  F003         	movff	_gfRtherm+2,___fldiv@b+2
  4659  0022CA  C0C8  F004         	movff	_gfRtherm+3,___fldiv@b+3
  4660  0022CE  0E8D               	movlw	141
  4661  0022D0  6E05               	movwf	___fldiv@a^0,c
  4662  0022D2  0E71               	movlw	113
  4663  0022D4  6E06               	movwf	(___fldiv@a+1)^0,c
  4664  0022D6  0E90               	movlw	144
  4665  0022D8  6E07               	movwf	(___fldiv@a+2)^0,c
  4666  0022DA  0E3C               	movlw	60
  4667  0022DC  6E08               	movwf	(___fldiv@a+3)^0,c
  4668  0022DE  EC9B  F00A         	call	___fldiv	;wreg free
  4669  0022E2  C001  F0C1         	movff	?___fldiv,_gfRRatio
  4670  0022E6  C002  F0C2         	movff	?___fldiv+1,_gfRRatio+1
  4671  0022EA  C003  F0C3         	movff	?___fldiv+2,_gfRRatio+2
  4672  0022EE  C004  F0C4         	movff	?___fldiv+3,_gfRRatio+3
  4673  0022F2                     
  4674                           ;TempCalc.c: 61: gfLnRRatio = log(gfRRatio);
  4675  0022F2  C0C1  F081         	movff	_gfRRatio,log@x
  4676  0022F6  C0C2  F082         	movff	_gfRRatio+1,log@x+1
  4677  0022FA  C0C3  F083         	movff	_gfRRatio+2,log@x+2
  4678  0022FE  C0C4  F084         	movff	_gfRRatio+3,log@x+3
  4679  002302  EC41  F014         	call	_log	;wreg free
  4680  002306  C081  F0F3         	movff	?_log,_gfLnRRatio
  4681  00230A  C082  F0F4         	movff	?_log+1,_gfLnRRatio+1
  4682  00230E  C083  F0F5         	movff	?_log+2,_gfLnRRatio+2
  4683  002312  C084  F0F6         	movff	?_log+3,_gfLnRRatio+3
  4684  002316                     
  4685                           ;TempCalc.c: 62: gfAirTempC = 3950.0 / gfLnRRatio - 273.15;
  4686  002316  C0F3  F005         	movff	_gfLnRRatio,___fldiv@a
  4687  00231A  C0F4  F006         	movff	_gfLnRRatio+1,___fldiv@a+1
  4688  00231E  C0F5  F007         	movff	_gfLnRRatio+2,___fldiv@a+2
  4689  002322  C0F6  F008         	movff	_gfLnRRatio+3,___fldiv@a+3
  4690  002326  0E00               	movlw	0
  4691  002328  6E01               	movwf	___fldiv@b^0,c
  4692  00232A  0EE0               	movlw	224
  4693  00232C  6E02               	movwf	(___fldiv@b+1)^0,c
  4694  00232E  0E76               	movlw	118
  4695  002330  6E03               	movwf	(___fldiv@b+2)^0,c
  4696  002332  0E45               	movlw	69
  4697  002334  6E04               	movwf	(___fldiv@b+3)^0,c
  4698  002336  EC9B  F00A         	call	___fldiv	;wreg free
  4699  00233A  C001  F01A         	movff	?___fldiv,___fladd@b
  4700  00233E  C002  F01B         	movff	?___fldiv+1,___fladd@b+1
  4701  002342  C003  F01C         	movff	?___fldiv+2,___fladd@b+2
  4702  002346  C004  F01D         	movff	?___fldiv+3,___fladd@b+3
  4703  00234A  0E33               	movlw	51
  4704  00234C  6E1E               	movwf	___fladd@a^0,c
  4705  00234E  0E93               	movlw	147
  4706  002350  6E1F               	movwf	(___fladd@a+1)^0,c
  4707  002352  0E88               	movlw	136
  4708  002354  6E20               	movwf	(___fladd@a+2)^0,c
  4709  002356  0EC3               	movlw	195
  4710  002358  6E21               	movwf	(___fladd@a+3)^0,c
  4711  00235A  EC45  F004         	call	___fladd	;wreg free
  4712  00235E  C01A  F0CD         	movff	?___fladd,_gfAirTempC	;volatile
  4713  002362  C01B  F0CE         	movff	?___fladd+1,_gfAirTempC+1	;volatile
  4714  002366  C01C  F0CF         	movff	?___fladd+2,_gfAirTempC+2	;volatile
  4715  00236A  C01D  F0D0         	movff	?___fladd+3,_gfAirTempC+3	;volatile
  4716  00236E                     
  4717                           ;TempCalc.c: 63: giAirTempC = (int) round(gfAirTempC);
  4718  00236E  C0CD  F071         	movff	_gfAirTempC,round@x	;volatile
  4719  002372  C0CE  F072         	movff	_gfAirTempC+1,round@x+1	;volatile
  4720  002376  C0CF  F073         	movff	_gfAirTempC+2,round@x+2	;volatile
  4721  00237A  C0D0  F074         	movff	_gfAirTempC+3,round@x+3	;volatile
  4722  00237E  EC30  F01B         	call	_round	;wreg free
  4723  002382  C071  F087         	movff	?_round,_ComputeTemp$2688
  4724  002386  C072  F088         	movff	?_round+1,_ComputeTemp$2688+1
  4725  00238A  C073  F089         	movff	?_round+2,_ComputeTemp$2688+2
  4726  00238E  C074  F08A         	movff	?_round+3,_ComputeTemp$2688+3
  4727  002392                     
  4728                           ;TempCalc.c: 63: giAirTempC = (int) round(gfAirTempC);
  4729  002392  C087  F02A         	movff	_ComputeTemp$2688,___fltol@f1
  4730  002396  C088  F02B         	movff	_ComputeTemp$2688+1,___fltol@f1+1
  4731  00239A  C089  F02C         	movff	_ComputeTemp$2688+2,___fltol@f1+2
  4732  00239E  C08A  F02D         	movff	_ComputeTemp$2688+3,___fltol@f1+3
  4733  0023A2  EC62  F017         	call	___fltol	;wreg free
  4734  0023A6  C02A  F0E3         	movff	?___fltol,_giAirTempC	;volatile
  4735  0023AA  C02B  F0E4         	movff	?___fltol+1,_giAirTempC+1	;volatile
  4736  0023AE                     
  4737                           ;TempCalc.c: 64: giAirTempF = (int) round((gfAirTempC * 9 / 5) + 32);
  4738  0023AE  0E00               	movlw	0
  4739  0023B0  6E1E               	movwf	___fladd@a^0,c
  4740  0023B2  0E00               	movlw	0
  4741  0023B4  6E1F               	movwf	(___fladd@a+1)^0,c
  4742  0023B6  0E00               	movlw	0
  4743  0023B8  6E20               	movwf	(___fladd@a+2)^0,c
  4744  0023BA  0E42               	movlw	66
  4745  0023BC  6E21               	movwf	(___fladd@a+3)^0,c
  4746  0023BE  0E00               	movlw	0
  4747  0023C0  6E05               	movwf	___fldiv@a^0,c
  4748  0023C2  0E00               	movlw	0
  4749  0023C4  6E06               	movwf	(___fldiv@a+1)^0,c
  4750  0023C6  0EA0               	movlw	160
  4751  0023C8  6E07               	movwf	(___fldiv@a+2)^0,c
  4752  0023CA  0E40               	movlw	64
  4753  0023CC  6E08               	movwf	(___fldiv@a+3)^0,c
  4754  0023CE  0E00               	movlw	0
  4755  0023D0  6E5A               	movwf	___flmul@a^0,c
  4756  0023D2  0E00               	movlw	0
  4757  0023D4  6E5B               	movwf	(___flmul@a+1)^0,c
  4758  0023D6  0E10               	movlw	16
  4759  0023D8  6E5C               	movwf	(___flmul@a+2)^0,c
  4760  0023DA  0E41               	movlw	65
  4761  0023DC  6E5D               	movwf	(___flmul@a+3)^0,c
  4762  0023DE  C0CD  F056         	movff	_gfAirTempC,___flmul@b	;volatile
  4763  0023E2  C0CE  F057         	movff	_gfAirTempC+1,___flmul@b+1	;volatile
  4764  0023E6  C0CF  F058         	movff	_gfAirTempC+2,___flmul@b+2	;volatile
  4765  0023EA  C0D0  F059         	movff	_gfAirTempC+3,___flmul@b+3	;volatile
  4766  0023EE  ECA5  F006         	call	___flmul	;wreg free
  4767  0023F2  C056  F001         	movff	?___flmul,___fldiv@b
  4768  0023F6  C057  F002         	movff	?___flmul+1,___fldiv@b+1
  4769  0023FA  C058  F003         	movff	?___flmul+2,___fldiv@b+2
  4770  0023FE  C059  F004         	movff	?___flmul+3,___fldiv@b+3
  4771  002402  EC9B  F00A         	call	___fldiv	;wreg free
  4772  002406  C001  F01A         	movff	?___fldiv,___fladd@b
  4773  00240A  C002  F01B         	movff	?___fldiv+1,___fladd@b+1
  4774  00240E  C003  F01C         	movff	?___fldiv+2,___fladd@b+2
  4775  002412  C004  F01D         	movff	?___fldiv+3,___fladd@b+3
  4776  002416  EC45  F004         	call	___fladd	;wreg free
  4777  00241A  C01A  F08B         	movff	?___fladd,_ComputeTemp$2689
  4778  00241E  C01B  F08C         	movff	?___fladd+1,_ComputeTemp$2689+1
  4779  002422  C01C  F08D         	movff	?___fladd+2,_ComputeTemp$2689+2
  4780  002426  C01D  F08E         	movff	?___fladd+3,_ComputeTemp$2689+3
  4781  00242A                     
  4782                           ;TempCalc.c: 64: giAirTempF = (int) round((gfAirTempC * 9 / 5) + 32);
  4783  00242A  C08B  F071         	movff	_ComputeTemp$2689,round@x
  4784  00242E  C08C  F072         	movff	_ComputeTemp$2689+1,round@x+1
  4785  002432  C08D  F073         	movff	_ComputeTemp$2689+2,round@x+2
  4786  002436  C08E  F074         	movff	_ComputeTemp$2689+3,round@x+3
  4787  00243A  EC30  F01B         	call	_round	;wreg free
  4788  00243E  C071  F08F         	movff	?_round,_ComputeTemp$2690
  4789  002442  C072  F090         	movff	?_round+1,_ComputeTemp$2690+1
  4790  002446  C073  F091         	movff	?_round+2,_ComputeTemp$2690+2
  4791  00244A  C074  F092         	movff	?_round+3,_ComputeTemp$2690+3
  4792  00244E                     
  4793                           ;TempCalc.c: 64: giAirTempF = (int) round((gfAirTempC * 9 / 5) + 32);
  4794  00244E  C08F  F02A         	movff	_ComputeTemp$2690,___fltol@f1
  4795  002452  C090  F02B         	movff	_ComputeTemp$2690+1,___fltol@f1+1
  4796  002456  C091  F02C         	movff	_ComputeTemp$2690+2,___fltol@f1+2
  4797  00245A  C092  F02D         	movff	_ComputeTemp$2690+3,___fltol@f1+3
  4798  00245E  EC62  F017         	call	___fltol	;wreg free
  4799  002462  C02A  F0E1         	movff	?___fltol,_giAirTempF	;volatile
  4800  002466  C02B  F0E2         	movff	?___fltol+1,_giAirTempF+1	;volatile
  4801  00246A                     
  4802                           ;TempCalc.c: 65: __nop();
  4803  00246A  F000               	nop	
  4804  00246C  0012               	return		;funcret
  4805  00246E                     __end_of_ComputeTemp:
  4806                           	callstack 0
  4807                           
  4808 ;; *************** function _round *****************
  4809 ;; Defined at:
  4810 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\round.c"
  4811 ;; Parameters:    Size  Location     Type
  4812 ;;  x               4   17[BANK0 ] void 
  4813 ;; Auto vars:     Size  Location     Type
  4814 ;;  f               4   21[BANK0 ] void 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  4   17[BANK0 ] void 
  4817 ;; Registers used:
  4818 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4824 ;;      Params:         0       4       0       0       0       0       0       0       0
  4825 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4827 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4828 ;;Total ram usage:        8 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    6
  4831 ;; This function calls:
  4832 ;;		___fladd
  4833 ;;		___flsub
  4834 ;;		_trunc
  4835 ;; This function is called by:
  4836 ;;		_ComputeTemp
  4837 ;;		_ComputeWaterVol
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           	psect	text24
  4842  003660                     __ptext24:
  4843                           	callstack 0
  4844  003660                     _round:
  4845                           	callstack 23
  4846  003660  C071  F066         	movff	round@x,___flsub@b
  4847  003664  C072  F067         	movff	round@x+1,___flsub@b+1
  4848  003668  C073  F068         	movff	round@x+2,___flsub@b+2
  4849  00366C  C074  F069         	movff	round@x+3,___flsub@b+3
  4850  003670  C071  F056         	movff	round@x,trunc@x
  4851  003674  C072  F057         	movff	round@x+1,trunc@x+1
  4852  003678  C073  F058         	movff	round@x+2,trunc@x+2
  4853  00367C  C074  F059         	movff	round@x+3,trunc@x+3
  4854  003680  EC80  F01A         	call	_trunc	;wreg free
  4855  003684  C056  F06A         	movff	?_trunc,___flsub@a
  4856  003688  C057  F06B         	movff	?_trunc+1,___flsub@a+1
  4857  00368C  C058  F06C         	movff	?_trunc+2,___flsub@a+2
  4858  003690  C059  F06D         	movff	?_trunc+3,___flsub@a+3
  4859  003694  EC8F  F01D         	call	___flsub	;wreg free
  4860  003698  C066  F075         	movff	?___flsub,round@f
  4861  00369C  C067  F076         	movff	?___flsub+1,round@f+1
  4862  0036A0  C068  F077         	movff	?___flsub+2,round@f+2
  4863  0036A4  C069  F078         	movff	?___flsub+3,round@f+3
  4864  0036A8  C071  F01A         	movff	round@x,___fladd@b
  4865  0036AC  C072  F01B         	movff	round@x+1,___fladd@b+1
  4866  0036B0  C073  F01C         	movff	round@x+2,___fladd@b+2
  4867  0036B4  C074  F01D         	movff	round@x+3,___fladd@b+3
  4868  0036B8  C075  F01E         	movff	round@f,___fladd@a
  4869  0036BC  C076  F01F         	movff	round@f+1,___fladd@a+1
  4870  0036C0  C077  F020         	movff	round@f+2,___fladd@a+2
  4871  0036C4  C078  F021         	movff	round@f+3,___fladd@a+3
  4872  0036C8  EC45  F004         	call	___fladd	;wreg free
  4873  0036CC  C01A  F071         	movff	?___fladd,round@x
  4874  0036D0  C01B  F072         	movff	?___fladd+1,round@x+1
  4875  0036D4  C01C  F073         	movff	?___fladd+2,round@x+2
  4876  0036D8  C01D  F074         	movff	?___fladd+3,round@x+3
  4877  0036DC  C071  F056         	movff	round@x,trunc@x
  4878  0036E0  C072  F057         	movff	round@x+1,trunc@x+1
  4879  0036E4  C073  F058         	movff	round@x+2,trunc@x+2
  4880  0036E8  C074  F059         	movff	round@x+3,trunc@x+3
  4881  0036EC  EC80  F01A         	call	_trunc	;wreg free
  4882  0036F0  C056  F071         	movff	?_trunc,?_round
  4883  0036F4  C057  F072         	movff	?_trunc+1,?_round+1
  4884  0036F8  C058  F073         	movff	?_trunc+2,?_round+2
  4885  0036FC  C059  F074         	movff	?_trunc+3,?_round+3
  4886  003700  0012               	return		;funcret
  4887  003702                     __end_of_round:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _trunc *****************
  4891 ;; Defined at:
  4892 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\trunc.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  x               4   85[COMRAM] void 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  i               4    0[BANK0 ] void 
  4897 ;;  expon           2    4[BANK0 ] int 
  4898 ;; Return value:  Size  Location     Type
  4899 ;;                  4   85[COMRAM] int 
  4900 ;; Registers used:
  4901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4902 ;; Tracked objects:
  4903 ;;		On entry : 0/0
  4904 ;;		On exit  : 0/0
  4905 ;;		Unchanged: 0/0
  4906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4907 ;;      Params:         4       0       0       0       0       0       0       0       0
  4908 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4910 ;;      Totals:         4       6       0       0       0       0       0       0       0
  4911 ;;Total ram usage:       10 bytes
  4912 ;; Hardware stack levels used:    1
  4913 ;; Hardware stack levels required when called:    5
  4914 ;; This function calls:
  4915 ;;		___fltol
  4916 ;;		___xxtofl
  4917 ;;		_frexp
  4918 ;; This function is called by:
  4919 ;;		_round
  4920 ;; This function uses a non-reentrant model
  4921 ;;
  4922                           
  4923                           	psect	text25
  4924  003500                     __ptext25:
  4925                           	callstack 0
  4926  003500                     _trunc:
  4927                           	callstack 23
  4928  003500  C056  F04E         	movff	trunc@x,frexp@value
  4929  003504  C057  F04F         	movff	trunc@x+1,frexp@value+1
  4930  003508  C058  F050         	movff	trunc@x+2,frexp@value+2
  4931  00350C  C059  F051         	movff	trunc@x+3,frexp@value+3
  4932  003510  0E64               	movlw	low trunc@expon
  4933  003512  6E52               	movwf	frexp@eptr^0,c
  4934  003514  0E00               	movlw	high trunc@expon
  4935  003516  6E53               	movwf	(frexp@eptr+1)^0,c
  4936  003518  ECBF  F019         	call	_frexp	;wreg free
  4937  00351C  0100               	movlb	0	; () banked
  4938  00351E  BF65               	btfsc	(trunc@expon+1)& (0+255),7,b
  4939  003520  EF96  F01A         	goto	u3880
  4940  003524  EF94  F01A         	goto	u3881
  4941  003528                     u3881:
  4942  003528  EFA0  F01A         	goto	l4635
  4943  00352C                     u3880:
  4944  00352C                     
  4945                           ; BSR set to: 0
  4946  00352C  0E00               	movlw	0
  4947  00352E  6E56               	movwf	?_trunc^0,c
  4948  003530  0E00               	movlw	0
  4949  003532  6E57               	movwf	(?_trunc+1)^0,c
  4950  003534  0E00               	movlw	0
  4951  003536  6E58               	movwf	(?_trunc+2)^0,c
  4952  003538  0E00               	movlw	0
  4953  00353A  6E59               	movwf	(?_trunc+3)^0,c
  4954  00353C  EFDA  F01A         	goto	l1924
  4955  003540                     l4635:
  4956                           
  4957                           ; BSR set to: 0
  4958  003540  5165               	movf	(trunc@expon+1)& (0+255),w,b
  4959  003542  E109               	bnz	u3890
  4960  003544  0E1D               	movlw	29
  4961  003546  5D64               	subwf	trunc@expon& (0+255),w,b
  4962  003548  A0D8               	btfss	status,0,c
  4963  00354A  EFA9  F01A         	goto	u3891
  4964  00354E  EFAB  F01A         	goto	u3890
  4965  003552                     u3891:
  4966  003552  EFB5  F01A         	goto	l4639
  4967  003556                     u3890:
  4968  003556                     
  4969                           ; BSR set to: 0
  4970  003556  C056  F056         	movff	trunc@x,?_trunc
  4971  00355A  C057  F057         	movff	trunc@x+1,?_trunc+1
  4972  00355E  C058  F058         	movff	trunc@x+2,?_trunc+2
  4973  003562  C059  F059         	movff	trunc@x+3,?_trunc+3
  4974  003566  EFDA  F01A         	goto	l1924
  4975  00356A                     l4639:
  4976                           
  4977                           ; BSR set to: 0
  4978  00356A  C056  F02A         	movff	trunc@x,___fltol@f1
  4979  00356E  C057  F02B         	movff	trunc@x+1,___fltol@f1+1
  4980  003572  C058  F02C         	movff	trunc@x+2,___fltol@f1+2
  4981  003576  C059  F02D         	movff	trunc@x+3,___fltol@f1+3
  4982  00357A  EC62  F017         	call	___fltol	;wreg free
  4983  00357E  C02A  F034         	movff	?___fltol,___xxtofl@val
  4984  003582  C02B  F035         	movff	?___fltol+1,___xxtofl@val+1
  4985  003586  C02C  F036         	movff	?___fltol+2,___xxtofl@val+2
  4986  00358A  C02D  F037         	movff	?___fltol+3,___xxtofl@val+3
  4987  00358E  0E01               	movlw	1
  4988  003590  EC67  F013         	call	___xxtofl
  4989  003594  C034  F060         	movff	?___xxtofl,trunc@i
  4990  003598  C035  F061         	movff	?___xxtofl+1,trunc@i+1
  4991  00359C  C036  F062         	movff	?___xxtofl+2,trunc@i+2
  4992  0035A0  C037  F063         	movff	?___xxtofl+3,trunc@i+3
  4993  0035A4  C060  F056         	movff	trunc@i,?_trunc
  4994  0035A8  C061  F057         	movff	trunc@i+1,?_trunc+1
  4995  0035AC  C062  F058         	movff	trunc@i+2,?_trunc+2
  4996  0035B0  C063  F059         	movff	trunc@i+3,?_trunc+3
  4997  0035B4                     l1924:
  4998  0035B4  0012               	return		;funcret
  4999  0035B6                     __end_of_trunc:
  5000                           	callstack 0
  5001                           
  5002 ;; *************** function ___fltol *****************
  5003 ;; Defined at:
  5004 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  f1              4   41[COMRAM] int 
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  exp1            1   50[COMRAM] unsigned char 
  5009 ;;  sign1           1   49[COMRAM] unsigned char 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  4   41[COMRAM] long 
  5012 ;; Registers used:
  5013 ;;		wreg, status,2, status,0
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5019 ;;      Params:         4       0       0       0       0       0       0       0       0
  5020 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5021 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5022 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5023 ;;Total ram usage:       10 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; Hardware stack levels required when called:    3
  5026 ;; This function calls:
  5027 ;;		Nothing
  5028 ;; This function is called by:
  5029 ;;		_ComputeTemp
  5030 ;;		_ComputeWaterVol
  5031 ;;		_pow
  5032 ;;		_exp
  5033 ;;		_floor
  5034 ;;		_trunc
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text26
  5039  002EC4                     __ptext26:
  5040                           	callstack 0
  5041  002EC4                     ___fltol:
  5042                           	callstack 23
  5043  002EC4  342C               	rlcf	(___fltol@f1+2)^0,w,c
  5044  002EC6  342D               	rlcf	(___fltol@f1+3)^0,w,c
  5045  002EC8  6E33               	movwf	___fltol@exp1^0,c
  5046  002ECA  5033               	movf	___fltol@exp1^0,w,c
  5047  002ECC  A4D8               	btfss	status,2,c
  5048  002ECE  EF6B  F017         	goto	u2881
  5049  002ED2  EF6D  F017         	goto	u2880
  5050  002ED6                     u2881:
  5051  002ED6  EF77  F017         	goto	l3999
  5052  002EDA                     u2880:
  5053  002EDA                     l3995:
  5054  002EDA  0E00               	movlw	0
  5055  002EDC  6E2A               	movwf	?___fltol^0,c
  5056  002EDE  0E00               	movlw	0
  5057  002EE0  6E2B               	movwf	(?___fltol+1)^0,c
  5058  002EE2  0E00               	movlw	0
  5059  002EE4  6E2C               	movwf	(?___fltol+2)^0,c
  5060  002EE6  0E00               	movlw	0
  5061  002EE8  6E2D               	movwf	(?___fltol+3)^0,c
  5062  002EEA  EFE4  F017         	goto	l1435
  5063  002EEE                     l3999:
  5064  002EEE  C02A  F02E         	movff	___fltol@f1,??___fltol
  5065  002EF2  C02B  F02F         	movff	___fltol@f1+1,??___fltol+1
  5066  002EF6  C02C  F030         	movff	___fltol@f1+2,??___fltol+2
  5067  002EFA  C02D  F031         	movff	___fltol@f1+3,??___fltol+3
  5068  002EFE  0E20               	movlw	32
  5069  002F00  EF87  F017         	goto	u2890
  5070  002F04                     u2895:
  5071  002F04  90D8               	bcf	status,0,c
  5072  002F06  3231               	rrcf	(??___fltol+3)^0,f,c
  5073  002F08  3230               	rrcf	(??___fltol+2)^0,f,c
  5074  002F0A  322F               	rrcf	(??___fltol+1)^0,f,c
  5075  002F0C  322E               	rrcf	??___fltol^0,f,c
  5076  002F0E                     u2890:
  5077  002F0E  2EE8               	decfsz	wreg,f,c
  5078  002F10  EF82  F017         	goto	u2895
  5079  002F14  502E               	movf	??___fltol^0,w,c
  5080  002F16  6E32               	movwf	___fltol@sign1^0,c
  5081  002F18  8E2C               	bsf	(___fltol@f1+2)^0,7,c
  5082  002F1A  0EFF               	movlw	255
  5083  002F1C  162A               	andwf	___fltol@f1^0,f,c
  5084  002F1E  0EFF               	movlw	255
  5085  002F20  162B               	andwf	(___fltol@f1+1)^0,f,c
  5086  002F22  0EFF               	movlw	255
  5087  002F24  162C               	andwf	(___fltol@f1+2)^0,f,c
  5088  002F26  0E00               	movlw	0
  5089  002F28  162D               	andwf	(___fltol@f1+3)^0,f,c
  5090  002F2A  0E96               	movlw	150
  5091  002F2C  5E33               	subwf	___fltol@exp1^0,f,c
  5092  002F2E  BE33               	btfsc	___fltol@exp1^0,7,c
  5093  002F30  EF9E  F017         	goto	u2900
  5094  002F34  EF9C  F017         	goto	u2901
  5095  002F38                     u2901:
  5096  002F38  EFB4  F017         	goto	l4019
  5097  002F3C                     u2900:
  5098  002F3C  5033               	movf	___fltol@exp1^0,w,c
  5099  002F3E  0A80               	xorlw	128
  5100  002F40  0F97               	addlw	151
  5101  002F42  B0D8               	btfsc	status,0,c
  5102  002F44  EFA6  F017         	goto	u2911
  5103  002F48  EFA8  F017         	goto	u2910
  5104  002F4C                     u2911:
  5105  002F4C  EFAA  F017         	goto	l4015
  5106  002F50                     u2910:
  5107  002F50  EF6D  F017         	goto	l3995
  5108  002F54                     l4015:
  5109  002F54  90D8               	bcf	status,0,c
  5110  002F56  322D               	rrcf	(___fltol@f1+3)^0,f,c
  5111  002F58  322C               	rrcf	(___fltol@f1+2)^0,f,c
  5112  002F5A  322B               	rrcf	(___fltol@f1+1)^0,f,c
  5113  002F5C  322A               	rrcf	___fltol@f1^0,f,c
  5114  002F5E  3E33               	incfsz	___fltol@exp1^0,f,c
  5115  002F60  EFAA  F017         	goto	l4015
  5116  002F64  EFCC  F017         	goto	l4029
  5117  002F68                     l4019:
  5118  002F68  0E1F               	movlw	31
  5119  002F6A  6433               	cpfsgt	___fltol@exp1^0,c
  5120  002F6C  EFBA  F017         	goto	u2921
  5121  002F70  EFBC  F017         	goto	u2920
  5122  002F74                     u2921:
  5123  002F74  EFC4  F017         	goto	l4027
  5124  002F78                     u2920:
  5125  002F78  EF6D  F017         	goto	l3995
  5126  002F7C                     l4025:
  5127  002F7C  90D8               	bcf	status,0,c
  5128  002F7E  362A               	rlcf	___fltol@f1^0,f,c
  5129  002F80  362B               	rlcf	(___fltol@f1+1)^0,f,c
  5130  002F82  362C               	rlcf	(___fltol@f1+2)^0,f,c
  5131  002F84  362D               	rlcf	(___fltol@f1+3)^0,f,c
  5132  002F86  0633               	decf	___fltol@exp1^0,f,c
  5133  002F88                     l4027:
  5134  002F88  5033               	movf	___fltol@exp1^0,w,c
  5135  002F8A  A4D8               	btfss	status,2,c
  5136  002F8C  EFCA  F017         	goto	u2931
  5137  002F90  EFCC  F017         	goto	u2930
  5138  002F94                     u2931:
  5139  002F94  EFBE  F017         	goto	l4025
  5140  002F98                     u2930:
  5141  002F98                     l4029:
  5142  002F98  5032               	movf	___fltol@sign1^0,w,c
  5143  002F9A  B4D8               	btfsc	status,2,c
  5144  002F9C  EFD2  F017         	goto	u2941
  5145  002FA0  EFD4  F017         	goto	u2940
  5146  002FA4                     u2941:
  5147  002FA4  EFDC  F017         	goto	l4033
  5148  002FA8                     u2940:
  5149  002FA8  1E2D               	comf	(___fltol@f1+3)^0,f,c
  5150  002FAA  1E2C               	comf	(___fltol@f1+2)^0,f,c
  5151  002FAC  1E2B               	comf	(___fltol@f1+1)^0,f,c
  5152  002FAE  6C2A               	negf	___fltol@f1^0,c
  5153  002FB0  0E00               	movlw	0
  5154  002FB2  222B               	addwfc	(___fltol@f1+1)^0,f,c
  5155  002FB4  222C               	addwfc	(___fltol@f1+2)^0,f,c
  5156  002FB6  222D               	addwfc	(___fltol@f1+3)^0,f,c
  5157  002FB8                     l4033:
  5158  002FB8  C02A  F02A         	movff	___fltol@f1,?___fltol
  5159  002FBC  C02B  F02B         	movff	___fltol@f1+1,?___fltol+1
  5160  002FC0  C02C  F02C         	movff	___fltol@f1+2,?___fltol+2
  5161  002FC4  C02D  F02D         	movff	___fltol@f1+3,?___fltol+3
  5162  002FC8                     l1435:
  5163  002FC8  0012               	return		;funcret
  5164  002FCA                     __end_of___fltol:
  5165                           	callstack 0
  5166                           
  5167 ;; *************** function ___flsub *****************
  5168 ;; Defined at:
  5169 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  5170 ;; Parameters:    Size  Location     Type
  5171 ;;  b               4    6[BANK0 ] long 
  5172 ;;  a               4   10[BANK0 ] long 
  5173 ;; Auto vars:     Size  Location     Type
  5174 ;;		None
  5175 ;; Return value:  Size  Location     Type
  5176 ;;                  4    6[BANK0 ] long 
  5177 ;; Registers used:
  5178 ;;		wreg, status,2, status,0, cstack
  5179 ;; Tracked objects:
  5180 ;;		On entry : 0/0
  5181 ;;		On exit  : 0/0
  5182 ;;		Unchanged: 0/0
  5183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5184 ;;      Params:         0       8       0       0       0       0       0       0       0
  5185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5186 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5187 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5188 ;;Total ram usage:        8 bytes
  5189 ;; Hardware stack levels used:    1
  5190 ;; Hardware stack levels required when called:    4
  5191 ;; This function calls:
  5192 ;;		___fladd
  5193 ;; This function is called by:
  5194 ;;		_ComputeTemp
  5195 ;;		_ComputeWaterVol
  5196 ;;		_exp
  5197 ;;		_round
  5198 ;; This function uses a non-reentrant model
  5199 ;;
  5200                           
  5201                           	psect	text27
  5202  003B1E                     __ptext27:
  5203                           	callstack 0
  5204  003B1E                     ___flsub:
  5205                           	callstack 23
  5206  003B1E  0E00               	movlw	0
  5207  003B20  0100               	movlb	0	; () banked
  5208  003B22  1B6A               	xorwf	___flsub@a& (0+255),f,b
  5209  003B24  0E00               	movlw	0
  5210  003B26  1B6B               	xorwf	(___flsub@a+1)& (0+255),f,b
  5211  003B28  0E00               	movlw	0
  5212  003B2A  1B6C               	xorwf	(___flsub@a+2)& (0+255),f,b
  5213  003B2C  0E80               	movlw	128
  5214  003B2E  1B6D               	xorwf	(___flsub@a+3)& (0+255),f,b
  5215  003B30                     
  5216                           ; BSR set to: 0
  5217  003B30  C066  F01A         	movff	___flsub@b,___fladd@b
  5218  003B34  C067  F01B         	movff	___flsub@b+1,___fladd@b+1
  5219  003B38  C068  F01C         	movff	___flsub@b+2,___fladd@b+2
  5220  003B3C  C069  F01D         	movff	___flsub@b+3,___fladd@b+3
  5221  003B40  C06A  F01E         	movff	___flsub@a,___fladd@a
  5222  003B44  C06B  F01F         	movff	___flsub@a+1,___fladd@a+1
  5223  003B48  C06C  F020         	movff	___flsub@a+2,___fladd@a+2
  5224  003B4C  C06D  F021         	movff	___flsub@a+3,___fladd@a+3
  5225  003B50  EC45  F004         	call	___fladd	;wreg free
  5226  003B54  C01A  F066         	movff	?___fladd,?___flsub
  5227  003B58  C01B  F067         	movff	?___fladd+1,?___flsub+1
  5228  003B5C  C01C  F068         	movff	?___fladd+2,?___flsub+2
  5229  003B60  C01D  F069         	movff	?___fladd+3,?___flsub+3
  5230  003B64  0012               	return		;funcret
  5231  003B66                     __end_of___flsub:
  5232                           	callstack 0
  5233                           
  5234 ;; *************** function _log *****************
  5235 ;; Defined at:
  5236 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\log.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  x               4   33[BANK0 ] long 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  exponent        2   37[BANK0 ] int 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;                  4   33[BANK0 ] int 
  5243 ;; Registers used:
  5244 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5250 ;;      Params:         0       4       0       0       0       0       0       0       0
  5251 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5252 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5253 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5254 ;;Total ram usage:        6 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:    5
  5257 ;; This function calls:
  5258 ;;		___fladd
  5259 ;;		___fleq
  5260 ;;		___flmul
  5261 ;;		___xxtofl
  5262 ;;		_eval_poly
  5263 ;;		_frexp
  5264 ;; This function is called by:
  5265 ;;		_ComputeTemp
  5266 ;;		_pow
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           	psect	text28
  5271  002882                     __ptext28:
  5272                           	callstack 0
  5273  002882                     _log:
  5274                           	callstack 23
  5275  002882  0100               	movlb	0	; () banked
  5276  002884  BF84               	btfsc	(log@x+3)& (0+255),7,b
  5277  002886  EF49  F014         	goto	u3780
  5278  00288A  EF47  F014         	goto	u3781
  5279  00288E                     u3781:
  5280  00288E  EF57  F014         	goto	l4565
  5281  002892                     u3780:
  5282  002892                     
  5283                           ; BSR set to: 0
  5284  002892  0E00               	movlw	0
  5285  002894  6FD2               	movwf	(_errno+1)& (0+255),b
  5286  002896  0E21               	movlw	33
  5287  002898  6FD1               	movwf	_errno& (0+255),b
  5288  00289A  0E00               	movlw	0
  5289  00289C  6F81               	movwf	?_log& (0+255),b
  5290  00289E  0E00               	movlw	0
  5291  0028A0  6F82               	movwf	(?_log+1)& (0+255),b
  5292  0028A2  0E00               	movlw	0
  5293  0028A4  6F83               	movwf	(?_log+2)& (0+255),b
  5294  0028A6  0E00               	movlw	0
  5295  0028A8  6F84               	movwf	(?_log+3)& (0+255),b
  5296  0028AA  EF0F  F015         	goto	l1844
  5297  0028AE                     l4565:
  5298                           
  5299                           ; BSR set to: 0
  5300  0028AE  C081  F042         	movff	log@x,___fleq@ff1
  5301  0028B2  C082  F043         	movff	log@x+1,___fleq@ff1+1
  5302  0028B6  C083  F044         	movff	log@x+2,___fleq@ff1+2
  5303  0028BA  C084  F045         	movff	log@x+3,___fleq@ff1+3
  5304  0028BE  0E00               	movlw	0
  5305  0028C0  6E46               	movwf	___fleq@ff2^0,c
  5306  0028C2  0E00               	movlw	0
  5307  0028C4  6E47               	movwf	(___fleq@ff2+1)^0,c
  5308  0028C6  0E00               	movlw	0
  5309  0028C8  6E48               	movwf	(___fleq@ff2+2)^0,c
  5310  0028CA  0E00               	movlw	0
  5311  0028CC  6E49               	movwf	(___fleq@ff2+3)^0,c
  5312  0028CE  ECDB  F01A         	call	___fleq	;wreg free
  5313  0028D2  A0D8               	btfss	status,0,c
  5314  0028D4  EF6E  F014         	goto	u3791
  5315  0028D8  EF70  F014         	goto	u3790
  5316  0028DC                     u3791:
  5317  0028DC  EF7F  F014         	goto	l4571
  5318  0028E0                     u3790:
  5319  0028E0  0E00               	movlw	0
  5320  0028E2  0100               	movlb	0	; () banked
  5321  0028E4  6FD2               	movwf	(_errno+1)& (0+255),b
  5322  0028E6  0E22               	movlw	34
  5323  0028E8  6FD1               	movwf	_errno& (0+255),b
  5324  0028EA  0E00               	movlw	0
  5325  0028EC  6F81               	movwf	?_log& (0+255),b
  5326  0028EE  0E00               	movlw	0
  5327  0028F0  6F82               	movwf	(?_log+1)& (0+255),b
  5328  0028F2  0E00               	movlw	0
  5329  0028F4  6F83               	movwf	(?_log+2)& (0+255),b
  5330  0028F6  0E00               	movlw	0
  5331  0028F8  6F84               	movwf	(?_log+3)& (0+255),b
  5332  0028FA  EF0F  F015         	goto	l1844
  5333  0028FE                     l4571:
  5334  0028FE  0E00               	movlw	0
  5335  002900  6E5A               	movwf	___flmul@a^0,c
  5336  002902  0E00               	movlw	0
  5337  002904  6E5B               	movwf	(___flmul@a+1)^0,c
  5338  002906  0E00               	movlw	0
  5339  002908  6E5C               	movwf	(___flmul@a+2)^0,c
  5340  00290A  0E40               	movlw	64
  5341  00290C  6E5D               	movwf	(___flmul@a+3)^0,c
  5342  00290E  0E85               	movlw	low log@exponent
  5343  002910  6E52               	movwf	frexp@eptr^0,c
  5344  002912  0E00               	movlw	high log@exponent
  5345  002914  6E53               	movwf	(frexp@eptr+1)^0,c
  5346  002916  C081  F04E         	movff	log@x,frexp@value
  5347  00291A  C082  F04F         	movff	log@x+1,frexp@value+1
  5348  00291E  C083  F050         	movff	log@x+2,frexp@value+2
  5349  002922  C084  F051         	movff	log@x+3,frexp@value+3
  5350  002926  ECBF  F019         	call	_frexp	;wreg free
  5351  00292A  C04E  F056         	movff	?_frexp,___flmul@b
  5352  00292E  C04F  F057         	movff	?_frexp+1,___flmul@b+1
  5353  002932  C050  F058         	movff	?_frexp+2,___flmul@b+2
  5354  002936  C051  F059         	movff	?_frexp+3,___flmul@b+3
  5355  00293A  ECA5  F006         	call	___flmul	;wreg free
  5356  00293E  C056  F01A         	movff	?___flmul,___fladd@b
  5357  002942  C057  F01B         	movff	?___flmul+1,___fladd@b+1
  5358  002946  C058  F01C         	movff	?___flmul+2,___fladd@b+2
  5359  00294A  C059  F01D         	movff	?___flmul+3,___fladd@b+3
  5360  00294E  0E00               	movlw	0
  5361  002950  6E1E               	movwf	___fladd@a^0,c
  5362  002952  0E00               	movlw	0
  5363  002954  6E1F               	movwf	(___fladd@a+1)^0,c
  5364  002956  0E80               	movlw	128
  5365  002958  6E20               	movwf	(___fladd@a+2)^0,c
  5366  00295A  0EBF               	movlw	191
  5367  00295C  6E21               	movwf	(___fladd@a+3)^0,c
  5368  00295E  EC45  F004         	call	___fladd	;wreg free
  5369  002962  C01A  F081         	movff	?___fladd,log@x
  5370  002966  C01B  F082         	movff	?___fladd+1,log@x+1
  5371  00296A  C01C  F083         	movff	?___fladd+2,log@x+2
  5372  00296E  C01D  F084         	movff	?___fladd+3,log@x+3
  5373  002972  0100               	movlb	0	; () banked
  5374  002974  0785               	decf	log@exponent& (0+255),f,b
  5375  002976  A0D8               	btfss	status,0,c
  5376  002978  0786               	decf	(log@exponent+1)& (0+255),f,b
  5377  00297A                     
  5378                           ; BSR set to: 0
  5379  00297A  C081  F071         	movff	log@x,eval_poly@x
  5380  00297E  C082  F072         	movff	log@x+1,eval_poly@x+1
  5381  002982  C083  F073         	movff	log@x+2,eval_poly@x+2
  5382  002986  C084  F074         	movff	log@x+3,eval_poly@x+3
  5383  00298A  0E33               	movlw	low log@coeff
  5384  00298C  6F75               	movwf	eval_poly@d& (0+255),b
  5385  00298E  0E08               	movlw	high log@coeff
  5386  002990  6F76               	movwf	(eval_poly@d+1)& (0+255),b
  5387  002992  0E00               	movlw	0
  5388  002994  6F78               	movwf	(eval_poly@n+1)& (0+255),b
  5389  002996  0E08               	movlw	8
  5390  002998  6F77               	movwf	eval_poly@n& (0+255),b
  5391  00299A  EC67  F018         	call	_eval_poly	;wreg free
  5392  00299E  C071  F081         	movff	?_eval_poly,log@x
  5393  0029A2  C072  F082         	movff	?_eval_poly+1,log@x+1
  5394  0029A6  C073  F083         	movff	?_eval_poly+2,log@x+2
  5395  0029AA  C074  F084         	movff	?_eval_poly+3,log@x+3
  5396  0029AE  0E18               	movlw	24
  5397  0029B0  6E5A               	movwf	___flmul@a^0,c
  5398  0029B2  0E72               	movlw	114
  5399  0029B4  6E5B               	movwf	(___flmul@a+1)^0,c
  5400  0029B6  0E31               	movlw	49
  5401  0029B8  6E5C               	movwf	(___flmul@a+2)^0,c
  5402  0029BA  0E3F               	movlw	63
  5403  0029BC  6E5D               	movwf	(___flmul@a+3)^0,c
  5404  0029BE  C085  F034         	movff	log@exponent,___xxtofl@val
  5405  0029C2  C086  F035         	movff	log@exponent+1,___xxtofl@val+1
  5406  0029C6  0E00               	movlw	0
  5407  0029C8  BE35               	btfsc	(___xxtofl@val+1)^0,7,c
  5408  0029CA  0EFF               	movlw	-1
  5409  0029CC  6E36               	movwf	(___xxtofl@val+2)^0,c
  5410  0029CE  6E37               	movwf	(___xxtofl@val+3)^0,c
  5411  0029D0  0E01               	movlw	1
  5412  0029D2  EC67  F013         	call	___xxtofl
  5413  0029D6  C034  F056         	movff	?___xxtofl,___flmul@b
  5414  0029DA  C035  F057         	movff	?___xxtofl+1,___flmul@b+1
  5415  0029DE  C036  F058         	movff	?___xxtofl+2,___flmul@b+2
  5416  0029E2  C037  F059         	movff	?___xxtofl+3,___flmul@b+3
  5417  0029E6  ECA5  F006         	call	___flmul	;wreg free
  5418  0029EA  C056  F01A         	movff	?___flmul,___fladd@b
  5419  0029EE  C057  F01B         	movff	?___flmul+1,___fladd@b+1
  5420  0029F2  C058  F01C         	movff	?___flmul+2,___fladd@b+2
  5421  0029F6  C059  F01D         	movff	?___flmul+3,___fladd@b+3
  5422  0029FA  C081  F01E         	movff	log@x,___fladd@a
  5423  0029FE  C082  F01F         	movff	log@x+1,___fladd@a+1
  5424  002A02  C083  F020         	movff	log@x+2,___fladd@a+2
  5425  002A06  C084  F021         	movff	log@x+3,___fladd@a+3
  5426  002A0A  EC45  F004         	call	___fladd	;wreg free
  5427  002A0E  C01A  F081         	movff	?___fladd,?_log
  5428  002A12  C01B  F082         	movff	?___fladd+1,?_log+1
  5429  002A16  C01C  F083         	movff	?___fladd+2,?_log+2
  5430  002A1A  C01D  F084         	movff	?___fladd+3,?_log+3
  5431  002A1E                     l1844:
  5432  002A1E  0012               	return		;funcret
  5433  002A20                     __end_of_log:
  5434                           	callstack 0
  5435                           
  5436 ;; *************** function _frexp *****************
  5437 ;; Defined at:
  5438 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\frexp.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;  value           4   77[COMRAM] int 
  5441 ;;  eptr            2   81[COMRAM] PTR int 
  5442 ;;		 -> trunc@expon(2), floor@expon(2), log@exponent(2), 
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;		None
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  4   77[COMRAM] PTR int 
  5447 ;; Registers used:
  5448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5454 ;;      Params:         6       0       0       0       0       0       0       0       0
  5455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5456 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5457 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5458 ;;Total ram usage:        8 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; Hardware stack levels required when called:    4
  5461 ;; This function calls:
  5462 ;;		___fleq
  5463 ;; This function is called by:
  5464 ;;		_log
  5465 ;;		_floor
  5466 ;;		_trunc
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text29
  5471  00337E                     __ptext29:
  5472                           	callstack 0
  5473  00337E                     _frexp:
  5474                           	callstack 23
  5475  00337E  C04E  F042         	movff	frexp@value,___fleq@ff1
  5476  003382  C04F  F043         	movff	frexp@value+1,___fleq@ff1+1
  5477  003386  C050  F044         	movff	frexp@value+2,___fleq@ff1+2
  5478  00338A  C051  F045         	movff	frexp@value+3,___fleq@ff1+3
  5479  00338E  0E00               	movlw	0
  5480  003390  6E46               	movwf	___fleq@ff2^0,c
  5481  003392  0E00               	movlw	0
  5482  003394  6E47               	movwf	(___fleq@ff2+1)^0,c
  5483  003396  0E00               	movlw	0
  5484  003398  6E48               	movwf	(___fleq@ff2+2)^0,c
  5485  00339A  0E00               	movlw	0
  5486  00339C  6E49               	movwf	(___fleq@ff2+3)^0,c
  5487  00339E  ECDB  F01A         	call	___fleq	;wreg free
  5488  0033A2  A0D8               	btfss	status,0,c
  5489  0033A4  EFD6  F019         	goto	u3051
  5490  0033A8  EFD8  F019         	goto	u3050
  5491  0033AC                     u3051:
  5492  0033AC  EFEA  F019         	goto	l4091
  5493  0033B0                     u3050:
  5494  0033B0  C052  FFD9         	movff	frexp@eptr,fsr2l
  5495  0033B4  C053  FFDA         	movff	frexp@eptr+1,fsr2h
  5496  0033B8  0E00               	movlw	0
  5497  0033BA  6EDE               	movwf	postinc2,c
  5498  0033BC  0E00               	movlw	0
  5499  0033BE  6EDD               	movwf	postdec2,c
  5500  0033C0  0E00               	movlw	0
  5501  0033C2  6E4E               	movwf	?_frexp^0,c
  5502  0033C4  0E00               	movlw	0
  5503  0033C6  6E4F               	movwf	(?_frexp+1)^0,c
  5504  0033C8  0E00               	movlw	0
  5505  0033CA  6E50               	movwf	(?_frexp+2)^0,c
  5506  0033CC  0E00               	movlw	0
  5507  0033CE  6E51               	movwf	(?_frexp+3)^0,c
  5508  0033D0  EF20  F01A         	goto	l1860
  5509  0033D4                     l4091:
  5510  0033D4  5051               	movf	(frexp@value+3)^0,w,c
  5511  0033D6  0B7F               	andlw	127
  5512  0033D8  6E54               	movwf	??_frexp^0,c
  5513  0033DA  6A55               	clrf	(??_frexp+1)^0,c
  5514  0033DC  90D8               	bcf	status,0,c
  5515  0033DE  3654               	rlcf	??_frexp^0,f,c
  5516  0033E0  3655               	rlcf	(??_frexp+1)^0,f,c
  5517  0033E2  C052  FFD9         	movff	frexp@eptr,fsr2l
  5518  0033E6  C053  FFDA         	movff	frexp@eptr+1,fsr2h
  5519  0033EA  C054  FFDE         	movff	??_frexp,postinc2
  5520  0033EE  C055  FFDD         	movff	??_frexp+1,postdec2
  5521  0033F2  BE50               	btfsc	(frexp@value+2)^0,7,c
  5522  0033F4  EFFE  F019         	goto	u3061
  5523  0033F8  EF02  F01A         	goto	u3060
  5524  0033FC                     u3061:
  5525  0033FC  6A54               	clrf	??_frexp^0,c
  5526  0033FE  2A54               	incf	??_frexp^0,f,c
  5527  003400  EF03  F01A         	goto	u3068
  5528  003404                     u3060:
  5529  003404  6A54               	clrf	??_frexp^0,c
  5530  003406                     u3068:
  5531  003406  5054               	movf	??_frexp^0,w,c
  5532  003408  C052  FFD9         	movff	frexp@eptr,fsr2l
  5533  00340C  C053  FFDA         	movff	frexp@eptr+1,fsr2h
  5534  003410  12DE               	iorwf	postinc2,f,c
  5535  003412  0E00               	movlw	0
  5536  003414  12DD               	iorwf	postdec2,f,c
  5537  003416  C052  FFD9         	movff	frexp@eptr,fsr2l
  5538  00341A  C053  FFDA         	movff	frexp@eptr+1,fsr2h
  5539  00341E  0E82               	movlw	130
  5540  003420  26DE               	addwf	postinc2,f,c
  5541  003422  0EFF               	movlw	255
  5542  003424  22DD               	addwfc	postdec2,f,c
  5543  003426  5051               	movf	(frexp@value+3)^0,w,c
  5544  003428  0B80               	andlw	-128
  5545  00342A  093F               	iorlw	63
  5546  00342C  6E51               	movwf	(frexp@value+3)^0,c
  5547  00342E  9E50               	bcf	(frexp@value+2)^0,7,c
  5548  003430  C04E  F04E         	movff	frexp@value,?_frexp
  5549  003434  C04F  F04F         	movff	frexp@value+1,?_frexp+1
  5550  003438  C050  F050         	movff	frexp@value+2,?_frexp+2
  5551  00343C  C051  F051         	movff	frexp@value+3,?_frexp+3
  5552  003440                     l1860:
  5553  003440  0012               	return		;funcret
  5554  003442                     __end_of_frexp:
  5555                           	callstack 0
  5556                           
  5557 ;; *************** function ___fleq *****************
  5558 ;; Defined at:
  5559 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fleq.c"
  5560 ;; Parameters:    Size  Location     Type
  5561 ;;  ff1             4   65[COMRAM] PTR int 
  5562 ;;  ff2             4   69[COMRAM] PTR int 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;		None               void
  5567 ;; Registers used:
  5568 ;;		wreg, status,2, status,0
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5574 ;;      Params:         8       0       0       0       0       0       0       0       0
  5575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5576 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5577 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5578 ;;Total ram usage:       12 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:    3
  5581 ;; This function calls:
  5582 ;;		Nothing
  5583 ;; This function is called by:
  5584 ;;		_log
  5585 ;;		_frexp
  5586 ;;		_ldexp
  5587 ;;		_pow
  5588 ;;		_exp
  5589 ;; This function uses a non-reentrant model
  5590 ;;
  5591                           
  5592                           	psect	text30
  5593  0035B6                     __ptext30:
  5594                           	callstack 0
  5595  0035B6                     ___fleq:
  5596                           	callstack 23
  5597  0035B6  0E00               	movlw	0
  5598  0035B8  1442               	andwf	___fleq@ff1^0,w,c
  5599  0035BA  6E4A               	movwf	??___fleq^0,c
  5600  0035BC  0E00               	movlw	0
  5601  0035BE  1443               	andwf	(___fleq@ff1+1)^0,w,c
  5602  0035C0  6E4B               	movwf	(??___fleq+1)^0,c
  5603  0035C2  0E80               	movlw	128
  5604  0035C4  1444               	andwf	(___fleq@ff1+2)^0,w,c
  5605  0035C6  6E4C               	movwf	(??___fleq+2)^0,c
  5606  0035C8  0E7F               	movlw	127
  5607  0035CA  1445               	andwf	(___fleq@ff1+3)^0,w,c
  5608  0035CC  6E4D               	movwf	(??___fleq+3)^0,c
  5609  0035CE  504A               	movf	??___fleq^0,w,c
  5610  0035D0  104B               	iorwf	(??___fleq+1)^0,w,c
  5611  0035D2  104C               	iorwf	(??___fleq+2)^0,w,c
  5612  0035D4  104D               	iorwf	(??___fleq+3)^0,w,c
  5613  0035D6  A4D8               	btfss	status,2,c
  5614  0035D8  EFF0  F01A         	goto	u2201
  5615  0035DC  EFF2  F01A         	goto	u2200
  5616  0035E0                     u2201:
  5617  0035E0  EFFA  F01A         	goto	l3619
  5618  0035E4                     u2200:
  5619  0035E4  0E00               	movlw	0
  5620  0035E6  6E42               	movwf	___fleq@ff1^0,c
  5621  0035E8  0E00               	movlw	0
  5622  0035EA  6E43               	movwf	(___fleq@ff1+1)^0,c
  5623  0035EC  0E00               	movlw	0
  5624  0035EE  6E44               	movwf	(___fleq@ff1+2)^0,c
  5625  0035F0  0E00               	movlw	0
  5626  0035F2  6E45               	movwf	(___fleq@ff1+3)^0,c
  5627  0035F4                     l3619:
  5628  0035F4  0E00               	movlw	0
  5629  0035F6  1446               	andwf	___fleq@ff2^0,w,c
  5630  0035F8  6E4A               	movwf	??___fleq^0,c
  5631  0035FA  0E00               	movlw	0
  5632  0035FC  1447               	andwf	(___fleq@ff2+1)^0,w,c
  5633  0035FE  6E4B               	movwf	(??___fleq+1)^0,c
  5634  003600  0E80               	movlw	128
  5635  003602  1448               	andwf	(___fleq@ff2+2)^0,w,c
  5636  003604  6E4C               	movwf	(??___fleq+2)^0,c
  5637  003606  0E7F               	movlw	127
  5638  003608  1449               	andwf	(___fleq@ff2+3)^0,w,c
  5639  00360A  6E4D               	movwf	(??___fleq+3)^0,c
  5640  00360C  504A               	movf	??___fleq^0,w,c
  5641  00360E  104B               	iorwf	(??___fleq+1)^0,w,c
  5642  003610  104C               	iorwf	(??___fleq+2)^0,w,c
  5643  003612  104D               	iorwf	(??___fleq+3)^0,w,c
  5644  003614  A4D8               	btfss	status,2,c
  5645  003616  EF0F  F01B         	goto	u2211
  5646  00361A  EF11  F01B         	goto	u2210
  5647  00361E                     u2211:
  5648  00361E  EF19  F01B         	goto	l3623
  5649  003622                     u2210:
  5650  003622  0E00               	movlw	0
  5651  003624  6E46               	movwf	___fleq@ff2^0,c
  5652  003626  0E00               	movlw	0
  5653  003628  6E47               	movwf	(___fleq@ff2+1)^0,c
  5654  00362A  0E00               	movlw	0
  5655  00362C  6E48               	movwf	(___fleq@ff2+2)^0,c
  5656  00362E  0E00               	movlw	0
  5657  003630  6E49               	movwf	(___fleq@ff2+3)^0,c
  5658  003632                     l3623:
  5659  003632  5046               	movf	___fleq@ff2^0,w,c
  5660  003634  1842               	xorwf	___fleq@ff1^0,w,c
  5661  003636  E10F               	bnz	u2220
  5662  003638  5047               	movf	(___fleq@ff2+1)^0,w,c
  5663  00363A  1843               	xorwf	(___fleq@ff1+1)^0,w,c
  5664  00363C  E10C               	bnz	u2220
  5665  00363E  5048               	movf	(___fleq@ff2+2)^0,w,c
  5666  003640  1844               	xorwf	(___fleq@ff1+2)^0,w,c
  5667  003642  E109               	bnz	u2220
  5668  003644  5049               	movf	(___fleq@ff2+3)^0,w,c
  5669  003646  1845               	xorwf	(___fleq@ff1+3)^0,w,c
  5670  003648  B4D8               	btfsc	status,2,c
  5671  00364A  EF29  F01B         	goto	u2221
  5672  00364E  EF2B  F01B         	goto	u2220
  5673  003652                     u2221:
  5674  003652  EF2E  F01B         	goto	l3627
  5675  003656                     u2220:
  5676  003656  90D8               	bcf	status,0,c
  5677  003658  EF2F  F01B         	goto	l1401
  5678  00365C                     l3627:
  5679  00365C  80D8               	bsf	status,0,c
  5680  00365E                     l1401:
  5681  00365E  0012               	return		;funcret
  5682  003660                     __end_of___fleq:
  5683                           	callstack 0
  5684                           
  5685 ;; *************** function _eval_poly *****************
  5686 ;; Defined at:
  5687 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\evalpoly.c"
  5688 ;; Parameters:    Size  Location     Type
  5689 ;;  x               4   17[BANK0 ] PTR int 
  5690 ;;  d               2   21[BANK0 ] PTR const 
  5691 ;;		 -> exp@coeff(40), log@coeff(36), 
  5692 ;;  n               2   23[BANK0 ] int 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  res             4   29[BANK0 ] int 
  5695 ;; Return value:  Size  Location     Type
  5696 ;;                  4   17[BANK0 ] int 
  5697 ;; Registers used:
  5698 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5699 ;; Tracked objects:
  5700 ;;		On entry : 0/0
  5701 ;;		On exit  : 0/0
  5702 ;;		Unchanged: 0/0
  5703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5704 ;;      Params:         0       8       0       0       0       0       0       0       0
  5705 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5706 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5707 ;;      Totals:         0      16       0       0       0       0       0       0       0
  5708 ;;Total ram usage:       16 bytes
  5709 ;; Hardware stack levels used:    1
  5710 ;; Hardware stack levels required when called:    4
  5711 ;; This function calls:
  5712 ;;		___fladd
  5713 ;;		___flmul
  5714 ;; This function is called by:
  5715 ;;		_log
  5716 ;;		_exp
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           
  5720                           	psect	text31
  5721  0030CE                     __ptext31:
  5722                           	callstack 0
  5723  0030CE                     _eval_poly:
  5724                           	callstack 23
  5725  0030CE  C077  F079         	movff	eval_poly@n,??_eval_poly
  5726  0030D2  C078  F07A         	movff	eval_poly@n+1,??_eval_poly+1
  5727  0030D6  0100               	movlb	0	; () banked
  5728  0030D8  90D8               	bcf	status,0,c
  5729  0030DA  3779               	rlcf	??_eval_poly& (0+255),f,b
  5730  0030DC  377A               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5731  0030DE  90D8               	bcf	status,0,c
  5732  0030E0  3779               	rlcf	??_eval_poly& (0+255),f,b
  5733  0030E2  377A               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5734  0030E4  C075  F07B         	movff	eval_poly@d,??_eval_poly+2
  5735  0030E8  C076  F07C         	movff	eval_poly@d+1,??_eval_poly+3
  5736  0030EC  5179               	movf	??_eval_poly& (0+255),w,b
  5737  0030EE  277B               	addwf	(??_eval_poly+2)& (0+255),f,b
  5738  0030F0  517A               	movf	(??_eval_poly+1)& (0+255),w,b
  5739  0030F2  237C               	addwfc	(??_eval_poly+3)& (0+255),f,b
  5740  0030F4  C07B  FFF6         	movff	??_eval_poly+2,tblptrl
  5741  0030F8  C07C  FFF7         	movff	??_eval_poly+3,tblptrh
  5742  0030FC                     	if	0	;tblptru may be non-zero
  5743  0030FC                     	endif
  5744  0030FC                     	if	0	;tblptru may be non-zero
  5745  0030FC                     	endif
  5746  0030FC  0009               	tblrd		*+
  5747  0030FE  CFF5 F07D          	movff	tablat,eval_poly@res
  5748  003102  0009               	tblrd		*+
  5749  003104  CFF5 F07E          	movff	tablat,eval_poly@res+1
  5750  003108  0009               	tblrd		*+
  5751  00310A  CFF5 F07F          	movff	tablat,eval_poly@res+2
  5752  00310E  000A               	tblrd		*-
  5753  003110  CFF5 F080          	movff	tablat,eval_poly@res+3
  5754  003114  EFD6  F018         	goto	l4337
  5755  003118                     l4335:
  5756                           
  5757                           ; BSR set to: 0
  5758  003118  C07D  F05A         	movff	eval_poly@res,___flmul@a
  5759  00311C  C07E  F05B         	movff	eval_poly@res+1,___flmul@a+1
  5760  003120  C07F  F05C         	movff	eval_poly@res+2,___flmul@a+2
  5761  003124  C080  F05D         	movff	eval_poly@res+3,___flmul@a+3
  5762  003128  C071  F056         	movff	eval_poly@x,___flmul@b
  5763  00312C  C072  F057         	movff	eval_poly@x+1,___flmul@b+1
  5764  003130  C073  F058         	movff	eval_poly@x+2,___flmul@b+2
  5765  003134  C074  F059         	movff	eval_poly@x+3,___flmul@b+3
  5766  003138  ECA5  F006         	call	___flmul	;wreg free
  5767  00313C  C056  F01A         	movff	?___flmul,___fladd@b
  5768  003140  C057  F01B         	movff	?___flmul+1,___fladd@b+1
  5769  003144  C058  F01C         	movff	?___flmul+2,___fladd@b+2
  5770  003148  C059  F01D         	movff	?___flmul+3,___fladd@b+3
  5771  00314C  0100               	movlb	0	; () banked
  5772  00314E  0777               	decf	eval_poly@n& (0+255),f,b
  5773  003150  A0D8               	btfss	status,0,c
  5774  003152  0778               	decf	(eval_poly@n+1)& (0+255),f,b
  5775  003154  C077  F079         	movff	eval_poly@n,??_eval_poly
  5776  003158  C078  F07A         	movff	eval_poly@n+1,??_eval_poly+1
  5777  00315C  90D8               	bcf	status,0,c
  5778  00315E  3779               	rlcf	??_eval_poly& (0+255),f,b
  5779  003160  377A               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5780  003162  90D8               	bcf	status,0,c
  5781  003164  3779               	rlcf	??_eval_poly& (0+255),f,b
  5782  003166  377A               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5783  003168  C075  F07B         	movff	eval_poly@d,??_eval_poly+2
  5784  00316C  C076  F07C         	movff	eval_poly@d+1,??_eval_poly+3
  5785  003170  5179               	movf	??_eval_poly& (0+255),w,b
  5786  003172  277B               	addwf	(??_eval_poly+2)& (0+255),f,b
  5787  003174  517A               	movf	(??_eval_poly+1)& (0+255),w,b
  5788  003176  237C               	addwfc	(??_eval_poly+3)& (0+255),f,b
  5789  003178  C07B  FFF6         	movff	??_eval_poly+2,tblptrl
  5790  00317C  C07C  FFF7         	movff	??_eval_poly+3,tblptrh
  5791  003180                     	if	0	;tblptru may be non-zero
  5792  003180                     	endif
  5793  003180                     	if	0	;tblptru may be non-zero
  5794  003180                     	endif
  5795  003180  0009               	tblrd		*+
  5796  003182  CFF5 F01E          	movff	tablat,___fladd@a
  5797  003186  0009               	tblrd		*+
  5798  003188  CFF5 F01F          	movff	tablat,___fladd@a+1
  5799  00318C  0009               	tblrd		*+
  5800  00318E  CFF5 F020          	movff	tablat,___fladd@a+2
  5801  003192  000A               	tblrd		*-
  5802  003194  CFF5 F021          	movff	tablat,___fladd@a+3
  5803  003198  EC45  F004         	call	___fladd	;wreg free
  5804  00319C  C01A  F07D         	movff	?___fladd,eval_poly@res
  5805  0031A0  C01B  F07E         	movff	?___fladd+1,eval_poly@res+1
  5806  0031A4  C01C  F07F         	movff	?___fladd+2,eval_poly@res+2
  5807  0031A8  C01D  F080         	movff	?___fladd+3,eval_poly@res+3
  5808  0031AC                     l4337:
  5809  0031AC  0100               	movlb	0	; () banked
  5810  0031AE  5177               	movf	eval_poly@n& (0+255),w,b
  5811  0031B0  1178               	iorwf	(eval_poly@n+1)& (0+255),w,b
  5812  0031B2  A4D8               	btfss	status,2,c
  5813  0031B4  EFDE  F018         	goto	u3451
  5814  0031B8  EFE0  F018         	goto	u3450
  5815  0031BC                     u3451:
  5816  0031BC  EF8C  F018         	goto	l4335
  5817  0031C0                     u3450:
  5818  0031C0                     
  5819                           ; BSR set to: 0
  5820  0031C0  C07D  F071         	movff	eval_poly@res,?_eval_poly
  5821  0031C4  C07E  F072         	movff	eval_poly@res+1,?_eval_poly+1
  5822  0031C8  C07F  F073         	movff	eval_poly@res+2,?_eval_poly+2
  5823  0031CC  C080  F074         	movff	eval_poly@res+3,?_eval_poly+3
  5824  0031D0                     
  5825                           ; BSR set to: 0
  5826  0031D0  0012               	return		;funcret
  5827  0031D2                     __end_of_eval_poly:
  5828                           	callstack 0
  5829                           
  5830 ;; *************** function ___flmul *****************
  5831 ;; Defined at:
  5832 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;  b               4   85[COMRAM] int 
  5835 ;;  a               4   89[COMRAM] int 
  5836 ;; Auto vars:     Size  Location     Type
  5837 ;;  prod            4   11[BANK0 ] struct .
  5838 ;;  grs             4    5[BANK0 ] unsigned long 
  5839 ;;  temp            2   15[BANK0 ] struct .
  5840 ;;  bexp            1   10[BANK0 ] unsigned char 
  5841 ;;  aexp            1    9[BANK0 ] unsigned char 
  5842 ;;  sign            1    4[BANK0 ] unsigned char 
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  4   85[COMRAM] unsigned char 
  5845 ;; Registers used:
  5846 ;;		wreg, status,2, status,0, prodl, prodh
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5852 ;;      Params:         8       0       0       0       0       0       0       0       0
  5853 ;;      Locals:         0      13       0       0       0       0       0       0       0
  5854 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5855 ;;      Totals:         8      17       0       0       0       0       0       0       0
  5856 ;;Total ram usage:       25 bytes
  5857 ;; Hardware stack levels used:    1
  5858 ;; Hardware stack levels required when called:    3
  5859 ;; This function calls:
  5860 ;;		Nothing
  5861 ;; This function is called by:
  5862 ;;		_ComputeTemp
  5863 ;;		_ComputeWaterVol
  5864 ;;		_InitTankVariables
  5865 ;;		_log
  5866 ;;		_eval_poly
  5867 ;;		_pow
  5868 ;;		_exp
  5869 ;; This function uses a non-reentrant model
  5870 ;;
  5871                           
  5872                           	psect	text32
  5873  000D4A                     __ptext32:
  5874                           	callstack 0
  5875  000D4A                     ___flmul:
  5876                           	callstack 23
  5877  000D4A  5059               	movf	(___flmul@b+3)^0,w,c
  5878  000D4C  0B80               	andlw	128
  5879  000D4E  0100               	movlb	0	; () banked
  5880  000D50  6F64               	movwf	___flmul@sign& (0+255),b
  5881  000D52  5059               	movf	(___flmul@b+3)^0,w,c
  5882  000D54  2459               	addwf	(___flmul@b+3)^0,w,c
  5883  000D56  6F6A               	movwf	___flmul@bexp& (0+255),b
  5884  000D58                     
  5885                           ; BSR set to: 0
  5886  000D58  AE58               	btfss	(___flmul@b+2)^0,7,c
  5887  000D5A  EFB1  F006         	goto	u2641
  5888  000D5E  EFB3  F006         	goto	u2640
  5889  000D62                     u2641:
  5890  000D62  EFB4  F006         	goto	l3847
  5891  000D66                     u2640:
  5892  000D66                     
  5893                           ; BSR set to: 0
  5894  000D66  816A               	bsf	___flmul@bexp& (0+255),0,b
  5895  000D68                     l3847:
  5896                           
  5897                           ; BSR set to: 0
  5898  000D68  516A               	movf	___flmul@bexp& (0+255),w,b
  5899  000D6A  B4D8               	btfsc	status,2,c
  5900  000D6C  EFBA  F006         	goto	u2651
  5901  000D70  EFBC  F006         	goto	u2650
  5902  000D74                     u2651:
  5903  000D74  EFCF  F006         	goto	l3855
  5904  000D78                     u2650:
  5905  000D78                     
  5906                           ; BSR set to: 0
  5907  000D78  296A               	incf	___flmul@bexp& (0+255),w,b
  5908  000D7A  A4D8               	btfss	status,2,c
  5909  000D7C  EFC2  F006         	goto	u2661
  5910  000D80  EFC4  F006         	goto	u2660
  5911  000D84                     u2661:
  5912  000D84  EFCC  F006         	goto	l3853
  5913  000D88                     u2660:
  5914  000D88                     
  5915                           ; BSR set to: 0
  5916  000D88  0E00               	movlw	0
  5917  000D8A  6E56               	movwf	___flmul@b^0,c
  5918  000D8C  0E00               	movlw	0
  5919  000D8E  6E57               	movwf	(___flmul@b+1)^0,c
  5920  000D90  0E00               	movlw	0
  5921  000D92  6E58               	movwf	(___flmul@b+2)^0,c
  5922  000D94  0E00               	movlw	0
  5923  000D96  6E59               	movwf	(___flmul@b+3)^0,c
  5924  000D98                     l3853:
  5925                           
  5926                           ; BSR set to: 0
  5927  000D98  8E58               	bsf	(___flmul@b+2)^0,7,c
  5928  000D9A  EFD7  F006         	goto	l3857
  5929  000D9E                     l3855:
  5930                           
  5931                           ; BSR set to: 0
  5932  000D9E  0E00               	movlw	0
  5933  000DA0  6E56               	movwf	___flmul@b^0,c
  5934  000DA2  0E00               	movlw	0
  5935  000DA4  6E57               	movwf	(___flmul@b+1)^0,c
  5936  000DA6  0E00               	movlw	0
  5937  000DA8  6E58               	movwf	(___flmul@b+2)^0,c
  5938  000DAA  0E00               	movlw	0
  5939  000DAC  6E59               	movwf	(___flmul@b+3)^0,c
  5940  000DAE                     l3857:
  5941                           
  5942                           ; BSR set to: 0
  5943  000DAE  505D               	movf	(___flmul@a+3)^0,w,c
  5944  000DB0  0B80               	andlw	128
  5945  000DB2  1B64               	xorwf	___flmul@sign& (0+255),f,b
  5946  000DB4                     
  5947                           ; BSR set to: 0
  5948  000DB4  505D               	movf	(___flmul@a+3)^0,w,c
  5949  000DB6  245D               	addwf	(___flmul@a+3)^0,w,c
  5950  000DB8  6F69               	movwf	___flmul@aexp& (0+255),b
  5951  000DBA                     
  5952                           ; BSR set to: 0
  5953  000DBA  AE5C               	btfss	(___flmul@a+2)^0,7,c
  5954  000DBC  EFE2  F006         	goto	u2671
  5955  000DC0  EFE4  F006         	goto	u2670
  5956  000DC4                     u2671:
  5957  000DC4  EFE5  F006         	goto	l3865
  5958  000DC8                     u2670:
  5959  000DC8                     
  5960                           ; BSR set to: 0
  5961  000DC8  8169               	bsf	___flmul@aexp& (0+255),0,b
  5962  000DCA                     l3865:
  5963                           
  5964                           ; BSR set to: 0
  5965  000DCA  5169               	movf	___flmul@aexp& (0+255),w,b
  5966  000DCC  B4D8               	btfsc	status,2,c
  5967  000DCE  EFEB  F006         	goto	u2681
  5968  000DD2  EFED  F006         	goto	u2680
  5969  000DD6                     u2681:
  5970  000DD6  EF00  F007         	goto	l3873
  5971  000DDA                     u2680:
  5972  000DDA                     
  5973                           ; BSR set to: 0
  5974  000DDA  2969               	incf	___flmul@aexp& (0+255),w,b
  5975  000DDC  A4D8               	btfss	status,2,c
  5976  000DDE  EFF3  F006         	goto	u2691
  5977  000DE2  EFF5  F006         	goto	u2690
  5978  000DE6                     u2691:
  5979  000DE6  EFFD  F006         	goto	l3871
  5980  000DEA                     u2690:
  5981  000DEA                     
  5982                           ; BSR set to: 0
  5983  000DEA  0E00               	movlw	0
  5984  000DEC  6E5A               	movwf	___flmul@a^0,c
  5985  000DEE  0E00               	movlw	0
  5986  000DF0  6E5B               	movwf	(___flmul@a+1)^0,c
  5987  000DF2  0E00               	movlw	0
  5988  000DF4  6E5C               	movwf	(___flmul@a+2)^0,c
  5989  000DF6  0E00               	movlw	0
  5990  000DF8  6E5D               	movwf	(___flmul@a+3)^0,c
  5991  000DFA                     l3871:
  5992                           
  5993                           ; BSR set to: 0
  5994  000DFA  8E5C               	bsf	(___flmul@a+2)^0,7,c
  5995  000DFC  EF08  F007         	goto	l1748
  5996  000E00                     l3873:
  5997                           
  5998                           ; BSR set to: 0
  5999  000E00  0E00               	movlw	0
  6000  000E02  6E5A               	movwf	___flmul@a^0,c
  6001  000E04  0E00               	movlw	0
  6002  000E06  6E5B               	movwf	(___flmul@a+1)^0,c
  6003  000E08  0E00               	movlw	0
  6004  000E0A  6E5C               	movwf	(___flmul@a+2)^0,c
  6005  000E0C  0E00               	movlw	0
  6006  000E0E  6E5D               	movwf	(___flmul@a+3)^0,c
  6007  000E10                     l1748:
  6008                           
  6009                           ; BSR set to: 0
  6010  000E10  5169               	movf	___flmul@aexp& (0+255),w,b
  6011  000E12  B4D8               	btfsc	status,2,c
  6012  000E14  EF0E  F007         	goto	u2701
  6013  000E18  EF10  F007         	goto	u2700
  6014  000E1C                     u2701:
  6015  000E1C  EF18  F007         	goto	l3877
  6016  000E20                     u2700:
  6017  000E20                     
  6018                           ; BSR set to: 0
  6019  000E20  516A               	movf	___flmul@bexp& (0+255),w,b
  6020  000E22  A4D8               	btfss	status,2,c
  6021  000E24  EF16  F007         	goto	u2711
  6022  000E28  EF18  F007         	goto	u2710
  6023  000E2C                     u2711:
  6024  000E2C  EF22  F007         	goto	l3881
  6025  000E30                     u2710:
  6026  000E30                     l3877:
  6027                           
  6028                           ; BSR set to: 0
  6029  000E30  0E00               	movlw	0
  6030  000E32  6E56               	movwf	?___flmul^0,c
  6031  000E34  0E00               	movlw	0
  6032  000E36  6E57               	movwf	(?___flmul+1)^0,c
  6033  000E38  0E00               	movlw	0
  6034  000E3A  6E58               	movwf	(?___flmul+2)^0,c
  6035  000E3C  0E00               	movlw	0
  6036  000E3E  6E59               	movwf	(?___flmul+3)^0,c
  6037  000E40  EFBA  F008         	goto	l1752
  6038  000E44                     l3881:
  6039                           
  6040                           ; BSR set to: 0
  6041  000E44  505C               	movf	(___flmul@a+2)^0,w,c
  6042  000E46  0256               	mulwf	___flmul@b^0,c
  6043  000E48  CFF3 F06F          	movff	prodl,___flmul@temp
  6044  000E4C  CFF4 F070          	movff	prodh,___flmul@temp+1
  6045  000E50                     
  6046                           ; BSR set to: 0
  6047  000E50  516F               	movf	___flmul@temp& (0+255),w,b
  6048  000E52  6F65               	movwf	___flmul@grs& (0+255),b
  6049  000E54  6B66               	clrf	(___flmul@grs+1)& (0+255),b
  6050  000E56  6B67               	clrf	(___flmul@grs+2)& (0+255),b
  6051  000E58  6B68               	clrf	(___flmul@grs+3)& (0+255),b
  6052  000E5A                     
  6053                           ; BSR set to: 0
  6054  000E5A  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6055  000E5C  6F6B               	movwf	___flmul@prod& (0+255),b
  6056  000E5E  6B6C               	clrf	(___flmul@prod+1)& (0+255),b
  6057  000E60  6B6D               	clrf	(___flmul@prod+2)& (0+255),b
  6058  000E62  6B6E               	clrf	(___flmul@prod+3)& (0+255),b
  6059  000E64  505B               	movf	(___flmul@a+1)^0,w,c
  6060  000E66  0257               	mulwf	(___flmul@b+1)^0,c
  6061  000E68  CFF3 F06F          	movff	prodl,___flmul@temp
  6062  000E6C  CFF4 F070          	movff	prodh,___flmul@temp+1
  6063  000E70                     
  6064                           ; BSR set to: 0
  6065  000E70  516F               	movf	___flmul@temp& (0+255),w,b
  6066  000E72  2765               	addwf	___flmul@grs& (0+255),f,b
  6067  000E74  0E00               	movlw	0
  6068  000E76  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6069  000E78  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6070  000E7A  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6071  000E7C                     
  6072                           ; BSR set to: 0
  6073  000E7C  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6074  000E7E  276B               	addwf	___flmul@prod& (0+255),f,b
  6075  000E80  0E00               	movlw	0
  6076  000E82  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6077  000E84  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6078  000E86  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6079  000E88  505A               	movf	___flmul@a^0,w,c
  6080  000E8A  0258               	mulwf	(___flmul@b+2)^0,c
  6081  000E8C  CFF3 F06F          	movff	prodl,___flmul@temp
  6082  000E90  CFF4 F070          	movff	prodh,___flmul@temp+1
  6083  000E94                     
  6084                           ; BSR set to: 0
  6085  000E94  516F               	movf	___flmul@temp& (0+255),w,b
  6086  000E96  2765               	addwf	___flmul@grs& (0+255),f,b
  6087  000E98  0E00               	movlw	0
  6088  000E9A  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6089  000E9C  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6090  000E9E  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6091  000EA0                     
  6092                           ; BSR set to: 0
  6093  000EA0  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6094  000EA2  276B               	addwf	___flmul@prod& (0+255),f,b
  6095  000EA4  0E00               	movlw	0
  6096  000EA6  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6097  000EA8  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6098  000EAA  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6099  000EAC                     
  6100                           ; BSR set to: 0
  6101  000EAC  C067  F068         	movff	___flmul@grs+2,___flmul@grs+3
  6102  000EB0  C066  F067         	movff	___flmul@grs+1,___flmul@grs+2
  6103  000EB4  C065  F066         	movff	___flmul@grs,___flmul@grs+1
  6104  000EB8  6B65               	clrf	___flmul@grs& (0+255),b
  6105  000EBA                     
  6106                           ; BSR set to: 0
  6107  000EBA  505A               	movf	___flmul@a^0,w,c
  6108  000EBC  0257               	mulwf	(___flmul@b+1)^0,c
  6109  000EBE  CFF3 F06F          	movff	prodl,___flmul@temp
  6110  000EC2  CFF4 F070          	movff	prodh,___flmul@temp+1
  6111  000EC6                     
  6112                           ; BSR set to: 0
  6113  000EC6  516F               	movf	___flmul@temp& (0+255),w,b
  6114  000EC8  2765               	addwf	___flmul@grs& (0+255),f,b
  6115  000ECA  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6116  000ECC  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6117  000ECE  0E00               	movlw	0
  6118  000ED0  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6119  000ED2  0E00               	movlw	0
  6120  000ED4  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6121  000ED6                     
  6122                           ; BSR set to: 0
  6123  000ED6  505B               	movf	(___flmul@a+1)^0,w,c
  6124  000ED8  0256               	mulwf	___flmul@b^0,c
  6125  000EDA  CFF3 F06F          	movff	prodl,___flmul@temp
  6126  000EDE  CFF4 F070          	movff	prodh,___flmul@temp+1
  6127  000EE2                     
  6128                           ; BSR set to: 0
  6129  000EE2  516F               	movf	___flmul@temp& (0+255),w,b
  6130  000EE4  2765               	addwf	___flmul@grs& (0+255),f,b
  6131  000EE6  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6132  000EE8  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6133  000EEA  0E00               	movlw	0
  6134  000EEC  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6135  000EEE  0E00               	movlw	0
  6136  000EF0  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6137  000EF2                     
  6138                           ; BSR set to: 0
  6139  000EF2  C067  F068         	movff	___flmul@grs+2,___flmul@grs+3
  6140  000EF6  C066  F067         	movff	___flmul@grs+1,___flmul@grs+2
  6141  000EFA  C065  F066         	movff	___flmul@grs,___flmul@grs+1
  6142  000EFE  6B65               	clrf	___flmul@grs& (0+255),b
  6143  000F00  505A               	movf	___flmul@a^0,w,c
  6144  000F02  0256               	mulwf	___flmul@b^0,c
  6145  000F04  CFF3 F06F          	movff	prodl,___flmul@temp
  6146  000F08  CFF4 F070          	movff	prodh,___flmul@temp+1
  6147  000F0C                     
  6148                           ; BSR set to: 0
  6149  000F0C  516F               	movf	___flmul@temp& (0+255),w,b
  6150  000F0E  2765               	addwf	___flmul@grs& (0+255),f,b
  6151  000F10  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6152  000F12  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6153  000F14  0E00               	movlw	0
  6154  000F16  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6155  000F18  0E00               	movlw	0
  6156  000F1A  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6157  000F1C                     
  6158                           ; BSR set to: 0
  6159  000F1C  505C               	movf	(___flmul@a+2)^0,w,c
  6160  000F1E  0257               	mulwf	(___flmul@b+1)^0,c
  6161  000F20  CFF3 F06F          	movff	prodl,___flmul@temp
  6162  000F24  CFF4 F070          	movff	prodh,___flmul@temp+1
  6163  000F28  516F               	movf	___flmul@temp& (0+255),w,b
  6164  000F2A  276B               	addwf	___flmul@prod& (0+255),f,b
  6165  000F2C  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6166  000F2E  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6167  000F30  0E00               	movlw	0
  6168  000F32  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6169  000F34  0E00               	movlw	0
  6170  000F36  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6171  000F38                     
  6172                           ; BSR set to: 0
  6173  000F38  505B               	movf	(___flmul@a+1)^0,w,c
  6174  000F3A  0258               	mulwf	(___flmul@b+2)^0,c
  6175  000F3C  CFF3 F06F          	movff	prodl,___flmul@temp
  6176  000F40  CFF4 F070          	movff	prodh,___flmul@temp+1
  6177  000F44                     
  6178                           ; BSR set to: 0
  6179  000F44  516F               	movf	___flmul@temp& (0+255),w,b
  6180  000F46  276B               	addwf	___flmul@prod& (0+255),f,b
  6181  000F48  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6182  000F4A  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6183  000F4C  0E00               	movlw	0
  6184  000F4E  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6185  000F50  0E00               	movlw	0
  6186  000F52  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6187  000F54  505C               	movf	(___flmul@a+2)^0,w,c
  6188  000F56  0258               	mulwf	(___flmul@b+2)^0,c
  6189  000F58  CFF3 F06F          	movff	prodl,___flmul@temp
  6190  000F5C  CFF4 F070          	movff	prodh,___flmul@temp+1
  6191  000F60                     
  6192                           ; BSR set to: 0
  6193  000F60  516F               	movf	___flmul@temp& (0+255),w,b
  6194  000F62  6F60               	movwf	??___flmul& (0+255),b
  6195  000F64  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6196  000F66  6F61               	movwf	(??___flmul+1)& (0+255),b
  6197  000F68  6B62               	clrf	(??___flmul+2)& (0+255),b
  6198  000F6A  6B63               	clrf	(??___flmul+3)& (0+255),b
  6199  000F6C  C062  F063         	movff	??___flmul+2,??___flmul+3
  6200  000F70  C061  F062         	movff	??___flmul+1,??___flmul+2
  6201  000F74  C060  F061         	movff	??___flmul,??___flmul+1
  6202  000F78  6B60               	clrf	??___flmul& (0+255),b
  6203  000F7A  5160               	movf	??___flmul& (0+255),w,b
  6204  000F7C  276B               	addwf	___flmul@prod& (0+255),f,b
  6205  000F7E  5161               	movf	(??___flmul+1)& (0+255),w,b
  6206  000F80  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6207  000F82  5162               	movf	(??___flmul+2)& (0+255),w,b
  6208  000F84  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6209  000F86  5163               	movf	(??___flmul+3)& (0+255),w,b
  6210  000F88  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6211  000F8A                     
  6212                           ; BSR set to: 0
  6213  000F8A  C065  F060         	movff	___flmul@grs,??___flmul
  6214  000F8E  C066  F061         	movff	___flmul@grs+1,??___flmul+1
  6215  000F92  C067  F062         	movff	___flmul@grs+2,??___flmul+2
  6216  000F96  C068  F063         	movff	___flmul@grs+3,??___flmul+3
  6217  000F9A  0E19               	movlw	25
  6218  000F9C  EFD5  F007         	goto	u2720
  6219  000FA0                     u2725:
  6220  000FA0  90D8               	bcf	status,0,c
  6221  000FA2  3363               	rrcf	(??___flmul+3)& (0+255),f,b
  6222  000FA4  3362               	rrcf	(??___flmul+2)& (0+255),f,b
  6223  000FA6  3361               	rrcf	(??___flmul+1)& (0+255),f,b
  6224  000FA8  3360               	rrcf	??___flmul& (0+255),f,b
  6225  000FAA                     u2720:
  6226  000FAA  2EE8               	decfsz	wreg,f,c
  6227  000FAC  EFD0  F007         	goto	u2725
  6228  000FB0  5160               	movf	??___flmul& (0+255),w,b
  6229  000FB2  276B               	addwf	___flmul@prod& (0+255),f,b
  6230  000FB4  5161               	movf	(??___flmul+1)& (0+255),w,b
  6231  000FB6  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6232  000FB8  5162               	movf	(??___flmul+2)& (0+255),w,b
  6233  000FBA  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6234  000FBC  5163               	movf	(??___flmul+3)& (0+255),w,b
  6235  000FBE  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6236  000FC0                     
  6237                           ; BSR set to: 0
  6238  000FC0  C067  F068         	movff	___flmul@grs+2,___flmul@grs+3
  6239  000FC4  C066  F067         	movff	___flmul@grs+1,___flmul@grs+2
  6240  000FC8  C065  F066         	movff	___flmul@grs,___flmul@grs+1
  6241  000FCC  6B65               	clrf	___flmul@grs& (0+255),b
  6242  000FCE                     
  6243                           ; BSR set to: 0
  6244  000FCE  5169               	movf	___flmul@aexp& (0+255),w,b
  6245  000FD0  C06A  F060         	movff	___flmul@bexp,??___flmul
  6246  000FD4  6B61               	clrf	(??___flmul+1)& (0+255),b
  6247  000FD6  2760               	addwf	??___flmul& (0+255),f,b
  6248  000FD8  0E00               	movlw	0
  6249  000FDA  2361               	addwfc	(??___flmul+1)& (0+255),f,b
  6250  000FDC  0E82               	movlw	130
  6251  000FDE  2560               	addwf	??___flmul& (0+255),w,b
  6252  000FE0  6F6F               	movwf	___flmul@temp& (0+255),b
  6253  000FE2  0EFF               	movlw	255
  6254  000FE4  2161               	addwfc	(??___flmul+1)& (0+255),w,b
  6255  000FE6  6F70               	movwf	(___flmul@temp+1)& (0+255),b
  6256  000FE8  EF0B  F008         	goto	l3929
  6257  000FEC                     l3923:
  6258                           
  6259                           ; BSR set to: 0
  6260  000FEC  90D8               	bcf	status,0,c
  6261  000FEE  376B               	rlcf	___flmul@prod& (0+255),f,b
  6262  000FF0  376C               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6263  000FF2  376D               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6264  000FF4  376E               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6265  000FF6                     
  6266                           ; BSR set to: 0
  6267  000FF6  AF68               	btfss	(___flmul@grs+3)& (0+255),7,b
  6268  000FF8  EF00  F008         	goto	u2731
  6269  000FFC  EF02  F008         	goto	u2730
  6270  001000                     u2731:
  6271  001000  EF03  F008         	goto	l1755
  6272  001004                     u2730:
  6273  001004                     
  6274                           ; BSR set to: 0
  6275  001004  816B               	bsf	___flmul@prod& (0+255),0,b
  6276  001006                     l1755:
  6277                           
  6278                           ; BSR set to: 0
  6279  001006  90D8               	bcf	status,0,c
  6280  001008  3765               	rlcf	___flmul@grs& (0+255),f,b
  6281  00100A  3766               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6282  00100C  3767               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6283  00100E  3768               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6284  001010  076F               	decf	___flmul@temp& (0+255),f,b
  6285  001012  A0D8               	btfss	status,0,c
  6286  001014  0770               	decf	(___flmul@temp+1)& (0+255),f,b
  6287  001016                     l3929:
  6288                           
  6289                           ; BSR set to: 0
  6290  001016  AF6D               	btfss	(___flmul@prod+2)& (0+255),7,b
  6291  001018  EF10  F008         	goto	u2741
  6292  00101C  EF12  F008         	goto	u2740
  6293  001020                     u2741:
  6294  001020  EFF6  F007         	goto	l3923
  6295  001024                     u2740:
  6296  001024                     
  6297                           ; BSR set to: 0
  6298  001024  0E00               	movlw	0
  6299  001026  6F69               	movwf	___flmul@aexp& (0+255),b
  6300  001028                     
  6301                           ; BSR set to: 0
  6302  001028  AF68               	btfss	(___flmul@grs+3)& (0+255),7,b
  6303  00102A  EF19  F008         	goto	u2751
  6304  00102E  EF1B  F008         	goto	u2750
  6305  001032                     u2751:
  6306  001032  EF3F  F008         	goto	l1757
  6307  001036                     u2750:
  6308  001036                     
  6309                           ; BSR set to: 0
  6310  001036  0EFF               	movlw	255
  6311  001038  1565               	andwf	___flmul@grs& (0+255),w,b
  6312  00103A  6F60               	movwf	??___flmul& (0+255),b
  6313  00103C  0EFF               	movlw	255
  6314  00103E  1566               	andwf	(___flmul@grs+1)& (0+255),w,b
  6315  001040  6F61               	movwf	(??___flmul+1)& (0+255),b
  6316  001042  0EFF               	movlw	255
  6317  001044  1567               	andwf	(___flmul@grs+2)& (0+255),w,b
  6318  001046  6F62               	movwf	(??___flmul+2)& (0+255),b
  6319  001048  0E7F               	movlw	127
  6320  00104A  1568               	andwf	(___flmul@grs+3)& (0+255),w,b
  6321  00104C  6F63               	movwf	(??___flmul+3)& (0+255),b
  6322  00104E  5160               	movf	??___flmul& (0+255),w,b
  6323  001050  1161               	iorwf	(??___flmul+1)& (0+255),w,b
  6324  001052  1162               	iorwf	(??___flmul+2)& (0+255),w,b
  6325  001054  1163               	iorwf	(??___flmul+3)& (0+255),w,b
  6326  001056  B4D8               	btfsc	status,2,c
  6327  001058  EF30  F008         	goto	u2761
  6328  00105C  EF32  F008         	goto	u2760
  6329  001060                     u2761:
  6330  001060  EF36  F008         	goto	l1758
  6331  001064                     u2760:
  6332  001064                     l3937:
  6333                           
  6334                           ; BSR set to: 0
  6335  001064  0E01               	movlw	1
  6336  001066  6F69               	movwf	___flmul@aexp& (0+255),b
  6337  001068  EF3F  F008         	goto	l1757
  6338  00106C                     l1758:
  6339                           
  6340                           ; BSR set to: 0
  6341  00106C  A16B               	btfss	___flmul@prod& (0+255),0,b
  6342  00106E  EF3B  F008         	goto	u2771
  6343  001072  EF3D  F008         	goto	u2770
  6344  001076                     u2771:
  6345  001076  EF3F  F008         	goto	l1757
  6346  00107A                     u2770:
  6347  00107A  EF32  F008         	goto	l3937
  6348  00107E                     l1757:
  6349                           
  6350                           ; BSR set to: 0
  6351  00107E  5169               	movf	___flmul@aexp& (0+255),w,b
  6352  001080  B4D8               	btfsc	status,2,c
  6353  001082  EF45  F008         	goto	u2781
  6354  001086  EF47  F008         	goto	u2780
  6355  00108A                     u2781:
  6356  00108A  EF6B  F008         	goto	l3949
  6357  00108E                     u2780:
  6358  00108E                     
  6359                           ; BSR set to: 0
  6360  00108E  0E01               	movlw	1
  6361  001090  276B               	addwf	___flmul@prod& (0+255),f,b
  6362  001092  0E00               	movlw	0
  6363  001094  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6364  001096  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6365  001098  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6366  00109A                     
  6367                           ; BSR set to: 0
  6368  00109A  A16E               	btfss	(___flmul@prod+3)& (0+255),0,b
  6369  00109C  EF52  F008         	goto	u2791
  6370  0010A0  EF54  F008         	goto	u2790
  6371  0010A4                     u2791:
  6372  0010A4  EF6B  F008         	goto	l3949
  6373  0010A8                     u2790:
  6374  0010A8                     
  6375                           ; BSR set to: 0
  6376  0010A8  C06B  F060         	movff	___flmul@prod,??___flmul
  6377  0010AC  C06C  F061         	movff	___flmul@prod+1,??___flmul+1
  6378  0010B0  C06D  F062         	movff	___flmul@prod+2,??___flmul+2
  6379  0010B4  C06E  F063         	movff	___flmul@prod+3,??___flmul+3
  6380  0010B8  3563               	rlcf	(??___flmul+3)& (0+255),w,b
  6381  0010BA  3363               	rrcf	(??___flmul+3)& (0+255),f,b
  6382  0010BC  3362               	rrcf	(??___flmul+2)& (0+255),f,b
  6383  0010BE  3361               	rrcf	(??___flmul+1)& (0+255),f,b
  6384  0010C0  3360               	rrcf	??___flmul& (0+255),f,b
  6385  0010C2  C060  F06B         	movff	??___flmul,___flmul@prod
  6386  0010C6  C061  F06C         	movff	??___flmul+1,___flmul@prod+1
  6387  0010CA  C062  F06D         	movff	??___flmul+2,___flmul@prod+2
  6388  0010CE  C063  F06E         	movff	??___flmul+3,___flmul@prod+3
  6389  0010D2                     
  6390                           ; BSR set to: 0
  6391  0010D2  4B6F               	infsnz	___flmul@temp& (0+255),f,b
  6392  0010D4  2B70               	incf	(___flmul@temp+1)& (0+255),f,b
  6393  0010D6                     l3949:
  6394                           
  6395                           ; BSR set to: 0
  6396  0010D6  BF70               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6397  0010D8  EF76  F008         	goto	u2801
  6398  0010DC  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6399  0010DE  E108               	bnz	u2800
  6400  0010E0  296F               	incf	___flmul@temp& (0+255),w,b
  6401  0010E2  A0D8               	btfss	status,0,c
  6402  0010E4  EF76  F008         	goto	u2801
  6403  0010E8  EF78  F008         	goto	u2800
  6404  0010EC                     u2801:
  6405  0010EC  EF82  F008         	goto	l3953
  6406  0010F0                     u2800:
  6407  0010F0                     
  6408                           ; BSR set to: 0
  6409  0010F0  0E00               	movlw	0
  6410  0010F2  6F6B               	movwf	___flmul@prod& (0+255),b
  6411  0010F4  0E00               	movlw	0
  6412  0010F6  6F6C               	movwf	(___flmul@prod+1)& (0+255),b
  6413  0010F8  0E80               	movlw	128
  6414  0010FA  6F6D               	movwf	(___flmul@prod+2)& (0+255),b
  6415  0010FC  0E7F               	movlw	127
  6416  0010FE  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
  6417  001100  EFB0  F008         	goto	l3965
  6418  001104                     l3953:
  6419                           
  6420                           ; BSR set to: 0
  6421  001104  BF70               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6422  001106  EF8F  F008         	goto	u2810
  6423  00110A  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6424  00110C  E106               	bnz	u2811
  6425  00110E  056F               	decf	___flmul@temp& (0+255),w,b
  6426  001110  B0D8               	btfsc	status,0,c
  6427  001112  EF8D  F008         	goto	u2811
  6428  001116  EF8F  F008         	goto	u2810
  6429  00111A                     u2811:
  6430  00111A  EF9B  F008         	goto	l1765
  6431  00111E                     u2810:
  6432  00111E                     
  6433                           ; BSR set to: 0
  6434  00111E  0E00               	movlw	0
  6435  001120  6F6B               	movwf	___flmul@prod& (0+255),b
  6436  001122  0E00               	movlw	0
  6437  001124  6F6C               	movwf	(___flmul@prod+1)& (0+255),b
  6438  001126  0E00               	movlw	0
  6439  001128  6F6D               	movwf	(___flmul@prod+2)& (0+255),b
  6440  00112A  0E00               	movlw	0
  6441  00112C  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
  6442  00112E  0E00               	movlw	0
  6443  001130  6F64               	movwf	___flmul@sign& (0+255),b
  6444  001132  EFB0  F008         	goto	l3965
  6445  001136                     l1765:
  6446                           
  6447                           ; BSR set to: 0
  6448  001136  C06F  F06A         	movff	___flmul@temp,___flmul@bexp
  6449  00113A                     
  6450                           ; BSR set to: 0
  6451  00113A  0EFF               	movlw	255
  6452  00113C  176B               	andwf	___flmul@prod& (0+255),f,b
  6453  00113E  0EFF               	movlw	255
  6454  001140  176C               	andwf	(___flmul@prod+1)& (0+255),f,b
  6455  001142  0E7F               	movlw	127
  6456  001144  176D               	andwf	(___flmul@prod+2)& (0+255),f,b
  6457  001146  0E00               	movlw	0
  6458  001148  176E               	andwf	(___flmul@prod+3)& (0+255),f,b
  6459  00114A                     
  6460                           ; BSR set to: 0
  6461  00114A  A16A               	btfss	___flmul@bexp& (0+255),0,b
  6462  00114C  EFAA  F008         	goto	u2821
  6463  001150  EFAC  F008         	goto	u2820
  6464  001154                     u2821:
  6465  001154  EFAD  F008         	goto	l3963
  6466  001158                     u2820:
  6467  001158                     
  6468                           ; BSR set to: 0
  6469  001158  8F6D               	bsf	(___flmul@prod+2)& (0+255),7,b
  6470  00115A                     l3963:
  6471                           
  6472                           ; BSR set to: 0
  6473  00115A  90D8               	bcf	status,0,c
  6474  00115C  316A               	rrcf	___flmul@bexp& (0+255),w,b
  6475  00115E  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
  6476  001160                     l3965:
  6477                           
  6478                           ; BSR set to: 0
  6479  001160  5164               	movf	___flmul@sign& (0+255),w,b
  6480  001162  136E               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6481  001164                     
  6482                           ; BSR set to: 0
  6483  001164  C06B  F056         	movff	___flmul@prod,?___flmul
  6484  001168  C06C  F057         	movff	___flmul@prod+1,?___flmul+1
  6485  00116C  C06D  F058         	movff	___flmul@prod+2,?___flmul+2
  6486  001170  C06E  F059         	movff	___flmul@prod+3,?___flmul+3
  6487  001174                     l1752:
  6488                           
  6489                           ; BSR set to: 0
  6490  001174  0012               	return		;funcret
  6491  001176                     __end_of___flmul:
  6492                           	callstack 0
  6493                           
  6494 ;; *************** function ___fladd *****************
  6495 ;; Defined at:
  6496 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  6497 ;; Parameters:    Size  Location     Type
  6498 ;;  b               4   25[COMRAM] unsigned char 
  6499 ;;  a               4   29[COMRAM] unsigned char 
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;  grs             1   40[COMRAM] unsigned char 
  6502 ;;  bexp            1   39[COMRAM] unsigned char 
  6503 ;;  aexp            1   38[COMRAM] unsigned char 
  6504 ;;  signs           1   37[COMRAM] unsigned char 
  6505 ;; Return value:  Size  Location     Type
  6506 ;;                  4   25[COMRAM] unsigned char 
  6507 ;; Registers used:
  6508 ;;		wreg, status,2, status,0
  6509 ;; Tracked objects:
  6510 ;;		On entry : 0/0
  6511 ;;		On exit  : 0/0
  6512 ;;		Unchanged: 0/0
  6513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6514 ;;      Params:         8       0       0       0       0       0       0       0       0
  6515 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6516 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6517 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6518 ;;Total ram usage:       16 bytes
  6519 ;; Hardware stack levels used:    1
  6520 ;; Hardware stack levels required when called:    3
  6521 ;; This function calls:
  6522 ;;		Nothing
  6523 ;; This function is called by:
  6524 ;;		_ComputeTemp
  6525 ;;		_ComputeWaterVol
  6526 ;;		___flsub
  6527 ;;		_log
  6528 ;;		_eval_poly
  6529 ;;		_floor
  6530 ;;		_round
  6531 ;; This function uses a non-reentrant model
  6532 ;;
  6533                           
  6534                           	psect	text33
  6535  00088A                     __ptext33:
  6536                           	callstack 0
  6537  00088A                     ___fladd:
  6538                           	callstack 23
  6539  00088A  501D               	movf	(___fladd@b+3)^0,w,c
  6540  00088C  0B80               	andlw	128
  6541  00088E  6E26               	movwf	___fladd@signs^0,c
  6542  000890  501D               	movf	(___fladd@b+3)^0,w,c
  6543  000892  241D               	addwf	(___fladd@b+3)^0,w,c
  6544  000894  6E28               	movwf	___fladd@bexp^0,c
  6545  000896  AE1C               	btfss	(___fladd@b+2)^0,7,c
  6546  000898  EF50  F004         	goto	u2251
  6547  00089C  EF52  F004         	goto	u2250
  6548  0008A0                     u2251:
  6549  0008A0  EF53  F004         	goto	l3645
  6550  0008A4                     u2250:
  6551  0008A4  8028               	bsf	___fladd@bexp^0,0,c
  6552  0008A6                     l3645:
  6553  0008A6  5028               	movf	___fladd@bexp^0,w,c
  6554  0008A8  B4D8               	btfsc	status,2,c
  6555  0008AA  EF59  F004         	goto	u2261
  6556  0008AE  EF5B  F004         	goto	u2260
  6557  0008B2                     u2261:
  6558  0008B2  EF70  F004         	goto	l3655
  6559  0008B6                     u2260:
  6560  0008B6  2828               	incf	___fladd@bexp^0,w,c
  6561  0008B8  A4D8               	btfss	status,2,c
  6562  0008BA  EF61  F004         	goto	u2271
  6563  0008BE  EF63  F004         	goto	u2270
  6564  0008C2                     u2271:
  6565  0008C2  EF6B  F004         	goto	l3651
  6566  0008C6                     u2270:
  6567  0008C6  0E00               	movlw	0
  6568  0008C8  6E1A               	movwf	___fladd@b^0,c
  6569  0008CA  0E00               	movlw	0
  6570  0008CC  6E1B               	movwf	(___fladd@b+1)^0,c
  6571  0008CE  0E00               	movlw	0
  6572  0008D0  6E1C               	movwf	(___fladd@b+2)^0,c
  6573  0008D2  0E00               	movlw	0
  6574  0008D4  6E1D               	movwf	(___fladd@b+3)^0,c
  6575  0008D6                     l3651:
  6576  0008D6  8E1C               	bsf	(___fladd@b+2)^0,7,c
  6577  0008D8  0E00               	movlw	0
  6578  0008DA  6E1D               	movwf	(___fladd@b+3)^0,c
  6579  0008DC  EF78  F004         	goto	l3657
  6580  0008E0                     l3655:
  6581  0008E0  0E00               	movlw	0
  6582  0008E2  6E1A               	movwf	___fladd@b^0,c
  6583  0008E4  0E00               	movlw	0
  6584  0008E6  6E1B               	movwf	(___fladd@b+1)^0,c
  6585  0008E8  0E00               	movlw	0
  6586  0008EA  6E1C               	movwf	(___fladd@b+2)^0,c
  6587  0008EC  0E00               	movlw	0
  6588  0008EE  6E1D               	movwf	(___fladd@b+3)^0,c
  6589  0008F0                     l3657:
  6590  0008F0  5021               	movf	(___fladd@a+3)^0,w,c
  6591  0008F2  0B80               	andlw	128
  6592  0008F4  6E27               	movwf	___fladd@aexp^0,c
  6593  0008F6  5026               	movf	___fladd@signs^0,w,c
  6594  0008F8  1827               	xorwf	___fladd@aexp^0,w,c
  6595  0008FA  B4D8               	btfsc	status,2,c
  6596  0008FC  EF82  F004         	goto	u2281
  6597  000900  EF84  F004         	goto	u2280
  6598  000904                     u2281:
  6599  000904  EF85  F004         	goto	l3663
  6600  000908                     u2280:
  6601  000908  8C26               	bsf	___fladd@signs^0,6,c
  6602  00090A                     l3663:
  6603  00090A  5021               	movf	(___fladd@a+3)^0,w,c
  6604  00090C  2421               	addwf	(___fladd@a+3)^0,w,c
  6605  00090E  6E27               	movwf	___fladd@aexp^0,c
  6606  000910  AE20               	btfss	(___fladd@a+2)^0,7,c
  6607  000912  EF8D  F004         	goto	u2291
  6608  000916  EF8F  F004         	goto	u2290
  6609  00091A                     u2291:
  6610  00091A  EF90  F004         	goto	l3669
  6611  00091E                     u2290:
  6612  00091E  8027               	bsf	___fladd@aexp^0,0,c
  6613  000920                     l3669:
  6614  000920  5027               	movf	___fladd@aexp^0,w,c
  6615  000922  B4D8               	btfsc	status,2,c
  6616  000924  EF96  F004         	goto	u2301
  6617  000928  EF98  F004         	goto	u2300
  6618  00092C                     u2301:
  6619  00092C  EFAD  F004         	goto	l3679
  6620  000930                     u2300:
  6621  000930  2827               	incf	___fladd@aexp^0,w,c
  6622  000932  A4D8               	btfss	status,2,c
  6623  000934  EF9E  F004         	goto	u2311
  6624  000938  EFA0  F004         	goto	u2310
  6625  00093C                     u2311:
  6626  00093C  EFA8  F004         	goto	l3675
  6627  000940                     u2310:
  6628  000940  0E00               	movlw	0
  6629  000942  6E1E               	movwf	___fladd@a^0,c
  6630  000944  0E00               	movlw	0
  6631  000946  6E1F               	movwf	(___fladd@a+1)^0,c
  6632  000948  0E00               	movlw	0
  6633  00094A  6E20               	movwf	(___fladd@a+2)^0,c
  6634  00094C  0E00               	movlw	0
  6635  00094E  6E21               	movwf	(___fladd@a+3)^0,c
  6636  000950                     l3675:
  6637  000950  8E20               	bsf	(___fladd@a+2)^0,7,c
  6638  000952  0E00               	movlw	0
  6639  000954  6E21               	movwf	(___fladd@a+3)^0,c
  6640  000956  EFB5  F004         	goto	l3681
  6641  00095A                     l3679:
  6642  00095A  0E00               	movlw	0
  6643  00095C  6E1E               	movwf	___fladd@a^0,c
  6644  00095E  0E00               	movlw	0
  6645  000960  6E1F               	movwf	(___fladd@a+1)^0,c
  6646  000962  0E00               	movlw	0
  6647  000964  6E20               	movwf	(___fladd@a+2)^0,c
  6648  000966  0E00               	movlw	0
  6649  000968  6E21               	movwf	(___fladd@a+3)^0,c
  6650  00096A                     l3681:
  6651  00096A  5028               	movf	___fladd@bexp^0,w,c
  6652  00096C  5C27               	subwf	___fladd@aexp^0,w,c
  6653  00096E  B0D8               	btfsc	status,0,c
  6654  000970  EFBC  F004         	goto	u2321
  6655  000974  EFBE  F004         	goto	u2320
  6656  000978                     u2321:
  6657  000978  EFE5  F004         	goto	l3717
  6658  00097C                     u2320:
  6659  00097C  AC26               	btfss	___fladd@signs^0,6,c
  6660  00097E  EFC3  F004         	goto	u2331
  6661  000982  EFC5  F004         	goto	u2330
  6662  000986                     u2331:
  6663  000986  EFC7  F004         	goto	l3687
  6664  00098A                     u2330:
  6665  00098A  0E80               	movlw	128
  6666  00098C  1A26               	xorwf	___fladd@signs^0,f,c
  6667  00098E                     l3687:
  6668  00098E  C028  F029         	movff	___fladd@bexp,___fladd@grs
  6669  000992  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  6670  000996  C029  F027         	movff	___fladd@grs,___fladd@aexp
  6671  00099A  C01A  F029         	movff	___fladd@b,___fladd@grs
  6672  00099E  C01E  F01A         	movff	___fladd@a,___fladd@b
  6673  0009A2  C029  F01E         	movff	___fladd@grs,___fladd@a
  6674  0009A6  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  6675  0009AA  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  6676  0009AE  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  6677  0009B2  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  6678  0009B6  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  6679  0009BA  C029  F020         	movff	___fladd@grs,___fladd@a+2
  6680  0009BE  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  6681  0009C2  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  6682  0009C6  C029  F021         	movff	___fladd@grs,___fladd@a+3
  6683  0009CA                     l3717:
  6684  0009CA  0E00               	movlw	0
  6685  0009CC  6E29               	movwf	___fladd@grs^0,c
  6686  0009CE  5028               	movf	___fladd@bexp^0,w,c
  6687  0009D0  C027  F022         	movff	___fladd@aexp,??___fladd
  6688  0009D4  6A23               	clrf	(??___fladd+1)^0,c
  6689  0009D6  5E22               	subwf	??___fladd^0,f,c
  6690  0009D8  0E00               	movlw	0
  6691  0009DA  5A23               	subwfb	(??___fladd+1)^0,f,c
  6692  0009DC  BE23               	btfsc	(??___fladd+1)^0,7,c
  6693  0009DE  EFFA  F004         	goto	u2341
  6694  0009E2  5023               	movf	(??___fladd+1)^0,w,c
  6695  0009E4  E109               	bnz	u2340
  6696  0009E6  0E1A               	movlw	26
  6697  0009E8  5C22               	subwf	??___fladd^0,w,c
  6698  0009EA  A0D8               	btfss	status,0,c
  6699  0009EC  EFFA  F004         	goto	u2341
  6700  0009F0  EFFC  F004         	goto	u2340
  6701  0009F4                     u2341:
  6702  0009F4  EF33  F005         	goto	l1663
  6703  0009F8                     u2340:
  6704  0009F8  501A               	movf	___fladd@b^0,w,c
  6705  0009FA  101B               	iorwf	(___fladd@b+1)^0,w,c
  6706  0009FC  101C               	iorwf	(___fladd@b+2)^0,w,c
  6707  0009FE  101D               	iorwf	(___fladd@b+3)^0,w,c
  6708  000A00  A4D8               	btfss	status,2,c
  6709  000A02  EF05  F005         	goto	u2351
  6710  000A06  EF08  F005         	goto	u2350
  6711  000A0A                     u2351:
  6712  000A0A  0E01               	movlw	1
  6713  000A0C  EF09  F005         	goto	u2360
  6714  000A10                     u2350:
  6715  000A10  0E00               	movlw	0
  6716  000A12                     u2360:
  6717  000A12  6E29               	movwf	___fladd@grs^0,c
  6718  000A14  0E00               	movlw	0
  6719  000A16  6E1A               	movwf	___fladd@b^0,c
  6720  000A18  0E00               	movlw	0
  6721  000A1A  6E1B               	movwf	(___fladd@b+1)^0,c
  6722  000A1C  0E00               	movlw	0
  6723  000A1E  6E1C               	movwf	(___fladd@b+2)^0,c
  6724  000A20  0E00               	movlw	0
  6725  000A22  6E1D               	movwf	(___fladd@b+3)^0,c
  6726  000A24  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  6727  000A28  EF3C  F005         	goto	l1662
  6728  000A2C                     l1664:
  6729  000A2C  A029               	btfss	___fladd@grs^0,0,c
  6730  000A2E  EF1B  F005         	goto	u2371
  6731  000A32  EF1D  F005         	goto	u2370
  6732  000A36                     u2371:
  6733  000A36  EF23  F005         	goto	l3729
  6734  000A3A                     u2370:
  6735  000A3A  90D8               	bcf	status,0,c
  6736  000A3C  3029               	rrcf	___fladd@grs^0,w,c
  6737  000A3E  0901               	iorlw	1
  6738  000A40  6E29               	movwf	___fladd@grs^0,c
  6739  000A42  EF25  F005         	goto	l3731
  6740  000A46                     l3729:
  6741  000A46  90D8               	bcf	status,0,c
  6742  000A48  3229               	rrcf	___fladd@grs^0,f,c
  6743  000A4A                     l3731:
  6744  000A4A  A01A               	btfss	___fladd@b^0,0,c
  6745  000A4C  EF2A  F005         	goto	u2381
  6746  000A50  EF2C  F005         	goto	u2380
  6747  000A54                     u2381:
  6748  000A54  EF2D  F005         	goto	l3735
  6749  000A58                     u2380:
  6750  000A58  8E29               	bsf	___fladd@grs^0,7,c
  6751  000A5A                     l3735:
  6752  000A5A  341D               	rlcf	(___fladd@b+3)^0,w,c
  6753  000A5C  321D               	rrcf	(___fladd@b+3)^0,f,c
  6754  000A5E  321C               	rrcf	(___fladd@b+2)^0,f,c
  6755  000A60  321B               	rrcf	(___fladd@b+1)^0,f,c
  6756  000A62  321A               	rrcf	___fladd@b^0,f,c
  6757  000A64  2A28               	incf	___fladd@bexp^0,f,c
  6758  000A66                     l1663:
  6759  000A66  5027               	movf	___fladd@aexp^0,w,c
  6760  000A68  5C28               	subwf	___fladd@bexp^0,w,c
  6761  000A6A  A0D8               	btfss	status,0,c
  6762  000A6C  EF3A  F005         	goto	u2391
  6763  000A70  EF3C  F005         	goto	u2390
  6764  000A74                     u2391:
  6765  000A74  EF16  F005         	goto	l1664
  6766  000A78                     u2390:
  6767  000A78                     l1662:
  6768  000A78  BC26               	btfsc	___fladd@signs^0,6,c
  6769  000A7A  EF41  F005         	goto	u2401
  6770  000A7E  EF43  F005         	goto	u2400
  6771  000A82                     u2401:
  6772  000A82  EF83  F005         	goto	l3763
  6773  000A86                     u2400:
  6774  000A86  5028               	movf	___fladd@bexp^0,w,c
  6775  000A88  A4D8               	btfss	status,2,c
  6776  000A8A  EF49  F005         	goto	u2411
  6777  000A8E  EF4B  F005         	goto	u2410
  6778  000A92                     u2411:
  6779  000A92  EF55  F005         	goto	l3745
  6780  000A96                     u2410:
  6781  000A96  0E00               	movlw	0
  6782  000A98  6E1A               	movwf	?___fladd^0,c
  6783  000A9A  0E00               	movlw	0
  6784  000A9C  6E1B               	movwf	(?___fladd+1)^0,c
  6785  000A9E  0E00               	movlw	0
  6786  000AA0  6E1C               	movwf	(?___fladd+2)^0,c
  6787  000AA2  0E00               	movlw	0
  6788  000AA4  6E1D               	movwf	(?___fladd+3)^0,c
  6789  000AA6  EFA4  F006         	goto	l1671
  6790  000AAA                     l3745:
  6791  000AAA  501E               	movf	___fladd@a^0,w,c
  6792  000AAC  261A               	addwf	___fladd@b^0,f,c
  6793  000AAE  501F               	movf	(___fladd@a+1)^0,w,c
  6794  000AB0  221B               	addwfc	(___fladd@b+1)^0,f,c
  6795  000AB2  5020               	movf	(___fladd@a+2)^0,w,c
  6796  000AB4  221C               	addwfc	(___fladd@b+2)^0,f,c
  6797  000AB6  5021               	movf	(___fladd@a+3)^0,w,c
  6798  000AB8  221D               	addwfc	(___fladd@b+3)^0,f,c
  6799  000ABA  A01D               	btfss	(___fladd@b+3)^0,0,c
  6800  000ABC  EF62  F005         	goto	u2421
  6801  000AC0  EF64  F005         	goto	u2420
  6802  000AC4                     u2421:
  6803  000AC4  EF10  F006         	goto	l3799
  6804  000AC8                     u2420:
  6805  000AC8  A029               	btfss	___fladd@grs^0,0,c
  6806  000ACA  EF69  F005         	goto	u2431
  6807  000ACE  EF6B  F005         	goto	u2430
  6808  000AD2                     u2431:
  6809  000AD2  EF71  F005         	goto	l3753
  6810  000AD6                     u2430:
  6811  000AD6  90D8               	bcf	status,0,c
  6812  000AD8  3029               	rrcf	___fladd@grs^0,w,c
  6813  000ADA  0901               	iorlw	1
  6814  000ADC  6E29               	movwf	___fladd@grs^0,c
  6815  000ADE  EF73  F005         	goto	l3755
  6816  000AE2                     l3753:
  6817  000AE2  90D8               	bcf	status,0,c
  6818  000AE4  3229               	rrcf	___fladd@grs^0,f,c
  6819  000AE6                     l3755:
  6820  000AE6  A01A               	btfss	___fladd@b^0,0,c
  6821  000AE8  EF78  F005         	goto	u2441
  6822  000AEC  EF7A  F005         	goto	u2440
  6823  000AF0                     u2441:
  6824  000AF0  EF7B  F005         	goto	l3759
  6825  000AF4                     u2440:
  6826  000AF4  8E29               	bsf	___fladd@grs^0,7,c
  6827  000AF6                     l3759:
  6828  000AF6  341D               	rlcf	(___fladd@b+3)^0,w,c
  6829  000AF8  321D               	rrcf	(___fladd@b+3)^0,f,c
  6830  000AFA  321C               	rrcf	(___fladd@b+2)^0,f,c
  6831  000AFC  321B               	rrcf	(___fladd@b+1)^0,f,c
  6832  000AFE  321A               	rrcf	___fladd@b^0,f,c
  6833  000B00  2A28               	incf	___fladd@bexp^0,f,c
  6834  000B02  EF10  F006         	goto	l3799
  6835  000B06                     l3763:
  6836  000B06  501E               	movf	___fladd@a^0,w,c
  6837  000B08  5C1A               	subwf	___fladd@b^0,w,c
  6838  000B0A  501F               	movf	(___fladd@a+1)^0,w,c
  6839  000B0C  581B               	subwfb	(___fladd@b+1)^0,w,c
  6840  000B0E  5020               	movf	(___fladd@a+2)^0,w,c
  6841  000B10  581C               	subwfb	(___fladd@b+2)^0,w,c
  6842  000B12  501D               	movf	(___fladd@b+3)^0,w,c
  6843  000B14  0A80               	xorlw	128
  6844  000B16  6E22               	movwf	??___fladd^0,c
  6845  000B18  5021               	movf	(___fladd@a+3)^0,w,c
  6846  000B1A  0A80               	xorlw	128
  6847  000B1C  5822               	subwfb	??___fladd^0,w,c
  6848  000B1E  B0D8               	btfsc	status,0,c
  6849  000B20  EF94  F005         	goto	u2451
  6850  000B24  EF96  F005         	goto	u2450
  6851  000B28                     u2451:
  6852  000B28  EFC1  F005         	goto	l3773
  6853  000B2C                     u2450:
  6854  000B2C  501A               	movf	___fladd@b^0,w,c
  6855  000B2E  5C1E               	subwf	___fladd@a^0,w,c
  6856  000B30  6E22               	movwf	??___fladd^0,c
  6857  000B32  501B               	movf	(___fladd@b+1)^0,w,c
  6858  000B34  581F               	subwfb	(___fladd@a+1)^0,w,c
  6859  000B36  6E23               	movwf	(??___fladd+1)^0,c
  6860  000B38  501C               	movf	(___fladd@b+2)^0,w,c
  6861  000B3A  5820               	subwfb	(___fladd@a+2)^0,w,c
  6862  000B3C  6E24               	movwf	(??___fladd+2)^0,c
  6863  000B3E  501D               	movf	(___fladd@b+3)^0,w,c
  6864  000B40  5821               	subwfb	(___fladd@a+3)^0,w,c
  6865  000B42  6E25               	movwf	(??___fladd+3)^0,c
  6866  000B44  0EFF               	movlw	255
  6867  000B46  2422               	addwf	??___fladd^0,w,c
  6868  000B48  6E1A               	movwf	___fladd@b^0,c
  6869  000B4A  0EFF               	movlw	255
  6870  000B4C  2023               	addwfc	(??___fladd+1)^0,w,c
  6871  000B4E  6E1B               	movwf	(___fladd@b+1)^0,c
  6872  000B50  0EFF               	movlw	255
  6873  000B52  2024               	addwfc	(??___fladd+2)^0,w,c
  6874  000B54  6E1C               	movwf	(___fladd@b+2)^0,c
  6875  000B56  0EFF               	movlw	255
  6876  000B58  2025               	addwfc	(??___fladd+3)^0,w,c
  6877  000B5A  6E1D               	movwf	(___fladd@b+3)^0,c
  6878  000B5C  0E80               	movlw	128
  6879  000B5E  1A26               	xorwf	___fladd@signs^0,f,c
  6880  000B60  6C29               	negf	___fladd@grs^0,c
  6881  000B62  5029               	movf	___fladd@grs^0,w,c
  6882  000B64  A4D8               	btfss	status,2,c
  6883  000B66  EFB7  F005         	goto	u2461
  6884  000B6A  EFB9  F005         	goto	u2460
  6885  000B6E                     u2461:
  6886  000B6E  EFC9  F005         	goto	l1679
  6887  000B72                     u2460:
  6888  000B72  0E01               	movlw	1
  6889  000B74  261A               	addwf	___fladd@b^0,f,c
  6890  000B76  0E00               	movlw	0
  6891  000B78  221B               	addwfc	(___fladd@b+1)^0,f,c
  6892  000B7A  221C               	addwfc	(___fladd@b+2)^0,f,c
  6893  000B7C  221D               	addwfc	(___fladd@b+3)^0,f,c
  6894  000B7E  EFC9  F005         	goto	l1679
  6895  000B82                     l3773:
  6896  000B82  501E               	movf	___fladd@a^0,w,c
  6897  000B84  5E1A               	subwf	___fladd@b^0,f,c
  6898  000B86  501F               	movf	(___fladd@a+1)^0,w,c
  6899  000B88  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  6900  000B8A  5020               	movf	(___fladd@a+2)^0,w,c
  6901  000B8C  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  6902  000B8E  5021               	movf	(___fladd@a+3)^0,w,c
  6903  000B90  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  6904  000B92                     l1679:
  6905  000B92  501A               	movf	___fladd@b^0,w,c
  6906  000B94  101B               	iorwf	(___fladd@b+1)^0,w,c
  6907  000B96  101C               	iorwf	(___fladd@b+2)^0,w,c
  6908  000B98  101D               	iorwf	(___fladd@b+3)^0,w,c
  6909  000B9A  A4D8               	btfss	status,2,c
  6910  000B9C  EFD2  F005         	goto	u2471
  6911  000BA0  EFD4  F005         	goto	u2470
  6912  000BA4                     u2471:
  6913  000BA4  EF09  F006         	goto	l3797
  6914  000BA8                     u2470:
  6915  000BA8  5029               	movf	___fladd@grs^0,w,c
  6916  000BAA  A4D8               	btfss	status,2,c
  6917  000BAC  EFDA  F005         	goto	u2481
  6918  000BB0  EFDC  F005         	goto	u2480
  6919  000BB4                     u2481:
  6920  000BB4  EF09  F006         	goto	l3797
  6921  000BB8                     u2480:
  6922  000BB8  0E00               	movlw	0
  6923  000BBA  6E1A               	movwf	?___fladd^0,c
  6924  000BBC  0E00               	movlw	0
  6925  000BBE  6E1B               	movwf	(?___fladd+1)^0,c
  6926  000BC0  0E00               	movlw	0
  6927  000BC2  6E1C               	movwf	(?___fladd+2)^0,c
  6928  000BC4  0E00               	movlw	0
  6929  000BC6  6E1D               	movwf	(?___fladd+3)^0,c
  6930  000BC8  EFA4  F006         	goto	l1671
  6931  000BCC                     l3781:
  6932  000BCC  90D8               	bcf	status,0,c
  6933  000BCE  361A               	rlcf	___fladd@b^0,f,c
  6934  000BD0  361B               	rlcf	(___fladd@b+1)^0,f,c
  6935  000BD2  361C               	rlcf	(___fladd@b+2)^0,f,c
  6936  000BD4  361D               	rlcf	(___fladd@b+3)^0,f,c
  6937  000BD6  AE29               	btfss	___fladd@grs^0,7,c
  6938  000BD8  EFF0  F005         	goto	u2491
  6939  000BDC  EFF2  F005         	goto	u2490
  6940  000BE0                     u2491:
  6941  000BE0  EFF3  F005         	goto	l3787
  6942  000BE4                     u2490:
  6943  000BE4  801A               	bsf	___fladd@b^0,0,c
  6944  000BE6                     l3787:
  6945  000BE6  A029               	btfss	___fladd@grs^0,0,c
  6946  000BE8  EFF8  F005         	goto	u2501
  6947  000BEC  EFFA  F005         	goto	u2500
  6948  000BF0                     u2501:
  6949  000BF0  EFFE  F005         	goto	l3791
  6950  000BF4                     u2500:
  6951  000BF4  80D8               	bsf	status,0,c
  6952  000BF6  3629               	rlcf	___fladd@grs^0,f,c
  6953  000BF8  EF00  F006         	goto	l3793
  6954  000BFC                     l3791:
  6955  000BFC  90D8               	bcf	status,0,c
  6956  000BFE  3629               	rlcf	___fladd@grs^0,f,c
  6957  000C00                     l3793:
  6958  000C00  5028               	movf	___fladd@bexp^0,w,c
  6959  000C02  B4D8               	btfsc	status,2,c
  6960  000C04  EF06  F006         	goto	u2511
  6961  000C08  EF08  F006         	goto	u2510
  6962  000C0C                     u2511:
  6963  000C0C  EF09  F006         	goto	l3797
  6964  000C10                     u2510:
  6965  000C10  0628               	decf	___fladd@bexp^0,f,c
  6966  000C12                     l3797:
  6967  000C12  AE1C               	btfss	(___fladd@b+2)^0,7,c
  6968  000C14  EF0E  F006         	goto	u2521
  6969  000C18  EF10  F006         	goto	u2520
  6970  000C1C                     u2521:
  6971  000C1C  EFE6  F005         	goto	l3781
  6972  000C20                     u2520:
  6973  000C20                     l3799:
  6974  000C20  0E00               	movlw	0
  6975  000C22  6E27               	movwf	___fladd@aexp^0,c
  6976  000C24  AE29               	btfss	___fladd@grs^0,7,c
  6977  000C26  EF17  F006         	goto	u2531
  6978  000C2A  EF19  F006         	goto	u2530
  6979  000C2E                     u2531:
  6980  000C2E  EF31  F006         	goto	l1688
  6981  000C32                     u2530:
  6982  000C32  C029  F022         	movff	___fladd@grs,??___fladd
  6983  000C36  0E7F               	movlw	127
  6984  000C38  1622               	andwf	??___fladd^0,f,c
  6985  000C3A  B4D8               	btfsc	status,2,c
  6986  000C3C  EF22  F006         	goto	u2541
  6987  000C40  EF24  F006         	goto	u2540
  6988  000C44                     u2541:
  6989  000C44  EF28  F006         	goto	l1689
  6990  000C48                     u2540:
  6991  000C48                     l3805:
  6992  000C48  0E01               	movlw	1
  6993  000C4A  6E27               	movwf	___fladd@aexp^0,c
  6994  000C4C  EF31  F006         	goto	l1688
  6995  000C50                     l1689:
  6996  000C50  A01A               	btfss	___fladd@b^0,0,c
  6997  000C52  EF2D  F006         	goto	u2551
  6998  000C56  EF2F  F006         	goto	u2550
  6999  000C5A                     u2551:
  7000  000C5A  EF31  F006         	goto	l1688
  7001  000C5E                     u2550:
  7002  000C5E  EF24  F006         	goto	l3805
  7003  000C62                     l1688:
  7004  000C62  5027               	movf	___fladd@aexp^0,w,c
  7005  000C64  B4D8               	btfsc	status,2,c
  7006  000C66  EF37  F006         	goto	u2561
  7007  000C6A  EF39  F006         	goto	u2560
  7008  000C6E                     u2561:
  7009  000C6E  EF64  F006         	goto	l3817
  7010  000C72                     u2560:
  7011  000C72  0E01               	movlw	1
  7012  000C74  261A               	addwf	___fladd@b^0,f,c
  7013  000C76  0E00               	movlw	0
  7014  000C78  221B               	addwfc	(___fladd@b+1)^0,f,c
  7015  000C7A  221C               	addwfc	(___fladd@b+2)^0,f,c
  7016  000C7C  221D               	addwfc	(___fladd@b+3)^0,f,c
  7017  000C7E  A01D               	btfss	(___fladd@b+3)^0,0,c
  7018  000C80  EF44  F006         	goto	u2571
  7019  000C84  EF46  F006         	goto	u2570
  7020  000C88                     u2571:
  7021  000C88  EF64  F006         	goto	l3817
  7022  000C8C                     u2570:
  7023  000C8C  C01A  F022         	movff	___fladd@b,??___fladd
  7024  000C90  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  7025  000C94  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  7026  000C98  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  7027  000C9C  3425               	rlcf	(??___fladd+3)^0,w,c
  7028  000C9E  3225               	rrcf	(??___fladd+3)^0,f,c
  7029  000CA0  3224               	rrcf	(??___fladd+2)^0,f,c
  7030  000CA2  3223               	rrcf	(??___fladd+1)^0,f,c
  7031  000CA4  3222               	rrcf	??___fladd^0,f,c
  7032  000CA6  C022  F01A         	movff	??___fladd,___fladd@b
  7033  000CAA  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  7034  000CAE  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  7035  000CB2  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  7036  000CB6  2828               	incf	___fladd@bexp^0,w,c
  7037  000CB8  B4D8               	btfsc	status,2,c
  7038  000CBA  EF61  F006         	goto	u2581
  7039  000CBE  EF63  F006         	goto	u2580
  7040  000CC2                     u2581:
  7041  000CC2  EF64  F006         	goto	l3817
  7042  000CC6                     u2580:
  7043  000CC6  2A28               	incf	___fladd@bexp^0,f,c
  7044  000CC8                     l3817:
  7045  000CC8  2828               	incf	___fladd@bexp^0,w,c
  7046  000CCA  B4D8               	btfsc	status,2,c
  7047  000CCC  EF6A  F006         	goto	u2591
  7048  000CD0  EF6C  F006         	goto	u2590
  7049  000CD4                     u2591:
  7050  000CD4  EF74  F006         	goto	l3821
  7051  000CD8                     u2590:
  7052  000CD8  5028               	movf	___fladd@bexp^0,w,c
  7053  000CDA  A4D8               	btfss	status,2,c
  7054  000CDC  EF72  F006         	goto	u2601
  7055  000CE0  EF74  F006         	goto	u2600
  7056  000CE4                     u2601:
  7057  000CE4  EF86  F006         	goto	l3825
  7058  000CE8                     u2600:
  7059  000CE8                     l3821:
  7060  000CE8  0E00               	movlw	0
  7061  000CEA  6E1A               	movwf	___fladd@b^0,c
  7062  000CEC  0E00               	movlw	0
  7063  000CEE  6E1B               	movwf	(___fladd@b+1)^0,c
  7064  000CF0  0E00               	movlw	0
  7065  000CF2  6E1C               	movwf	(___fladd@b+2)^0,c
  7066  000CF4  0E00               	movlw	0
  7067  000CF6  6E1D               	movwf	(___fladd@b+3)^0,c
  7068  000CF8  5028               	movf	___fladd@bexp^0,w,c
  7069  000CFA  A4D8               	btfss	status,2,c
  7070  000CFC  EF82  F006         	goto	u2611
  7071  000D00  EF84  F006         	goto	u2610
  7072  000D04                     u2611:
  7073  000D04  EF86  F006         	goto	l3825
  7074  000D08                     u2610:
  7075  000D08  0E00               	movlw	0
  7076  000D0A  6E26               	movwf	___fladd@signs^0,c
  7077  000D0C                     l3825:
  7078  000D0C  A028               	btfss	___fladd@bexp^0,0,c
  7079  000D0E  EF8B  F006         	goto	u2621
  7080  000D12  EF8D  F006         	goto	u2620
  7081  000D16                     u2621:
  7082  000D16  EF90  F006         	goto	l3829
  7083  000D1A                     u2620:
  7084  000D1A  8E1C               	bsf	(___fladd@b+2)^0,7,c
  7085  000D1C  EF91  F006         	goto	l3831
  7086  000D20                     l3829:
  7087  000D20  9E1C               	bcf	(___fladd@b+2)^0,7,c
  7088  000D22                     l3831:
  7089  000D22  90D8               	bcf	status,0,c
  7090  000D24  3028               	rrcf	___fladd@bexp^0,w,c
  7091  000D26  6E1D               	movwf	(___fladd@b+3)^0,c
  7092  000D28  AE26               	btfss	___fladd@signs^0,7,c
  7093  000D2A  EF99  F006         	goto	u2631
  7094  000D2E  EF9B  F006         	goto	u2630
  7095  000D32                     u2631:
  7096  000D32  EF9C  F006         	goto	l3837
  7097  000D36                     u2630:
  7098  000D36  8E1D               	bsf	(___fladd@b+3)^0,7,c
  7099  000D38                     l3837:
  7100  000D38  C01A  F01A         	movff	___fladd@b,?___fladd
  7101  000D3C  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  7102  000D40  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  7103  000D44  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  7104  000D48                     l1671:
  7105  000D48  0012               	return		;funcret
  7106  000D4A                     __end_of___fladd:
  7107                           	callstack 0
  7108                           
  7109 ;; *************** function ___xxtofl *****************
  7110 ;; Defined at:
  7111 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  sign            1    wreg     unsigned char 
  7114 ;;  val             4   51[COMRAM] long 
  7115 ;; Auto vars:     Size  Location     Type
  7116 ;;  sign            1   59[COMRAM] unsigned char 
  7117 ;;  arg             4   61[COMRAM] unsigned long 
  7118 ;;  exp             1   60[COMRAM] unsigned char 
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  4   51[COMRAM] unsigned char 
  7121 ;; Registers used:
  7122 ;;		wreg, status,2, status,0
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7128 ;;      Params:         4       0       0       0       0       0       0       0       0
  7129 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7130 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7131 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7132 ;;Total ram usage:       14 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    3
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_ComputeTemp
  7139 ;;		_ComputeWaterVol
  7140 ;;		_log
  7141 ;;		_pow
  7142 ;;		_exp
  7143 ;;		_floor
  7144 ;;		_trunc
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text34
  7149  0026CE                     __ptext34:
  7150                           	callstack 0
  7151  0026CE                     ___xxtofl:
  7152                           	callstack 24
  7153                           
  7154                           ;incstack = 0
  7155                           ;___xxtofl@sign stored from wreg
  7156  0026CE  6E3C               	movwf	___xxtofl@sign^0,c
  7157  0026D0  503C               	movf	___xxtofl@sign^0,w,c
  7158  0026D2  B4D8               	btfsc	status,2,c
  7159  0026D4  EF6E  F013         	goto	u2951
  7160  0026D8  EF70  F013         	goto	u2950
  7161  0026DC                     u2951:
  7162  0026DC  EF92  F013         	goto	l1809
  7163  0026E0                     u2950:
  7164  0026E0  BE37               	btfsc	(___xxtofl@val+3)^0,7,c
  7165  0026E2  EF77  F013         	goto	u2960
  7166  0026E6  EF75  F013         	goto	u2961
  7167  0026EA                     u2961:
  7168  0026EA  EF92  F013         	goto	l1809
  7169  0026EE                     u2960:
  7170  0026EE  C034  F038         	movff	___xxtofl@val,??___xxtofl
  7171  0026F2  C035  F039         	movff	___xxtofl@val+1,??___xxtofl+1
  7172  0026F6  C036  F03A         	movff	___xxtofl@val+2,??___xxtofl+2
  7173  0026FA  C037  F03B         	movff	___xxtofl@val+3,??___xxtofl+3
  7174  0026FE  1E38               	comf	??___xxtofl^0,f,c
  7175  002700  1E39               	comf	(??___xxtofl+1)^0,f,c
  7176  002702  1E3A               	comf	(??___xxtofl+2)^0,f,c
  7177  002704  1E3B               	comf	(??___xxtofl+3)^0,f,c
  7178  002706  2A38               	incf	??___xxtofl^0,f,c
  7179  002708  0E00               	movlw	0
  7180  00270A  2239               	addwfc	(??___xxtofl+1)^0,f,c
  7181  00270C  223A               	addwfc	(??___xxtofl+2)^0,f,c
  7182  00270E  223B               	addwfc	(??___xxtofl+3)^0,f,c
  7183  002710  C038  F03E         	movff	??___xxtofl,___xxtofl@arg
  7184  002714  C039  F03F         	movff	??___xxtofl+1,___xxtofl@arg+1
  7185  002718  C03A  F040         	movff	??___xxtofl+2,___xxtofl@arg+2
  7186  00271C  C03B  F041         	movff	??___xxtofl+3,___xxtofl@arg+3
  7187  002720  EF9A  F013         	goto	l4043
  7188  002724                     l1809:
  7189  002724  C034  F03E         	movff	___xxtofl@val,___xxtofl@arg
  7190  002728  C035  F03F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7191  00272C  C036  F040         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7192  002730  C037  F041         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7193  002734                     l4043:
  7194  002734  5034               	movf	___xxtofl@val^0,w,c
  7195  002736  1035               	iorwf	(___xxtofl@val+1)^0,w,c
  7196  002738  1036               	iorwf	(___xxtofl@val+2)^0,w,c
  7197  00273A  1037               	iorwf	(___xxtofl@val+3)^0,w,c
  7198  00273C  A4D8               	btfss	status,2,c
  7199  00273E  EFA3  F013         	goto	u2971
  7200  002742  EFA5  F013         	goto	u2970
  7201  002746                     u2971:
  7202  002746  EFAF  F013         	goto	l4049
  7203  00274A                     u2970:
  7204  00274A  0E00               	movlw	0
  7205  00274C  6E34               	movwf	?___xxtofl^0,c
  7206  00274E  0E00               	movlw	0
  7207  002750  6E35               	movwf	(?___xxtofl+1)^0,c
  7208  002752  0E00               	movlw	0
  7209  002754  6E36               	movwf	(?___xxtofl+2)^0,c
  7210  002756  0E00               	movlw	0
  7211  002758  6E37               	movwf	(?___xxtofl+3)^0,c
  7212  00275A  EF40  F014         	goto	l1812
  7213  00275E                     l4049:
  7214  00275E  0E96               	movlw	150
  7215  002760  6E3D               	movwf	___xxtofl@exp^0,c
  7216  002762  EFB9  F013         	goto	l4053
  7217  002766                     l4051:
  7218  002766  2A3D               	incf	___xxtofl@exp^0,f,c
  7219  002768  90D8               	bcf	status,0,c
  7220  00276A  3241               	rrcf	(___xxtofl@arg+3)^0,f,c
  7221  00276C  3240               	rrcf	(___xxtofl@arg+2)^0,f,c
  7222  00276E  323F               	rrcf	(___xxtofl@arg+1)^0,f,c
  7223  002770  323E               	rrcf	___xxtofl@arg^0,f,c
  7224  002772                     l4053:
  7225  002772  0E00               	movlw	0
  7226  002774  143E               	andwf	___xxtofl@arg^0,w,c
  7227  002776  6E38               	movwf	??___xxtofl^0,c
  7228  002778  0E00               	movlw	0
  7229  00277A  143F               	andwf	(___xxtofl@arg+1)^0,w,c
  7230  00277C  6E39               	movwf	(??___xxtofl+1)^0,c
  7231  00277E  0E00               	movlw	0
  7232  002780  1440               	andwf	(___xxtofl@arg+2)^0,w,c
  7233  002782  6E3A               	movwf	(??___xxtofl+2)^0,c
  7234  002784  0EFE               	movlw	254
  7235  002786  1441               	andwf	(___xxtofl@arg+3)^0,w,c
  7236  002788  6E3B               	movwf	(??___xxtofl+3)^0,c
  7237  00278A  5038               	movf	??___xxtofl^0,w,c
  7238  00278C  1039               	iorwf	(??___xxtofl+1)^0,w,c
  7239  00278E  103A               	iorwf	(??___xxtofl+2)^0,w,c
  7240  002790  103B               	iorwf	(??___xxtofl+3)^0,w,c
  7241  002792  A4D8               	btfss	status,2,c
  7242  002794  EFCE  F013         	goto	u2981
  7243  002798  EFD0  F013         	goto	u2980
  7244  00279C                     u2981:
  7245  00279C  EFB3  F013         	goto	l4051
  7246  0027A0                     u2980:
  7247  0027A0  EFDE  F013         	goto	l1816
  7248  0027A4                     l4055:
  7249  0027A4  2A3D               	incf	___xxtofl@exp^0,f,c
  7250  0027A6  0E01               	movlw	1
  7251  0027A8  263E               	addwf	___xxtofl@arg^0,f,c
  7252  0027AA  0E00               	movlw	0
  7253  0027AC  223F               	addwfc	(___xxtofl@arg+1)^0,f,c
  7254  0027AE  2240               	addwfc	(___xxtofl@arg+2)^0,f,c
  7255  0027B0  2241               	addwfc	(___xxtofl@arg+3)^0,f,c
  7256  0027B2  90D8               	bcf	status,0,c
  7257  0027B4  3241               	rrcf	(___xxtofl@arg+3)^0,f,c
  7258  0027B6  3240               	rrcf	(___xxtofl@arg+2)^0,f,c
  7259  0027B8  323F               	rrcf	(___xxtofl@arg+1)^0,f,c
  7260  0027BA  323E               	rrcf	___xxtofl@arg^0,f,c
  7261  0027BC                     l1816:
  7262  0027BC  0E00               	movlw	0
  7263  0027BE  143E               	andwf	___xxtofl@arg^0,w,c
  7264  0027C0  6E38               	movwf	??___xxtofl^0,c
  7265  0027C2  0E00               	movlw	0
  7266  0027C4  143F               	andwf	(___xxtofl@arg+1)^0,w,c
  7267  0027C6  6E39               	movwf	(??___xxtofl+1)^0,c
  7268  0027C8  0E00               	movlw	0
  7269  0027CA  1440               	andwf	(___xxtofl@arg+2)^0,w,c
  7270  0027CC  6E3A               	movwf	(??___xxtofl+2)^0,c
  7271  0027CE  0EFF               	movlw	255
  7272  0027D0  1441               	andwf	(___xxtofl@arg+3)^0,w,c
  7273  0027D2  6E3B               	movwf	(??___xxtofl+3)^0,c
  7274  0027D4  5038               	movf	??___xxtofl^0,w,c
  7275  0027D6  1039               	iorwf	(??___xxtofl+1)^0,w,c
  7276  0027D8  103A               	iorwf	(??___xxtofl+2)^0,w,c
  7277  0027DA  103B               	iorwf	(??___xxtofl+3)^0,w,c
  7278  0027DC  A4D8               	btfss	status,2,c
  7279  0027DE  EFF3  F013         	goto	u2991
  7280  0027E2  EFF5  F013         	goto	u2990
  7281  0027E6                     u2991:
  7282  0027E6  EFD2  F013         	goto	l4055
  7283  0027EA                     u2990:
  7284  0027EA  EFFD  F013         	goto	l4063
  7285  0027EE                     l4061:
  7286  0027EE  063D               	decf	___xxtofl@exp^0,f,c
  7287  0027F0  90D8               	bcf	status,0,c
  7288  0027F2  363E               	rlcf	___xxtofl@arg^0,f,c
  7289  0027F4  363F               	rlcf	(___xxtofl@arg+1)^0,f,c
  7290  0027F6  3640               	rlcf	(___xxtofl@arg+2)^0,f,c
  7291  0027F8  3641               	rlcf	(___xxtofl@arg+3)^0,f,c
  7292  0027FA                     l4063:
  7293  0027FA  BE40               	btfsc	(___xxtofl@arg+2)^0,7,c
  7294  0027FC  EF02  F014         	goto	u3001
  7295  002800  EF04  F014         	goto	u3000
  7296  002804                     u3001:
  7297  002804  EF0C  F014         	goto	l1823
  7298  002808                     u3000:
  7299  002808  0E02               	movlw	2
  7300  00280A  603D               	cpfslt	___xxtofl@exp^0,c
  7301  00280C  EF0A  F014         	goto	u3011
  7302  002810  EF0C  F014         	goto	u3010
  7303  002814                     u3011:
  7304  002814  EFF7  F013         	goto	l4061
  7305  002818                     u3010:
  7306  002818                     l1823:
  7307  002818  B03D               	btfsc	___xxtofl@exp^0,0,c
  7308  00281A  EF11  F014         	goto	u3021
  7309  00281E  EF13  F014         	goto	u3020
  7310  002822                     u3021:
  7311  002822  EF14  F014         	goto	l4069
  7312  002826                     u3020:
  7313  002826  9E40               	bcf	(___xxtofl@arg+2)^0,7,c
  7314  002828                     l4069:
  7315  002828  90D8               	bcf	status,0,c
  7316  00282A  323D               	rrcf	___xxtofl@exp^0,f,c
  7317  00282C  C03D  F038         	movff	___xxtofl@exp,??___xxtofl
  7318  002830  6A39               	clrf	(??___xxtofl+1)^0,c
  7319  002832  6A3A               	clrf	(??___xxtofl+2)^0,c
  7320  002834  6A3B               	clrf	(??___xxtofl+3)^0,c
  7321  002836  C038  F03B         	movff	??___xxtofl,??___xxtofl+3
  7322  00283A  6A3A               	clrf	(??___xxtofl+2)^0,c
  7323  00283C  6A39               	clrf	(??___xxtofl+1)^0,c
  7324  00283E  6A38               	clrf	??___xxtofl^0,c
  7325  002840  5038               	movf	??___xxtofl^0,w,c
  7326  002842  123E               	iorwf	___xxtofl@arg^0,f,c
  7327  002844  5039               	movf	(??___xxtofl+1)^0,w,c
  7328  002846  123F               	iorwf	(___xxtofl@arg+1)^0,f,c
  7329  002848  503A               	movf	(??___xxtofl+2)^0,w,c
  7330  00284A  1240               	iorwf	(___xxtofl@arg+2)^0,f,c
  7331  00284C  503B               	movf	(??___xxtofl+3)^0,w,c
  7332  00284E  1241               	iorwf	(___xxtofl@arg+3)^0,f,c
  7333  002850  503C               	movf	___xxtofl@sign^0,w,c
  7334  002852  B4D8               	btfsc	status,2,c
  7335  002854  EF2E  F014         	goto	u3031
  7336  002858  EF30  F014         	goto	u3030
  7337  00285C                     u3031:
  7338  00285C  EF38  F014         	goto	l4079
  7339  002860                     u3030:
  7340  002860  BE37               	btfsc	(___xxtofl@val+3)^0,7,c
  7341  002862  EF37  F014         	goto	u3040
  7342  002866  EF35  F014         	goto	u3041
  7343  00286A                     u3041:
  7344  00286A  EF38  F014         	goto	l4079
  7345  00286E                     u3040:
  7346  00286E  8E41               	bsf	(___xxtofl@arg+3)^0,7,c
  7347  002870                     l4079:
  7348  002870  C03E  F034         	movff	___xxtofl@arg,?___xxtofl
  7349  002874  C03F  F035         	movff	___xxtofl@arg+1,?___xxtofl+1
  7350  002878  C040  F036         	movff	___xxtofl@arg+2,?___xxtofl+2
  7351  00287C  C041  F037         	movff	___xxtofl@arg+3,?___xxtofl+3
  7352  002880                     l1812:
  7353  002880  0012               	return		;funcret
  7354  002882                     __end_of___xxtofl:
  7355                           	callstack 0
  7356                           
  7357 ;; *************** function ___fldiv *****************
  7358 ;; Defined at:
  7359 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c"
  7360 ;; Parameters:    Size  Location     Type
  7361 ;;  b               4    0[COMRAM] unsigned char 
  7362 ;;  a               4    4[COMRAM] unsigned char 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;  grs             4   19[COMRAM] unsigned long 
  7365 ;;  rem             4   12[COMRAM] unsigned long 
  7366 ;;  new_exp         2   17[COMRAM] int 
  7367 ;;  aexp            1   24[COMRAM] unsigned char 
  7368 ;;  bexp            1   23[COMRAM] unsigned char 
  7369 ;;  sign            1   16[COMRAM] unsigned char 
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  4    0[COMRAM] unsigned char 
  7372 ;; Registers used:
  7373 ;;		wreg, status,2, status,0
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7379 ;;      Params:         8       0       0       0       0       0       0       0       0
  7380 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7381 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7382 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7383 ;;Total ram usage:       25 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; Hardware stack levels required when called:    3
  7386 ;; This function calls:
  7387 ;;		Nothing
  7388 ;; This function is called by:
  7389 ;;		_ComputeTemp
  7390 ;;		_ComputeWaterVol
  7391 ;;		_exp
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           	psect	text35
  7396  001536                     __ptext35:
  7397                           	callstack 0
  7398  001536                     ___fldiv:
  7399                           	callstack 24
  7400  001536  5004               	movf	(___fldiv@b+3)^0,w,c
  7401  001538  0B80               	andlw	128
  7402  00153A  6E11               	movwf	___fldiv@sign^0,c
  7403  00153C  5004               	movf	(___fldiv@b+3)^0,w,c
  7404  00153E  2404               	addwf	(___fldiv@b+3)^0,w,c
  7405  001540  6E18               	movwf	___fldiv@bexp^0,c
  7406  001542  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7407  001544  EFA6  F00A         	goto	u3151
  7408  001548  EFA8  F00A         	goto	u3150
  7409  00154C                     u3151:
  7410  00154C  EFA9  F00A         	goto	l4149
  7411  001550                     u3150:
  7412  001550  8018               	bsf	___fldiv@bexp^0,0,c
  7413  001552                     l4149:
  7414  001552  5018               	movf	___fldiv@bexp^0,w,c
  7415  001554  B4D8               	btfsc	status,2,c
  7416  001556  EFAF  F00A         	goto	u3161
  7417  00155A  EFB1  F00A         	goto	u3160
  7418  00155E                     u3161:
  7419  00155E  EFC6  F00A         	goto	l4159
  7420  001562                     u3160:
  7421  001562  2818               	incf	___fldiv@bexp^0,w,c
  7422  001564  A4D8               	btfss	status,2,c
  7423  001566  EFB7  F00A         	goto	u3171
  7424  00156A  EFB9  F00A         	goto	u3170
  7425  00156E                     u3171:
  7426  00156E  EFC1  F00A         	goto	l4155
  7427  001572                     u3170:
  7428  001572  0E00               	movlw	0
  7429  001574  6E01               	movwf	___fldiv@b^0,c
  7430  001576  0E00               	movlw	0
  7431  001578  6E02               	movwf	(___fldiv@b+1)^0,c
  7432  00157A  0E00               	movlw	0
  7433  00157C  6E03               	movwf	(___fldiv@b+2)^0,c
  7434  00157E  0E00               	movlw	0
  7435  001580  6E04               	movwf	(___fldiv@b+3)^0,c
  7436  001582                     l4155:
  7437  001582  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7438  001584  0E00               	movlw	0
  7439  001586  6E04               	movwf	(___fldiv@b+3)^0,c
  7440  001588  EFCE  F00A         	goto	l4161
  7441  00158C                     l4159:
  7442  00158C  0E00               	movlw	0
  7443  00158E  6E01               	movwf	___fldiv@b^0,c
  7444  001590  0E00               	movlw	0
  7445  001592  6E02               	movwf	(___fldiv@b+1)^0,c
  7446  001594  0E00               	movlw	0
  7447  001596  6E03               	movwf	(___fldiv@b+2)^0,c
  7448  001598  0E00               	movlw	0
  7449  00159A  6E04               	movwf	(___fldiv@b+3)^0,c
  7450  00159C                     l4161:
  7451  00159C  5008               	movf	(___fldiv@a+3)^0,w,c
  7452  00159E  0B80               	andlw	128
  7453  0015A0  1A11               	xorwf	___fldiv@sign^0,f,c
  7454  0015A2  5008               	movf	(___fldiv@a+3)^0,w,c
  7455  0015A4  2408               	addwf	(___fldiv@a+3)^0,w,c
  7456  0015A6  6E19               	movwf	___fldiv@aexp^0,c
  7457  0015A8  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7458  0015AA  EFD9  F00A         	goto	u3181
  7459  0015AE  EFDB  F00A         	goto	u3180
  7460  0015B2                     u3181:
  7461  0015B2  EFDC  F00A         	goto	l4169
  7462  0015B6                     u3180:
  7463  0015B6  8019               	bsf	___fldiv@aexp^0,0,c
  7464  0015B8                     l4169:
  7465  0015B8  5019               	movf	___fldiv@aexp^0,w,c
  7466  0015BA  B4D8               	btfsc	status,2,c
  7467  0015BC  EFE2  F00A         	goto	u3191
  7468  0015C0  EFE4  F00A         	goto	u3190
  7469  0015C4                     u3191:
  7470  0015C4  EFF9  F00A         	goto	l4179
  7471  0015C8                     u3190:
  7472  0015C8  2819               	incf	___fldiv@aexp^0,w,c
  7473  0015CA  A4D8               	btfss	status,2,c
  7474  0015CC  EFEA  F00A         	goto	u3201
  7475  0015D0  EFEC  F00A         	goto	u3200
  7476  0015D4                     u3201:
  7477  0015D4  EFF4  F00A         	goto	l4175
  7478  0015D8                     u3200:
  7479  0015D8  0E00               	movlw	0
  7480  0015DA  6E05               	movwf	___fldiv@a^0,c
  7481  0015DC  0E00               	movlw	0
  7482  0015DE  6E06               	movwf	(___fldiv@a+1)^0,c
  7483  0015E0  0E00               	movlw	0
  7484  0015E2  6E07               	movwf	(___fldiv@a+2)^0,c
  7485  0015E4  0E00               	movlw	0
  7486  0015E6  6E08               	movwf	(___fldiv@a+3)^0,c
  7487  0015E8                     l4175:
  7488  0015E8  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7489  0015EA  0E00               	movlw	0
  7490  0015EC  6E08               	movwf	(___fldiv@a+3)^0,c
  7491  0015EE  EF01  F00B         	goto	l4181
  7492  0015F2                     l4179:
  7493  0015F2  0E00               	movlw	0
  7494  0015F4  6E05               	movwf	___fldiv@a^0,c
  7495  0015F6  0E00               	movlw	0
  7496  0015F8  6E06               	movwf	(___fldiv@a+1)^0,c
  7497  0015FA  0E00               	movlw	0
  7498  0015FC  6E07               	movwf	(___fldiv@a+2)^0,c
  7499  0015FE  0E00               	movlw	0
  7500  001600  6E08               	movwf	(___fldiv@a+3)^0,c
  7501  001602                     l4181:
  7502  001602  5005               	movf	___fldiv@a^0,w,c
  7503  001604  1006               	iorwf	(___fldiv@a+1)^0,w,c
  7504  001606  1007               	iorwf	(___fldiv@a+2)^0,w,c
  7505  001608  1008               	iorwf	(___fldiv@a+3)^0,w,c
  7506  00160A  A4D8               	btfss	status,2,c
  7507  00160C  EF0A  F00B         	goto	u3211
  7508  001610  EF0C  F00B         	goto	u3210
  7509  001614                     u3211:
  7510  001614  EF24  F00B         	goto	l4193
  7511  001618                     u3210:
  7512  001618  0E00               	movlw	0
  7513  00161A  6E01               	movwf	___fldiv@b^0,c
  7514  00161C  0E00               	movlw	0
  7515  00161E  6E02               	movwf	(___fldiv@b+1)^0,c
  7516  001620  0E00               	movlw	0
  7517  001622  6E03               	movwf	(___fldiv@b+2)^0,c
  7518  001624  0E00               	movlw	0
  7519  001626  6E04               	movwf	(___fldiv@b+3)^0,c
  7520  001628  0E80               	movlw	128
  7521  00162A  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7522  00162C  0E7F               	movlw	127
  7523  00162E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7524  001630                     l4187:
  7525  001630  5011               	movf	___fldiv@sign^0,w,c
  7526  001632  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7527  001634  C001  F001         	movff	___fldiv@b,?___fldiv
  7528  001638  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7529  00163C  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7530  001640  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7531  001644  EF67  F00C         	goto	l1716
  7532  001648                     l4193:
  7533  001648  5018               	movf	___fldiv@bexp^0,w,c
  7534  00164A  A4D8               	btfss	status,2,c
  7535  00164C  EF2A  F00B         	goto	u3221
  7536  001650  EF2C  F00B         	goto	u3220
  7537  001654                     u3221:
  7538  001654  EF36  F00B         	goto	l4201
  7539  001658                     u3220:
  7540  001658  0E00               	movlw	0
  7541  00165A  6E01               	movwf	?___fldiv^0,c
  7542  00165C  0E00               	movlw	0
  7543  00165E  6E02               	movwf	(?___fldiv+1)^0,c
  7544  001660  0E00               	movlw	0
  7545  001662  6E03               	movwf	(?___fldiv+2)^0,c
  7546  001664  0E00               	movlw	0
  7547  001666  6E04               	movwf	(?___fldiv+3)^0,c
  7548  001668  EF67  F00C         	goto	l1716
  7549  00166C                     l4201:
  7550  00166C  5019               	movf	___fldiv@aexp^0,w,c
  7551  00166E  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7552  001672  6A0A               	clrf	(??___fldiv+1)^0,c
  7553  001674  5E09               	subwf	??___fldiv^0,f,c
  7554  001676  0E00               	movlw	0
  7555  001678  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7556  00167A  0E7F               	movlw	127
  7557  00167C  2409               	addwf	??___fldiv^0,w,c
  7558  00167E  6E12               	movwf	___fldiv@new_exp^0,c
  7559  001680  0E00               	movlw	0
  7560  001682  200A               	addwfc	(??___fldiv+1)^0,w,c
  7561  001684  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7562  001686  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7563  00168A  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7564  00168E  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7565  001692  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7566  001696  0E00               	movlw	0
  7567  001698  6E01               	movwf	___fldiv@b^0,c
  7568  00169A  0E00               	movlw	0
  7569  00169C  6E02               	movwf	(___fldiv@b+1)^0,c
  7570  00169E  0E00               	movlw	0
  7571  0016A0  6E03               	movwf	(___fldiv@b+2)^0,c
  7572  0016A2  0E00               	movlw	0
  7573  0016A4  6E04               	movwf	(___fldiv@b+3)^0,c
  7574  0016A6  0E00               	movlw	0
  7575  0016A8  6E14               	movwf	___fldiv@grs^0,c
  7576  0016AA  0E00               	movlw	0
  7577  0016AC  6E15               	movwf	(___fldiv@grs+1)^0,c
  7578  0016AE  0E00               	movlw	0
  7579  0016B0  6E16               	movwf	(___fldiv@grs+2)^0,c
  7580  0016B2  0E00               	movlw	0
  7581  0016B4  6E17               	movwf	(___fldiv@grs+3)^0,c
  7582  0016B6  0E00               	movlw	0
  7583  0016B8  6E19               	movwf	___fldiv@aexp^0,c
  7584  0016BA  EF97  F00B         	goto	l1718
  7585  0016BE                     l4211:
  7586  0016BE  5019               	movf	___fldiv@aexp^0,w,c
  7587  0016C0  B4D8               	btfsc	status,2,c
  7588  0016C2  EF65  F00B         	goto	u3231
  7589  0016C6  EF67  F00B         	goto	u3230
  7590  0016CA                     u3231:
  7591  0016CA  EF7E  F00B         	goto	l4219
  7592  0016CE                     u3230:
  7593  0016CE  90D8               	bcf	status,0,c
  7594  0016D0  360D               	rlcf	___fldiv@rem^0,f,c
  7595  0016D2  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  7596  0016D4  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  7597  0016D6  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  7598  0016D8  90D8               	bcf	status,0,c
  7599  0016DA  3601               	rlcf	___fldiv@b^0,f,c
  7600  0016DC  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7601  0016DE  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7602  0016E0  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7603  0016E2  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7604  0016E4  EF76  F00B         	goto	u3241
  7605  0016E8  EF78  F00B         	goto	u3240
  7606  0016EC                     u3241:
  7607  0016EC  EF79  F00B         	goto	l1721
  7608  0016F0                     u3240:
  7609  0016F0  8001               	bsf	___fldiv@b^0,0,c
  7610  0016F2                     l1721:
  7611  0016F2  90D8               	bcf	status,0,c
  7612  0016F4  3614               	rlcf	___fldiv@grs^0,f,c
  7613  0016F6  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7614  0016F8  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7615  0016FA  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7616  0016FC                     l4219:
  7617  0016FC  5005               	movf	___fldiv@a^0,w,c
  7618  0016FE  5C0D               	subwf	___fldiv@rem^0,w,c
  7619  001700  5006               	movf	(___fldiv@a+1)^0,w,c
  7620  001702  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  7621  001704  5007               	movf	(___fldiv@a+2)^0,w,c
  7622  001706  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  7623  001708  5008               	movf	(___fldiv@a+3)^0,w,c
  7624  00170A  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  7625  00170C  A0D8               	btfss	status,0,c
  7626  00170E  EF8B  F00B         	goto	u3251
  7627  001712  EF8D  F00B         	goto	u3250
  7628  001716                     u3251:
  7629  001716  EF96  F00B         	goto	l4225
  7630  00171A                     u3250:
  7631  00171A  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  7632  00171C  5005               	movf	___fldiv@a^0,w,c
  7633  00171E  5E0D               	subwf	___fldiv@rem^0,f,c
  7634  001720  5006               	movf	(___fldiv@a+1)^0,w,c
  7635  001722  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  7636  001724  5007               	movf	(___fldiv@a+2)^0,w,c
  7637  001726  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  7638  001728  5008               	movf	(___fldiv@a+3)^0,w,c
  7639  00172A  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  7640  00172C                     l4225:
  7641  00172C  2A19               	incf	___fldiv@aexp^0,f,c
  7642  00172E                     l1718:
  7643  00172E  0E19               	movlw	25
  7644  001730  6419               	cpfsgt	___fldiv@aexp^0,c
  7645  001732  EF9D  F00B         	goto	u3261
  7646  001736  EF9F  F00B         	goto	u3260
  7647  00173A                     u3261:
  7648  00173A  EF5F  F00B         	goto	l4211
  7649  00173E                     u3260:
  7650  00173E  500D               	movf	___fldiv@rem^0,w,c
  7651  001740  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  7652  001742  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  7653  001744  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  7654  001746  B4D8               	btfsc	status,2,c
  7655  001748  EFA8  F00B         	goto	u3271
  7656  00174C  EFAA  F00B         	goto	u3270
  7657  001750                     u3271:
  7658  001750  EFC2  F00B         	goto	l4237
  7659  001754                     u3270:
  7660  001754  8014               	bsf	___fldiv@grs^0,0,c
  7661  001756  EFC2  F00B         	goto	l4237
  7662  00175A                     l4231:
  7663  00175A  90D8               	bcf	status,0,c
  7664  00175C  3601               	rlcf	___fldiv@b^0,f,c
  7665  00175E  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7666  001760  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7667  001762  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7668  001764  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7669  001766  EFB7  F00B         	goto	u3281
  7670  00176A  EFB9  F00B         	goto	u3280
  7671  00176E                     u3281:
  7672  00176E  EFBA  F00B         	goto	l1727
  7673  001772                     u3280:
  7674  001772  8001               	bsf	___fldiv@b^0,0,c
  7675  001774                     l1727:
  7676  001774  90D8               	bcf	status,0,c
  7677  001776  3614               	rlcf	___fldiv@grs^0,f,c
  7678  001778  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7679  00177A  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7680  00177C  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7681  00177E  0612               	decf	___fldiv@new_exp^0,f,c
  7682  001780  A0D8               	btfss	status,0,c
  7683  001782  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7684  001784                     l4237:
  7685  001784  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7686  001786  EFC7  F00B         	goto	u3291
  7687  00178A  EFC9  F00B         	goto	u3290
  7688  00178E                     u3291:
  7689  00178E  EFAD  F00B         	goto	l4231
  7690  001792                     u3290:
  7691  001792  0E00               	movlw	0
  7692  001794  6E19               	movwf	___fldiv@aexp^0,c
  7693  001796  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7694  001798  EFD0  F00B         	goto	u3301
  7695  00179C  EFD2  F00B         	goto	u3300
  7696  0017A0                     u3301:
  7697  0017A0  EFF6  F00B         	goto	l1729
  7698  0017A4                     u3300:
  7699  0017A4  0EFF               	movlw	255
  7700  0017A6  1414               	andwf	___fldiv@grs^0,w,c
  7701  0017A8  6E09               	movwf	??___fldiv^0,c
  7702  0017AA  0EFF               	movlw	255
  7703  0017AC  1415               	andwf	(___fldiv@grs+1)^0,w,c
  7704  0017AE  6E0A               	movwf	(??___fldiv+1)^0,c
  7705  0017B0  0EFF               	movlw	255
  7706  0017B2  1416               	andwf	(___fldiv@grs+2)^0,w,c
  7707  0017B4  6E0B               	movwf	(??___fldiv+2)^0,c
  7708  0017B6  0E7F               	movlw	127
  7709  0017B8  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7710  0017BA  6E0C               	movwf	(??___fldiv+3)^0,c
  7711  0017BC  5009               	movf	??___fldiv^0,w,c
  7712  0017BE  100A               	iorwf	(??___fldiv+1)^0,w,c
  7713  0017C0  100B               	iorwf	(??___fldiv+2)^0,w,c
  7714  0017C2  100C               	iorwf	(??___fldiv+3)^0,w,c
  7715  0017C4  B4D8               	btfsc	status,2,c
  7716  0017C6  EFE7  F00B         	goto	u3311
  7717  0017CA  EFE9  F00B         	goto	u3310
  7718  0017CE                     u3311:
  7719  0017CE  EFED  F00B         	goto	l1730
  7720  0017D2                     u3310:
  7721  0017D2                     l4245:
  7722  0017D2  0E01               	movlw	1
  7723  0017D4  6E19               	movwf	___fldiv@aexp^0,c
  7724  0017D6  EFF6  F00B         	goto	l1729
  7725  0017DA                     l1730:
  7726  0017DA  A001               	btfss	___fldiv@b^0,0,c
  7727  0017DC  EFF2  F00B         	goto	u3321
  7728  0017E0  EFF4  F00B         	goto	u3320
  7729  0017E4                     u3321:
  7730  0017E4  EFF6  F00B         	goto	l1729
  7731  0017E8                     u3320:
  7732  0017E8  EFE9  F00B         	goto	l4245
  7733  0017EC                     l1729:
  7734  0017EC  5019               	movf	___fldiv@aexp^0,w,c
  7735  0017EE  B4D8               	btfsc	status,2,c
  7736  0017F0  EFFC  F00B         	goto	u3331
  7737  0017F4  EFFE  F00B         	goto	u3330
  7738  0017F8                     u3331:
  7739  0017F8  EF22  F00C         	goto	l4257
  7740  0017FC                     u3330:
  7741  0017FC  0E01               	movlw	1
  7742  0017FE  2601               	addwf	___fldiv@b^0,f,c
  7743  001800  0E00               	movlw	0
  7744  001802  2202               	addwfc	(___fldiv@b+1)^0,f,c
  7745  001804  2203               	addwfc	(___fldiv@b+2)^0,f,c
  7746  001806  2204               	addwfc	(___fldiv@b+3)^0,f,c
  7747  001808  A004               	btfss	(___fldiv@b+3)^0,0,c
  7748  00180A  EF09  F00C         	goto	u3341
  7749  00180E  EF0B  F00C         	goto	u3340
  7750  001812                     u3341:
  7751  001812  EF22  F00C         	goto	l4257
  7752  001816                     u3340:
  7753  001816  C001  F009         	movff	___fldiv@b,??___fldiv
  7754  00181A  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7755  00181E  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7756  001822  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7757  001826  340C               	rlcf	(??___fldiv+3)^0,w,c
  7758  001828  320C               	rrcf	(??___fldiv+3)^0,f,c
  7759  00182A  320B               	rrcf	(??___fldiv+2)^0,f,c
  7760  00182C  320A               	rrcf	(??___fldiv+1)^0,f,c
  7761  00182E  3209               	rrcf	??___fldiv^0,f,c
  7762  001830  C009  F001         	movff	??___fldiv,___fldiv@b
  7763  001834  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7764  001838  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7765  00183C  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7766  001840  4A12               	infsnz	___fldiv@new_exp^0,f,c
  7767  001842  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  7768  001844                     l4257:
  7769  001844  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7770  001846  EF2D  F00C         	goto	u3351
  7771  00184A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7772  00184C  E108               	bnz	u3350
  7773  00184E  2812               	incf	___fldiv@new_exp^0,w,c
  7774  001850  A0D8               	btfss	status,0,c
  7775  001852  EF2D  F00C         	goto	u3351
  7776  001856  EF2F  F00C         	goto	u3350
  7777  00185A                     u3351:
  7778  00185A  EF3A  F00C         	goto	l4261
  7779  00185E                     u3350:
  7780  00185E  0E00               	movlw	0
  7781  001860  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7782  001862  6812               	setf	___fldiv@new_exp^0,c
  7783  001864  0E00               	movlw	0
  7784  001866  6E01               	movwf	___fldiv@b^0,c
  7785  001868  0E00               	movlw	0
  7786  00186A  6E02               	movwf	(___fldiv@b+1)^0,c
  7787  00186C  0E00               	movlw	0
  7788  00186E  6E03               	movwf	(___fldiv@b+2)^0,c
  7789  001870  0E00               	movlw	0
  7790  001872  6E04               	movwf	(___fldiv@b+3)^0,c
  7791  001874                     l4261:
  7792  001874  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7793  001876  EF47  F00C         	goto	u3360
  7794  00187A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7795  00187C  E106               	bnz	u3361
  7796  00187E  0412               	decf	___fldiv@new_exp^0,w,c
  7797  001880  B0D8               	btfsc	status,0,c
  7798  001882  EF45  F00C         	goto	u3361
  7799  001886  EF47  F00C         	goto	u3360
  7800  00188A                     u3361:
  7801  00188A  EF55  F00C         	goto	l4265
  7802  00188E                     u3360:
  7803  00188E  0E00               	movlw	0
  7804  001890  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7805  001892  0E00               	movlw	0
  7806  001894  6E12               	movwf	___fldiv@new_exp^0,c
  7807  001896  0E00               	movlw	0
  7808  001898  6E01               	movwf	___fldiv@b^0,c
  7809  00189A  0E00               	movlw	0
  7810  00189C  6E02               	movwf	(___fldiv@b+1)^0,c
  7811  00189E  0E00               	movlw	0
  7812  0018A0  6E03               	movwf	(___fldiv@b+2)^0,c
  7813  0018A2  0E00               	movlw	0
  7814  0018A4  6E04               	movwf	(___fldiv@b+3)^0,c
  7815  0018A6  0E00               	movlw	0
  7816  0018A8  6E11               	movwf	___fldiv@sign^0,c
  7817  0018AA                     l4265:
  7818  0018AA  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7819  0018AE  A018               	btfss	___fldiv@bexp^0,0,c
  7820  0018B0  EF5C  F00C         	goto	u3371
  7821  0018B4  EF5E  F00C         	goto	u3370
  7822  0018B8                     u3371:
  7823  0018B8  EF61  F00C         	goto	l4271
  7824  0018BC                     u3370:
  7825  0018BC  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7826  0018BE  EF62  F00C         	goto	l4273
  7827  0018C2                     l4271:
  7828  0018C2  9E03               	bcf	(___fldiv@b+2)^0,7,c
  7829  0018C4                     l4273:
  7830  0018C4  90D8               	bcf	status,0,c
  7831  0018C6  3018               	rrcf	___fldiv@bexp^0,w,c
  7832  0018C8  6E04               	movwf	(___fldiv@b+3)^0,c
  7833  0018CA  EF18  F00B         	goto	l4187
  7834  0018CE                     l1716:
  7835  0018CE  0012               	return		;funcret
  7836  0018D0                     __end_of___fldiv:
  7837                           	callstack 0
  7838                           
  7839 ;; *************** function _ComputeTOD *****************
  7840 ;; Defined at:
  7841 ;;		line 101 in file "main.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;		None
  7844 ;; Auto vars:     Size  Location     Type
  7845 ;;  bIncDays        1   40[COMRAM] unsigned char 
  7846 ;; Return value:  Size  Location     Type
  7847 ;;                  1    wreg      void 
  7848 ;; Registers used:
  7849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7850 ;; Tracked objects:
  7851 ;;		On entry : 0/0
  7852 ;;		On exit  : 0/0
  7853 ;;		Unchanged: 0/0
  7854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7855 ;;      Params:         0       0       0       0       0       0       0       0       0
  7856 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7857 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7858 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7859 ;;Total ram usage:        2 bytes
  7860 ;; Hardware stack levels used:    1
  7861 ;; Hardware stack levels required when called:    5
  7862 ;; This function calls:
  7863 ;;		_LCD_GoTo
  7864 ;;		_sprintf
  7865 ;; This function is called by:
  7866 ;;		_main
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870                           	psect	text36
  7871  0031D2                     __ptext36:
  7872                           	callstack 0
  7873  0031D2                     _ComputeTOD:
  7874                           	callstack 25
  7875  0031D2                     
  7876                           ;main.c: 103: bool bIncDays = 0;
  7877  0031D2  0E00               	movlw	0
  7878  0031D4  6E29               	movwf	ComputeTOD@bIncDays^0,c
  7879  0031D6                     
  7880                           ;main.c: 105: if (++giTotalSecs >= 999) giTotalSecs = 0;
  7881  0031D6  0100               	movlb	0	; () banked
  7882  0031D8  4BD9               	infsnz	_giTotalSecs& (0+255),f,b
  7883  0031DA  2BDA               	incf	(_giTotalSecs+1)& (0+255),f,b
  7884  0031DC  0EE7               	movlw	231
  7885  0031DE  5DD9               	subwf	_giTotalSecs& (0+255),w,b
  7886  0031E0  0E03               	movlw	3
  7887  0031E2  59DA               	subwfb	(_giTotalSecs+1)& (0+255),w,b
  7888  0031E4  A0D8               	btfss	status,0,c
  7889  0031E6  EFF7  F018         	goto	u4131
  7890  0031EA  EFF9  F018         	goto	u4130
  7891  0031EE                     u4131:
  7892  0031EE  EFFD  F018         	goto	l5031
  7893  0031F2                     u4130:
  7894  0031F2                     
  7895                           ; BSR set to: 0
  7896  0031F2  0E00               	movlw	0
  7897  0031F4  6FDA               	movwf	(_giTotalSecs+1)& (0+255),b
  7898  0031F6  0E00               	movlw	0
  7899  0031F8  6FD9               	movwf	_giTotalSecs& (0+255),b
  7900  0031FA                     l5031:
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;main.c: 106: if (++giSecs >= 60)
  7904  0031FA  2BED               	incf	_giSecs& (0+255),f,b
  7905  0031FC  0E3B               	movlw	59
  7906  0031FE  65ED               	cpfsgt	_giSecs& (0+255),b
  7907  003200  EF04  F019         	goto	u4141
  7908  003204  EF06  F019         	goto	u4140
  7909  003208                     u4141:
  7910  003208  EF20  F019         	goto	l5043
  7911  00320C                     u4140:
  7912  00320C                     
  7913                           ; BSR set to: 0
  7914                           ;main.c: 107: {;main.c: 108: giSecs = 0;
  7915  00320C  0E00               	movlw	0
  7916  00320E  6FED               	movwf	_giSecs& (0+255),b
  7917  003210                     
  7918                           ; BSR set to: 0
  7919                           ;main.c: 109: if (++giMins >= 60)
  7920  003210  2BEC               	incf	_giMins& (0+255),f,b
  7921  003212  0E3B               	movlw	59
  7922  003214  65EC               	cpfsgt	_giMins& (0+255),b
  7923  003216  EF0F  F019         	goto	u4151
  7924  00321A  EF11  F019         	goto	u4150
  7925  00321E                     u4151:
  7926  00321E  EF20  F019         	goto	l5043
  7927  003222                     u4150:
  7928  003222                     
  7929                           ; BSR set to: 0
  7930                           ;main.c: 110: {;main.c: 111: giMins = 0;
  7931  003222  0E00               	movlw	0
  7932  003224  6FEC               	movwf	_giMins& (0+255),b
  7933  003226                     
  7934                           ; BSR set to: 0
  7935                           ;main.c: 112: if (++giHours >= 24){
  7936  003226  2BEB               	incf	_giHours& (0+255),f,b
  7937  003228  0E17               	movlw	23
  7938  00322A  65EB               	cpfsgt	_giHours& (0+255),b
  7939  00322C  EF1A  F019         	goto	u4161
  7940  003230  EF1C  F019         	goto	u4160
  7941  003234                     u4161:
  7942  003234  EF20  F019         	goto	l5043
  7943  003238                     u4160:
  7944  003238                     
  7945                           ; BSR set to: 0
  7946                           ;main.c: 113: giHours = 0;
  7947  003238  0E00               	movlw	0
  7948  00323A  6FEB               	movwf	_giHours& (0+255),b
  7949                           
  7950                           ;main.c: 114: bIncDays = 1;
  7951  00323C  0E01               	movlw	1
  7952  00323E  6E29               	movwf	ComputeTOD@bIncDays^0,c
  7953  003240                     l5043:
  7954                           
  7955                           ; BSR set to: 0
  7956                           ;main.c: 119: {;main.c: 120: sprintf(gsTotalSecs, "%3i", giTotalSecs);
  7957  003240  0EEE               	movlw	low _gsTotalSecs
  7958  003242  6E0D               	movwf	sprintf@sp^0,c
  7959  003244  0E01               	movlw	high _gsTotalSecs
  7960  003246  6E0E               	movwf	(sprintf@sp+1)^0,c
  7961  003248  0E85               	movlw	low STR_2
  7962  00324A  6E0F               	movwf	sprintf@f^0,c
  7963  00324C  0E08               	movlw	high STR_2
  7964  00324E  6E10               	movwf	(sprintf@f+1)^0,c
  7965  003250  C0D9  F011         	movff	_giTotalSecs,?_sprintf+4
  7966  003254  C0DA  F012         	movff	_giTotalSecs+1,?_sprintf+5
  7967  003258  ECBB  F008         	call	_sprintf	;wreg free
  7968  00325C                     
  7969                           ;main.c: 121: LCD_GoTo (1, 12);
  7970  00325C  0E0C               	movlw	12
  7971  00325E  6E07               	movwf	LCD_GoTo@iCharPos^0,c
  7972  003260  0E01               	movlw	1
  7973  003262  EC0D  F01D         	call	_LCD_GoTo
  7974  003266                     
  7975                           ;main.c: 123: };main.c: 126: if (bIncDays)
  7976  003266  5029               	movf	ComputeTOD@bIncDays^0,w,c
  7977  003268  B4D8               	btfsc	status,2,c
  7978  00326A  EF39  F019         	goto	u4171
  7979  00326E  EF3B  F019         	goto	u4170
  7980  003272                     u4171:
  7981  003272  EF5A  F019         	goto	l468
  7982  003276                     u4170:
  7983  003276                     
  7984                           ;main.c: 127: {;main.c: 128: if (++giDay > giMonthEndTbl[giMonth - 1])
  7985  003276  0100               	movlb	0	; () banked
  7986  003278  2BFF               	incf	_giDay& (0+255),f,b
  7987  00327A  0ECF               	movlw	low (_giMonthEndTbl+65535)
  7988  00327C  245E               	addwf	_giMonth^0,w,c
  7989  00327E  6ED9               	movwf	fsr2l,c
  7990  003280  6ADA               	clrf	fsr2h,c
  7991  003282  0E01               	movlw	high (_giMonthEndTbl+65535)
  7992  003284  22DA               	addwfc	fsr2h,f,c
  7993  003286  51FF               	movf	_giDay& (0+255),w,b
  7994  003288  5CDE               	subwf	postinc2,w,c
  7995  00328A  B0D8               	btfsc	status,0,c
  7996  00328C  EF4A  F019         	goto	u4181
  7997  003290  EF4C  F019         	goto	u4180
  7998  003294                     u4181:
  7999  003294  EF5A  F019         	goto	l468
  8000  003298                     u4180:
  8001  003298                     
  8002                           ; BSR set to: 0
  8003                           ;main.c: 129: {;main.c: 130: giDay = 1;
  8004  003298  0E01               	movlw	1
  8005  00329A  6FFF               	movwf	_giDay& (0+255),b
  8006  00329C                     
  8007                           ; BSR set to: 0
  8008                           ;main.c: 131: if (++giMonth > 12)
  8009  00329C  2A5E               	incf	_giMonth^0,f,c
  8010  00329E  0E0C               	movlw	12
  8011  0032A0  645E               	cpfsgt	_giMonth^0,c
  8012  0032A2  EF55  F019         	goto	u4191
  8013  0032A6  EF57  F019         	goto	u4190
  8014  0032AA                     u4191:
  8015  0032AA  EF5A  F019         	goto	l468
  8016  0032AE                     u4190:
  8017  0032AE                     
  8018                           ; BSR set to: 0
  8019                           ;main.c: 132: {;main.c: 133: giMonth = 1;
  8020  0032AE  0E01               	movlw	1
  8021  0032B0  6E5E               	movwf	_giMonth^0,c
  8022  0032B2                     
  8023                           ; BSR set to: 0
  8024                           ;main.c: 134: giYear ++;
  8025  0032B2  2BFE               	incf	_giYear& (0+255),f,b
  8026  0032B4                     l468:
  8027  0032B4  0012               	return		;funcret
  8028  0032B6                     __end_of_ComputeTOD:
  8029                           	callstack 0
  8030                           
  8031 ;; *************** function _sprintf *****************
  8032 ;; Defined at:
  8033 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  8034 ;; Parameters:    Size  Location     Type
  8035 ;;  sp              2   12[COMRAM] PTR unsigned char 
  8036 ;;		 -> sLine2(100), sLine1(100), gsTotalSecs(4), 
  8037 ;;  f               2   14[COMRAM] PTR const unsigned char 
  8038 ;;		 -> STR_4(17), STR_3(17), STR_2(4), 
  8039 ;; Auto vars:     Size  Location     Type
  8040 ;;  tmpval          4    0        struct .
  8041 ;;  width           2   36[COMRAM] int 
  8042 ;;  val             2   34[COMRAM] unsigned int 
  8043 ;;  len             2   31[COMRAM] unsigned int 
  8044 ;;  ap              2   29[COMRAM] PTR void [1]
  8045 ;;		 -> ?_sprintf(2), 
  8046 ;;  cp              2   26[COMRAM] PTR const unsigned char 
  8047 ;;		 -> sprintf@c(1), 
  8048 ;;  c               1   38[COMRAM] unsigned char 
  8049 ;;  flag            1   33[COMRAM] unsigned char 
  8050 ;;  prec            1   28[COMRAM] char 
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  2   12[COMRAM] int 
  8053 ;; Registers used:
  8054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8060 ;;      Params:        10       0       0       0       0       0       0       0       0
  8061 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8062 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8063 ;;      Totals:        27       0       0       0       0       0       0       0       0
  8064 ;;Total ram usage:       27 bytes
  8065 ;; Hardware stack levels used:    1
  8066 ;; Hardware stack levels required when called:    4
  8067 ;; This function calls:
  8068 ;;		___lwdiv
  8069 ;;		___lwmod
  8070 ;;		___wmul
  8071 ;;		_isdigit
  8072 ;; This function is called by:
  8073 ;;		_ComputeTOD
  8074 ;;		_LCD_DisplayResults
  8075 ;; This function uses a non-reentrant model
  8076 ;;
  8077                           
  8078                           	psect	text37
  8079  001176                     __ptext37:
  8080                           	callstack 0
  8081  001176                     _sprintf:
  8082                           	callstack 24
  8083  001176                     
  8084                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  8085  001176  0E11               	movlw	low (?_sprintf+4)
  8086  001178  6E1E               	movwf	sprintf@ap^0,c
  8087  00117A  0E00               	movlw	high (?_sprintf+4)
  8088  00117C  6E1F               	movwf	(sprintf@ap+1)^0,c
  8089                           
  8090                           ;doprnt.c: 553: while((c = *f++)) {
  8091  00117E  EF83  F00A         	goto	l4515
  8092  001182                     l4401:
  8093                           
  8094                           ;doprnt.c: 555: if(c != '%')
  8095  001182  0E25               	movlw	37
  8096  001184  1827               	xorwf	sprintf@c^0,w,c
  8097  001186  B4D8               	btfsc	status,2,c
  8098  001188  EFC8  F008         	goto	u3551
  8099  00118C  EFCA  F008         	goto	u3550
  8100  001190                     u3551:
  8101  001190  EFD4  F008         	goto	l4407
  8102  001194                     u3550:
  8103  001194                     
  8104                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  8105  001194  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8106  001198  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8107  00119C  C027  FFDF         	movff	sprintf@c,indf2
  8108  0011A0  4A0D               	infsnz	sprintf@sp^0,f,c
  8109  0011A2  2A0E               	incf	(sprintf@sp+1)^0,f,c
  8110                           
  8111                           ;doprnt.c: 559: continue;
  8112  0011A4  EF83  F00A         	goto	l4515
  8113  0011A8                     l4407:
  8114                           
  8115                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  8116  0011A8  0E00               	movlw	0
  8117  0011AA  6E26               	movwf	(sprintf@width+1)^0,c
  8118  0011AC  0E00               	movlw	0
  8119  0011AE  6E25               	movwf	sprintf@width^0,c
  8120                           
  8121                           ;doprnt.c: 565: flag = 0;
  8122  0011B0  0E00               	movlw	0
  8123  0011B2  6E22               	movwf	sprintf@flag^0,c
  8124  0011B4                     
  8125                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  8126  0011B4  C00F  FFF6         	movff	sprintf@f,tblptrl
  8127  0011B8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8128  0011BC                     	if	0	;tblptru may be non-zero
  8129  0011BC                     	endif
  8130  0011BC                     	if	0	;tblptru may be non-zero
  8131  0011BC                     	endif
  8132  0011BC  0008               	tblrd		*
  8133  0011BE  50F5               	movf	tablat,w,c
  8134  0011C0  ECCF  F01D         	call	_isdigit
  8135  0011C4  A0D8               	btfss	status,0,c
  8136  0011C6  EFE7  F008         	goto	u3561
  8137  0011CA  EFE9  F008         	goto	u3560
  8138  0011CE                     u3561:
  8139  0011CE  EF79  F009         	goto	l4449
  8140  0011D2                     u3560:
  8141  0011D2                     
  8142                           ;doprnt.c: 615: width = 0;
  8143  0011D2  0E00               	movlw	0
  8144  0011D4  6E26               	movwf	(sprintf@width+1)^0,c
  8145  0011D6  0E00               	movlw	0
  8146  0011D8  6E25               	movwf	sprintf@width^0,c
  8147  0011DA                     l4413:
  8148                           
  8149                           ;doprnt.c: 617: width *= 10;
  8150  0011DA  C025  F001         	movff	sprintf@width,___wmul@multiplier
  8151  0011DE  C026  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  8152  0011E2  0E00               	movlw	0
  8153  0011E4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8154  0011E6  0E0A               	movlw	10
  8155  0011E8  6E03               	movwf	___wmul@multiplicand^0,c
  8156  0011EA  EC00  F01E         	call	___wmul	;wreg free
  8157  0011EE  C001  F025         	movff	?___wmul,sprintf@width
  8158  0011F2  C002  F026         	movff	?___wmul+1,sprintf@width+1
  8159  0011F6                     
  8160                           ;doprnt.c: 618: width += *f++ - '0';
  8161  0011F6  0ED0               	movlw	208
  8162  0011F8  6E17               	movwf	??_sprintf^0,c
  8163  0011FA  0EFF               	movlw	255
  8164  0011FC  6E18               	movwf	(??_sprintf+1)^0,c
  8165  0011FE  C00F  FFF6         	movff	sprintf@f,tblptrl
  8166  001202  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8167  001206                     	if	0	;tblptru may be non-zero
  8168  001206                     	endif
  8169  001206                     	if	0	;tblptru may be non-zero
  8170  001206                     	endif
  8171  001206  0008               	tblrd		*
  8172  001208  50F5               	movf	tablat,w,c
  8173  00120A  6E19               	movwf	(??_sprintf+2)^0,c
  8174  00120C  6A1A               	clrf	(??_sprintf+3)^0,c
  8175  00120E  5017               	movf	??_sprintf^0,w,c
  8176  001210  2619               	addwf	(??_sprintf+2)^0,f,c
  8177  001212  5018               	movf	(??_sprintf+1)^0,w,c
  8178  001214  221A               	addwfc	(??_sprintf+3)^0,f,c
  8179  001216  5019               	movf	(??_sprintf+2)^0,w,c
  8180  001218  2625               	addwf	sprintf@width^0,f,c
  8181  00121A  501A               	movf	(??_sprintf+3)^0,w,c
  8182  00121C  2226               	addwfc	(sprintf@width+1)^0,f,c
  8183  00121E  4A0F               	infsnz	sprintf@f^0,f,c
  8184  001220  2A10               	incf	(sprintf@f+1)^0,f,c
  8185  001222                     
  8186                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  8187  001222  C00F  FFF6         	movff	sprintf@f,tblptrl
  8188  001226  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8189  00122A                     	if	0	;tblptru may be non-zero
  8190  00122A                     	endif
  8191  00122A                     	if	0	;tblptru may be non-zero
  8192  00122A                     	endif
  8193  00122A  0008               	tblrd		*
  8194  00122C  50F5               	movf	tablat,w,c
  8195  00122E  ECCF  F01D         	call	_isdigit
  8196  001232  B0D8               	btfsc	status,0,c
  8197  001234  EF1E  F009         	goto	u3571
  8198  001238  EF20  F009         	goto	u3570
  8199  00123C                     u3571:
  8200  00123C  EFED  F008         	goto	l4413
  8201  001240                     u3570:
  8202  001240  EF79  F009         	goto	l4449
  8203  001244                     l4421:
  8204                           
  8205                           ;doprnt.c: 783: if(((unsigned)width) > len)
  8206  001244  5026               	movf	(sprintf@width+1)^0,w,c
  8207  001246  E109               	bnz	u3580
  8208  001248  0E02               	movlw	2
  8209  00124A  5C25               	subwf	sprintf@width^0,w,c
  8210  00124C  A0D8               	btfss	status,0,c
  8211  00124E  EF2B  F009         	goto	u3581
  8212  001252  EF2D  F009         	goto	u3580
  8213  001256                     u3581:
  8214  001256  EF32  F009         	goto	l4425
  8215  00125A                     u3580:
  8216  00125A                     
  8217                           ;doprnt.c: 784: width -= len;
  8218  00125A  0625               	decf	sprintf@width^0,f,c
  8219  00125C  A0D8               	btfss	status,0,c
  8220  00125E  0626               	decf	(sprintf@width+1)^0,f,c
  8221  001260  EF40  F009         	goto	l4431
  8222  001264                     l4425:
  8223                           
  8224                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  8225  001264  0E00               	movlw	0
  8226  001266  6E26               	movwf	(sprintf@width+1)^0,c
  8227  001268  0E00               	movlw	0
  8228  00126A  6E25               	movwf	sprintf@width^0,c
  8229  00126C  EF40  F009         	goto	l4431
  8230  001270                     l4427:
  8231                           
  8232                           ;doprnt.c: 791: ((*sp++ = (' ')));
  8233  001270  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8234  001274  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8235  001278  0E20               	movlw	32
  8236  00127A  6EDF               	movwf	indf2,c
  8237  00127C  4A0D               	infsnz	sprintf@sp^0,f,c
  8238  00127E  2A0E               	incf	(sprintf@sp+1)^0,f,c
  8239  001280                     l4431:
  8240  001280  0625               	decf	sprintf@width^0,f,c
  8241  001282  A0D8               	btfss	status,0,c
  8242  001284  0626               	decf	(sprintf@width+1)^0,f,c
  8243  001286  2825               	incf	sprintf@width^0,w,c
  8244  001288  E106               	bnz	u3591
  8245  00128A  2826               	incf	(sprintf@width+1)^0,w,c
  8246  00128C  A4D8               	btfss	status,2,c
  8247  00128E  EF4B  F009         	goto	u3591
  8248  001292  EF4D  F009         	goto	u3590
  8249  001296                     u3591:
  8250  001296  EF38  F009         	goto	l4427
  8251  00129A                     u3590:
  8252  00129A  EF5D  F009         	goto	l4439
  8253  00129E                     l4433:
  8254                           
  8255                           ;doprnt.c: 794: ((*sp++ = (*cp++)));
  8256  00129E  C01B  FFD9         	movff	sprintf@cp,fsr2l
  8257  0012A2  C01C  FFDA         	movff	sprintf@cp+1,fsr2h
  8258  0012A6  C00D  FFE1         	movff	sprintf@sp,fsr1l
  8259  0012AA  C00E  FFE2         	movff	sprintf@sp+1,fsr1h
  8260  0012AE  CFDF FFE7          	movff	indf2,indf1
  8261  0012B2  4A1B               	infsnz	sprintf@cp^0,f,c
  8262  0012B4  2A1C               	incf	(sprintf@cp+1)^0,f,c
  8263  0012B6  4A0D               	infsnz	sprintf@sp^0,f,c
  8264  0012B8  2A0E               	incf	(sprintf@sp+1)^0,f,c
  8265  0012BA                     l4439:
  8266  0012BA  0620               	decf	sprintf@len^0,f,c
  8267  0012BC  A0D8               	btfss	status,0,c
  8268  0012BE  0621               	decf	(sprintf@len+1)^0,f,c
  8269  0012C0  2820               	incf	sprintf@len^0,w,c
  8270  0012C2  E106               	bnz	u3601
  8271  0012C4  2821               	incf	(sprintf@len+1)^0,w,c
  8272  0012C6  A4D8               	btfss	status,2,c
  8273  0012C8  EF68  F009         	goto	u3601
  8274  0012CC  EF6A  F009         	goto	u3600
  8275  0012D0                     u3601:
  8276  0012D0  EF4F  F009         	goto	l4433
  8277  0012D4                     u3600:
  8278  0012D4  EF83  F00A         	goto	l4515
  8279  0012D8                     l4441:
  8280                           
  8281                           ;doprnt.c: 831: cp = (char *)&c;
  8282  0012D8  0E27               	movlw	low sprintf@c
  8283  0012DA  6E1B               	movwf	sprintf@cp^0,c
  8284  0012DC  0E00               	movlw	high sprintf@c
  8285  0012DE  6E1C               	movwf	(sprintf@cp+1)^0,c
  8286  0012E0                     
  8287                           ;doprnt.c: 832: len = 1;
  8288  0012E0  0E00               	movlw	0
  8289  0012E2  6E21               	movwf	(sprintf@len+1)^0,c
  8290  0012E4  0E01               	movlw	1
  8291  0012E6  6E20               	movwf	sprintf@len^0,c
  8292                           
  8293                           ;doprnt.c: 833: goto dostring;
  8294  0012E8  EF22  F009         	goto	l4421
  8295  0012EC                     l4445:
  8296                           
  8297                           ;doprnt.c: 844: flag |= 0x40;
  8298  0012EC  8C22               	bsf	sprintf@flag^0,6,c
  8299                           
  8300                           ;doprnt.c: 845: break;
  8301  0012EE  EF95  F009         	goto	l1114
  8302  0012F2                     l4449:
  8303  0012F2  C00F  FFF6         	movff	sprintf@f,tblptrl
  8304  0012F6  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8305  0012FA  4A0F               	infsnz	sprintf@f^0,f,c
  8306  0012FC  2A10               	incf	(sprintf@f+1)^0,f,c
  8307  0012FE                     	if	0	;tblptru may be non-zero
  8308  0012FE                     	endif
  8309  0012FE                     	if	0	;tblptru may be non-zero
  8310  0012FE                     	endif
  8311  0012FE  0008               	tblrd		*
  8312  001300  CFF5 F027          	movff	tablat,sprintf@c
  8313  001304  5027               	movf	sprintf@c^0,w,c
  8314                           
  8315                           ; Switch size 1, requested type "simple"
  8316                           ; Number of cases is 4, Range of values is 0 to 117
  8317                           ; switch strategies available:
  8318                           ; Name         Instructions Cycles
  8319                           ; simple_byte           13     7 (average)
  8320                           ;	Chosen strategy is simple_byte
  8321  001306  0A00               	xorlw	0	; case 0
  8322  001308  B4D8               	btfsc	status,2,c
  8323  00130A  EF94  F00A         	goto	l4517
  8324  00130E  0A64               	xorlw	100	; case 100
  8325  001310  B4D8               	btfsc	status,2,c
  8326  001312  EF95  F009         	goto	l1114
  8327  001316  0A0D               	xorlw	13	; case 105
  8328  001318  B4D8               	btfsc	status,2,c
  8329  00131A  EF95  F009         	goto	l1114
  8330  00131E  0A1C               	xorlw	28	; case 117
  8331  001320  B4D8               	btfsc	status,2,c
  8332  001322  EF76  F009         	goto	l4445
  8333  001326  EF6C  F009         	goto	l4441
  8334  00132A                     l1114:
  8335                           
  8336                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  8337  00132A  BC22               	btfsc	sprintf@flag^0,6,c
  8338  00132C  EF9A  F009         	goto	u3611
  8339  001330  EF9C  F009         	goto	u3610
  8340  001334                     u3611:
  8341  001334  EFB7  F009         	goto	l4461
  8342  001338                     u3610:
  8343  001338                     
  8344                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  8345  001338  C01E  FFD9         	movff	sprintf@ap,fsr2l
  8346  00133C  C01F  FFDA         	movff	sprintf@ap+1,fsr2h
  8347  001340  CFDE F023          	movff	postinc2,sprintf@val
  8348  001344  CFDD F024          	movff	postdec2,sprintf@val+1
  8349  001348  0E02               	movlw	2
  8350  00134A  261E               	addwf	sprintf@ap^0,f,c
  8351  00134C  0E00               	movlw	0
  8352  00134E  221F               	addwfc	(sprintf@ap+1)^0,f,c
  8353  001350                     
  8354                           ;doprnt.c: 1287: if((int)val < 0) {
  8355  001350  BE24               	btfsc	(sprintf@val+1)^0,7,c
  8356  001352  EFAF  F009         	goto	u3620
  8357  001356  EFAD  F009         	goto	u3621
  8358  00135A                     u3621:
  8359  00135A  EFC3  F009         	goto	l4465
  8360  00135E                     u3620:
  8361  00135E                     
  8362                           ;doprnt.c: 1288: flag |= 0x03;
  8363  00135E  0E03               	movlw	3
  8364  001360  1222               	iorwf	sprintf@flag^0,f,c
  8365  001362                     
  8366                           ;doprnt.c: 1289: val = -val;
  8367  001362  6C23               	negf	sprintf@val^0,c
  8368  001364  1E24               	comf	(sprintf@val+1)^0,f,c
  8369  001366  B0D8               	btfsc	status,0,c
  8370  001368  2A24               	incf	(sprintf@val+1)^0,f,c
  8371  00136A  EFC3  F009         	goto	l4465
  8372  00136E                     l4461:
  8373                           
  8374                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  8375  00136E  C01E  FFD9         	movff	sprintf@ap,fsr2l
  8376  001372  C01F  FFDA         	movff	sprintf@ap+1,fsr2h
  8377  001376  CFDE F023          	movff	postinc2,sprintf@val
  8378  00137A  CFDD F024          	movff	postdec2,sprintf@val+1
  8379  00137E  0E02               	movlw	2
  8380  001380  261E               	addwf	sprintf@ap^0,f,c
  8381  001382  0E00               	movlw	0
  8382  001384  221F               	addwfc	(sprintf@ap+1)^0,f,c
  8383  001386                     l4465:
  8384                           
  8385                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  8386  001386  0E01               	movlw	1
  8387  001388  6E27               	movwf	sprintf@c^0,c
  8388  00138A                     l4467:
  8389  00138A  0E05               	movlw	5
  8390  00138C  1827               	xorwf	sprintf@c^0,w,c
  8391  00138E  A4D8               	btfss	status,2,c
  8392  001390  EFCC  F009         	goto	u3631
  8393  001394  EFCE  F009         	goto	u3630
  8394  001398                     u3631:
  8395  001398  EFD0  F009         	goto	l4471
  8396  00139C                     u3630:
  8397  00139C  EFEA  F009         	goto	l4479
  8398  0013A0                     l4471:
  8399                           
  8400                           ;doprnt.c: 1332: if(val < dpowers[c])
  8401  0013A0  5027               	movf	sprintf@c^0,w,c
  8402  0013A2  0D02               	mullw	2
  8403  0013A4  0E01               	movlw	low _dpowers
  8404  0013A6  24F3               	addwf	243,w,c
  8405  0013A8  6EF6               	movwf	tblptrl,c
  8406  0013AA  0E08               	movlw	high _dpowers
  8407  0013AC  20F4               	addwfc	244,w,c
  8408  0013AE  6EF7               	movwf	tblptrh,c
  8409  0013B0                     	if	0	;There are less than 3 active tblptr bytes
  8410  0013B0                     	endif
  8411  0013B0  0009               	tblrd		*+
  8412  0013B2  50F5               	movf	tablat,w,c
  8413  0013B4  5C23               	subwf	sprintf@val^0,w,c
  8414  0013B6  0009               	tblrd		*+
  8415  0013B8  50F5               	movf	tablat,w,c
  8416  0013BA  5824               	subwfb	(sprintf@val+1)^0,w,c
  8417  0013BC  B0D8               	btfsc	status,0,c
  8418  0013BE  EFE3  F009         	goto	u3641
  8419  0013C2  EFE5  F009         	goto	u3640
  8420  0013C6                     u3641:
  8421  0013C6  EFE7  F009         	goto	l4475
  8422  0013CA                     u3640:
  8423  0013CA  EFEA  F009         	goto	l4479
  8424  0013CE                     l4475:
  8425  0013CE  2A27               	incf	sprintf@c^0,f,c
  8426  0013D0  EFC5  F009         	goto	l4467
  8427  0013D4                     l4479:
  8428                           
  8429                           ;doprnt.c: 1371: if(width && flag & 0x03)
  8430  0013D4  5025               	movf	sprintf@width^0,w,c
  8431  0013D6  1026               	iorwf	(sprintf@width+1)^0,w,c
  8432  0013D8  B4D8               	btfsc	status,2,c
  8433  0013DA  EFF1  F009         	goto	u3651
  8434  0013DE  EFF3  F009         	goto	u3650
  8435  0013E2                     u3651:
  8436  0013E2  EF01  F00A         	goto	l4485
  8437  0013E6                     u3650:
  8438  0013E6  C022  F017         	movff	sprintf@flag,??_sprintf
  8439  0013EA  0E03               	movlw	3
  8440  0013EC  1617               	andwf	??_sprintf^0,f,c
  8441  0013EE  B4D8               	btfsc	status,2,c
  8442  0013F0  EFFC  F009         	goto	u3661
  8443  0013F4  EFFE  F009         	goto	u3660
  8444  0013F8                     u3661:
  8445  0013F8  EF01  F00A         	goto	l4485
  8446  0013FC                     u3660:
  8447  0013FC                     
  8448                           ;doprnt.c: 1372: width--;
  8449  0013FC  0625               	decf	sprintf@width^0,f,c
  8450  0013FE  A0D8               	btfss	status,0,c
  8451  001400  0626               	decf	(sprintf@width+1)^0,f,c
  8452  001402                     l4485:
  8453                           
  8454                           ;doprnt.c: 1407: if(width > c)
  8455  001402  5027               	movf	sprintf@c^0,w,c
  8456  001404  6E17               	movwf	??_sprintf^0,c
  8457  001406  6A18               	clrf	(??_sprintf+1)^0,c
  8458  001408  5025               	movf	sprintf@width^0,w,c
  8459  00140A  5C17               	subwf	??_sprintf^0,w,c
  8460  00140C  5018               	movf	(??_sprintf+1)^0,w,c
  8461  00140E  0A80               	xorlw	128
  8462  001410  6E19               	movwf	(??_sprintf+2)^0,c
  8463  001412  5026               	movf	(sprintf@width+1)^0,w,c
  8464  001414  0A80               	xorlw	128
  8465  001416  5819               	subwfb	(??_sprintf+2)^0,w,c
  8466  001418  B0D8               	btfsc	status,0,c
  8467  00141A  EF11  F00A         	goto	u3671
  8468  00141E  EF13  F00A         	goto	u3670
  8469  001422                     u3671:
  8470  001422  EF19  F00A         	goto	l4489
  8471  001426                     u3670:
  8472  001426                     
  8473                           ;doprnt.c: 1408: width -= c;
  8474  001426  5027               	movf	sprintf@c^0,w,c
  8475  001428  5E25               	subwf	sprintf@width^0,f,c
  8476  00142A  0E00               	movlw	0
  8477  00142C  5A26               	subwfb	(sprintf@width+1)^0,f,c
  8478  00142E  EF1D  F00A         	goto	l4491
  8479  001432                     l4489:
  8480                           
  8481                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  8482  001432  0E00               	movlw	0
  8483  001434  6E26               	movwf	(sprintf@width+1)^0,c
  8484  001436  0E00               	movlw	0
  8485  001438  6E25               	movwf	sprintf@width^0,c
  8486  00143A                     l4491:
  8487                           
  8488                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  8489  00143A  5025               	movf	sprintf@width^0,w,c
  8490  00143C  1026               	iorwf	(sprintf@width+1)^0,w,c
  8491  00143E  B4D8               	btfsc	status,2,c
  8492  001440  EF24  F00A         	goto	u3681
  8493  001444  EF26  F00A         	goto	u3680
  8494  001448                     u3681:
  8495  001448  EF3A  F00A         	goto	l4499
  8496  00144C                     u3680:
  8497  00144C                     l4493:
  8498                           
  8499                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  8500  00144C  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8501  001450  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8502  001454  0E20               	movlw	32
  8503  001456  6EDF               	movwf	indf2,c
  8504  001458  4A0D               	infsnz	sprintf@sp^0,f,c
  8505  00145A  2A0E               	incf	(sprintf@sp+1)^0,f,c
  8506  00145C                     
  8507                           ;doprnt.c: 1457: while(--width);
  8508  00145C  0625               	decf	sprintf@width^0,f,c
  8509  00145E  A0D8               	btfss	status,0,c
  8510  001460  0626               	decf	(sprintf@width+1)^0,f,c
  8511  001462  5025               	movf	sprintf@width^0,w,c
  8512  001464  1026               	iorwf	(sprintf@width+1)^0,w,c
  8513  001466  A4D8               	btfss	status,2,c
  8514  001468  EF38  F00A         	goto	u3691
  8515  00146C  EF3A  F00A         	goto	u3690
  8516  001470                     u3691:
  8517  001470  EF26  F00A         	goto	l4493
  8518  001474                     u3690:
  8519  001474                     l4499:
  8520                           
  8521                           ;doprnt.c: 1464: if(flag & 0x03)
  8522  001474  C022  F017         	movff	sprintf@flag,??_sprintf
  8523  001478  0E03               	movlw	3
  8524  00147A  1617               	andwf	??_sprintf^0,f,c
  8525  00147C  B4D8               	btfsc	status,2,c
  8526  00147E  EF43  F00A         	goto	u3701
  8527  001482  EF45  F00A         	goto	u3700
  8528  001486                     u3701:
  8529  001486  EF4D  F00A         	goto	l4505
  8530  00148A                     u3700:
  8531  00148A                     
  8532                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  8533  00148A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8534  00148E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8535  001492  0E2D               	movlw	45
  8536  001494  6EDF               	movwf	indf2,c
  8537  001496  4A0D               	infsnz	sprintf@sp^0,f,c
  8538  001498  2A0E               	incf	(sprintf@sp+1)^0,f,c
  8539  00149A                     l4505:
  8540                           
  8541                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  8542  00149A  C027  F01D         	movff	sprintf@c,sprintf@prec
  8543                           
  8544                           ;doprnt.c: 1500: while(prec--) {
  8545  00149E  EF7A  F00A         	goto	l4513
  8546  0014A2                     l4507:
  8547                           
  8548                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  8549  0014A2  501D               	movf	sprintf@prec^0,w,c
  8550  0014A4  0D02               	mullw	2
  8551  0014A6  0E01               	movlw	low _dpowers
  8552  0014A8  24F3               	addwf	243,w,c
  8553  0014AA  6EF6               	movwf	tblptrl,c
  8554  0014AC  0E08               	movlw	high _dpowers
  8555  0014AE  20F4               	addwfc	244,w,c
  8556  0014B0  6EF7               	movwf	tblptrh,c
  8557  0014B2                     	if	0	;There are less than 3 active tblptr bytes
  8558  0014B2                     	endif
  8559  0014B2  0009               	tblrd		*+
  8560  0014B4  CFF5 F003          	movff	tablat,___lwdiv@divisor
  8561  0014B8  000A               	tblrd		*-
  8562  0014BA  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  8563  0014BE  C023  F001         	movff	sprintf@val,___lwdiv@dividend
  8564  0014C2  C024  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  8565  0014C6  EC39  F01C         	call	___lwdiv	;wreg free
  8566  0014CA  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  8567  0014CE  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  8568  0014D2  0E00               	movlw	0
  8569  0014D4  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  8570  0014D6  0E0A               	movlw	10
  8571  0014D8  6E0A               	movwf	___lwmod@divisor^0,c
  8572  0014DA  ECAB  F01C         	call	___lwmod	;wreg free
  8573  0014DE  5008               	movf	?___lwmod^0,w,c
  8574  0014E0  0F30               	addlw	48
  8575  0014E2  6E27               	movwf	sprintf@c^0,c
  8576  0014E4                     
  8577                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  8578  0014E4  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8579  0014E8  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8580  0014EC  C027  FFDF         	movff	sprintf@c,indf2
  8581  0014F0  4A0D               	infsnz	sprintf@sp^0,f,c
  8582  0014F2  2A0E               	incf	(sprintf@sp+1)^0,f,c
  8583  0014F4                     l4513:
  8584  0014F4  061D               	decf	sprintf@prec^0,f,c
  8585  0014F6  281D               	incf	sprintf@prec^0,w,c
  8586  0014F8  A4D8               	btfss	status,2,c
  8587  0014FA  EF81  F00A         	goto	u3711
  8588  0014FE  EF83  F00A         	goto	u3710
  8589  001502                     u3711:
  8590  001502  EF51  F00A         	goto	l4507
  8591  001506                     u3710:
  8592  001506                     l4515:
  8593  001506  C00F  FFF6         	movff	sprintf@f,tblptrl
  8594  00150A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8595  00150E  4A0F               	infsnz	sprintf@f^0,f,c
  8596  001510  2A10               	incf	(sprintf@f+1)^0,f,c
  8597  001512                     	if	0	;tblptru may be non-zero
  8598  001512                     	endif
  8599  001512                     	if	0	;tblptru may be non-zero
  8600  001512                     	endif
  8601  001512  0008               	tblrd		*
  8602  001514  CFF5 F027          	movff	tablat,sprintf@c
  8603  001518  5027               	movf	sprintf@c^0,w,c
  8604  00151A  A4D8               	btfss	status,2,c
  8605  00151C  EF92  F00A         	goto	u3721
  8606  001520  EF94  F00A         	goto	u3720
  8607  001524                     u3721:
  8608  001524  EFC1  F008         	goto	l4401
  8609  001528                     u3720:
  8610  001528                     l4517:
  8611                           
  8612                           ;doprnt.c: 1564: *sp = 0;
  8613  001528  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8614  00152C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8615  001530  0E00               	movlw	0
  8616  001532  6EDF               	movwf	indf2,c
  8617  001534  0012               	return		;funcret
  8618  001536                     __end_of_sprintf:
  8619                           	callstack 0
  8620                           
  8621 ;; *************** function _isdigit *****************
  8622 ;; Defined at:
  8623 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\isdigit.c"
  8624 ;; Parameters:    Size  Location     Type
  8625 ;;  c               1    wreg     unsigned char 
  8626 ;; Auto vars:     Size  Location     Type
  8627 ;;  c               1    2[COMRAM] unsigned char 
  8628 ;; Return value:  Size  Location     Type
  8629 ;;		None               void
  8630 ;; Registers used:
  8631 ;;		wreg, status,2, status,0
  8632 ;; Tracked objects:
  8633 ;;		On entry : 0/0
  8634 ;;		On exit  : 0/0
  8635 ;;		Unchanged: 0/0
  8636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8637 ;;      Params:         0       0       0       0       0       0       0       0       0
  8638 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8639 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8640 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8641 ;;Total ram usage:        3 bytes
  8642 ;; Hardware stack levels used:    1
  8643 ;; Hardware stack levels required when called:    3
  8644 ;; This function calls:
  8645 ;;		Nothing
  8646 ;; This function is called by:
  8647 ;;		_sprintf
  8648 ;; This function uses a non-reentrant model
  8649 ;;
  8650                           
  8651                           	psect	text38
  8652  003B9E                     __ptext38:
  8653                           	callstack 0
  8654  003B9E                     _isdigit:
  8655                           	callstack 24
  8656                           
  8657                           ;incstack = 0
  8658                           ;isdigit@c stored from wreg
  8659  003B9E  6E03               	movwf	isdigit@c^0,c
  8660  003BA0  0E00               	movlw	0
  8661  003BA2  6E02               	movwf	_isdigit$2385^0,c
  8662  003BA4  0E3A               	movlw	58
  8663  003BA6  6003               	cpfslt	isdigit@c^0,c
  8664  003BA8  EFD8  F01D         	goto	u3131
  8665  003BAC  EFDA  F01D         	goto	u3130
  8666  003BB0                     u3131:
  8667  003BB0  EFE4  F01D         	goto	l4133
  8668  003BB4                     u3130:
  8669  003BB4  0E2F               	movlw	47
  8670  003BB6  6403               	cpfsgt	isdigit@c^0,c
  8671  003BB8  EFE0  F01D         	goto	u3141
  8672  003BBC  EFE2  F01D         	goto	u3140
  8673  003BC0                     u3141:
  8674  003BC0  EFE4  F01D         	goto	l4133
  8675  003BC4                     u3140:
  8676  003BC4  0E01               	movlw	1
  8677  003BC6  6E02               	movwf	_isdigit$2385^0,c
  8678  003BC8                     l4133:
  8679  003BC8  C002  F001         	movff	_isdigit$2385,??_isdigit
  8680  003BCC  3001               	rrcf	??_isdigit^0,w,c
  8681  003BCE  0012               	return		;funcret
  8682  003BD0                     __end_of_isdigit:
  8683                           	callstack 0
  8684                           
  8685 ;; *************** function ___wmul *****************
  8686 ;; Defined at:
  8687 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;  multiplier      2    0[COMRAM] unsigned int 
  8690 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;  product         2    4[COMRAM] unsigned int 
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  2    0[COMRAM] unsigned int 
  8695 ;; Registers used:
  8696 ;;		wreg, status,2, status,0, prodl, prodh
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8702 ;;      Params:         4       0       0       0       0       0       0       0       0
  8703 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8704 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8705 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8706 ;;Total ram usage:        6 bytes
  8707 ;; Hardware stack levels used:    1
  8708 ;; Hardware stack levels required when called:    3
  8709 ;; This function calls:
  8710 ;;		Nothing
  8711 ;; This function is called by:
  8712 ;;		_sprintf
  8713 ;; This function uses a non-reentrant model
  8714 ;;
  8715                           
  8716                           	psect	text39
  8717  003C00                     __ptext39:
  8718                           	callstack 0
  8719  003C00                     ___wmul:
  8720                           	callstack 24
  8721  003C00  5001               	movf	___wmul@multiplier^0,w,c
  8722  003C02  0203               	mulwf	___wmul@multiplicand^0,c
  8723  003C04  CFF3 F005          	movff	prodl,___wmul@product
  8724  003C08  CFF4 F006          	movff	prodh,___wmul@product+1
  8725  003C0C  5001               	movf	___wmul@multiplier^0,w,c
  8726  003C0E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8727  003C10  50F3               	movf	243,w,c
  8728  003C12  2606               	addwf	(___wmul@product+1)^0,f,c
  8729  003C14  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8730  003C16  0203               	mulwf	___wmul@multiplicand^0,c
  8731  003C18  50F3               	movf	243,w,c
  8732  003C1A  2606               	addwf	(___wmul@product+1)^0,f,c
  8733  003C1C  C005  F001         	movff	___wmul@product,?___wmul
  8734  003C20  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8735  003C24  0012               	return		;funcret
  8736  003C26                     __end_of___wmul:
  8737                           	callstack 0
  8738                           
  8739 ;; *************** function ___lwmod *****************
  8740 ;; Defined at:
  8741 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;  dividend        2    7[COMRAM] unsigned int 
  8744 ;;  divisor         2    9[COMRAM] unsigned int 
  8745 ;; Auto vars:     Size  Location     Type
  8746 ;;  counter         1   11[COMRAM] unsigned char 
  8747 ;; Return value:  Size  Location     Type
  8748 ;;                  2    7[COMRAM] unsigned int 
  8749 ;; Registers used:
  8750 ;;		wreg, status,2, status,0
  8751 ;; Tracked objects:
  8752 ;;		On entry : 0/0
  8753 ;;		On exit  : 0/0
  8754 ;;		Unchanged: 0/0
  8755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8756 ;;      Params:         4       0       0       0       0       0       0       0       0
  8757 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8758 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8759 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8760 ;;Total ram usage:        5 bytes
  8761 ;; Hardware stack levels used:    1
  8762 ;; Hardware stack levels required when called:    3
  8763 ;; This function calls:
  8764 ;;		Nothing
  8765 ;; This function is called by:
  8766 ;;		_sprintf
  8767 ;; This function uses a non-reentrant model
  8768 ;;
  8769                           
  8770                           	psect	text40
  8771  003956                     __ptext40:
  8772                           	callstack 0
  8773  003956                     ___lwmod:
  8774                           	callstack 24
  8775  003956  500A               	movf	___lwmod@divisor^0,w,c
  8776  003958  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  8777  00395A  B4D8               	btfsc	status,2,c
  8778  00395C  EFB2  F01C         	goto	u3421
  8779  003960  EFB4  F01C         	goto	u3420
  8780  003964                     u3421:
  8781  003964  EFD8  F01C         	goto	l1635
  8782  003968                     u3420:
  8783  003968  0E01               	movlw	1
  8784  00396A  6E0C               	movwf	___lwmod@counter^0,c
  8785  00396C  EFBC  F01C         	goto	l4323
  8786  003970                     l4321:
  8787  003970  90D8               	bcf	status,0,c
  8788  003972  360A               	rlcf	___lwmod@divisor^0,f,c
  8789  003974  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  8790  003976  2A0C               	incf	___lwmod@counter^0,f,c
  8791  003978                     l4323:
  8792  003978  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  8793  00397A  EFC1  F01C         	goto	u3431
  8794  00397E  EFC3  F01C         	goto	u3430
  8795  003982                     u3431:
  8796  003982  EFB8  F01C         	goto	l4321
  8797  003986                     u3430:
  8798  003986                     l4325:
  8799  003986  500A               	movf	___lwmod@divisor^0,w,c
  8800  003988  5C08               	subwf	___lwmod@dividend^0,w,c
  8801  00398A  500B               	movf	(___lwmod@divisor+1)^0,w,c
  8802  00398C  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  8803  00398E  A0D8               	btfss	status,0,c
  8804  003990  EFCC  F01C         	goto	u3441
  8805  003994  EFCE  F01C         	goto	u3440
  8806  003998                     u3441:
  8807  003998  EFD2  F01C         	goto	l4329
  8808  00399C                     u3440:
  8809  00399C  500A               	movf	___lwmod@divisor^0,w,c
  8810  00399E  5E08               	subwf	___lwmod@dividend^0,f,c
  8811  0039A0  500B               	movf	(___lwmod@divisor+1)^0,w,c
  8812  0039A2  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  8813  0039A4                     l4329:
  8814  0039A4  90D8               	bcf	status,0,c
  8815  0039A6  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  8816  0039A8  320A               	rrcf	___lwmod@divisor^0,f,c
  8817  0039AA  2E0C               	decfsz	___lwmod@counter^0,f,c
  8818  0039AC  EFC3  F01C         	goto	l4325
  8819  0039B0                     l1635:
  8820  0039B0  C008  F008         	movff	___lwmod@dividend,?___lwmod
  8821  0039B4  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  8822  0039B8  0012               	return		;funcret
  8823  0039BA                     __end_of___lwmod:
  8824                           	callstack 0
  8825                           
  8826 ;; *************** function ___lwdiv *****************
  8827 ;; Defined at:
  8828 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;  dividend        2    0[COMRAM] unsigned int 
  8831 ;;  divisor         2    2[COMRAM] unsigned int 
  8832 ;; Auto vars:     Size  Location     Type
  8833 ;;  quotient        2    4[COMRAM] unsigned int 
  8834 ;;  counter         1    6[COMRAM] unsigned char 
  8835 ;; Return value:  Size  Location     Type
  8836 ;;                  2    0[COMRAM] unsigned int 
  8837 ;; Registers used:
  8838 ;;		wreg, status,2, status,0
  8839 ;; Tracked objects:
  8840 ;;		On entry : 0/0
  8841 ;;		On exit  : 0/0
  8842 ;;		Unchanged: 0/0
  8843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8844 ;;      Params:         4       0       0       0       0       0       0       0       0
  8845 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8846 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8847 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8848 ;;Total ram usage:        7 bytes
  8849 ;; Hardware stack levels used:    1
  8850 ;; Hardware stack levels required when called:    3
  8851 ;; This function calls:
  8852 ;;		Nothing
  8853 ;; This function is called by:
  8854 ;;		_sprintf
  8855 ;; This function uses a non-reentrant model
  8856 ;;
  8857                           
  8858                           	psect	text41
  8859  003872                     __ptext41:
  8860                           	callstack 0
  8861  003872                     ___lwdiv:
  8862                           	callstack 24
  8863  003872  0E00               	movlw	0
  8864  003874  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  8865  003876  0E00               	movlw	0
  8866  003878  6E05               	movwf	___lwdiv@quotient^0,c
  8867  00387A  5003               	movf	___lwdiv@divisor^0,w,c
  8868  00387C  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8869  00387E  B4D8               	btfsc	status,2,c
  8870  003880  EF44  F01C         	goto	u3391
  8871  003884  EF46  F01C         	goto	u3390
  8872  003888                     u3391:
  8873  003888  EF6E  F01C         	goto	l1625
  8874  00388C                     u3390:
  8875  00388C  0E01               	movlw	1
  8876  00388E  6E07               	movwf	___lwdiv@counter^0,c
  8877  003890  EF4E  F01C         	goto	l4303
  8878  003894                     l4301:
  8879  003894  90D8               	bcf	status,0,c
  8880  003896  3603               	rlcf	___lwdiv@divisor^0,f,c
  8881  003898  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8882  00389A  2A07               	incf	___lwdiv@counter^0,f,c
  8883  00389C                     l4303:
  8884  00389C  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  8885  00389E  EF53  F01C         	goto	u3401
  8886  0038A2  EF55  F01C         	goto	u3400
  8887  0038A6                     u3401:
  8888  0038A6  EF4A  F01C         	goto	l4301
  8889  0038AA                     u3400:
  8890  0038AA                     l4305:
  8891  0038AA  90D8               	bcf	status,0,c
  8892  0038AC  3605               	rlcf	___lwdiv@quotient^0,f,c
  8893  0038AE  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8894  0038B0  5003               	movf	___lwdiv@divisor^0,w,c
  8895  0038B2  5C01               	subwf	___lwdiv@dividend^0,w,c
  8896  0038B4  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  8897  0038B6  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8898  0038B8  A0D8               	btfss	status,0,c
  8899  0038BA  EF61  F01C         	goto	u3411
  8900  0038BE  EF63  F01C         	goto	u3410
  8901  0038C2                     u3411:
  8902  0038C2  EF68  F01C         	goto	l4313
  8903  0038C6                     u3410:
  8904  0038C6  5003               	movf	___lwdiv@divisor^0,w,c
  8905  0038C8  5E01               	subwf	___lwdiv@dividend^0,f,c
  8906  0038CA  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  8907  0038CC  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8908  0038CE  8005               	bsf	___lwdiv@quotient^0,0,c
  8909  0038D0                     l4313:
  8910  0038D0  90D8               	bcf	status,0,c
  8911  0038D2  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8912  0038D4  3203               	rrcf	___lwdiv@divisor^0,f,c
  8913  0038D6  2E07               	decfsz	___lwdiv@counter^0,f,c
  8914  0038D8  EF55  F01C         	goto	l4305
  8915  0038DC                     l1625:
  8916  0038DC  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  8917  0038E0  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8918  0038E4  0012               	return		;funcret
  8919  0038E6                     __end_of___lwdiv:
  8920                           	callstack 0
  8921                           
  8922 ;; *************** function _LCD_GoTo *****************
  8923 ;; Defined at:
  8924 ;;		line 106 in file "LCD.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;  iLine           1    wreg     unsigned char 
  8927 ;;  iCharPos        1    6[COMRAM] unsigned char 
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;  iLine           1   12[COMRAM] unsigned char 
  8930 ;;  iPos            1   11[COMRAM] unsigned char 
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  1    wreg      void 
  8933 ;; Registers used:
  8934 ;;		wreg, status,2, status,0, cstack
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8940 ;;      Params:         1       0       0       0       0       0       0       0       0
  8941 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8942 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8943 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8944 ;;Total ram usage:        7 bytes
  8945 ;; Hardware stack levels used:    1
  8946 ;; Hardware stack levels required when called:    4
  8947 ;; This function calls:
  8948 ;;		_LCD_WriteCmd
  8949 ;; This function is called by:
  8950 ;;		_ComputeTOD
  8951 ;;		_LCD_DisplayResults
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           	psect	text42
  8956  003A1A                     __ptext42:
  8957                           	callstack 0
  8958  003A1A                     _LCD_GoTo:
  8959                           	callstack 24
  8960                           
  8961                           ;incstack = 0
  8962                           ;LCD_GoTo@iLine stored from wreg
  8963  003A1A  6E0D               	movwf	LCD_GoTo@iLine^0,c
  8964  003A1C                     
  8965                           ;LCD.c: 108: uint8_t iPos;;LCD.c: 109: if (iLine < 2)
  8966  003A1C  0E02               	movlw	2
  8967  003A1E  600D               	cpfslt	LCD_GoTo@iLine^0,c
  8968  003A20  EF14  F01D         	goto	u3731
  8969  003A24  EF16  F01D         	goto	u3730
  8970  003A28                     u3731:
  8971  003A28  EF32  F01D         	goto	l4531
  8972  003A2C                     u3730:
  8973  003A2C                     
  8974                           ;LCD.c: 110: iPos = (iLine == 0) ?;LCD.c: 111: (0x80 | iCharPos) :;LCD.c: 112: (0xC0 | i
      +                          CharPos);
  8975  003A2C  500D               	movf	LCD_GoTo@iLine^0,w,c
  8976  003A2E  B4D8               	btfsc	status,2,c
  8977  003A30  EF1C  F01D         	goto	u3741
  8978  003A34  EF1E  F01D         	goto	u3740
  8979  003A38                     u3741:
  8980  003A38  EF28  F01D         	goto	l4527
  8981  003A3C                     u3740:
  8982  003A3C  0EC0               	movlw	192
  8983  003A3E  C007  F008         	movff	LCD_GoTo@iCharPos,??_LCD_GoTo
  8984  003A42  6A09               	clrf	(??_LCD_GoTo+1)^0,c
  8985  003A44  1008               	iorwf	??_LCD_GoTo^0,w,c
  8986  003A46  6E0A               	movwf	_LCD_GoTo$1386^0,c
  8987  003A48  5009               	movf	(??_LCD_GoTo+1)^0,w,c
  8988  003A4A  6E0B               	movwf	(_LCD_GoTo$1386+1)^0,c
  8989  003A4C  EF30  F01D         	goto	l4529
  8990  003A50                     l4527:
  8991  003A50  0E80               	movlw	128
  8992  003A52  C007  F008         	movff	LCD_GoTo@iCharPos,??_LCD_GoTo
  8993  003A56  6A09               	clrf	(??_LCD_GoTo+1)^0,c
  8994  003A58  1008               	iorwf	??_LCD_GoTo^0,w,c
  8995  003A5A  6E0A               	movwf	_LCD_GoTo$1386^0,c
  8996  003A5C  5009               	movf	(??_LCD_GoTo+1)^0,w,c
  8997  003A5E  6E0B               	movwf	(_LCD_GoTo$1386+1)^0,c
  8998  003A60                     l4529:
  8999  003A60  C00A  F00C         	movff	_LCD_GoTo$1386,LCD_GoTo@iPos
  9000  003A64                     l4531:
  9001                           
  9002                           ;LCD.c: 113: LCD_WriteCmd (0x80 | iPos, 40+10);
  9003  003A64  0E00               	movlw	0
  9004  003A66  6E02               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  9005  003A68  0E32               	movlw	50
  9006  003A6A  6E01               	movwf	LCD_WriteCmd@iDelay^0,c
  9007  003A6C  500C               	movf	LCD_GoTo@iPos^0,w,c
  9008  003A6E  0980               	iorlw	128
  9009  003A70  EC73  F01C         	call	_LCD_WriteCmd
  9010  003A74  0012               	return		;funcret
  9011  003A76                     __end_of_LCD_GoTo:
  9012                           	callstack 0
  9013                           
  9014 ;; *************** function _LCD_WriteCmd *****************
  9015 ;; Defined at:
  9016 ;;		line 47 in file "LCD.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  iCmd            1    wreg     unsigned char 
  9019 ;;  iDelay          2    0[COMRAM] unsigned int 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  iCmd            1    5[COMRAM] unsigned char 
  9022 ;;  i               1    4[COMRAM] unsigned char 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  1    wreg      void 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, status,0
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9032 ;;      Params:         2       0       0       0       0       0       0       0       0
  9033 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9034 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9035 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9036 ;;Total ram usage:        6 bytes
  9037 ;; Hardware stack levels used:    1
  9038 ;; Hardware stack levels required when called:    3
  9039 ;; This function calls:
  9040 ;;		Nothing
  9041 ;; This function is called by:
  9042 ;;		_LCD_Init
  9043 ;;		_LCD_GoTo
  9044 ;;		_LCD_ClearScreen
  9045 ;; This function uses a non-reentrant model
  9046 ;;
  9047                           
  9048                           	psect	text43
  9049  0038E6                     __ptext43:
  9050                           	callstack 0
  9051  0038E6                     _LCD_WriteCmd:
  9052                           	callstack 26
  9053                           
  9054                           ;incstack = 0
  9055                           ;LCD_WriteCmd@iCmd stored from wreg
  9056  0038E6  6E06               	movwf	LCD_WriteCmd@iCmd^0,c
  9057  0038E8  9689               	bcf	137,3,c	;volatile
  9058  0038EA  9489               	bcf	137,2,c	;volatile
  9059  0038EC  8289               	bsf	137,1,c	;volatile
  9060  0038EE                     
  9061                           ;LCD.c: 52: LATB = iCmd;
  9062  0038EE  C006  FF8A         	movff	LCD_WriteCmd@iCmd,3978	;volatile
  9063  0038F2                     
  9064                           ;LCD.c: 53: LATCbits.LATC6 = iCmd>>6;
  9065  0038F2  C006  F003         	movff	LCD_WriteCmd@iCmd,??_LCD_WriteCmd
  9066  0038F6  0E06               	movlw	6
  9067  0038F8  6E04               	movwf	(??_LCD_WriteCmd+1)^0,c
  9068  0038FA                     u3105:
  9069  0038FA  90D8               	bcf	status,0,c
  9070  0038FC  3203               	rrcf	??_LCD_WriteCmd^0,f,c
  9071  0038FE  2E04               	decfsz	(??_LCD_WriteCmd+1)^0,f,c
  9072  003900  EF7D  F01C         	goto	u3105
  9073  003904  3A03               	swapf	??_LCD_WriteCmd^0,f,c
  9074  003906  4603               	rlncf	??_LCD_WriteCmd^0,f,c
  9075  003908  4603               	rlncf	??_LCD_WriteCmd^0,f,c
  9076  00390A  508B               	movf	139,w,c	;volatile
  9077  00390C  1803               	xorwf	??_LCD_WriteCmd^0,w,c
  9078  00390E  0BBF               	andlw	-65
  9079  003910  1803               	xorwf	??_LCD_WriteCmd^0,w,c
  9080  003912  6E8B               	movwf	139,c	;volatile
  9081  003914                     
  9082                           ;LCD.c: 54: LATCbits.LATC7 = iCmd>>7;
  9083  003914  6A03               	clrf	??_LCD_WriteCmd^0,c
  9084  003916  AE06               	btfss	LCD_WriteCmd@iCmd^0,7,c
  9085  003918  D001               	bra	u3115
  9086  00391A  2A03               	incf	??_LCD_WriteCmd^0,f,c
  9087  00391C                     u3115:
  9088  00391C  3203               	rrcf	??_LCD_WriteCmd^0,f,c
  9089  00391E  3203               	rrcf	??_LCD_WriteCmd^0,f,c
  9090  003920  508B               	movf	139,w,c	;volatile
  9091  003922  1803               	xorwf	??_LCD_WriteCmd^0,w,c
  9092  003924  0B7F               	andlw	-129
  9093  003926  1803               	xorwf	??_LCD_WriteCmd^0,w,c
  9094  003928  6E8B               	movwf	139,c	;volatile
  9095  00392A  9289               	bcf	137,1,c	;volatile
  9096  00392C                     
  9097                           ;LCD.c: 56: for (uint8_t i = 0; i<iDelay; i++)
  9098  00392C  0E00               	movlw	0
  9099  00392E  6E05               	movwf	LCD_WriteCmd@i^0,c
  9100  003930  EF9C  F01C         	goto	l4123
  9101  003934                     l775:
  9102                           
  9103                           ;LCD.c: 57: _delay((unsigned long)((1)*(8000000/4000000.0)));
  9104  003934  D000               	nop2		;2 cycle nop
  9105  003936  2A05               	incf	LCD_WriteCmd@i^0,f,c
  9106  003938                     l4123:
  9107  003938  5005               	movf	LCD_WriteCmd@i^0,w,c
  9108  00393A  6E03               	movwf	??_LCD_WriteCmd^0,c
  9109  00393C  6A04               	clrf	(??_LCD_WriteCmd+1)^0,c
  9110  00393E  5001               	movf	LCD_WriteCmd@iDelay^0,w,c
  9111  003940  5C03               	subwf	??_LCD_WriteCmd^0,w,c
  9112  003942  5002               	movf	(LCD_WriteCmd@iDelay+1)^0,w,c
  9113  003944  5804               	subwfb	(??_LCD_WriteCmd+1)^0,w,c
  9114  003946  A0D8               	btfss	status,0,c
  9115  003948  EFA8  F01C         	goto	u3121
  9116  00394C  EFAA  F01C         	goto	u3120
  9117  003950                     u3121:
  9118  003950  EF9A  F01C         	goto	l775
  9119  003954                     u3120:
  9120  003954  0012               	return		;funcret
  9121  003956                     __end_of_LCD_WriteCmd:
  9122                           	callstack 0
  9123                           
  9124 ;; *************** function _CCP2_Init *****************
  9125 ;; Defined at:
  9126 ;;		line 22 in file "CCP2.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;		None
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;		None
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  1    wreg      void 
  9133 ;; Registers used:
  9134 ;;		wreg, status,2
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9140 ;;      Params:         0       0       0       0       0       0       0       0       0
  9141 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9142 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9143 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9144 ;;Total ram usage:        0 bytes
  9145 ;; Hardware stack levels used:    1
  9146 ;; Hardware stack levels required when called:    3
  9147 ;; This function calls:
  9148 ;;		Nothing
  9149 ;; This function is called by:
  9150 ;;		_main
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           	psect	text44
  9155  003CE4                     __ptext44:
  9156                           	callstack 0
  9157  003CE4                     _CCP2_Init:
  9158                           	callstack 27
  9159  003CE4                     
  9160                           ;CCP2.c: 25: CCP2CON = 0x0C;
  9161  003CE4  0E0C               	movlw	12
  9162  003CE6  6EBA               	movwf	186,c	;volatile
  9163                           
  9164                           ;CCP2.c: 26: CCPR2L = 99>>2;
  9165  003CE8  0E18               	movlw	24
  9166  003CEA  6EBB               	movwf	187,c	;volatile
  9167                           
  9168                           ;CCP2.c: 27: CCP2CONbits.DC2B = 99 & 0x03;
  9169  003CEC  0E30               	movlw	48
  9170  003CEE  12BA               	iorwf	186,f,c	;volatile
  9171                           
  9172                           ;CCP2.c: 28: CCPR2H = 0x00;
  9173  003CF0  0E00               	movlw	0
  9174  003CF2  6EBC               	movwf	188,c	;volatile
  9175  003CF4  0012               	return		;funcret
  9176  003CF6                     __end_of_CCP2_Init:
  9177                           	callstack 0
  9178                           
  9179 ;; *************** function _CCP1_Init *****************
  9180 ;; Defined at:
  9181 ;;		line 13 in file "CCP1.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;		None
  9184 ;; Auto vars:     Size  Location     Type
  9185 ;;		None
  9186 ;; Return value:  Size  Location     Type
  9187 ;;                  1    wreg      void 
  9188 ;; Registers used:
  9189 ;;		wreg, status,2
  9190 ;; Tracked objects:
  9191 ;;		On entry : 0/0
  9192 ;;		On exit  : 0/0
  9193 ;;		Unchanged: 0/0
  9194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9195 ;;      Params:         0       0       0       0       0       0       0       0       0
  9196 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9197 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9198 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9199 ;;Total ram usage:        0 bytes
  9200 ;; Hardware stack levels used:    1
  9201 ;; Hardware stack levels required when called:    3
  9202 ;; This function calls:
  9203 ;;		Nothing
  9204 ;; This function is called by:
  9205 ;;		_main
  9206 ;; This function uses a non-reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text45
  9210  003CF6                     __ptext45:
  9211                           	callstack 0
  9212  003CF6                     _CCP1_Init:
  9213                           	callstack 27
  9214  003CF6                     
  9215                           ;CCP1.c: 17: CCP1CON = 0x00;
  9216  003CF6  0E00               	movlw	0
  9217  003CF8  6EBD               	movwf	189,c	;volatile
  9218                           
  9219                           ;CCP1.c: 19: CCPR1H = 0x00;
  9220  003CFA  0E00               	movlw	0
  9221  003CFC  6EBF               	movwf	191,c	;volatile
  9222                           
  9223                           ;CCP1.c: 20: CCPR1L = 0x00;
  9224  003CFE  0E00               	movlw	0
  9225  003D00  6EBE               	movwf	190,c	;volatile
  9226  003D02                     
  9227                           ;CCP1.c: 22: PIR1bits.CCP1IF = 0;
  9228  003D02  949E               	bcf	158,2,c	;volatile
  9229  003D04                     
  9230                           ;CCP1.c: 23: PIE1bits.CCP1IE = 0;
  9231  003D04  949D               	bcf	157,2,c	;volatile
  9232  003D06  0012               	return		;funcret
  9233  003D08                     __end_of_CCP1_Init:
  9234                           	callstack 0
  9235                           
  9236 ;; *************** function _AN0_Init *****************
  9237 ;; Defined at:
  9238 ;;		line 32 in file "TempCalc.c"
  9239 ;; Parameters:    Size  Location     Type
  9240 ;;		None
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;		None
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      void 
  9245 ;; Registers used:
  9246 ;;		wreg, status,2
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9252 ;;      Params:         0       0       0       0       0       0       0       0       0
  9253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9254 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9255 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9256 ;;Total ram usage:        0 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; Hardware stack levels required when called:    3
  9259 ;; This function calls:
  9260 ;;		Nothing
  9261 ;; This function is called by:
  9262 ;;		_main
  9263 ;; This function uses a non-reentrant model
  9264 ;;
  9265                           
  9266                           	psect	text46
  9267  003D18                     __ptext46:
  9268                           	callstack 0
  9269  003D18                     _AN0_Init:
  9270                           	callstack 27
  9271  003D18                     
  9272                           ;TempCalc.c: 34: ADCON0 = 0x01;
  9273  003D18  0E01               	movlw	1
  9274  003D1A  6EC2               	movwf	194,c	;volatile
  9275                           
  9276                           ;TempCalc.c: 35: ADCON2 = 0xA8;
  9277  003D1C  0EA8               	movlw	168
  9278  003D1E  6EC0               	movwf	192,c	;volatile
  9279  003D20                     
  9280                           ;TempCalc.c: 36: PIR1bits.ADIF = 0;
  9281  003D20  9C9E               	bcf	158,6,c	;volatile
  9282  003D22                     
  9283                           ;TempCalc.c: 37: PIE1bits.ADIE = 1;
  9284  003D22  8C9D               	bsf	157,6,c	;volatile
  9285  003D24  0012               	return		;funcret
  9286  003D26                     __end_of_AN0_Init:
  9287                           	callstack 0
  9288                           
  9289 ;; *************** function _INTERRUPT_InterruptManager *****************
  9290 ;; Defined at:
  9291 ;;		line 16 in file "Interrupt_Mgr.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;		None
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;		None
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  1    wreg      void 
  9298 ;; Registers used:
  9299 ;;		wreg, status,2, status,0, cstack
  9300 ;; Tracked objects:
  9301 ;;		On entry : 0/0
  9302 ;;		On exit  : 0/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9305 ;;      Params:         0       0       0       0       0       0       0       0       0
  9306 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9307 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9308 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9309 ;;Total ram usage:        0 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; Hardware stack levels required when called:    2
  9312 ;; This function calls:
  9313 ;;		_AN0_ISR
  9314 ;;		_CCP1_ISR
  9315 ;;		_Timer0_ISR
  9316 ;;		_Timer2_ISR
  9317 ;;		_Timer3_ISR
  9318 ;; This function is called by:
  9319 ;;		Interrupt level 2
  9320 ;; This function uses a non-reentrant model
  9321 ;;
  9322                           
  9323                           	psect	intcode
  9324  000008                     __pintcode:
  9325                           	callstack 0
  9326  000008                     _INTERRUPT_InterruptManager:
  9327                           	callstack 22
  9328                           
  9329                           ;incstack = 0
  9330  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9331  00000A  ED5B  F019         	call	int_func,f	;refresh shadow registers
  9332                           
  9333                           	psect	intcode_body
  9334  0032B6                     __pintcode_body:
  9335                           	callstack 22
  9336  0032B6                     int_func:
  9337                           	callstack 22
  9338  0032B6  0006               	pop		; remove dummy address from shadow register refresh
  9339  0032B8                     
  9340                           ;Interrupt_Mgr.c: 19: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  9341  0032B8  AAF2               	btfss	242,5,c	;volatile
  9342  0032BA  EF61  F019         	goto	i2u420_41
  9343  0032BE  EF63  F019         	goto	i2u420_40
  9344  0032C2                     i2u420_41:
  9345  0032C2  EF6E  F019         	goto	i2l79
  9346  0032C6                     i2u420_40:
  9347  0032C6  A4F2               	btfss	242,2,c	;volatile
  9348  0032C8  EF68  F019         	goto	i2u421_41
  9349  0032CC  EF6A  F019         	goto	i2u421_40
  9350  0032D0                     i2u421_41:
  9351  0032D0  EF6E  F019         	goto	i2l79
  9352  0032D4                     i2u421_40:
  9353  0032D4                     
  9354                           ;Interrupt_Mgr.c: 20: {;Interrupt_Mgr.c: 21: Timer0_ISR();
  9355  0032D4  ECDD  F01C         	call	_Timer0_ISR	;wreg free
  9356                           
  9357                           ;Interrupt_Mgr.c: 22: }
  9358  0032D8  EFBD  F019         	goto	i2l91
  9359  0032DC                     i2l79:
  9360                           
  9361                           ;Interrupt_Mgr.c: 23: else if(INTCONbits.PEIE == 1)
  9362  0032DC  ACF2               	btfss	242,6,c	;volatile
  9363  0032DE  EF73  F019         	goto	i2u422_41
  9364  0032E2  EF75  F019         	goto	i2u422_40
  9365  0032E6                     i2u422_41:
  9366  0032E6  EFBD  F019         	goto	i2l91
  9367  0032EA                     i2u422_40:
  9368  0032EA                     
  9369                           ;Interrupt_Mgr.c: 24: {;Interrupt_Mgr.c: 25: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF 
      +                          == 1)
  9370  0032EA  A2A0               	btfss	160,1,c	;volatile
  9371  0032EC  EF7A  F019         	goto	i2u423_41
  9372  0032F0  EF7C  F019         	goto	i2u423_40
  9373  0032F4                     i2u423_41:
  9374  0032F4  EF87  F019         	goto	i2l82
  9375  0032F8                     i2u423_40:
  9376  0032F8  A2A1               	btfss	161,1,c	;volatile
  9377  0032FA  EF81  F019         	goto	i2u424_41
  9378  0032FE  EF83  F019         	goto	i2u424_40
  9379  003302                     i2u424_41:
  9380  003302  EF87  F019         	goto	i2l82
  9381  003306                     i2u424_40:
  9382  003306                     
  9383                           ;Interrupt_Mgr.c: 26: {;Interrupt_Mgr.c: 27: Timer3_ISR();
  9384  003306  EC84  F01E         	call	_Timer3_ISR	;wreg free
  9385                           
  9386                           ;Interrupt_Mgr.c: 28: }
  9387  00330A  EFBD  F019         	goto	i2l91
  9388  00330E                     i2l82:
  9389                           
  9390                           ;Interrupt_Mgr.c: 29: else if(PIE1bits.CCP1IE == 1 && PIR1bits.CCP1IF == 1)
  9391  00330E  A49D               	btfss	157,2,c	;volatile
  9392  003310  EF8C  F019         	goto	i2u425_41
  9393  003314  EF8E  F019         	goto	i2u425_40
  9394  003318                     i2u425_41:
  9395  003318  EF99  F019         	goto	i2l84
  9396  00331C                     i2u425_40:
  9397  00331C  A49E               	btfss	158,2,c	;volatile
  9398  00331E  EF93  F019         	goto	i2u426_41
  9399  003322  EF95  F019         	goto	i2u426_40
  9400  003326                     i2u426_41:
  9401  003326  EF99  F019         	goto	i2l84
  9402  00332A                     i2u426_40:
  9403  00332A                     
  9404                           ;Interrupt_Mgr.c: 30: {;Interrupt_Mgr.c: 31: CCP1_ISR();
  9405  00332A  EC13  F01E         	call	_CCP1_ISR	;wreg free
  9406                           
  9407                           ;Interrupt_Mgr.c: 32: }
  9408  00332E  EFBD  F019         	goto	i2l91
  9409  003332                     i2l84:
  9410                           
  9411                           ;Interrupt_Mgr.c: 33: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  9412  003332  A29D               	btfss	157,1,c	;volatile
  9413  003334  EF9E  F019         	goto	i2u427_41
  9414  003338  EFA0  F019         	goto	i2u427_40
  9415  00333C                     i2u427_41:
  9416  00333C  EFAB  F019         	goto	i2l86
  9417  003340                     i2u427_40:
  9418  003340  A29E               	btfss	158,1,c	;volatile
  9419  003342  EFA5  F019         	goto	i2u428_41
  9420  003346  EFA7  F019         	goto	i2u428_40
  9421  00334A                     i2u428_41:
  9422  00334A  EFAB  F019         	goto	i2l86
  9423  00334E                     i2u428_40:
  9424  00334E                     
  9425                           ;Interrupt_Mgr.c: 34: {;Interrupt_Mgr.c: 35: Timer2_ISR();
  9426  00334E  EC93  F01E         	call	_Timer2_ISR	;wreg free
  9427                           
  9428                           ;Interrupt_Mgr.c: 36: }
  9429  003352  EFBD  F019         	goto	i2l91
  9430  003356                     i2l86:
  9431                           
  9432                           ;Interrupt_Mgr.c: 37: else if (PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  9433  003356  AC9D               	btfss	157,6,c	;volatile
  9434  003358  EFB0  F019         	goto	i2u429_41
  9435  00335C  EFB2  F019         	goto	i2u429_40
  9436  003360                     i2u429_41:
  9437  003360  EFBD  F019         	goto	i2l85
  9438  003364                     i2u429_40:
  9439  003364  AC9E               	btfss	158,6,c	;volatile
  9440  003366  EFB7  F019         	goto	i2u430_41
  9441  00336A  EFB9  F019         	goto	i2u430_40
  9442  00336E                     i2u430_41:
  9443  00336E  EFBD  F019         	goto	i2l85
  9444  003372                     i2u430_40:
  9445  003372                     
  9446                           ;Interrupt_Mgr.c: 38: {;Interrupt_Mgr.c: 39: AN0_ISR();
  9447  003372  EC36  F01E         	call	_AN0_ISR	;wreg free
  9448                           
  9449                           ;Interrupt_Mgr.c: 40: }
  9450  003376  EFBD  F019         	goto	i2l91
  9451  00337A                     i2l85:
  9452  00337A                     i2l91:
  9453  00337A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9454  00337C  0011               	retfie		f
  9455  00337E                     __end_of_INTERRUPT_InterruptManager:
  9456                           	callstack 0
  9457                           
  9458 ;; *************** function _Timer3_ISR *****************
  9459 ;; Defined at:
  9460 ;;		line 20 in file "Timer_3.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;		None
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;		None
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  1    wreg      void 
  9467 ;; Registers used:
  9468 ;;		wreg, status,2
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9474 ;;      Params:         0       0       0       0       0       0       0       0       0
  9475 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9477 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9478 ;;Total ram usage:        0 bytes
  9479 ;; Hardware stack levels used:    1
  9480 ;; This function calls:
  9481 ;;		Nothing
  9482 ;; This function is called by:
  9483 ;;		_INTERRUPT_InterruptManager
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text48
  9488  003D08                     __ptext48:
  9489                           	callstack 0
  9490  003D08                     _Timer3_ISR:
  9491                           	callstack 23
  9492  003D08                     
  9493                           ;Timer_3.c: 22: T3CONbits.TMR3ON = 0;
  9494  003D08  90B1               	bcf	177,0,c	;volatile
  9495  003D0A                     
  9496                           ;Timer_3.c: 23: TMR3H = (uint8_t)(Timer3_Reload>>8);
  9497  003D0A  0100               	movlb	0	; () banked
  9498  003D0C  51FA               	movf	(_Timer3_Reload+1)& (0+255),w,b
  9499  003D0E  6EB3               	movwf	179,c	;volatile
  9500  003D10                     
  9501                           ; BSR set to: 0
  9502                           ;Timer_3.c: 24: TMR3L = (uint8_t) Timer3_Reload;
  9503  003D10  C0F9  FFB2         	movff	_Timer3_Reload,4018	;volatile
  9504  003D14                     
  9505                           ; BSR set to: 0
  9506                           ;Timer_3.c: 26: PIR2bits.TMR3IF = 0;
  9507  003D14  92A1               	bcf	161,1,c	;volatile
  9508  003D16                     
  9509                           ; BSR set to: 0
  9510  003D16  0012               	return		;funcret
  9511  003D18                     __end_of_Timer3_ISR:
  9512                           	callstack 0
  9513                           
  9514 ;; *************** function _Timer2_ISR *****************
  9515 ;; Defined at:
  9516 ;;		line 9 in file "Timer_2.c"
  9517 ;; Parameters:    Size  Location     Type
  9518 ;;		None
  9519 ;; Auto vars:     Size  Location     Type
  9520 ;;		None
  9521 ;; Return value:  Size  Location     Type
  9522 ;;                  1    wreg      void 
  9523 ;; Registers used:
  9524 ;;		wreg, status,2
  9525 ;; Tracked objects:
  9526 ;;		On entry : 0/0
  9527 ;;		On exit  : 0/0
  9528 ;;		Unchanged: 0/0
  9529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9530 ;;      Params:         0       0       0       0       0       0       0       0       0
  9531 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9532 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9533 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9534 ;;Total ram usage:        0 bytes
  9535 ;; Hardware stack levels used:    1
  9536 ;; This function calls:
  9537 ;;		Nothing
  9538 ;; This function is called by:
  9539 ;;		_INTERRUPT_InterruptManager
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           	psect	text49
  9544  003D26                     __ptext49:
  9545                           	callstack 0
  9546  003D26                     _Timer2_ISR:
  9547                           	callstack 23
  9548  003D26                     
  9549                           ;Timer_2.c: 14: T2CONbits.TMR2ON = 0;
  9550  003D26  94CA               	bcf	202,2,c	;volatile
  9551  003D28                     
  9552                           ;Timer_2.c: 16: TMR2 = 0;
  9553  003D28  0E00               	movlw	0
  9554  003D2A  6ECC               	movwf	204,c	;volatile
  9555  003D2C                     
  9556                           ;Timer_2.c: 17: PIE1bits.TMR2IE = 0;
  9557  003D2C  929D               	bcf	157,1,c	;volatile
  9558  003D2E                     
  9559                           ;Timer_2.c: 18: PIR1bits.TMR2IF = 0;
  9560  003D2E  929E               	bcf	158,1,c	;volatile
  9561  003D30  0012               	return		;funcret
  9562  003D32                     __end_of_Timer2_ISR:
  9563                           	callstack 0
  9564                           
  9565 ;; *************** function _Timer0_ISR *****************
  9566 ;; Defined at:
  9567 ;;		line 19 in file "Timer_0.c"
  9568 ;; Parameters:    Size  Location     Type
  9569 ;;		None
  9570 ;; Auto vars:     Size  Location     Type
  9571 ;;		None
  9572 ;; Return value:  Size  Location     Type
  9573 ;;                  1    wreg      void 
  9574 ;; Registers used:
  9575 ;;		wreg, status,2, status,0, cstack
  9576 ;; Tracked objects:
  9577 ;;		On entry : 0/0
  9578 ;;		On exit  : 0/0
  9579 ;;		Unchanged: 0/0
  9580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9581 ;;      Params:         0       0       0       0       0       0       0       0       0
  9582 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9584 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9585 ;;Total ram usage:        0 bytes
  9586 ;; Hardware stack levels used:    1
  9587 ;; Hardware stack levels required when called:    1
  9588 ;; This function calls:
  9589 ;;		_CaptureTemp
  9590 ;; This function is called by:
  9591 ;;		_INTERRUPT_InterruptManager
  9592 ;; This function uses a non-reentrant model
  9593 ;;
  9594                           
  9595                           	psect	text50
  9596  0039BA                     __ptext50:
  9597                           	callstack 0
  9598  0039BA                     _Timer0_ISR:
  9599                           	callstack 22
  9600  0039BA                     
  9601                           ;Timer_0.c: 20: TMR0H = Timer0_Reload >> 8;
  9602  0039BA  0100               	movlb	0	; () banked
  9603  0039BC  51FC               	movf	(_Timer0_Reload+1)& (0+255),w,b
  9604  0039BE  6ED7               	movwf	215,c	;volatile
  9605  0039C0                     
  9606                           ; BSR set to: 0
  9607                           ;Timer_0.c: 21: TMR0L = Timer0_Reload;
  9608  0039C0  C0FB  FFD6         	movff	_Timer0_Reload,4054	;volatile
  9609  0039C4                     
  9610                           ; BSR set to: 0
  9611                           ;Timer_0.c: 22: INTCONbits.TMR0IF = 0;
  9612  0039C4  94F2               	bcf	242,2,c	;volatile
  9613  0039C6                     
  9614                           ; BSR set to: 0
  9615                           ;Timer_0.c: 24: if (LATAbits.LATA5 == 0) LATAbits.LATA5 = 1;
  9616  0039C6  BA89               	btfsc	137,5,c	;volatile
  9617  0039C8  EFE8  F01C         	goto	i2u407_41
  9618  0039CC  EFEA  F01C         	goto	i2u407_40
  9619  0039D0                     i2u407_41:
  9620  0039D0  EFEB  F01C         	goto	i2l4857
  9621  0039D4                     i2u407_40:
  9622  0039D4                     
  9623                           ; BSR set to: 0
  9624  0039D4  8A89               	bsf	137,5,c	;volatile
  9625  0039D6                     i2l4857:
  9626                           
  9627                           ; BSR set to: 0
  9628                           ;Timer_0.c: 25: if (++iSampleCntr == 10)
  9629  0039D6  2BE9               	incf	_iSampleCntr& (0+255),f,b
  9630  0039D8  0E0A               	movlw	10
  9631  0039DA  19E9               	xorwf	_iSampleCntr& (0+255),w,b
  9632  0039DC  A4D8               	btfss	status,2,c
  9633  0039DE  EFF3  F01C         	goto	i2u408_41
  9634  0039E2  EFF5  F01C         	goto	i2u408_40
  9635  0039E6                     i2u408_41:
  9636  0039E6  EFF9  F01C         	goto	i2l4863
  9637  0039EA                     i2u408_40:
  9638  0039EA                     
  9639                           ; BSR set to: 0
  9640                           ;Timer_0.c: 26: {;Timer_0.c: 27: iSampleCntr = 0;
  9641  0039EA  0E00               	movlw	0
  9642  0039EC  6FE9               	movwf	_iSampleCntr& (0+255),b
  9643  0039EE                     
  9644                           ; BSR set to: 0
  9645                           ;Timer_0.c: 28: CaptureTemp();
  9646  0039EE  ECA9  F01E         	call	_CaptureTemp	;wreg free
  9647  0039F2                     i2l4863:
  9648                           
  9649                           ;Timer_0.c: 29: };Timer_0.c: 31: if (++imSCntr == 200)
  9650  0039F2  0100               	movlb	0	; () banked
  9651  0039F4  4BD5               	infsnz	_imSCntr& (0+255),f,b
  9652  0039F6  2BD6               	incf	(_imSCntr+1)& (0+255),f,b
  9653  0039F8  0EC8               	movlw	200
  9654  0039FA  19D5               	xorwf	_imSCntr& (0+255),w,b
  9655  0039FC  11D6               	iorwf	(_imSCntr+1)& (0+255),w,b
  9656  0039FE  A4D8               	btfss	status,2,c
  9657  003A00  EF04  F01D         	goto	i2u409_41
  9658  003A04  EF06  F01D         	goto	i2u409_40
  9659  003A08                     i2u409_41:
  9660  003A08  EF0C  F01D         	goto	i2l185
  9661  003A0C                     i2u409_40:
  9662  003A0C                     
  9663                           ; BSR set to: 0
  9664                           ;Timer_0.c: 32: {;Timer_0.c: 34: gb_UpdateTime = 1;
  9665  003A0C  0E01               	movlw	1
  9666  003A0E  6FF2               	movwf	_gb_UpdateTime& (0+255),b	;volatile
  9667                           
  9668                           ;Timer_0.c: 35: imSCntr = 0;
  9669  003A10  0E00               	movlw	0
  9670  003A12  6FD6               	movwf	(_imSCntr+1)& (0+255),b
  9671  003A14  0E00               	movlw	0
  9672  003A16  6FD5               	movwf	_imSCntr& (0+255),b
  9673  003A18                     i2l185:
  9674                           
  9675                           ; BSR set to: 0
  9676  003A18  0012               	return		;funcret
  9677  003A1A                     __end_of_Timer0_ISR:
  9678                           	callstack 0
  9679                           
  9680 ;; *************** function _CaptureTemp *****************
  9681 ;; Defined at:
  9682 ;;		line 48 in file "TempCalc.c"
  9683 ;; Parameters:    Size  Location     Type
  9684 ;;		None
  9685 ;; Auto vars:     Size  Location     Type
  9686 ;;		None
  9687 ;; Return value:  Size  Location     Type
  9688 ;;                  1    wreg      void 
  9689 ;; Registers used:
  9690 ;;		wreg, status,2
  9691 ;; Tracked objects:
  9692 ;;		On entry : 0/0
  9693 ;;		On exit  : 0/0
  9694 ;;		Unchanged: 0/0
  9695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9696 ;;      Params:         0       0       0       0       0       0       0       0       0
  9697 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9698 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9699 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9700 ;;Total ram usage:        0 bytes
  9701 ;; Hardware stack levels used:    1
  9702 ;; This function calls:
  9703 ;;		Nothing
  9704 ;; This function is called by:
  9705 ;;		_Timer0_ISR
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709                           	psect	text51
  9710  003D52                     __ptext51:
  9711                           	callstack 0
  9712  003D52                     _CaptureTemp:
  9713                           	callstack 22
  9714  003D52                     
  9715                           ;TempCalc.c: 52: gb_TempCaptured = 0;
  9716  003D52  0E00               	movlw	0
  9717  003D54  0100               	movlb	0	; () banked
  9718  003D56  6FEE               	movwf	_gb_TempCaptured& (0+255),b	;volatile
  9719  003D58                     
  9720                           ; BSR set to: 0
  9721                           ;TempCalc.c: 53: ADCON0bits.GO = 1;
  9722  003D58  82C2               	bsf	194,1,c	;volatile
  9723  003D5A                     
  9724                           ; BSR set to: 0
  9725  003D5A  0012               	return		;funcret
  9726  003D5C                     __end_of_CaptureTemp:
  9727                           	callstack 0
  9728                           
  9729 ;; *************** function _CCP1_ISR *****************
  9730 ;; Defined at:
  9731 ;;		line 32 in file "CCP1.c"
  9732 ;; Parameters:    Size  Location     Type
  9733 ;;		None
  9734 ;; Auto vars:     Size  Location     Type
  9735 ;;		None
  9736 ;; Return value:  Size  Location     Type
  9737 ;;                  1    wreg      void 
  9738 ;; Registers used:
  9739 ;;		wreg, status,2, cstack
  9740 ;; Tracked objects:
  9741 ;;		On entry : 0/0
  9742 ;;		On exit  : 0/0
  9743 ;;		Unchanged: 0/0
  9744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9745 ;;      Params:         0       0       0       0       0       0       0       0       0
  9746 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9747 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9748 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9749 ;;Total ram usage:        0 bytes
  9750 ;; Hardware stack levels used:    1
  9751 ;; Hardware stack levels required when called:    1
  9752 ;; This function calls:
  9753 ;;		_Timer1_Reset
  9754 ;; This function is called by:
  9755 ;;		_INTERRUPT_InterruptManager
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           	psect	text52
  9760  003C26                     __ptext52:
  9761                           	callstack 0
  9762  003C26                     _CCP1_ISR:
  9763                           	callstack 22
  9764  003C26                     
  9765                           ;CCP1.c: 35: giEchoCounter.EPl = CCPR1L;
  9766  003C26  CFBE F0E5          	movff	4030,_giEchoCounter	;volatile
  9767                           
  9768                           ;CCP1.c: 36: giEchoCounter.EPh = CCPR1H;
  9769  003C2A  CFBF F0E6          	movff	4031,_giEchoCounter+1	;volatile
  9770  003C2E                     
  9771                           ;CCP1.c: 39: CCP1CON = 0x00;
  9772  003C2E  0E00               	movlw	0
  9773  003C30  6EBD               	movwf	189,c	;volatile
  9774                           
  9775                           ;CCP1.c: 40: CCPR1H = 0;
  9776  003C32  0E00               	movlw	0
  9777  003C34  6EBF               	movwf	191,c	;volatile
  9778                           
  9779                           ;CCP1.c: 41: CCPR1L = 0;
  9780  003C36  0E00               	movlw	0
  9781  003C38  6EBE               	movwf	190,c	;volatile
  9782  003C3A                     
  9783                           ;CCP1.c: 43: PIR1bits.CCP1IF = 0;
  9784  003C3A  949E               	bcf	158,2,c	;volatile
  9785  003C3C                     
  9786                           ;CCP1.c: 44: PIE1bits.CCP1IE = 0;
  9787  003C3C  949D               	bcf	157,2,c	;volatile
  9788  003C3E                     
  9789                           ;CCP1.c: 45: Timer1_Reset();
  9790  003C3E  EC99  F01E         	call	_Timer1_Reset	;wreg free
  9791  003C42                     
  9792                           ;CCP1.c: 46: gb_EchoDetected = 1;
  9793  003C42  0E01               	movlw	1
  9794  003C44  0100               	movlb	0	; () banked
  9795  003C46  6FF1               	movwf	_gb_EchoDetected& (0+255),b	;volatile
  9796  003C48                     
  9797                           ; BSR set to: 0
  9798  003C48  0012               	return		;funcret
  9799  003C4A                     __end_of_CCP1_ISR:
  9800                           	callstack 0
  9801                           
  9802 ;; *************** function _Timer1_Reset *****************
  9803 ;; Defined at:
  9804 ;;		line 26 in file "Timer_1.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;		None
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;		None
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      void 
  9811 ;; Registers used:
  9812 ;;		wreg, status,2
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9818 ;;      Params:         0       0       0       0       0       0       0       0       0
  9819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9821 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9822 ;;Total ram usage:        0 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; This function calls:
  9825 ;;		Nothing
  9826 ;; This function is called by:
  9827 ;;		_CCP1_ISR
  9828 ;; This function uses a non-reentrant model
  9829 ;;
  9830                           
  9831                           	psect	text53
  9832  003D32                     __ptext53:
  9833                           	callstack 0
  9834  003D32                     _Timer1_Reset:
  9835                           	callstack 22
  9836  003D32                     
  9837                           ;Timer_1.c: 28: T1CONbits.TMR1ON = 0;
  9838  003D32  90CD               	bcf	205,0,c	;volatile
  9839  003D34                     
  9840                           ;Timer_1.c: 29: TMR1H = 0;
  9841  003D34  0E00               	movlw	0
  9842  003D36  6ECF               	movwf	207,c	;volatile
  9843                           
  9844                           ;Timer_1.c: 30: TMR1L = 0;
  9845  003D38  0E00               	movlw	0
  9846  003D3A  6ECE               	movwf	206,c	;volatile
  9847  003D3C  0012               	return		;funcret
  9848  003D3E                     __end_of_Timer1_Reset:
  9849                           	callstack 0
  9850                           
  9851 ;; *************** function _AN0_ISR *****************
  9852 ;; Defined at:
  9853 ;;		line 40 in file "TempCalc.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;		None
  9856 ;; Auto vars:     Size  Location     Type
  9857 ;;		None
  9858 ;; Return value:  Size  Location     Type
  9859 ;;                  1    wreg      void 
  9860 ;; Registers used:
  9861 ;;		wreg, status,2, status,0
  9862 ;; Tracked objects:
  9863 ;;		On entry : 0/0
  9864 ;;		On exit  : 0/0
  9865 ;;		Unchanged: 0/0
  9866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9867 ;;      Params:         0       0       0       0       0       0       0       0       0
  9868 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9869 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9870 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9871 ;;Total ram usage:        0 bytes
  9872 ;; Hardware stack levels used:    1
  9873 ;; This function calls:
  9874 ;;		Nothing
  9875 ;; This function is called by:
  9876 ;;		_INTERRUPT_InterruptManager
  9877 ;; This function uses a non-reentrant model
  9878 ;;
  9879                           
  9880                           	psect	text54
  9881  003C6C                     __ptext54:
  9882                           	callstack 0
  9883  003C6C                     _AN0_ISR:
  9884                           	callstack 23
  9885  003C6C                     
  9886                           ;TempCalc.c: 42: giTempCapture = (uint8_t) (ADRESH << 8);
  9887  003C6C  0E00               	movlw	0
  9888  003C6E  0100               	movlb	0	; () banked
  9889  003C70  6FF8               	movwf	(_giTempCapture+1)& (0+255),b	;volatile
  9890  003C72  0E00               	movlw	0
  9891  003C74  6FF7               	movwf	_giTempCapture& (0+255),b	;volatile
  9892  003C76                     
  9893                           ; BSR set to: 0
  9894                           ;TempCalc.c: 43: giTempCapture += ADRESL;
  9895  003C76  50C3               	movf	195,w,c	;volatile
  9896  003C78  27F7               	addwf	_giTempCapture& (0+255),f,b	;volatile
  9897  003C7A  0E00               	movlw	0
  9898  003C7C  23F8               	addwfc	(_giTempCapture+1)& (0+255),f,b	;volatile
  9899  003C7E                     
  9900                           ; BSR set to: 0
  9901                           ;TempCalc.c: 44: PIR1bits.ADIF = 0;
  9902  003C7E  9C9E               	bcf	158,6,c	;volatile
  9903  003C80                     
  9904                           ; BSR set to: 0
  9905                           ;TempCalc.c: 45: gb_TempCaptured = 1;
  9906  003C80  0E01               	movlw	1
  9907  003C82  6FEE               	movwf	_gb_TempCaptured& (0+255),b	;volatile
  9908  003C84                     
  9909                           ; BSR set to: 0
  9910  003C84  0012               	return		;funcret
  9911  003C86                     __end_of_AN0_ISR:
  9912                           	callstack 0
  9913                           
  9914                           	psect	rparam
  9915  0000                     
  9916                           	psect	temp
  9917  00005F                     btemp:
  9918                           	callstack 0
  9919  00005F                     	ds	1
  9920  0000                     int$flags	set	btemp
  9921  0000                     wtemp8	set	btemp+1
  9922  0000                     ttemp5	set	btemp+1
  9923  0000                     ttemp6	set	btemp+4
  9924  0000                     ttemp7	set	btemp+8
  9925                           
  9926                           	psect	idloc
  9927                           
  9928                           ;Config register IDLOC0 @ 0x200000
  9929                           ;	unspecified, using default values
  9930  200000                     	org	2097152
  9931  200000  FF                 	db	255
  9932                           
  9933                           ;Config register IDLOC1 @ 0x200001
  9934                           ;	unspecified, using default values
  9935  200001                     	org	2097153
  9936  200001  FF                 	db	255
  9937                           
  9938                           ;Config register IDLOC2 @ 0x200002
  9939                           ;	unspecified, using default values
  9940  200002                     	org	2097154
  9941  200002  FF                 	db	255
  9942                           
  9943                           ;Config register IDLOC3 @ 0x200003
  9944                           ;	unspecified, using default values
  9945  200003                     	org	2097155
  9946  200003  FF                 	db	255
  9947                           
  9948                           ;Config register IDLOC4 @ 0x200004
  9949                           ;	unspecified, using default values
  9950  200004                     	org	2097156
  9951  200004  FF                 	db	255
  9952                           
  9953                           ;Config register IDLOC5 @ 0x200005
  9954                           ;	unspecified, using default values
  9955  200005                     	org	2097157
  9956  200005  FF                 	db	255
  9957                           
  9958                           ;Config register IDLOC6 @ 0x200006
  9959                           ;	unspecified, using default values
  9960  200006                     	org	2097158
  9961  200006  FF                 	db	255
  9962                           
  9963                           ;Config register IDLOC7 @ 0x200007
  9964                           ;	unspecified, using default values
  9965  200007                     	org	2097159
  9966  200007  FF                 	db	255
  9967                           
  9968                           	psect	config
  9969                           
  9970                           ;Config register CONFIG1L @ 0x300000
  9971                           ;	PLL Prescaler Selection bits
  9972                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  9973                           ;	System Clock Postscaler Selection bits
  9974                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9975                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9976                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  9977  300000                     	org	3145728
  9978  300000  21                 	db	33
  9979                           
  9980                           ;Config register CONFIG1H @ 0x300001
  9981                           ;	Oscillator Selection bits
  9982                           ;	FOSC = HS, HS oscillator (HS)
  9983                           ;	Fail-Safe Clock Monitor Enable bit
  9984                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9985                           ;	Internal/External Oscillator Switchover bit
  9986                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9987  300001                     	org	3145729
  9988  300001  0C                 	db	12
  9989                           
  9990                           ;Config register CONFIG2L @ 0x300002
  9991                           ;	Power-up Timer Enable bit
  9992                           ;	PWRT = OFF, PWRT disabled
  9993                           ;	Brown-out Reset Enable bits
  9994                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9995                           ;	Brown-out Reset Voltage bits
  9996                           ;	BORV = 2, Setting 1 2.79V
  9997                           ;	USB Voltage Regulator Enable bit
  9998                           ;	VREGEN = OFF, USB voltage regulator disabled
  9999  300002                     	org	3145730
 10000  300002  11                 	db	17
 10001                           
 10002                           ;Config register CONFIG2H @ 0x300003
 10003                           ;	Watchdog Timer Enable bit
 10004                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10005                           ;	Watchdog Timer Postscale Select bits
 10006                           ;	WDTPS = 32768, 1:32768
 10007  300003                     	org	3145731
 10008  300003  1E                 	db	30
 10009                           
 10010                           ; Padding undefined space
 10011  300004                     	org	3145732
 10012  300004  FF                 	db	255
 10013                           
 10014                           ;Config register CONFIG3H @ 0x300005
 10015                           ;	CCP2 MUX bit
 10016                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10017                           ;	PORTB A/D Enable bit
 10018                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10019                           ;	Low-Power Timer 1 Oscillator Enable bit
 10020                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10021                           ;	MCLR Pin Enable bit
 10022                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10023  300005                     	org	3145733
 10024  300005  81                 	db	129
 10025                           
 10026                           ;Config register CONFIG4L @ 0x300006
 10027                           ;	Stack Full/Underflow Reset Enable bit
 10028                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10029                           ;	Single-Supply ICSP Enable bit
 10030                           ;	LVP = OFF, Single-Supply ICSP disabled
 10031                           ;	Extended Instruction Set Enable bit
 10032                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10033                           ;	Background Debugger Enable bit
 10034                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10035  300006                     	org	3145734
 10036  300006  81                 	db	129
 10037                           
 10038                           ; Padding undefined space
 10039  300007                     	org	3145735
 10040  300007  FF                 	db	255
 10041                           
 10042                           ;Config register CONFIG5L @ 0x300008
 10043                           ;	Code Protection bit
 10044                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10045                           ;	Code Protection bit
 10046                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10047                           ;	Code Protection bit
 10048                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10049  300008                     	org	3145736
 10050  300008  0F                 	db	15
 10051                           
 10052                           ;Config register CONFIG5H @ 0x300009
 10053                           ;	Boot Block Code Protection bit
 10054                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10055                           ;	Data EEPROM Code Protection bit
 10056                           ;	CPD = OFF, Data EEPROM is not code-protected
 10057  300009                     	org	3145737
 10058  300009  C0                 	db	192
 10059                           
 10060                           ;Config register CONFIG6L @ 0x30000A
 10061                           ;	Write Protection bit
 10062                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10063                           ;	Write Protection bit
 10064                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10065                           ;	Write Protection bit
 10066                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10067  30000A                     	org	3145738
 10068  30000A  0F                 	db	15
 10069                           
 10070                           ;Config register CONFIG6H @ 0x30000B
 10071                           ;	Configuration Register Write Protection bit
 10072                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10073                           ;	Boot Block Write Protection bit
 10074                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10075                           ;	Data EEPROM Write Protection bit
 10076                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10077  30000B                     	org	3145739
 10078  30000B  E0                 	db	224
 10079                           
 10080                           ;Config register CONFIG7L @ 0x30000C
 10081                           ;	Table Read Protection bit
 10082                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10083                           ;	Table Read Protection bit
 10084                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10085                           ;	Table Read Protection bit
 10086                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10087  30000C                     	org	3145740
 10088  30000C  0F                 	db	15
 10089                           
 10090                           ;Config register CONFIG7H @ 0x30000D
 10091                           ;	Boot Block Table Read Protection bit
 10092                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10093  30000D                     	org	3145741
 10094  30000D  40                 	db	64
 10095                           tosu	equ	0xFFF
 10096                           tosh	equ	0xFFE
 10097                           tosl	equ	0xFFD
 10098                           stkptr	equ	0xFFC
 10099                           pclatu	equ	0xFFB
 10100                           pclath	equ	0xFFA
 10101                           pcl	equ	0xFF9
 10102                           tblptru	equ	0xFF8
 10103                           tblptrh	equ	0xFF7
 10104                           tblptrl	equ	0xFF6
 10105                           tablat	equ	0xFF5
 10106                           prodh	equ	0xFF4
 10107                           prodl	equ	0xFF3
 10108                           indf0	equ	0xFEF
 10109                           postinc0	equ	0xFEE
 10110                           postdec0	equ	0xFED
 10111                           preinc0	equ	0xFEC
 10112                           plusw0	equ	0xFEB
 10113                           fsr0h	equ	0xFEA
 10114                           fsr0l	equ	0xFE9
 10115                           wreg	equ	0xFE8
 10116                           indf1	equ	0xFE7
 10117                           postinc1	equ	0xFE6
 10118                           postdec1	equ	0xFE5
 10119                           preinc1	equ	0xFE4
 10120                           plusw1	equ	0xFE3
 10121                           fsr1h	equ	0xFE2
 10122                           fsr1l	equ	0xFE1
 10123                           bsr	equ	0xFE0
 10124                           indf2	equ	0xFDF
 10125                           postinc2	equ	0xFDE
 10126                           postdec2	equ	0xFDD
 10127                           preinc2	equ	0xFDC
 10128                           plusw2	equ	0xFDB
 10129                           fsr2h	equ	0xFDA
 10130                           fsr2l	equ	0xFD9
 10131                           status	equ	0xFD8

Data Sizes:
    Strings     50
    Constant    86
    Data        42
    BSS         280
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     81     160
    BANK1           256      0     242
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> trunc@expon(BANK0[2]), floor@expon(BANK0[2]), log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> exp@coeff(CODE[40]), log@coeff(CODE[36]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(COMRAM[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> sLine2(BANK1[100]), sLine1(BANK1[100]), gsTotalSecs(BANK1[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    LCD_WriteLine@iData	PTR unsigned char  size(2) Largest target is 100
		 -> sLine2(BANK1[100]), sLine1(BANK1[100]), 

    LCD_WriteString@iData	PTR unsigned char  size(2) Largest target is 17
		 -> LCD_WriteLine@sLine(COMRAM[17]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _LCD_Init->_LCD_WriteCmd
    _InitTankVariables->___flmul
    _pow->___flmul
    _exp->___flmul
    _floor->_frexp
    _ComputeWaterVol->___flmul
    _sqrt->___fladd
    _LCD_DisplayResults->_sprintf
    _LCD_WriteLine->_LCD_WriteString
    _LCD_WriteString->_LCD_WriteChar
    _ComputeTemp->___flmul
    _round->___flmul
    _trunc->_frexp
    ___fltol->___fladd
    ___flsub->_trunc
    _log->___flmul
    _frexp->___fleq
    ___fleq->___xxtofl
    _eval_poly->___flmul
    ___flmul->_frexp
    ___fladd->___fldiv
    ___xxtofl->___fltol
    _ComputeTOD->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_GoTo->_LCD_WriteCmd

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_InitTankVariables
    _InitTankVariables->_pow
    _pow->_exp
    _exp->_ldexp
    _ldexp->_eval_poly
    _ComputeWaterVol->_round
    _ComputeTemp->_log
    _round->___flmul
    ___flsub->_trunc
    _log->_eval_poly
    _eval_poly->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  162701
                                             77 BANK0      4     4      0
                           _AN0_Init
                          _CCP1_Init
                          _CCP2_Init
                         _ComputeTOD
                        _ComputeTemp
                    _ComputeWaterVol
                  _InitTankVariables
                           _LCD_Init
                    _LCD_WriteString
                _StartDepthDetection
                            _SysInit
                        _Timer0_Init
                        _Timer1_Init
                        _Timer2_Init
 ---------------------------------------------------------------------------------
 (1) _Timer2_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SysInit                                              0     0      0       0
                            _OscInit
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OscInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StartDepthDetection                                  0     0      0       0
                      _CCP1_Activate
 ---------------------------------------------------------------------------------
 (2) _CCP1_Activate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     736
                                              6 COMRAM     2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _InitTankVariables                                    4     4      0   72294
                                             73 BANK0      4     4      0
                            ___flmul
                                _pow
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _pow                                                 21    13      8   66784
                                             52 BANK0     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _exp                                                 11     7      4   35599
                                             41 BANK0     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                8     2      6    1958
                                             33 BANK0      8     2      6
                             ___fleq
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                               10     6      4    8752
                                             85 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     273
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _ComputeWaterVol                                     36    36      0   34826
                                             25 BANK0     36    36      0
                 _LCD_DisplayResults
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _round
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                29    25      4    1033
                                             41 COMRAM    29    25      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayResults                                   0     0      0    4294
                           _LCD_GoTo
                      _LCD_WriteLine
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteLine                                       22    20      2     824
                                              8 COMRAM    22    20      2
                    _LCD_WriteString
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      5     3      2     308
                                              3 COMRAM     5     3      2
                      _LCD_WriteChar
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteChar                                        3     3      0      66
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _ComputeTemp                                         12    12      0   51019
                                             39 BANK0     12    12      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                                _log
                              _round
 ---------------------------------------------------------------------------------
 (2) _round                                                8     4      4   12547
                                             17 BANK0      8     4      4
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub
                              _trunc
 ---------------------------------------------------------------------------------
 (3) _trunc                                               10     6      4    4472
                                             85 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     913
                                             41 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4257
                                              6 BANK0      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   21680
                                             33 BANK0      6     2      4
                            ___fladd
                             ___fleq
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                8     2      6    2238
                                             77 COMRAM     8     2      6
                            ___fladd (ARG)
                             ___fleq
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    1558
                                             65 COMRAM    12     4      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     8      8    8566
                                             17 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4454
                                             85 COMRAM     8     0      8
                                              0 BANK0     17    17      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3478
                                             25 COMRAM    16     8      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1006
                                             51 COMRAM    14    10      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2615
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _ComputeTOD                                           2     2      0    3494
                                             39 COMRAM     2     2      0
                           _LCD_GoTo
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             31    21     10    2463
                                             12 COMRAM    27    17     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_GoTo                                             7     6      1    1007
                                              6 COMRAM     7     6      1
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         6     4      2     644
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _CCP2_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AN0_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0       0
                            _AN0_ISR
                           _CCP1_ISR
                         _Timer0_ISR
                         _Timer2_ISR
                         _Timer3_ISR
 ---------------------------------------------------------------------------------
 (8) _Timer3_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                           0     0      0       0
                        _CaptureTemp
 ---------------------------------------------------------------------------------
 (9) _CaptureTemp                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP1_ISR                                             0     0      0       0
                       _Timer1_Reset
 ---------------------------------------------------------------------------------
 (9) _Timer1_Reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _AN0_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AN0_Init
   _CCP1_Init
   _CCP2_Init
   _ComputeTOD
     _LCD_GoTo
       _LCD_WriteCmd
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _ComputeTemp
     ___fladd
       ___fldiv (ARG)
     ___fldiv
     ___flmul
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       _frexp (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fleq (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
       _sqrt (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
     ___flsub
       ___fladd
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       _trunc (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
     ___xxtofl
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
     _log
       ___fladd
         ___fldiv (ARG)
       ___fleq
         ___fladd (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
       ___flmul
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
         _sqrt (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       ___xxtofl
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       _eval_poly
         ___fladd
           ___fldiv (ARG)
         ___flmul
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fleq (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
       _frexp
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fleq (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
     _round
       ___fladd
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
         _sqrt (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _trunc (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
           ___xxtofl
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _frexp
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fleq (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
       _trunc (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
   _ComputeWaterVol
     _LCD_DisplayResults
       _LCD_GoTo
         _LCD_WriteCmd
       _LCD_WriteLine
         _LCD_WriteString
           _LCD_WriteChar
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     ___fladd
       ___fldiv (ARG)
     ___fldiv
     ___flmul
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       _frexp (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fleq (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
       _sqrt (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
     ___flsub
       ___fladd
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       _trunc (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
     ___xxtofl
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
     _round
       ___fladd
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
         _sqrt (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _trunc (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
           ___xxtofl
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _frexp
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fleq (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
       _trunc (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
     _sqrt
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
   _InitTankVariables
     ___flmul
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       _frexp (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fleq (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
       _sqrt (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
     _pow
       ___fleq
         ___fladd (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
       ___flge
       ___flmul
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
         _sqrt (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       ___flneg
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
       ___xxtofl
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       _exp
         ___fldiv
         ___fleq
           ___fladd (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
         ___flge
         ___flmul
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fleq (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _trunc (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
             ___xxtofl
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
             _frexp
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fleq (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___fltol (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                     ___fldiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _eval_poly
           ___fladd
             ___fldiv (ARG)
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fleq (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___fltol (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
         _floor
           ___fladd
             ___fldiv (ARG)
           ___flge
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
           ___xxtofl
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _frexp
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fleq (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
         _ldexp
           ___fleq
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
           _eval_poly (ARG)
             ___fladd
               ___fldiv (ARG)
             ___flmul
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fleq (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___fltol (ARG)
                       ___fladd (ARG)
                         ___fldiv (ARG)
                       ___fldiv (ARG)
               _sqrt (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
         _log (ARG)
           ___fladd
             ___fldiv (ARG)
           ___fleq
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fleq (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___fltol (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           ___xxtofl
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
             ___flmul
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fleq (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___fltol (ARG)
                       ___fladd (ARG)
                         ___fldiv (ARG)
                       ___fldiv (ARG)
               _sqrt (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
           _frexp
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fleq (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
       _log
         ___fladd
           ___fldiv (ARG)
         ___fleq
           ___fladd (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
         ___flmul
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fleq (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         ___xxtofl
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _eval_poly
           ___fladd
             ___fldiv (ARG)
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fleq (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___fltol (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
         _frexp
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
     _sqrt
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteChar
   _StartDepthDetection
     _CCP1_Activate
   _SysInit
     _OscInit
     _PIN_MANAGER_Initialize
   _Timer0_Init
   _Timer1_Init
   _Timer2_Init

 _INTERRUPT_InterruptManager (ROOT)
   _AN0_ISR
   _CCP1_ISR
     _Timer1_Reset
   _Timer0_ISR
     _CaptureTemp
   _Timer2_ISR
   _Timer3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F2       7       94.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     51      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1F0      20        0.0%
DATA                 0      0     1F0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu May 27 09:36:31 2021

                       ___fldiv@aexp 0019                         ___fldiv@bexp 0018  
                 __size_of_CCP1_Init 0012                         ___fldiv@sign 0011  
                 __size_of_CCP2_Init 0012                  __end_of_CaptureTemp 3D5C  
                ___wmul@multiplicand 0003                                  l102 3D46  
                                l105 3D50                                  l260 3CBE  
                                l620 3CE2                                  l188 3C98  
                                l452 2DB0                                  l614 3D06  
                                l545 3BFE                                  l811 3A74  
                                l803 34FE                                  l468 32B4  
                      ??_ComputeTemp 005E                                  l760 3ACC  
                                l770 38EC                                  l763 3780  
                                l780 3AD0                                  l685 3CF4  
                                l766 38E8                                  l782 3AD2  
                                l775 3934                                  l768 38EA  
                                l784 3AD4                                  l777 3954  
                                l794 3870                                  l787 3B14  
                                l788 3B1C                                  l888 3CD0  
                                l979 3D24                                  l988 246C  
                                _PR2 000FCB                                  _exp 1EEE  
                                _log 2882                      __end_of_AN0_ISR 3C86  
                                _pow 246E                                  wreg 000FE8  
                  ??_LCD_WriteString 0006                         ___flmul@aexp 0069  
                       ___flmul@bexp 006A                         ___flmul@sign 0064  
                       ___flmul@temp 006F                         ___flmul@prod 006B  
                       ___fltol@exp1 0033                                 l1114 132A  
                               l1143 1534                                 l1401 365E  
                               l1146 3C24                                 l1412 3B9C  
                               l1092 2EC2                                 l1407 3086  
                               l1079 3CAC                                 l1408 30CC  
                               l4001 2F18                                 l1089 1EEC  
                               l4003 2F1A                                 l1435 2FC8  
                               l4005 2F2A                                 l4111 38EE  
                               l4031 2FA8                                 l4015 2F54  
                               l4007 2F2E                                 l4103 37FA  
                               l1632 38E4                                 l1704 3B64  
                               l4121 3936                                 l4113 38F2  
                               l1625 38DC                                 l1721 16F2  
                               l4201 166C                                 l4041 26EE  
                               l4033 2FB8                                 l4025 2F7C  
                               l4017 2F5E                                 l4009 2F3C  
                               l4105 3802                                 l5001 1C22  
                               l1642 39B8                                 l1730 17DA  
                               l4123 3938                                 l4115 3914  
                               l1635 39B0                                 l4131 3BC4  
                               l4211 16BE                                 l4203 1686  
                               l4051 2766                                 l4043 2734  
                               l4027 2F88                                 l4019 2F68  
                               l4107 3832                                 l5011 1E86  
                               l1716 18CE                                 l1812 2880  
                               l4117 392A                                 l4301 3894  
                               l4133 3BC8                                 l4125 3BA0  
                               l4221 171A                                 l4213 16CE  
                               l4205 1696                                 l4061 27EE  
                               l4053 2772                                 l4045 274A  
                               l4037 26D0                                 l4029 2F98  
                               l4109 3834                                 l5021 1EE6  
                               l5013 1EA2                                 l5005 1D7A  
                               l5101 2CCA                                 l1718 172E  
                               l1662 0A78                                 l4119 392C  
                               l4311 38CE                                 l4303 389C  
                               l4127 3BA4                                 l5031 31FA  
                               l1727 1774                                 l4231 175A  
                               l4223 171C                                 l4215 16E2  
                               l4207 16A6                                 l4151 1562  
                               l4143 1536                                 l4071 282C  
                               l1823 2818                                 l4063 27FA  
                               l4055 27A4                                 l4039 26E0  
                               l1671 0D48                                 l1663 0A66  
                               l5023 1EE8                                 l5015 1EB0  
                               l5007 1D96                                 l1911 2B60  
                               l1903 21C4                                 l5111 2CE4  
                               l5103 2CD4                                 l1832 3BCE  
                               l1816 27BC                                 l1664 0A2C  
                               l1752 1174                                 l4313 38D0  
                               l4305 38AA                                 l4321 3970  
                               l4137 3C00                                 l4129 3BB4  
                               l4401 1182                                 l5041 3238  
                               l5033 320C                                 l5025 31D2  
                               l1729 17EC                                 l4241 1796  
                               l4233 1764                                 l4225 172C  
                               l4217 16F0                                 l4209 16B6  
                               l4161 159C                                 l4153 1572  
                               l4145 1542                                 l4073 2850  
                               l4065 2808                                 l4057 27A6  
                               l4049 275E                                 l1809 2724  
                               l5017 1EC8                                 l5009 1E62  
                               l1913 2B50                                 l5121 2CF6  
                               l5113 2CE8                                 l5105 2CD8  
                               l4315 38D6                                 l4307 38B0  
                               l4331 39AA                                 l4323 3978  
                               l4139 3C1C                                 l4411 11D2  
                               l4403 1194                                 l5051 3298  
                               l5035 3210                                 l5043 3240  
                               l5027 31D6                                 l4251 1808  
                               l4243 17A4                                 l4235 1772  
                               l4227 173E                                 l4219 16FC  
                               l4171 15C8                                 l4163 15A2  
                               l4155 1582                                 l4147 1550  
                               l4075 2860                                 l4067 2826  
                               l4059 27B2                                 l1755 1006  
                               l4091 33D4                                 l4083 337E  
                               l5019 1ECE                                 l5131 2D16  
                               l5123 2CF8                                 l5115 2CEC  
                               l5107 2CDC                                 l1748 0E10  
                               l1860 3440                                 l1844 2A1E  
                               l1924 35B4                                 l4309 38C6  
                               l4325 3986                                 l4317 3956  
                               l4501 148A                                 l4421 1244  
                               l4413 11DA                                 l4405 11A0  
                               l5053 329C                                 l5045 325C  
                               l5037 3222                                 l5029 31F2  
                               l4261 1874                                 l4253 1816  
                               l4245 17D2                                 l4229 1754  
                               l4237 1784                                 l4181 1602  
                               l4173 15D8                                 l4165 15A8  
                               l4157 1584                                 l4149 1552  
                               l4077 286E                                 l4069 2828  
                               l3701 09AA                                 l1765 1136  
                               l1757 107E                                 l1853 31C0  
                               l4333 30CE                                 l3621 3622  
                               l4093 3416                                 l4085 33B0  
                               l4341 2B94                                 l5141 2D46  
                               l5133 2D28                                 l5125 2D0A  
                               l5117 2CF0                                 l5109 2CE0  
                               l1758 106C                                 l1854 31D0  
                               l1918 3700                                 l4327 399C  
                               l4319 3968                                 l4511 14F0  
                               l4503 1496                                 l4431 1280  
                               l4423 125A                                 l4415 11F6  
                               l4407 11A8                                 l5055 32AE  
                               l5047 3266                                 l5039 3226  
                               l4271 18C2                                 l4263 188E  
                               l4255 1840                                 l4239 1792  
                               l4183 1618                                 l4175 15E8  
                               l4167 15B6                                 l4159 158C  
                               l4079 2870                                 l1679 0B92  
                               l3711 09BE                                 l3703 09AE  
                               l4335 3118                                 l3623 3632  
                               l3615 35B6                                 l4095 3426  
                               l4087 33C0                                 l3631 3AD6  
                               l5151 2D7C                                 l5143 2D4C  
                               l5135 2D2C                                 l5127 2D0E  
                               l5119 2CF4                                 l1688 0C62  
                               l1864 2C98                                 l1880 24E2  
                               l4521 3A1C                                 l4329 39A4  
                               l4513 14F4                                 l4505 149A  
                               l4441 12D8                                 l4433 129E  
                               l4425 1264                                 l4417 121E  
                               l4409 11B4                                 l5057 32B2  
                               l5049 3276                                 l4273 18C4  
                               l4265 18AA                                 l4249 17FC  
                               l4257 1844                                 l4185 1628  
                               l4193 1648                                 l4177 15EA  
                               l4169 15B8                                 l1689 0C50  
                               l3801 0C24                                 l3721 09F8  
                               l3713 09C2                                 l3705 09B2  
                               l3641 0896                                 l4337 31AC  
                               l3625 3656                                 l3617 35E4  
                               l4097 342E                                 l4281 3B1E  
                               l3633 3ADA                                 l1777 1BEA  
                               l4353 2C0A                                 l4345 2BAA  
                               l4601 1FEC                                 l1881 26CC  
                               l5153 2D98                                 l5145 2D5C  
                               l5137 2D32                                 l5129 2D12  
                               l4523 3A2C                                 l4531 3A64  
                               l4507 14A2                                 l4451 1338  
                               l4443 12E0                                 l4435 12B2  
                               l4427 1270                                 l4419 1222  
                               l4515 1506                                 l4267 18AE  
                               l4259 185E                                 l4195 1658  
                               l4187 1630                                 l4179 15F2  
                               l3811 0C7E                                 l3803 0C32  
                               l3731 0A4A                                 l3723 0A14  
                               l3715 09C6                                 l3707 09B6  
                               l3651 08D6                                 l3643 08A4  
                               l3627 365C                                 l3619 35F4  
                               l4099 3430                                 l4283 3B30  
                               l3635 3AFC                                 l4291 3B8C  
                               l4371 2C88                                 l4355 2C20  
                               l4347 2BEE                                 l4339 2B62  
                               l4611 2094                                 l4603 1FFC  
                               l5155 2DA6                                 l5147 2D6A  
                               l5139 2D42                                 l5091 2C9A  
                               l4525 3A3C                                 l4509 14E4  
                               l4453 1348                                 l4461 136E  
                               l4517 1528                                 l4445 12EC  
                               l4437 12B6                                 l4429 127C  
                               l4269 18BC                                 l4197 1658  
                               l4189 1634                                 l3821 0CE8  
                               l3813 0C8C                                 l3805 0C48  
                               l3741 0A96                                 l3733 0A58  
                               l3725 0A24                                 l3709 09BA  
                               l3717 09CA                                 l3661 0908  
                               l3653 08D8                                 l3645 08A6  
                               l3901 0ED6                                 l4701 3660  
                               l3637 3B12                                 l4541 345E  
                               l4533 3442                                 l4381 2A5A  
                               l4365 2C4A                                 l4357 2C28  
                               l4613 20E0                                 l4605 2020  
                               l1885 26BC                                 l5157 2DAA  
                               l5149 2D6C                                 l5093 2C9E  
                               l4527 3A50                                 l4295 3872  
                               l4471 13A0                                 l4463 137E  
                               l4455 1350                                 l4439 12BA  
                               l3831 0D22                                 l3823 0D08  
                               l3815 0CC6                                 l3751 0AD6  
                               l3735 0A5A                                 l3727 0A3A  
                               l3719 09CE                                 l3671 0930  
                               l3663 090A                                 l3647 08B6  
                               l3655 08E0                                 l3639 088A  
                               l3911 0F38                                 l3903 0EE2  
                               l4631 352C                                 l4703 36A8  
                               l4551 34C2                                 l4543 347A  
                               l4711 18DC                                 l4287 3B66  
                               l4391 2A98                                 l4375 2A20  
                               l4359 2C36                                 l4623 218C  
                               l4615 2132                                 l4607 2054  
                               l5095 2CA2                                 l4529 3A60  
                               l4297 387A                                 l4481 13E6  
                               l4457 135E                                 l4465 1386  
                               l4449 12F2                                 l3833 0D28  
                               l3825 0D0C                                 l3809 0C72  
                               l3817 0CC8                                 l3761 0B00  
                               l3753 0AE2                                 l3745 0AAA  
                               l3737 0A64                                 l3729 0A46  
                               l3681 096A                                 l3673 0940  
                               l3665 0910                                 l3657 08F0  
                               l3649 08C6                                 l3921 0FCE  
                               l3913 0F44                                 l3905 0EF2  
                               l3841 0D4A                                 l4561 2892  
                               l4641 35A4                                 l4705 36DC  
                               l4553 34C6                                 l4545 347E  
                               l4801 1BE4                                 l4721 191C  
                               l4713 18EA                                 l4289 3B7C  
                               l4393 2AAC                                 l4385 2A6E  
                               l4377 2A3C                                 l4369 2C5E  
                               l4617 2144                                 l4609 2078  
                               l5097 2CAE                                 l4299 388C  
                               l4491 143A                                 l4483 13FC  
                               l4475 13CE                                 l4467 138A  
                               l4459 1362                                 l3835 0D36  
                               l3827 0D1A                                 l3819 0CD8  
                               l3771 0B72                                 l3755 0AE6  
                               l3747 0ABA                                 l3739 0A86  
                               l3763 0B06                                 l3691 0996  
                               l3683 097C                                 l3675 0950  
                               l3667 091E                                 l3659 08F6  
                               l3931 1024                                 l3923 0FEC  
                               l3915 0F60                                 l3907 0F0C  
                               l3851 0D88                                 l3843 0D58  
                               l4571 28FE                                 l4635 3540  
                               l4627 3500                                 l4555 34E2  
                               l4547 3492                                 l4539 344E  
                               l4731 1952                                 l4723 191E  
                               l4715 18EC                                 l4395 2B18  
                               l4379 2A4C                                 l4619 2176  
                               l1899 21D4                                 l4811 24A6  
                               l4651 3BE0                                 l5099 2CBC  
                               l4493 144C                                 l4485 1402  
                               l3837 0D38                                 l3829 0D20  
                               l3781 0BCC                                 l3765 0B2C  
                               l3773 0B82                                 l3757 0AF4  
                               l3749 0AC8                                 l3693 099A  
                               l3685 098A                                 l3677 0952  
                               l3669 0920                                 l3941 108E  
                               l3933 1028                                 l3925 0FF6  
                               l3917 0F8A                                 l3909 0F1C  
                               l3861 0DBA                                 l3853 0D98  
                               l3845 0D66                                 l4573 2972  
                               l4565 28AE                                 l4637 3556  
                               l4629 351C                                 l4557 34F2  
                               l4549 34B2                                 l4741 198E  
                               l4725 1930                                 l4717 18F2  
                               l4709 18D0                                 l4389 2A82  
                               l4581 1EEE                                 l4813 24D8  
                               l4661 3BEE                                 l4653 3BE6  
                               l4645 3BD0                                 l4901 3C86  
                               l4495 1458                                 l4487 1426  
                               l4479 13D4                                 l4399 1176  
                               l3791 0BFC                                 l3783 0BD6  
                               l3775 0BA8                                 l3767 0B60  
                               l3759 0AF6                                 l3695 099E  
                               l3687 098E                                 l3679 095A  
                               l3951 10F0                                 l3943 109A  
                               l3935 1036                                 l3927 1004  
                               l3919 0FC0                                 l3871 0DFA  
                               l3863 0DC8                                 l3855 0D9E  
                               l3847 0D68                                 l4575 297A  
                               l4567 28E0                                 l4559 2882  
                               l4639 356A                                 l4743 1998  
                               l4735 1966                                 l4719 190A  
                               l4583 1F20                                 l4831 25DA  
                               l4823 2540                                 l4807 246E  
                               l4671 3BFC                                 l4663 3BF0  
                               l4655 3BE8                                 l4647 3BDC  
                               l4903 3C8C                                 l4911 3CBA  
                               l4497 145C                                 l4489 1432  
                               l3793 0C00                                 l3785 0BE4  
                               l3777 0BB8                                 l3769 0B62  
                               l3697 09A2                                 l3689 0992  
                               l3961 1158                                 l3953 1104  
                               l3945 10A8                                 l3937 1064  
                               l3929 1016                                 l3881 0E44  
                               l3873 0E00                                 l3865 0DCA  
                               l3857 0DAE                                 l3849 0D78  
                               l4577 29AE                                 l4761 1A20  
                               l4737 1976                                 l4729 1940  
                               l4593 1F86                                 l4841 2682  
                               l4833 25E2                                 l4825 2550  
                               l4817 24F8                                 l4809 2474  
                               l4921 3A94                                 l4673 3D48  
                               l4665 3BF2                                 l4657 3BEA  
                               l4649 3BDE                                 l4905 3C90  
                               l4913 3CBC                                 l4499 1474  
                               l3795 0C10                                 l3787 0BE6  
                               l3699 09A6                                 l3963 115A  
                               l3955 111E                                 l3947 10D2  
                               l3891 0E94                                 l3883 0E50  
                               l3875 0E20                                 l3867 0DDA  
                               l3859 0DB4                                 l4691 370C  
                               l4771 1A94                                 l4763 1A30  
                               l4755 19D2                                 l4739 1986  
                               l4747 19AC                                 l3971 2FCA  
                               l4595 1FB8                                 l4587 1F36  
                               l4843 2694                                 l4827 25BC  
                               l4835 2606                                 l4819 252A  
                               l4931 3ABE                                 l4923 3A94  
                               l4915 3A76                                 l4683 3CD2  
                               l4667 3BF4                                 l4659 3BEC  
                               l4907 3C92                                 ?_exp 0089  
                               l3789 0BF4                                 l3797 0C12  
                               l3957 113A                                 l3965 1160  
                               l3949 10D6                                 l3893 0EA0  
                               l3885 0E5A                                 l3877 0E30  
                               l3869 0DEA                                 l4693 3730  
                               l4781 1AFA                                 l4773 1AB4  
                               l4765 1A3A                                 l4757 1A00  
                               l4749 19BE                                 l3981 3054  
                               l3973 2FF8                                 l4589 1F68  
                               l4837 262A                                 l4941 2E34  
                               l4933 3ABE                                 l4925 3AA2  
                               l4917 3A86                                 l4685 3CDE  
                               l4669 3BF6                                 l4909 3CAE  
                               ?_log 0081                                 l4951 3CF6  
                               l3799 0C20                                 l3967 1164  
                               l3959 114A                                 l3895 0EAC  
                               l3887 0E70                                 l4695 373C  
                               l4791 1BB2                                 l4783 1B24  
                               l4775 1ADE                                 l4767 1A42  
                               l4759 1A10                                 l3983 3066  
                               l3975 3008                                 l4599 1FD6  
                               l4839 265E                                 l4943 2E68  
                               l4935 2DB8                                 l4927 3AA2  
                               l4919 3A86                                 l4687 3CE0  
                               l4961 3D20                                 l4953 3D02  
                               l3897 0EBA                                 l3889 0E7C  
                               l3993 2EC4                                 l4697 3746  
                               l4689 3702                                 l4793 1BCA  
                               l4785 1B3C                                 l4777 1AE8  
                               l4769 1A70                                 l3985 3074  
                               l3977 3036                                 l4945 2E7A  
                               l4937 2DEE                                 l4929 3AB0  
                               l4963 3D22                                 l4955 3D04  
                               l3899 0EC6                                 l3995 2EDA  
                               l4971 2316                                 l4699 377E  
                               l4795 1BCE                                 l4787 1B76  
                               l4779 1AEA                                 l3987 30C4  
                               l3979 3046                                 l4939 2E22  
                               l4947 3CC0                                 l4957 3CE4  
                               l4981 244E                                 l4973 236E  
                               l4965 21D6                                 l4797 1BDC  
                               l4789 1B84                                 l3989 30CA  
                               l4949 3CC4                                 l4959 3D18  
                               l3999 2EEE                                 l4983 246A  
                               l4975 2392                                 l4967 22BE  
                               l4799 1BDE                                 l4991 3CA2  
                               l4977 23AE                                 l4969 22F2  
                               l4993 3CA4                                 l4985 3C9A  
                               l4979 242A                                 l4995 3CA8  
                               l4987 3C9E                                 l4899 3D3E  
                               l4997 3CAA                                 l4989 3CA0  
                               l4999 1BEC                                 ?_pow 0094  
                               STR_1 0879                                 STR_2 0885  
                               STR_3 0857                                 STR_4 0868  
                               STR_5 0866                                 STR_6 0866  
                               u3000 2808                                 u2200 35E4  
                               u3001 2804                                 u2201 35E0  
                               u3010 2818                                 u2210 3622  
                               u3011 2814                                 u2211 361E  
                               u3020 2826                                 u2300 0930  
                               u2220 3656                                 u3021 2822  
                               u2301 092C                                 u2221 3652  
                               _LATA 000F89                                 u3030 2860  
                               u2310 0940                                 _LATB 000F8A  
                               u3031 285C                                 u2311 093C  
                               _LATC 000F8B                                 u3120 3954  
                               u3200 15D8                                 u3040 286E  
                               u2400 0A86                                 u2320 097C  
                               u4000 1BDC                                 u3121 3950  
                               u3105 38FA                                 u3201 15D4  
                               u3041 286A                                 u2401 0A82  
                               u2321 0978                                 u4001 1BD8  
                               u3130 3BB4                                 u3210 1618  
                               u2410 0A96                                 u2330 098A  
                               u2250 08A4                                 u3050 33B0  
                               u4010 24A6                                 u3115 391C  
                               u3131 3BB0                                 u3211 1614  
                               u2411 0A92                                 u2331 0986  
                               u2251 08A0                                 u3051 33AC  
                               u2235 3AE2                                 u4011 24A2  
                               u3140 3BC4                                 u3300 17A4  
                               u3220 1658                                 u2500 0BF4  
                               u2420 0AC8                                 u2340 09F8  
                               u2260 08B6                                 u3060 3404  
                               u4100 1EB0                                 u4020 24D8  
                               u3141 3BC0                                 u3301 17A0  
                               u3221 1654                                 u2501 0BF0  
                               u2421 0AC4                                 u2341 09F4  
                               u2261 08B2                                 u3061 33FC  
                               u2245 3B04                                 u4101 1EAC  
                               u4021 24D4                                 u3310 17D2  
                               u3230 16CE                                 u3150 1550  
                               u2510 0C10                                 u2430 0AD6  
                               u2350 0A10                                 u2270 08C6  
                               u3070 382E                                 u4110 1EC8  
                               u4030 252A                                 u3311 17CE  
                               u3231 16CA                                 u3151 154C  
                               u2511 0C0C                                 u2431 0AD2  
                               u2351 0A0A                                 u2271 08C2  
                               u4111 1EC4                                 u4031 2526  
                               u3400 38AA                                 u3320 17E8  
                               u3240 16F0                                 u3160 1562  
                               u2600 0CE8                                 u2520 0C20  
                               u2440 0AF4                                 u2360 0A12  
                               u2280 0908                                 u3080 3860  
                               u4120 1EE6                                 u4040 2550  
                               u3401 38A6                                 u3321 17E4  
                               u3241 16EC                                 u3161 155E  
                               u2601 0CE4                                 u2521 0C1C  
                               u2441 0AF0                                 u2281 0904  
                               u4121 1EE2                                 u4041 254C  
                               u3410 38C6                                 u4130 31F2  
                               u3330 17FC                                 u3250 171A  
                               u3170 1572                                 u2610 0D08  
                               u2530 0C32                                 u2450 0B2C  
                               u2370 0A3A                                 u2290 091E  
                               u3090 3870                                 u4050 25BC  
                               u3411 38C2                                 u4131 31EE  
                               u3331 17F8                                 u3251 1716  
                               u3171 156E                                 u2611 0D04  
                               u2531 0C2E                                 u2451 0B28  
                               u2371 0A36                                 u2291 091A  
                               u3091 386C                                 u4051 25B8  
                               u3420 3968                                 u4140 320C  
                               u3340 1816                                 u3260 173E  
                               u3180 15B6                                 u2620 0D1A  
                               u2540 0C48                                 u2460 0B72  
                               u2380 0A58                                 u2700 0E20  
                               u3068 3406                                 u3500 2C36  
                               u4060 2694                                 u3421 3964  
                               u4141 3208                                 u3341 1812  
                               u3261 173A                                 u3181 15B2  
                               u2621 0D16                                 u2541 0C44  
                               u2461 0B6E                                 u2381 0A54  
                               u2701 0E1C                                 u3077 3824  
                               u3501 2C32                                 u4061 2690  
                               u3430 3986                                 u4150 3222  
                               u3350 185E                                 u3270 1754  
                               u3190 15C8                                 u2630 0D36  
                               u2550 0C5E                                 u2470 0BA8  
                               u2390 0A78                                 u2710 0E30  
                               u3510 2A4C                                 u4310 2CBC  
                               u3431 3982                                 u4151 321E  
                               u3351 185A                                 u3271 1750  
                               u3191 15C4                                 u2631 0D32  
                               u2551 0C5A                                 u2471 0BA4  
                               u2391 0A74                                 u2711 0E2C  
                               u3087 3856                                 u3511 2A48  
                               u4311 2CB8                                 u3440 399C  
                               u3600 12D4                                 u4160 3238  
                               u3360 188E                                 u3280 1772  
                               u2560 0C72                                 u2480 0BB8  
                               u2800 10F0                                 u2720 0FAA  
                               u2640 0D66                                 u3520 2A5A  
                               u4320 2D0A                                 u3441 3998  
                               u3601 12D0                                 u4161 3234  
                               u3361 188A                                 u3281 176E  
                               u2561 0C6E                                 u2481 0BB4  
                               u2801 10EC                                 u2641 0D62  
                               u3521 2A56                                 u4321 2D06  
                               u3610 1338                                 u4170 3276  
                               u3370 18BC                                 u3290 1792  
                               u2570 0C8C                                 u2490 0BE4  
                               u2810 111E                                 u2730 1004  
                               u2650 0D78                                 u3450 31C0  
                               u3530 2A98                                 u4330 2D28  
                               u3611 1334                                 u4171 3272  
                               u3371 18B8                                 u3291 178E  
                               u2571 0C88                                 u2491 0BE0  
                               u2811 111A                                 u2731 1000  
                               u2651 0D74                                 u3451 31BC  
                               u3531 2A94                                 u4331 2D24  
                               u3700 148A                                 u3620 135E  
                               u4180 3298                                 u2580 0CC6  
                               u2820 1158                                 u2740 1024  
                               u2660 0D88                                 u2900 2F3C  
                               u3380 3B7C                                 u3540 2B18  
                               u3460 2B94                                 u4340 2D42  
                               u3701 1486                                 u3621 135A  
                               u4181 3294                                 u2581 0CC2  
                               u2821 1154                                 u2741 1020  
                               u2725 0FA0                                 u2661 0D84  
                               u2901 2F38                                 u3381 3B78  
                               u3541 2B14                                 u3461 2B90  
                               u4341 2D3E                                 u3390 388C  
                               u3710 1506                                 u3630 139C  
                               u3550 1194                                 u4190 32AE  
                               u2590 0CD8                                 u2750 1036  
                               u2670 0DC8                                 u2910 2F50  
                               u2830 2FF8                                 u3470 2BD4  
                               u4350 2D5C                                 u3391 3888  
                               u3711 1502                                 u3631 1398  
                               u3551 1190                                 u4191 32AA  
                               u2591 0CD4                                 u2751 1032  
                               u2671 0DC4                                 u2911 2F4C  
                               u4407 3B16                                 u2831 2FF4  
                               u3471 2BCC                                 u4351 2D58  
                               u3720 1528                                 u3640 13CA  
                               u3560 11D2                                 u2760 1064  
                               u2680 0DDA                                 u2920 2F78  
                               u2840 3036                                 u3480 2BEE  
                               u3800 1F20                                 u4360 2D6A  
                               u3721 1524                                 u3641 13C6  
                               u3561 11CE                                 u2761 1060  
                               u2681 0DD6                                 u2921 2F74  
                               u2841 3032                                 u3481 2BEA  
                               u3801 1F1C                                 u4361 2D66  
                               u3730 3A2C                                 u3650 13E6  
                               u3570 1240                                 u2770 107A  
                               u2690 0DEA                                 u2930 2F98  
                               u2850 3054                                 u3490 2C20  
                               u3810 1F68                                 u4370 2D98  
                               u3731 3A28                                 u3651 13E2  
                               u3571 123C                                 u2771 1076  
                               u2691 0DE6                                 u2931 2F94  
                               u2851 3050                                 u3491 2C1C  
                               u3811 1F64                                 u4371 2D94  
                               u3740 3A3C                                 u3660 13FC  
                               u3580 125A                                 u2780 108E  
                               u2940 2FA8                                 u3900 18EA  
                               u2860 3074                                 u3820 1FB8  
                               u4380 2DA6                                 u3741 3A38  
                               u3661 13F8                                 u3581 1256  
                               u2781 108A                                 u2941 2FA4  
                               u3901 18E6                                 u2861 3070  
                               u3821 1FB4                                 u4381 2DA2  
                               u3670 1426                                 u3590 129A  
                               u2950 26E0                                 u2790 10A8  
                               u3750 345E                                 u3910 191C  
                               u2870 30C4                                 u3478 2BD8  
                               u3830 1FE8                                 u3671 1422  
                               u3591 1296                                 u2951 26DC  
                               u2791 10A4                                 u3751 345A  
                               u3911 1918                                 u2871 30C0  
                               u3831 1FE2                                 u3680 144C  
                               u2960 26EE                                 u2880 2EDA  
                               u3760 347A                                 u3920 1930  
                               u3840 1FEA                                 u3681 1448  
                               u2961 26EA                                 u2881 2ED6  
                               u3761 3476                                 u3921 192C  
                               u3690 1474                                 u2970 274A  
                               u2890 2F0E                                 u3770 34E2  
                               u3930 1952                                 u3850 1FFC  
                               u3691 1470                                 u2971 2746  
                               u3771 34DE                                 u3931 194E  
                               u3851 1FF8                                 u2980 27A0  
                               u3780 2892                                 u3940 1976  
                               u3860 2144                                 u2981 279C  
                               u3781 288E                                 u3941 1972  
                               u3861 2140                                 u4397 3A7C  
                               u2990 27EA                                 u3790 28E0  
                               u3950 19BE                                 u3870 2176  
                               u2991 27E6                                 u3791 28DC  
                               u2895 2F04                                 u3951 19BA  
                               u3871 2172                                 u3880 352C  
                               u3960 1A30                                 u3881 3528  
                               u3961 1A2C                                 u3890 3556  
                               u3970 1A70                                 u3891 3552  
                               u3971 1A6C                                 u3980 1AFA  
                               u3981 1AF6                                 u3990 1B84  
                               u3991 1B80                                 i2l82 330E  
                               i2l91 337A                                 i2l84 3332  
                               i2l85 337A                                 i2l86 3356  
                               i2l79 32DC                                 _TMR2 000FCC  
                _StartDepthDetection 3C9A                                 _main 2C9A  
                   __end_of_CCP1_ISR 3C4A                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 indf1 000FE7  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 btemp 005F  
                               _sqrt 18D0                                 exp@x 0089  
                               log@x 0081                     __end_of_AN0_Init 3D26  
                               pow@x 0094                                 pow@y 0098  
                               prodh 000FF4                                 prodl 000FF3  
                               start 000E                      ___fldiv@new_exp 0012  
                      ?_LCD_WriteCmd 0001                        _LCD_WriteChar 3ACE  
                      _LCD_WriteLine 3442                         ___param_bank 000000  
                    __end_of_OscInit 3D52                                ??_exp 005E  
                              ??_log 005E                                ??_pow 005E  
                   __end_of_LCD_GoTo 3A76                     __end_of_LCD_Init 3ACE  
               ?_StartDepthDetection 0001                        ___fltol@sign1 0032  
                    __end_of___fladd 0D4A                                ?_main 0001  
                    __end_of___fldiv 18D0                      __end_of___flneg 3B9E  
                    __end_of_SysInit 3D48                      __end_of___flmul 1176  
                    __end_of___flsub 3B66                      __end_of___fltol 2FCA  
                              ?_sqrt 002A                                _T0CON 000FD5  
                              _T1CON 000FCD                                _T2CON 000FCA  
                              _T3CON 000FB1                      __end_of___lwdiv 38E6  
                    __end_of___lwmod 39BA                                i2l335 3D16  
                              i2l185 3A18                                i2l257 3D30  
                              i2l617 3C48                                i2l891 3D3C  
                              i2l982 3C84                                i2l985 3D5A  
                              _TMR0H 000FD7                                _TMR1H 000FCF  
                              _TMR0L 000FD6                                _TMR3H 000FB3  
                              _TMR1L 000FCE                                _TMR3L 000FB2  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                         LCD_GoTo@iPos 000C  
         __end_of_LCD_DisplayResults 3782               __size_of_CCP1_Activate 0012  
                              _giDay 00FF                      __end_of_dpowers 080B  
                              _floor 2A20                                _ldexp 2B62  
                              _frexp 337E                                _errno 00D1  
                __end_of_ComputeTemp 246E                      __end_of_isdigit 3BD0  
                  __end_of_CCP1_Init 3D08                                _round 3660  
                  __end_of_CCP2_Init 3CF6                                _trunc 3500  
                         _ComputeTOD 31D2                                tablat 000FF5  
                              pow@yi 00A5                                ttemp5 0060  
                              sqrt@a 002A                                ttemp6 0063  
                              ttemp7 0067                                sqrt@i 0033  
                              sqrt@p 0038                                status 000FD8  
                              wtemp8 0060                      __end_of_sprintf 1536  
                        _CaptureTemp 3D52                          exp@exponent 0091  
                     ??_LCD_WriteCmd 0003                       ?_LCD_WriteChar 0001  
                     ?_LCD_WriteLine 0009                          ldexp@newexp 0085  
                    __initialization 3782                          log@exponent 0085  
                       __end_of_main 2DB8                         __end_of_sqrt 1BEC  
              ??_StartDepthDetection 0001                            ??_AN0_ISR 0001  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 00AD  
                             ??_sqrt 002E                        __activetblptr 000002  
                   _ComputeTemp$2690 008F                     _ComputeTemp$2688 0087  
                   _ComputeTemp$2689 008B                 LCD_WriteString@iData 0004  
                             _ADCON0 000FC2                               _ADCON1 000FC1  
                             _ADCON2 000FC0                               ?_floor 0056  
                             ?_ldexp 0081                               ?_frexp 004E  
                             _ADRESL 000FC3                               _CCPR1H 000FBF  
                             _CCPR2H 000FBC                               _CCPR1L 000FBE  
                             _CCPR2L 000FBB                         _gb_Temp_Done 00EF  
                             ?_round 0071                               ?_trunc 0056  
                             i2l3331 3D2E                               i2l3325 3D26  
                             i2l3327 3D28                               i2l3329 3D2C  
                             i2l5061 32C6                               i2l5071 331C  
                             i2l5063 32D4                               i2l5081 3372  
                             i2l5073 332A                               i2l5065 32EA  
                             i2l5075 3340                               i2l5067 32F8  
                             i2l5059 32B8                               i2l5077 334E  
                             i2l5069 3306                               i2l5079 3364  
                             i2l4681 3D34                               i2l4675 3D52  
                             i2l4851 39C4                               i2l4677 3D58  
                             i2l4861 39EE                               i2l4853 39C6  
                             i2l4679 3D32                               i2l4863 39F2  
                             i2l4855 39D4                               i2l4847 39BA  
                             i2l4871 3D0A                               i2l4881 3C2E  
                             i2l4865 3A0C                               i2l4857 39D6  
                             i2l4849 39C0                               i2l4873 3D10  
                             i2l4891 3C6C                               i2l4883 3C3A  
                             i2l4859 39EA                               i2l4875 3D14  
                             i2l4893 3C76                               i2l4885 3C3C  
                             i2l4869 3D08                               i2l4895 3C7E  
                             i2l4887 3C3E                               i2l4879 3C26  
                             i2l4897 3C80                               i2l4889 3C42  
                             _OSCCON 000FD3                     __end_of___xxtofl 2882  
                      LCD_GoTo@iLine 000D               _InitTankVariables$2692 00A9  
                      ??_Timer0_Init 0001                    _InitTankVariables 2DB8  
                      ??_Timer1_Init 0001                        ??_Timer2_Init 0001  
                          ??_OscInit 0001                           _Timer0_ISR 39BA  
                         _Timer2_ISR 3D26                           _Timer3_ISR 3D08  
                   LCD_WriteCmd@iCmd 0006                        _CCP1_Activate 3CD2  
                 ?_InitTankVariables 0001                               ___flge 2FCA  
                             ___fleq 35B6                               _giGals 00DF  
                          ??___fladd 0022                               ___wmul 3C00  
                          ??___fldiv 0009                            ??___flneg 0005  
                          ??_SysInit 0001                               _giMins 00EC  
                             _giSecs 00ED                            ??___flmul 0060  
                          ??___flsub 005A                            ??___fltol 002E  
           __size_of_ComputeWaterVol 0302                               _giYear 00FE  
                             _sLine1 016C                               _sLine2 0108  
                          ??___lwdiv 0005                            ??___lwmod 000C  
                             clear_0 37DA                               clear_1 37E6  
                ??_InitTankVariables 005E                               floor@i 0060  
                             floor@x 0056                          _ComputeTemp 21D6  
                          ?_CCP1_ISR 0001                         __pdataCOMRAM 005E  
                          ??_isdigit 0001                            ?_AN0_Init 0001  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                  _giBacklight_Timer 00D7                               round@f 0075  
                             round@x 0071                            ??_sprintf 0017  
                             trunc@i 0060                               trunc@x 0056  
                        ?_ComputeTOD 0001                           ___flge@ff1 0001  
                         ___flge@ff2 0005                         ___xxtofl@arg 003E  
                   __end_ofexp@coeff 0833                         ___xxtofl@exp 003D  
                       ___xxtofl@val 0034                           ___fleq@ff1 0042  
                         ___fleq@ff2 0046                     __end_oflog@coeff 0857  
                         __accesstop 0060              __end_of__initialization 37EC  
                          ?_LCD_GoTo 0007                 _ComputeWaterVol$2691 008D  
                          ?_LCD_Init 0001                           ___flneg@f1 0001  
          __end_of_InitTankVariables 2EC4                      ??_LCD_WriteChar 0001  
                    ??_LCD_WriteLine 000B                         eval_poly@res 007D  
                      ___rparam_used 000001                           ___fltol@f1 002A  
                 ComputeTOD@bIncDays 0029                    _gd_TankGalsPer_mm 00B5  
                     ?_CCP1_Activate 0001                        _giEchoCounter 00E5  
                     __pcstackCOMRAM 0001                           _gfAirTempC 00CD  
                       __pidataBANK0 3D5C                         __pidataBANK1 3C4A  
                    _LCD_WriteString 37FA                        __end_of_floor 2B62  
                      __end_of_ldexp 2C9A                        __end_of_frexp 3442  
                __end_of_Timer0_Init 3C9A                  __end_of_Timer1_Init 3CD2  
                      __end_of_round 3702                  __end_of_Timer2_Init 3CC0  
                      __end_of_trunc 35B6                           _gfLnRRatio 00F3  
                         _giAirTempC 00E3                           _giAirTempF 00E1  
                         ??_CCP1_ISR 0001                           ??_AN0_Init 0001  
               __end_of_LCD_WriteCmd 3956           ComputeWaterVol@d_mmPerTick 0091  
                            ??_floor 005A                              ??_ldexp 0087  
                            ??_frexp 0054                         sprintf@width 0025  
                            ??_round 005E                              ??_trunc 005A  
                         __pbssBANK0 00B1                           __pbssBANK1 0100  
                 __size_of_eval_poly 0104                           ??_LCD_GoTo 0008  
                         ??_LCD_Init 0007                        ?_Timer1_Reset 0001  
                        ?_Timer0_ISR 0001                          ?_Timer2_ISR 0001  
                        ?_Timer3_ISR 0001                              ?___flge 0001  
                            ?___fleq 0042                              ?___wmul 0001  
                            _CCP1CON 000FBD                              _CCP2CON 000FBA  
                         _gsCurrDate 01E5                              _AN0_ISR 3C6C  
                         _gsCurrTime 01DC                  __size_of_ComputeTOD 00E4  
                  ??_ComputeWaterVol 0079                            ?___xxtofl 0034  
                            _OSCTUNE 000F9B                      _gb_TempCaptured 00EE  
                      _gb_UpdateTime 00F2           __size_of_InitTankVariables 010C  
                    _Timer3_Sampling 00E8                   _LCD_DisplayResults 3702  
                          _CCP1_Init 3CF6                            _CCP2_Init 3CE4  
                    ??_CCP1_Activate 0001                       ??_Timer1_Reset 0001  
                       ?_CaptureTemp 0001              __end_of_LCD_WriteString 3872  
                            _OscInit 3D48                              __Hparam 0000  
                        _Timer0_Init 3C86                          _Timer1_Init 3CC0  
                        _Timer2_Init 3CAE                          _Timer3_Cntr 00D3  
                            __Lparam 0000                        LCD_WriteCmd@i 0005  
                ?_LCD_DisplayResults 0001                      __size_of___flge 0104  
                    __size_of___fleq 00AA                              ___fladd 088A  
                            ___fldiv 1536                              ___flneg 3B66  
                            _SysInit 3D3E                              ___flmul 0D4A  
                            ___flsub 3B1E                              ___fltol 2EC4  
             LCD_WriteLine@bInString 001C                      __size_of___wmul 0026  
                            ___lwdiv 3872                              ___lwmod 3956  
                       __psmallconst 0800                              _gd_Temp 0104  
                            _giHours 00EB                              _giMonth 005E  
                            __pcinit 3782                              _imSCntr 00D5  
                  __end_of_eval_poly 31D2                              __ramtop 0800  
                            __ptext0 2C9A                              __ptext1 3CAE  
                            __ptext2 3CC0                              __ptext3 3C86  
                            __ptext4 3D3E                              __ptext5 3BD0  
                            __ptext6 3D48                              __ptext7 3C9A  
                            __ptext8 3CD2                              __ptext9 3A76  
                          _T1CONbits 000FCD                              _dpowers 0801  
                          _T2CONbits 000FCA                         __size_of_exp 02E8  
                       __size_of_log 019E                              _isdigit 3B9E  
                       __size_of_pow 0260                           ??___xxtofl 0038  
                          _T3CONbits 000FB1             ??_PIN_MANAGER_Initialize 0001  
                __size_of_Timer0_ISR 0060                  __size_of_Timer2_ISR 000C  
                __size_of_Timer3_ISR 0010                 ??_LCD_DisplayResults 0028  
                            _sprintf 1176                       __pintcode_body 32B6  
               end_of_initialization 37EC                              exp@sign 0093  
                      __Lmediumconst 0000                              int_func 32B6  
                         ?_CCP1_Init 0001                           ?_CCP2_Init 0001  
        __end_of_StartDepthDetection 3CAE                              pow@sign 00A4  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
                            sqrt@grs 0039                              sqrt@exp 003D  
              __size_of_LCD_WriteCmd 0070                            _PORTCbits 000F82  
                       ?_ComputeTemp 0001                          ___fladd@grs 0029  
                      ___xxtofl@sign 003C                            _TRISAbits 000F92  
                          _TRISCbits 000F94                    __size_of_CCP1_ISR 0024  
                        ___fldiv@grs 0014                          ___fldiv@rem 000D  
                  __size_of_AN0_Init 000E                     LCD_GoTo@iCharPos 0007  
                       ??_ComputeTOD 0028                        _giPercentFull 00DD  
     ComputeWaterVol@dWaterHeight_mm 0095                          ___flmul@grs 0065  
                  LCD_WriteString@ix 0008                          _CCP2CONbits 000FBA  
                  __size_of_LCD_GoTo 005C                     ?_LCD_WriteString 0004  
                  __size_of_LCD_Init 0058                         _LCD_WriteCmd 38E6  
                     __end_of___flge 30CE                       __end_of___fleq 3660  
                     _gd_Default_SOS 0100                       __end_of___wmul 3C26  
                      __pidataCOMRAM 3D63                        _giMonthEndTbl 01D0  
                      _giTempCapture 00F7                   __end_of_ComputeTOD 32B6  
                ComputeWaterVol@dSOS 0089                           floor@expon 0064  
               __end_of_Timer1_Reset 3D3E        ComputeWaterVol@dEmptySpace_mm 0099  
                start_initialization 3782                          _iSampleCntr 00E9  
                         eval_poly@d 0075                           eval_poly@n 0077  
                         eval_poly@x 0071                           ldexp@value 0081  
    __size_of_PIN_MANAGER_Initialize 0030                          __end_of_exp 21D6  
                        __end_of_log 2A20                          __end_of_pow 26CE  
                         frexp@value 004E                          ??_CCP1_Init 0001  
                        ??_CCP2_Init 0001                        _Timer0_Reload 00FB  
              __end_of_LCD_WriteChar 3B1E                         ??_Timer0_ISR 0001  
              __end_of_LCD_WriteLine 3500                         ??_Timer2_ISR 0001  
                      _Timer3_Reload 00F9                         ??_Timer3_ISR 0001  
               __size_of_CaptureTemp 000A                      _ComputeWaterVol 1BEC  
                           ??___flge 0009                             ??___fleq 004A  
                           ??___wmul 0005                          __pdataBANK0 00F9  
                        __pdataBANK1 01D0                             ?_AN0_ISR 0001  
                          ___fladd@a 001E                            ___fladd@b 001A  
                          ___fldiv@a 0005                            ___fldiv@b 0001  
                          ___flmul@a 005A                            ___flmul@b 0056  
                          ___flsub@a 006A                            ___flsub@b 0066  
                      __pcstackBANK0 0060                    __size_of___xxtofl 01B4  
                 __end_of_Timer0_ISR 3A1A                   __end_of_Timer2_ISR 3D32  
                       _isdigit$2385 0002                   __end_of_Timer3_ISR 3D18  
                        sprintf@flag 0022                          sprintf@prec 001D  
                           ?_OscInit 0001                         ?_Timer0_Init 0001  
                       ?_Timer1_Init 0001                         ?_Timer2_Init 0001  
                   ___lwdiv@dividend 0001               _PIN_MANAGER_Initialize 3BD0  
                        _giTotalSecs 00D9                            __pintcode 0008  
                           ?___fladd 001A                             ?___fldiv 0001  
                           ?___flneg 0001                             ?_SysInit 0001  
                           ?___flmul 0056                             ?___flsub 0066  
                           ?___fltol 002A                             ?___lwdiv 0001  
                           ?___lwmod 0008         ??_INTERRUPT_InterruptManager 0001  
                        __smallconst 0800                             _CCP1_ISR 3C26  
                           ?_isdigit 0001                            _eval_poly 30CE  
                           _AN0_Init 3D18                 __size_of_ComputeTemp 0298  
                   ___lwdiv@quotient 0005                             ?_sprintf 000D  
                     __size_of_floor 0142                       __size_of_ldexp 0138  
                     __size_of_frexp 00C4                       __size_of_round 00A2  
                     __size_of_trunc 00B6                             _LCD_GoTo 3A1A  
                           _LCD_Init 3A76              __end_of_ComputeWaterVol 1EEE  
                     ___wmul@product 0005                             _LATAbits 000F89  
                           _LATCbits 000F8B                             _PIE1bits 000F9D  
                           _PIE2bits 000FA0                      _giEmptySpace_mm 00DB  
              __end_of_CCP1_Activate 3CE4  __size_of_INTERRUPT_InterruptManager 3376  
                 _gd_SensorHeight_mm 00B9                             i2u420_40 32C6  
                           i2u420_41 32C2                             i2u421_40 32D4  
                           i2u421_41 32D0                             i2u430_40 3372  
                           i2u422_40 32EA                             i2u430_41 336E  
                           i2u422_41 32E6                             i2u407_40 39D4  
                           i2u423_40 32F8                             i2u407_41 39D0  
                           i2u423_41 32F4                             i2u408_40 39EA  
                           i2u424_40 3306                             i2u408_41 39E6  
                           i2u424_41 3302                             i2u409_40 3A0C  
                           i2u425_40 331C                             i2u409_41 3A08  
                           i2u425_41 3318                             _PIR1bits 000F9E  
                           i2u426_40 332A                             i2u426_41 3326  
                           i2u427_40 3340                             i2u427_41 333C  
                           _PIR2bits 000FA1                             i2u428_40 334E  
                           i2u428_41 334A                             i2u429_40 3364  
                           i2u429_41 3360             ComputeWaterVol@dCurrTemp 0081  
              __size_of_Timer1_Reset 000C                 _gd_MaxWaterHeight_mm 00B1  
                        _gsTotalSecs 01EE                     __size_of_AN0_ISR 001A  
                         _ADCON0bits 000FC2                    ___wmul@multiplier 0001  
           ComputeWaterVol@dWaterVol 0085                  _gd_TankSurfArea_mm2 00BD  
                         ?_eval_poly 0071          __size_of_LCD_DisplayResults 0080  
                        _INTCON2bits 000FF1                            copy_data0 3796  
                          copy_data1 37B6                     _gb_Temp_Captured 00F0  
                    _gb_EchoDetected 00F1                            frexp@eptr 0052  
                           _bIncDays 00EA                             __Hrparam 0000  
                       _Timer1_Reset 3D32                   LCD_WriteCmd@iDelay 0001  
                   __size_of_OscInit 000A                             __Lrparam 0000  
                     LCD_WriteLine@i 001D                   LCD_WriteChar@iChar 0003  
                   __size_of___fladd 04C0                     __size_of___fldiv 039A  
                   __size_of___flneg 0038                     __size_of_SysInit 000A  
                   __size_of___flmul 042C                     __size_of___flsub 0048  
                   __size_of___fltol 0106         __size_of_StartDepthDetection 0014  
                   __size_of___lwdiv 0074                     __size_of___lwmod 0064  
                           _gfRRatio 00C1                             _exp$2696 008D  
                         sprintf@len 0020                           sprintf@val 0023  
                           ___xxtofl 26CE                             _gfRtherm 00C5  
                           _gfVtherm 00C9                     __size_of_isdigit 0032  
                           _main$915 00AF                      ___lwdiv@divisor 0003  
                    ___lwdiv@counter 0007                             __ptext10 2DB8  
                           __ptext11 246E                             __ptext20 3442  
                           __ptext12 1EEE                             __ptext21 37FA  
                           __ptext13 2B62                             __ptext30 35B6  
                           __ptext22 3ACE                             __ptext14 2A20  
                           __ptext31 30CE                             __ptext23 21D6  
                           __ptext15 2FCA                             __ptext40 3956  
                           __ptext32 0D4A                             __ptext24 3660  
                           __ptext16 3B66                             __ptext41 3872  
                           __ptext33 088A                             __ptext25 3500  
                           __ptext17 1BEC                             __ptext50 39BA  
                           __ptext42 3A1A                             __ptext34 26CE  
                           __ptext26 2EC4                             __ptext18 18D0  
                           __ptext51 3D52                             __ptext43 38E6  
                           __ptext35 1536                             __ptext27 3B1E  
                           __ptext19 3702                             __ptext52 3C26  
                           __ptext44 3CE4                             __ptext36 31D2  
                           __ptext28 2882                             __ptext53 3D32  
                           __ptext45 3CF6                             __ptext37 1176  
                           __ptext29 337E                             __ptext54 3C6C  
                           __ptext46 3D18                             __ptext38 3B9E  
                           __ptext39 3C00                             __ptext48 3D08  
                           __ptext49 3D26                             _pow$2694 009C  
                           _pow$2695 00A0                     __size_of_sprintf 03C0  
                         trunc@expon 0064                        __size_of_main 011E  
                   ?_ComputeWaterVol 0001                        __size_of_sqrt 031C  
               __size_of_Timer0_Init 0014                 __size_of_Timer1_Init 0012  
               __size_of_Timer2_Init 0012                             int$flags 005F  
 __end_of_INTERRUPT_InterruptManager 337E           _INTERRUPT_InterruptManager 0008  
           __size_of_LCD_WriteString 0078                             exp@coeff 080B  
                           log@coeff 0833                           _INTCONbits 000FF2  
                        ??_eval_poly 0079                   LCD_WriteLine@iData 0009  
                           isdigit@c 0003                   LCD_WriteLine@sLine 000B  
                          sqrt@tfrac 0034                             intlevel2 0000  
                          sprintf@ap 001E                            sprintf@cp 001B  
                          sprintf@sp 000D                     ___lwmod@dividend 0008  
            ?_PIN_MANAGER_Initialize 0001                        ??_CaptureTemp 0001  
                     _gbBacklight_On 00E7                        _LCD_GoTo$1386 000A  
                _giBacklight_Timeout 00FD                             sqrt@frac 0043  
                           sqrt@sign 0032                             sqrt@root 003F  
                           sprintf@c 0027                             sprintf@f 000F  
                    ___lwmod@divisor 000A                      ___lwmod@counter 000C  
             __size_of_LCD_WriteChar 0050               __size_of_LCD_WriteLine 00BE  
                      ___fladd@signs 0026       __end_of_PIN_MANAGER_Initialize 3C00  
                       ___fladd@aexp 0027                         ___fladd@bexp 0028  
