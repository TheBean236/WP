

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Apr 22 11:54:37 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    67                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69  0000                     
    70                           ; Version 2.20
    71                           ; Generated 05/05/2020 GMT
    72                           ; 
    73                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F45K50 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     
   105                           	psect	idataCOMRAM
   106  003EEA                     __pidataCOMRAM:
   107                           	callstack 0
   108                           
   109                           ;initializer for _giMonth
   110  003EEA  04                 	db	4
   111                           
   112                           	psect	idataBANK0
   113  003DE6                     __pidataBANK0:
   114                           	callstack 0
   115                           
   116                           ;initializer for _LCD_TestString3
   117  003DE6  80                 	db	128
   118  003DE7  81                 	db	129
   119  003DE8  82                 	db	130
   120  003DE9  83                 	db	131
   121  003DEA  84                 	db	132
   122                           
   123                           ;initializer for _Timer3_Reload
   124  003DEB  FB1D               	dw	64285
   125                           
   126                           ;initializer for _Timer3_Sampling
   127  003DED  01                 	db	1
   128                           
   129                           ;initializer for _giYear
   130  003DEE  15                 	db	21
   131                           
   132                           ;initializer for _giDay
   133  003DEF  01                 	db	1
   134                           
   135                           ;initializer for _gsCurrTime
   136  003DF0  30                 	db	48
   137  003DF1  31                 	db	49
   138  003DF2  3A                 	db	58
   139  003DF3  30                 	db	48
   140  003DF4  30                 	db	48
   141  003DF5  3A                 	db	58
   142  003DF6  30                 	db	48
   143  003DF7  30                 	db	48
   144  003DF8  00                 	db	0
   145                           
   146                           ;initializer for _gsCurrDate
   147  003DF9  30                 	db	48
   148  003DFA  31                 	db	49
   149  003DFB  2F                 	db	47
   150  003DFC  30                 	db	48
   151  003DFD  34                 	db	52
   152  003DFE  2F                 	db	47
   153  003DFF  32                 	db	50
   154  003E00  31                 	db	49
   155  003E01  00                 	db	0
   156                           
   157                           ;initializer for _gsTotalSecs
   158  003E02  2D                 	db	45
   159  003E03  2D                 	db	45
   160  003E04  2D                 	db	45
   161  003E05  00                 	db	0
   162                           
   163                           	psect	idataBANK1
   164  003D90                     __pidataBANK1:
   165                           	callstack 0
   166                           
   167                           ;initializer for _LCD_TestString1
   168  003D90  41                 	db	65
   169  003D91  42                 	db	66
   170  003D92  43                 	db	67
   171  003D93  44                 	db	68
   172  003D94  45                 	db	69
   173  003D95  46                 	db	70
   174  003D96  49                 	db	73
   175  003D97  4A                 	db	74
   176  003D98  4B                 	db	75
   177  003D99  4C                 	db	76
   178  003D9A  4D                 	db	77
   179  003D9B  4E                 	db	78
   180  003D9C  4F                 	db	79
   181  003D9D  50                 	db	80
   182  003D9E  51                 	db	81
   183  003D9F  52                 	db	82
   184  003DA0  53                 	db	83
   185  003DA1  00                 	db	0
   186                           
   187                           ;initializer for _LCD_TestString2
   188  003DA2  31                 	db	49
   189  003DA3  32                 	db	50
   190  003DA4  33                 	db	51
   191  003DA5  34                 	db	52
   192  003DA6  35                 	db	53
   193  003DA7  36                 	db	54
   194  003DA8  37                 	db	55
   195  003DA9  38                 	db	56
   196  003DAA  39                 	db	57
   197  003DAB  30                 	db	48
   198  003DAC  31                 	db	49
   199  003DAD  32                 	db	50
   200  003DAE  33                 	db	51
   201  003DAF  34                 	db	52
   202  003DB0  35                 	db	53
   203  003DB1  36                 	db	54
   204  003DB2  00                 	db	0
   205                           
   206                           ;initializer for _giMonthEndTbl
   207  003DB3  1F                 	db	31
   208  003DB4  1C                 	db	28
   209  003DB5  1F                 	db	31
   210  003DB6  1E                 	db	30
   211  003DB7  1F                 	db	31
   212  003DB8  1E                 	db	30
   213  003DB9  1F                 	db	31
   214  003DBA  1F                 	db	31
   215  003DBB  1E                 	db	30
   216  003DBC  1F                 	db	31
   217  003DBD  1E                 	db	30
   218  003DBE  1F                 	db	31
   219                           
   220                           	psect	smallconst
   221  000800                     __psmallconst:
   222                           	callstack 0
   223  000800  00                 	db	0
   224  000801                     _octpowers:
   225                           	callstack 0
   226  000801  0001               	dw	1
   227  000803  0008               	dw	8
   228  000805  0040               	dw	64
   229  000807  0200               	dw	512
   230  000809  1000               	dw	4096
   231  00080B  8000               	dw	32768
   232  00080D                     __end_of_octpowers:
   233                           	callstack 0
   234  00080D                     _dpowers:
   235                           	callstack 0
   236  00080D  0001               	dw	1
   237  00080F  000A               	dw	10
   238  000811  0064               	dw	100
   239  000813  03E8               	dw	1000
   240  000815  2710               	dw	10000
   241  000817                     __end_of_dpowers:
   242                           	callstack 0
   243  000817                     _hexpowers:
   244                           	callstack 0
   245  000817  0001               	dw	1
   246  000819  0010               	dw	16
   247  00081B  0100               	dw	256
   248  00081D  1000               	dw	4096
   249  00081F                     __end_of_hexpowers:
   250                           	callstack 0
   251  00081F                     exp@coeff:
   252                           	callstack 0
   253  00081F  0000               	dw	0
   254  000821  3F80               	dw	16256
   255  000823  7218               	dw	29208
   256  000825  3F31               	dw	16177
   257  000827  FDF0               	dw	65008
   258  000829  3E75               	dw	15989
   259  00082B  5847               	dw	22599
   260  00082D  3D63               	dw	15715
   261  00082F  9558               	dw	38232
   262  000831  3C1D               	dw	15389
   263  000833  C482               	dw	50306
   264  000835  3AAE               	dw	15022
   265  000837  78A8               	dw	30888
   266  000839  3921               	dw	14625
   267  00083B  93EF               	dw	37871
   268  00083D  3780               	dw	14208
   269  00083F  92A0               	dw	37536
   270  000841  35A7               	dw	13735
   271  000843  5646               	dw	22086
   272  000845  3415               	dw	13333
   273  000847                     __end_ofexp@coeff:
   274                           	callstack 0
   275  000847                     log@coeff:
   276                           	callstack 0
   277  000847  0000               	dw	0
   278  000849  0000               	dw	0
   279  00084B  FFC4               	dw	65476
   280  00084D  3F7F               	dw	16255
   281  00084F  EF80               	dw	61312
   282  000851  BEFF               	dw	48895
   283  000853  E190               	dw	57744
   284  000855  3EA9               	dw	16041
   285  000857  82EC               	dw	33516
   286  000859  BE76               	dw	48758
   287  00085B  AD82               	dw	44418
   288  00085D  3E2B               	dw	15915
   289  00085F  3C0E               	dw	15374
   290  000861  BDC3               	dw	48579
   291  000863  D187               	dw	53639
   292  000865  3D13               	dw	15635
   293  000867  7841               	dw	30785
   294  000869  BBD3               	dw	48083
   295  00086B                     __end_oflog@coeff:
   296                           	callstack 0
   297  00086B  E17B               	dw	57723
   298  00086D                     __end_of_Timer0_Reload_Val:
   299                           	callstack 0
   300  0000                     _CCPTMRSbits	set	3929
   301  0000                     _ANSELA	set	3931
   302  0000                     _ANSELE	set	3935
   303  0000                     _ANSELB	set	3932
   304  0000                     _ANSELC	set	3933
   305  0000                     _ANSELD	set	3934
   306  0000                     _TMR0	set	4054
   307  0000                     _TMR1L	set	4046
   308  0000                     _TMR1H	set	4047
   309  0000                     _T1GCON	set	4044
   310  0000                     _T1CON	set	4045
   311  0000                     _PORTBbits	set	3969
   312  0000                     _TRISBbits	set	3987
   313  0000                     _CCPR2H	set	3985
   314  0000                     _CCP2CONbits	set	3991
   315  0000                     _CCPR2L	set	3984
   316  0000                     _CCP2CON	set	3991
   317  0000                     _CCPR1L	set	4030
   318  0000                     _CCPR1H	set	4031
   319  0000                     _CCP1CON	set	4029
   320  0000                     _INTCON2bits	set	4081
   321  0000                     _WPUB	set	3973
   322  0000                     _TRISCbits	set	3988
   323  0000                     _TRISD	set	3989
   324  0000                     _TRISC	set	3988
   325  0000                     _TRISB	set	3987
   326  0000                     _TRISA	set	3986
   327  0000                     _TRISE	set	3990
   328  0000                     _LATC	set	3979
   329  0000                     _LATB	set	3978
   330  0000                     _LATA	set	3977
   331  0000                     _LATD	set	3980
   332  0000                     _LATE	set	3981
   333  0000                     _T3CON	set	4017
   334  0000                     _TMR3L	set	4018
   335  0000                     _TMR3H	set	4019
   336  0000                     _T3CONbits	set	4017
   337  0000                     _T2CON	set	4026
   338  0000                     _PR2	set	4027
   339  0000                     _T1CONbits	set	4045
   340  0000                     _LATAbits	set	3977
   341  0000                     _TMR2	set	4028
   342  0000                     _T2CONbits	set	4026
   343  0000                     _T0CON	set	4053
   344  0000                     _LATCbits	set	3979
   345  0000                     _ACTCON	set	4021
   346  0000                     _OSCTUNE	set	3995
   347  0000                     _OSCCON2	set	4050
   348  0000                     _OSCCON	set	4051
   349  0000                     _PIR1bits	set	3998
   350  0000                     _PIE1bits	set	3997
   351  0000                     _PIR2bits	set	4001
   352  0000                     _PIE2bits	set	4000
   353  0000                     _INTCONbits	set	4082
   354  0000                     _LATC7	set	31839
   355  0000                     _LATC6	set	31838
   356  00086D                     STR_10:
   357  00086D  30                 	db	48	;'0'
   358  00086E  31                 	db	49	;'1'
   359  00086F  32                 	db	50	;'2'
   360  000870  33                 	db	51	;'3'
   361  000871  34                 	db	52	;'4'
   362  000872  35                 	db	53	;'5'
   363  000873  36                 	db	54	;'6'
   364  000874  37                 	db	55	;'7'
   365  000875  38                 	db	56	;'8'
   366  000876  39                 	db	57	;'9'
   367  000877  41                 	db	65	;'A'
   368  000878  42                 	db	66	;'B'
   369  000879  43                 	db	67	;'C'
   370  00087A  44                 	db	68	;'D'
   371  00087B  45                 	db	69	;'E'
   372  00087C  46                 	db	70	;'F'
   373  00087D  00                 	db	0
   374  00087E                     STR_11:
   375  00087E  30                 	db	48	;'0'
   376  00087F  31                 	db	49	;'1'
   377  000880  32                 	db	50	;'2'
   378  000881  33                 	db	51	;'3'
   379  000882  34                 	db	52	;'4'
   380  000883  35                 	db	53	;'5'
   381  000884  36                 	db	54	;'6'
   382  000885  37                 	db	55	;'7'
   383  000886  38                 	db	56	;'8'
   384  000887  39                 	db	57	;'9'
   385  000888  61                 	db	97	;'a'
   386  000889  62                 	db	98	;'b'
   387  00088A  63                 	db	99	;'c'
   388  00088B  64                 	db	100	;'d'
   389  00088C  65                 	db	101	;'e'
   390  00088D  66                 	db	102	;'f'
   391  00088E  00                 	db	0
   392  00088F                     STR_2:
   393  00088F  45                 	db	69	;'E'
   394  000890  63                 	db	99	;'c'
   395  000891  68                 	db	104	;'h'
   396  000892  6F                 	db	111	;'o'
   397  000893  3A                 	db	58	;':'
   398  000894  2D                 	db	45
   399  000895  2D                 	db	45
   400  000896  2D                 	db	45
   401  000897  2D                 	db	45
   402  000898  6D                 	db	109	;'m'
   403  000899  6D                 	db	109	;'m'
   404  00089A  20                 	db	32
   405  00089B  2D                 	db	45
   406  00089C  2D                 	db	45
   407  00089D  2D                 	db	45
   408  00089E  53                 	db	83	;'S'
   409  00089F  00                 	db	0
   410  0008A0                     STR_1:
   411  0008A0  47                 	db	71	;'G'
   412  0008A1  61                 	db	97	;'a'
   413  0008A2  6C                 	db	108	;'l'
   414  0008A3  73                 	db	115	;'s'
   415  0008A4  3A                 	db	58	;':'
   416  0008A5  2D                 	db	45
   417  0008A6  2D                 	db	45
   418  0008A7  2D                 	db	45
   419  0008A8  2D                 	db	45
   420  0008A9  20                 	db	32
   421  0008AA  2D                 	db	45
   422  0008AB  2D                 	db	45
   423  0008AC  2D                 	db	45
   424  0008AD  25                 	db	37
   425  0008AE  00                 	db	0
   426  0008AF                     STR_8:
   427  0008AF  25                 	db	37
   428  0008B0  6E                 	db	110	;'n'
   429  0008B1  32                 	db	50	;'2'
   430  0008B2  2F                 	db	47
   431  0008B3  25                 	db	37
   432  0008B4  6E                 	db	110	;'n'
   433  0008B5  32                 	db	50	;'2'
   434  0008B6  2F                 	db	47
   435  0008B7  25                 	db	37
   436  0008B8  6E                 	db	110	;'n'
   437  0008B9  32                 	db	50	;'2'
   438  0008BA  00                 	db	0
   439  0008BB                     STR_9:
   440  0008BB  26                 	db	38
   441  0008BC  6E                 	db	110	;'n'
   442  0008BD  32                 	db	50	;'2'
   443  0008BE  2F                 	db	47
   444  0008BF  25                 	db	37
   445  0008C0  6E                 	db	110	;'n'
   446  0008C1  32                 	db	50	;'2'
   447  0008C2  2F                 	db	47
   448  0008C3  25                 	db	37
   449  0008C4  6E                 	db	110	;'n'
   450  0008C5  32                 	db	50	;'2'
   451  0008C6  00                 	db	0
   452  0008C7                     STR_3:
   453  0008C7  2D                 	db	45
   454  0008C8  2D                 	db	45
   455  0008C9  2D                 	db	45
   456  0008CA  2D                 	db	45
   457  0008CB  00                 	db	0
   458  0008CC                     STR_6:
   459  0008CC  25                 	db	37
   460  0008CD  6E                 	db	110	;'n'
   461  0008CE  33                 	db	51	;'3'
   462  0008CF  00                 	db	0
   463  0008D0                     STR_5:
   464  0008D0  25                 	db	37
   465  0008D1  6E                 	db	110	;'n'
   466  0008D2  34                 	db	52	;'4'
   467  0008D3  00                 	db	0
   468  0008D4  00                 	db	0	; dummy byte at the end
   469  0000                     
   470                           ; #config settings
   471                           
   472                           	psect	cinit
   473  003A1A                     __pcinit:
   474                           	callstack 0
   475  003A1A                     start_initialization:
   476                           	callstack 0
   477  003A1A                     __initialization:
   478                           	callstack 0
   479                           
   480                           ; Initialize objects allocated to BANK1 (47 bytes)
   481                           ; load TBLPTR registers with __pidataBANK1
   482  003A1A  0E90               	movlw	low __pidataBANK1
   483  003A1C  6EF6               	movwf	tblptrl,c
   484  003A1E  0E3D               	movlw	high __pidataBANK1
   485  003A20  6EF7               	movwf	tblptrh,c
   486  003A22  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   487  003A24  6EF8               	movwf	tblptru,c
   488  003A26  EE01  F000         	lfsr	0,__pdataBANK1
   489  003A2A  EE10 F02F          	lfsr	1,47
   490  003A2E                     copy_data0:
   491  003A2E  0009               	tblrd		*+
   492  003A30  CFF5 FFEE          	movff	tablat,postinc0
   493  003A34  50E5               	movf	postdec1,w,c
   494  003A36  50E1               	movf	fsr1l,w,c
   495  003A38  E1FA               	bnz	copy_data0
   496                           
   497                           ; Initialize objects allocated to BANK0 (32 bytes)
   498                           ; load TBLPTR registers with __pidataBANK0
   499  003A3A  0EE6               	movlw	low __pidataBANK0
   500  003A3C  6EF6               	movwf	tblptrl,c
   501  003A3E  0E3D               	movlw	high __pidataBANK0
   502  003A40  6EF7               	movwf	tblptrh,c
   503  003A42  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   504  003A44  6EF8               	movwf	tblptru,c
   505  003A46  EE00  F0D7         	lfsr	0,__pdataBANK0
   506  003A4A  EE10 F020          	lfsr	1,32
   507  003A4E                     copy_data1:
   508  003A4E  0009               	tblrd		*+
   509  003A50  CFF5 FFEE          	movff	tablat,postinc0
   510  003A54  50E5               	movf	postdec1,w,c
   511  003A56  50E1               	movf	fsr1l,w,c
   512  003A58  E1FA               	bnz	copy_data1
   513                           
   514                           ; Initialize objects allocated to COMRAM (1 bytes)
   515                           ; load TBLPTR registers with __pidataCOMRAM
   516  003A5A  0EEA               	movlw	low __pidataCOMRAM
   517  003A5C  6EF6               	movwf	tblptrl,c
   518  003A5E  0E3E               	movlw	high __pidataCOMRAM
   519  003A60  6EF7               	movwf	tblptrh,c
   520  003A62  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   521  003A64  6EF8               	movwf	tblptru,c
   522  003A66  0009               	tblrd		*+	;fetch initializer
   523  003A68  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   524                           
   525                           ; Clear objects allocated to BANK0 (34 bytes)
   526  003A6C  EE00  F0B5         	lfsr	0,__pbssBANK0
   527  003A70  0E22               	movlw	34
   528  003A72                     clear_0:
   529  003A72  6AEE               	clrf	postinc0,c
   530  003A74  06E8               	decf	wreg,f,c
   531  003A76  E1FD               	bnz	clear_0
   532  003A78                     end_of_initialization:
   533                           	callstack 0
   534  003A78                     __end_of__initialization:
   535                           	callstack 0
   536  003A78  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   537  003A7A  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   538  003A7C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   539  003A7E  6EF8               	movwf	tblptru,c
   540  003A80  0100               	movlb	0
   541  003A82  EF16  F01C         	goto	_main	;jump to C main() function
   542                           
   543                           	psect	dataCOMRAM
   544  00005D                     __pdataCOMRAM:
   545                           	callstack 0
   546  00005D                     _giMonth:
   547                           	callstack 0
   548  00005D                     	ds	1
   549                           
   550                           	psect	bssBANK0
   551  0000B5                     __pbssBANK0:
   552                           	callstack 0
   553  0000B5                     _gd_MaxWaterHeight_mm:
   554                           	callstack 0
   555  0000B5                     	ds	4
   556  0000B9                     _gd_TankGalsPer_mm:
   557                           	callstack 0
   558  0000B9                     	ds	4
   559  0000BD                     _gd_SensorHeight_mm:
   560                           	callstack 0
   561  0000BD                     	ds	4
   562  0000C1                     _gd_TankSurfArea_mm2:
   563                           	callstack 0
   564  0000C1                     	ds	4
   565  0000C5                     _gd_Temp:
   566                           	callstack 0
   567  0000C5                     	ds	4
   568  0000C9                     _errno:
   569                           	callstack 0
   570  0000C9                     	ds	2
   571  0000CB                     _Timer3_Cntr:
   572                           	callstack 0
   573  0000CB                     	ds	2
   574  0000CD                     _giTotalSecs:
   575                           	callstack 0
   576  0000CD                     	ds	2
   577  0000CF                     _giEchoCounter:
   578                           	callstack 0
   579  0000CF                     	ds	2
   580  0000D1                     _bIncDays:
   581                           	callstack 0
   582  0000D1                     	ds	1
   583  0000D2                     _giHours:
   584                           	callstack 0
   585  0000D2                     	ds	1
   586  0000D3                     _giMins:
   587                           	callstack 0
   588  0000D3                     	ds	1
   589  0000D4                     _giSecs:
   590                           	callstack 0
   591  0000D4                     	ds	1
   592  0000D5                     _gb_EchoDetected:
   593                           	callstack 0
   594  0000D5                     	ds	1
   595  0000D6                     _gb_UpdateTime:
   596                           	callstack 0
   597  0000D6                     	ds	1
   598                           
   599                           	psect	dataBANK0
   600  0000D7                     __pdataBANK0:
   601                           	callstack 0
   602  0000D7                     _LCD_TestString3:
   603                           	callstack 0
   604  0000D7                     	ds	5
   605  0000DC                     _Timer3_Reload:
   606                           	callstack 0
   607  0000DC                     	ds	2
   608  0000DE                     _Timer3_Sampling:
   609                           	callstack 0
   610  0000DE                     	ds	1
   611  0000DF                     _giYear:
   612                           	callstack 0
   613  0000DF                     	ds	1
   614  0000E0                     _giDay:
   615                           	callstack 0
   616  0000E0                     	ds	1
   617  0000E1                     _gsCurrTime:
   618                           	callstack 0
   619  0000E1                     	ds	9
   620  0000EA                     _gsCurrDate:
   621                           	callstack 0
   622  0000EA                     	ds	9
   623  0000F3                     _gsTotalSecs:
   624                           	callstack 0
   625  0000F3                     	ds	4
   626                           
   627                           	psect	dataBANK1
   628  000100                     __pdataBANK1:
   629                           	callstack 0
   630  000100                     _LCD_TestString1:
   631                           	callstack 0
   632  000100                     	ds	18
   633  000112                     _LCD_TestString2:
   634                           	callstack 0
   635  000112                     	ds	17
   636  000123                     _giMonthEndTbl:
   637                           	callstack 0
   638  000123                     	ds	12
   639                           
   640                           	psect	cstackBANK0
   641  000060                     __pcstackBANK0:
   642                           	callstack 0
   643  000060                     ___flmul@sign:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0x0
   647  000060                     	ds	1
   648  000061                     ___flmul@aexp:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x1
   652  000061                     	ds	1
   653  000062                     ___flmul@grs:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x2
   657  000062                     	ds	4
   658  000066                     ___flmul@bexp:
   659                           	callstack 0
   660                           
   661                           ; 1 bytes @ 0x6
   662  000066                     	ds	1
   663  000067                     ___flmul@prod:
   664                           	callstack 0
   665                           
   666                           ; 4 bytes @ 0x7
   667  000067                     	ds	4
   668  00006B                     ___flmul@temp:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0xB
   672  00006B                     	ds	2
   673  00006D                     ??___fladd:
   674                           
   675                           ; 1 bytes @ 0xD
   676  00006D                     	ds	4
   677  000071                     ___fladd@signs:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x11
   681  000071                     	ds	1
   682  000072                     ___fladd@aexp:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0x12
   686  000072                     	ds	1
   687  000073                     ___fladd@bexp:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x13
   691  000073                     	ds	1
   692  000074                     ___fladd@grs:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x14
   696  000074                     	ds	1
   697  000075                     ?_sqrt:
   698                           	callstack 0
   699  000075                     ?___flsub:
   700                           	callstack 0
   701  000075                     ?_floor:
   702                           	callstack 0
   703  000075                     ?_eval_poly:
   704                           	callstack 0
   705  000075                     ___flsub@b:
   706                           	callstack 0
   707  000075                     sqrt@a:
   708                           	callstack 0
   709  000075                     eval_poly@x:
   710                           	callstack 0
   711  000075                     floor@x:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0x15
   715  000075                     	ds	4
   716  000079                     ??_sqrt:
   717  000079                     eval_poly@d:
   718                           	callstack 0
   719  000079                     ___flsub@a:
   720                           	callstack 0
   721  000079                     floor@i:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x19
   725  000079                     	ds	2
   726  00007B                     eval_poly@n:
   727                           	callstack 0
   728                           
   729                           ; 2 bytes @ 0x1B
   730  00007B                     	ds	2
   731  00007D                     ??_eval_poly:
   732  00007D                     sqrt@sign:
   733                           	callstack 0
   734  00007D                     floor@expon:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x1D
   738  00007D                     	ds	1
   739  00007E                     sqrt@i:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0x1E
   743  00007E                     	ds	1
   744  00007F                     sqrt@tfrac:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x1F
   748  00007F                     	ds	2
   749  000081                     eval_poly@res:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x21
   753  000081                     	ds	2
   754  000083                     sqrt@p:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x23
   758  000083                     	ds	1
   759  000084                     sqrt@grs:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0x24
   763  000084                     	ds	1
   764  000085                     ?_log:
   765                           	callstack 0
   766  000085                     ?_ldexp:
   767                           	callstack 0
   768  000085                     ldexp@value:
   769                           	callstack 0
   770  000085                     log@x:
   771                           	callstack 0
   772                           
   773                           ; 4 bytes @ 0x25
   774  000085                     	ds	3
   775  000088                     sqrt@exp:
   776                           	callstack 0
   777                           
   778                           ; 2 bytes @ 0x28
   779  000088                     	ds	1
   780  000089                     ldexp@newexp:
   781                           	callstack 0
   782                           
   783                           ; 2 bytes @ 0x29
   784  000089                     	ds	1
   785  00008A                     sqrt@root:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0x2A
   789  00008A                     	ds	1
   790  00008B                     ?_exp:
   791                           	callstack 0
   792  00008B                     exp@x:
   793                           	callstack 0
   794                           
   795                           ; 4 bytes @ 0x2B
   796  00008B                     	ds	3
   797  00008E                     sqrt@frac:
   798                           	callstack 0
   799                           
   800                           ; 4 bytes @ 0x2E
   801  00008E                     	ds	1
   802  00008F                     _exp$2412:
   803                           	callstack 0
   804                           
   805                           ; 4 bytes @ 0x2F
   806  00008F                     	ds	3
   807  000092                     ??_ComputeWaterVol:
   808                           
   809                           ; 1 bytes @ 0x32
   810  000092                     	ds	1
   811  000093                     exp@exponent:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x33
   815  000093                     	ds	2
   816  000095                     exp@sign:
   817                           	callstack 0
   818                           
   819                           ; 1 bytes @ 0x35
   820  000095                     	ds	1
   821  000096                     ?_pow:
   822                           	callstack 0
   823  000096                     pow@x:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x36
   827  000096                     	ds	4
   828  00009A                     ComputeWaterVol@d_CurrTemp:
   829                           	callstack 0
   830  00009A                     pow@y:
   831                           	callstack 0
   832                           
   833                           ; 4 bytes @ 0x3A
   834  00009A                     	ds	4
   835  00009E                     ComputeWaterVol@d_SOS:
   836                           	callstack 0
   837  00009E                     _pow$2410:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0x3E
   841  00009E                     	ds	4
   842  0000A2                     ComputeWaterVol@d_mmPerTick:
   843                           	callstack 0
   844  0000A2                     _pow$2411:
   845                           	callstack 0
   846                           
   847                           ; 4 bytes @ 0x42
   848  0000A2                     	ds	4
   849  0000A6                     pow@sign:
   850                           	callstack 0
   851  0000A6                     ComputeWaterVol@d_EmptySpace_mm:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x46
   855  0000A6                     	ds	1
   856  0000A7                     pow@yi:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0x47
   860  0000A7                     	ds	3
   861  0000AA                     ComputeWaterVol@d_WaterVol:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x4A
   865  0000AA                     	ds	1
   866  0000AB                     _InitTankVariables$2409:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0x4B
   870  0000AB                     	ds	3
   871  0000AE                     ComputeWaterVol@i_PercentFull:
   872                           	callstack 0
   873                           
   874                           ; 1 bytes @ 0x4E
   875  0000AE                     	ds	1
   876  0000AF                     ComputeWaterVol@d_WaterHeight_mm:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0x4F
   880  0000AF                     	ds	4
   881  0000B3                     ComputeWaterVol@sGals:
   882                           	callstack 0
   883                           
   884                           ; 1 bytes @ 0x53
   885  0000B3                     	ds	1
   886  0000B4                     ComputeWaterVol@sFill:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0x54
   890  0000B4                     	ds	1
   891                           
   892                           	psect	cstackCOMRAM
   893  000001                     __pcstackCOMRAM:
   894                           	callstack 0
   895  000001                     ??_Timer0_ISR:
   896  000001                     
   897                           ; 1 bytes @ 0x0
   898  000001                     	ds	1
   899  000002                     ??_isdigit:
   900  000002                     ??_LCD_WriteChar:
   901  000002                     ?___wmul:
   902                           	callstack 0
   903  000002                     ?___lwdiv:
   904                           	callstack 0
   905  000002                     ?___fldiv:
   906                           	callstack 0
   907  000002                     ?___flneg:
   908                           	callstack 0
   909  000002                     _CCP2_Init$1296:
   910                           	callstack 0
   911  000002                     LCD_WriteCmd@iDelay:
   912                           	callstack 0
   913  000002                     ___wmul@multiplier:
   914                           	callstack 0
   915  000002                     ___lwdiv@dividend:
   916                           	callstack 0
   917  000002                     ___flge@ff1:
   918                           	callstack 0
   919  000002                     ___flneg@f1:
   920                           	callstack 0
   921  000002                     ___fldiv@b:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x1
   925  000002                     	ds	1
   926  000003                     _isdigit$2113:
   927                           	callstack 0
   928                           
   929                           ; 1 bytes @ 0x2
   930  000003                     	ds	1
   931  000004                     ??_LCD_WriteCmd:
   932  000004                     LCD_WriteChar@iChar:
   933                           	callstack 0
   934  000004                     isdigit@c:
   935                           	callstack 0
   936  000004                     ___wmul@multiplicand:
   937                           	callstack 0
   938  000004                     ___lwdiv@divisor:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x3
   942  000004                     	ds	1
   943  000005                     LCD_WriteString@iData:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x4
   947  000005                     	ds	1
   948  000006                     ___lwdiv@counter:
   949                           	callstack 0
   950  000006                     LCD_WriteCmd@i:
   951                           	callstack 0
   952  000006                     ___wmul@product:
   953                           	callstack 0
   954  000006                     ___flge@ff2:
   955                           	callstack 0
   956  000006                     ___fldiv@a:
   957                           	callstack 0
   958                           
   959                           ; 4 bytes @ 0x5
   960  000006                     	ds	1
   961  000007                     ??_LCD_WriteString:
   962  000007                     ___lwdiv@quotient:
   963                           	callstack 0
   964                           
   965                           ; 2 bytes @ 0x6
   966  000007                     	ds	1
   967  000008                     LCD_WriteCmd@iCmd:
   968                           	callstack 0
   969                           
   970                           ; 1 bytes @ 0x7
   971  000008                     	ds	1
   972  000009                     ??_LCD_Init:
   973  000009                     ?___lwmod:
   974                           	callstack 0
   975  000009                     LCD_WriteString@ix:
   976                           	callstack 0
   977  000009                     LCD_GoTo@iCharPos:
   978                           	callstack 0
   979  000009                     ___lwmod@dividend:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0x8
   983  000009                     	ds	1
   984  00000A                     ??_LCD_GoTo:
   985  00000A                     ??___fldiv:
   986  00000A                     ??___flge:
   987                           
   988                           ; 1 bytes @ 0x9
   989  00000A                     	ds	1
   990  00000B                     ___lwmod@divisor:
   991                           	callstack 0
   992                           
   993                           ; 2 bytes @ 0xA
   994  00000B                     	ds	1
   995  00000C                     LCD_GoTo@iPos:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0xB
   999  00000C                     	ds	1
  1000  00000D                     ___lwmod@counter:
  1001                           	callstack 0
  1002  00000D                     _LCD_GoTo$1457:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0xC
  1006  00000D                     	ds	1
  1007  00000E                     ?_sprintf:
  1008                           	callstack 0
  1009  00000E                     sprintf@sp:
  1010                           	callstack 0
  1011  00000E                     ___fldiv@rem:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0xD
  1015  00000E                     	ds	1
  1016  00000F                     LCD_GoTo@iLine:
  1017                           	callstack 0
  1018                           
  1019                           ; 1 bytes @ 0xE
  1020  00000F                     	ds	1
  1021  000010                     sprintf@f:
  1022                           	callstack 0
  1023                           
  1024                           ; 2 bytes @ 0xF
  1025  000010                     	ds	2
  1026  000012                     ___fldiv@sign:
  1027                           	callstack 0
  1028                           
  1029                           ; 1 bytes @ 0x11
  1030  000012                     	ds	1
  1031  000013                     ___fldiv@new_exp:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x12
  1035  000013                     	ds	2
  1036  000015                     ___fldiv@grs:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x14
  1040  000015                     	ds	3
  1041  000018                     ??_sprintf:
  1042                           
  1043                           ; 1 bytes @ 0x17
  1044  000018                     	ds	1
  1045  000019                     ___fldiv@bexp:
  1046                           	callstack 0
  1047                           
  1048                           ; 1 bytes @ 0x18
  1049  000019                     	ds	1
  1050  00001A                     ___fldiv@aexp:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x19
  1054  00001A                     	ds	1
  1055  00001B                     ?___fltol:
  1056                           	callstack 0
  1057  00001B                     ___fltol@f1:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x1A
  1061  00001B                     	ds	1
  1062  00001C                     sprintf@idx:
  1063                           	callstack 0
  1064                           
  1065                           ; 1 bytes @ 0x1B
  1066  00001C                     	ds	1
  1067  00001D                     sprintf@cp:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x1C
  1071  00001D                     	ds	2
  1072  00001F                     ??___fltol:
  1073  00001F                     _sprintf$1621:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x1E
  1077  00001F                     	ds	2
  1078  000021                     _sprintf$1622:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x20
  1082  000021                     	ds	2
  1083  000023                     ___fltol@sign1:
  1084                           	callstack 0
  1085  000023                     _sprintf$1628:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0x22
  1089  000023                     	ds	1
  1090  000024                     ___fltol@exp1:
  1091                           	callstack 0
  1092                           
  1093                           ; 1 bytes @ 0x23
  1094  000024                     	ds	1
  1095  000025                     ?___xxtofl:
  1096                           	callstack 0
  1097  000025                     sprintf@len:
  1098                           	callstack 0
  1099  000025                     ___xxtofl@val:
  1100                           	callstack 0
  1101                           
  1102                           ; 4 bytes @ 0x24
  1103  000025                     	ds	2
  1104  000027                     sprintf@ap:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x26
  1108  000027                     	ds	2
  1109  000029                     ??___xxtofl:
  1110  000029                     sprintf@val:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0x28
  1114  000029                     	ds	2
  1115  00002B                     sprintf@prec:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x2A
  1119  00002B                     	ds	1
  1120  00002C                     sprintf@width:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x2B
  1124  00002C                     	ds	1
  1125  00002D                     ___xxtofl@sign:
  1126                           	callstack 0
  1127                           
  1128                           ; 1 bytes @ 0x2C
  1129  00002D                     	ds	1
  1130  00002E                     sprintf@c:
  1131                           	callstack 0
  1132  00002E                     ___xxtofl@exp:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x2D
  1136  00002E                     	ds	1
  1137  00002F                     sprintf@flag:
  1138                           	callstack 0
  1139  00002F                     ___xxtofl@arg:
  1140                           	callstack 0
  1141                           
  1142                           ; 4 bytes @ 0x2E
  1143  00002F                     	ds	2
  1144  000031                     ??_ComputeTOD:
  1145                           
  1146                           ; 1 bytes @ 0x30
  1147  000031                     	ds	2
  1148  000033                     ComputeTOD@bIncDays:
  1149                           	callstack 0
  1150  000033                     ___fleq@ff1:
  1151                           	callstack 0
  1152                           
  1153                           ; 4 bytes @ 0x32
  1154  000033                     	ds	4
  1155  000037                     ___fleq@ff2:
  1156                           	callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x36
  1159  000037                     	ds	4
  1160  00003B                     ??___fleq:
  1161                           
  1162                           ; 1 bytes @ 0x3A
  1163  00003B                     	ds	4
  1164  00003F                     ?_frexp:
  1165                           	callstack 0
  1166  00003F                     frexp@value:
  1167                           	callstack 0
  1168                           
  1169                           ; 4 bytes @ 0x3E
  1170  00003F                     	ds	4
  1171  000043                     frexp@eptr:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x42
  1175  000043                     	ds	2
  1176  000045                     ??_frexp:
  1177                           
  1178                           ; 1 bytes @ 0x44
  1179  000045                     	ds	2
  1180  000047                     ?___flmul:
  1181                           	callstack 0
  1182  000047                     ___flmul@b:
  1183                           	callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x46
  1186  000047                     	ds	4
  1187  00004B                     ___flmul@a:
  1188                           	callstack 0
  1189                           
  1190                           ; 4 bytes @ 0x4A
  1191  00004B                     	ds	4
  1192  00004F                     ??___flmul:
  1193                           
  1194                           ; 1 bytes @ 0x4E
  1195  00004F                     	ds	4
  1196  000053                     ?___fladd:
  1197                           	callstack 0
  1198  000053                     ___fladd@b:
  1199                           	callstack 0
  1200                           
  1201                           ; 4 bytes @ 0x52
  1202  000053                     	ds	4
  1203  000057                     ___fladd@a:
  1204                           	callstack 0
  1205                           
  1206                           ; 4 bytes @ 0x56
  1207  000057                     	ds	4
  1208  00005B                     ??_ldexp:
  1209  00005B                     log@exponent:
  1210                           	callstack 0
  1211                           
  1212                           ; 2 bytes @ 0x5A
  1213  00005B                     	ds	2
  1214  00005D                     
  1215                           ; 1 bytes @ 0x5C
  1216 ;;
  1217 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1218 ;;
  1219 ;; *************** function _main *****************
  1220 ;; Defined at:
  1221 ;;		line 46 in file "main.c"
  1222 ;; Parameters:    Size  Location     Type
  1223 ;;		None
  1224 ;; Auto vars:     Size  Location     Type
  1225 ;;  iLine           1    0        unsigned char 
  1226 ;; Return value:  Size  Location     Type
  1227 ;;                  1    wreg      void 
  1228 ;; Registers used:
  1229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1230 ;; Tracked objects:
  1231 ;;		On entry : 0/0
  1232 ;;		On exit  : 0/0
  1233 ;;		Unchanged: 0/0
  1234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1235 ;;      Params:         0       0       0       0       0       0       0       0       0
  1236 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1237 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1238 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1239 ;;Total ram usage:        1 bytes
  1240 ;; Hardware stack levels required when called:    9
  1241 ;; This function calls:
  1242 ;;		_CCP1_Init
  1243 ;;		_CCP2_Init
  1244 ;;		_ComputeTOD
  1245 ;;		_ComputeWaterVol
  1246 ;;		_InitTankVariables
  1247 ;;		_LCD_GoTo
  1248 ;;		_LCD_Init
  1249 ;;		_LCD_WriteString
  1250 ;;		_SysInit
  1251 ;;		_Timer0_Init
  1252 ;;		_Timer1_Init
  1253 ;;		_Timer2_Init
  1254 ;;		_Timer3_Init
  1255 ;; This function is called by:
  1256 ;;		Startup code after reset
  1257 ;; This function uses a non-reentrant model
  1258 ;;
  1259                           
  1260                           	psect	text0
  1261  00382C                     __ptext0:
  1262                           	callstack 0
  1263  00382C                     _main:
  1264                           	callstack 22
  1265  00382C                     
  1266                           ;main.c: 53: if (1)
  1267  00382C  EC6E  F01F         	call	_SysInit	;wreg free
  1268  003830                     
  1269                           ;main.c: 54: {;main.c: 55: LCD_Init();
  1270  003830  EC04  F01E         	call	_LCD_Init	;wreg free
  1271  003834                     
  1272                           ;main.c: 56: LCD_WriteString ("Gals:---- ---%");
  1273  003834  0EA0               	movlw	low STR_1
  1274  003836  6E05               	movwf	LCD_WriteString@iData^0,c
  1275  003838  0E08               	movlw	high STR_1
  1276  00383A  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  1277  00383C  EC97  F01C         	call	_LCD_WriteString	;wreg free
  1278  003840                     
  1279                           ;main.c: 57: LCD_GoTo(1, 0);
  1280  003840  0E00               	movlw	0
  1281  003842  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  1282  003844  0E01               	movlw	1
  1283  003846  ECA9  F01D         	call	_LCD_GoTo
  1284  00384A                     
  1285                           ;main.c: 58: LCD_WriteString ("Echo:----mm ---S");
  1286  00384A  0E8F               	movlw	low STR_2
  1287  00384C  6E05               	movwf	LCD_WriteString@iData^0,c
  1288  00384E  0E08               	movlw	high STR_2
  1289  003850  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  1290  003852  EC97  F01C         	call	_LCD_WriteString	;wreg free
  1291  003856                     
  1292                           ;main.c: 59: };main.c: 61: InitTankVariables();
  1293  003856  ECFD  F01A         	call	_InitTankVariables	;wreg free
  1294  00385A                     
  1295                           ;main.c: 62: Timer0_Init();
  1296  00385A  EC4A  F01F         	call	_Timer0_Init	;wreg free
  1297  00385E                     
  1298                           ;main.c: 63: Timer1_Init();
  1299  00385E  EC21  F01F         	call	_Timer1_Init	;wreg free
  1300  003862                     
  1301                           ;main.c: 64: Timer2_Init();
  1302  003862  EC41  F01F         	call	_Timer2_Init	;wreg free
  1303  003866                     
  1304                           ;main.c: 65: Timer3_Init();
  1305  003866  EC37  F01F         	call	_Timer3_Init	;wreg free
  1306  00386A                     
  1307                           ;main.c: 66: CCP1_Init();
  1308  00386A  EC2C  F01F         	call	_CCP1_Init	;wreg free
  1309  00386E                     
  1310                           ;main.c: 67: CCP2_Init();
  1311  00386E  EC03  F01F         	call	_CCP2_Init	;wreg free
  1312  003872                     
  1313                           ;main.c: 69: INTCONbits.GIE = 1;
  1314  003872  8EF2               	bsf	242,7,c	;volatile
  1315  003874                     
  1316                           ;main.c: 70: INTCONbits.PEIE = 1;
  1317  003874  8CF2               	bsf	242,6,c	;volatile
  1318  003876                     l6508:
  1319                           
  1320                           ;main.c: 73: {;main.c: 74: if (gb_EchoDetected)
  1321  003876  0100               	movlb	0	; () banked
  1322  003878  51D5               	movf	_gb_EchoDetected& (0+255),w,b	;volatile
  1323  00387A  B4D8               	btfsc	status,2,c
  1324  00387C  EF42  F01C         	goto	u7461
  1325  003880  EF44  F01C         	goto	u7460
  1326  003884                     u7461:
  1327  003884  EF49  F01C         	goto	l6514
  1328  003888                     u7460:
  1329  003888                     
  1330                           ; BSR set to: 0
  1331                           ;main.c: 75: {;main.c: 76: ComputeWaterVol();
  1332  003888  ECD7  F011         	call	_ComputeWaterVol	;wreg free
  1333  00388C                     
  1334                           ;main.c: 77: gb_EchoDetected = 0;
  1335  00388C  0E00               	movlw	0
  1336  00388E  0100               	movlb	0	; () banked
  1337  003890  6FD5               	movwf	_gb_EchoDetected& (0+255),b	;volatile
  1338  003892                     l6514:
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;main.c: 78: };main.c: 79: if (gb_UpdateTime)
  1342  003892  51D6               	movf	_gb_UpdateTime& (0+255),w,b	;volatile
  1343  003894  B4D8               	btfsc	status,2,c
  1344  003896  EF4F  F01C         	goto	u7471
  1345  00389A  EF51  F01C         	goto	u7470
  1346  00389E                     u7471:
  1347  00389E  EF3B  F01C         	goto	l6508
  1348  0038A2                     u7470:
  1349  0038A2                     
  1350                           ; BSR set to: 0
  1351                           ;main.c: 80: {;main.c: 81: ComputeTOD();
  1352  0038A2  EC3C  F018         	call	_ComputeTOD	;wreg free
  1353  0038A6                     
  1354                           ;main.c: 82: gb_UpdateTime = 0;
  1355  0038A6  0E00               	movlw	0
  1356  0038A8  0100               	movlb	0	; () banked
  1357  0038AA  6FD6               	movwf	_gb_UpdateTime& (0+255),b	;volatile
  1358  0038AC  EF3B  F01C         	goto	l6508
  1359  0038B0  EF56  F000         	goto	start
  1360  0038B4                     __end_of_main:
  1361                           	callstack 0
  1362                           
  1363 ;; *************** function _Timer3_Init *****************
  1364 ;; Defined at:
  1365 ;;		line 46 in file "Timer_3.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;		None
  1368 ;; Auto vars:     Size  Location     Type
  1369 ;;		None
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, status,2
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1379 ;;      Params:         0       0       0       0       0       0       0       0       0
  1380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1381 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1382 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1383 ;;Total ram usage:        0 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; Hardware stack levels required when called:    3
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_main
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text1
  1394  003E6E                     __ptext1:
  1395                           	callstack 0
  1396  003E6E                     _Timer3_Init:
  1397                           	callstack 27
  1398  003E6E                     
  1399                           ;Timer_3.c: 50: TMR3H = (uint8_t) (Timer3_Reload >> 8);
  1400  003E6E  0100               	movlb	0	; () banked
  1401  003E70  51DD               	movf	(_Timer3_Reload+1)& (0+255),w,b
  1402  003E72  6EB3               	movwf	179,c	;volatile
  1403  003E74                     
  1404                           ; BSR set to: 0
  1405                           ;Timer_3.c: 51: TMR3L = (uint8_t) Timer3_Reload;
  1406  003E74  C0DC  FFB2         	movff	_Timer3_Reload,4018	;volatile
  1407  003E78                     
  1408                           ; BSR set to: 0
  1409                           ;Timer_3.c: 53: PIR2bits.TMR3IF = 0;
  1410  003E78  92A1               	bcf	161,1,c	;volatile
  1411                           
  1412                           ;Timer_3.c: 56: T3CON = 0x33;
  1413  003E7A  0E33               	movlw	51
  1414  003E7C  6EB1               	movwf	177,c	;volatile
  1415  003E7E                     
  1416                           ; BSR set to: 0
  1417                           ;Timer_3.c: 57: PIE2bits.TMR3IE = 1;
  1418  003E7E  82A0               	bsf	160,1,c	;volatile
  1419  003E80                     
  1420                           ; BSR set to: 0
  1421  003E80  0012               	return		;funcret
  1422  003E82                     __end_of_Timer3_Init:
  1423                           	callstack 0
  1424                           
  1425 ;; *************** function _Timer2_Init *****************
  1426 ;; Defined at:
  1427 ;;		line 37 in file "Timer_2.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;		None
  1430 ;; Auto vars:     Size  Location     Type
  1431 ;;		None
  1432 ;; Return value:  Size  Location     Type
  1433 ;;                  1    wreg      void 
  1434 ;; Registers used:
  1435 ;;		wreg, status,2
  1436 ;; Tracked objects:
  1437 ;;		On entry : 0/0
  1438 ;;		On exit  : 0/0
  1439 ;;		Unchanged: 0/0
  1440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1441 ;;      Params:         0       0       0       0       0       0       0       0       0
  1442 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1443 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1444 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1445 ;;Total ram usage:        0 bytes
  1446 ;; Hardware stack levels used:    1
  1447 ;; Hardware stack levels required when called:    3
  1448 ;; This function calls:
  1449 ;;		Nothing
  1450 ;; This function is called by:
  1451 ;;		_main
  1452 ;; This function uses a non-reentrant model
  1453 ;;
  1454                           
  1455                           	psect	text2
  1456  003E82                     __ptext2:
  1457                           	callstack 0
  1458  003E82                     _Timer2_Init:
  1459                           	callstack 27
  1460  003E82                     
  1461                           ;Timer_2.c: 40: PR2 = 0x31;
  1462  003E82  0E31               	movlw	49
  1463  003E84  6EBB               	movwf	187,c	;volatile
  1464                           
  1465                           ;Timer_2.c: 43: TMR2 = 0x00;
  1466  003E86  0E00               	movlw	0
  1467  003E88  6EBC               	movwf	188,c	;volatile
  1468  003E8A                     
  1469                           ;Timer_2.c: 44: PIR1bits.TMR2IF = 0;
  1470  003E8A  929E               	bcf	158,1,c	;volatile
  1471  003E8C                     
  1472                           ;Timer_2.c: 45: PIE1bits.TMR2IE = 0;
  1473  003E8C  929D               	bcf	157,1,c	;volatile
  1474                           
  1475                           ;Timer_2.c: 46: T2CON = (10-2)<<3 | 0 | 0;
  1476  003E8E  0E40               	movlw	64
  1477  003E90  6EBA               	movwf	186,c	;volatile
  1478  003E92  0012               	return		;funcret
  1479  003E94                     __end_of_Timer2_Init:
  1480                           	callstack 0
  1481                           
  1482 ;; *************** function _Timer1_Init *****************
  1483 ;; Defined at:
  1484 ;;		line 14 in file "Timer_1.c"
  1485 ;; Parameters:    Size  Location     Type
  1486 ;;		None
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;		None
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1498 ;;      Params:         0       0       0       0       0       0       0       0       0
  1499 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1500 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1501 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1502 ;;Total ram usage:        0 bytes
  1503 ;; Hardware stack levels used:    1
  1504 ;; Hardware stack levels required when called:    3
  1505 ;; This function calls:
  1506 ;;		Nothing
  1507 ;; This function is called by:
  1508 ;;		_main
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text3
  1513  003E42                     __ptext3:
  1514                           	callstack 0
  1515  003E42                     _Timer1_Init:
  1516                           	callstack 27
  1517  003E42                     
  1518                           ;Timer_1.c: 16: PIR1bits.TMR1IF = 0;
  1519  003E42  909E               	bcf	158,0,c	;volatile
  1520                           
  1521                           ;Timer_1.c: 17: PIE1bits.TMR1IE = 0;
  1522  003E44  909D               	bcf	157,0,c	;volatile
  1523  003E46                     
  1524                           ;Timer_1.c: 18: T1CON = 0x02;
  1525  003E46  0E02               	movlw	2
  1526  003E48  6ECD               	movwf	205,c	;volatile
  1527                           
  1528                           ;Timer_1.c: 20: T1GCON = 0;
  1529  003E4A  0E00               	movlw	0
  1530  003E4C  6ECC               	movwf	204,c	;volatile
  1531                           
  1532                           ;Timer_1.c: 22: TMR1H = 0;
  1533  003E4E  0E00               	movlw	0
  1534  003E50  6ECF               	movwf	207,c	;volatile
  1535                           
  1536                           ;Timer_1.c: 23: TMR1L = 0;
  1537  003E52  0E00               	movlw	0
  1538  003E54  6ECE               	movwf	206,c	;volatile
  1539  003E56  0012               	return		;funcret
  1540  003E58                     __end_of_Timer1_Init:
  1541                           	callstack 0
  1542                           
  1543 ;; *************** function _Timer0_Init *****************
  1544 ;; Defined at:
  1545 ;;		line 23 in file "Timer_0.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;		None
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, status,2
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1559 ;;      Params:         0       0       0       0       0       0       0       0       0
  1560 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1562 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1563 ;;Total ram usage:        0 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    3
  1566 ;; This function calls:
  1567 ;;		Nothing
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text4
  1574  003E94                     __ptext4:
  1575                           	callstack 0
  1576  003E94                     _Timer0_Init:
  1577                           	callstack 27
  1578  003E94  0EE1               	movlw	225
  1579  003E96  6ED7               	movwf	215,c	;volatile
  1580  003E98  0E7B               	movlw	123
  1581  003E9A  6ED6               	movwf	214,c	;volatile
  1582  003E9C                     
  1583                           ;Timer_0.c: 28: INTCONbits.TMR0IF = 0;
  1584  003E9C  94F2               	bcf	242,2,c	;volatile
  1585  003E9E                     
  1586                           ;Timer_0.c: 31: INTCONbits.TMR0IE = 1;
  1587  003E9E  8AF2               	bsf	242,5,c	;volatile
  1588                           
  1589                           ;Timer_0.c: 34: T0CON = 0x97;
  1590  003EA0  0E97               	movlw	151
  1591  003EA2  6ED5               	movwf	213,c	;volatile
  1592  003EA4  0012               	return		;funcret
  1593  003EA6                     __end_of_Timer0_Init:
  1594                           	callstack 0
  1595                           
  1596 ;; *************** function _SysInit *****************
  1597 ;; Defined at:
  1598 ;;		line 10 in file "SysInit.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;		None
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, cstack
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1612 ;;      Params:         0       0       0       0       0       0       0       0       0
  1613 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1615 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1616 ;;Total ram usage:        0 bytes
  1617 ;; Hardware stack levels used:    1
  1618 ;; Hardware stack levels required when called:    5
  1619 ;; This function calls:
  1620 ;;		_OscInit
  1621 ;;		_PIN_MANAGER_Initialize
  1622 ;; This function is called by:
  1623 ;;		_main
  1624 ;; This function uses a non-reentrant model
  1625 ;;
  1626                           
  1627                           	psect	text5
  1628  003EDC                     __ptext5:
  1629                           	callstack 0
  1630  003EDC                     _SysInit:
  1631                           	callstack 25
  1632  003EDC                     
  1633                           ;SysInit.c: 13: PIN_MANAGER_Initialize();
  1634  003EDC  EC30  F01E         	call	_PIN_MANAGER_Initialize	;wreg free
  1635                           
  1636                           ;SysInit.c: 14: OscInit();
  1637  003EE0  EC53  F01F         	call	_OscInit	;wreg free
  1638  003EE4  0012               	return		;funcret
  1639  003EE6                     __end_of_SysInit:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function _PIN_MANAGER_Initialize *****************
  1643 ;; Defined at:
  1644 ;;		line 25 in file "pin_manager.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;		None
  1647 ;; Auto vars:     Size  Location     Type
  1648 ;;		None
  1649 ;; Return value:  Size  Location     Type
  1650 ;;                  1    wreg      void 
  1651 ;; Registers used:
  1652 ;;		wreg, status,2, cstack
  1653 ;; Tracked objects:
  1654 ;;		On entry : 0/0
  1655 ;;		On exit  : 0/0
  1656 ;;		Unchanged: 0/0
  1657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1658 ;;      Params:         0       0       0       0       0       0       0       0       0
  1659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1660 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1661 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1662 ;;Total ram usage:        0 bytes
  1663 ;; Hardware stack levels used:    1
  1664 ;; Hardware stack levels required when called:    4
  1665 ;; This function calls:
  1666 ;;		_PIN_MANAGER_IOC
  1667 ;; This function is called by:
  1668 ;;		_SysInit
  1669 ;; This function uses a non-reentrant model
  1670 ;;
  1671                           
  1672                           	psect	text6
  1673  003C60                     __ptext6:
  1674                           	callstack 0
  1675  003C60                     _PIN_MANAGER_Initialize:
  1676                           	callstack 25
  1677  003C60                     
  1678                           ;pin_manager.c: 30: LATE = 0x00;
  1679  003C60  0E00               	movlw	0
  1680  003C62  6E8D               	movwf	141,c	;volatile
  1681                           
  1682                           ;pin_manager.c: 31: LATD = 0x00;
  1683  003C64  0E00               	movlw	0
  1684  003C66  6E8C               	movwf	140,c	;volatile
  1685                           
  1686                           ;pin_manager.c: 32: LATA = 0x00;
  1687  003C68  0E00               	movlw	0
  1688  003C6A  6E89               	movwf	137,c	;volatile
  1689                           
  1690                           ;pin_manager.c: 33: LATB = 0x00;
  1691  003C6C  0E00               	movlw	0
  1692  003C6E  6E8A               	movwf	138,c	;volatile
  1693                           
  1694                           ;pin_manager.c: 34: LATC = 0x00;
  1695  003C70  0E00               	movlw	0
  1696  003C72  6E8B               	movwf	139,c	;volatile
  1697                           
  1698                           ;pin_manager.c: 39: TRISE = 0x07;
  1699  003C74  0E07               	movlw	7
  1700  003C76  6E96               	movwf	150,c	;volatile
  1701                           
  1702                           ;pin_manager.c: 40: TRISA = 0xD0;
  1703  003C78  0ED0               	movlw	208
  1704  003C7A  6E92               	movwf	146,c	;volatile
  1705                           
  1706                           ;pin_manager.c: 41: TRISB = 0x00;
  1707  003C7C  0E00               	movlw	0
  1708  003C7E  6E93               	movwf	147,c	;volatile
  1709                           
  1710                           ;pin_manager.c: 42: TRISC = 0x84;
  1711  003C80  0E84               	movlw	132
  1712  003C82  6E94               	movwf	148,c	;volatile
  1713  003C84                     
  1714                           ;pin_manager.c: 43: TRISD = 0xFF;
  1715  003C84  6895               	setf	149,c	;volatile
  1716  003C86                     
  1717                           ;pin_manager.c: 44: TRISCbits.RC0 = 0;
  1718  003C86  9094               	bcf	148,0,c	;volatile
  1719  003C88                     
  1720                           ;pin_manager.c: 45: TRISCbits.RC6 = 0;
  1721  003C88  9C94               	bcf	148,6,c	;volatile
  1722  003C8A                     
  1723                           ;pin_manager.c: 46: TRISCbits.RC7 = 0;
  1724  003C8A  9E94               	bcf	148,7,c	;volatile
  1725  003C8C                     
  1726                           ;pin_manager.c: 51: ANSELD = 0xFF;
  1727  003C8C  010F               	movlb	15	; () banked
  1728  003C8E  695E               	setf	94,b	;volatile
  1729                           
  1730                           ;pin_manager.c: 52: ANSELC = 0x00;
  1731  003C90  0E00               	movlw	0
  1732  003C92  6F5D               	movwf	93,b	;volatile
  1733                           
  1734                           ;pin_manager.c: 53: ANSELB = 0x00;
  1735  003C94  0E00               	movlw	0
  1736  003C96  6F5C               	movwf	92,b	;volatile
  1737                           
  1738                           ;pin_manager.c: 54: ANSELE = 0x07;
  1739  003C98  0E07               	movlw	7
  1740  003C9A  6F5F               	movwf	95,b	;volatile
  1741                           
  1742                           ;pin_manager.c: 55: ANSELA = 0x00;
  1743  003C9C  0E00               	movlw	0
  1744  003C9E  6F5B               	movwf	91,b	;volatile
  1745                           
  1746                           ;pin_manager.c: 60: WPUB = 0x00;
  1747  003CA0  0E00               	movlw	0
  1748  003CA2  6E85               	movwf	133,c	;volatile
  1749  003CA4                     
  1750                           ; BSR set to: 15
  1751                           ;pin_manager.c: 61: INTCON2bits.nRBPU = 1;
  1752  003CA4  8EF1               	bsf	241,7,c	;volatile
  1753  003CA6                     
  1754                           ; BSR set to: 15
  1755                           ;pin_manager.c: 62: PIN_MANAGER_IOC();
  1756  003CA6  EC73  F01F         	call	_PIN_MANAGER_IOC	;wreg free
  1757  003CAA  0012               	return		;funcret
  1758  003CAC                     __end_of_PIN_MANAGER_Initialize:
  1759                           	callstack 0
  1760                           
  1761 ;; *************** function _PIN_MANAGER_IOC *****************
  1762 ;; Defined at:
  1763 ;;		line 65 in file "pin_manager.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;		None
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;		None
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		None
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1777 ;;      Params:         0       0       0       0       0       0       0       0       0
  1778 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1780 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1781 ;;Total ram usage:        0 bytes
  1782 ;; Hardware stack levels used:    1
  1783 ;; Hardware stack levels required when called:    3
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_PIN_MANAGER_Initialize
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text7
  1792  003EE6                     __ptext7:
  1793                           	callstack 0
  1794  003EE6                     _PIN_MANAGER_IOC:
  1795                           	callstack 25
  1796  003EE6                     
  1797                           ;pin_manager.c: 68: INTCONbits.IOCIF = 0;
  1798  003EE6  90F2               	bcf	242,0,c	;volatile
  1799  003EE8  0012               	return		;funcret
  1800  003EEA                     __end_of_PIN_MANAGER_IOC:
  1801                           	callstack 0
  1802                           
  1803 ;; *************** function _OscInit *****************
  1804 ;; Defined at:
  1805 ;;		line 17 in file "SysInit.c"
  1806 ;; Parameters:    Size  Location     Type
  1807 ;;		None
  1808 ;; Auto vars:     Size  Location     Type
  1809 ;;		None
  1810 ;; Return value:  Size  Location     Type
  1811 ;;                  1    wreg      void 
  1812 ;; Registers used:
  1813 ;;		wreg, status,2
  1814 ;; Tracked objects:
  1815 ;;		On entry : 0/0
  1816 ;;		On exit  : 0/0
  1817 ;;		Unchanged: 0/0
  1818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1819 ;;      Params:         0       0       0       0       0       0       0       0       0
  1820 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1821 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1822 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1823 ;;Total ram usage:        0 bytes
  1824 ;; Hardware stack levels used:    1
  1825 ;; Hardware stack levels required when called:    3
  1826 ;; This function calls:
  1827 ;;		Nothing
  1828 ;; This function is called by:
  1829 ;;		_SysInit
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text8
  1834  003EA6                     __ptext8:
  1835                           	callstack 0
  1836  003EA6                     _OscInit:
  1837                           	callstack 26
  1838  003EA6                     
  1839                           ;SysInit.c: 20: OSCCON = 0x10;
  1840  003EA6  0E10               	movlw	16
  1841  003EA8  6ED3               	movwf	211,c	;volatile
  1842                           
  1843                           ;SysInit.c: 22: OSCCON2 = 0x00;
  1844  003EAA  0E00               	movlw	0
  1845  003EAC  6ED2               	movwf	210,c	;volatile
  1846                           
  1847                           ;SysInit.c: 24: OSCTUNE = 0x00;
  1848  003EAE  0E00               	movlw	0
  1849  003EB0  6E9B               	movwf	155,c	;volatile
  1850                           
  1851                           ;SysInit.c: 26: ACTCON = 0x00;
  1852  003EB2  0E00               	movlw	0
  1853  003EB4  6EB5               	movwf	181,c	;volatile
  1854  003EB6  0012               	return		;funcret
  1855  003EB8                     __end_of_OscInit:
  1856                           	callstack 0
  1857                           
  1858 ;; *************** function _LCD_Init *****************
  1859 ;; Defined at:
  1860 ;;		line 11 in file "LCD.c"
  1861 ;; Parameters:    Size  Location     Type
  1862 ;;		None
  1863 ;; Auto vars:     Size  Location     Type
  1864 ;;  iCmd            1    0        unsigned char 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  1    wreg      void 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0, cstack
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1874 ;;      Params:         0       0       0       0       0       0       0       0       0
  1875 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1876 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1877 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1878 ;;Total ram usage:        2 bytes
  1879 ;; Hardware stack levels used:    1
  1880 ;; Hardware stack levels required when called:    4
  1881 ;; This function calls:
  1882 ;;		_LCD_WriteCmd
  1883 ;; This function is called by:
  1884 ;;		_main
  1885 ;; This function uses a non-reentrant model
  1886 ;;
  1887                           
  1888                           	psect	text9
  1889  003C08                     __ptext9:
  1890                           	callstack 0
  1891  003C08                     _LCD_Init:
  1892                           	callstack 26
  1893  003C08                     
  1894                           ;LCD.c: 13: uint8_t iCmd;;LCD.c: 15: _delay((unsigned long)((15)*(8000000/4000.0)));
  1895  003C08  0E27               	movlw	39
  1896  003C0A  6E09               	movwf	??_LCD_Init^0,c
  1897  003C0C  0EF5               	movlw	245
  1898  003C0E                     u7487:
  1899  003C0E  2EE8               	decfsz	wreg,f,c
  1900  003C10  D7FE               	bra	u7487
  1901  003C12  2E09               	decfsz	??_LCD_Init^0,f,c
  1902  003C14  D7FC               	bra	u7487
  1903  003C16  F000               	nop	
  1904  003C18                     
  1905                           ;LCD.c: 17: LCD_WriteCmd (iCmd, 40+10);
  1906  003C18  0E00               	movlw	0
  1907  003C1A  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1908  003C1C  0E32               	movlw	50
  1909  003C1E  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1910  003C20  0E3C               	movlw	60
  1911  003C22  EC5A  F01C         	call	_LCD_WriteCmd
  1912  003C26                     
  1913                           ;LCD.c: 21: LCD_WriteCmd (iCmd, 40+10);
  1914  003C26  0E00               	movlw	0
  1915  003C28  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1916  003C2A  0E32               	movlw	50
  1917  003C2C  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1918  003C2E  0E08               	movlw	8
  1919  003C30  EC5A  F01C         	call	_LCD_WriteCmd
  1920  003C34                     
  1921                           ;LCD.c: 24: LCD_WriteCmd (iCmd, 40+10);
  1922  003C34  0E00               	movlw	0
  1923  003C36  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1924  003C38  0E32               	movlw	50
  1925  003C3A  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1926  003C3C  0E06               	movlw	6
  1927  003C3E  EC5A  F01C         	call	_LCD_WriteCmd
  1928  003C42                     
  1929                           ;LCD.c: 26: LCD_WriteCmd (0x01, 2000);
  1930  003C42  0E07               	movlw	7
  1931  003C44  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1932  003C46  0ED0               	movlw	208
  1933  003C48  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1934  003C4A  0E01               	movlw	1
  1935  003C4C  EC5A  F01C         	call	_LCD_WriteCmd
  1936  003C50                     
  1937                           ;LCD.c: 30: LCD_WriteCmd (iCmd, 40+10);
  1938  003C50  0E00               	movlw	0
  1939  003C52  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1940  003C54  0E32               	movlw	50
  1941  003C56  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1942  003C58  0E0C               	movlw	12
  1943  003C5A  EC5A  F01C         	call	_LCD_WriteCmd
  1944  003C5E  0012               	return		;funcret
  1945  003C60                     __end_of_LCD_Init:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _InitTankVariables *****************
  1949 ;; Defined at:
  1950 ;;		line 118 in file "main.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;		None
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1964 ;;      Params:         0       0       0       0       0       0       0       0       0
  1965 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1967 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1968 ;;Total ram usage:        4 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    8
  1971 ;; This function calls:
  1972 ;;		___flmul
  1973 ;;		_pow
  1974 ;; This function is called by:
  1975 ;;		_main
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text10
  1980  0035FA                     __ptext10:
  1981                           	callstack 0
  1982  0035FA                     _InitTankVariables:
  1983                           	callstack 22
  1984  0035FA                     
  1985                           ;main.c: 120: gd_TankSurfArea_mm2 = 3.1416926f * pow(48 * 25.4 / 2, 2);
  1986  0035FA  0E00               	movlw	0
  1987  0035FC  0100               	movlb	0	; () banked
  1988  0035FE  6F9A               	movwf	pow@y& (0+255),b
  1989  003600  0E00               	movlw	0
  1990  003602  6F9B               	movwf	(pow@y+1)& (0+255),b
  1991  003604  0E00               	movlw	0
  1992  003606  6F9C               	movwf	(pow@y+2)& (0+255),b
  1993  003608  0E40               	movlw	64
  1994  00360A  6F9D               	movwf	(pow@y+3)& (0+255),b
  1995  00360C  0E66               	movlw	102
  1996  00360E  6F96               	movwf	pow@x& (0+255),b
  1997  003610  0E66               	movlw	102
  1998  003612  6F97               	movwf	(pow@x+1)& (0+255),b
  1999  003614  0E18               	movlw	24
  2000  003616  6F98               	movwf	(pow@x+2)& (0+255),b
  2001  003618  0E44               	movlw	68
  2002  00361A  6F99               	movwf	(pow@x+3)& (0+255),b
  2003  00361C  ECC2  F014         	call	_pow	;wreg free
  2004  003620  C096  F0AB         	movff	?_pow,_InitTankVariables$2409
  2005  003624  C097  F0AC         	movff	?_pow+1,_InitTankVariables$2409+1
  2006  003628  C098  F0AD         	movff	?_pow+2,_InitTankVariables$2409+2
  2007  00362C  C099  F0AE         	movff	?_pow+3,_InitTankVariables$2409+3
  2008  003630                     
  2009                           ;main.c: 120: gd_TankSurfArea_mm2 = 3.1416926f * pow(48 * 25.4 / 2, 2);
  2010  003630  C0AB  F047         	movff	_InitTankVariables$2409,___flmul@b
  2011  003634  C0AC  F048         	movff	_InitTankVariables$2409+1,___flmul@b+1
  2012  003638  C0AD  F049         	movff	_InitTankVariables$2409+2,___flmul@b+2
  2013  00363C  C0AE  F04A         	movff	_InitTankVariables$2409+3,___flmul@b+3
  2014  003640  0E7E               	movlw	126
  2015  003642  6E4B               	movwf	___flmul@a^0,c
  2016  003644  0E11               	movlw	17
  2017  003646  6E4C               	movwf	(___flmul@a+1)^0,c
  2018  003648  0E49               	movlw	73
  2019  00364A  6E4D               	movwf	(___flmul@a+2)^0,c
  2020  00364C  0E40               	movlw	64
  2021  00364E  6E4E               	movwf	(___flmul@a+3)^0,c
  2022  003650  EC66  F00C         	call	___flmul	;wreg free
  2023  003654  C047  F0C1         	movff	?___flmul,_gd_TankSurfArea_mm2
  2024  003658  C048  F0C2         	movff	?___flmul+1,_gd_TankSurfArea_mm2+1
  2025  00365C  C049  F0C3         	movff	?___flmul+2,_gd_TankSurfArea_mm2+2
  2026  003660  C04A  F0C4         	movff	?___flmul+3,_gd_TankSurfArea_mm2+3
  2027  003664                     
  2028                           ;main.c: 121: gd_SensorHeight_mm = 72 * 25.4;
  2029  003664  0E9A               	movlw	154
  2030  003666  0100               	movlb	0	; () banked
  2031  003668  6FBD               	movwf	_gd_SensorHeight_mm& (0+255),b
  2032  00366A  0E99               	movlw	153
  2033  00366C  6FBE               	movwf	(_gd_SensorHeight_mm+1)& (0+255),b
  2034  00366E  0EE4               	movlw	228
  2035  003670  6FBF               	movwf	(_gd_SensorHeight_mm+2)& (0+255),b
  2036  003672  0E44               	movlw	68
  2037  003674  6FC0               	movwf	(_gd_SensorHeight_mm+3)& (0+255),b
  2038  003676                     
  2039                           ; BSR set to: 0
  2040                           ;main.c: 122: gd_TankGalsPer_mm = gd_TankSurfArea_mm2 * 264.172052e-9;
  2041  003676  C0C1  F047         	movff	_gd_TankSurfArea_mm2,___flmul@b
  2042  00367A  C0C2  F048         	movff	_gd_TankSurfArea_mm2+1,___flmul@b+1
  2043  00367E  C0C3  F049         	movff	_gd_TankSurfArea_mm2+2,___flmul@b+2
  2044  003682  C0C4  F04A         	movff	_gd_TankSurfArea_mm2+3,___flmul@b+3
  2045  003686  0E88               	movlw	136
  2046  003688  6E4B               	movwf	___flmul@a^0,c
  2047  00368A  0ED3               	movlw	211
  2048  00368C  6E4C               	movwf	(___flmul@a+1)^0,c
  2049  00368E  0E8D               	movlw	141
  2050  003690  6E4D               	movwf	(___flmul@a+2)^0,c
  2051  003692  0E34               	movlw	52
  2052  003694  6E4E               	movwf	(___flmul@a+3)^0,c
  2053  003696  EC66  F00C         	call	___flmul	;wreg free
  2054  00369A  C047  F0B9         	movff	?___flmul,_gd_TankGalsPer_mm
  2055  00369E  C048  F0BA         	movff	?___flmul+1,_gd_TankGalsPer_mm+1
  2056  0036A2  C049  F0BB         	movff	?___flmul+2,_gd_TankGalsPer_mm+2
  2057  0036A6  C04A  F0BC         	movff	?___flmul+3,_gd_TankGalsPer_mm+3
  2058  0036AA                     
  2059                           ;main.c: 123: gd_MaxWaterHeight_mm = 68 * 25.4;
  2060  0036AA  0E66               	movlw	102
  2061  0036AC  0100               	movlb	0	; () banked
  2062  0036AE  6FB5               	movwf	_gd_MaxWaterHeight_mm& (0+255),b
  2063  0036B0  0EE6               	movlw	230
  2064  0036B2  6FB6               	movwf	(_gd_MaxWaterHeight_mm+1)& (0+255),b
  2065  0036B4  0ED7               	movlw	215
  2066  0036B6  6FB7               	movwf	(_gd_MaxWaterHeight_mm+2)& (0+255),b
  2067  0036B8  0E44               	movlw	68
  2068  0036BA  6FB8               	movwf	(_gd_MaxWaterHeight_mm+3)& (0+255),b
  2069  0036BC                     
  2070                           ; BSR set to: 0
  2071  0036BC  0012               	return		;funcret
  2072  0036BE                     __end_of_InitTankVariables:
  2073                           	callstack 0
  2074                           
  2075 ;; *************** function _pow *****************
  2076 ;; Defined at:
  2077 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\pow.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  x               4   54[BANK0 ] void 
  2080 ;;  y               4   58[BANK0 ] void 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  yi              4   71[BANK0 ] unsigned long 
  2083 ;;  sign            1   70[BANK0 ] unsigned char 
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  4   54[BANK0 ] unsigned char 
  2086 ;; Registers used:
  2087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2093 ;;      Params:         0       8       0       0       0       0       0       0       0
  2094 ;;      Locals:         0      13       0       0       0       0       0       0       0
  2095 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2096 ;;      Totals:         0      21       0       0       0       0       0       0       0
  2097 ;;Total ram usage:       21 bytes
  2098 ;; Hardware stack levels used:    1
  2099 ;; Hardware stack levels required when called:    7
  2100 ;; This function calls:
  2101 ;;		___fleq
  2102 ;;		___flge
  2103 ;;		___flmul
  2104 ;;		___flneg
  2105 ;;		___fltol
  2106 ;;		___xxtofl
  2107 ;;		_exp
  2108 ;;		_log
  2109 ;; This function is called by:
  2110 ;;		_InitTankVariables
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text11
  2115  002984                     __ptext11:
  2116                           	callstack 0
  2117  002984                     _pow:
  2118                           	callstack 22
  2119  002984  0E00               	movlw	0
  2120  002986  0100               	movlb	0	; () banked
  2121  002988  6FA6               	movwf	pow@sign& (0+255),b
  2122  00298A                     
  2123                           ; BSR set to: 0
  2124  00298A  C096  F033         	movff	pow@x,___fleq@ff1
  2125  00298E  C097  F034         	movff	pow@x+1,___fleq@ff1+1
  2126  002992  C098  F035         	movff	pow@x+2,___fleq@ff1+2
  2127  002996  C099  F036         	movff	pow@x+3,___fleq@ff1+3
  2128  00299A  0E00               	movlw	0
  2129  00299C  6E37               	movwf	___fleq@ff2^0,c
  2130  00299E  0E00               	movlw	0
  2131  0029A0  6E38               	movwf	(___fleq@ff2+1)^0,c
  2132  0029A2  0E00               	movlw	0
  2133  0029A4  6E39               	movwf	(___fleq@ff2+2)^0,c
  2134  0029A6  0E00               	movlw	0
  2135  0029A8  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2136  0029AA  ECC1  F01B         	call	___fleq	;wreg free
  2137  0029AE  A0D8               	btfss	status,0,c
  2138  0029B0  EFDC  F014         	goto	u7331
  2139  0029B4  EFDE  F014         	goto	u7330
  2140  0029B8                     u7331:
  2141  0029B8  EF07  F015         	goto	l6314
  2142  0029BC                     u7330:
  2143  0029BC  0E00               	movlw	0
  2144  0029BE  6E02               	movwf	___flge@ff1^0,c
  2145  0029C0  0E00               	movlw	0
  2146  0029C2  6E03               	movwf	(___flge@ff1+1)^0,c
  2147  0029C4  0E00               	movlw	0
  2148  0029C6  6E04               	movwf	(___flge@ff1+2)^0,c
  2149  0029C8  0E00               	movlw	0
  2150  0029CA  6E05               	movwf	(___flge@ff1+3)^0,c
  2151  0029CC  C09A  F006         	movff	pow@y,___flge@ff2
  2152  0029D0  C09B  F007         	movff	pow@y+1,___flge@ff2+1
  2153  0029D4  C09C  F008         	movff	pow@y+2,___flge@ff2+2
  2154  0029D8  C09D  F009         	movff	pow@y+3,___flge@ff2+3
  2155  0029DC  ECF9  F019         	call	___flge	;wreg free
  2156  0029E0  A0D8               	btfss	status,0,c
  2157  0029E2  EFF5  F014         	goto	u7341
  2158  0029E6  EFF7  F014         	goto	u7340
  2159  0029EA                     u7341:
  2160  0029EA  EFFC  F014         	goto	l1483
  2161  0029EE                     u7340:
  2162  0029EE  0E00               	movlw	0
  2163  0029F0  0100               	movlb	0	; () banked
  2164  0029F2  6FCA               	movwf	(_errno+1)& (0+255),b
  2165  0029F4  0E21               	movlw	33
  2166  0029F6  6FC9               	movwf	_errno& (0+255),b
  2167  0029F8                     l1483:
  2168  0029F8  0E00               	movlw	0
  2169  0029FA  0100               	movlb	0	; () banked
  2170  0029FC  6F96               	movwf	?_pow& (0+255),b
  2171  0029FE  0E00               	movlw	0
  2172  002A00  6F97               	movwf	(?_pow+1)& (0+255),b
  2173  002A02  0E00               	movlw	0
  2174  002A04  6F98               	movwf	(?_pow+2)& (0+255),b
  2175  002A06  0E00               	movlw	0
  2176  002A08  6F99               	movwf	(?_pow+3)& (0+255),b
  2177  002A0A  EFF1  F015         	goto	l1484
  2178  002A0E                     l6314:
  2179  002A0E  C09A  F033         	movff	pow@y,___fleq@ff1
  2180  002A12  C09B  F034         	movff	pow@y+1,___fleq@ff1+1
  2181  002A16  C09C  F035         	movff	pow@y+2,___fleq@ff1+2
  2182  002A1A  C09D  F036         	movff	pow@y+3,___fleq@ff1+3
  2183  002A1E  0E00               	movlw	0
  2184  002A20  6E37               	movwf	___fleq@ff2^0,c
  2185  002A22  0E00               	movlw	0
  2186  002A24  6E38               	movwf	(___fleq@ff2+1)^0,c
  2187  002A26  0E00               	movlw	0
  2188  002A28  6E39               	movwf	(___fleq@ff2+2)^0,c
  2189  002A2A  0E00               	movlw	0
  2190  002A2C  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2191  002A2E  ECC1  F01B         	call	___fleq	;wreg free
  2192  002A32  A0D8               	btfss	status,0,c
  2193  002A34  EF1E  F015         	goto	u7351
  2194  002A38  EF20  F015         	goto	u7350
  2195  002A3C                     u7351:
  2196  002A3C  EF2B  F015         	goto	l6320
  2197  002A40                     u7350:
  2198  002A40  0E00               	movlw	0
  2199  002A42  0100               	movlb	0	; () banked
  2200  002A44  6F96               	movwf	?_pow& (0+255),b
  2201  002A46  0E00               	movlw	0
  2202  002A48  6F97               	movwf	(?_pow+1)& (0+255),b
  2203  002A4A  0E80               	movlw	128
  2204  002A4C  6F98               	movwf	(?_pow+2)& (0+255),b
  2205  002A4E  0E3F               	movlw	63
  2206  002A50  6F99               	movwf	(?_pow+3)& (0+255),b
  2207  002A52  EFF1  F015         	goto	l1484
  2208  002A56                     l6320:
  2209  002A56  0100               	movlb	0	; () banked
  2210  002A58  BF99               	btfsc	(pow@x+3)& (0+255),7,b
  2211  002A5A  EF33  F015         	goto	u7360
  2212  002A5E  EF31  F015         	goto	u7361
  2213  002A62                     u7361:
  2214  002A62  EF8E  F015         	goto	l6332
  2215  002A66                     u7360:
  2216  002A66                     
  2217                           ; BSR set to: 0
  2218  002A66  C09A  F01B         	movff	pow@y,___fltol@f1
  2219  002A6A  C09B  F01C         	movff	pow@y+1,___fltol@f1+1
  2220  002A6E  C09C  F01D         	movff	pow@y+2,___fltol@f1+2
  2221  002A72  C09D  F01E         	movff	pow@y+3,___fltol@f1+3
  2222  002A76  EC76  F019         	call	___fltol	;wreg free
  2223  002A7A  C01B  F0A7         	movff	?___fltol,pow@yi
  2224  002A7E  C01C  F0A8         	movff	?___fltol+1,pow@yi+1
  2225  002A82  C01D  F0A9         	movff	?___fltol+2,pow@yi+2
  2226  002A86  C01E  F0AA         	movff	?___fltol+3,pow@yi+3
  2227  002A8A  C0A7  F025         	movff	pow@yi,___xxtofl@val
  2228  002A8E  C0A8  F026         	movff	pow@yi+1,___xxtofl@val+1
  2229  002A92  C0A9  F027         	movff	pow@yi+2,___xxtofl@val+2
  2230  002A96  C0AA  F028         	movff	pow@yi+3,___xxtofl@val+3
  2231  002A9A  0E00               	movlw	0
  2232  002A9C  ECF2  F015         	call	___xxtofl
  2233  002AA0  C025  F033         	movff	?___xxtofl,___fleq@ff1
  2234  002AA4  C026  F034         	movff	?___xxtofl+1,___fleq@ff1+1
  2235  002AA8  C027  F035         	movff	?___xxtofl+2,___fleq@ff1+2
  2236  002AAC  C028  F036         	movff	?___xxtofl+3,___fleq@ff1+3
  2237  002AB0  C09A  F037         	movff	pow@y,___fleq@ff2
  2238  002AB4  C09B  F038         	movff	pow@y+1,___fleq@ff2+1
  2239  002AB8  C09C  F039         	movff	pow@y+2,___fleq@ff2+2
  2240  002ABC  C09D  F03A         	movff	pow@y+3,___fleq@ff2+3
  2241  002AC0  ECC1  F01B         	call	___fleq	;wreg free
  2242  002AC4  B0D8               	btfsc	status,0,c
  2243  002AC6  EF67  F015         	goto	u7371
  2244  002ACA  EF69  F015         	goto	u7370
  2245  002ACE                     u7371:
  2246  002ACE  EF78  F015         	goto	l6328
  2247  002AD2                     u7370:
  2248  002AD2  0E00               	movlw	0
  2249  002AD4  0100               	movlb	0	; () banked
  2250  002AD6  6FCA               	movwf	(_errno+1)& (0+255),b
  2251  002AD8  0E21               	movlw	33
  2252  002ADA  6FC9               	movwf	_errno& (0+255),b
  2253  002ADC  0E00               	movlw	0
  2254  002ADE  6F96               	movwf	?_pow& (0+255),b
  2255  002AE0  0E00               	movlw	0
  2256  002AE2  6F97               	movwf	(?_pow+1)& (0+255),b
  2257  002AE4  0E00               	movlw	0
  2258  002AE6  6F98               	movwf	(?_pow+2)& (0+255),b
  2259  002AE8  0E00               	movlw	0
  2260  002AEA  6F99               	movwf	(?_pow+3)& (0+255),b
  2261  002AEC  EFF1  F015         	goto	l1484
  2262  002AF0                     l6328:
  2263  002AF0  0100               	movlb	0	; () banked
  2264  002AF2  51A7               	movf	pow@yi& (0+255),w,b
  2265  002AF4  0B01               	andlw	1
  2266  002AF6  6FA6               	movwf	pow@sign& (0+255),b
  2267  002AF8                     
  2268                           ; BSR set to: 0
  2269  002AF8  C096  F002         	movff	pow@x,___flneg@f1
  2270  002AFC  C097  F003         	movff	pow@x+1,___flneg@f1+1
  2271  002B00  C098  F004         	movff	pow@x+2,___flneg@f1+2
  2272  002B04  C099  F005         	movff	pow@x+3,___flneg@f1+3
  2273  002B08  EC7A  F01E         	call	___flneg	;wreg free
  2274  002B0C  C002  F096         	movff	?___flneg,pow@x
  2275  002B10  C003  F097         	movff	?___flneg+1,pow@x+1
  2276  002B14  C004  F098         	movff	?___flneg+2,pow@x+2
  2277  002B18  C005  F099         	movff	?___flneg+3,pow@x+3
  2278  002B1C                     l6332:
  2279  002B1C  C096  F085         	movff	pow@x,log@x
  2280  002B20  C097  F086         	movff	pow@x+1,log@x+1
  2281  002B24  C098  F087         	movff	pow@x+2,log@x+2
  2282  002B28  C099  F088         	movff	pow@x+3,log@x+3
  2283  002B2C  ECCC  F016         	call	_log	;wreg free
  2284  002B30  C085  F09E         	movff	?_log,_pow$2410
  2285  002B34  C086  F09F         	movff	?_log+1,_pow$2410+1
  2286  002B38  C087  F0A0         	movff	?_log+2,_pow$2410+2
  2287  002B3C  C088  F0A1         	movff	?_log+3,_pow$2410+3
  2288  002B40  C09E  F047         	movff	_pow$2410,___flmul@b
  2289  002B44  C09F  F048         	movff	_pow$2410+1,___flmul@b+1
  2290  002B48  C0A0  F049         	movff	_pow$2410+2,___flmul@b+2
  2291  002B4C  C0A1  F04A         	movff	_pow$2410+3,___flmul@b+3
  2292  002B50  C09A  F04B         	movff	pow@y,___flmul@a
  2293  002B54  C09B  F04C         	movff	pow@y+1,___flmul@a+1
  2294  002B58  C09C  F04D         	movff	pow@y+2,___flmul@a+2
  2295  002B5C  C09D  F04E         	movff	pow@y+3,___flmul@a+3
  2296  002B60  EC66  F00C         	call	___flmul	;wreg free
  2297  002B64  C047  F0A2         	movff	?___flmul,_pow$2411
  2298  002B68  C048  F0A3         	movff	?___flmul+1,_pow$2411+1
  2299  002B6C  C049  F0A4         	movff	?___flmul+2,_pow$2411+2
  2300  002B70  C04A  F0A5         	movff	?___flmul+3,_pow$2411+3
  2301  002B74  C0A2  F08B         	movff	_pow$2411,exp@x
  2302  002B78  C0A3  F08C         	movff	_pow$2411+1,exp@x+1
  2303  002B7C  C0A4  F08D         	movff	_pow$2411+2,exp@x+2
  2304  002B80  C0A5  F08E         	movff	_pow$2411+3,exp@x+3
  2305  002B84  EC4E  F013         	call	_exp	;wreg free
  2306  002B88  C08B  F096         	movff	?_exp,pow@x
  2307  002B8C  C08C  F097         	movff	?_exp+1,pow@x+1
  2308  002B90  C08D  F098         	movff	?_exp+2,pow@x+2
  2309  002B94  C08E  F099         	movff	?_exp+3,pow@x+3
  2310  002B98  0100               	movlb	0	; () banked
  2311  002B9A  51A6               	movf	pow@sign& (0+255),w,b
  2312  002B9C  B4D8               	btfsc	status,2,c
  2313  002B9E  EFD3  F015         	goto	u7381
  2314  002BA2  EFD5  F015         	goto	u7380
  2315  002BA6                     u7381:
  2316  002BA6  EFE9  F015         	goto	l1488
  2317  002BAA                     u7380:
  2318  002BAA                     
  2319                           ; BSR set to: 0
  2320  002BAA  C096  F002         	movff	pow@x,___flneg@f1
  2321  002BAE  C097  F003         	movff	pow@x+1,___flneg@f1+1
  2322  002BB2  C098  F004         	movff	pow@x+2,___flneg@f1+2
  2323  002BB6  C099  F005         	movff	pow@x+3,___flneg@f1+3
  2324  002BBA  EC7A  F01E         	call	___flneg	;wreg free
  2325  002BBE  C002  F096         	movff	?___flneg,?_pow
  2326  002BC2  C003  F097         	movff	?___flneg+1,?_pow+1
  2327  002BC6  C004  F098         	movff	?___flneg+2,?_pow+2
  2328  002BCA  C005  F099         	movff	?___flneg+3,?_pow+3
  2329  002BCE  EFF1  F015         	goto	l1484
  2330  002BD2                     l1488:
  2331                           
  2332                           ; BSR set to: 0
  2333  002BD2  C096  F096         	movff	pow@x,?_pow
  2334  002BD6  C097  F097         	movff	pow@x+1,?_pow+1
  2335  002BDA  C098  F098         	movff	pow@x+2,?_pow+2
  2336  002BDE  C099  F099         	movff	pow@x+3,?_pow+3
  2337  002BE2                     l1484:
  2338  002BE2  0012               	return		;funcret
  2339  002BE4                     __end_of_pow:
  2340                           	callstack 0
  2341                           
  2342 ;; *************** function _log *****************
  2343 ;; Defined at:
  2344 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\log.c"
  2345 ;; Parameters:    Size  Location     Type
  2346 ;;  x               4   37[BANK0 ] unsigned char 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  exponent        2   90[COMRAM] int 
  2349 ;; Return value:  Size  Location     Type
  2350 ;;                  4   37[BANK0 ] int 
  2351 ;; Registers used:
  2352 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2353 ;; Tracked objects:
  2354 ;;		On entry : 0/0
  2355 ;;		On exit  : 0/0
  2356 ;;		Unchanged: 0/0
  2357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2358 ;;      Params:         0       4       0       0       0       0       0       0       0
  2359 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2360 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2361 ;;      Totals:         2       4       0       0       0       0       0       0       0
  2362 ;;Total ram usage:        6 bytes
  2363 ;; Hardware stack levels used:    1
  2364 ;; Hardware stack levels required when called:    5
  2365 ;; This function calls:
  2366 ;;		___fladd
  2367 ;;		___fleq
  2368 ;;		___flmul
  2369 ;;		___xxtofl
  2370 ;;		_eval_poly
  2371 ;;		_frexp
  2372 ;; This function is called by:
  2373 ;;		_pow
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text12
  2378  002D98                     __ptext12:
  2379                           	callstack 0
  2380  002D98                     _log:
  2381                           	callstack 23
  2382  002D98  0100               	movlb	0	; () banked
  2383  002D9A  BF88               	btfsc	(log@x+3)& (0+255),7,b
  2384  002D9C  EFD4  F016         	goto	u6480
  2385  002DA0  EFD2  F016         	goto	u6481
  2386  002DA4                     u6481:
  2387  002DA4  EFE2  F016         	goto	l5750
  2388  002DA8                     u6480:
  2389  002DA8                     
  2390                           ; BSR set to: 0
  2391  002DA8  0E00               	movlw	0
  2392  002DAA  6FCA               	movwf	(_errno+1)& (0+255),b
  2393  002DAC  0E21               	movlw	33
  2394  002DAE  6FC9               	movwf	_errno& (0+255),b
  2395  002DB0  0E00               	movlw	0
  2396  002DB2  6F85               	movwf	?_log& (0+255),b
  2397  002DB4  0E00               	movlw	0
  2398  002DB6  6F86               	movwf	(?_log+1)& (0+255),b
  2399  002DB8  0E00               	movlw	0
  2400  002DBA  6F87               	movwf	(?_log+2)& (0+255),b
  2401  002DBC  0E00               	movlw	0
  2402  002DBE  6F88               	movwf	(?_log+3)& (0+255),b
  2403  002DC0  EF9A  F017         	goto	l1550
  2404  002DC4                     l5750:
  2405                           
  2406                           ; BSR set to: 0
  2407  002DC4  C085  F033         	movff	log@x,___fleq@ff1
  2408  002DC8  C086  F034         	movff	log@x+1,___fleq@ff1+1
  2409  002DCC  C087  F035         	movff	log@x+2,___fleq@ff1+2
  2410  002DD0  C088  F036         	movff	log@x+3,___fleq@ff1+3
  2411  002DD4  0E00               	movlw	0
  2412  002DD6  6E37               	movwf	___fleq@ff2^0,c
  2413  002DD8  0E00               	movlw	0
  2414  002DDA  6E38               	movwf	(___fleq@ff2+1)^0,c
  2415  002DDC  0E00               	movlw	0
  2416  002DDE  6E39               	movwf	(___fleq@ff2+2)^0,c
  2417  002DE0  0E00               	movlw	0
  2418  002DE2  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2419  002DE4  ECC1  F01B         	call	___fleq	;wreg free
  2420  002DE8  A0D8               	btfss	status,0,c
  2421  002DEA  EFF9  F016         	goto	u6491
  2422  002DEE  EFFB  F016         	goto	u6490
  2423  002DF2                     u6491:
  2424  002DF2  EF0A  F017         	goto	l5756
  2425  002DF6                     u6490:
  2426  002DF6  0E00               	movlw	0
  2427  002DF8  0100               	movlb	0	; () banked
  2428  002DFA  6FCA               	movwf	(_errno+1)& (0+255),b
  2429  002DFC  0E22               	movlw	34
  2430  002DFE  6FC9               	movwf	_errno& (0+255),b
  2431  002E00  0E00               	movlw	0
  2432  002E02  6F85               	movwf	?_log& (0+255),b
  2433  002E04  0E00               	movlw	0
  2434  002E06  6F86               	movwf	(?_log+1)& (0+255),b
  2435  002E08  0E00               	movlw	0
  2436  002E0A  6F87               	movwf	(?_log+2)& (0+255),b
  2437  002E0C  0E00               	movlw	0
  2438  002E0E  6F88               	movwf	(?_log+3)& (0+255),b
  2439  002E10  EF9A  F017         	goto	l1550
  2440  002E14                     l5756:
  2441  002E14  0E00               	movlw	0
  2442  002E16  6E4B               	movwf	___flmul@a^0,c
  2443  002E18  0E00               	movlw	0
  2444  002E1A  6E4C               	movwf	(___flmul@a+1)^0,c
  2445  002E1C  0E00               	movlw	0
  2446  002E1E  6E4D               	movwf	(___flmul@a+2)^0,c
  2447  002E20  0E40               	movlw	64
  2448  002E22  6E4E               	movwf	(___flmul@a+3)^0,c
  2449  002E24  0E5B               	movlw	low log@exponent
  2450  002E26  6E43               	movwf	frexp@eptr^0,c
  2451  002E28  0E00               	movlw	high log@exponent
  2452  002E2A  6E44               	movwf	(frexp@eptr+1)^0,c
  2453  002E2C  C085  F03F         	movff	log@x,frexp@value
  2454  002E30  C086  F040         	movff	log@x+1,frexp@value+1
  2455  002E34  C087  F041         	movff	log@x+2,frexp@value+2
  2456  002E38  C088  F042         	movff	log@x+3,frexp@value+3
  2457  002E3C  EC5F  F01B         	call	_frexp	;wreg free
  2458  002E40  C03F  F047         	movff	?_frexp,___flmul@b
  2459  002E44  C040  F048         	movff	?_frexp+1,___flmul@b+1
  2460  002E48  C041  F049         	movff	?_frexp+2,___flmul@b+2
  2461  002E4C  C042  F04A         	movff	?_frexp+3,___flmul@b+3
  2462  002E50  EC66  F00C         	call	___flmul	;wreg free
  2463  002E54  C047  F053         	movff	?___flmul,___fladd@b
  2464  002E58  C048  F054         	movff	?___flmul+1,___fladd@b+1
  2465  002E5C  C049  F055         	movff	?___flmul+2,___fladd@b+2
  2466  002E60  C04A  F056         	movff	?___flmul+3,___fladd@b+3
  2467  002E64  0E00               	movlw	0
  2468  002E66  6E57               	movwf	___fladd@a^0,c
  2469  002E68  0E00               	movlw	0
  2470  002E6A  6E58               	movwf	(___fladd@a+1)^0,c
  2471  002E6C  0E80               	movlw	128
  2472  002E6E  6E59               	movwf	(___fladd@a+2)^0,c
  2473  002E70  0EBF               	movlw	191
  2474  002E72  6E5A               	movwf	(___fladd@a+3)^0,c
  2475  002E74  EC05  F00A         	call	___fladd	;wreg free
  2476  002E78  C053  F085         	movff	?___fladd,log@x
  2477  002E7C  C054  F086         	movff	?___fladd+1,log@x+1
  2478  002E80  C055  F087         	movff	?___fladd+2,log@x+2
  2479  002E84  C056  F088         	movff	?___fladd+3,log@x+3
  2480  002E88  065B               	decf	log@exponent^0,f,c
  2481  002E8A  A0D8               	btfss	status,0,c
  2482  002E8C  065C               	decf	(log@exponent+1)^0,f,c
  2483  002E8E  C085  F075         	movff	log@x,eval_poly@x
  2484  002E92  C086  F076         	movff	log@x+1,eval_poly@x+1
  2485  002E96  C087  F077         	movff	log@x+2,eval_poly@x+2
  2486  002E9A  C088  F078         	movff	log@x+3,eval_poly@x+3
  2487  002E9E  0E47               	movlw	low log@coeff
  2488  002EA0  0100               	movlb	0	; () banked
  2489  002EA2  6F79               	movwf	eval_poly@d& (0+255),b
  2490  002EA4  0E08               	movlw	high log@coeff
  2491  002EA6  6F7A               	movwf	(eval_poly@d+1)& (0+255),b
  2492  002EA8  0E00               	movlw	0
  2493  002EAA  6F7C               	movwf	(eval_poly@n+1)& (0+255),b
  2494  002EAC  0E08               	movlw	8
  2495  002EAE  6F7B               	movwf	eval_poly@n& (0+255),b
  2496  002EB0  EC7B  F01A         	call	_eval_poly	;wreg free
  2497  002EB4  C075  F085         	movff	?_eval_poly,log@x
  2498  002EB8  C076  F086         	movff	?_eval_poly+1,log@x+1
  2499  002EBC  C077  F087         	movff	?_eval_poly+2,log@x+2
  2500  002EC0  C078  F088         	movff	?_eval_poly+3,log@x+3
  2501  002EC4  0E18               	movlw	24
  2502  002EC6  6E4B               	movwf	___flmul@a^0,c
  2503  002EC8  0E72               	movlw	114
  2504  002ECA  6E4C               	movwf	(___flmul@a+1)^0,c
  2505  002ECC  0E31               	movlw	49
  2506  002ECE  6E4D               	movwf	(___flmul@a+2)^0,c
  2507  002ED0  0E3F               	movlw	63
  2508  002ED2  6E4E               	movwf	(___flmul@a+3)^0,c
  2509  002ED4  C05B  F025         	movff	log@exponent,___xxtofl@val
  2510  002ED8  C05C  F026         	movff	log@exponent+1,___xxtofl@val+1
  2511  002EDC  0E00               	movlw	0
  2512  002EDE  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  2513  002EE0  0EFF               	movlw	-1
  2514  002EE2  6E27               	movwf	(___xxtofl@val+2)^0,c
  2515  002EE4  6E28               	movwf	(___xxtofl@val+3)^0,c
  2516  002EE6  0E01               	movlw	1
  2517  002EE8  ECF2  F015         	call	___xxtofl
  2518  002EEC  C025  F047         	movff	?___xxtofl,___flmul@b
  2519  002EF0  C026  F048         	movff	?___xxtofl+1,___flmul@b+1
  2520  002EF4  C027  F049         	movff	?___xxtofl+2,___flmul@b+2
  2521  002EF8  C028  F04A         	movff	?___xxtofl+3,___flmul@b+3
  2522  002EFC  EC66  F00C         	call	___flmul	;wreg free
  2523  002F00  C047  F053         	movff	?___flmul,___fladd@b
  2524  002F04  C048  F054         	movff	?___flmul+1,___fladd@b+1
  2525  002F08  C049  F055         	movff	?___flmul+2,___fladd@b+2
  2526  002F0C  C04A  F056         	movff	?___flmul+3,___fladd@b+3
  2527  002F10  C085  F057         	movff	log@x,___fladd@a
  2528  002F14  C086  F058         	movff	log@x+1,___fladd@a+1
  2529  002F18  C087  F059         	movff	log@x+2,___fladd@a+2
  2530  002F1C  C088  F05A         	movff	log@x+3,___fladd@a+3
  2531  002F20  EC05  F00A         	call	___fladd	;wreg free
  2532  002F24  C053  F085         	movff	?___fladd,?_log
  2533  002F28  C054  F086         	movff	?___fladd+1,?_log+1
  2534  002F2C  C055  F087         	movff	?___fladd+2,?_log+2
  2535  002F30  C056  F088         	movff	?___fladd+3,?_log+3
  2536  002F34                     l1550:
  2537  002F34  0012               	return		;funcret
  2538  002F36                     __end_of_log:
  2539                           	callstack 0
  2540                           
  2541 ;; *************** function _exp *****************
  2542 ;; Defined at:
  2543 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\exp.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  x               4   43[BANK0 ] int 
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;  exponent        2   51[BANK0 ] int 
  2548 ;;  sign            1   53[BANK0 ] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  4   43[BANK0 ] unsigned char 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2558 ;;      Params:         0       4       0       0       0       0       0       0       0
  2559 ;;      Locals:         0       7       0       0       0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2561 ;;      Totals:         0      11       0       0       0       0       0       0       0
  2562 ;;Total ram usage:       11 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    6
  2565 ;; This function calls:
  2566 ;;		___fldiv
  2567 ;;		___fleq
  2568 ;;		___flge
  2569 ;;		___flmul
  2570 ;;		___flneg
  2571 ;;		___flsub
  2572 ;;		___fltol
  2573 ;;		___xxtofl
  2574 ;;		_eval_poly
  2575 ;;		_floor
  2576 ;;		_ldexp
  2577 ;; This function is called by:
  2578 ;;		_pow
  2579 ;; This function uses a non-reentrant model
  2580 ;;
  2581                           
  2582                           	psect	text13
  2583  00269C                     __ptext13:
  2584                           	callstack 0
  2585  00269C                     _exp:
  2586                           	callstack 22
  2587  00269C  C08B  F033         	movff	exp@x,___fleq@ff1
  2588  0026A0  C08C  F034         	movff	exp@x+1,___fleq@ff1+1
  2589  0026A4  C08D  F035         	movff	exp@x+2,___fleq@ff1+2
  2590  0026A8  C08E  F036         	movff	exp@x+3,___fleq@ff1+3
  2591  0026AC  0E00               	movlw	0
  2592  0026AE  6E37               	movwf	___fleq@ff2^0,c
  2593  0026B0  0E00               	movlw	0
  2594  0026B2  6E38               	movwf	(___fleq@ff2+1)^0,c
  2595  0026B4  0E00               	movlw	0
  2596  0026B6  6E39               	movwf	(___fleq@ff2+2)^0,c
  2597  0026B8  0E00               	movlw	0
  2598  0026BA  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2599  0026BC  ECC1  F01B         	call	___fleq	;wreg free
  2600  0026C0  A0D8               	btfss	status,0,c
  2601  0026C2  EF65  F013         	goto	u6501
  2602  0026C6  EF67  F013         	goto	u6500
  2603  0026CA                     u6501:
  2604  0026CA  EF72  F013         	goto	l5772
  2605  0026CE                     u6500:
  2606  0026CE  0E00               	movlw	0
  2607  0026D0  0100               	movlb	0	; () banked
  2608  0026D2  6F8B               	movwf	?_exp& (0+255),b
  2609  0026D4  0E00               	movlw	0
  2610  0026D6  6F8C               	movwf	(?_exp+1)& (0+255),b
  2611  0026D8  0E80               	movlw	128
  2612  0026DA  6F8D               	movwf	(?_exp+2)& (0+255),b
  2613  0026DC  0E3F               	movlw	63
  2614  0026DE  6F8E               	movwf	(?_exp+3)& (0+255),b
  2615  0026E0  EFC1  F014         	goto	l1502
  2616  0026E4                     l5772:
  2617  0026E4  0E18               	movlw	24
  2618  0026E6  6E02               	movwf	___flge@ff1^0,c
  2619  0026E8  0E72               	movlw	114
  2620  0026EA  6E03               	movwf	(___flge@ff1+1)^0,c
  2621  0026EC  0E31               	movlw	49
  2622  0026EE  6E04               	movwf	(___flge@ff1+2)^0,c
  2623  0026F0  0E44               	movlw	68
  2624  0026F2  6E05               	movwf	(___flge@ff1+3)^0,c
  2625  0026F4  C08B  F006         	movff	exp@x,___flge@ff2
  2626  0026F8  C08C  F007         	movff	exp@x+1,___flge@ff2+1
  2627  0026FC  C08D  F008         	movff	exp@x+2,___flge@ff2+2
  2628  002700  C08E  F009         	movff	exp@x+3,___flge@ff2+3
  2629  002704  ECF9  F019         	call	___flge	;wreg free
  2630  002708  B0D8               	btfsc	status,0,c
  2631  00270A  EF89  F013         	goto	u6511
  2632  00270E  EF8B  F013         	goto	u6510
  2633  002712                     u6511:
  2634  002712  EF9A  F013         	goto	l5778
  2635  002716                     u6510:
  2636  002716  0E00               	movlw	0
  2637  002718  0100               	movlb	0	; () banked
  2638  00271A  6FCA               	movwf	(_errno+1)& (0+255),b
  2639  00271C  0E22               	movlw	34
  2640  00271E  6FC9               	movwf	_errno& (0+255),b
  2641  002720  0EFF               	movlw	255
  2642  002722  6F8B               	movwf	?_exp& (0+255),b
  2643  002724  0EFF               	movlw	255
  2644  002726  6F8C               	movwf	(?_exp+1)& (0+255),b
  2645  002728  0E7F               	movlw	127
  2646  00272A  6F8D               	movwf	(?_exp+2)& (0+255),b
  2647  00272C  0E7F               	movlw	127
  2648  00272E  6F8E               	movwf	(?_exp+3)& (0+255),b
  2649  002730  EFC1  F014         	goto	l1502
  2650  002734                     l5778:
  2651  002734  C08B  F002         	movff	exp@x,___flge@ff1
  2652  002738  C08C  F003         	movff	exp@x+1,___flge@ff1+1
  2653  00273C  C08D  F004         	movff	exp@x+2,___flge@ff1+2
  2654  002740  C08E  F005         	movff	exp@x+3,___flge@ff1+3
  2655  002744  0E87               	movlw	135
  2656  002746  6E06               	movwf	___flge@ff2^0,c
  2657  002748  0E48               	movlw	72
  2658  00274A  6E07               	movwf	(___flge@ff2+1)^0,c
  2659  00274C  0E3A               	movlw	58
  2660  00274E  6E08               	movwf	(___flge@ff2+2)^0,c
  2661  002750  0EC4               	movlw	196
  2662  002752  6E09               	movwf	(___flge@ff2+3)^0,c
  2663  002754  ECF9  F019         	call	___flge	;wreg free
  2664  002758  B0D8               	btfsc	status,0,c
  2665  00275A  EFB1  F013         	goto	u6521
  2666  00275E  EFB3  F013         	goto	u6520
  2667  002762                     u6521:
  2668  002762  EFC2  F013         	goto	l5784
  2669  002766                     u6520:
  2670  002766  0E00               	movlw	0
  2671  002768  0100               	movlb	0	; () banked
  2672  00276A  6FCA               	movwf	(_errno+1)& (0+255),b
  2673  00276C  0E22               	movlw	34
  2674  00276E  6FC9               	movwf	_errno& (0+255),b
  2675  002770  0E00               	movlw	0
  2676  002772  6F8B               	movwf	?_exp& (0+255),b
  2677  002774  0E00               	movlw	0
  2678  002776  6F8C               	movwf	(?_exp+1)& (0+255),b
  2679  002778  0E00               	movlw	0
  2680  00277A  6F8D               	movwf	(?_exp+2)& (0+255),b
  2681  00277C  0E00               	movlw	0
  2682  00277E  6F8E               	movwf	(?_exp+3)& (0+255),b
  2683  002780  EFC1  F014         	goto	l1502
  2684  002784                     l5784:
  2685  002784  0100               	movlb	0	; () banked
  2686  002786  BF8E               	btfsc	(exp@x+3)& (0+255),7,b
  2687  002788  EFC8  F013         	goto	u6531
  2688  00278C  EFCB  F013         	goto	u6530
  2689  002790                     u6531:
  2690  002790  0E01               	movlw	1
  2691  002792  EFCC  F013         	goto	u6540
  2692  002796                     u6530:
  2693  002796  0E00               	movlw	0
  2694  002798                     u6540:
  2695  002798  6F95               	movwf	exp@sign& (0+255),b
  2696  00279A                     
  2697                           ; BSR set to: 0
  2698  00279A  5195               	movf	exp@sign& (0+255),w,b
  2699  00279C  B4D8               	btfsc	status,2,c
  2700  00279E  EFD3  F013         	goto	u6551
  2701  0027A2  EFD5  F013         	goto	u6550
  2702  0027A6                     u6551:
  2703  0027A6  EFE7  F013         	goto	l5790
  2704  0027AA                     u6550:
  2705  0027AA                     
  2706                           ; BSR set to: 0
  2707  0027AA  C08B  F002         	movff	exp@x,___flneg@f1
  2708  0027AE  C08C  F003         	movff	exp@x+1,___flneg@f1+1
  2709  0027B2  C08D  F004         	movff	exp@x+2,___flneg@f1+2
  2710  0027B6  C08E  F005         	movff	exp@x+3,___flneg@f1+3
  2711  0027BA  EC7A  F01E         	call	___flneg	;wreg free
  2712  0027BE  C002  F08B         	movff	?___flneg,exp@x
  2713  0027C2  C003  F08C         	movff	?___flneg+1,exp@x+1
  2714  0027C6  C004  F08D         	movff	?___flneg+2,exp@x+2
  2715  0027CA  C005  F08E         	movff	?___flneg+3,exp@x+3
  2716  0027CE                     l5790:
  2717  0027CE  C08B  F047         	movff	exp@x,___flmul@b
  2718  0027D2  C08C  F048         	movff	exp@x+1,___flmul@b+1
  2719  0027D6  C08D  F049         	movff	exp@x+2,___flmul@b+2
  2720  0027DA  C08E  F04A         	movff	exp@x+3,___flmul@b+3
  2721  0027DE  0E3B               	movlw	59
  2722  0027E0  6E4B               	movwf	___flmul@a^0,c
  2723  0027E2  0EAA               	movlw	170
  2724  0027E4  6E4C               	movwf	(___flmul@a+1)^0,c
  2725  0027E6  0EB8               	movlw	184
  2726  0027E8  6E4D               	movwf	(___flmul@a+2)^0,c
  2727  0027EA  0E3F               	movlw	63
  2728  0027EC  6E4E               	movwf	(___flmul@a+3)^0,c
  2729  0027EE  EC66  F00C         	call	___flmul	;wreg free
  2730  0027F2  C047  F08B         	movff	?___flmul,exp@x
  2731  0027F6  C048  F08C         	movff	?___flmul+1,exp@x+1
  2732  0027FA  C049  F08D         	movff	?___flmul+2,exp@x+2
  2733  0027FE  C04A  F08E         	movff	?___flmul+3,exp@x+3
  2734  002802  C08B  F075         	movff	exp@x,floor@x
  2735  002806  C08C  F076         	movff	exp@x+1,floor@x+1
  2736  00280A  C08D  F077         	movff	exp@x+2,floor@x+2
  2737  00280E  C08E  F078         	movff	exp@x+3,floor@x+3
  2738  002812  EC9B  F017         	call	_floor	;wreg free
  2739  002816  C075  F08F         	movff	?_floor,_exp$2412
  2740  00281A  C076  F090         	movff	?_floor+1,_exp$2412+1
  2741  00281E  C077  F091         	movff	?_floor+2,_exp$2412+2
  2742  002822  C078  F092         	movff	?_floor+3,_exp$2412+3
  2743  002826  C08F  F01B         	movff	_exp$2412,___fltol@f1
  2744  00282A  C090  F01C         	movff	_exp$2412+1,___fltol@f1+1
  2745  00282E  C091  F01D         	movff	_exp$2412+2,___fltol@f1+2
  2746  002832  C092  F01E         	movff	_exp$2412+3,___fltol@f1+3
  2747  002836  EC76  F019         	call	___fltol	;wreg free
  2748  00283A  C01B  F093         	movff	?___fltol,exp@exponent
  2749  00283E  C01C  F094         	movff	?___fltol+1,exp@exponent+1
  2750  002842  C08B  F075         	movff	exp@x,___flsub@b
  2751  002846  C08C  F076         	movff	exp@x+1,___flsub@b+1
  2752  00284A  C08D  F077         	movff	exp@x+2,___flsub@b+2
  2753  00284E  C08E  F078         	movff	exp@x+3,___flsub@b+3
  2754  002852  C093  F025         	movff	exp@exponent,___xxtofl@val
  2755  002856  C094  F026         	movff	exp@exponent+1,___xxtofl@val+1
  2756  00285A  0E00               	movlw	0
  2757  00285C  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  2758  00285E  0EFF               	movlw	-1
  2759  002860  6E27               	movwf	(___xxtofl@val+2)^0,c
  2760  002862  6E28               	movwf	(___xxtofl@val+3)^0,c
  2761  002864  0E01               	movlw	1
  2762  002866  ECF2  F015         	call	___xxtofl
  2763  00286A  C025  F079         	movff	?___xxtofl,___flsub@a
  2764  00286E  C026  F07A         	movff	?___xxtofl+1,___flsub@a+1
  2765  002872  C027  F07B         	movff	?___xxtofl+2,___flsub@a+2
  2766  002876  C028  F07C         	movff	?___xxtofl+3,___flsub@a+3
  2767  00287A  EC56  F01E         	call	___flsub	;wreg free
  2768  00287E  C075  F08B         	movff	?___flsub,exp@x
  2769  002882  C076  F08C         	movff	?___flsub+1,exp@x+1
  2770  002886  C077  F08D         	movff	?___flsub+2,exp@x+2
  2771  00288A  C078  F08E         	movff	?___flsub+3,exp@x+3
  2772  00288E  C08B  F075         	movff	exp@x,eval_poly@x
  2773  002892  C08C  F076         	movff	exp@x+1,eval_poly@x+1
  2774  002896  C08D  F077         	movff	exp@x+2,eval_poly@x+2
  2775  00289A  C08E  F078         	movff	exp@x+3,eval_poly@x+3
  2776  00289E  0E1F               	movlw	low exp@coeff
  2777  0028A0  0100               	movlb	0	; () banked
  2778  0028A2  6F79               	movwf	eval_poly@d& (0+255),b
  2779  0028A4  0E08               	movlw	high exp@coeff
  2780  0028A6  6F7A               	movwf	(eval_poly@d+1)& (0+255),b
  2781  0028A8  0E00               	movlw	0
  2782  0028AA  6F7C               	movwf	(eval_poly@n+1)& (0+255),b
  2783  0028AC  0E09               	movlw	9
  2784  0028AE  6F7B               	movwf	eval_poly@n& (0+255),b
  2785  0028B0  EC7B  F01A         	call	_eval_poly	;wreg free
  2786  0028B4  C075  F085         	movff	?_eval_poly,ldexp@value
  2787  0028B8  C076  F086         	movff	?_eval_poly+1,ldexp@value+1
  2788  0028BC  C077  F087         	movff	?_eval_poly+2,ldexp@value+2
  2789  0028C0  C078  F088         	movff	?_eval_poly+3,ldexp@value+3
  2790  0028C4  C093  F089         	movff	exp@exponent,ldexp@newexp
  2791  0028C8  C094  F08A         	movff	exp@exponent+1,ldexp@newexp+1
  2792  0028CC  ECDA  F018         	call	_ldexp	;wreg free
  2793  0028D0  C085  F08B         	movff	?_ldexp,exp@x
  2794  0028D4  C086  F08C         	movff	?_ldexp+1,exp@x+1
  2795  0028D8  C087  F08D         	movff	?_ldexp+2,exp@x+2
  2796  0028DC  C088  F08E         	movff	?_ldexp+3,exp@x+3
  2797  0028E0  0100               	movlb	0	; () banked
  2798  0028E2  5195               	movf	exp@sign& (0+255),w,b
  2799  0028E4  B4D8               	btfsc	status,2,c
  2800  0028E6  EF77  F014         	goto	u6561
  2801  0028EA  EF79  F014         	goto	u6560
  2802  0028EE                     u6561:
  2803  0028EE  EFB9  F014         	goto	l1506
  2804  0028F2                     u6560:
  2805  0028F2                     
  2806                           ; BSR set to: 0
  2807  0028F2  C08B  F033         	movff	exp@x,___fleq@ff1
  2808  0028F6  C08C  F034         	movff	exp@x+1,___fleq@ff1+1
  2809  0028FA  C08D  F035         	movff	exp@x+2,___fleq@ff1+2
  2810  0028FE  C08E  F036         	movff	exp@x+3,___fleq@ff1+3
  2811  002902  0EFF               	movlw	255
  2812  002904  6E37               	movwf	___fleq@ff2^0,c
  2813  002906  0EFF               	movlw	255
  2814  002908  6E38               	movwf	(___fleq@ff2+1)^0,c
  2815  00290A  0E7F               	movlw	127
  2816  00290C  6E39               	movwf	(___fleq@ff2+2)^0,c
  2817  00290E  0E7F               	movlw	127
  2818  002910  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2819  002912  ECC1  F01B         	call	___fleq	;wreg free
  2820  002916  A0D8               	btfss	status,0,c
  2821  002918  EF90  F014         	goto	u6571
  2822  00291C  EF92  F014         	goto	u6570
  2823  002920                     u6571:
  2824  002920  EF9D  F014         	goto	l5808
  2825  002924                     u6570:
  2826  002924  0E00               	movlw	0
  2827  002926  0100               	movlb	0	; () banked
  2828  002928  6F8B               	movwf	?_exp& (0+255),b
  2829  00292A  0E00               	movlw	0
  2830  00292C  6F8C               	movwf	(?_exp+1)& (0+255),b
  2831  00292E  0E00               	movlw	0
  2832  002930  6F8D               	movwf	(?_exp+2)& (0+255),b
  2833  002932  0E00               	movlw	0
  2834  002934  6F8E               	movwf	(?_exp+3)& (0+255),b
  2835  002936  EFC1  F014         	goto	l1502
  2836  00293A                     l5808:
  2837  00293A  0E00               	movlw	0
  2838  00293C  6E02               	movwf	___fldiv@b^0,c
  2839  00293E  0E00               	movlw	0
  2840  002940  6E03               	movwf	(___fldiv@b+1)^0,c
  2841  002942  0E80               	movlw	128
  2842  002944  6E04               	movwf	(___fldiv@b+2)^0,c
  2843  002946  0E3F               	movlw	63
  2844  002948  6E05               	movwf	(___fldiv@b+3)^0,c
  2845  00294A  C08B  F006         	movff	exp@x,___fldiv@a
  2846  00294E  C08C  F007         	movff	exp@x+1,___fldiv@a+1
  2847  002952  C08D  F008         	movff	exp@x+2,___fldiv@a+2
  2848  002956  C08E  F009         	movff	exp@x+3,___fldiv@a+3
  2849  00295A  EC7C  F00E         	call	___fldiv	;wreg free
  2850  00295E  C002  F08B         	movff	?___fldiv,?_exp
  2851  002962  C003  F08C         	movff	?___fldiv+1,?_exp+1
  2852  002966  C004  F08D         	movff	?___fldiv+2,?_exp+2
  2853  00296A  C005  F08E         	movff	?___fldiv+3,?_exp+3
  2854  00296E  EFC1  F014         	goto	l1502
  2855  002972                     l1506:
  2856                           
  2857                           ; BSR set to: 0
  2858  002972  C08B  F08B         	movff	exp@x,?_exp
  2859  002976  C08C  F08C         	movff	exp@x+1,?_exp+1
  2860  00297A  C08D  F08D         	movff	exp@x+2,?_exp+2
  2861  00297E  C08E  F08E         	movff	exp@x+3,?_exp+3
  2862  002982                     l1502:
  2863  002982  0012               	return		;funcret
  2864  002984                     __end_of_exp:
  2865                           	callstack 0
  2866                           
  2867 ;; *************** function _ldexp *****************
  2868 ;; Defined at:
  2869 ;;		line 277 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\frexp.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  value           4   37[BANK0 ] unsigned char 
  2872 ;;  newexp          2   41[BANK0 ] int 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;		None
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  4   37[BANK0 ] int 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0, cstack
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2884 ;;      Params:         0       6       0       0       0       0       0       0       0
  2885 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2886 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2887 ;;      Totals:         2       6       0       0       0       0       0       0       0
  2888 ;;Total ram usage:        8 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    4
  2891 ;; This function calls:
  2892 ;;		___fleq
  2893 ;; This function is called by:
  2894 ;;		_exp
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text14
  2899  0031B4                     __ptext14:
  2900                           	callstack 0
  2901  0031B4                     _ldexp:
  2902                           	callstack 23
  2903  0031B4  C085  F033         	movff	ldexp@value,___fleq@ff1
  2904  0031B8  C086  F034         	movff	ldexp@value+1,___fleq@ff1+1
  2905  0031BC  C087  F035         	movff	ldexp@value+2,___fleq@ff1+2
  2906  0031C0  C088  F036         	movff	ldexp@value+3,___fleq@ff1+3
  2907  0031C4  0E00               	movlw	0
  2908  0031C6  6E37               	movwf	___fleq@ff2^0,c
  2909  0031C8  0E00               	movlw	0
  2910  0031CA  6E38               	movwf	(___fleq@ff2+1)^0,c
  2911  0031CC  0E00               	movlw	0
  2912  0031CE  6E39               	movwf	(___fleq@ff2+2)^0,c
  2913  0031D0  0E00               	movlw	0
  2914  0031D2  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2915  0031D4  ECC1  F01B         	call	___fleq	;wreg free
  2916  0031D8  A0D8               	btfss	status,0,c
  2917  0031DA  EFF1  F018         	goto	u6221
  2918  0031DE  EFF3  F018         	goto	u6220
  2919  0031E2                     u6221:
  2920  0031E2  EFFE  F018         	goto	l5632
  2921  0031E6                     u6220:
  2922  0031E6  0E00               	movlw	0
  2923  0031E8  0100               	movlb	0	; () banked
  2924  0031EA  6F85               	movwf	?_ldexp& (0+255),b
  2925  0031EC  0E00               	movlw	0
  2926  0031EE  6F86               	movwf	(?_ldexp+1)& (0+255),b
  2927  0031F0  0E00               	movlw	0
  2928  0031F2  6F87               	movwf	(?_ldexp+2)& (0+255),b
  2929  0031F4  0E00               	movlw	0
  2930  0031F6  6F88               	movwf	(?_ldexp+3)& (0+255),b
  2931  0031F8  EF75  F019         	goto	l1532
  2932  0031FC                     l5632:
  2933  0031FC  0100               	movlb	0	; () banked
  2934  0031FE  5188               	movf	(ldexp@value+3)& (0+255),w,b
  2935  003200  0B7F               	andlw	127
  2936  003202  6E5B               	movwf	??_ldexp^0,c
  2937  003204  6A5C               	clrf	(??_ldexp+1)^0,c
  2938  003206  90D8               	bcf	status,0,c
  2939  003208  365B               	rlcf	??_ldexp^0,f,c
  2940  00320A  365C               	rlcf	(??_ldexp+1)^0,f,c
  2941  00320C  505B               	movf	??_ldexp^0,w,c
  2942  00320E  2789               	addwf	ldexp@newexp& (0+255),f,b
  2943  003210  505C               	movf	(??_ldexp+1)^0,w,c
  2944  003212  238A               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  2945  003214  BF87               	btfsc	(ldexp@value+2)& (0+255),7,b
  2946  003216  EF0F  F019         	goto	u6231
  2947  00321A  EF13  F019         	goto	u6230
  2948  00321E                     u6231:
  2949  00321E  6A5B               	clrf	??_ldexp^0,c
  2950  003220  2A5B               	incf	??_ldexp^0,f,c
  2951  003222  EF14  F019         	goto	u6238
  2952  003226                     u6230:
  2953  003226  6A5B               	clrf	??_ldexp^0,c
  2954  003228                     u6238:
  2955  003228  505B               	movf	??_ldexp^0,w,c
  2956  00322A  0100               	movlb	0	; () banked
  2957  00322C  2789               	addwf	ldexp@newexp& (0+255),f,b
  2958  00322E  0E00               	movlw	0
  2959  003230  238A               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  2960  003232  BF8A               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  2961  003234  EF20  F019         	goto	u6240
  2962  003238  EF1E  F019         	goto	u6241
  2963  00323C                     u6241:
  2964  00323C  EF2E  F019         	goto	l5640
  2965  003240                     u6240:
  2966  003240                     
  2967                           ; BSR set to: 0
  2968  003240  0E00               	movlw	0
  2969  003242  6FCA               	movwf	(_errno+1)& (0+255),b
  2970  003244  0E22               	movlw	34
  2971  003246  6FC9               	movwf	_errno& (0+255),b
  2972  003248  0E00               	movlw	0
  2973  00324A  6F85               	movwf	?_ldexp& (0+255),b
  2974  00324C  0E00               	movlw	0
  2975  00324E  6F86               	movwf	(?_ldexp+1)& (0+255),b
  2976  003250  0E00               	movlw	0
  2977  003252  6F87               	movwf	(?_ldexp+2)& (0+255),b
  2978  003254  0E00               	movlw	0
  2979  003256  6F88               	movwf	(?_ldexp+3)& (0+255),b
  2980  003258  EF75  F019         	goto	l1532
  2981  00325C                     l5640:
  2982                           
  2983                           ; BSR set to: 0
  2984  00325C  BF8A               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  2985  00325E  EF37  F019         	goto	u6251
  2986  003262  058A               	decf	(ldexp@newexp+1)& (0+255),w,b
  2987  003264  A0D8               	btfss	status,0,c
  2988  003266  EF37  F019         	goto	u6251
  2989  00326A  EF39  F019         	goto	u6250
  2990  00326E                     u6251:
  2991  00326E  EF58  F019         	goto	l5656
  2992  003272                     u6250:
  2993  003272                     
  2994                           ; BSR set to: 0
  2995  003272  0E00               	movlw	0
  2996  003274  6FCA               	movwf	(_errno+1)& (0+255),b
  2997  003276  0E22               	movlw	34
  2998  003278  6FC9               	movwf	_errno& (0+255),b
  2999  00327A                     
  3000                           ; BSR set to: 0
  3001  00327A  BF88               	btfsc	(ldexp@value+3)& (0+255),7,b
  3002  00327C  EF44  F019         	goto	u6260
  3003  003280  EF42  F019         	goto	u6261
  3004  003284                     u6261:
  3005  003284  EF4E  F019         	goto	l5652
  3006  003288                     u6260:
  3007  003288                     
  3008                           ; BSR set to: 0
  3009  003288  0EFF               	movlw	255
  3010  00328A  6F85               	movwf	?_ldexp& (0+255),b
  3011  00328C  0EFF               	movlw	255
  3012  00328E  6F86               	movwf	(?_ldexp+1)& (0+255),b
  3013  003290  0E7F               	movlw	127
  3014  003292  6F87               	movwf	(?_ldexp+2)& (0+255),b
  3015  003294  0EFF               	movlw	255
  3016  003296  6F88               	movwf	(?_ldexp+3)& (0+255),b
  3017  003298  EF75  F019         	goto	l1532
  3018  00329C                     l5652:
  3019                           
  3020                           ; BSR set to: 0
  3021  00329C  0EFF               	movlw	255
  3022  00329E  6F85               	movwf	?_ldexp& (0+255),b
  3023  0032A0  0EFF               	movlw	255
  3024  0032A2  6F86               	movwf	(?_ldexp+1)& (0+255),b
  3025  0032A4  0E7F               	movlw	127
  3026  0032A6  6F87               	movwf	(?_ldexp+2)& (0+255),b
  3027  0032A8  0E7F               	movlw	127
  3028  0032AA  6F88               	movwf	(?_ldexp+3)& (0+255),b
  3029  0032AC  EF75  F019         	goto	l1532
  3030  0032B0                     l5656:
  3031                           
  3032                           ; BSR set to: 0
  3033  0032B0  358A               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  3034  0032B2  318A               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  3035  0032B4  6E5C               	movwf	(??_ldexp+1)^0,c
  3036  0032B6  3189               	rrcf	ldexp@newexp& (0+255),w,b
  3037  0032B8  6E5B               	movwf	??_ldexp^0,c
  3038  0032BA  5188               	movf	(ldexp@value+3)& (0+255),w,b
  3039  0032BC  185B               	xorwf	??_ldexp^0,w,c
  3040  0032BE  0B80               	andlw	-128
  3041  0032C0  185B               	xorwf	??_ldexp^0,w,c
  3042  0032C2  6F88               	movwf	(ldexp@value+3)& (0+255),b
  3043  0032C4  C089  F05B         	movff	ldexp@newexp,??_ldexp
  3044  0032C8  0E01               	movlw	1
  3045  0032CA  165B               	andwf	??_ldexp^0,f,c
  3046  0032CC  325B               	rrcf	??_ldexp^0,f,c
  3047  0032CE  325B               	rrcf	??_ldexp^0,f,c
  3048  0032D0  5187               	movf	(ldexp@value+2)& (0+255),w,b
  3049  0032D2  185B               	xorwf	??_ldexp^0,w,c
  3050  0032D4  0B7F               	andlw	-129
  3051  0032D6  185B               	xorwf	??_ldexp^0,w,c
  3052  0032D8  6F87               	movwf	(ldexp@value+2)& (0+255),b
  3053  0032DA                     
  3054                           ; BSR set to: 0
  3055  0032DA  C085  F085         	movff	ldexp@value,?_ldexp
  3056  0032DE  C086  F086         	movff	ldexp@value+1,?_ldexp+1
  3057  0032E2  C087  F087         	movff	ldexp@value+2,?_ldexp+2
  3058  0032E6  C088  F088         	movff	ldexp@value+3,?_ldexp+3
  3059  0032EA                     l1532:
  3060                           
  3061                           ; BSR set to: 0
  3062  0032EA  0012               	return		;funcret
  3063  0032EC                     __end_of_ldexp:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function _floor *****************
  3067 ;; Defined at:
  3068 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\floor.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  x               4   21[BANK0 ] int 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  i               4   25[BANK0 ] int 
  3073 ;;  expon           2   29[BANK0 ] int 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  4   21[BANK0 ] int 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3083 ;;      Params:         0       4       0       0       0       0       0       0       0
  3084 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3085 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3086 ;;      Totals:         0      10       0       0       0       0       0       0       0
  3087 ;;Total ram usage:       10 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    5
  3090 ;; This function calls:
  3091 ;;		___fladd
  3092 ;;		___flge
  3093 ;;		___fltol
  3094 ;;		___xxtofl
  3095 ;;		_frexp
  3096 ;; This function is called by:
  3097 ;;		_exp
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text15
  3102  002F36                     __ptext15:
  3103                           	callstack 0
  3104  002F36                     _floor:
  3105                           	callstack 22
  3106  002F36  C075  F03F         	movff	floor@x,frexp@value
  3107  002F3A  C076  F040         	movff	floor@x+1,frexp@value+1
  3108  002F3E  C077  F041         	movff	floor@x+2,frexp@value+2
  3109  002F42  C078  F042         	movff	floor@x+3,frexp@value+3
  3110  002F46  0E7D               	movlw	low floor@expon
  3111  002F48  6E43               	movwf	frexp@eptr^0,c
  3112  002F4A  0E00               	movlw	high floor@expon
  3113  002F4C  6E44               	movwf	(frexp@eptr+1)^0,c
  3114  002F4E  EC5F  F01B         	call	_frexp	;wreg free
  3115  002F52  0100               	movlb	0	; () banked
  3116  002F54  BF7E               	btfsc	(floor@expon+1)& (0+255),7,b
  3117  002F56  EFB1  F017         	goto	u6170
  3118  002F5A  EFAF  F017         	goto	u6171
  3119  002F5E                     u6171:
  3120  002F5E  EFCC  F017         	goto	l5610
  3121  002F62                     u6170:
  3122  002F62                     
  3123                           ; BSR set to: 0
  3124  002F62  BF78               	btfsc	(floor@x+3)& (0+255),7,b
  3125  002F64  EFB8  F017         	goto	u6180
  3126  002F68  EFB6  F017         	goto	u6181
  3127  002F6C                     u6181:
  3128  002F6C  EFC2  F017         	goto	l5606
  3129  002F70                     u6180:
  3130  002F70                     
  3131                           ; BSR set to: 0
  3132  002F70  0E00               	movlw	0
  3133  002F72  6F75               	movwf	?_floor& (0+255),b
  3134  002F74  0E00               	movlw	0
  3135  002F76  6F76               	movwf	(?_floor+1)& (0+255),b
  3136  002F78  0E80               	movlw	128
  3137  002F7A  6F77               	movwf	(?_floor+2)& (0+255),b
  3138  002F7C  0EBF               	movlw	191
  3139  002F7E  6F78               	movwf	(?_floor+3)& (0+255),b
  3140  002F80  EF3B  F018         	goto	l1520
  3141  002F84                     l5606:
  3142                           
  3143                           ; BSR set to: 0
  3144  002F84  0E00               	movlw	0
  3145  002F86  6F75               	movwf	?_floor& (0+255),b
  3146  002F88  0E00               	movlw	0
  3147  002F8A  6F76               	movwf	(?_floor+1)& (0+255),b
  3148  002F8C  0E00               	movlw	0
  3149  002F8E  6F77               	movwf	(?_floor+2)& (0+255),b
  3150  002F90  0E00               	movlw	0
  3151  002F92  6F78               	movwf	(?_floor+3)& (0+255),b
  3152  002F94  EF3B  F018         	goto	l1520
  3153  002F98                     l5610:
  3154                           
  3155                           ; BSR set to: 0
  3156  002F98  517E               	movf	(floor@expon+1)& (0+255),w,b
  3157  002F9A  E109               	bnz	u6190
  3158  002F9C  0E1D               	movlw	29
  3159  002F9E  5D7D               	subwf	floor@expon& (0+255),w,b
  3160  002FA0  A0D8               	btfss	status,0,c
  3161  002FA2  EFD5  F017         	goto	u6191
  3162  002FA6  EFD7  F017         	goto	u6190
  3163  002FAA                     u6191:
  3164  002FAA  EFE1  F017         	goto	l5614
  3165  002FAE                     u6190:
  3166  002FAE                     
  3167                           ; BSR set to: 0
  3168  002FAE  C075  F075         	movff	floor@x,?_floor
  3169  002FB2  C076  F076         	movff	floor@x+1,?_floor+1
  3170  002FB6  C077  F077         	movff	floor@x+2,?_floor+2
  3171  002FBA  C078  F078         	movff	floor@x+3,?_floor+3
  3172  002FBE  EF3B  F018         	goto	l1520
  3173  002FC2                     l5614:
  3174                           
  3175                           ; BSR set to: 0
  3176  002FC2  C075  F01B         	movff	floor@x,___fltol@f1
  3177  002FC6  C076  F01C         	movff	floor@x+1,___fltol@f1+1
  3178  002FCA  C077  F01D         	movff	floor@x+2,___fltol@f1+2
  3179  002FCE  C078  F01E         	movff	floor@x+3,___fltol@f1+3
  3180  002FD2  EC76  F019         	call	___fltol	;wreg free
  3181  002FD6  C01B  F025         	movff	?___fltol,___xxtofl@val
  3182  002FDA  C01C  F026         	movff	?___fltol+1,___xxtofl@val+1
  3183  002FDE  C01D  F027         	movff	?___fltol+2,___xxtofl@val+2
  3184  002FE2  C01E  F028         	movff	?___fltol+3,___xxtofl@val+3
  3185  002FE6  0E01               	movlw	1
  3186  002FE8  ECF2  F015         	call	___xxtofl
  3187  002FEC  C025  F079         	movff	?___xxtofl,floor@i
  3188  002FF0  C026  F07A         	movff	?___xxtofl+1,floor@i+1
  3189  002FF4  C027  F07B         	movff	?___xxtofl+2,floor@i+2
  3190  002FF8  C028  F07C         	movff	?___xxtofl+3,floor@i+3
  3191  002FFC  C075  F002         	movff	floor@x,___flge@ff1
  3192  003000  C076  F003         	movff	floor@x+1,___flge@ff1+1
  3193  003004  C077  F004         	movff	floor@x+2,___flge@ff1+2
  3194  003008  C078  F005         	movff	floor@x+3,___flge@ff1+3
  3195  00300C  C079  F006         	movff	floor@i,___flge@ff2
  3196  003010  C07A  F007         	movff	floor@i+1,___flge@ff2+1
  3197  003014  C07B  F008         	movff	floor@i+2,___flge@ff2+2
  3198  003018  C07C  F009         	movff	floor@i+3,___flge@ff2+3
  3199  00301C  ECF9  F019         	call	___flge	;wreg free
  3200  003020  B0D8               	btfsc	status,0,c
  3201  003022  EF15  F018         	goto	u6201
  3202  003026  EF17  F018         	goto	u6200
  3203  00302A                     u6201:
  3204  00302A  EF33  F018         	goto	l1522
  3205  00302E                     u6200:
  3206  00302E  C079  F053         	movff	floor@i,___fladd@b
  3207  003032  C07A  F054         	movff	floor@i+1,___fladd@b+1
  3208  003036  C07B  F055         	movff	floor@i+2,___fladd@b+2
  3209  00303A  C07C  F056         	movff	floor@i+3,___fladd@b+3
  3210  00303E  0E00               	movlw	0
  3211  003040  6E57               	movwf	___fladd@a^0,c
  3212  003042  0E00               	movlw	0
  3213  003044  6E58               	movwf	(___fladd@a+1)^0,c
  3214  003046  0E80               	movlw	128
  3215  003048  6E59               	movwf	(___fladd@a+2)^0,c
  3216  00304A  0EBF               	movlw	191
  3217  00304C  6E5A               	movwf	(___fladd@a+3)^0,c
  3218  00304E  EC05  F00A         	call	___fladd	;wreg free
  3219  003052  C053  F075         	movff	?___fladd,?_floor
  3220  003056  C054  F076         	movff	?___fladd+1,?_floor+1
  3221  00305A  C055  F077         	movff	?___fladd+2,?_floor+2
  3222  00305E  C056  F078         	movff	?___fladd+3,?_floor+3
  3223  003062  EF3B  F018         	goto	l1520
  3224  003066                     l1522:
  3225  003066  C079  F075         	movff	floor@i,?_floor
  3226  00306A  C07A  F076         	movff	floor@i+1,?_floor+1
  3227  00306E  C07B  F077         	movff	floor@i+2,?_floor+2
  3228  003072  C07C  F078         	movff	floor@i+3,?_floor+3
  3229  003076                     l1520:
  3230  003076  0012               	return		;funcret
  3231  003078                     __end_of_floor:
  3232                           	callstack 0
  3233                           
  3234 ;; *************** function _frexp *****************
  3235 ;; Defined at:
  3236 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\frexp.c"
  3237 ;; Parameters:    Size  Location     Type
  3238 ;;  value           4   62[COMRAM] int 
  3239 ;;  eptr            2   66[COMRAM] PTR int 
  3240 ;;		 -> log@exponent(2), floor@expon(2), 
  3241 ;; Auto vars:     Size  Location     Type
  3242 ;;		None
  3243 ;; Return value:  Size  Location     Type
  3244 ;;                  4   62[COMRAM] PTR int 
  3245 ;; Registers used:
  3246 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3247 ;; Tracked objects:
  3248 ;;		On entry : 0/0
  3249 ;;		On exit  : 0/0
  3250 ;;		Unchanged: 0/0
  3251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3252 ;;      Params:         6       0       0       0       0       0       0       0       0
  3253 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3254 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3255 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3256 ;;Total ram usage:        8 bytes
  3257 ;; Hardware stack levels used:    1
  3258 ;; Hardware stack levels required when called:    4
  3259 ;; This function calls:
  3260 ;;		___fleq
  3261 ;; This function is called by:
  3262 ;;		_floor
  3263 ;;		_log
  3264 ;; This function uses a non-reentrant model
  3265 ;;
  3266                           
  3267                           	psect	text16
  3268  0036BE                     __ptext16:
  3269                           	callstack 0
  3270  0036BE                     _frexp:
  3271                           	callstack 23
  3272  0036BE  C03F  F033         	movff	frexp@value,___fleq@ff1
  3273  0036C2  C040  F034         	movff	frexp@value+1,___fleq@ff1+1
  3274  0036C6  C041  F035         	movff	frexp@value+2,___fleq@ff1+2
  3275  0036CA  C042  F036         	movff	frexp@value+3,___fleq@ff1+3
  3276  0036CE  0E00               	movlw	0
  3277  0036D0  6E37               	movwf	___fleq@ff2^0,c
  3278  0036D2  0E00               	movlw	0
  3279  0036D4  6E38               	movwf	(___fleq@ff2+1)^0,c
  3280  0036D6  0E00               	movlw	0
  3281  0036D8  6E39               	movwf	(___fleq@ff2+2)^0,c
  3282  0036DA  0E00               	movlw	0
  3283  0036DC  6E3A               	movwf	(___fleq@ff2+3)^0,c
  3284  0036DE  ECC1  F01B         	call	___fleq	;wreg free
  3285  0036E2  A0D8               	btfss	status,0,c
  3286  0036E4  EF76  F01B         	goto	u5911
  3287  0036E8  EF78  F01B         	goto	u5910
  3288  0036EC                     u5911:
  3289  0036EC  EF8A  F01B         	goto	l5432
  3290  0036F0                     u5910:
  3291  0036F0  C043  FFD9         	movff	frexp@eptr,fsr2l
  3292  0036F4  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3293  0036F8  0E00               	movlw	0
  3294  0036FA  6EDE               	movwf	postinc2,c
  3295  0036FC  0E00               	movlw	0
  3296  0036FE  6EDD               	movwf	postdec2,c
  3297  003700  0E00               	movlw	0
  3298  003702  6E3F               	movwf	?_frexp^0,c
  3299  003704  0E00               	movlw	0
  3300  003706  6E40               	movwf	(?_frexp+1)^0,c
  3301  003708  0E00               	movlw	0
  3302  00370A  6E41               	movwf	(?_frexp+2)^0,c
  3303  00370C  0E00               	movlw	0
  3304  00370E  6E42               	movwf	(?_frexp+3)^0,c
  3305  003710  EFC0  F01B         	goto	l1528
  3306  003714                     l5432:
  3307  003714  5042               	movf	(frexp@value+3)^0,w,c
  3308  003716  0B7F               	andlw	127
  3309  003718  6E45               	movwf	??_frexp^0,c
  3310  00371A  6A46               	clrf	(??_frexp+1)^0,c
  3311  00371C  90D8               	bcf	status,0,c
  3312  00371E  3645               	rlcf	??_frexp^0,f,c
  3313  003720  3646               	rlcf	(??_frexp+1)^0,f,c
  3314  003722  C043  FFD9         	movff	frexp@eptr,fsr2l
  3315  003726  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3316  00372A  C045  FFDE         	movff	??_frexp,postinc2
  3317  00372E  C046  FFDD         	movff	??_frexp+1,postdec2
  3318  003732  BE41               	btfsc	(frexp@value+2)^0,7,c
  3319  003734  EF9E  F01B         	goto	u5921
  3320  003738  EFA2  F01B         	goto	u5920
  3321  00373C                     u5921:
  3322  00373C  6A45               	clrf	??_frexp^0,c
  3323  00373E  2A45               	incf	??_frexp^0,f,c
  3324  003740  EFA3  F01B         	goto	u5928
  3325  003744                     u5920:
  3326  003744  6A45               	clrf	??_frexp^0,c
  3327  003746                     u5928:
  3328  003746  5045               	movf	??_frexp^0,w,c
  3329  003748  C043  FFD9         	movff	frexp@eptr,fsr2l
  3330  00374C  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3331  003750  12DE               	iorwf	postinc2,f,c
  3332  003752  0E00               	movlw	0
  3333  003754  12DD               	iorwf	postdec2,f,c
  3334  003756  C043  FFD9         	movff	frexp@eptr,fsr2l
  3335  00375A  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3336  00375E  0E82               	movlw	130
  3337  003760  26DE               	addwf	postinc2,f,c
  3338  003762  0EFF               	movlw	255
  3339  003764  22DD               	addwfc	postdec2,f,c
  3340  003766  5042               	movf	(frexp@value+3)^0,w,c
  3341  003768  0B80               	andlw	-128
  3342  00376A  093F               	iorlw	63
  3343  00376C  6E42               	movwf	(frexp@value+3)^0,c
  3344  00376E  9E41               	bcf	(frexp@value+2)^0,7,c
  3345  003770  C03F  F03F         	movff	frexp@value,?_frexp
  3346  003774  C040  F040         	movff	frexp@value+1,?_frexp+1
  3347  003778  C041  F041         	movff	frexp@value+2,?_frexp+2
  3348  00377C  C042  F042         	movff	frexp@value+3,?_frexp+3
  3349  003780                     l1528:
  3350  003780  0012               	return		;funcret
  3351  003782                     __end_of_frexp:
  3352                           	callstack 0
  3353                           
  3354 ;; *************** function ___fleq *****************
  3355 ;; Defined at:
  3356 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fleq.c"
  3357 ;; Parameters:    Size  Location     Type
  3358 ;;  ff1             4   50[COMRAM] PTR int 
  3359 ;;  ff2             4   54[COMRAM] PTR int 
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;		None
  3362 ;; Return value:  Size  Location     Type
  3363 ;;		None               void
  3364 ;; Registers used:
  3365 ;;		wreg, status,2, status,0
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3371 ;;      Params:         8       0       0       0       0       0       0       0       0
  3372 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3373 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3374 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3375 ;;Total ram usage:       12 bytes
  3376 ;; Hardware stack levels used:    1
  3377 ;; Hardware stack levels required when called:    3
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		_pow
  3382 ;;		_exp
  3383 ;;		_frexp
  3384 ;;		_ldexp
  3385 ;;		_log
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text17
  3390  003782                     __ptext17:
  3391                           	callstack 0
  3392  003782                     ___fleq:
  3393                           	callstack 23
  3394  003782  0E00               	movlw	0
  3395  003784  1433               	andwf	___fleq@ff1^0,w,c
  3396  003786  6E3B               	movwf	??___fleq^0,c
  3397  003788  0E00               	movlw	0
  3398  00378A  1434               	andwf	(___fleq@ff1+1)^0,w,c
  3399  00378C  6E3C               	movwf	(??___fleq+1)^0,c
  3400  00378E  0E80               	movlw	128
  3401  003790  1435               	andwf	(___fleq@ff1+2)^0,w,c
  3402  003792  6E3D               	movwf	(??___fleq+2)^0,c
  3403  003794  0E7F               	movlw	127
  3404  003796  1436               	andwf	(___fleq@ff1+3)^0,w,c
  3405  003798  6E3E               	movwf	(??___fleq+3)^0,c
  3406  00379A  503B               	movf	??___fleq^0,w,c
  3407  00379C  103C               	iorwf	(??___fleq+1)^0,w,c
  3408  00379E  103D               	iorwf	(??___fleq+2)^0,w,c
  3409  0037A0  103E               	iorwf	(??___fleq+3)^0,w,c
  3410  0037A2  A4D8               	btfss	status,2,c
  3411  0037A4  EFD6  F01B         	goto	u5081
  3412  0037A8  EFD8  F01B         	goto	u5080
  3413  0037AC                     u5081:
  3414  0037AC  EFE0  F01B         	goto	l4968
  3415  0037B0                     u5080:
  3416  0037B0  0E00               	movlw	0
  3417  0037B2  6E33               	movwf	___fleq@ff1^0,c
  3418  0037B4  0E00               	movlw	0
  3419  0037B6  6E34               	movwf	(___fleq@ff1+1)^0,c
  3420  0037B8  0E00               	movlw	0
  3421  0037BA  6E35               	movwf	(___fleq@ff1+2)^0,c
  3422  0037BC  0E00               	movlw	0
  3423  0037BE  6E36               	movwf	(___fleq@ff1+3)^0,c
  3424  0037C0                     l4968:
  3425  0037C0  0E00               	movlw	0
  3426  0037C2  1437               	andwf	___fleq@ff2^0,w,c
  3427  0037C4  6E3B               	movwf	??___fleq^0,c
  3428  0037C6  0E00               	movlw	0
  3429  0037C8  1438               	andwf	(___fleq@ff2+1)^0,w,c
  3430  0037CA  6E3C               	movwf	(??___fleq+1)^0,c
  3431  0037CC  0E80               	movlw	128
  3432  0037CE  1439               	andwf	(___fleq@ff2+2)^0,w,c
  3433  0037D0  6E3D               	movwf	(??___fleq+2)^0,c
  3434  0037D2  0E7F               	movlw	127
  3435  0037D4  143A               	andwf	(___fleq@ff2+3)^0,w,c
  3436  0037D6  6E3E               	movwf	(??___fleq+3)^0,c
  3437  0037D8  503B               	movf	??___fleq^0,w,c
  3438  0037DA  103C               	iorwf	(??___fleq+1)^0,w,c
  3439  0037DC  103D               	iorwf	(??___fleq+2)^0,w,c
  3440  0037DE  103E               	iorwf	(??___fleq+3)^0,w,c
  3441  0037E0  A4D8               	btfss	status,2,c
  3442  0037E2  EFF5  F01B         	goto	u5091
  3443  0037E6  EFF7  F01B         	goto	u5090
  3444  0037EA                     u5091:
  3445  0037EA  EFFF  F01B         	goto	l4972
  3446  0037EE                     u5090:
  3447  0037EE  0E00               	movlw	0
  3448  0037F0  6E37               	movwf	___fleq@ff2^0,c
  3449  0037F2  0E00               	movlw	0
  3450  0037F4  6E38               	movwf	(___fleq@ff2+1)^0,c
  3451  0037F6  0E00               	movlw	0
  3452  0037F8  6E39               	movwf	(___fleq@ff2+2)^0,c
  3453  0037FA  0E00               	movlw	0
  3454  0037FC  6E3A               	movwf	(___fleq@ff2+3)^0,c
  3455  0037FE                     l4972:
  3456  0037FE  5037               	movf	___fleq@ff2^0,w,c
  3457  003800  1833               	xorwf	___fleq@ff1^0,w,c
  3458  003802  E10F               	bnz	u5100
  3459  003804  5038               	movf	(___fleq@ff2+1)^0,w,c
  3460  003806  1834               	xorwf	(___fleq@ff1+1)^0,w,c
  3461  003808  E10C               	bnz	u5100
  3462  00380A  5039               	movf	(___fleq@ff2+2)^0,w,c
  3463  00380C  1835               	xorwf	(___fleq@ff1+2)^0,w,c
  3464  00380E  E109               	bnz	u5100
  3465  003810  503A               	movf	(___fleq@ff2+3)^0,w,c
  3466  003812  1836               	xorwf	(___fleq@ff1+3)^0,w,c
  3467  003814  B4D8               	btfsc	status,2,c
  3468  003816  EF0F  F01C         	goto	u5101
  3469  00381A  EF11  F01C         	goto	u5100
  3470  00381E                     u5101:
  3471  00381E  EF14  F01C         	goto	l4976
  3472  003822                     u5100:
  3473  003822  90D8               	bcf	status,0,c
  3474  003824  EF15  F01C         	goto	l1042
  3475  003828                     l4976:
  3476  003828  80D8               	bsf	status,0,c
  3477  00382A                     l1042:
  3478  00382A  0012               	return		;funcret
  3479  00382C                     __end_of___fleq:
  3480                           	callstack 0
  3481                           
  3482 ;; *************** function ___flge *****************
  3483 ;; Defined at:
  3484 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flge.c"
  3485 ;; Parameters:    Size  Location     Type
  3486 ;;  ff1             4    1[COMRAM] PTR int 
  3487 ;;  ff2             4    5[COMRAM] PTR int 
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;		None
  3490 ;; Return value:  Size  Location     Type
  3491 ;;		None               void
  3492 ;; Registers used:
  3493 ;;		wreg, status,2, status,0
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3499 ;;      Params:         8       0       0       0       0       0       0       0       0
  3500 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3501 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3502 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3503 ;;Total ram usage:       12 bytes
  3504 ;; Hardware stack levels used:    1
  3505 ;; Hardware stack levels required when called:    3
  3506 ;; This function calls:
  3507 ;;		Nothing
  3508 ;; This function is called by:
  3509 ;;		_pow
  3510 ;;		_exp
  3511 ;;		_floor
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text18
  3516  0033F2                     __ptext18:
  3517                           	callstack 0
  3518  0033F2                     ___flge:
  3519                           	callstack 23
  3520  0033F2  0E00               	movlw	0
  3521  0033F4  1402               	andwf	___flge@ff1^0,w,c
  3522  0033F6  6E0A               	movwf	??___flge^0,c
  3523  0033F8  0E00               	movlw	0
  3524  0033FA  1403               	andwf	(___flge@ff1+1)^0,w,c
  3525  0033FC  6E0B               	movwf	(??___flge+1)^0,c
  3526  0033FE  0E80               	movlw	128
  3527  003400  1404               	andwf	(___flge@ff1+2)^0,w,c
  3528  003402  6E0C               	movwf	(??___flge+2)^0,c
  3529  003404  0E7F               	movlw	127
  3530  003406  1405               	andwf	(___flge@ff1+3)^0,w,c
  3531  003408  6E0D               	movwf	(??___flge+3)^0,c
  3532  00340A  500A               	movf	??___flge^0,w,c
  3533  00340C  100B               	iorwf	(??___flge+1)^0,w,c
  3534  00340E  100C               	iorwf	(??___flge+2)^0,w,c
  3535  003410  100D               	iorwf	(??___flge+3)^0,w,c
  3536  003412  A4D8               	btfss	status,2,c
  3537  003414  EF0E  F01A         	goto	u5691
  3538  003418  EF10  F01A         	goto	u5690
  3539  00341C                     u5691:
  3540  00341C  EF18  F01A         	goto	l5316
  3541  003420                     u5690:
  3542  003420  0E00               	movlw	0
  3543  003422  6E02               	movwf	___flge@ff1^0,c
  3544  003424  0E00               	movlw	0
  3545  003426  6E03               	movwf	(___flge@ff1+1)^0,c
  3546  003428  0E00               	movlw	0
  3547  00342A  6E04               	movwf	(___flge@ff1+2)^0,c
  3548  00342C  0E00               	movlw	0
  3549  00342E  6E05               	movwf	(___flge@ff1+3)^0,c
  3550  003430                     l5316:
  3551  003430  0E00               	movlw	0
  3552  003432  1406               	andwf	___flge@ff2^0,w,c
  3553  003434  6E0A               	movwf	??___flge^0,c
  3554  003436  0E00               	movlw	0
  3555  003438  1407               	andwf	(___flge@ff2+1)^0,w,c
  3556  00343A  6E0B               	movwf	(??___flge+1)^0,c
  3557  00343C  0E80               	movlw	128
  3558  00343E  1408               	andwf	(___flge@ff2+2)^0,w,c
  3559  003440  6E0C               	movwf	(??___flge+2)^0,c
  3560  003442  0E7F               	movlw	127
  3561  003444  1409               	andwf	(___flge@ff2+3)^0,w,c
  3562  003446  6E0D               	movwf	(??___flge+3)^0,c
  3563  003448  500A               	movf	??___flge^0,w,c
  3564  00344A  100B               	iorwf	(??___flge+1)^0,w,c
  3565  00344C  100C               	iorwf	(??___flge+2)^0,w,c
  3566  00344E  100D               	iorwf	(??___flge+3)^0,w,c
  3567  003450  A4D8               	btfss	status,2,c
  3568  003452  EF2D  F01A         	goto	u5701
  3569  003456  EF2F  F01A         	goto	u5700
  3570  00345A                     u5701:
  3571  00345A  EF37  F01A         	goto	l5320
  3572  00345E                     u5700:
  3573  00345E  0E00               	movlw	0
  3574  003460  6E06               	movwf	___flge@ff2^0,c
  3575  003462  0E00               	movlw	0
  3576  003464  6E07               	movwf	(___flge@ff2+1)^0,c
  3577  003466  0E00               	movlw	0
  3578  003468  6E08               	movwf	(___flge@ff2+2)^0,c
  3579  00346A  0E00               	movlw	0
  3580  00346C  6E09               	movwf	(___flge@ff2+3)^0,c
  3581  00346E                     l5320:
  3582  00346E  AE05               	btfss	(___flge@ff1+3)^0,7,c
  3583  003470  EF3C  F01A         	goto	u5711
  3584  003474  EF3E  F01A         	goto	u5710
  3585  003478                     u5711:
  3586  003478  EF47  F01A         	goto	l5324
  3587  00347C                     u5710:
  3588  00347C  6C02               	negf	___flge@ff1^0,c
  3589  00347E  1E03               	comf	(___flge@ff1+1)^0,f,c
  3590  003480  B0D8               	btfsc	status,0,c
  3591  003482  2A03               	incf	(___flge@ff1+1)^0,f,c
  3592  003484  1E04               	comf	(___flge@ff1+2)^0,f,c
  3593  003486  B0D8               	btfsc	status,0,c
  3594  003488  2A04               	incf	(___flge@ff1+2)^0,f,c
  3595  00348A  0E80               	movlw	128
  3596  00348C  5605               	subfwb	(___flge@ff1+3)^0,f,c
  3597  00348E                     l5324:
  3598  00348E  AE09               	btfss	(___flge@ff2+3)^0,7,c
  3599  003490  EF4C  F01A         	goto	u5721
  3600  003494  EF4E  F01A         	goto	u5720
  3601  003498                     u5721:
  3602  003498  EF57  F01A         	goto	l1048
  3603  00349C                     u5720:
  3604  00349C  6C06               	negf	___flge@ff2^0,c
  3605  00349E  1E07               	comf	(___flge@ff2+1)^0,f,c
  3606  0034A0  B0D8               	btfsc	status,0,c
  3607  0034A2  2A07               	incf	(___flge@ff2+1)^0,f,c
  3608  0034A4  1E08               	comf	(___flge@ff2+2)^0,f,c
  3609  0034A6  B0D8               	btfsc	status,0,c
  3610  0034A8  2A08               	incf	(___flge@ff2+2)^0,f,c
  3611  0034AA  0E80               	movlw	128
  3612  0034AC  5609               	subfwb	(___flge@ff2+3)^0,f,c
  3613  0034AE                     l1048:
  3614  0034AE  0E00               	movlw	0
  3615  0034B0  1A02               	xorwf	___flge@ff1^0,f,c
  3616  0034B2  0E00               	movlw	0
  3617  0034B4  1A03               	xorwf	(___flge@ff1+1)^0,f,c
  3618  0034B6  0E00               	movlw	0
  3619  0034B8  1A04               	xorwf	(___flge@ff1+2)^0,f,c
  3620  0034BA  0E80               	movlw	128
  3621  0034BC  1A05               	xorwf	(___flge@ff1+3)^0,f,c
  3622  0034BE  0E00               	movlw	0
  3623  0034C0  1A06               	xorwf	___flge@ff2^0,f,c
  3624  0034C2  0E00               	movlw	0
  3625  0034C4  1A07               	xorwf	(___flge@ff2+1)^0,f,c
  3626  0034C6  0E00               	movlw	0
  3627  0034C8  1A08               	xorwf	(___flge@ff2+2)^0,f,c
  3628  0034CA  0E80               	movlw	128
  3629  0034CC  1A09               	xorwf	(___flge@ff2+3)^0,f,c
  3630  0034CE  5006               	movf	___flge@ff2^0,w,c
  3631  0034D0  5C02               	subwf	___flge@ff1^0,w,c
  3632  0034D2  5007               	movf	(___flge@ff2+1)^0,w,c
  3633  0034D4  5803               	subwfb	(___flge@ff1+1)^0,w,c
  3634  0034D6  5008               	movf	(___flge@ff2+2)^0,w,c
  3635  0034D8  5804               	subwfb	(___flge@ff1+2)^0,w,c
  3636  0034DA  5009               	movf	(___flge@ff2+3)^0,w,c
  3637  0034DC  5805               	subwfb	(___flge@ff1+3)^0,w,c
  3638  0034DE  B0D8               	btfsc	status,0,c
  3639  0034E0  EF74  F01A         	goto	u5731
  3640  0034E4  EF76  F01A         	goto	u5730
  3641  0034E8                     u5731:
  3642  0034E8  EF79  F01A         	goto	l5330
  3643  0034EC                     u5730:
  3644  0034EC  90D8               	bcf	status,0,c
  3645  0034EE  EF7A  F01A         	goto	l1049
  3646  0034F2                     l5330:
  3647  0034F2  80D8               	bsf	status,0,c
  3648  0034F4                     l1049:
  3649  0034F4  0012               	return		;funcret
  3650  0034F6                     __end_of___flge:
  3651                           	callstack 0
  3652                           
  3653 ;; *************** function _eval_poly *****************
  3654 ;; Defined at:
  3655 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\evalpoly.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  x               4   21[BANK0 ] PTR int 
  3658 ;;  d               2   25[BANK0 ] PTR const 
  3659 ;;		 -> log@coeff(36), exp@coeff(40), 
  3660 ;;  n               2   27[BANK0 ] int 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;  res             4   33[BANK0 ] int 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  4   21[BANK0 ] int 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3672 ;;      Params:         0       8       0       0       0       0       0       0       0
  3673 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3674 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3675 ;;      Totals:         0      16       0       0       0       0       0       0       0
  3676 ;;Total ram usage:       16 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:    4
  3679 ;; This function calls:
  3680 ;;		___fladd
  3681 ;;		___flmul
  3682 ;; This function is called by:
  3683 ;;		_exp
  3684 ;;		_log
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text19
  3689  0034F6                     __ptext19:
  3690                           	callstack 0
  3691  0034F6                     _eval_poly:
  3692                           	callstack 23
  3693  0034F6  C07B  F07D         	movff	eval_poly@n,??_eval_poly
  3694  0034FA  C07C  F07E         	movff	eval_poly@n+1,??_eval_poly+1
  3695  0034FE  0100               	movlb	0	; () banked
  3696  003500  90D8               	bcf	status,0,c
  3697  003502  377D               	rlcf	??_eval_poly& (0+255),f,b
  3698  003504  377E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3699  003506  90D8               	bcf	status,0,c
  3700  003508  377D               	rlcf	??_eval_poly& (0+255),f,b
  3701  00350A  377E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3702  00350C  C079  F07F         	movff	eval_poly@d,??_eval_poly+2
  3703  003510  C07A  F080         	movff	eval_poly@d+1,??_eval_poly+3
  3704  003514  517D               	movf	??_eval_poly& (0+255),w,b
  3705  003516  277F               	addwf	(??_eval_poly+2)& (0+255),f,b
  3706  003518  517E               	movf	(??_eval_poly+1)& (0+255),w,b
  3707  00351A  2380               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3708  00351C  C07F  FFF6         	movff	??_eval_poly+2,tblptrl
  3709  003520  C080  FFF7         	movff	??_eval_poly+3,tblptrh
  3710  003524                     	if	0	;tblptru may be non-zero
  3711  003524                     	endif
  3712  003524                     	if	0	;tblptru may be non-zero
  3713  003524                     	endif
  3714  003524  0009               	tblrd		*+
  3715  003526  CFF5 F081          	movff	tablat,eval_poly@res
  3716  00352A  0009               	tblrd		*+
  3717  00352C  CFF5 F082          	movff	tablat,eval_poly@res+1
  3718  003530  0009               	tblrd		*+
  3719  003532  CFF5 F083          	movff	tablat,eval_poly@res+2
  3720  003536  000A               	tblrd		*-
  3721  003538  CFF5 F084          	movff	tablat,eval_poly@res+3
  3722  00353C  EFEA  F01A         	goto	l5624
  3723  003540                     l5622:
  3724                           
  3725                           ; BSR set to: 0
  3726  003540  C081  F04B         	movff	eval_poly@res,___flmul@a
  3727  003544  C082  F04C         	movff	eval_poly@res+1,___flmul@a+1
  3728  003548  C083  F04D         	movff	eval_poly@res+2,___flmul@a+2
  3729  00354C  C084  F04E         	movff	eval_poly@res+3,___flmul@a+3
  3730  003550  C075  F047         	movff	eval_poly@x,___flmul@b
  3731  003554  C076  F048         	movff	eval_poly@x+1,___flmul@b+1
  3732  003558  C077  F049         	movff	eval_poly@x+2,___flmul@b+2
  3733  00355C  C078  F04A         	movff	eval_poly@x+3,___flmul@b+3
  3734  003560  EC66  F00C         	call	___flmul	;wreg free
  3735  003564  C047  F053         	movff	?___flmul,___fladd@b
  3736  003568  C048  F054         	movff	?___flmul+1,___fladd@b+1
  3737  00356C  C049  F055         	movff	?___flmul+2,___fladd@b+2
  3738  003570  C04A  F056         	movff	?___flmul+3,___fladd@b+3
  3739  003574  0100               	movlb	0	; () banked
  3740  003576  077B               	decf	eval_poly@n& (0+255),f,b
  3741  003578  A0D8               	btfss	status,0,c
  3742  00357A  077C               	decf	(eval_poly@n+1)& (0+255),f,b
  3743  00357C  C07B  F07D         	movff	eval_poly@n,??_eval_poly
  3744  003580  C07C  F07E         	movff	eval_poly@n+1,??_eval_poly+1
  3745  003584  90D8               	bcf	status,0,c
  3746  003586  377D               	rlcf	??_eval_poly& (0+255),f,b
  3747  003588  377E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3748  00358A  90D8               	bcf	status,0,c
  3749  00358C  377D               	rlcf	??_eval_poly& (0+255),f,b
  3750  00358E  377E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3751  003590  C079  F07F         	movff	eval_poly@d,??_eval_poly+2
  3752  003594  C07A  F080         	movff	eval_poly@d+1,??_eval_poly+3
  3753  003598  517D               	movf	??_eval_poly& (0+255),w,b
  3754  00359A  277F               	addwf	(??_eval_poly+2)& (0+255),f,b
  3755  00359C  517E               	movf	(??_eval_poly+1)& (0+255),w,b
  3756  00359E  2380               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3757  0035A0  C07F  FFF6         	movff	??_eval_poly+2,tblptrl
  3758  0035A4  C080  FFF7         	movff	??_eval_poly+3,tblptrh
  3759  0035A8                     	if	0	;tblptru may be non-zero
  3760  0035A8                     	endif
  3761  0035A8                     	if	0	;tblptru may be non-zero
  3762  0035A8                     	endif
  3763  0035A8  0009               	tblrd		*+
  3764  0035AA  CFF5 F057          	movff	tablat,___fladd@a
  3765  0035AE  0009               	tblrd		*+
  3766  0035B0  CFF5 F058          	movff	tablat,___fladd@a+1
  3767  0035B4  0009               	tblrd		*+
  3768  0035B6  CFF5 F059          	movff	tablat,___fladd@a+2
  3769  0035BA  000A               	tblrd		*-
  3770  0035BC  CFF5 F05A          	movff	tablat,___fladd@a+3
  3771  0035C0  EC05  F00A         	call	___fladd	;wreg free
  3772  0035C4  C053  F081         	movff	?___fladd,eval_poly@res
  3773  0035C8  C054  F082         	movff	?___fladd+1,eval_poly@res+1
  3774  0035CC  C055  F083         	movff	?___fladd+2,eval_poly@res+2
  3775  0035D0  C056  F084         	movff	?___fladd+3,eval_poly@res+3
  3776  0035D4                     l5624:
  3777  0035D4  0100               	movlb	0	; () banked
  3778  0035D6  517B               	movf	eval_poly@n& (0+255),w,b
  3779  0035D8  117C               	iorwf	(eval_poly@n+1)& (0+255),w,b
  3780  0035DA  A4D8               	btfss	status,2,c
  3781  0035DC  EFF2  F01A         	goto	u6211
  3782  0035E0  EFF4  F01A         	goto	u6210
  3783  0035E4                     u6211:
  3784  0035E4  EFA0  F01A         	goto	l5622
  3785  0035E8                     u6210:
  3786  0035E8                     
  3787                           ; BSR set to: 0
  3788  0035E8  C081  F075         	movff	eval_poly@res,?_eval_poly
  3789  0035EC  C082  F076         	movff	eval_poly@res+1,?_eval_poly+1
  3790  0035F0  C083  F077         	movff	eval_poly@res+2,?_eval_poly+2
  3791  0035F4  C084  F078         	movff	eval_poly@res+3,?_eval_poly+3
  3792  0035F8                     
  3793                           ; BSR set to: 0
  3794  0035F8  0012               	return		;funcret
  3795  0035FA                     __end_of_eval_poly:
  3796                           	callstack 0
  3797                           
  3798 ;; *************** function ___flneg *****************
  3799 ;; Defined at:
  3800 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flneg.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  f1              4    1[COMRAM] int 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;		None
  3805 ;; Return value:  Size  Location     Type
  3806 ;;                  4    1[COMRAM] int 
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, status,0
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3814 ;;      Params:         4       0       0       0       0       0       0       0       0
  3815 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3816 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3817 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3818 ;;Total ram usage:        4 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; Hardware stack levels required when called:    3
  3821 ;; This function calls:
  3822 ;;		Nothing
  3823 ;; This function is called by:
  3824 ;;		_pow
  3825 ;;		_exp
  3826 ;; This function uses a non-reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text20
  3830  003CF4                     __ptext20:
  3831                           	callstack 0
  3832  003CF4                     ___flneg:
  3833                           	callstack 24
  3834  003CF4  5002               	movf	___flneg@f1^0,w,c
  3835  003CF6  1003               	iorwf	(___flneg@f1+1)^0,w,c
  3836  003CF8  1004               	iorwf	(___flneg@f1+2)^0,w,c
  3837  003CFA  1005               	iorwf	(___flneg@f1+3)^0,w,c
  3838  003CFC  B4D8               	btfsc	status,2,c
  3839  003CFE  EF83  F01E         	goto	u6161
  3840  003D02  EF85  F01E         	goto	u6160
  3841  003D06                     u6161:
  3842  003D06  EF8D  F01E         	goto	l5592
  3843  003D0A                     u6160:
  3844  003D0A  0E00               	movlw	0
  3845  003D0C  1A02               	xorwf	___flneg@f1^0,f,c
  3846  003D0E  0E00               	movlw	0
  3847  003D10  1A03               	xorwf	(___flneg@f1+1)^0,f,c
  3848  003D12  0E00               	movlw	0
  3849  003D14  1A04               	xorwf	(___flneg@f1+2)^0,f,c
  3850  003D16  0E80               	movlw	128
  3851  003D18  1A05               	xorwf	(___flneg@f1+3)^0,f,c
  3852  003D1A                     l5592:
  3853  003D1A  C002  F002         	movff	___flneg@f1,?___flneg
  3854  003D1E  C003  F003         	movff	___flneg@f1+1,?___flneg+1
  3855  003D22  C004  F004         	movff	___flneg@f1+2,?___flneg+2
  3856  003D26  C005  F005         	movff	___flneg@f1+3,?___flneg+3
  3857  003D2A  0012               	return		;funcret
  3858  003D2C                     __end_of___flneg:
  3859                           	callstack 0
  3860                           
  3861 ;; *************** function _ComputeWaterVol *****************
  3862 ;; Defined at:
  3863 ;;		line 87 in file "main.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;		None
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;  d_WaterHeigh    4   79[BANK0 ] float 
  3868 ;;  d_WaterVol      4   74[BANK0 ] float 
  3869 ;;  d_EmptySpace    4   70[BANK0 ] float 
  3870 ;;  d_mmPerTick     4   66[BANK0 ] float 
  3871 ;;  d_SOS           4   62[BANK0 ] float 
  3872 ;;  d_CurrTemp      4   58[BANK0 ] float 
  3873 ;;  d_EchoPeriod    4    0        float 
  3874 ;;  sFill           1   84[BANK0 ] unsigned char 
  3875 ;;  sGals           1   83[BANK0 ] unsigned char 
  3876 ;;  i_PercentFul    1   78[BANK0 ] unsigned char 
  3877 ;; Return value:  Size  Location     Type
  3878 ;;                  1    wreg      void 
  3879 ;; Registers used:
  3880 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3881 ;; Tracked objects:
  3882 ;;		On entry : 0/0
  3883 ;;		On exit  : 0/0
  3884 ;;		Unchanged: 0/0
  3885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3886 ;;      Params:         0       0       0       0       0       0       0       0       0
  3887 ;;      Locals:         0      31       0       0       0       0       0       0       0
  3888 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3889 ;;      Totals:         0      35       0       0       0       0       0       0       0
  3890 ;;Total ram usage:       35 bytes
  3891 ;; Hardware stack levels used:    1
  3892 ;; Hardware stack levels required when called:    5
  3893 ;; This function calls:
  3894 ;;		_LCD_GoTo
  3895 ;;		_LCD_WriteString
  3896 ;;		___fladd
  3897 ;;		___fldiv
  3898 ;;		___flmul
  3899 ;;		___flsub
  3900 ;;		___fltol
  3901 ;;		___xxtofl
  3902 ;;		_sprintf
  3903 ;;		_sqrt
  3904 ;; This function is called by:
  3905 ;;		_main
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text21
  3910  0023AE                     __ptext21:
  3911                           	callstack 0
  3912  0023AE                     _ComputeWaterVol:
  3913                           	callstack 25
  3914  0023AE                     
  3915                           ;main.c: 89: float d_CurrTemp;;main.c: 90: float d_SOS;;main.c: 91: float d_mmPerTick;;m
      +                          ain.c: 92: float d_EmptySpace_mm;;main.c: 93: float d_WaterHeight_mm;;main.c: 94: float 
      +                          d_WaterVol;;main.c: 95: float d_EchoPeriod;;main.c: 96: uint8_t i_PercentFull;;main.c: 9
      +                          7: uint8_t sGals = "----";
  3916  0023AE  0EC7               	movlw	low (low STR_3)
  3917  0023B0  0100               	movlb	0	; () banked
  3918  0023B2  6FB3               	movwf	ComputeWaterVol@sGals& (0+255),b
  3919                           
  3920                           ;main.c: 98: uint8_t sFill = "---";
  3921  0023B4  0EC8               	movlw	low (low (STR_3+1))
  3922  0023B6  6FB4               	movwf	ComputeWaterVol@sFill& (0+255),b
  3923  0023B8                     
  3924                           ; BSR set to: 0
  3925  0023B8  C0CF  F025         	movff	_giEchoCounter,___xxtofl@val
  3926  0023BC  C0D0  F026         	movff	_giEchoCounter+1,___xxtofl@val+1
  3927  0023C0  6A27               	clrf	(___xxtofl@val+2)^0,c
  3928  0023C2  6A28               	clrf	(___xxtofl@val+3)^0,c
  3929  0023C4  0E00               	movlw	0
  3930  0023C6  ECF2  F015         	call	___xxtofl
  3931  0023CA  C025  F047         	movff	?___xxtofl,___flmul@b
  3932  0023CE  C026  F048         	movff	?___xxtofl+1,___flmul@b+1
  3933  0023D2  C027  F049         	movff	?___xxtofl+2,___flmul@b+2
  3934  0023D6  C028  F04A         	movff	?___xxtofl+3,___flmul@b+3
  3935  0023DA  0EBD               	movlw	189
  3936  0023DC  6E4B               	movwf	___flmul@a^0,c
  3937  0023DE  0E37               	movlw	55
  3938  0023E0  6E4C               	movwf	(___flmul@a+1)^0,c
  3939  0023E2  0E06               	movlw	6
  3940  0023E4  6E4D               	movwf	(___flmul@a+2)^0,c
  3941  0023E6  0E35               	movlw	53
  3942  0023E8  6E4E               	movwf	(___flmul@a+3)^0,c
  3943  0023EA  EC66  F00C         	call	___flmul	;wreg free
  3944  0023EE                     
  3945                           ;main.c: 101: d_CurrTemp = 20.0;
  3946  0023EE  0E00               	movlw	0
  3947  0023F0  0100               	movlb	0	; () banked
  3948  0023F2  6F9A               	movwf	ComputeWaterVol@d_CurrTemp& (0+255),b
  3949  0023F4  0E00               	movlw	0
  3950  0023F6  6F9B               	movwf	(ComputeWaterVol@d_CurrTemp+1)& (0+255),b
  3951  0023F8  0EA0               	movlw	160
  3952  0023FA  6F9C               	movwf	(ComputeWaterVol@d_CurrTemp+2)& (0+255),b
  3953  0023FC  0E41               	movlw	65
  3954  0023FE  6F9D               	movwf	(ComputeWaterVol@d_CurrTemp+3)& (0+255),b
  3955                           
  3956                           ;main.c: 102: d_SOS = 331.3e3 * sqrt( 1 + (d_CurrTemp / 273.15));
  3957  002400  0E00               	movlw	0
  3958  002402  6E57               	movwf	___fladd@a^0,c
  3959  002404  0E00               	movlw	0
  3960  002406  6E58               	movwf	(___fladd@a+1)^0,c
  3961  002408  0E80               	movlw	128
  3962  00240A  6E59               	movwf	(___fladd@a+2)^0,c
  3963  00240C  0E3F               	movlw	63
  3964  00240E  6E5A               	movwf	(___fladd@a+3)^0,c
  3965  002410  0E33               	movlw	51
  3966  002412  6E06               	movwf	___fldiv@a^0,c
  3967  002414  0E93               	movlw	147
  3968  002416  6E07               	movwf	(___fldiv@a+1)^0,c
  3969  002418  0E88               	movlw	136
  3970  00241A  6E08               	movwf	(___fldiv@a+2)^0,c
  3971  00241C  0E43               	movlw	67
  3972  00241E  6E09               	movwf	(___fldiv@a+3)^0,c
  3973  002420  C09A  F002         	movff	ComputeWaterVol@d_CurrTemp,___fldiv@b
  3974  002424  C09B  F003         	movff	ComputeWaterVol@d_CurrTemp+1,___fldiv@b+1
  3975  002428  C09C  F004         	movff	ComputeWaterVol@d_CurrTemp+2,___fldiv@b+2
  3976  00242C  C09D  F005         	movff	ComputeWaterVol@d_CurrTemp+3,___fldiv@b+3
  3977  002430  EC7C  F00E         	call	___fldiv	;wreg free
  3978  002434  C002  F053         	movff	?___fldiv,___fladd@b
  3979  002438  C003  F054         	movff	?___fldiv+1,___fladd@b+1
  3980  00243C  C004  F055         	movff	?___fldiv+2,___fladd@b+2
  3981  002440  C005  F056         	movff	?___fldiv+3,___fladd@b+3
  3982  002444  EC05  F00A         	call	___fladd	;wreg free
  3983  002448  C053  F075         	movff	?___fladd,sqrt@a
  3984  00244C  C054  F076         	movff	?___fladd+1,sqrt@a+1
  3985  002450  C055  F077         	movff	?___fladd+2,sqrt@a+2
  3986  002454  C056  F078         	movff	?___fladd+3,sqrt@a+3
  3987  002458  EC49  F010         	call	_sqrt	;wreg free
  3988  00245C  C075  F047         	movff	?_sqrt,___flmul@b
  3989  002460  C076  F048         	movff	?_sqrt+1,___flmul@b+1
  3990  002464  C077  F049         	movff	?_sqrt+2,___flmul@b+2
  3991  002468  C078  F04A         	movff	?_sqrt+3,___flmul@b+3
  3992  00246C  0E80               	movlw	128
  3993  00246E  6E4B               	movwf	___flmul@a^0,c
  3994  002470  0EC4               	movlw	196
  3995  002472  6E4C               	movwf	(___flmul@a+1)^0,c
  3996  002474  0EA1               	movlw	161
  3997  002476  6E4D               	movwf	(___flmul@a+2)^0,c
  3998  002478  0E48               	movlw	72
  3999  00247A  6E4E               	movwf	(___flmul@a+3)^0,c
  4000  00247C  EC66  F00C         	call	___flmul	;wreg free
  4001  002480  C047  F09E         	movff	?___flmul,ComputeWaterVol@d_SOS
  4002  002484  C048  F09F         	movff	?___flmul+1,ComputeWaterVol@d_SOS+1
  4003  002488  C049  F0A0         	movff	?___flmul+2,ComputeWaterVol@d_SOS+2
  4004  00248C  C04A  F0A1         	movff	?___flmul+3,ComputeWaterVol@d_SOS+3
  4005                           
  4006                           ;main.c: 103: d_mmPerTick = d_SOS * 500.0e-9 / 2;
  4007  002490  0EBD               	movlw	189
  4008  002492  6E4B               	movwf	___flmul@a^0,c
  4009  002494  0E37               	movlw	55
  4010  002496  6E4C               	movwf	(___flmul@a+1)^0,c
  4011  002498  0E06               	movlw	6
  4012  00249A  6E4D               	movwf	(___flmul@a+2)^0,c
  4013  00249C  0E35               	movlw	53
  4014  00249E  6E4E               	movwf	(___flmul@a+3)^0,c
  4015  0024A0  C09E  F047         	movff	ComputeWaterVol@d_SOS,___flmul@b
  4016  0024A4  C09F  F048         	movff	ComputeWaterVol@d_SOS+1,___flmul@b+1
  4017  0024A8  C0A0  F049         	movff	ComputeWaterVol@d_SOS+2,___flmul@b+2
  4018  0024AC  C0A1  F04A         	movff	ComputeWaterVol@d_SOS+3,___flmul@b+3
  4019  0024B0  EC66  F00C         	call	___flmul	;wreg free
  4020  0024B4  C047  F002         	movff	?___flmul,___fldiv@b
  4021  0024B8  C048  F003         	movff	?___flmul+1,___fldiv@b+1
  4022  0024BC  C049  F004         	movff	?___flmul+2,___fldiv@b+2
  4023  0024C0  C04A  F005         	movff	?___flmul+3,___fldiv@b+3
  4024  0024C4  0E00               	movlw	0
  4025  0024C6  6E06               	movwf	___fldiv@a^0,c
  4026  0024C8  0E00               	movlw	0
  4027  0024CA  6E07               	movwf	(___fldiv@a+1)^0,c
  4028  0024CC  0E00               	movlw	0
  4029  0024CE  6E08               	movwf	(___fldiv@a+2)^0,c
  4030  0024D0  0E40               	movlw	64
  4031  0024D2  6E09               	movwf	(___fldiv@a+3)^0,c
  4032  0024D4  EC7C  F00E         	call	___fldiv	;wreg free
  4033  0024D8  C002  F0A2         	movff	?___fldiv,ComputeWaterVol@d_mmPerTick
  4034  0024DC  C003  F0A3         	movff	?___fldiv+1,ComputeWaterVol@d_mmPerTick+1
  4035  0024E0  C004  F0A4         	movff	?___fldiv+2,ComputeWaterVol@d_mmPerTick+2
  4036  0024E4  C005  F0A5         	movff	?___fldiv+3,ComputeWaterVol@d_mmPerTick+3
  4037                           
  4038                           ;main.c: 104: d_EmptySpace_mm = (giEchoCounter.EP16 - 4400) * d_mmPerTick;
  4039  0024E8  0ED0               	movlw	208
  4040  0024EA  0100               	movlb	0	; () banked
  4041  0024EC  6F92               	movwf	??_ComputeWaterVol& (0+255),b
  4042  0024EE  0EEE               	movlw	238
  4043  0024F0  6F93               	movwf	(??_ComputeWaterVol+1)& (0+255),b
  4044  0024F2  C0CF  F094         	movff	_giEchoCounter,??_ComputeWaterVol+2
  4045  0024F6  C0D0  F095         	movff	_giEchoCounter+1,??_ComputeWaterVol+3
  4046  0024FA  5192               	movf	??_ComputeWaterVol& (0+255),w,b
  4047  0024FC  2794               	addwf	(??_ComputeWaterVol+2)& (0+255),f,b
  4048  0024FE  5193               	movf	(??_ComputeWaterVol+1)& (0+255),w,b
  4049  002500  2395               	addwfc	(??_ComputeWaterVol+3)& (0+255),f,b
  4050  002502  C094  F025         	movff	??_ComputeWaterVol+2,___xxtofl@val
  4051  002506  C095  F026         	movff	??_ComputeWaterVol+3,___xxtofl@val+1
  4052  00250A  6A27               	clrf	(___xxtofl@val+2)^0,c
  4053  00250C  6A28               	clrf	(___xxtofl@val+3)^0,c
  4054  00250E  0E00               	movlw	0
  4055  002510  ECF2  F015         	call	___xxtofl
  4056  002514  C025  F047         	movff	?___xxtofl,___flmul@b
  4057  002518  C026  F048         	movff	?___xxtofl+1,___flmul@b+1
  4058  00251C  C027  F049         	movff	?___xxtofl+2,___flmul@b+2
  4059  002520  C028  F04A         	movff	?___xxtofl+3,___flmul@b+3
  4060  002524  C0A2  F04B         	movff	ComputeWaterVol@d_mmPerTick,___flmul@a
  4061  002528  C0A3  F04C         	movff	ComputeWaterVol@d_mmPerTick+1,___flmul@a+1
  4062  00252C  C0A4  F04D         	movff	ComputeWaterVol@d_mmPerTick+2,___flmul@a+2
  4063  002530  C0A5  F04E         	movff	ComputeWaterVol@d_mmPerTick+3,___flmul@a+3
  4064  002534  EC66  F00C         	call	___flmul	;wreg free
  4065  002538  C047  F0A6         	movff	?___flmul,ComputeWaterVol@d_EmptySpace_mm
  4066  00253C  C048  F0A7         	movff	?___flmul+1,ComputeWaterVol@d_EmptySpace_mm+1
  4067  002540  C049  F0A8         	movff	?___flmul+2,ComputeWaterVol@d_EmptySpace_mm+2
  4068  002544  C04A  F0A9         	movff	?___flmul+3,ComputeWaterVol@d_EmptySpace_mm+3
  4069  002548                     
  4070                           ;main.c: 105: d_WaterHeight_mm = gd_SensorHeight_mm - d_EmptySpace_mm;
  4071  002548  C0BD  F075         	movff	_gd_SensorHeight_mm,___flsub@b
  4072  00254C  C0BE  F076         	movff	_gd_SensorHeight_mm+1,___flsub@b+1
  4073  002550  C0BF  F077         	movff	_gd_SensorHeight_mm+2,___flsub@b+2
  4074  002554  C0C0  F078         	movff	_gd_SensorHeight_mm+3,___flsub@b+3
  4075  002558  C0A6  F079         	movff	ComputeWaterVol@d_EmptySpace_mm,___flsub@a
  4076  00255C  C0A7  F07A         	movff	ComputeWaterVol@d_EmptySpace_mm+1,___flsub@a+1
  4077  002560  C0A8  F07B         	movff	ComputeWaterVol@d_EmptySpace_mm+2,___flsub@a+2
  4078  002564  C0A9  F07C         	movff	ComputeWaterVol@d_EmptySpace_mm+3,___flsub@a+3
  4079  002568  EC56  F01E         	call	___flsub	;wreg free
  4080  00256C  C075  F0AF         	movff	?___flsub,ComputeWaterVol@d_WaterHeight_mm
  4081  002570  C076  F0B0         	movff	?___flsub+1,ComputeWaterVol@d_WaterHeight_mm+1
  4082  002574  C077  F0B1         	movff	?___flsub+2,ComputeWaterVol@d_WaterHeight_mm+2
  4083  002578  C078  F0B2         	movff	?___flsub+3,ComputeWaterVol@d_WaterHeight_mm+3
  4084  00257C                     
  4085                           ;main.c: 106: d_WaterVol = d_WaterHeight_mm * gd_TankGalsPer_mm;
  4086  00257C  C0AF  F047         	movff	ComputeWaterVol@d_WaterHeight_mm,___flmul@b
  4087  002580  C0B0  F048         	movff	ComputeWaterVol@d_WaterHeight_mm+1,___flmul@b+1
  4088  002584  C0B1  F049         	movff	ComputeWaterVol@d_WaterHeight_mm+2,___flmul@b+2
  4089  002588  C0B2  F04A         	movff	ComputeWaterVol@d_WaterHeight_mm+3,___flmul@b+3
  4090  00258C  C0B9  F04B         	movff	_gd_TankGalsPer_mm,___flmul@a
  4091  002590  C0BA  F04C         	movff	_gd_TankGalsPer_mm+1,___flmul@a+1
  4092  002594  C0BB  F04D         	movff	_gd_TankGalsPer_mm+2,___flmul@a+2
  4093  002598  C0BC  F04E         	movff	_gd_TankGalsPer_mm+3,___flmul@a+3
  4094  00259C  EC66  F00C         	call	___flmul	;wreg free
  4095  0025A0  C047  F0AA         	movff	?___flmul,ComputeWaterVol@d_WaterVol
  4096  0025A4  C048  F0AB         	movff	?___flmul+1,ComputeWaterVol@d_WaterVol+1
  4097  0025A8  C049  F0AC         	movff	?___flmul+2,ComputeWaterVol@d_WaterVol+2
  4098  0025AC  C04A  F0AD         	movff	?___flmul+3,ComputeWaterVol@d_WaterVol+3
  4099  0025B0                     
  4100                           ;main.c: 107: i_PercentFull = d_WaterHeight_mm * 100 / gd_MaxWaterHeight_mm;
  4101  0025B0  C0B5  F006         	movff	_gd_MaxWaterHeight_mm,___fldiv@a
  4102  0025B4  C0B6  F007         	movff	_gd_MaxWaterHeight_mm+1,___fldiv@a+1
  4103  0025B8  C0B7  F008         	movff	_gd_MaxWaterHeight_mm+2,___fldiv@a+2
  4104  0025BC  C0B8  F009         	movff	_gd_MaxWaterHeight_mm+3,___fldiv@a+3
  4105  0025C0  0E00               	movlw	0
  4106  0025C2  6E4B               	movwf	___flmul@a^0,c
  4107  0025C4  0E00               	movlw	0
  4108  0025C6  6E4C               	movwf	(___flmul@a+1)^0,c
  4109  0025C8  0EC8               	movlw	200
  4110  0025CA  6E4D               	movwf	(___flmul@a+2)^0,c
  4111  0025CC  0E42               	movlw	66
  4112  0025CE  6E4E               	movwf	(___flmul@a+3)^0,c
  4113  0025D0  C0AF  F047         	movff	ComputeWaterVol@d_WaterHeight_mm,___flmul@b
  4114  0025D4  C0B0  F048         	movff	ComputeWaterVol@d_WaterHeight_mm+1,___flmul@b+1
  4115  0025D8  C0B1  F049         	movff	ComputeWaterVol@d_WaterHeight_mm+2,___flmul@b+2
  4116  0025DC  C0B2  F04A         	movff	ComputeWaterVol@d_WaterHeight_mm+3,___flmul@b+3
  4117  0025E0  EC66  F00C         	call	___flmul	;wreg free
  4118  0025E4  C047  F002         	movff	?___flmul,___fldiv@b
  4119  0025E8  C048  F003         	movff	?___flmul+1,___fldiv@b+1
  4120  0025EC  C049  F004         	movff	?___flmul+2,___fldiv@b+2
  4121  0025F0  C04A  F005         	movff	?___flmul+3,___fldiv@b+3
  4122  0025F4  EC7C  F00E         	call	___fldiv	;wreg free
  4123  0025F8  C002  F01B         	movff	?___fldiv,___fltol@f1
  4124  0025FC  C003  F01C         	movff	?___fldiv+1,___fltol@f1+1
  4125  002600  C004  F01D         	movff	?___fldiv+2,___fltol@f1+2
  4126  002604  C005  F01E         	movff	?___fldiv+3,___fltol@f1+3
  4127  002608  EC76  F019         	call	___fltol	;wreg free
  4128  00260C  501B               	movf	?___fltol^0,w,c
  4129  00260E  0100               	movlb	0	; () banked
  4130  002610  6FAE               	movwf	ComputeWaterVol@i_PercentFull& (0+255),b
  4131  002612                     
  4132                           ; BSR set to: 0
  4133                           ;main.c: 110: sprintf(sGals, "%n4", d_WaterVol);
  4134  002612  51B3               	movf	ComputeWaterVol@sGals& (0+255),w,b
  4135  002614  6F92               	movwf	??_ComputeWaterVol& (0+255),b
  4136  002616  6B93               	clrf	(??_ComputeWaterVol+1)& (0+255),b
  4137  002618  C092  F00E         	movff	??_ComputeWaterVol,sprintf@sp
  4138  00261C  C093  F00F         	movff	??_ComputeWaterVol+1,sprintf@sp+1
  4139  002620  0ED0               	movlw	low STR_5
  4140  002622  6E10               	movwf	sprintf@f^0,c
  4141  002624  0E08               	movlw	high STR_5
  4142  002626  6E11               	movwf	(sprintf@f+1)^0,c
  4143  002628  C0AA  F012         	movff	ComputeWaterVol@d_WaterVol,?_sprintf+4
  4144  00262C  C0AB  F013         	movff	ComputeWaterVol@d_WaterVol+1,?_sprintf+5
  4145  002630  C0AC  F014         	movff	ComputeWaterVol@d_WaterVol+2,?_sprintf+6
  4146  002634  C0AD  F015         	movff	ComputeWaterVol@d_WaterVol+3,?_sprintf+7
  4147  002638  EC6B  F004         	call	_sprintf	;wreg free
  4148  00263C                     
  4149                           ;main.c: 111: LCD_GoTo (0, 5);
  4150  00263C  0E05               	movlw	5
  4151  00263E  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  4152  002640  0E00               	movlw	0
  4153  002642  ECA9  F01D         	call	_LCD_GoTo
  4154  002646                     
  4155                           ;main.c: 112: LCD_WriteString (sGals);
  4156  002646  0100               	movlb	0	; () banked
  4157  002648  51B3               	movf	ComputeWaterVol@sGals& (0+255),w,b
  4158  00264A  6F92               	movwf	??_ComputeWaterVol& (0+255),b
  4159  00264C  6B93               	clrf	(??_ComputeWaterVol+1)& (0+255),b
  4160  00264E  C092  F005         	movff	??_ComputeWaterVol,LCD_WriteString@iData
  4161  002652  C093  F006         	movff	??_ComputeWaterVol+1,LCD_WriteString@iData+1
  4162  002656  EC97  F01C         	call	_LCD_WriteString	;wreg free
  4163  00265A                     
  4164                           ;main.c: 113: sprintf (sFill, "%n3", i_PercentFull);
  4165  00265A  0100               	movlb	0	; () banked
  4166  00265C  51B4               	movf	ComputeWaterVol@sFill& (0+255),w,b
  4167  00265E  6F92               	movwf	??_ComputeWaterVol& (0+255),b
  4168  002660  6B93               	clrf	(??_ComputeWaterVol+1)& (0+255),b
  4169  002662  C092  F00E         	movff	??_ComputeWaterVol,sprintf@sp
  4170  002666  C093  F00F         	movff	??_ComputeWaterVol+1,sprintf@sp+1
  4171  00266A  0ECC               	movlw	low STR_6
  4172  00266C  6E10               	movwf	sprintf@f^0,c
  4173  00266E  0E08               	movlw	high STR_6
  4174  002670  6E11               	movwf	(sprintf@f+1)^0,c
  4175  002672  C0AE  F012         	movff	ComputeWaterVol@i_PercentFull,?_sprintf+4
  4176  002676  6A13               	clrf	(?_sprintf+5)^0,c
  4177  002678  EC6B  F004         	call	_sprintf	;wreg free
  4178  00267C                     
  4179                           ;main.c: 114: LCD_GoTo (0, 10);
  4180  00267C  0E0A               	movlw	10
  4181  00267E  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  4182  002680  0E00               	movlw	0
  4183  002682  ECA9  F01D         	call	_LCD_GoTo
  4184  002686                     
  4185                           ;main.c: 115: LCD_WriteString (sFill);
  4186  002686  0100               	movlb	0	; () banked
  4187  002688  51B4               	movf	ComputeWaterVol@sFill& (0+255),w,b
  4188  00268A  6F92               	movwf	??_ComputeWaterVol& (0+255),b
  4189  00268C  6B93               	clrf	(??_ComputeWaterVol+1)& (0+255),b
  4190  00268E  C092  F005         	movff	??_ComputeWaterVol,LCD_WriteString@iData
  4191  002692  C093  F006         	movff	??_ComputeWaterVol+1,LCD_WriteString@iData+1
  4192  002696  EC97  F01C         	call	_LCD_WriteString	;wreg free
  4193  00269A  0012               	return		;funcret
  4194  00269C                     __end_of_ComputeWaterVol:
  4195                           	callstack 0
  4196                           
  4197 ;; *************** function _sqrt *****************
  4198 ;; Defined at:
  4199 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcsqrt.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;  a               4   21[BANK0 ] void 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  frac            4   46[BANK0 ] unsigned long 
  4204 ;;  root            4   42[BANK0 ] struct .
  4205 ;;  grs             4   36[BANK0 ] unsigned long 
  4206 ;;  tfrac           4   31[BANK0 ] unsigned long 
  4207 ;;  exp             2   40[BANK0 ] int 
  4208 ;;  p               1   35[BANK0 ] unsigned char 
  4209 ;;  i               1   30[BANK0 ] unsigned char 
  4210 ;;  sign            1   29[BANK0 ] unsigned char 
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  4   21[BANK0 ] unsigned char 
  4213 ;; Registers used:
  4214 ;;		wreg, status,2, status,0
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/0
  4217 ;;		On exit  : 0/0
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4220 ;;      Params:         0       4       0       0       0       0       0       0       0
  4221 ;;      Locals:         0      21       0       0       0       0       0       0       0
  4222 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4223 ;;      Totals:         0      29       0       0       0       0       0       0       0
  4224 ;;Total ram usage:       29 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    3
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_ComputeWaterVol
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           	psect	text22
  4235  002092                     __ptext22:
  4236                           	callstack 0
  4237  002092                     _sqrt:
  4238                           	callstack 26
  4239  002092  0100               	movlb	0	; () banked
  4240  002094  5178               	movf	(sqrt@a+3)& (0+255),w,b
  4241  002096  0B80               	andlw	128
  4242  002098  6F7D               	movwf	sqrt@sign& (0+255),b
  4243  00209A  5178               	movf	(sqrt@a+3)& (0+255),w,b
  4244  00209C  2578               	addwf	(sqrt@a+3)& (0+255),w,b
  4245  00209E  6F83               	movwf	sqrt@p& (0+255),b
  4246  0020A0                     
  4247                           ; BSR set to: 0
  4248  0020A0  AF77               	btfss	(sqrt@a+2)& (0+255),7,b
  4249  0020A2  EF55  F010         	goto	u6631
  4250  0020A6  EF57  F010         	goto	u6630
  4251  0020AA                     u6631:
  4252  0020AA  EF58  F010         	goto	l5856
  4253  0020AE                     u6630:
  4254  0020AE                     
  4255                           ; BSR set to: 0
  4256  0020AE  8183               	bsf	sqrt@p& (0+255),0,b
  4257  0020B0                     l5856:
  4258                           
  4259                           ; BSR set to: 0
  4260  0020B0  C083  F088         	movff	sqrt@p,sqrt@exp
  4261  0020B4  6B89               	clrf	(sqrt@exp+1)& (0+255),b
  4262  0020B6                     
  4263                           ; BSR set to: 0
  4264  0020B6  0EFF               	movlw	255
  4265  0020B8  1575               	andwf	sqrt@a& (0+255),w,b
  4266  0020BA  6F8E               	movwf	sqrt@frac& (0+255),b
  4267  0020BC  0EFF               	movlw	255
  4268  0020BE  1576               	andwf	(sqrt@a+1)& (0+255),w,b
  4269  0020C0  6F8F               	movwf	(sqrt@frac+1)& (0+255),b
  4270  0020C2  0E7F               	movlw	127
  4271  0020C4  1577               	andwf	(sqrt@a+2)& (0+255),w,b
  4272  0020C6  6F90               	movwf	(sqrt@frac+2)& (0+255),b
  4273  0020C8  0E00               	movlw	0
  4274  0020CA  1578               	andwf	(sqrt@a+3)& (0+255),w,b
  4275  0020CC  6F91               	movwf	(sqrt@frac+3)& (0+255),b
  4276  0020CE                     
  4277                           ; BSR set to: 0
  4278  0020CE  5188               	movf	sqrt@exp& (0+255),w,b
  4279  0020D0  1189               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4280  0020D2  B4D8               	btfsc	status,2,c
  4281  0020D4  EF6E  F010         	goto	u6641
  4282  0020D8  EF70  F010         	goto	u6640
  4283  0020DC                     u6641:
  4284  0020DC  EF7A  F010         	goto	l5866
  4285  0020E0                     u6640:
  4286  0020E0                     
  4287                           ; BSR set to: 0
  4288  0020E0  8F90               	bsf	(sqrt@frac+2)& (0+255),7,b
  4289  0020E2                     
  4290                           ; BSR set to: 0
  4291  0020E2  2988               	incf	sqrt@exp& (0+255),w,b
  4292  0020E4  1189               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4293  0020E6  A4D8               	btfss	status,2,c
  4294  0020E8  EF78  F010         	goto	u6651
  4295  0020EC  EF7A  F010         	goto	u6650
  4296  0020F0                     u6651:
  4297  0020F0  EF82  F010         	goto	l5870
  4298  0020F4                     u6650:
  4299  0020F4                     l5866:
  4300                           
  4301                           ; BSR set to: 0
  4302  0020F4  0E00               	movlw	0
  4303  0020F6  6F8E               	movwf	sqrt@frac& (0+255),b
  4304  0020F8  0E00               	movlw	0
  4305  0020FA  6F8F               	movwf	(sqrt@frac+1)& (0+255),b
  4306  0020FC  0E00               	movlw	0
  4307  0020FE  6F90               	movwf	(sqrt@frac+2)& (0+255),b
  4308  002100  0E00               	movlw	0
  4309  002102  6F91               	movwf	(sqrt@frac+3)& (0+255),b
  4310  002104                     l5870:
  4311                           
  4312                           ; BSR set to: 0
  4313  002104  5188               	movf	sqrt@exp& (0+255),w,b
  4314  002106  1189               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4315  002108  A4D8               	btfss	status,2,c
  4316  00210A  EF89  F010         	goto	u6661
  4317  00210E  EF8B  F010         	goto	u6660
  4318  002112                     u6661:
  4319  002112  EF95  F010         	goto	l5876
  4320  002116                     u6660:
  4321  002116                     
  4322                           ; BSR set to: 0
  4323  002116  0E00               	movlw	0
  4324  002118  6F75               	movwf	?_sqrt& (0+255),b
  4325  00211A  0E00               	movlw	0
  4326  00211C  6F76               	movwf	(?_sqrt+1)& (0+255),b
  4327  00211E  0E00               	movlw	0
  4328  002120  6F77               	movwf	(?_sqrt+2)& (0+255),b
  4329  002122  0E00               	movlw	0
  4330  002124  6F78               	movwf	(?_sqrt+3)& (0+255),b
  4331  002126  EFD6  F011         	goto	l1418
  4332  00212A                     l5876:
  4333                           
  4334                           ; BSR set to: 0
  4335  00212A  517D               	movf	sqrt@sign& (0+255),w,b
  4336  00212C  B4D8               	btfsc	status,2,c
  4337  00212E  EF9B  F010         	goto	u6671
  4338  002132  EF9D  F010         	goto	u6670
  4339  002136                     u6671:
  4340  002136  EFB7  F010         	goto	l5888
  4341  00213A                     u6670:
  4342  00213A                     
  4343                           ; BSR set to: 0
  4344  00213A  0E00               	movlw	0
  4345  00213C  6F8A               	movwf	sqrt@root& (0+255),b
  4346  00213E  0E00               	movlw	0
  4347  002140  6F8B               	movwf	(sqrt@root+1)& (0+255),b
  4348  002142  0E40               	movlw	64
  4349  002144  6F8C               	movwf	(sqrt@root+2)& (0+255),b
  4350  002146  0E00               	movlw	0
  4351  002148  6F8D               	movwf	(sqrt@root+3)& (0+255),b
  4352  00214A                     
  4353                           ; BSR set to: 0
  4354  00214A  0E80               	movlw	128
  4355  00214C  138C               	iorwf	(sqrt@root+2)& (0+255),f,b
  4356  00214E  0EFF               	movlw	255
  4357  002150  138D               	iorwf	(sqrt@root+3)& (0+255),f,b
  4358  002152                     
  4359                           ; BSR set to: 0
  4360  002152  0E00               	movlw	0
  4361  002154  6FCA               	movwf	(_errno+1)& (0+255),b
  4362  002156  0E21               	movlw	33
  4363  002158  6FC9               	movwf	_errno& (0+255),b
  4364  00215A                     l5884:
  4365                           
  4366                           ; BSR set to: 0
  4367  00215A  C08A  F075         	movff	sqrt@root,?_sqrt
  4368  00215E  C08B  F076         	movff	sqrt@root+1,?_sqrt+1
  4369  002162  C08C  F077         	movff	sqrt@root+2,?_sqrt+2
  4370  002166  C08D  F078         	movff	sqrt@root+3,?_sqrt+3
  4371  00216A  EFD6  F011         	goto	l1418
  4372  00216E                     l5888:
  4373                           
  4374                           ; BSR set to: 0
  4375  00216E  2988               	incf	sqrt@exp& (0+255),w,b
  4376  002170  1189               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4377  002172  A4D8               	btfss	status,2,c
  4378  002174  EFBE  F010         	goto	u6681
  4379  002178  EFC0  F010         	goto	u6680
  4380  00217C                     u6681:
  4381  00217C  EFCA  F010         	goto	l5896
  4382  002180                     u6680:
  4383  002180                     
  4384                           ; BSR set to: 0
  4385  002180  0E00               	movlw	0
  4386  002182  6F8A               	movwf	sqrt@root& (0+255),b
  4387  002184  0E00               	movlw	0
  4388  002186  6F8B               	movwf	(sqrt@root+1)& (0+255),b
  4389  002188  0E80               	movlw	128
  4390  00218A  6F8C               	movwf	(sqrt@root+2)& (0+255),b
  4391  00218C  0E7F               	movlw	127
  4392  00218E  6F8D               	movwf	(sqrt@root+3)& (0+255),b
  4393  002190  EFAD  F010         	goto	l5884
  4394  002194                     l5896:
  4395                           
  4396                           ; BSR set to: 0
  4397  002194  0E81               	movlw	129
  4398  002196  2788               	addwf	sqrt@exp& (0+255),f,b
  4399  002198  0EFF               	movlw	255
  4400  00219A  2389               	addwfc	(sqrt@exp+1)& (0+255),f,b
  4401  00219C  5188               	movf	sqrt@exp& (0+255),w,b
  4402  00219E  0B01               	andlw	1
  4403  0021A0  6F83               	movwf	sqrt@p& (0+255),b
  4404  0021A2  3589               	rlcf	(sqrt@exp+1)& (0+255),w,b
  4405  0021A4  3389               	rrcf	(sqrt@exp+1)& (0+255),f,b
  4406  0021A6  3388               	rrcf	sqrt@exp& (0+255),f,b
  4407  0021A8  0E7F               	movlw	127
  4408  0021AA  2788               	addwf	sqrt@exp& (0+255),f,b
  4409  0021AC  0E00               	movlw	0
  4410  0021AE  2389               	addwfc	(sqrt@exp+1)& (0+255),f,b
  4411  0021B0  90D8               	bcf	status,0,c
  4412  0021B2  358E               	rlcf	sqrt@frac& (0+255),w,b
  4413  0021B4  6F7F               	movwf	sqrt@tfrac& (0+255),b
  4414  0021B6  358F               	rlcf	(sqrt@frac+1)& (0+255),w,b
  4415  0021B8  6F80               	movwf	(sqrt@tfrac+1)& (0+255),b
  4416  0021BA  3590               	rlcf	(sqrt@frac+2)& (0+255),w,b
  4417  0021BC  6F81               	movwf	(sqrt@tfrac+2)& (0+255),b
  4418  0021BE  3591               	rlcf	(sqrt@frac+3)& (0+255),w,b
  4419  0021C0  6F82               	movwf	(sqrt@tfrac+3)& (0+255),b
  4420  0021C2                     
  4421                           ; BSR set to: 0
  4422  0021C2  0E00               	movlw	0
  4423  0021C4  6F8E               	movwf	sqrt@frac& (0+255),b
  4424  0021C6  0E00               	movlw	0
  4425  0021C8  6F8F               	movwf	(sqrt@frac+1)& (0+255),b
  4426  0021CA  0E00               	movlw	0
  4427  0021CC  6F90               	movwf	(sqrt@frac+2)& (0+255),b
  4428  0021CE  0E00               	movlw	0
  4429  0021D0  6F91               	movwf	(sqrt@frac+3)& (0+255),b
  4430  0021D2                     
  4431                           ; BSR set to: 0
  4432  0021D2  0E00               	movlw	0
  4433  0021D4  6F84               	movwf	sqrt@grs& (0+255),b
  4434  0021D6  0E00               	movlw	0
  4435  0021D8  6F85               	movwf	(sqrt@grs+1)& (0+255),b
  4436  0021DA  0E00               	movlw	0
  4437  0021DC  6F86               	movwf	(sqrt@grs+2)& (0+255),b
  4438  0021DE  0E01               	movlw	1
  4439  0021E0  6F87               	movwf	(sqrt@grs+3)& (0+255),b
  4440  0021E2                     
  4441                           ; BSR set to: 0
  4442  0021E2  5183               	movf	sqrt@p& (0+255),w,b
  4443  0021E4  B4D8               	btfsc	status,2,c
  4444  0021E6  EFF7  F010         	goto	u6691
  4445  0021EA  EFF9  F010         	goto	u6690
  4446  0021EE                     u6691:
  4447  0021EE  EFFE  F010         	goto	l5906
  4448  0021F2                     u6690:
  4449  0021F2                     
  4450                           ; BSR set to: 0
  4451  0021F2  90D8               	bcf	status,0,c
  4452  0021F4  377F               	rlcf	sqrt@tfrac& (0+255),f,b
  4453  0021F6  3780               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  4454  0021F8  3781               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  4455  0021FA  3782               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  4456  0021FC                     l5906:
  4457                           
  4458                           ; BSR set to: 0
  4459  0021FC  0E00               	movlw	0
  4460  0021FE  6F7E               	movwf	sqrt@i& (0+255),b
  4461  002200  EF56  F011         	goto	l5920
  4462  002204                     l5908:
  4463                           
  4464                           ; BSR set to: 0
  4465  002204  5184               	movf	sqrt@grs& (0+255),w,b
  4466  002206  138E               	iorwf	sqrt@frac& (0+255),f,b
  4467  002208  5185               	movf	(sqrt@grs+1)& (0+255),w,b
  4468  00220A  138F               	iorwf	(sqrt@frac+1)& (0+255),f,b
  4469  00220C  5186               	movf	(sqrt@grs+2)& (0+255),w,b
  4470  00220E  1390               	iorwf	(sqrt@frac+2)& (0+255),f,b
  4471  002210  5187               	movf	(sqrt@grs+3)& (0+255),w,b
  4472  002212  1391               	iorwf	(sqrt@frac+3)& (0+255),f,b
  4473  002214  518E               	movf	sqrt@frac& (0+255),w,b
  4474  002216  5D7F               	subwf	sqrt@tfrac& (0+255),w,b
  4475  002218  518F               	movf	(sqrt@frac+1)& (0+255),w,b
  4476  00221A  5980               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  4477  00221C  5190               	movf	(sqrt@frac+2)& (0+255),w,b
  4478  00221E  5981               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  4479  002220  5191               	movf	(sqrt@frac+3)& (0+255),w,b
  4480  002222  5982               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  4481  002224  A0D8               	btfss	status,0,c
  4482  002226  EF17  F011         	goto	u6701
  4483  00222A  EF19  F011         	goto	u6700
  4484  00222E                     u6701:
  4485  00222E  EF2B  F011         	goto	l5912
  4486  002232                     u6700:
  4487  002232                     
  4488                           ; BSR set to: 0
  4489  002232  518E               	movf	sqrt@frac& (0+255),w,b
  4490  002234  5F7F               	subwf	sqrt@tfrac& (0+255),f,b
  4491  002236  518F               	movf	(sqrt@frac+1)& (0+255),w,b
  4492  002238  5B80               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  4493  00223A  5190               	movf	(sqrt@frac+2)& (0+255),w,b
  4494  00223C  5B81               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  4495  00223E  5191               	movf	(sqrt@frac+3)& (0+255),w,b
  4496  002240  5B82               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  4497  002242  5184               	movf	sqrt@grs& (0+255),w,b
  4498  002244  278E               	addwf	sqrt@frac& (0+255),f,b
  4499  002246  5185               	movf	(sqrt@grs+1)& (0+255),w,b
  4500  002248  238F               	addwfc	(sqrt@frac+1)& (0+255),f,b
  4501  00224A  5186               	movf	(sqrt@grs+2)& (0+255),w,b
  4502  00224C  2390               	addwfc	(sqrt@frac+2)& (0+255),f,b
  4503  00224E  5187               	movf	(sqrt@grs+3)& (0+255),w,b
  4504  002250  2391               	addwfc	(sqrt@frac+3)& (0+255),f,b
  4505  002252  EF3B  F011         	goto	l5914
  4506  002256                     l5912:
  4507                           
  4508                           ; BSR set to: 0
  4509  002256  1D84               	comf	sqrt@grs& (0+255),w,b
  4510  002258  6F79               	movwf	??_sqrt& (0+255),b
  4511  00225A  1D85               	comf	(sqrt@grs+1)& (0+255),w,b
  4512  00225C  6F7A               	movwf	(??_sqrt+1)& (0+255),b
  4513  00225E  1D86               	comf	(sqrt@grs+2)& (0+255),w,b
  4514  002260  6F7B               	movwf	(??_sqrt+2)& (0+255),b
  4515  002262  1D87               	comf	(sqrt@grs+3)& (0+255),w,b
  4516  002264  6F7C               	movwf	(??_sqrt+3)& (0+255),b
  4517  002266  5179               	movf	??_sqrt& (0+255),w,b
  4518  002268  178E               	andwf	sqrt@frac& (0+255),f,b
  4519  00226A  517A               	movf	(??_sqrt+1)& (0+255),w,b
  4520  00226C  178F               	andwf	(sqrt@frac+1)& (0+255),f,b
  4521  00226E  517B               	movf	(??_sqrt+2)& (0+255),w,b
  4522  002270  1790               	andwf	(sqrt@frac+2)& (0+255),f,b
  4523  002272  517C               	movf	(??_sqrt+3)& (0+255),w,b
  4524  002274  1791               	andwf	(sqrt@frac+3)& (0+255),f,b
  4525  002276                     l5914:
  4526                           
  4527                           ; BSR set to: 0
  4528  002276  C084  F079         	movff	sqrt@grs,??_sqrt
  4529  00227A  C085  F07A         	movff	sqrt@grs+1,??_sqrt+1
  4530  00227E  C086  F07B         	movff	sqrt@grs+2,??_sqrt+2
  4531  002282  C087  F07C         	movff	sqrt@grs+3,??_sqrt+3
  4532  002286  90D8               	bcf	status,0,c
  4533  002288  337C               	rrcf	(??_sqrt+3)& (0+255),f,b
  4534  00228A  337B               	rrcf	(??_sqrt+2)& (0+255),f,b
  4535  00228C  337A               	rrcf	(??_sqrt+1)& (0+255),f,b
  4536  00228E  3379               	rrcf	??_sqrt& (0+255),f,b
  4537  002290  C079  F084         	movff	??_sqrt,sqrt@grs
  4538  002294  C07A  F085         	movff	??_sqrt+1,sqrt@grs+1
  4539  002298  C07B  F086         	movff	??_sqrt+2,sqrt@grs+2
  4540  00229C  C07C  F087         	movff	??_sqrt+3,sqrt@grs+3
  4541  0022A0                     
  4542                           ; BSR set to: 0
  4543  0022A0  90D8               	bcf	status,0,c
  4544  0022A2  377F               	rlcf	sqrt@tfrac& (0+255),f,b
  4545  0022A4  3780               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  4546  0022A6  3781               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  4547  0022A8  3782               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  4548  0022AA                     
  4549                           ; BSR set to: 0
  4550  0022AA  2B7E               	incf	sqrt@i& (0+255),f,b
  4551  0022AC                     l5920:
  4552                           
  4553                           ; BSR set to: 0
  4554  0022AC  0E18               	movlw	24
  4555  0022AE  657E               	cpfsgt	sqrt@i& (0+255),b
  4556  0022B0  EF5C  F011         	goto	u6711
  4557  0022B4  EF5E  F011         	goto	u6710
  4558  0022B8                     u6711:
  4559  0022B8  EF02  F011         	goto	l5908
  4560  0022BC                     u6710:
  4561  0022BC                     
  4562                           ; BSR set to: 0
  4563  0022BC  C08E  F079         	movff	sqrt@frac,??_sqrt
  4564  0022C0  C08F  F07A         	movff	sqrt@frac+1,??_sqrt+1
  4565  0022C4  C090  F07B         	movff	sqrt@frac+2,??_sqrt+2
  4566  0022C8  C091  F07C         	movff	sqrt@frac+3,??_sqrt+3
  4567  0022CC  90D8               	bcf	status,0,c
  4568  0022CE  337C               	rrcf	(??_sqrt+3)& (0+255),f,b
  4569  0022D0  337B               	rrcf	(??_sqrt+2)& (0+255),f,b
  4570  0022D2  337A               	rrcf	(??_sqrt+1)& (0+255),f,b
  4571  0022D4  3379               	rrcf	??_sqrt& (0+255),f,b
  4572  0022D6  C079  F08E         	movff	??_sqrt,sqrt@frac
  4573  0022DA  C07A  F08F         	movff	??_sqrt+1,sqrt@frac+1
  4574  0022DE  C07B  F090         	movff	??_sqrt+2,sqrt@frac+2
  4575  0022E2  C07C  F091         	movff	??_sqrt+3,sqrt@frac+3
  4576  0022E6                     
  4577                           ; BSR set to: 0
  4578  0022E6  0E01               	movlw	1
  4579  0022E8  158E               	andwf	sqrt@frac& (0+255),w,b
  4580  0022EA  6F84               	movwf	sqrt@grs& (0+255),b
  4581  0022EC  0E00               	movlw	0
  4582  0022EE  158F               	andwf	(sqrt@frac+1)& (0+255),w,b
  4583  0022F0  6F85               	movwf	(sqrt@grs+1)& (0+255),b
  4584  0022F2  0E00               	movlw	0
  4585  0022F4  1590               	andwf	(sqrt@frac+2)& (0+255),w,b
  4586  0022F6  6F86               	movwf	(sqrt@grs+2)& (0+255),b
  4587  0022F8  0E00               	movlw	0
  4588  0022FA  1591               	andwf	(sqrt@frac+3)& (0+255),w,b
  4589  0022FC  6F87               	movwf	(sqrt@grs+3)& (0+255),b
  4590  0022FE                     
  4591                           ; BSR set to: 0
  4592  0022FE  C08E  F079         	movff	sqrt@frac,??_sqrt
  4593  002302  C08F  F07A         	movff	sqrt@frac+1,??_sqrt+1
  4594  002306  C090  F07B         	movff	sqrt@frac+2,??_sqrt+2
  4595  00230A  C091  F07C         	movff	sqrt@frac+3,??_sqrt+3
  4596  00230E  90D8               	bcf	status,0,c
  4597  002310  337C               	rrcf	(??_sqrt+3)& (0+255),f,b
  4598  002312  337B               	rrcf	(??_sqrt+2)& (0+255),f,b
  4599  002314  337A               	rrcf	(??_sqrt+1)& (0+255),f,b
  4600  002316  3379               	rrcf	??_sqrt& (0+255),f,b
  4601  002318  C079  F08E         	movff	??_sqrt,sqrt@frac
  4602  00231C  C07A  F08F         	movff	??_sqrt+1,sqrt@frac+1
  4603  002320  C07B  F090         	movff	??_sqrt+2,sqrt@frac+2
  4604  002324  C07C  F091         	movff	??_sqrt+3,sqrt@frac+3
  4605  002328  5184               	movf	sqrt@grs& (0+255),w,b
  4606  00232A  278E               	addwf	sqrt@frac& (0+255),f,b
  4607  00232C  5185               	movf	(sqrt@grs+1)& (0+255),w,b
  4608  00232E  238F               	addwfc	(sqrt@frac+1)& (0+255),f,b
  4609  002330  5186               	movf	(sqrt@grs+2)& (0+255),w,b
  4610  002332  2390               	addwfc	(sqrt@frac+2)& (0+255),f,b
  4611  002334  5187               	movf	(sqrt@grs+3)& (0+255),w,b
  4612  002336  2391               	addwfc	(sqrt@frac+3)& (0+255),f,b
  4613  002338                     
  4614                           ; BSR set to: 0
  4615  002338  A191               	btfss	(sqrt@frac+3)& (0+255),0,b
  4616  00233A  EFA1  F011         	goto	u6721
  4617  00233E  EFA3  F011         	goto	u6720
  4618  002342                     u6721:
  4619  002342  EFBA  F011         	goto	l5932
  4620  002346                     u6720:
  4621  002346                     
  4622                           ; BSR set to: 0
  4623  002346  C08E  F079         	movff	sqrt@frac,??_sqrt
  4624  00234A  C08F  F07A         	movff	sqrt@frac+1,??_sqrt+1
  4625  00234E  C090  F07B         	movff	sqrt@frac+2,??_sqrt+2
  4626  002352  C091  F07C         	movff	sqrt@frac+3,??_sqrt+3
  4627  002356  90D8               	bcf	status,0,c
  4628  002358  337C               	rrcf	(??_sqrt+3)& (0+255),f,b
  4629  00235A  337B               	rrcf	(??_sqrt+2)& (0+255),f,b
  4630  00235C  337A               	rrcf	(??_sqrt+1)& (0+255),f,b
  4631  00235E  3379               	rrcf	??_sqrt& (0+255),f,b
  4632  002360  C079  F08E         	movff	??_sqrt,sqrt@frac
  4633  002364  C07A  F08F         	movff	??_sqrt+1,sqrt@frac+1
  4634  002368  C07B  F090         	movff	??_sqrt+2,sqrt@frac+2
  4635  00236C  C07C  F091         	movff	??_sqrt+3,sqrt@frac+3
  4636  002370  4B88               	infsnz	sqrt@exp& (0+255),f,b
  4637  002372  2B89               	incf	(sqrt@exp+1)& (0+255),f,b
  4638  002374                     l5932:
  4639                           
  4640                           ; BSR set to: 0
  4641  002374  0EFF               	movlw	255
  4642  002376  158E               	andwf	sqrt@frac& (0+255),w,b
  4643  002378  6F8A               	movwf	sqrt@root& (0+255),b
  4644  00237A  0EFF               	movlw	255
  4645  00237C  158F               	andwf	(sqrt@frac+1)& (0+255),w,b
  4646  00237E  6F8B               	movwf	(sqrt@root+1)& (0+255),b
  4647  002380  0E7F               	movlw	127
  4648  002382  1590               	andwf	(sqrt@frac+2)& (0+255),w,b
  4649  002384  6F8C               	movwf	(sqrt@root+2)& (0+255),b
  4650  002386  0E00               	movlw	0
  4651  002388  1591               	andwf	(sqrt@frac+3)& (0+255),w,b
  4652  00238A  6F8D               	movwf	(sqrt@root+3)& (0+255),b
  4653  00238C                     
  4654                           ; BSR set to: 0
  4655  00238C  C088  F083         	movff	sqrt@exp,sqrt@p
  4656  002390                     
  4657                           ; BSR set to: 0
  4658  002390  A183               	btfss	sqrt@p& (0+255),0,b
  4659  002392  EFCD  F011         	goto	u6731
  4660  002396  EFCF  F011         	goto	u6730
  4661  00239A                     u6731:
  4662  00239A  EFD0  F011         	goto	l5940
  4663  00239E                     u6730:
  4664  00239E                     
  4665                           ; BSR set to: 0
  4666  00239E  8F8C               	bsf	(sqrt@root+2)& (0+255),7,b
  4667  0023A0                     l5940:
  4668                           
  4669                           ; BSR set to: 0
  4670  0023A0  90D8               	bcf	status,0,c
  4671  0023A2  3183               	rrcf	sqrt@p& (0+255),w,b
  4672  0023A4  6F8D               	movwf	(sqrt@root+3)& (0+255),b
  4673  0023A6                     
  4674                           ; BSR set to: 0
  4675  0023A6  9F8D               	bcf	(sqrt@root+3)& (0+255),7,b
  4676  0023A8  EFAD  F010         	goto	l5884
  4677  0023AC                     l1418:
  4678                           
  4679                           ; BSR set to: 0
  4680  0023AC  0012               	return		;funcret
  4681  0023AE                     __end_of_sqrt:
  4682                           	callstack 0
  4683                           
  4684 ;; *************** function ___xxtofl *****************
  4685 ;; Defined at:
  4686 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  4687 ;; Parameters:    Size  Location     Type
  4688 ;;  sign            1    wreg     unsigned char 
  4689 ;;  val             4   36[COMRAM] long 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;  sign            1   44[COMRAM] unsigned char 
  4692 ;;  arg             4   46[COMRAM] unsigned long 
  4693 ;;  exp             1   45[COMRAM] unsigned char 
  4694 ;; Return value:  Size  Location     Type
  4695 ;;                  4   36[COMRAM] unsigned char 
  4696 ;; Registers used:
  4697 ;;		wreg, status,2, status,0
  4698 ;; Tracked objects:
  4699 ;;		On entry : 0/0
  4700 ;;		On exit  : 0/0
  4701 ;;		Unchanged: 0/0
  4702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4703 ;;      Params:         4       0       0       0       0       0       0       0       0
  4704 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4705 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4706 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4707 ;;Total ram usage:       14 bytes
  4708 ;; Hardware stack levels used:    1
  4709 ;; Hardware stack levels required when called:    3
  4710 ;; This function calls:
  4711 ;;		Nothing
  4712 ;; This function is called by:
  4713 ;;		_ComputeWaterVol
  4714 ;;		_pow
  4715 ;;		_exp
  4716 ;;		_floor
  4717 ;;		_log
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text23
  4722  002BE4                     __ptext23:
  4723                           	callstack 0
  4724  002BE4                     ___xxtofl:
  4725                           	callstack 24
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;incstack = 0
  4729                           ;___xxtofl@sign stored from wreg
  4730  002BE4  6E2D               	movwf	___xxtofl@sign^0,c
  4731  002BE6  502D               	movf	___xxtofl@sign^0,w,c
  4732  002BE8  B4D8               	btfsc	status,2,c
  4733  002BEA  EFF9  F015         	goto	u5811
  4734  002BEE  EFFB  F015         	goto	u5810
  4735  002BF2                     u5811:
  4736  002BF2  EF1D  F016         	goto	l1450
  4737  002BF6                     u5810:
  4738  002BF6  BE28               	btfsc	(___xxtofl@val+3)^0,7,c
  4739  002BF8  EF02  F016         	goto	u5820
  4740  002BFC  EF00  F016         	goto	u5821
  4741  002C00                     u5821:
  4742  002C00  EF1D  F016         	goto	l1450
  4743  002C04                     u5820:
  4744  002C04  C025  F029         	movff	___xxtofl@val,??___xxtofl
  4745  002C08  C026  F02A         	movff	___xxtofl@val+1,??___xxtofl+1
  4746  002C0C  C027  F02B         	movff	___xxtofl@val+2,??___xxtofl+2
  4747  002C10  C028  F02C         	movff	___xxtofl@val+3,??___xxtofl+3
  4748  002C14  1E29               	comf	??___xxtofl^0,f,c
  4749  002C16  1E2A               	comf	(??___xxtofl+1)^0,f,c
  4750  002C18  1E2B               	comf	(??___xxtofl+2)^0,f,c
  4751  002C1A  1E2C               	comf	(??___xxtofl+3)^0,f,c
  4752  002C1C  2A29               	incf	??___xxtofl^0,f,c
  4753  002C1E  0E00               	movlw	0
  4754  002C20  222A               	addwfc	(??___xxtofl+1)^0,f,c
  4755  002C22  222B               	addwfc	(??___xxtofl+2)^0,f,c
  4756  002C24  222C               	addwfc	(??___xxtofl+3)^0,f,c
  4757  002C26  C029  F02F         	movff	??___xxtofl,___xxtofl@arg
  4758  002C2A  C02A  F030         	movff	??___xxtofl+1,___xxtofl@arg+1
  4759  002C2E  C02B  F031         	movff	??___xxtofl+2,___xxtofl@arg+2
  4760  002C32  C02C  F032         	movff	??___xxtofl+3,___xxtofl@arg+3
  4761  002C36  EF25  F016         	goto	l5384
  4762  002C3A                     l1450:
  4763  002C3A  C025  F02F         	movff	___xxtofl@val,___xxtofl@arg
  4764  002C3E  C026  F030         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4765  002C42  C027  F031         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4766  002C46  C028  F032         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4767  002C4A                     l5384:
  4768  002C4A  5025               	movf	___xxtofl@val^0,w,c
  4769  002C4C  1026               	iorwf	(___xxtofl@val+1)^0,w,c
  4770  002C4E  1027               	iorwf	(___xxtofl@val+2)^0,w,c
  4771  002C50  1028               	iorwf	(___xxtofl@val+3)^0,w,c
  4772  002C52  A4D8               	btfss	status,2,c
  4773  002C54  EF2E  F016         	goto	u5831
  4774  002C58  EF30  F016         	goto	u5830
  4775  002C5C                     u5831:
  4776  002C5C  EF3A  F016         	goto	l5390
  4777  002C60                     u5830:
  4778  002C60  0E00               	movlw	0
  4779  002C62  6E25               	movwf	?___xxtofl^0,c
  4780  002C64  0E00               	movlw	0
  4781  002C66  6E26               	movwf	(?___xxtofl+1)^0,c
  4782  002C68  0E00               	movlw	0
  4783  002C6A  6E27               	movwf	(?___xxtofl+2)^0,c
  4784  002C6C  0E00               	movlw	0
  4785  002C6E  6E28               	movwf	(?___xxtofl+3)^0,c
  4786  002C70  EFCB  F016         	goto	l1453
  4787  002C74                     l5390:
  4788  002C74  0E96               	movlw	150
  4789  002C76  6E2E               	movwf	___xxtofl@exp^0,c
  4790  002C78  EF44  F016         	goto	l5394
  4791  002C7C                     l5392:
  4792  002C7C  2A2E               	incf	___xxtofl@exp^0,f,c
  4793  002C7E  90D8               	bcf	status,0,c
  4794  002C80  3232               	rrcf	(___xxtofl@arg+3)^0,f,c
  4795  002C82  3231               	rrcf	(___xxtofl@arg+2)^0,f,c
  4796  002C84  3230               	rrcf	(___xxtofl@arg+1)^0,f,c
  4797  002C86  322F               	rrcf	___xxtofl@arg^0,f,c
  4798  002C88                     l5394:
  4799  002C88  0E00               	movlw	0
  4800  002C8A  142F               	andwf	___xxtofl@arg^0,w,c
  4801  002C8C  6E29               	movwf	??___xxtofl^0,c
  4802  002C8E  0E00               	movlw	0
  4803  002C90  1430               	andwf	(___xxtofl@arg+1)^0,w,c
  4804  002C92  6E2A               	movwf	(??___xxtofl+1)^0,c
  4805  002C94  0E00               	movlw	0
  4806  002C96  1431               	andwf	(___xxtofl@arg+2)^0,w,c
  4807  002C98  6E2B               	movwf	(??___xxtofl+2)^0,c
  4808  002C9A  0EFE               	movlw	254
  4809  002C9C  1432               	andwf	(___xxtofl@arg+3)^0,w,c
  4810  002C9E  6E2C               	movwf	(??___xxtofl+3)^0,c
  4811  002CA0  5029               	movf	??___xxtofl^0,w,c
  4812  002CA2  102A               	iorwf	(??___xxtofl+1)^0,w,c
  4813  002CA4  102B               	iorwf	(??___xxtofl+2)^0,w,c
  4814  002CA6  102C               	iorwf	(??___xxtofl+3)^0,w,c
  4815  002CA8  A4D8               	btfss	status,2,c
  4816  002CAA  EF59  F016         	goto	u5841
  4817  002CAE  EF5B  F016         	goto	u5840
  4818  002CB2                     u5841:
  4819  002CB2  EF3E  F016         	goto	l5392
  4820  002CB6                     u5840:
  4821  002CB6  EF69  F016         	goto	l1457
  4822  002CBA                     l5396:
  4823  002CBA  2A2E               	incf	___xxtofl@exp^0,f,c
  4824  002CBC  0E01               	movlw	1
  4825  002CBE  262F               	addwf	___xxtofl@arg^0,f,c
  4826  002CC0  0E00               	movlw	0
  4827  002CC2  2230               	addwfc	(___xxtofl@arg+1)^0,f,c
  4828  002CC4  2231               	addwfc	(___xxtofl@arg+2)^0,f,c
  4829  002CC6  2232               	addwfc	(___xxtofl@arg+3)^0,f,c
  4830  002CC8  90D8               	bcf	status,0,c
  4831  002CCA  3232               	rrcf	(___xxtofl@arg+3)^0,f,c
  4832  002CCC  3231               	rrcf	(___xxtofl@arg+2)^0,f,c
  4833  002CCE  3230               	rrcf	(___xxtofl@arg+1)^0,f,c
  4834  002CD0  322F               	rrcf	___xxtofl@arg^0,f,c
  4835  002CD2                     l1457:
  4836  002CD2  0E00               	movlw	0
  4837  002CD4  142F               	andwf	___xxtofl@arg^0,w,c
  4838  002CD6  6E29               	movwf	??___xxtofl^0,c
  4839  002CD8  0E00               	movlw	0
  4840  002CDA  1430               	andwf	(___xxtofl@arg+1)^0,w,c
  4841  002CDC  6E2A               	movwf	(??___xxtofl+1)^0,c
  4842  002CDE  0E00               	movlw	0
  4843  002CE0  1431               	andwf	(___xxtofl@arg+2)^0,w,c
  4844  002CE2  6E2B               	movwf	(??___xxtofl+2)^0,c
  4845  002CE4  0EFF               	movlw	255
  4846  002CE6  1432               	andwf	(___xxtofl@arg+3)^0,w,c
  4847  002CE8  6E2C               	movwf	(??___xxtofl+3)^0,c
  4848  002CEA  5029               	movf	??___xxtofl^0,w,c
  4849  002CEC  102A               	iorwf	(??___xxtofl+1)^0,w,c
  4850  002CEE  102B               	iorwf	(??___xxtofl+2)^0,w,c
  4851  002CF0  102C               	iorwf	(??___xxtofl+3)^0,w,c
  4852  002CF2  A4D8               	btfss	status,2,c
  4853  002CF4  EF7E  F016         	goto	u5851
  4854  002CF8  EF80  F016         	goto	u5850
  4855  002CFC                     u5851:
  4856  002CFC  EF5D  F016         	goto	l5396
  4857  002D00                     u5850:
  4858  002D00  EF88  F016         	goto	l5404
  4859  002D04                     l5402:
  4860  002D04  062E               	decf	___xxtofl@exp^0,f,c
  4861  002D06  90D8               	bcf	status,0,c
  4862  002D08  362F               	rlcf	___xxtofl@arg^0,f,c
  4863  002D0A  3630               	rlcf	(___xxtofl@arg+1)^0,f,c
  4864  002D0C  3631               	rlcf	(___xxtofl@arg+2)^0,f,c
  4865  002D0E  3632               	rlcf	(___xxtofl@arg+3)^0,f,c
  4866  002D10                     l5404:
  4867  002D10  BE31               	btfsc	(___xxtofl@arg+2)^0,7,c
  4868  002D12  EF8D  F016         	goto	u5861
  4869  002D16  EF8F  F016         	goto	u5860
  4870  002D1A                     u5861:
  4871  002D1A  EF97  F016         	goto	l1464
  4872  002D1E                     u5860:
  4873  002D1E  0E02               	movlw	2
  4874  002D20  602E               	cpfslt	___xxtofl@exp^0,c
  4875  002D22  EF95  F016         	goto	u5871
  4876  002D26  EF97  F016         	goto	u5870
  4877  002D2A                     u5871:
  4878  002D2A  EF82  F016         	goto	l5402
  4879  002D2E                     u5870:
  4880  002D2E                     l1464:
  4881  002D2E  B02E               	btfsc	___xxtofl@exp^0,0,c
  4882  002D30  EF9C  F016         	goto	u5881
  4883  002D34  EF9E  F016         	goto	u5880
  4884  002D38                     u5881:
  4885  002D38  EF9F  F016         	goto	l5410
  4886  002D3C                     u5880:
  4887  002D3C  9E31               	bcf	(___xxtofl@arg+2)^0,7,c
  4888  002D3E                     l5410:
  4889  002D3E  90D8               	bcf	status,0,c
  4890  002D40  322E               	rrcf	___xxtofl@exp^0,f,c
  4891  002D42  C02E  F029         	movff	___xxtofl@exp,??___xxtofl
  4892  002D46  6A2A               	clrf	(??___xxtofl+1)^0,c
  4893  002D48  6A2B               	clrf	(??___xxtofl+2)^0,c
  4894  002D4A  6A2C               	clrf	(??___xxtofl+3)^0,c
  4895  002D4C  C029  F02C         	movff	??___xxtofl,??___xxtofl+3
  4896  002D50  6A2B               	clrf	(??___xxtofl+2)^0,c
  4897  002D52  6A2A               	clrf	(??___xxtofl+1)^0,c
  4898  002D54  6A29               	clrf	??___xxtofl^0,c
  4899  002D56  5029               	movf	??___xxtofl^0,w,c
  4900  002D58  122F               	iorwf	___xxtofl@arg^0,f,c
  4901  002D5A  502A               	movf	(??___xxtofl+1)^0,w,c
  4902  002D5C  1230               	iorwf	(___xxtofl@arg+1)^0,f,c
  4903  002D5E  502B               	movf	(??___xxtofl+2)^0,w,c
  4904  002D60  1231               	iorwf	(___xxtofl@arg+2)^0,f,c
  4905  002D62  502C               	movf	(??___xxtofl+3)^0,w,c
  4906  002D64  1232               	iorwf	(___xxtofl@arg+3)^0,f,c
  4907  002D66  502D               	movf	___xxtofl@sign^0,w,c
  4908  002D68  B4D8               	btfsc	status,2,c
  4909  002D6A  EFB9  F016         	goto	u5891
  4910  002D6E  EFBB  F016         	goto	u5890
  4911  002D72                     u5891:
  4912  002D72  EFC3  F016         	goto	l5420
  4913  002D76                     u5890:
  4914  002D76  BE28               	btfsc	(___xxtofl@val+3)^0,7,c
  4915  002D78  EFC2  F016         	goto	u5900
  4916  002D7C  EFC0  F016         	goto	u5901
  4917  002D80                     u5901:
  4918  002D80  EFC3  F016         	goto	l5420
  4919  002D84                     u5900:
  4920  002D84  8E32               	bsf	(___xxtofl@arg+3)^0,7,c
  4921  002D86                     l5420:
  4922  002D86  C02F  F025         	movff	___xxtofl@arg,?___xxtofl
  4923  002D8A  C030  F026         	movff	___xxtofl@arg+1,?___xxtofl+1
  4924  002D8E  C031  F027         	movff	___xxtofl@arg+2,?___xxtofl+2
  4925  002D92  C032  F028         	movff	___xxtofl@arg+3,?___xxtofl+3
  4926  002D96                     l1453:
  4927  002D96  0012               	return		;funcret
  4928  002D98                     __end_of___xxtofl:
  4929                           	callstack 0
  4930                           
  4931 ;; *************** function ___fltol *****************
  4932 ;; Defined at:
  4933 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;  f1              4   26[COMRAM] unsigned char 
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;  exp1            1   35[COMRAM] unsigned char 
  4938 ;;  sign1           1   34[COMRAM] unsigned char 
  4939 ;; Return value:  Size  Location     Type
  4940 ;;                  4   26[COMRAM] long 
  4941 ;; Registers used:
  4942 ;;		wreg, status,2, status,0
  4943 ;; Tracked objects:
  4944 ;;		On entry : 0/0
  4945 ;;		On exit  : 0/0
  4946 ;;		Unchanged: 0/0
  4947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4948 ;;      Params:         4       0       0       0       0       0       0       0       0
  4949 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4950 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4951 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4952 ;;Total ram usage:       10 bytes
  4953 ;; Hardware stack levels used:    1
  4954 ;; Hardware stack levels required when called:    3
  4955 ;; This function calls:
  4956 ;;		Nothing
  4957 ;; This function is called by:
  4958 ;;		_ComputeWaterVol
  4959 ;;		_pow
  4960 ;;		_exp
  4961 ;;		_floor
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           	psect	text24
  4966  0032EC                     __ptext24:
  4967                           	callstack 0
  4968  0032EC                     ___fltol:
  4969                           	callstack 23
  4970  0032EC  341D               	rlcf	(___fltol@f1+2)^0,w,c
  4971  0032EE  341E               	rlcf	(___fltol@f1+3)^0,w,c
  4972  0032F0  6E24               	movwf	___fltol@exp1^0,c
  4973  0032F2  5024               	movf	___fltol@exp1^0,w,c
  4974  0032F4  A4D8               	btfss	status,2,c
  4975  0032F6  EF7F  F019         	goto	u5741
  4976  0032FA  EF81  F019         	goto	u5740
  4977  0032FE                     u5741:
  4978  0032FE  EF8B  F019         	goto	l5340
  4979  003302                     u5740:
  4980  003302                     l5336:
  4981  003302  0E00               	movlw	0
  4982  003304  6E1B               	movwf	?___fltol^0,c
  4983  003306  0E00               	movlw	0
  4984  003308  6E1C               	movwf	(?___fltol+1)^0,c
  4985  00330A  0E00               	movlw	0
  4986  00330C  6E1D               	movwf	(?___fltol+2)^0,c
  4987  00330E  0E00               	movlw	0
  4988  003310  6E1E               	movwf	(?___fltol+3)^0,c
  4989  003312  EFF8  F019         	goto	l1076
  4990  003316                     l5340:
  4991  003316  C01B  F01F         	movff	___fltol@f1,??___fltol
  4992  00331A  C01C  F020         	movff	___fltol@f1+1,??___fltol+1
  4993  00331E  C01D  F021         	movff	___fltol@f1+2,??___fltol+2
  4994  003322  C01E  F022         	movff	___fltol@f1+3,??___fltol+3
  4995  003326  0E20               	movlw	32
  4996  003328  EF9B  F019         	goto	u5750
  4997  00332C                     u5755:
  4998  00332C  90D8               	bcf	status,0,c
  4999  00332E  3222               	rrcf	(??___fltol+3)^0,f,c
  5000  003330  3221               	rrcf	(??___fltol+2)^0,f,c
  5001  003332  3220               	rrcf	(??___fltol+1)^0,f,c
  5002  003334  321F               	rrcf	??___fltol^0,f,c
  5003  003336                     u5750:
  5004  003336  2EE8               	decfsz	wreg,f,c
  5005  003338  EF96  F019         	goto	u5755
  5006  00333C  501F               	movf	??___fltol^0,w,c
  5007  00333E  6E23               	movwf	___fltol@sign1^0,c
  5008  003340  8E1D               	bsf	(___fltol@f1+2)^0,7,c
  5009  003342  0EFF               	movlw	255
  5010  003344  161B               	andwf	___fltol@f1^0,f,c
  5011  003346  0EFF               	movlw	255
  5012  003348  161C               	andwf	(___fltol@f1+1)^0,f,c
  5013  00334A  0EFF               	movlw	255
  5014  00334C  161D               	andwf	(___fltol@f1+2)^0,f,c
  5015  00334E  0E00               	movlw	0
  5016  003350  161E               	andwf	(___fltol@f1+3)^0,f,c
  5017  003352  0E96               	movlw	150
  5018  003354  5E24               	subwf	___fltol@exp1^0,f,c
  5019  003356  BE24               	btfsc	___fltol@exp1^0,7,c
  5020  003358  EFB2  F019         	goto	u5760
  5021  00335C  EFB0  F019         	goto	u5761
  5022  003360                     u5761:
  5023  003360  EFC8  F019         	goto	l5360
  5024  003364                     u5760:
  5025  003364  5024               	movf	___fltol@exp1^0,w,c
  5026  003366  0A80               	xorlw	128
  5027  003368  0F97               	addlw	151
  5028  00336A  B0D8               	btfsc	status,0,c
  5029  00336C  EFBA  F019         	goto	u5771
  5030  003370  EFBC  F019         	goto	u5770
  5031  003374                     u5771:
  5032  003374  EFBE  F019         	goto	l5356
  5033  003378                     u5770:
  5034  003378  EF81  F019         	goto	l5336
  5035  00337C                     l5356:
  5036  00337C  90D8               	bcf	status,0,c
  5037  00337E  321E               	rrcf	(___fltol@f1+3)^0,f,c
  5038  003380  321D               	rrcf	(___fltol@f1+2)^0,f,c
  5039  003382  321C               	rrcf	(___fltol@f1+1)^0,f,c
  5040  003384  321B               	rrcf	___fltol@f1^0,f,c
  5041  003386  3E24               	incfsz	___fltol@exp1^0,f,c
  5042  003388  EFBE  F019         	goto	l5356
  5043  00338C  EFE0  F019         	goto	l5370
  5044  003390                     l5360:
  5045  003390  0E1F               	movlw	31
  5046  003392  6424               	cpfsgt	___fltol@exp1^0,c
  5047  003394  EFCE  F019         	goto	u5781
  5048  003398  EFD0  F019         	goto	u5780
  5049  00339C                     u5781:
  5050  00339C  EFD8  F019         	goto	l5368
  5051  0033A0                     u5780:
  5052  0033A0  EF81  F019         	goto	l5336
  5053  0033A4                     l5366:
  5054  0033A4  90D8               	bcf	status,0,c
  5055  0033A6  361B               	rlcf	___fltol@f1^0,f,c
  5056  0033A8  361C               	rlcf	(___fltol@f1+1)^0,f,c
  5057  0033AA  361D               	rlcf	(___fltol@f1+2)^0,f,c
  5058  0033AC  361E               	rlcf	(___fltol@f1+3)^0,f,c
  5059  0033AE  0624               	decf	___fltol@exp1^0,f,c
  5060  0033B0                     l5368:
  5061  0033B0  5024               	movf	___fltol@exp1^0,w,c
  5062  0033B2  A4D8               	btfss	status,2,c
  5063  0033B4  EFDE  F019         	goto	u5791
  5064  0033B8  EFE0  F019         	goto	u5790
  5065  0033BC                     u5791:
  5066  0033BC  EFD2  F019         	goto	l5366
  5067  0033C0                     u5790:
  5068  0033C0                     l5370:
  5069  0033C0  5023               	movf	___fltol@sign1^0,w,c
  5070  0033C2  B4D8               	btfsc	status,2,c
  5071  0033C4  EFE6  F019         	goto	u5801
  5072  0033C8  EFE8  F019         	goto	u5800
  5073  0033CC                     u5801:
  5074  0033CC  EFF0  F019         	goto	l5374
  5075  0033D0                     u5800:
  5076  0033D0  1E1E               	comf	(___fltol@f1+3)^0,f,c
  5077  0033D2  1E1D               	comf	(___fltol@f1+2)^0,f,c
  5078  0033D4  1E1C               	comf	(___fltol@f1+1)^0,f,c
  5079  0033D6  6C1B               	negf	___fltol@f1^0,c
  5080  0033D8  0E00               	movlw	0
  5081  0033DA  221C               	addwfc	(___fltol@f1+1)^0,f,c
  5082  0033DC  221D               	addwfc	(___fltol@f1+2)^0,f,c
  5083  0033DE  221E               	addwfc	(___fltol@f1+3)^0,f,c
  5084  0033E0                     l5374:
  5085  0033E0  C01B  F01B         	movff	___fltol@f1,?___fltol
  5086  0033E4  C01C  F01C         	movff	___fltol@f1+1,?___fltol+1
  5087  0033E8  C01D  F01D         	movff	___fltol@f1+2,?___fltol+2
  5088  0033EC  C01E  F01E         	movff	___fltol@f1+3,?___fltol+3
  5089  0033F0                     l1076:
  5090  0033F0  0012               	return		;funcret
  5091  0033F2                     __end_of___fltol:
  5092                           	callstack 0
  5093                           
  5094 ;; *************** function ___flsub *****************
  5095 ;; Defined at:
  5096 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;  b               4   21[BANK0 ] long 
  5099 ;;  a               4   25[BANK0 ] long 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;		None
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  4   21[BANK0 ] long 
  5104 ;; Registers used:
  5105 ;;		wreg, status,2, status,0, cstack
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5111 ;;      Params:         0       8       0       0       0       0       0       0       0
  5112 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5113 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5114 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5115 ;;Total ram usage:        8 bytes
  5116 ;; Hardware stack levels used:    1
  5117 ;; Hardware stack levels required when called:    4
  5118 ;; This function calls:
  5119 ;;		___fladd
  5120 ;; This function is called by:
  5121 ;;		_ComputeWaterVol
  5122 ;;		_exp
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text25
  5127  003CAC                     __ptext25:
  5128                           	callstack 0
  5129  003CAC                     ___flsub:
  5130                           	callstack 23
  5131  003CAC  0E00               	movlw	0
  5132  003CAE  0100               	movlb	0	; () banked
  5133  003CB0  1B79               	xorwf	___flsub@a& (0+255),f,b
  5134  003CB2  0E00               	movlw	0
  5135  003CB4  1B7A               	xorwf	(___flsub@a+1)& (0+255),f,b
  5136  003CB6  0E00               	movlw	0
  5137  003CB8  1B7B               	xorwf	(___flsub@a+2)& (0+255),f,b
  5138  003CBA  0E80               	movlw	128
  5139  003CBC  1B7C               	xorwf	(___flsub@a+3)& (0+255),f,b
  5140  003CBE                     
  5141                           ; BSR set to: 0
  5142  003CBE  C075  F053         	movff	___flsub@b,___fladd@b
  5143  003CC2  C076  F054         	movff	___flsub@b+1,___fladd@b+1
  5144  003CC6  C077  F055         	movff	___flsub@b+2,___fladd@b+2
  5145  003CCA  C078  F056         	movff	___flsub@b+3,___fladd@b+3
  5146  003CCE  C079  F057         	movff	___flsub@a,___fladd@a
  5147  003CD2  C07A  F058         	movff	___flsub@a+1,___fladd@a+1
  5148  003CD6  C07B  F059         	movff	___flsub@a+2,___fladd@a+2
  5149  003CDA  C07C  F05A         	movff	___flsub@a+3,___fladd@a+3
  5150  003CDE  EC05  F00A         	call	___fladd	;wreg free
  5151  003CE2  C053  F075         	movff	?___fladd,?___flsub
  5152  003CE6  C054  F076         	movff	?___fladd+1,?___flsub+1
  5153  003CEA  C055  F077         	movff	?___fladd+2,?___flsub+2
  5154  003CEE  C056  F078         	movff	?___fladd+3,?___flsub+3
  5155  003CF2  0012               	return		;funcret
  5156  003CF4                     __end_of___flsub:
  5157                           	callstack 0
  5158                           
  5159 ;; *************** function ___fladd *****************
  5160 ;; Defined at:
  5161 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  5162 ;; Parameters:    Size  Location     Type
  5163 ;;  b               4   82[COMRAM] long 
  5164 ;;  a               4   86[COMRAM] long 
  5165 ;; Auto vars:     Size  Location     Type
  5166 ;;  grs             1   20[BANK0 ] unsigned char 
  5167 ;;  bexp            1   19[BANK0 ] unsigned char 
  5168 ;;  aexp            1   18[BANK0 ] unsigned char 
  5169 ;;  signs           1   17[BANK0 ] unsigned char 
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  4   82[COMRAM] unsigned char 
  5172 ;; Registers used:
  5173 ;;		wreg, status,2, status,0
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5179 ;;      Params:         8       0       0       0       0       0       0       0       0
  5180 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5181 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5182 ;;      Totals:         8       8       0       0       0       0       0       0       0
  5183 ;;Total ram usage:       16 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    3
  5186 ;; This function calls:
  5187 ;;		Nothing
  5188 ;; This function is called by:
  5189 ;;		_ComputeWaterVol
  5190 ;;		___flsub
  5191 ;;		_eval_poly
  5192 ;;		_floor
  5193 ;;		_log
  5194 ;; This function uses a non-reentrant model
  5195 ;;
  5196                           
  5197                           	psect	text26
  5198  00140A                     __ptext26:
  5199                           	callstack 0
  5200  00140A                     ___fladd:
  5201                           	callstack 23
  5202  00140A  5056               	movf	(___fladd@b+3)^0,w,c
  5203  00140C  0B80               	andlw	128
  5204  00140E  0100               	movlb	0	; () banked
  5205  001410  6F71               	movwf	___fladd@signs& (0+255),b
  5206  001412  5056               	movf	(___fladd@b+3)^0,w,c
  5207  001414  2456               	addwf	(___fladd@b+3)^0,w,c
  5208  001416  6F73               	movwf	___fladd@bexp& (0+255),b
  5209  001418                     
  5210                           ; BSR set to: 0
  5211  001418  AE55               	btfss	(___fladd@b+2)^0,7,c
  5212  00141A  EF11  F00A         	goto	u5111
  5213  00141E  EF13  F00A         	goto	u5110
  5214  001422                     u5111:
  5215  001422  EF14  F00A         	goto	l4986
  5216  001426                     u5110:
  5217  001426                     
  5218                           ; BSR set to: 0
  5219  001426  8173               	bsf	___fladd@bexp& (0+255),0,b
  5220  001428                     l4986:
  5221                           
  5222                           ; BSR set to: 0
  5223  001428  5173               	movf	___fladd@bexp& (0+255),w,b
  5224  00142A  B4D8               	btfsc	status,2,c
  5225  00142C  EF1A  F00A         	goto	u5121
  5226  001430  EF1C  F00A         	goto	u5120
  5227  001434                     u5121:
  5228  001434  EF31  F00A         	goto	l4996
  5229  001438                     u5120:
  5230  001438                     
  5231                           ; BSR set to: 0
  5232  001438  2973               	incf	___fladd@bexp& (0+255),w,b
  5233  00143A  A4D8               	btfss	status,2,c
  5234  00143C  EF22  F00A         	goto	u5131
  5235  001440  EF24  F00A         	goto	u5130
  5236  001444                     u5131:
  5237  001444  EF2C  F00A         	goto	l4992
  5238  001448                     u5130:
  5239  001448                     
  5240                           ; BSR set to: 0
  5241  001448  0E00               	movlw	0
  5242  00144A  6E53               	movwf	___fladd@b^0,c
  5243  00144C  0E00               	movlw	0
  5244  00144E  6E54               	movwf	(___fladd@b+1)^0,c
  5245  001450  0E00               	movlw	0
  5246  001452  6E55               	movwf	(___fladd@b+2)^0,c
  5247  001454  0E00               	movlw	0
  5248  001456  6E56               	movwf	(___fladd@b+3)^0,c
  5249  001458                     l4992:
  5250                           
  5251                           ; BSR set to: 0
  5252  001458  8E55               	bsf	(___fladd@b+2)^0,7,c
  5253  00145A                     
  5254                           ; BSR set to: 0
  5255  00145A  0E00               	movlw	0
  5256  00145C  6E56               	movwf	(___fladd@b+3)^0,c
  5257  00145E  EF39  F00A         	goto	l4998
  5258  001462                     l4996:
  5259                           
  5260                           ; BSR set to: 0
  5261  001462  0E00               	movlw	0
  5262  001464  6E53               	movwf	___fladd@b^0,c
  5263  001466  0E00               	movlw	0
  5264  001468  6E54               	movwf	(___fladd@b+1)^0,c
  5265  00146A  0E00               	movlw	0
  5266  00146C  6E55               	movwf	(___fladd@b+2)^0,c
  5267  00146E  0E00               	movlw	0
  5268  001470  6E56               	movwf	(___fladd@b+3)^0,c
  5269  001472                     l4998:
  5270                           
  5271                           ; BSR set to: 0
  5272  001472  505A               	movf	(___fladd@a+3)^0,w,c
  5273  001474  0B80               	andlw	128
  5274  001476  6F72               	movwf	___fladd@aexp& (0+255),b
  5275  001478                     
  5276                           ; BSR set to: 0
  5277  001478  5171               	movf	___fladd@signs& (0+255),w,b
  5278  00147A  1972               	xorwf	___fladd@aexp& (0+255),w,b
  5279  00147C  B4D8               	btfsc	status,2,c
  5280  00147E  EF43  F00A         	goto	u5141
  5281  001482  EF45  F00A         	goto	u5140
  5282  001486                     u5141:
  5283  001486  EF46  F00A         	goto	l5004
  5284  00148A                     u5140:
  5285  00148A                     
  5286                           ; BSR set to: 0
  5287  00148A  8D71               	bsf	___fladd@signs& (0+255),6,b
  5288  00148C                     l5004:
  5289                           
  5290                           ; BSR set to: 0
  5291  00148C  505A               	movf	(___fladd@a+3)^0,w,c
  5292  00148E  245A               	addwf	(___fladd@a+3)^0,w,c
  5293  001490  6F72               	movwf	___fladd@aexp& (0+255),b
  5294  001492                     
  5295                           ; BSR set to: 0
  5296  001492  AE59               	btfss	(___fladd@a+2)^0,7,c
  5297  001494  EF4E  F00A         	goto	u5151
  5298  001498  EF50  F00A         	goto	u5150
  5299  00149C                     u5151:
  5300  00149C  EF51  F00A         	goto	l5010
  5301  0014A0                     u5150:
  5302  0014A0                     
  5303                           ; BSR set to: 0
  5304  0014A0  8172               	bsf	___fladd@aexp& (0+255),0,b
  5305  0014A2                     l5010:
  5306                           
  5307                           ; BSR set to: 0
  5308  0014A2  5172               	movf	___fladd@aexp& (0+255),w,b
  5309  0014A4  B4D8               	btfsc	status,2,c
  5310  0014A6  EF57  F00A         	goto	u5161
  5311  0014AA  EF59  F00A         	goto	u5160
  5312  0014AE                     u5161:
  5313  0014AE  EF6E  F00A         	goto	l5020
  5314  0014B2                     u5160:
  5315  0014B2                     
  5316                           ; BSR set to: 0
  5317  0014B2  2972               	incf	___fladd@aexp& (0+255),w,b
  5318  0014B4  A4D8               	btfss	status,2,c
  5319  0014B6  EF5F  F00A         	goto	u5171
  5320  0014BA  EF61  F00A         	goto	u5170
  5321  0014BE                     u5171:
  5322  0014BE  EF69  F00A         	goto	l5016
  5323  0014C2                     u5170:
  5324  0014C2                     
  5325                           ; BSR set to: 0
  5326  0014C2  0E00               	movlw	0
  5327  0014C4  6E57               	movwf	___fladd@a^0,c
  5328  0014C6  0E00               	movlw	0
  5329  0014C8  6E58               	movwf	(___fladd@a+1)^0,c
  5330  0014CA  0E00               	movlw	0
  5331  0014CC  6E59               	movwf	(___fladd@a+2)^0,c
  5332  0014CE  0E00               	movlw	0
  5333  0014D0  6E5A               	movwf	(___fladd@a+3)^0,c
  5334  0014D2                     l5016:
  5335                           
  5336                           ; BSR set to: 0
  5337  0014D2  8E59               	bsf	(___fladd@a+2)^0,7,c
  5338  0014D4                     
  5339                           ; BSR set to: 0
  5340  0014D4  0E00               	movlw	0
  5341  0014D6  6E5A               	movwf	(___fladd@a+3)^0,c
  5342  0014D8  EF76  F00A         	goto	l5022
  5343  0014DC                     l5020:
  5344                           
  5345                           ; BSR set to: 0
  5346  0014DC  0E00               	movlw	0
  5347  0014DE  6E57               	movwf	___fladd@a^0,c
  5348  0014E0  0E00               	movlw	0
  5349  0014E2  6E58               	movwf	(___fladd@a+1)^0,c
  5350  0014E4  0E00               	movlw	0
  5351  0014E6  6E59               	movwf	(___fladd@a+2)^0,c
  5352  0014E8  0E00               	movlw	0
  5353  0014EA  6E5A               	movwf	(___fladd@a+3)^0,c
  5354  0014EC                     l5022:
  5355                           
  5356                           ; BSR set to: 0
  5357  0014EC  5173               	movf	___fladd@bexp& (0+255),w,b
  5358  0014EE  5D72               	subwf	___fladd@aexp& (0+255),w,b
  5359  0014F0  B0D8               	btfsc	status,0,c
  5360  0014F2  EF7D  F00A         	goto	u5181
  5361  0014F6  EF7F  F00A         	goto	u5180
  5362  0014FA                     u5181:
  5363  0014FA  EFA6  F00A         	goto	l5058
  5364  0014FE                     u5180:
  5365  0014FE                     
  5366                           ; BSR set to: 0
  5367  0014FE  AD71               	btfss	___fladd@signs& (0+255),6,b
  5368  001500  EF84  F00A         	goto	u5191
  5369  001504  EF86  F00A         	goto	u5190
  5370  001508                     u5191:
  5371  001508  EF88  F00A         	goto	l5028
  5372  00150C                     u5190:
  5373  00150C                     
  5374                           ; BSR set to: 0
  5375  00150C  0E80               	movlw	128
  5376  00150E  1B71               	xorwf	___fladd@signs& (0+255),f,b
  5377  001510                     l5028:
  5378                           
  5379                           ; BSR set to: 0
  5380  001510  C073  F074         	movff	___fladd@bexp,___fladd@grs
  5381  001514                     
  5382                           ; BSR set to: 0
  5383  001514  C072  F073         	movff	___fladd@aexp,___fladd@bexp
  5384  001518                     
  5385                           ; BSR set to: 0
  5386  001518  C074  F072         	movff	___fladd@grs,___fladd@aexp
  5387  00151C                     
  5388                           ; BSR set to: 0
  5389  00151C  C053  F074         	movff	___fladd@b,___fladd@grs
  5390  001520                     
  5391                           ; BSR set to: 0
  5392  001520  C057  F053         	movff	___fladd@a,___fladd@b
  5393  001524                     
  5394                           ; BSR set to: 0
  5395  001524  C074  F057         	movff	___fladd@grs,___fladd@a
  5396  001528                     
  5397                           ; BSR set to: 0
  5398  001528  C054  F074         	movff	___fladd@b+1,___fladd@grs
  5399  00152C                     
  5400                           ; BSR set to: 0
  5401  00152C  C058  F054         	movff	___fladd@a+1,___fladd@b+1
  5402  001530                     
  5403                           ; BSR set to: 0
  5404  001530  C074  F058         	movff	___fladd@grs,___fladd@a+1
  5405  001534                     
  5406                           ; BSR set to: 0
  5407  001534  C055  F074         	movff	___fladd@b+2,___fladd@grs
  5408  001538                     
  5409                           ; BSR set to: 0
  5410  001538  C059  F055         	movff	___fladd@a+2,___fladd@b+2
  5411  00153C                     
  5412                           ; BSR set to: 0
  5413  00153C  C074  F059         	movff	___fladd@grs,___fladd@a+2
  5414  001540                     
  5415                           ; BSR set to: 0
  5416  001540  C056  F074         	movff	___fladd@b+3,___fladd@grs
  5417  001544                     
  5418                           ; BSR set to: 0
  5419  001544  C05A  F056         	movff	___fladd@a+3,___fladd@b+3
  5420  001548                     
  5421                           ; BSR set to: 0
  5422  001548  C074  F05A         	movff	___fladd@grs,___fladd@a+3
  5423  00154C                     l5058:
  5424                           
  5425                           ; BSR set to: 0
  5426  00154C  0E00               	movlw	0
  5427  00154E  6F74               	movwf	___fladd@grs& (0+255),b
  5428  001550                     
  5429                           ; BSR set to: 0
  5430  001550  5173               	movf	___fladd@bexp& (0+255),w,b
  5431  001552  C072  F06D         	movff	___fladd@aexp,??___fladd
  5432  001556  6B6E               	clrf	(??___fladd+1)& (0+255),b
  5433  001558  5F6D               	subwf	??___fladd& (0+255),f,b
  5434  00155A  0E00               	movlw	0
  5435  00155C  5B6E               	subwfb	(??___fladd+1)& (0+255),f,b
  5436  00155E  BF6E               	btfsc	(??___fladd+1)& (0+255),7,b
  5437  001560  EFBB  F00A         	goto	u5201
  5438  001564  516E               	movf	(??___fladd+1)& (0+255),w,b
  5439  001566  E109               	bnz	u5200
  5440  001568  0E1A               	movlw	26
  5441  00156A  5D6D               	subwf	??___fladd& (0+255),w,b
  5442  00156C  A0D8               	btfss	status,0,c
  5443  00156E  EFBB  F00A         	goto	u5201
  5444  001572  EFBD  F00A         	goto	u5200
  5445  001576                     u5201:
  5446  001576  EFF4  F00A         	goto	l1304
  5447  00157A                     u5200:
  5448  00157A                     
  5449                           ; BSR set to: 0
  5450  00157A  5053               	movf	___fladd@b^0,w,c
  5451  00157C  1054               	iorwf	(___fladd@b+1)^0,w,c
  5452  00157E  1055               	iorwf	(___fladd@b+2)^0,w,c
  5453  001580  1056               	iorwf	(___fladd@b+3)^0,w,c
  5454  001582  A4D8               	btfss	status,2,c
  5455  001584  EFC6  F00A         	goto	u5211
  5456  001588  EFC9  F00A         	goto	u5210
  5457  00158C                     u5211:
  5458  00158C  0E01               	movlw	1
  5459  00158E  EFCA  F00A         	goto	u5220
  5460  001592                     u5210:
  5461  001592  0E00               	movlw	0
  5462  001594                     u5220:
  5463  001594  6F74               	movwf	___fladd@grs& (0+255),b
  5464  001596                     
  5465                           ; BSR set to: 0
  5466  001596  0E00               	movlw	0
  5467  001598  6E53               	movwf	___fladd@b^0,c
  5468  00159A  0E00               	movlw	0
  5469  00159C  6E54               	movwf	(___fladd@b+1)^0,c
  5470  00159E  0E00               	movlw	0
  5471  0015A0  6E55               	movwf	(___fladd@b+2)^0,c
  5472  0015A2  0E00               	movlw	0
  5473  0015A4  6E56               	movwf	(___fladd@b+3)^0,c
  5474  0015A6                     
  5475                           ; BSR set to: 0
  5476  0015A6  C072  F073         	movff	___fladd@aexp,___fladd@bexp
  5477  0015AA  EFFD  F00A         	goto	l1303
  5478  0015AE                     l1305:
  5479                           
  5480                           ; BSR set to: 0
  5481  0015AE  A174               	btfss	___fladd@grs& (0+255),0,b
  5482  0015B0  EFDC  F00A         	goto	u5231
  5483  0015B4  EFDE  F00A         	goto	u5230
  5484  0015B8                     u5231:
  5485  0015B8  EFE4  F00A         	goto	l5070
  5486  0015BC                     u5230:
  5487  0015BC                     
  5488                           ; BSR set to: 0
  5489  0015BC  90D8               	bcf	status,0,c
  5490  0015BE  3174               	rrcf	___fladd@grs& (0+255),w,b
  5491  0015C0  0901               	iorlw	1
  5492  0015C2  6F74               	movwf	___fladd@grs& (0+255),b
  5493  0015C4  EFE6  F00A         	goto	l5072
  5494  0015C8                     l5070:
  5495                           
  5496                           ; BSR set to: 0
  5497  0015C8  90D8               	bcf	status,0,c
  5498  0015CA  3374               	rrcf	___fladd@grs& (0+255),f,b
  5499  0015CC                     l5072:
  5500                           
  5501                           ; BSR set to: 0
  5502  0015CC  A053               	btfss	___fladd@b^0,0,c
  5503  0015CE  EFEB  F00A         	goto	u5241
  5504  0015D2  EFED  F00A         	goto	u5240
  5505  0015D6                     u5241:
  5506  0015D6  EFEE  F00A         	goto	l5076
  5507  0015DA                     u5240:
  5508  0015DA                     
  5509                           ; BSR set to: 0
  5510  0015DA  8F74               	bsf	___fladd@grs& (0+255),7,b
  5511  0015DC                     l5076:
  5512                           
  5513                           ; BSR set to: 0
  5514  0015DC  3456               	rlcf	(___fladd@b+3)^0,w,c
  5515  0015DE  3256               	rrcf	(___fladd@b+3)^0,f,c
  5516  0015E0  3255               	rrcf	(___fladd@b+2)^0,f,c
  5517  0015E2  3254               	rrcf	(___fladd@b+1)^0,f,c
  5518  0015E4  3253               	rrcf	___fladd@b^0,f,c
  5519  0015E6                     
  5520                           ; BSR set to: 0
  5521  0015E6  2B73               	incf	___fladd@bexp& (0+255),f,b
  5522  0015E8                     l1304:
  5523                           
  5524                           ; BSR set to: 0
  5525  0015E8  5172               	movf	___fladd@aexp& (0+255),w,b
  5526  0015EA  5D73               	subwf	___fladd@bexp& (0+255),w,b
  5527  0015EC  A0D8               	btfss	status,0,c
  5528  0015EE  EFFB  F00A         	goto	u5251
  5529  0015F2  EFFD  F00A         	goto	u5250
  5530  0015F6                     u5251:
  5531  0015F6  EFD7  F00A         	goto	l1305
  5532  0015FA                     u5250:
  5533  0015FA                     l1303:
  5534                           
  5535                           ; BSR set to: 0
  5536  0015FA  BD71               	btfsc	___fladd@signs& (0+255),6,b
  5537  0015FC  EF02  F00B         	goto	u5261
  5538  001600  EF04  F00B         	goto	u5260
  5539  001604                     u5261:
  5540  001604  EF44  F00B         	goto	l5104
  5541  001608                     u5260:
  5542  001608                     
  5543                           ; BSR set to: 0
  5544  001608  5173               	movf	___fladd@bexp& (0+255),w,b
  5545  00160A  A4D8               	btfss	status,2,c
  5546  00160C  EF0A  F00B         	goto	u5271
  5547  001610  EF0C  F00B         	goto	u5270
  5548  001614                     u5271:
  5549  001614  EF16  F00B         	goto	l5086
  5550  001618                     u5270:
  5551  001618                     
  5552                           ; BSR set to: 0
  5553  001618  0E00               	movlw	0
  5554  00161A  6E53               	movwf	?___fladd^0,c
  5555  00161C  0E00               	movlw	0
  5556  00161E  6E54               	movwf	(?___fladd+1)^0,c
  5557  001620  0E00               	movlw	0
  5558  001622  6E55               	movwf	(?___fladd+2)^0,c
  5559  001624  0E00               	movlw	0
  5560  001626  6E56               	movwf	(?___fladd+3)^0,c
  5561  001628  EF65  F00C         	goto	l1312
  5562  00162C                     l5086:
  5563                           
  5564                           ; BSR set to: 0
  5565  00162C  5057               	movf	___fladd@a^0,w,c
  5566  00162E  2653               	addwf	___fladd@b^0,f,c
  5567  001630  5058               	movf	(___fladd@a+1)^0,w,c
  5568  001632  2254               	addwfc	(___fladd@b+1)^0,f,c
  5569  001634  5059               	movf	(___fladd@a+2)^0,w,c
  5570  001636  2255               	addwfc	(___fladd@b+2)^0,f,c
  5571  001638  505A               	movf	(___fladd@a+3)^0,w,c
  5572  00163A  2256               	addwfc	(___fladd@b+3)^0,f,c
  5573  00163C                     
  5574                           ; BSR set to: 0
  5575  00163C  A056               	btfss	(___fladd@b+3)^0,0,c
  5576  00163E  EF23  F00B         	goto	u5281
  5577  001642  EF25  F00B         	goto	u5280
  5578  001646                     u5281:
  5579  001646  EFD1  F00B         	goto	l5140
  5580  00164A                     u5280:
  5581  00164A                     
  5582                           ; BSR set to: 0
  5583  00164A  A174               	btfss	___fladd@grs& (0+255),0,b
  5584  00164C  EF2A  F00B         	goto	u5291
  5585  001650  EF2C  F00B         	goto	u5290
  5586  001654                     u5291:
  5587  001654  EF32  F00B         	goto	l5094
  5588  001658                     u5290:
  5589  001658                     
  5590                           ; BSR set to: 0
  5591  001658  90D8               	bcf	status,0,c
  5592  00165A  3174               	rrcf	___fladd@grs& (0+255),w,b
  5593  00165C  0901               	iorlw	1
  5594  00165E  6F74               	movwf	___fladd@grs& (0+255),b
  5595  001660  EF34  F00B         	goto	l5096
  5596  001664                     l5094:
  5597                           
  5598                           ; BSR set to: 0
  5599  001664  90D8               	bcf	status,0,c
  5600  001666  3374               	rrcf	___fladd@grs& (0+255),f,b
  5601  001668                     l5096:
  5602                           
  5603                           ; BSR set to: 0
  5604  001668  A053               	btfss	___fladd@b^0,0,c
  5605  00166A  EF39  F00B         	goto	u5301
  5606  00166E  EF3B  F00B         	goto	u5300
  5607  001672                     u5301:
  5608  001672  EF3C  F00B         	goto	l5100
  5609  001676                     u5300:
  5610  001676                     
  5611                           ; BSR set to: 0
  5612  001676  8F74               	bsf	___fladd@grs& (0+255),7,b
  5613  001678                     l5100:
  5614                           
  5615                           ; BSR set to: 0
  5616  001678  3456               	rlcf	(___fladd@b+3)^0,w,c
  5617  00167A  3256               	rrcf	(___fladd@b+3)^0,f,c
  5618  00167C  3255               	rrcf	(___fladd@b+2)^0,f,c
  5619  00167E  3254               	rrcf	(___fladd@b+1)^0,f,c
  5620  001680  3253               	rrcf	___fladd@b^0,f,c
  5621  001682                     
  5622                           ; BSR set to: 0
  5623  001682  2B73               	incf	___fladd@bexp& (0+255),f,b
  5624  001684  EFD1  F00B         	goto	l5140
  5625  001688                     l5104:
  5626                           
  5627                           ; BSR set to: 0
  5628  001688  5057               	movf	___fladd@a^0,w,c
  5629  00168A  5C53               	subwf	___fladd@b^0,w,c
  5630  00168C  5058               	movf	(___fladd@a+1)^0,w,c
  5631  00168E  5854               	subwfb	(___fladd@b+1)^0,w,c
  5632  001690  5059               	movf	(___fladd@a+2)^0,w,c
  5633  001692  5855               	subwfb	(___fladd@b+2)^0,w,c
  5634  001694  5056               	movf	(___fladd@b+3)^0,w,c
  5635  001696  0A80               	xorlw	128
  5636  001698  6F6D               	movwf	??___fladd& (0+255),b
  5637  00169A  505A               	movf	(___fladd@a+3)^0,w,c
  5638  00169C  0A80               	xorlw	128
  5639  00169E  596D               	subwfb	??___fladd& (0+255),w,b
  5640  0016A0  B0D8               	btfsc	status,0,c
  5641  0016A2  EF55  F00B         	goto	u5311
  5642  0016A6  EF57  F00B         	goto	u5310
  5643  0016AA                     u5311:
  5644  0016AA  EF82  F00B         	goto	l5114
  5645  0016AE                     u5310:
  5646  0016AE                     
  5647                           ; BSR set to: 0
  5648  0016AE  5053               	movf	___fladd@b^0,w,c
  5649  0016B0  5C57               	subwf	___fladd@a^0,w,c
  5650  0016B2  6F6D               	movwf	??___fladd& (0+255),b
  5651  0016B4  5054               	movf	(___fladd@b+1)^0,w,c
  5652  0016B6  5858               	subwfb	(___fladd@a+1)^0,w,c
  5653  0016B8  6F6E               	movwf	(??___fladd+1)& (0+255),b
  5654  0016BA  5055               	movf	(___fladd@b+2)^0,w,c
  5655  0016BC  5859               	subwfb	(___fladd@a+2)^0,w,c
  5656  0016BE  6F6F               	movwf	(??___fladd+2)& (0+255),b
  5657  0016C0  5056               	movf	(___fladd@b+3)^0,w,c
  5658  0016C2  585A               	subwfb	(___fladd@a+3)^0,w,c
  5659  0016C4  6F70               	movwf	(??___fladd+3)& (0+255),b
  5660  0016C6  0EFF               	movlw	255
  5661  0016C8  256D               	addwf	??___fladd& (0+255),w,b
  5662  0016CA  6E53               	movwf	___fladd@b^0,c
  5663  0016CC  0EFF               	movlw	255
  5664  0016CE  216E               	addwfc	(??___fladd+1)& (0+255),w,b
  5665  0016D0  6E54               	movwf	(___fladd@b+1)^0,c
  5666  0016D2  0EFF               	movlw	255
  5667  0016D4  216F               	addwfc	(??___fladd+2)& (0+255),w,b
  5668  0016D6  6E55               	movwf	(___fladd@b+2)^0,c
  5669  0016D8  0EFF               	movlw	255
  5670  0016DA  2170               	addwfc	(??___fladd+3)& (0+255),w,b
  5671  0016DC  6E56               	movwf	(___fladd@b+3)^0,c
  5672  0016DE  0E80               	movlw	128
  5673  0016E0  1B71               	xorwf	___fladd@signs& (0+255),f,b
  5674  0016E2                     
  5675                           ; BSR set to: 0
  5676  0016E2  6D74               	negf	___fladd@grs& (0+255),b
  5677  0016E4                     
  5678                           ; BSR set to: 0
  5679  0016E4  5174               	movf	___fladd@grs& (0+255),w,b
  5680  0016E6  A4D8               	btfss	status,2,c
  5681  0016E8  EF78  F00B         	goto	u5321
  5682  0016EC  EF7A  F00B         	goto	u5320
  5683  0016F0                     u5321:
  5684  0016F0  EF8A  F00B         	goto	l1320
  5685  0016F4                     u5320:
  5686  0016F4                     
  5687                           ; BSR set to: 0
  5688  0016F4  0E01               	movlw	1
  5689  0016F6  2653               	addwf	___fladd@b^0,f,c
  5690  0016F8  0E00               	movlw	0
  5691  0016FA  2254               	addwfc	(___fladd@b+1)^0,f,c
  5692  0016FC  2255               	addwfc	(___fladd@b+2)^0,f,c
  5693  0016FE  2256               	addwfc	(___fladd@b+3)^0,f,c
  5694  001700  EF8A  F00B         	goto	l1320
  5695  001704                     l5114:
  5696                           
  5697                           ; BSR set to: 0
  5698  001704  5057               	movf	___fladd@a^0,w,c
  5699  001706  5E53               	subwf	___fladd@b^0,f,c
  5700  001708  5058               	movf	(___fladd@a+1)^0,w,c
  5701  00170A  5A54               	subwfb	(___fladd@b+1)^0,f,c
  5702  00170C  5059               	movf	(___fladd@a+2)^0,w,c
  5703  00170E  5A55               	subwfb	(___fladd@b+2)^0,f,c
  5704  001710  505A               	movf	(___fladd@a+3)^0,w,c
  5705  001712  5A56               	subwfb	(___fladd@b+3)^0,f,c
  5706  001714                     l1320:
  5707                           
  5708                           ; BSR set to: 0
  5709  001714  5053               	movf	___fladd@b^0,w,c
  5710  001716  1054               	iorwf	(___fladd@b+1)^0,w,c
  5711  001718  1055               	iorwf	(___fladd@b+2)^0,w,c
  5712  00171A  1056               	iorwf	(___fladd@b+3)^0,w,c
  5713  00171C  A4D8               	btfss	status,2,c
  5714  00171E  EF93  F00B         	goto	u5331
  5715  001722  EF95  F00B         	goto	u5330
  5716  001726                     u5331:
  5717  001726  EFCA  F00B         	goto	l5138
  5718  00172A                     u5330:
  5719  00172A                     
  5720                           ; BSR set to: 0
  5721  00172A  5174               	movf	___fladd@grs& (0+255),w,b
  5722  00172C  A4D8               	btfss	status,2,c
  5723  00172E  EF9B  F00B         	goto	u5341
  5724  001732  EF9D  F00B         	goto	u5340
  5725  001736                     u5341:
  5726  001736  EFCA  F00B         	goto	l5138
  5727  00173A                     u5340:
  5728  00173A                     
  5729                           ; BSR set to: 0
  5730  00173A  0E00               	movlw	0
  5731  00173C  6E53               	movwf	?___fladd^0,c
  5732  00173E  0E00               	movlw	0
  5733  001740  6E54               	movwf	(?___fladd+1)^0,c
  5734  001742  0E00               	movlw	0
  5735  001744  6E55               	movwf	(?___fladd+2)^0,c
  5736  001746  0E00               	movlw	0
  5737  001748  6E56               	movwf	(?___fladd+3)^0,c
  5738  00174A  EF65  F00C         	goto	l1312
  5739  00174E                     l5122:
  5740                           
  5741                           ; BSR set to: 0
  5742  00174E  90D8               	bcf	status,0,c
  5743  001750  3653               	rlcf	___fladd@b^0,f,c
  5744  001752  3654               	rlcf	(___fladd@b+1)^0,f,c
  5745  001754  3655               	rlcf	(___fladd@b+2)^0,f,c
  5746  001756  3656               	rlcf	(___fladd@b+3)^0,f,c
  5747  001758                     
  5748                           ; BSR set to: 0
  5749  001758  AF74               	btfss	___fladd@grs& (0+255),7,b
  5750  00175A  EFB1  F00B         	goto	u5351
  5751  00175E  EFB3  F00B         	goto	u5350
  5752  001762                     u5351:
  5753  001762  EFB4  F00B         	goto	l5128
  5754  001766                     u5350:
  5755  001766                     
  5756                           ; BSR set to: 0
  5757  001766  8053               	bsf	___fladd@b^0,0,c
  5758  001768                     l5128:
  5759                           
  5760                           ; BSR set to: 0
  5761  001768  A174               	btfss	___fladd@grs& (0+255),0,b
  5762  00176A  EFB9  F00B         	goto	u5361
  5763  00176E  EFBB  F00B         	goto	u5360
  5764  001772                     u5361:
  5765  001772  EFBF  F00B         	goto	l5132
  5766  001776                     u5360:
  5767  001776                     
  5768                           ; BSR set to: 0
  5769  001776  80D8               	bsf	status,0,c
  5770  001778  3774               	rlcf	___fladd@grs& (0+255),f,b
  5771  00177A  EFC1  F00B         	goto	l5134
  5772  00177E                     l5132:
  5773                           
  5774                           ; BSR set to: 0
  5775  00177E  90D8               	bcf	status,0,c
  5776  001780  3774               	rlcf	___fladd@grs& (0+255),f,b
  5777  001782                     l5134:
  5778                           
  5779                           ; BSR set to: 0
  5780  001782  5173               	movf	___fladd@bexp& (0+255),w,b
  5781  001784  B4D8               	btfsc	status,2,c
  5782  001786  EFC7  F00B         	goto	u5371
  5783  00178A  EFC9  F00B         	goto	u5370
  5784  00178E                     u5371:
  5785  00178E  EFCA  F00B         	goto	l5138
  5786  001792                     u5370:
  5787  001792                     
  5788                           ; BSR set to: 0
  5789  001792  0773               	decf	___fladd@bexp& (0+255),f,b
  5790  001794                     l5138:
  5791                           
  5792                           ; BSR set to: 0
  5793  001794  AE55               	btfss	(___fladd@b+2)^0,7,c
  5794  001796  EFCF  F00B         	goto	u5381
  5795  00179A  EFD1  F00B         	goto	u5380
  5796  00179E                     u5381:
  5797  00179E  EFA7  F00B         	goto	l5122
  5798  0017A2                     u5380:
  5799  0017A2                     l5140:
  5800                           
  5801                           ; BSR set to: 0
  5802  0017A2  0E00               	movlw	0
  5803  0017A4  6F72               	movwf	___fladd@aexp& (0+255),b
  5804  0017A6                     
  5805                           ; BSR set to: 0
  5806  0017A6  AF74               	btfss	___fladd@grs& (0+255),7,b
  5807  0017A8  EFD8  F00B         	goto	u5391
  5808  0017AC  EFDA  F00B         	goto	u5390
  5809  0017B0                     u5391:
  5810  0017B0  EFF2  F00B         	goto	l1329
  5811  0017B4                     u5390:
  5812  0017B4                     
  5813                           ; BSR set to: 0
  5814  0017B4  C074  F06D         	movff	___fladd@grs,??___fladd
  5815  0017B8  0E7F               	movlw	127
  5816  0017BA  176D               	andwf	??___fladd& (0+255),f,b
  5817  0017BC  B4D8               	btfsc	status,2,c
  5818  0017BE  EFE3  F00B         	goto	u5401
  5819  0017C2  EFE5  F00B         	goto	u5400
  5820  0017C6                     u5401:
  5821  0017C6  EFE9  F00B         	goto	l1330
  5822  0017CA                     u5400:
  5823  0017CA                     l5146:
  5824                           
  5825                           ; BSR set to: 0
  5826  0017CA  0E01               	movlw	1
  5827  0017CC  6F72               	movwf	___fladd@aexp& (0+255),b
  5828  0017CE  EFF2  F00B         	goto	l1329
  5829  0017D2                     l1330:
  5830                           
  5831                           ; BSR set to: 0
  5832  0017D2  A053               	btfss	___fladd@b^0,0,c
  5833  0017D4  EFEE  F00B         	goto	u5411
  5834  0017D8  EFF0  F00B         	goto	u5410
  5835  0017DC                     u5411:
  5836  0017DC  EFF2  F00B         	goto	l1329
  5837  0017E0                     u5410:
  5838  0017E0  EFE5  F00B         	goto	l5146
  5839  0017E4                     l1329:
  5840                           
  5841                           ; BSR set to: 0
  5842  0017E4  5172               	movf	___fladd@aexp& (0+255),w,b
  5843  0017E6  B4D8               	btfsc	status,2,c
  5844  0017E8  EFF8  F00B         	goto	u5421
  5845  0017EC  EFFA  F00B         	goto	u5420
  5846  0017F0                     u5421:
  5847  0017F0  EF25  F00C         	goto	l5158
  5848  0017F4                     u5420:
  5849  0017F4                     
  5850                           ; BSR set to: 0
  5851  0017F4  0E01               	movlw	1
  5852  0017F6  2653               	addwf	___fladd@b^0,f,c
  5853  0017F8  0E00               	movlw	0
  5854  0017FA  2254               	addwfc	(___fladd@b+1)^0,f,c
  5855  0017FC  2255               	addwfc	(___fladd@b+2)^0,f,c
  5856  0017FE  2256               	addwfc	(___fladd@b+3)^0,f,c
  5857  001800                     
  5858                           ; BSR set to: 0
  5859  001800  A056               	btfss	(___fladd@b+3)^0,0,c
  5860  001802  EF05  F00C         	goto	u5431
  5861  001806  EF07  F00C         	goto	u5430
  5862  00180A                     u5431:
  5863  00180A  EF25  F00C         	goto	l5158
  5864  00180E                     u5430:
  5865  00180E                     
  5866                           ; BSR set to: 0
  5867  00180E  C053  F06D         	movff	___fladd@b,??___fladd
  5868  001812  C054  F06E         	movff	___fladd@b+1,??___fladd+1
  5869  001816  C055  F06F         	movff	___fladd@b+2,??___fladd+2
  5870  00181A  C056  F070         	movff	___fladd@b+3,??___fladd+3
  5871  00181E  3570               	rlcf	(??___fladd+3)& (0+255),w,b
  5872  001820  3370               	rrcf	(??___fladd+3)& (0+255),f,b
  5873  001822  336F               	rrcf	(??___fladd+2)& (0+255),f,b
  5874  001824  336E               	rrcf	(??___fladd+1)& (0+255),f,b
  5875  001826  336D               	rrcf	??___fladd& (0+255),f,b
  5876  001828  C06D  F053         	movff	??___fladd,___fladd@b
  5877  00182C  C06E  F054         	movff	??___fladd+1,___fladd@b+1
  5878  001830  C06F  F055         	movff	??___fladd+2,___fladd@b+2
  5879  001834  C070  F056         	movff	??___fladd+3,___fladd@b+3
  5880  001838  2973               	incf	___fladd@bexp& (0+255),w,b
  5881  00183A  B4D8               	btfsc	status,2,c
  5882  00183C  EF22  F00C         	goto	u5441
  5883  001840  EF24  F00C         	goto	u5440
  5884  001844                     u5441:
  5885  001844  EF25  F00C         	goto	l5158
  5886  001848                     u5440:
  5887  001848                     
  5888                           ; BSR set to: 0
  5889  001848  2B73               	incf	___fladd@bexp& (0+255),f,b
  5890  00184A                     l5158:
  5891                           
  5892                           ; BSR set to: 0
  5893  00184A  2973               	incf	___fladd@bexp& (0+255),w,b
  5894  00184C  B4D8               	btfsc	status,2,c
  5895  00184E  EF2B  F00C         	goto	u5451
  5896  001852  EF2D  F00C         	goto	u5450
  5897  001856                     u5451:
  5898  001856  EF35  F00C         	goto	l5162
  5899  00185A                     u5450:
  5900  00185A                     
  5901                           ; BSR set to: 0
  5902  00185A  5173               	movf	___fladd@bexp& (0+255),w,b
  5903  00185C  A4D8               	btfss	status,2,c
  5904  00185E  EF33  F00C         	goto	u5461
  5905  001862  EF35  F00C         	goto	u5460
  5906  001866                     u5461:
  5907  001866  EF47  F00C         	goto	l5166
  5908  00186A                     u5460:
  5909  00186A                     l5162:
  5910                           
  5911                           ; BSR set to: 0
  5912  00186A  0E00               	movlw	0
  5913  00186C  6E53               	movwf	___fladd@b^0,c
  5914  00186E  0E00               	movlw	0
  5915  001870  6E54               	movwf	(___fladd@b+1)^0,c
  5916  001872  0E00               	movlw	0
  5917  001874  6E55               	movwf	(___fladd@b+2)^0,c
  5918  001876  0E00               	movlw	0
  5919  001878  6E56               	movwf	(___fladd@b+3)^0,c
  5920  00187A  5173               	movf	___fladd@bexp& (0+255),w,b
  5921  00187C  A4D8               	btfss	status,2,c
  5922  00187E  EF43  F00C         	goto	u5471
  5923  001882  EF45  F00C         	goto	u5470
  5924  001886                     u5471:
  5925  001886  EF47  F00C         	goto	l5166
  5926  00188A                     u5470:
  5927  00188A                     
  5928                           ; BSR set to: 0
  5929  00188A  0E00               	movlw	0
  5930  00188C  6F71               	movwf	___fladd@signs& (0+255),b
  5931  00188E                     l5166:
  5932                           
  5933                           ; BSR set to: 0
  5934  00188E  A173               	btfss	___fladd@bexp& (0+255),0,b
  5935  001890  EF4C  F00C         	goto	u5481
  5936  001894  EF4E  F00C         	goto	u5480
  5937  001898                     u5481:
  5938  001898  EF51  F00C         	goto	l5170
  5939  00189C                     u5480:
  5940  00189C                     
  5941                           ; BSR set to: 0
  5942  00189C  8E55               	bsf	(___fladd@b+2)^0,7,c
  5943  00189E  EF52  F00C         	goto	l5172
  5944  0018A2                     l5170:
  5945                           
  5946                           ; BSR set to: 0
  5947  0018A2  9E55               	bcf	(___fladd@b+2)^0,7,c
  5948  0018A4                     l5172:
  5949                           
  5950                           ; BSR set to: 0
  5951  0018A4  90D8               	bcf	status,0,c
  5952  0018A6  3173               	rrcf	___fladd@bexp& (0+255),w,b
  5953  0018A8  6E56               	movwf	(___fladd@b+3)^0,c
  5954  0018AA                     
  5955                           ; BSR set to: 0
  5956  0018AA  AF71               	btfss	___fladd@signs& (0+255),7,b
  5957  0018AC  EF5A  F00C         	goto	u5491
  5958  0018B0  EF5C  F00C         	goto	u5490
  5959  0018B4                     u5491:
  5960  0018B4  EF5D  F00C         	goto	l5178
  5961  0018B8                     u5490:
  5962  0018B8                     
  5963                           ; BSR set to: 0
  5964  0018B8  8E56               	bsf	(___fladd@b+3)^0,7,c
  5965  0018BA                     l5178:
  5966                           
  5967                           ; BSR set to: 0
  5968  0018BA  C053  F053         	movff	___fladd@b,?___fladd
  5969  0018BE  C054  F054         	movff	___fladd@b+1,?___fladd+1
  5970  0018C2  C055  F055         	movff	___fladd@b+2,?___fladd+2
  5971  0018C6  C056  F056         	movff	___fladd@b+3,?___fladd+3
  5972  0018CA                     l1312:
  5973                           
  5974                           ; BSR set to: 0
  5975  0018CA  0012               	return		;funcret
  5976  0018CC                     __end_of___fladd:
  5977                           	callstack 0
  5978                           
  5979 ;; *************** function ___flmul *****************
  5980 ;; Defined at:
  5981 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  5982 ;; Parameters:    Size  Location     Type
  5983 ;;  b               4   70[COMRAM] unsigned char 
  5984 ;;  a               4   74[COMRAM] unsigned char 
  5985 ;; Auto vars:     Size  Location     Type
  5986 ;;  prod            4    7[BANK0 ] struct .
  5987 ;;  grs             4    2[BANK0 ] unsigned long 
  5988 ;;  temp            2   11[BANK0 ] struct .
  5989 ;;  bexp            1    6[BANK0 ] unsigned char 
  5990 ;;  aexp            1    1[BANK0 ] unsigned char 
  5991 ;;  sign            1    0[BANK0 ] unsigned char 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  4   70[COMRAM] unsigned char 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2, status,0, prodl, prodh
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6001 ;;      Params:         8       0       0       0       0       0       0       0       0
  6002 ;;      Locals:         0      13       0       0       0       0       0       0       0
  6003 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6004 ;;      Totals:        12      13       0       0       0       0       0       0       0
  6005 ;;Total ram usage:       25 bytes
  6006 ;; Hardware stack levels used:    1
  6007 ;; Hardware stack levels required when called:    3
  6008 ;; This function calls:
  6009 ;;		Nothing
  6010 ;; This function is called by:
  6011 ;;		_ComputeWaterVol
  6012 ;;		_InitTankVariables
  6013 ;;		_pow
  6014 ;;		_exp
  6015 ;;		_eval_poly
  6016 ;;		_log
  6017 ;; This function uses a non-reentrant model
  6018 ;;
  6019                           
  6020                           	psect	text27
  6021  0018CC                     __ptext27:
  6022                           	callstack 0
  6023  0018CC                     ___flmul:
  6024                           	callstack 23
  6025  0018CC  504A               	movf	(___flmul@b+3)^0,w,c
  6026  0018CE  0B80               	andlw	128
  6027  0018D0  0100               	movlb	0	; () banked
  6028  0018D2  6F60               	movwf	___flmul@sign& (0+255),b
  6029  0018D4  504A               	movf	(___flmul@b+3)^0,w,c
  6030  0018D6  244A               	addwf	(___flmul@b+3)^0,w,c
  6031  0018D8  6F66               	movwf	___flmul@bexp& (0+255),b
  6032  0018DA                     
  6033                           ; BSR set to: 0
  6034  0018DA  AE49               	btfss	(___flmul@b+2)^0,7,c
  6035  0018DC  EF72  F00C         	goto	u5501
  6036  0018E0  EF74  F00C         	goto	u5500
  6037  0018E4                     u5501:
  6038  0018E4  EF75  F00C         	goto	l5188
  6039  0018E8                     u5500:
  6040  0018E8                     
  6041                           ; BSR set to: 0
  6042  0018E8  8166               	bsf	___flmul@bexp& (0+255),0,b
  6043  0018EA                     l5188:
  6044                           
  6045                           ; BSR set to: 0
  6046  0018EA  5166               	movf	___flmul@bexp& (0+255),w,b
  6047  0018EC  B4D8               	btfsc	status,2,c
  6048  0018EE  EF7B  F00C         	goto	u5511
  6049  0018F2  EF7D  F00C         	goto	u5510
  6050  0018F6                     u5511:
  6051  0018F6  EF90  F00C         	goto	l5196
  6052  0018FA                     u5510:
  6053  0018FA                     
  6054                           ; BSR set to: 0
  6055  0018FA  2966               	incf	___flmul@bexp& (0+255),w,b
  6056  0018FC  A4D8               	btfss	status,2,c
  6057  0018FE  EF83  F00C         	goto	u5521
  6058  001902  EF85  F00C         	goto	u5520
  6059  001906                     u5521:
  6060  001906  EF8D  F00C         	goto	l5194
  6061  00190A                     u5520:
  6062  00190A                     
  6063                           ; BSR set to: 0
  6064  00190A  0E00               	movlw	0
  6065  00190C  6E47               	movwf	___flmul@b^0,c
  6066  00190E  0E00               	movlw	0
  6067  001910  6E48               	movwf	(___flmul@b+1)^0,c
  6068  001912  0E00               	movlw	0
  6069  001914  6E49               	movwf	(___flmul@b+2)^0,c
  6070  001916  0E00               	movlw	0
  6071  001918  6E4A               	movwf	(___flmul@b+3)^0,c
  6072  00191A                     l5194:
  6073                           
  6074                           ; BSR set to: 0
  6075  00191A  8E49               	bsf	(___flmul@b+2)^0,7,c
  6076  00191C  EF98  F00C         	goto	l5198
  6077  001920                     l5196:
  6078                           
  6079                           ; BSR set to: 0
  6080  001920  0E00               	movlw	0
  6081  001922  6E47               	movwf	___flmul@b^0,c
  6082  001924  0E00               	movlw	0
  6083  001926  6E48               	movwf	(___flmul@b+1)^0,c
  6084  001928  0E00               	movlw	0
  6085  00192A  6E49               	movwf	(___flmul@b+2)^0,c
  6086  00192C  0E00               	movlw	0
  6087  00192E  6E4A               	movwf	(___flmul@b+3)^0,c
  6088  001930                     l5198:
  6089                           
  6090                           ; BSR set to: 0
  6091  001930  504E               	movf	(___flmul@a+3)^0,w,c
  6092  001932  0B80               	andlw	128
  6093  001934  1B60               	xorwf	___flmul@sign& (0+255),f,b
  6094  001936                     
  6095                           ; BSR set to: 0
  6096  001936  504E               	movf	(___flmul@a+3)^0,w,c
  6097  001938  244E               	addwf	(___flmul@a+3)^0,w,c
  6098  00193A  6F61               	movwf	___flmul@aexp& (0+255),b
  6099  00193C                     
  6100                           ; BSR set to: 0
  6101  00193C  AE4D               	btfss	(___flmul@a+2)^0,7,c
  6102  00193E  EFA3  F00C         	goto	u5531
  6103  001942  EFA5  F00C         	goto	u5530
  6104  001946                     u5531:
  6105  001946  EFA6  F00C         	goto	l5206
  6106  00194A                     u5530:
  6107  00194A                     
  6108                           ; BSR set to: 0
  6109  00194A  8161               	bsf	___flmul@aexp& (0+255),0,b
  6110  00194C                     l5206:
  6111                           
  6112                           ; BSR set to: 0
  6113  00194C  5161               	movf	___flmul@aexp& (0+255),w,b
  6114  00194E  B4D8               	btfsc	status,2,c
  6115  001950  EFAC  F00C         	goto	u5541
  6116  001954  EFAE  F00C         	goto	u5540
  6117  001958                     u5541:
  6118  001958  EFC1  F00C         	goto	l5214
  6119  00195C                     u5540:
  6120  00195C                     
  6121                           ; BSR set to: 0
  6122  00195C  2961               	incf	___flmul@aexp& (0+255),w,b
  6123  00195E  A4D8               	btfss	status,2,c
  6124  001960  EFB4  F00C         	goto	u5551
  6125  001964  EFB6  F00C         	goto	u5550
  6126  001968                     u5551:
  6127  001968  EFBE  F00C         	goto	l5212
  6128  00196C                     u5550:
  6129  00196C                     
  6130                           ; BSR set to: 0
  6131  00196C  0E00               	movlw	0
  6132  00196E  6E4B               	movwf	___flmul@a^0,c
  6133  001970  0E00               	movlw	0
  6134  001972  6E4C               	movwf	(___flmul@a+1)^0,c
  6135  001974  0E00               	movlw	0
  6136  001976  6E4D               	movwf	(___flmul@a+2)^0,c
  6137  001978  0E00               	movlw	0
  6138  00197A  6E4E               	movwf	(___flmul@a+3)^0,c
  6139  00197C                     l5212:
  6140                           
  6141                           ; BSR set to: 0
  6142  00197C  8E4D               	bsf	(___flmul@a+2)^0,7,c
  6143  00197E  EFC9  F00C         	goto	l1389
  6144  001982                     l5214:
  6145                           
  6146                           ; BSR set to: 0
  6147  001982  0E00               	movlw	0
  6148  001984  6E4B               	movwf	___flmul@a^0,c
  6149  001986  0E00               	movlw	0
  6150  001988  6E4C               	movwf	(___flmul@a+1)^0,c
  6151  00198A  0E00               	movlw	0
  6152  00198C  6E4D               	movwf	(___flmul@a+2)^0,c
  6153  00198E  0E00               	movlw	0
  6154  001990  6E4E               	movwf	(___flmul@a+3)^0,c
  6155  001992                     l1389:
  6156                           
  6157                           ; BSR set to: 0
  6158  001992  5161               	movf	___flmul@aexp& (0+255),w,b
  6159  001994  B4D8               	btfsc	status,2,c
  6160  001996  EFCF  F00C         	goto	u5561
  6161  00199A  EFD1  F00C         	goto	u5560
  6162  00199E                     u5561:
  6163  00199E  EFD9  F00C         	goto	l5218
  6164  0019A2                     u5560:
  6165  0019A2                     
  6166                           ; BSR set to: 0
  6167  0019A2  5166               	movf	___flmul@bexp& (0+255),w,b
  6168  0019A4  A4D8               	btfss	status,2,c
  6169  0019A6  EFD7  F00C         	goto	u5571
  6170  0019AA  EFD9  F00C         	goto	u5570
  6171  0019AE                     u5571:
  6172  0019AE  EFE3  F00C         	goto	l5222
  6173  0019B2                     u5570:
  6174  0019B2                     l5218:
  6175                           
  6176                           ; BSR set to: 0
  6177  0019B2  0E00               	movlw	0
  6178  0019B4  6E47               	movwf	?___flmul^0,c
  6179  0019B6  0E00               	movlw	0
  6180  0019B8  6E48               	movwf	(?___flmul+1)^0,c
  6181  0019BA  0E00               	movlw	0
  6182  0019BC  6E49               	movwf	(?___flmul+2)^0,c
  6183  0019BE  0E00               	movlw	0
  6184  0019C0  6E4A               	movwf	(?___flmul+3)^0,c
  6185  0019C2  EF7B  F00E         	goto	l1393
  6186  0019C6                     l5222:
  6187                           
  6188                           ; BSR set to: 0
  6189  0019C6  504D               	movf	(___flmul@a+2)^0,w,c
  6190  0019C8  0247               	mulwf	___flmul@b^0,c
  6191  0019CA  CFF3 F06B          	movff	prodl,___flmul@temp
  6192  0019CE  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6193  0019D2                     
  6194                           ; BSR set to: 0
  6195  0019D2  516B               	movf	___flmul@temp& (0+255),w,b
  6196  0019D4  6F62               	movwf	___flmul@grs& (0+255),b
  6197  0019D6  6B63               	clrf	(___flmul@grs+1)& (0+255),b
  6198  0019D8  6B64               	clrf	(___flmul@grs+2)& (0+255),b
  6199  0019DA  6B65               	clrf	(___flmul@grs+3)& (0+255),b
  6200  0019DC                     
  6201                           ; BSR set to: 0
  6202  0019DC  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6203  0019DE  6F67               	movwf	___flmul@prod& (0+255),b
  6204  0019E0  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  6205  0019E2  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  6206  0019E4  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  6207  0019E6  504C               	movf	(___flmul@a+1)^0,w,c
  6208  0019E8  0248               	mulwf	(___flmul@b+1)^0,c
  6209  0019EA  CFF3 F06B          	movff	prodl,___flmul@temp
  6210  0019EE  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6211  0019F2                     
  6212                           ; BSR set to: 0
  6213  0019F2  516B               	movf	___flmul@temp& (0+255),w,b
  6214  0019F4  2762               	addwf	___flmul@grs& (0+255),f,b
  6215  0019F6  0E00               	movlw	0
  6216  0019F8  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6217  0019FA  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6218  0019FC  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6219  0019FE                     
  6220                           ; BSR set to: 0
  6221  0019FE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6222  001A00  2767               	addwf	___flmul@prod& (0+255),f,b
  6223  001A02  0E00               	movlw	0
  6224  001A04  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6225  001A06  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6226  001A08  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6227  001A0A  504B               	movf	___flmul@a^0,w,c
  6228  001A0C  0249               	mulwf	(___flmul@b+2)^0,c
  6229  001A0E  CFF3 F06B          	movff	prodl,___flmul@temp
  6230  001A12  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6231  001A16                     
  6232                           ; BSR set to: 0
  6233  001A16  516B               	movf	___flmul@temp& (0+255),w,b
  6234  001A18  2762               	addwf	___flmul@grs& (0+255),f,b
  6235  001A1A  0E00               	movlw	0
  6236  001A1C  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6237  001A1E  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6238  001A20  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6239  001A22                     
  6240                           ; BSR set to: 0
  6241  001A22  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6242  001A24  2767               	addwf	___flmul@prod& (0+255),f,b
  6243  001A26  0E00               	movlw	0
  6244  001A28  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6245  001A2A  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6246  001A2C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6247  001A2E                     
  6248                           ; BSR set to: 0
  6249  001A2E  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  6250  001A32  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  6251  001A36  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  6252  001A3A  6B62               	clrf	___flmul@grs& (0+255),b
  6253  001A3C                     
  6254                           ; BSR set to: 0
  6255  001A3C  504B               	movf	___flmul@a^0,w,c
  6256  001A3E  0248               	mulwf	(___flmul@b+1)^0,c
  6257  001A40  CFF3 F06B          	movff	prodl,___flmul@temp
  6258  001A44  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6259  001A48                     
  6260                           ; BSR set to: 0
  6261  001A48  516B               	movf	___flmul@temp& (0+255),w,b
  6262  001A4A  2762               	addwf	___flmul@grs& (0+255),f,b
  6263  001A4C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6264  001A4E  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6265  001A50  0E00               	movlw	0
  6266  001A52  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6267  001A54  0E00               	movlw	0
  6268  001A56  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6269  001A58                     
  6270                           ; BSR set to: 0
  6271  001A58  504C               	movf	(___flmul@a+1)^0,w,c
  6272  001A5A  0247               	mulwf	___flmul@b^0,c
  6273  001A5C  CFF3 F06B          	movff	prodl,___flmul@temp
  6274  001A60  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6275  001A64                     
  6276                           ; BSR set to: 0
  6277  001A64  516B               	movf	___flmul@temp& (0+255),w,b
  6278  001A66  2762               	addwf	___flmul@grs& (0+255),f,b
  6279  001A68  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6280  001A6A  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6281  001A6C  0E00               	movlw	0
  6282  001A6E  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6283  001A70  0E00               	movlw	0
  6284  001A72  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6285  001A74                     
  6286                           ; BSR set to: 0
  6287  001A74  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  6288  001A78  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  6289  001A7C  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  6290  001A80  6B62               	clrf	___flmul@grs& (0+255),b
  6291  001A82  504B               	movf	___flmul@a^0,w,c
  6292  001A84  0247               	mulwf	___flmul@b^0,c
  6293  001A86  CFF3 F06B          	movff	prodl,___flmul@temp
  6294  001A8A  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6295  001A8E                     
  6296                           ; BSR set to: 0
  6297  001A8E  516B               	movf	___flmul@temp& (0+255),w,b
  6298  001A90  2762               	addwf	___flmul@grs& (0+255),f,b
  6299  001A92  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6300  001A94  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6301  001A96  0E00               	movlw	0
  6302  001A98  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6303  001A9A  0E00               	movlw	0
  6304  001A9C  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6305  001A9E                     
  6306                           ; BSR set to: 0
  6307  001A9E  504D               	movf	(___flmul@a+2)^0,w,c
  6308  001AA0  0248               	mulwf	(___flmul@b+1)^0,c
  6309  001AA2  CFF3 F06B          	movff	prodl,___flmul@temp
  6310  001AA6  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6311  001AAA  516B               	movf	___flmul@temp& (0+255),w,b
  6312  001AAC  2767               	addwf	___flmul@prod& (0+255),f,b
  6313  001AAE  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6314  001AB0  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6315  001AB2  0E00               	movlw	0
  6316  001AB4  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6317  001AB6  0E00               	movlw	0
  6318  001AB8  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6319  001ABA                     
  6320                           ; BSR set to: 0
  6321  001ABA  504C               	movf	(___flmul@a+1)^0,w,c
  6322  001ABC  0249               	mulwf	(___flmul@b+2)^0,c
  6323  001ABE  CFF3 F06B          	movff	prodl,___flmul@temp
  6324  001AC2  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6325  001AC6                     
  6326                           ; BSR set to: 0
  6327  001AC6  516B               	movf	___flmul@temp& (0+255),w,b
  6328  001AC8  2767               	addwf	___flmul@prod& (0+255),f,b
  6329  001ACA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6330  001ACC  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6331  001ACE  0E00               	movlw	0
  6332  001AD0  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6333  001AD2  0E00               	movlw	0
  6334  001AD4  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6335  001AD6  504D               	movf	(___flmul@a+2)^0,w,c
  6336  001AD8  0249               	mulwf	(___flmul@b+2)^0,c
  6337  001ADA  CFF3 F06B          	movff	prodl,___flmul@temp
  6338  001ADE  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6339  001AE2                     
  6340                           ; BSR set to: 0
  6341  001AE2  516B               	movf	___flmul@temp& (0+255),w,b
  6342  001AE4  6E4F               	movwf	??___flmul^0,c
  6343  001AE6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6344  001AE8  6E50               	movwf	(??___flmul+1)^0,c
  6345  001AEA  6A51               	clrf	(??___flmul+2)^0,c
  6346  001AEC  6A52               	clrf	(??___flmul+3)^0,c
  6347  001AEE  C051  F052         	movff	??___flmul+2,??___flmul+3
  6348  001AF2  C050  F051         	movff	??___flmul+1,??___flmul+2
  6349  001AF6  C04F  F050         	movff	??___flmul,??___flmul+1
  6350  001AFA  6A4F               	clrf	??___flmul^0,c
  6351  001AFC  504F               	movf	??___flmul^0,w,c
  6352  001AFE  2767               	addwf	___flmul@prod& (0+255),f,b
  6353  001B00  5050               	movf	(??___flmul+1)^0,w,c
  6354  001B02  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6355  001B04  5051               	movf	(??___flmul+2)^0,w,c
  6356  001B06  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6357  001B08  5052               	movf	(??___flmul+3)^0,w,c
  6358  001B0A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6359  001B0C                     
  6360                           ; BSR set to: 0
  6361  001B0C  C062  F04F         	movff	___flmul@grs,??___flmul
  6362  001B10  C063  F050         	movff	___flmul@grs+1,??___flmul+1
  6363  001B14  C064  F051         	movff	___flmul@grs+2,??___flmul+2
  6364  001B18  C065  F052         	movff	___flmul@grs+3,??___flmul+3
  6365  001B1C  0E19               	movlw	25
  6366  001B1E  EF96  F00D         	goto	u5580
  6367  001B22                     u5585:
  6368  001B22  90D8               	bcf	status,0,c
  6369  001B24  3252               	rrcf	(??___flmul+3)^0,f,c
  6370  001B26  3251               	rrcf	(??___flmul+2)^0,f,c
  6371  001B28  3250               	rrcf	(??___flmul+1)^0,f,c
  6372  001B2A  324F               	rrcf	??___flmul^0,f,c
  6373  001B2C                     u5580:
  6374  001B2C  2EE8               	decfsz	wreg,f,c
  6375  001B2E  EF91  F00D         	goto	u5585
  6376  001B32  504F               	movf	??___flmul^0,w,c
  6377  001B34  2767               	addwf	___flmul@prod& (0+255),f,b
  6378  001B36  5050               	movf	(??___flmul+1)^0,w,c
  6379  001B38  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6380  001B3A  5051               	movf	(??___flmul+2)^0,w,c
  6381  001B3C  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6382  001B3E  5052               	movf	(??___flmul+3)^0,w,c
  6383  001B40  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6384  001B42                     
  6385                           ; BSR set to: 0
  6386  001B42  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  6387  001B46  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  6388  001B4A  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  6389  001B4E  6B62               	clrf	___flmul@grs& (0+255),b
  6390  001B50                     
  6391                           ; BSR set to: 0
  6392  001B50  5161               	movf	___flmul@aexp& (0+255),w,b
  6393  001B52  C066  F04F         	movff	___flmul@bexp,??___flmul
  6394  001B56  6A50               	clrf	(??___flmul+1)^0,c
  6395  001B58  264F               	addwf	??___flmul^0,f,c
  6396  001B5A  0E00               	movlw	0
  6397  001B5C  2250               	addwfc	(??___flmul+1)^0,f,c
  6398  001B5E  0E82               	movlw	130
  6399  001B60  244F               	addwf	??___flmul^0,w,c
  6400  001B62  6F6B               	movwf	___flmul@temp& (0+255),b
  6401  001B64  0EFF               	movlw	255
  6402  001B66  2050               	addwfc	(??___flmul+1)^0,w,c
  6403  001B68  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  6404  001B6A  EFCC  F00D         	goto	l5270
  6405  001B6E                     l5264:
  6406                           
  6407                           ; BSR set to: 0
  6408  001B6E  90D8               	bcf	status,0,c
  6409  001B70  3767               	rlcf	___flmul@prod& (0+255),f,b
  6410  001B72  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6411  001B74  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6412  001B76  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6413  001B78                     
  6414                           ; BSR set to: 0
  6415  001B78  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  6416  001B7A  EFC1  F00D         	goto	u5591
  6417  001B7E  EFC3  F00D         	goto	u5590
  6418  001B82                     u5591:
  6419  001B82  EFC4  F00D         	goto	l1396
  6420  001B86                     u5590:
  6421  001B86                     
  6422                           ; BSR set to: 0
  6423  001B86  8167               	bsf	___flmul@prod& (0+255),0,b
  6424  001B88                     l1396:
  6425                           
  6426                           ; BSR set to: 0
  6427  001B88  90D8               	bcf	status,0,c
  6428  001B8A  3762               	rlcf	___flmul@grs& (0+255),f,b
  6429  001B8C  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6430  001B8E  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6431  001B90  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6432  001B92  076B               	decf	___flmul@temp& (0+255),f,b
  6433  001B94  A0D8               	btfss	status,0,c
  6434  001B96  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  6435  001B98                     l5270:
  6436                           
  6437                           ; BSR set to: 0
  6438  001B98  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  6439  001B9A  EFD1  F00D         	goto	u5601
  6440  001B9E  EFD3  F00D         	goto	u5600
  6441  001BA2                     u5601:
  6442  001BA2  EFB7  F00D         	goto	l5264
  6443  001BA6                     u5600:
  6444  001BA6                     
  6445                           ; BSR set to: 0
  6446  001BA6  0E00               	movlw	0
  6447  001BA8  6F61               	movwf	___flmul@aexp& (0+255),b
  6448  001BAA                     
  6449                           ; BSR set to: 0
  6450  001BAA  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  6451  001BAC  EFDA  F00D         	goto	u5611
  6452  001BB0  EFDC  F00D         	goto	u5610
  6453  001BB4                     u5611:
  6454  001BB4  EF00  F00E         	goto	l1398
  6455  001BB8                     u5610:
  6456  001BB8                     
  6457                           ; BSR set to: 0
  6458  001BB8  0EFF               	movlw	255
  6459  001BBA  1562               	andwf	___flmul@grs& (0+255),w,b
  6460  001BBC  6E4F               	movwf	??___flmul^0,c
  6461  001BBE  0EFF               	movlw	255
  6462  001BC0  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
  6463  001BC2  6E50               	movwf	(??___flmul+1)^0,c
  6464  001BC4  0EFF               	movlw	255
  6465  001BC6  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
  6466  001BC8  6E51               	movwf	(??___flmul+2)^0,c
  6467  001BCA  0E7F               	movlw	127
  6468  001BCC  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
  6469  001BCE  6E52               	movwf	(??___flmul+3)^0,c
  6470  001BD0  504F               	movf	??___flmul^0,w,c
  6471  001BD2  1050               	iorwf	(??___flmul+1)^0,w,c
  6472  001BD4  1051               	iorwf	(??___flmul+2)^0,w,c
  6473  001BD6  1052               	iorwf	(??___flmul+3)^0,w,c
  6474  001BD8  B4D8               	btfsc	status,2,c
  6475  001BDA  EFF1  F00D         	goto	u5621
  6476  001BDE  EFF3  F00D         	goto	u5620
  6477  001BE2                     u5621:
  6478  001BE2  EFF7  F00D         	goto	l1399
  6479  001BE6                     u5620:
  6480  001BE6                     l5278:
  6481                           
  6482                           ; BSR set to: 0
  6483  001BE6  0E01               	movlw	1
  6484  001BE8  6F61               	movwf	___flmul@aexp& (0+255),b
  6485  001BEA  EF00  F00E         	goto	l1398
  6486  001BEE                     l1399:
  6487                           
  6488                           ; BSR set to: 0
  6489  001BEE  A167               	btfss	___flmul@prod& (0+255),0,b
  6490  001BF0  EFFC  F00D         	goto	u5631
  6491  001BF4  EFFE  F00D         	goto	u5630
  6492  001BF8                     u5631:
  6493  001BF8  EF00  F00E         	goto	l1398
  6494  001BFC                     u5630:
  6495  001BFC  EFF3  F00D         	goto	l5278
  6496  001C00                     l1398:
  6497                           
  6498                           ; BSR set to: 0
  6499  001C00  5161               	movf	___flmul@aexp& (0+255),w,b
  6500  001C02  B4D8               	btfsc	status,2,c
  6501  001C04  EF06  F00E         	goto	u5641
  6502  001C08  EF08  F00E         	goto	u5640
  6503  001C0C                     u5641:
  6504  001C0C  EF2C  F00E         	goto	l5290
  6505  001C10                     u5640:
  6506  001C10                     
  6507                           ; BSR set to: 0
  6508  001C10  0E01               	movlw	1
  6509  001C12  2767               	addwf	___flmul@prod& (0+255),f,b
  6510  001C14  0E00               	movlw	0
  6511  001C16  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6512  001C18  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6513  001C1A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6514  001C1C                     
  6515                           ; BSR set to: 0
  6516  001C1C  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  6517  001C1E  EF13  F00E         	goto	u5651
  6518  001C22  EF15  F00E         	goto	u5650
  6519  001C26                     u5651:
  6520  001C26  EF2C  F00E         	goto	l5290
  6521  001C2A                     u5650:
  6522  001C2A                     
  6523                           ; BSR set to: 0
  6524  001C2A  C067  F04F         	movff	___flmul@prod,??___flmul
  6525  001C2E  C068  F050         	movff	___flmul@prod+1,??___flmul+1
  6526  001C32  C069  F051         	movff	___flmul@prod+2,??___flmul+2
  6527  001C36  C06A  F052         	movff	___flmul@prod+3,??___flmul+3
  6528  001C3A  3452               	rlcf	(??___flmul+3)^0,w,c
  6529  001C3C  3252               	rrcf	(??___flmul+3)^0,f,c
  6530  001C3E  3251               	rrcf	(??___flmul+2)^0,f,c
  6531  001C40  3250               	rrcf	(??___flmul+1)^0,f,c
  6532  001C42  324F               	rrcf	??___flmul^0,f,c
  6533  001C44  C04F  F067         	movff	??___flmul,___flmul@prod
  6534  001C48  C050  F068         	movff	??___flmul+1,___flmul@prod+1
  6535  001C4C  C051  F069         	movff	??___flmul+2,___flmul@prod+2
  6536  001C50  C052  F06A         	movff	??___flmul+3,___flmul@prod+3
  6537  001C54                     
  6538                           ; BSR set to: 0
  6539  001C54  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  6540  001C56  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  6541  001C58                     l5290:
  6542                           
  6543                           ; BSR set to: 0
  6544  001C58  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6545  001C5A  EF37  F00E         	goto	u5661
  6546  001C5E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6547  001C60  E108               	bnz	u5660
  6548  001C62  296B               	incf	___flmul@temp& (0+255),w,b
  6549  001C64  A0D8               	btfss	status,0,c
  6550  001C66  EF37  F00E         	goto	u5661
  6551  001C6A  EF39  F00E         	goto	u5660
  6552  001C6E                     u5661:
  6553  001C6E  EF43  F00E         	goto	l5294
  6554  001C72                     u5660:
  6555  001C72                     
  6556                           ; BSR set to: 0
  6557  001C72  0E00               	movlw	0
  6558  001C74  6F67               	movwf	___flmul@prod& (0+255),b
  6559  001C76  0E00               	movlw	0
  6560  001C78  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  6561  001C7A  0E80               	movlw	128
  6562  001C7C  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  6563  001C7E  0E7F               	movlw	127
  6564  001C80  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  6565  001C82  EF71  F00E         	goto	l5306
  6566  001C86                     l5294:
  6567                           
  6568                           ; BSR set to: 0
  6569  001C86  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6570  001C88  EF50  F00E         	goto	u5670
  6571  001C8C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6572  001C8E  E106               	bnz	u5671
  6573  001C90  056B               	decf	___flmul@temp& (0+255),w,b
  6574  001C92  B0D8               	btfsc	status,0,c
  6575  001C94  EF4E  F00E         	goto	u5671
  6576  001C98  EF50  F00E         	goto	u5670
  6577  001C9C                     u5671:
  6578  001C9C  EF5C  F00E         	goto	l1406
  6579  001CA0                     u5670:
  6580  001CA0                     
  6581                           ; BSR set to: 0
  6582  001CA0  0E00               	movlw	0
  6583  001CA2  6F67               	movwf	___flmul@prod& (0+255),b
  6584  001CA4  0E00               	movlw	0
  6585  001CA6  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  6586  001CA8  0E00               	movlw	0
  6587  001CAA  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  6588  001CAC  0E00               	movlw	0
  6589  001CAE  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  6590  001CB0  0E00               	movlw	0
  6591  001CB2  6F60               	movwf	___flmul@sign& (0+255),b
  6592  001CB4  EF71  F00E         	goto	l5306
  6593  001CB8                     l1406:
  6594                           
  6595                           ; BSR set to: 0
  6596  001CB8  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  6597  001CBC                     
  6598                           ; BSR set to: 0
  6599  001CBC  0EFF               	movlw	255
  6600  001CBE  1767               	andwf	___flmul@prod& (0+255),f,b
  6601  001CC0  0EFF               	movlw	255
  6602  001CC2  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  6603  001CC4  0E7F               	movlw	127
  6604  001CC6  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  6605  001CC8  0E00               	movlw	0
  6606  001CCA  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  6607  001CCC                     
  6608                           ; BSR set to: 0
  6609  001CCC  A166               	btfss	___flmul@bexp& (0+255),0,b
  6610  001CCE  EF6B  F00E         	goto	u5681
  6611  001CD2  EF6D  F00E         	goto	u5680
  6612  001CD6                     u5681:
  6613  001CD6  EF6E  F00E         	goto	l5304
  6614  001CDA                     u5680:
  6615  001CDA                     
  6616                           ; BSR set to: 0
  6617  001CDA  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  6618  001CDC                     l5304:
  6619                           
  6620                           ; BSR set to: 0
  6621  001CDC  90D8               	bcf	status,0,c
  6622  001CDE  3166               	rrcf	___flmul@bexp& (0+255),w,b
  6623  001CE0  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  6624  001CE2                     l5306:
  6625                           
  6626                           ; BSR set to: 0
  6627  001CE2  5160               	movf	___flmul@sign& (0+255),w,b
  6628  001CE4  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6629  001CE6                     
  6630                           ; BSR set to: 0
  6631  001CE6  C067  F047         	movff	___flmul@prod,?___flmul
  6632  001CEA  C068  F048         	movff	___flmul@prod+1,?___flmul+1
  6633  001CEE  C069  F049         	movff	___flmul@prod+2,?___flmul+2
  6634  001CF2  C06A  F04A         	movff	___flmul@prod+3,?___flmul+3
  6635  001CF6                     l1393:
  6636                           
  6637                           ; BSR set to: 0
  6638  001CF6  0012               	return		;funcret
  6639  001CF8                     __end_of___flmul:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function ___fldiv *****************
  6643 ;; Defined at:
  6644 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  b               4    1[COMRAM] unsigned char 
  6647 ;;  a               4    5[COMRAM] unsigned char 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  grs             4   20[COMRAM] unsigned long 
  6650 ;;  rem             4   13[COMRAM] unsigned long 
  6651 ;;  new_exp         2   18[COMRAM] int 
  6652 ;;  aexp            1   25[COMRAM] unsigned char 
  6653 ;;  bexp            1   24[COMRAM] unsigned char 
  6654 ;;  sign            1   17[COMRAM] unsigned char 
  6655 ;; Return value:  Size  Location     Type
  6656 ;;                  4    1[COMRAM] unsigned char 
  6657 ;; Registers used:
  6658 ;;		wreg, status,2, status,0
  6659 ;; Tracked objects:
  6660 ;;		On entry : 0/0
  6661 ;;		On exit  : 0/0
  6662 ;;		Unchanged: 0/0
  6663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6664 ;;      Params:         8       0       0       0       0       0       0       0       0
  6665 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6666 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6667 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6668 ;;Total ram usage:       25 bytes
  6669 ;; Hardware stack levels used:    1
  6670 ;; Hardware stack levels required when called:    3
  6671 ;; This function calls:
  6672 ;;		Nothing
  6673 ;; This function is called by:
  6674 ;;		_ComputeWaterVol
  6675 ;;		_exp
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text28
  6680  001CF8                     __ptext28:
  6681                           	callstack 0
  6682  001CF8                     ___fldiv:
  6683                           	callstack 24
  6684  001CF8  5005               	movf	(___fldiv@b+3)^0,w,c
  6685  001CFA  0B80               	andlw	128
  6686  001CFC  6E12               	movwf	___fldiv@sign^0,c
  6687  001CFE  5005               	movf	(___fldiv@b+3)^0,w,c
  6688  001D00  2405               	addwf	(___fldiv@b+3)^0,w,c
  6689  001D02  6E19               	movwf	___fldiv@bexp^0,c
  6690  001D04  AE04               	btfss	(___fldiv@b+2)^0,7,c
  6691  001D06  EF87  F00E         	goto	u5931
  6692  001D0A  EF89  F00E         	goto	u5930
  6693  001D0E                     u5931:
  6694  001D0E  EF8A  F00E         	goto	l5450
  6695  001D12                     u5930:
  6696  001D12  8019               	bsf	___fldiv@bexp^0,0,c
  6697  001D14                     l5450:
  6698  001D14  5019               	movf	___fldiv@bexp^0,w,c
  6699  001D16  B4D8               	btfsc	status,2,c
  6700  001D18  EF90  F00E         	goto	u5941
  6701  001D1C  EF92  F00E         	goto	u5940
  6702  001D20                     u5941:
  6703  001D20  EFA7  F00E         	goto	l5460
  6704  001D24                     u5940:
  6705  001D24  2819               	incf	___fldiv@bexp^0,w,c
  6706  001D26  A4D8               	btfss	status,2,c
  6707  001D28  EF98  F00E         	goto	u5951
  6708  001D2C  EF9A  F00E         	goto	u5950
  6709  001D30                     u5951:
  6710  001D30  EFA2  F00E         	goto	l5456
  6711  001D34                     u5950:
  6712  001D34  0E00               	movlw	0
  6713  001D36  6E02               	movwf	___fldiv@b^0,c
  6714  001D38  0E00               	movlw	0
  6715  001D3A  6E03               	movwf	(___fldiv@b+1)^0,c
  6716  001D3C  0E00               	movlw	0
  6717  001D3E  6E04               	movwf	(___fldiv@b+2)^0,c
  6718  001D40  0E00               	movlw	0
  6719  001D42  6E05               	movwf	(___fldiv@b+3)^0,c
  6720  001D44                     l5456:
  6721  001D44  8E04               	bsf	(___fldiv@b+2)^0,7,c
  6722  001D46  0E00               	movlw	0
  6723  001D48  6E05               	movwf	(___fldiv@b+3)^0,c
  6724  001D4A  EFAF  F00E         	goto	l5462
  6725  001D4E                     l5460:
  6726  001D4E  0E00               	movlw	0
  6727  001D50  6E02               	movwf	___fldiv@b^0,c
  6728  001D52  0E00               	movlw	0
  6729  001D54  6E03               	movwf	(___fldiv@b+1)^0,c
  6730  001D56  0E00               	movlw	0
  6731  001D58  6E04               	movwf	(___fldiv@b+2)^0,c
  6732  001D5A  0E00               	movlw	0
  6733  001D5C  6E05               	movwf	(___fldiv@b+3)^0,c
  6734  001D5E                     l5462:
  6735  001D5E  5009               	movf	(___fldiv@a+3)^0,w,c
  6736  001D60  0B80               	andlw	128
  6737  001D62  1A12               	xorwf	___fldiv@sign^0,f,c
  6738  001D64  5009               	movf	(___fldiv@a+3)^0,w,c
  6739  001D66  2409               	addwf	(___fldiv@a+3)^0,w,c
  6740  001D68  6E1A               	movwf	___fldiv@aexp^0,c
  6741  001D6A  AE08               	btfss	(___fldiv@a+2)^0,7,c
  6742  001D6C  EFBA  F00E         	goto	u5961
  6743  001D70  EFBC  F00E         	goto	u5960
  6744  001D74                     u5961:
  6745  001D74  EFBD  F00E         	goto	l5470
  6746  001D78                     u5960:
  6747  001D78  801A               	bsf	___fldiv@aexp^0,0,c
  6748  001D7A                     l5470:
  6749  001D7A  501A               	movf	___fldiv@aexp^0,w,c
  6750  001D7C  B4D8               	btfsc	status,2,c
  6751  001D7E  EFC3  F00E         	goto	u5971
  6752  001D82  EFC5  F00E         	goto	u5970
  6753  001D86                     u5971:
  6754  001D86  EFDA  F00E         	goto	l5480
  6755  001D8A                     u5970:
  6756  001D8A  281A               	incf	___fldiv@aexp^0,w,c
  6757  001D8C  A4D8               	btfss	status,2,c
  6758  001D8E  EFCB  F00E         	goto	u5981
  6759  001D92  EFCD  F00E         	goto	u5980
  6760  001D96                     u5981:
  6761  001D96  EFD5  F00E         	goto	l5476
  6762  001D9A                     u5980:
  6763  001D9A  0E00               	movlw	0
  6764  001D9C  6E06               	movwf	___fldiv@a^0,c
  6765  001D9E  0E00               	movlw	0
  6766  001DA0  6E07               	movwf	(___fldiv@a+1)^0,c
  6767  001DA2  0E00               	movlw	0
  6768  001DA4  6E08               	movwf	(___fldiv@a+2)^0,c
  6769  001DA6  0E00               	movlw	0
  6770  001DA8  6E09               	movwf	(___fldiv@a+3)^0,c
  6771  001DAA                     l5476:
  6772  001DAA  8E08               	bsf	(___fldiv@a+2)^0,7,c
  6773  001DAC  0E00               	movlw	0
  6774  001DAE  6E09               	movwf	(___fldiv@a+3)^0,c
  6775  001DB0  EFE2  F00E         	goto	l5482
  6776  001DB4                     l5480:
  6777  001DB4  0E00               	movlw	0
  6778  001DB6  6E06               	movwf	___fldiv@a^0,c
  6779  001DB8  0E00               	movlw	0
  6780  001DBA  6E07               	movwf	(___fldiv@a+1)^0,c
  6781  001DBC  0E00               	movlw	0
  6782  001DBE  6E08               	movwf	(___fldiv@a+2)^0,c
  6783  001DC0  0E00               	movlw	0
  6784  001DC2  6E09               	movwf	(___fldiv@a+3)^0,c
  6785  001DC4                     l5482:
  6786  001DC4  5006               	movf	___fldiv@a^0,w,c
  6787  001DC6  1007               	iorwf	(___fldiv@a+1)^0,w,c
  6788  001DC8  1008               	iorwf	(___fldiv@a+2)^0,w,c
  6789  001DCA  1009               	iorwf	(___fldiv@a+3)^0,w,c
  6790  001DCC  A4D8               	btfss	status,2,c
  6791  001DCE  EFEB  F00E         	goto	u5991
  6792  001DD2  EFED  F00E         	goto	u5990
  6793  001DD6                     u5991:
  6794  001DD6  EF05  F00F         	goto	l5494
  6795  001DDA                     u5990:
  6796  001DDA  0E00               	movlw	0
  6797  001DDC  6E02               	movwf	___fldiv@b^0,c
  6798  001DDE  0E00               	movlw	0
  6799  001DE0  6E03               	movwf	(___fldiv@b+1)^0,c
  6800  001DE2  0E00               	movlw	0
  6801  001DE4  6E04               	movwf	(___fldiv@b+2)^0,c
  6802  001DE6  0E00               	movlw	0
  6803  001DE8  6E05               	movwf	(___fldiv@b+3)^0,c
  6804  001DEA  0E80               	movlw	128
  6805  001DEC  1204               	iorwf	(___fldiv@b+2)^0,f,c
  6806  001DEE  0E7F               	movlw	127
  6807  001DF0  1205               	iorwf	(___fldiv@b+3)^0,f,c
  6808  001DF2                     l5488:
  6809  001DF2  5012               	movf	___fldiv@sign^0,w,c
  6810  001DF4  1205               	iorwf	(___fldiv@b+3)^0,f,c
  6811  001DF6  C002  F002         	movff	___fldiv@b,?___fldiv
  6812  001DFA  C003  F003         	movff	___fldiv@b+1,?___fldiv+1
  6813  001DFE  C004  F004         	movff	___fldiv@b+2,?___fldiv+2
  6814  001E02  C005  F005         	movff	___fldiv@b+3,?___fldiv+3
  6815  001E06  EF48  F010         	goto	l1357
  6816  001E0A                     l5494:
  6817  001E0A  5019               	movf	___fldiv@bexp^0,w,c
  6818  001E0C  A4D8               	btfss	status,2,c
  6819  001E0E  EF0B  F00F         	goto	u6001
  6820  001E12  EF0D  F00F         	goto	u6000
  6821  001E16                     u6001:
  6822  001E16  EF17  F00F         	goto	l5502
  6823  001E1A                     u6000:
  6824  001E1A  0E00               	movlw	0
  6825  001E1C  6E02               	movwf	?___fldiv^0,c
  6826  001E1E  0E00               	movlw	0
  6827  001E20  6E03               	movwf	(?___fldiv+1)^0,c
  6828  001E22  0E00               	movlw	0
  6829  001E24  6E04               	movwf	(?___fldiv+2)^0,c
  6830  001E26  0E00               	movlw	0
  6831  001E28  6E05               	movwf	(?___fldiv+3)^0,c
  6832  001E2A  EF48  F010         	goto	l1357
  6833  001E2E                     l5502:
  6834  001E2E  501A               	movf	___fldiv@aexp^0,w,c
  6835  001E30  C019  F00A         	movff	___fldiv@bexp,??___fldiv
  6836  001E34  6A0B               	clrf	(??___fldiv+1)^0,c
  6837  001E36  5E0A               	subwf	??___fldiv^0,f,c
  6838  001E38  0E00               	movlw	0
  6839  001E3A  5A0B               	subwfb	(??___fldiv+1)^0,f,c
  6840  001E3C  0E7F               	movlw	127
  6841  001E3E  240A               	addwf	??___fldiv^0,w,c
  6842  001E40  6E13               	movwf	___fldiv@new_exp^0,c
  6843  001E42  0E00               	movlw	0
  6844  001E44  200B               	addwfc	(??___fldiv+1)^0,w,c
  6845  001E46  6E14               	movwf	(___fldiv@new_exp+1)^0,c
  6846  001E48  C002  F00E         	movff	___fldiv@b,___fldiv@rem
  6847  001E4C  C003  F00F         	movff	___fldiv@b+1,___fldiv@rem+1
  6848  001E50  C004  F010         	movff	___fldiv@b+2,___fldiv@rem+2
  6849  001E54  C005  F011         	movff	___fldiv@b+3,___fldiv@rem+3
  6850  001E58  0E00               	movlw	0
  6851  001E5A  6E02               	movwf	___fldiv@b^0,c
  6852  001E5C  0E00               	movlw	0
  6853  001E5E  6E03               	movwf	(___fldiv@b+1)^0,c
  6854  001E60  0E00               	movlw	0
  6855  001E62  6E04               	movwf	(___fldiv@b+2)^0,c
  6856  001E64  0E00               	movlw	0
  6857  001E66  6E05               	movwf	(___fldiv@b+3)^0,c
  6858  001E68  0E00               	movlw	0
  6859  001E6A  6E15               	movwf	___fldiv@grs^0,c
  6860  001E6C  0E00               	movlw	0
  6861  001E6E  6E16               	movwf	(___fldiv@grs+1)^0,c
  6862  001E70  0E00               	movlw	0
  6863  001E72  6E17               	movwf	(___fldiv@grs+2)^0,c
  6864  001E74  0E00               	movlw	0
  6865  001E76  6E18               	movwf	(___fldiv@grs+3)^0,c
  6866  001E78  0E00               	movlw	0
  6867  001E7A  6E1A               	movwf	___fldiv@aexp^0,c
  6868  001E7C  EF78  F00F         	goto	l1359
  6869  001E80                     l5512:
  6870  001E80  501A               	movf	___fldiv@aexp^0,w,c
  6871  001E82  B4D8               	btfsc	status,2,c
  6872  001E84  EF46  F00F         	goto	u6011
  6873  001E88  EF48  F00F         	goto	u6010
  6874  001E8C                     u6011:
  6875  001E8C  EF5F  F00F         	goto	l5520
  6876  001E90                     u6010:
  6877  001E90  90D8               	bcf	status,0,c
  6878  001E92  360E               	rlcf	___fldiv@rem^0,f,c
  6879  001E94  360F               	rlcf	(___fldiv@rem+1)^0,f,c
  6880  001E96  3610               	rlcf	(___fldiv@rem+2)^0,f,c
  6881  001E98  3611               	rlcf	(___fldiv@rem+3)^0,f,c
  6882  001E9A  90D8               	bcf	status,0,c
  6883  001E9C  3602               	rlcf	___fldiv@b^0,f,c
  6884  001E9E  3603               	rlcf	(___fldiv@b+1)^0,f,c
  6885  001EA0  3604               	rlcf	(___fldiv@b+2)^0,f,c
  6886  001EA2  3605               	rlcf	(___fldiv@b+3)^0,f,c
  6887  001EA4  AE18               	btfss	(___fldiv@grs+3)^0,7,c
  6888  001EA6  EF57  F00F         	goto	u6021
  6889  001EAA  EF59  F00F         	goto	u6020
  6890  001EAE                     u6021:
  6891  001EAE  EF5A  F00F         	goto	l1362
  6892  001EB2                     u6020:
  6893  001EB2  8002               	bsf	___fldiv@b^0,0,c
  6894  001EB4                     l1362:
  6895  001EB4  90D8               	bcf	status,0,c
  6896  001EB6  3615               	rlcf	___fldiv@grs^0,f,c
  6897  001EB8  3616               	rlcf	(___fldiv@grs+1)^0,f,c
  6898  001EBA  3617               	rlcf	(___fldiv@grs+2)^0,f,c
  6899  001EBC  3618               	rlcf	(___fldiv@grs+3)^0,f,c
  6900  001EBE                     l5520:
  6901  001EBE  5006               	movf	___fldiv@a^0,w,c
  6902  001EC0  5C0E               	subwf	___fldiv@rem^0,w,c
  6903  001EC2  5007               	movf	(___fldiv@a+1)^0,w,c
  6904  001EC4  580F               	subwfb	(___fldiv@rem+1)^0,w,c
  6905  001EC6  5008               	movf	(___fldiv@a+2)^0,w,c
  6906  001EC8  5810               	subwfb	(___fldiv@rem+2)^0,w,c
  6907  001ECA  5009               	movf	(___fldiv@a+3)^0,w,c
  6908  001ECC  5811               	subwfb	(___fldiv@rem+3)^0,w,c
  6909  001ECE  A0D8               	btfss	status,0,c
  6910  001ED0  EF6C  F00F         	goto	u6031
  6911  001ED4  EF6E  F00F         	goto	u6030
  6912  001ED8                     u6031:
  6913  001ED8  EF77  F00F         	goto	l5526
  6914  001EDC                     u6030:
  6915  001EDC  8C18               	bsf	(___fldiv@grs+3)^0,6,c
  6916  001EDE  5006               	movf	___fldiv@a^0,w,c
  6917  001EE0  5E0E               	subwf	___fldiv@rem^0,f,c
  6918  001EE2  5007               	movf	(___fldiv@a+1)^0,w,c
  6919  001EE4  5A0F               	subwfb	(___fldiv@rem+1)^0,f,c
  6920  001EE6  5008               	movf	(___fldiv@a+2)^0,w,c
  6921  001EE8  5A10               	subwfb	(___fldiv@rem+2)^0,f,c
  6922  001EEA  5009               	movf	(___fldiv@a+3)^0,w,c
  6923  001EEC  5A11               	subwfb	(___fldiv@rem+3)^0,f,c
  6924  001EEE                     l5526:
  6925  001EEE  2A1A               	incf	___fldiv@aexp^0,f,c
  6926  001EF0                     l1359:
  6927  001EF0  0E19               	movlw	25
  6928  001EF2  641A               	cpfsgt	___fldiv@aexp^0,c
  6929  001EF4  EF7E  F00F         	goto	u6041
  6930  001EF8  EF80  F00F         	goto	u6040
  6931  001EFC                     u6041:
  6932  001EFC  EF40  F00F         	goto	l5512
  6933  001F00                     u6040:
  6934  001F00  500E               	movf	___fldiv@rem^0,w,c
  6935  001F02  100F               	iorwf	(___fldiv@rem+1)^0,w,c
  6936  001F04  1010               	iorwf	(___fldiv@rem+2)^0,w,c
  6937  001F06  1011               	iorwf	(___fldiv@rem+3)^0,w,c
  6938  001F08  B4D8               	btfsc	status,2,c
  6939  001F0A  EF89  F00F         	goto	u6051
  6940  001F0E  EF8B  F00F         	goto	u6050
  6941  001F12                     u6051:
  6942  001F12  EFA3  F00F         	goto	l5538
  6943  001F16                     u6050:
  6944  001F16  8015               	bsf	___fldiv@grs^0,0,c
  6945  001F18  EFA3  F00F         	goto	l5538
  6946  001F1C                     l5532:
  6947  001F1C  90D8               	bcf	status,0,c
  6948  001F1E  3602               	rlcf	___fldiv@b^0,f,c
  6949  001F20  3603               	rlcf	(___fldiv@b+1)^0,f,c
  6950  001F22  3604               	rlcf	(___fldiv@b+2)^0,f,c
  6951  001F24  3605               	rlcf	(___fldiv@b+3)^0,f,c
  6952  001F26  AE18               	btfss	(___fldiv@grs+3)^0,7,c
  6953  001F28  EF98  F00F         	goto	u6061
  6954  001F2C  EF9A  F00F         	goto	u6060
  6955  001F30                     u6061:
  6956  001F30  EF9B  F00F         	goto	l1368
  6957  001F34                     u6060:
  6958  001F34  8002               	bsf	___fldiv@b^0,0,c
  6959  001F36                     l1368:
  6960  001F36  90D8               	bcf	status,0,c
  6961  001F38  3615               	rlcf	___fldiv@grs^0,f,c
  6962  001F3A  3616               	rlcf	(___fldiv@grs+1)^0,f,c
  6963  001F3C  3617               	rlcf	(___fldiv@grs+2)^0,f,c
  6964  001F3E  3618               	rlcf	(___fldiv@grs+3)^0,f,c
  6965  001F40  0613               	decf	___fldiv@new_exp^0,f,c
  6966  001F42  A0D8               	btfss	status,0,c
  6967  001F44  0614               	decf	(___fldiv@new_exp+1)^0,f,c
  6968  001F46                     l5538:
  6969  001F46  AE04               	btfss	(___fldiv@b+2)^0,7,c
  6970  001F48  EFA8  F00F         	goto	u6071
  6971  001F4C  EFAA  F00F         	goto	u6070
  6972  001F50                     u6071:
  6973  001F50  EF8E  F00F         	goto	l5532
  6974  001F54                     u6070:
  6975  001F54  0E00               	movlw	0
  6976  001F56  6E1A               	movwf	___fldiv@aexp^0,c
  6977  001F58  AE18               	btfss	(___fldiv@grs+3)^0,7,c
  6978  001F5A  EFB1  F00F         	goto	u6081
  6979  001F5E  EFB3  F00F         	goto	u6080
  6980  001F62                     u6081:
  6981  001F62  EFD7  F00F         	goto	l1370
  6982  001F66                     u6080:
  6983  001F66  0EFF               	movlw	255
  6984  001F68  1415               	andwf	___fldiv@grs^0,w,c
  6985  001F6A  6E0A               	movwf	??___fldiv^0,c
  6986  001F6C  0EFF               	movlw	255
  6987  001F6E  1416               	andwf	(___fldiv@grs+1)^0,w,c
  6988  001F70  6E0B               	movwf	(??___fldiv+1)^0,c
  6989  001F72  0EFF               	movlw	255
  6990  001F74  1417               	andwf	(___fldiv@grs+2)^0,w,c
  6991  001F76  6E0C               	movwf	(??___fldiv+2)^0,c
  6992  001F78  0E7F               	movlw	127
  6993  001F7A  1418               	andwf	(___fldiv@grs+3)^0,w,c
  6994  001F7C  6E0D               	movwf	(??___fldiv+3)^0,c
  6995  001F7E  500A               	movf	??___fldiv^0,w,c
  6996  001F80  100B               	iorwf	(??___fldiv+1)^0,w,c
  6997  001F82  100C               	iorwf	(??___fldiv+2)^0,w,c
  6998  001F84  100D               	iorwf	(??___fldiv+3)^0,w,c
  6999  001F86  B4D8               	btfsc	status,2,c
  7000  001F88  EFC8  F00F         	goto	u6091
  7001  001F8C  EFCA  F00F         	goto	u6090
  7002  001F90                     u6091:
  7003  001F90  EFCE  F00F         	goto	l1371
  7004  001F94                     u6090:
  7005  001F94                     l5546:
  7006  001F94  0E01               	movlw	1
  7007  001F96  6E1A               	movwf	___fldiv@aexp^0,c
  7008  001F98  EFD7  F00F         	goto	l1370
  7009  001F9C                     l1371:
  7010  001F9C  A002               	btfss	___fldiv@b^0,0,c
  7011  001F9E  EFD3  F00F         	goto	u6101
  7012  001FA2  EFD5  F00F         	goto	u6100
  7013  001FA6                     u6101:
  7014  001FA6  EFD7  F00F         	goto	l1370
  7015  001FAA                     u6100:
  7016  001FAA  EFCA  F00F         	goto	l5546
  7017  001FAE                     l1370:
  7018  001FAE  501A               	movf	___fldiv@aexp^0,w,c
  7019  001FB0  B4D8               	btfsc	status,2,c
  7020  001FB2  EFDD  F00F         	goto	u6111
  7021  001FB6  EFDF  F00F         	goto	u6110
  7022  001FBA                     u6111:
  7023  001FBA  EF03  F010         	goto	l5558
  7024  001FBE                     u6110:
  7025  001FBE  0E01               	movlw	1
  7026  001FC0  2602               	addwf	___fldiv@b^0,f,c
  7027  001FC2  0E00               	movlw	0
  7028  001FC4  2203               	addwfc	(___fldiv@b+1)^0,f,c
  7029  001FC6  2204               	addwfc	(___fldiv@b+2)^0,f,c
  7030  001FC8  2205               	addwfc	(___fldiv@b+3)^0,f,c
  7031  001FCA  A005               	btfss	(___fldiv@b+3)^0,0,c
  7032  001FCC  EFEA  F00F         	goto	u6121
  7033  001FD0  EFEC  F00F         	goto	u6120
  7034  001FD4                     u6121:
  7035  001FD4  EF03  F010         	goto	l5558
  7036  001FD8                     u6120:
  7037  001FD8  C002  F00A         	movff	___fldiv@b,??___fldiv
  7038  001FDC  C003  F00B         	movff	___fldiv@b+1,??___fldiv+1
  7039  001FE0  C004  F00C         	movff	___fldiv@b+2,??___fldiv+2
  7040  001FE4  C005  F00D         	movff	___fldiv@b+3,??___fldiv+3
  7041  001FE8  340D               	rlcf	(??___fldiv+3)^0,w,c
  7042  001FEA  320D               	rrcf	(??___fldiv+3)^0,f,c
  7043  001FEC  320C               	rrcf	(??___fldiv+2)^0,f,c
  7044  001FEE  320B               	rrcf	(??___fldiv+1)^0,f,c
  7045  001FF0  320A               	rrcf	??___fldiv^0,f,c
  7046  001FF2  C00A  F002         	movff	??___fldiv,___fldiv@b
  7047  001FF6  C00B  F003         	movff	??___fldiv+1,___fldiv@b+1
  7048  001FFA  C00C  F004         	movff	??___fldiv+2,___fldiv@b+2
  7049  001FFE  C00D  F005         	movff	??___fldiv+3,___fldiv@b+3
  7050  002002  4A13               	infsnz	___fldiv@new_exp^0,f,c
  7051  002004  2A14               	incf	(___fldiv@new_exp+1)^0,f,c
  7052  002006                     l5558:
  7053  002006  BE14               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7054  002008  EF0E  F010         	goto	u6131
  7055  00200C  5014               	movf	(___fldiv@new_exp+1)^0,w,c
  7056  00200E  E108               	bnz	u6130
  7057  002010  2813               	incf	___fldiv@new_exp^0,w,c
  7058  002012  A0D8               	btfss	status,0,c
  7059  002014  EF0E  F010         	goto	u6131
  7060  002018  EF10  F010         	goto	u6130
  7061  00201C                     u6131:
  7062  00201C  EF1B  F010         	goto	l5562
  7063  002020                     u6130:
  7064  002020  0E00               	movlw	0
  7065  002022  6E14               	movwf	(___fldiv@new_exp+1)^0,c
  7066  002024  6813               	setf	___fldiv@new_exp^0,c
  7067  002026  0E00               	movlw	0
  7068  002028  6E02               	movwf	___fldiv@b^0,c
  7069  00202A  0E00               	movlw	0
  7070  00202C  6E03               	movwf	(___fldiv@b+1)^0,c
  7071  00202E  0E00               	movlw	0
  7072  002030  6E04               	movwf	(___fldiv@b+2)^0,c
  7073  002032  0E00               	movlw	0
  7074  002034  6E05               	movwf	(___fldiv@b+3)^0,c
  7075  002036                     l5562:
  7076  002036  BE14               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7077  002038  EF28  F010         	goto	u6140
  7078  00203C  5014               	movf	(___fldiv@new_exp+1)^0,w,c
  7079  00203E  E106               	bnz	u6141
  7080  002040  0413               	decf	___fldiv@new_exp^0,w,c
  7081  002042  B0D8               	btfsc	status,0,c
  7082  002044  EF26  F010         	goto	u6141
  7083  002048  EF28  F010         	goto	u6140
  7084  00204C                     u6141:
  7085  00204C  EF36  F010         	goto	l5566
  7086  002050                     u6140:
  7087  002050  0E00               	movlw	0
  7088  002052  6E14               	movwf	(___fldiv@new_exp+1)^0,c
  7089  002054  0E00               	movlw	0
  7090  002056  6E13               	movwf	___fldiv@new_exp^0,c
  7091  002058  0E00               	movlw	0
  7092  00205A  6E02               	movwf	___fldiv@b^0,c
  7093  00205C  0E00               	movlw	0
  7094  00205E  6E03               	movwf	(___fldiv@b+1)^0,c
  7095  002060  0E00               	movlw	0
  7096  002062  6E04               	movwf	(___fldiv@b+2)^0,c
  7097  002064  0E00               	movlw	0
  7098  002066  6E05               	movwf	(___fldiv@b+3)^0,c
  7099  002068  0E00               	movlw	0
  7100  00206A  6E12               	movwf	___fldiv@sign^0,c
  7101  00206C                     l5566:
  7102  00206C  C013  F019         	movff	___fldiv@new_exp,___fldiv@bexp
  7103  002070  A019               	btfss	___fldiv@bexp^0,0,c
  7104  002072  EF3D  F010         	goto	u6151
  7105  002076  EF3F  F010         	goto	u6150
  7106  00207A                     u6151:
  7107  00207A  EF42  F010         	goto	l5572
  7108  00207E                     u6150:
  7109  00207E  8E04               	bsf	(___fldiv@b+2)^0,7,c
  7110  002080  EF43  F010         	goto	l5574
  7111  002084                     l5572:
  7112  002084  9E04               	bcf	(___fldiv@b+2)^0,7,c
  7113  002086                     l5574:
  7114  002086  90D8               	bcf	status,0,c
  7115  002088  3019               	rrcf	___fldiv@bexp^0,w,c
  7116  00208A  6E05               	movwf	(___fldiv@b+3)^0,c
  7117  00208C  EFF9  F00E         	goto	l5488
  7118  002090                     l1357:
  7119  002090  0012               	return		;funcret
  7120  002092                     __end_of___fldiv:
  7121                           	callstack 0
  7122                           
  7123 ;; *************** function _ComputeTOD *****************
  7124 ;; Defined at:
  7125 ;;		line 126 in file "main.c"
  7126 ;; Parameters:    Size  Location     Type
  7127 ;;		None
  7128 ;; Auto vars:     Size  Location     Type
  7129 ;;  bIncDays        1   50[COMRAM] unsigned char 
  7130 ;; Return value:  Size  Location     Type
  7131 ;;                  1    wreg      void 
  7132 ;; Registers used:
  7133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7134 ;; Tracked objects:
  7135 ;;		On entry : 0/0
  7136 ;;		On exit  : 0/0
  7137 ;;		Unchanged: 0/0
  7138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7139 ;;      Params:         0       0       0       0       0       0       0       0       0
  7140 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7141 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7142 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7143 ;;Total ram usage:        3 bytes
  7144 ;; Hardware stack levels used:    1
  7145 ;; Hardware stack levels required when called:    5
  7146 ;; This function calls:
  7147 ;;		_LCD_GoTo
  7148 ;;		_LCD_WriteString
  7149 ;;		_sprintf
  7150 ;; This function is called by:
  7151 ;;		_main
  7152 ;; This function uses a non-reentrant model
  7153 ;;
  7154                           
  7155                           	psect	text29
  7156  003078                     __ptext29:
  7157                           	callstack 0
  7158  003078                     _ComputeTOD:
  7159                           	callstack 25
  7160  003078                     
  7161                           ;main.c: 128: bool bIncDays = 0;
  7162  003078  0E00               	movlw	0
  7163  00307A  6E33               	movwf	ComputeTOD@bIncDays^0,c
  7164  00307C                     
  7165                           ;main.c: 130: if (giTotalSecs++ > 999) giTotalSecs = 0;
  7166  00307C  0100               	movlb	0	; () banked
  7167  00307E  51CD               	movf	_giTotalSecs& (0+255),w,b
  7168  003080  6E31               	movwf	??_ComputeTOD^0,c
  7169  003082  51CE               	movf	(_giTotalSecs+1)& (0+255),w,b
  7170  003084  6E32               	movwf	(??_ComputeTOD+1)^0,c
  7171  003086  4BCD               	infsnz	_giTotalSecs& (0+255),f,b
  7172  003088  2BCE               	incf	(_giTotalSecs+1)& (0+255),f,b
  7173  00308A  0EE8               	movlw	232
  7174  00308C  5C31               	subwf	??_ComputeTOD^0,w,c
  7175  00308E  0E03               	movlw	3
  7176  003090  5832               	subwfb	(??_ComputeTOD+1)^0,w,c
  7177  003092  A0D8               	btfss	status,0,c
  7178  003094  EF4E  F018         	goto	u7391
  7179  003098  EF50  F018         	goto	u7390
  7180  00309C                     u7391:
  7181  00309C  EF54  F018         	goto	l6444
  7182  0030A0                     u7390:
  7183  0030A0                     
  7184                           ; BSR set to: 0
  7185  0030A0  0E00               	movlw	0
  7186  0030A2  6FCE               	movwf	(_giTotalSecs+1)& (0+255),b
  7187  0030A4  0E00               	movlw	0
  7188  0030A6  6FCD               	movwf	_giTotalSecs& (0+255),b
  7189  0030A8                     l6444:
  7190                           
  7191                           ; BSR set to: 0
  7192                           ;main.c: 131: if (++giSecs >= 60)
  7193  0030A8  2BD4               	incf	_giSecs& (0+255),f,b
  7194  0030AA  0E3B               	movlw	59
  7195  0030AC  65D4               	cpfsgt	_giSecs& (0+255),b
  7196  0030AE  EF5B  F018         	goto	u7401
  7197  0030B2  EF5D  F018         	goto	u7400
  7198  0030B6                     u7401:
  7199  0030B6  EF77  F018         	goto	l6456
  7200  0030BA                     u7400:
  7201  0030BA                     
  7202                           ; BSR set to: 0
  7203                           ;main.c: 132: {;main.c: 133: giSecs = 0;
  7204  0030BA  0E00               	movlw	0
  7205  0030BC  6FD4               	movwf	_giSecs& (0+255),b
  7206  0030BE                     
  7207                           ; BSR set to: 0
  7208                           ;main.c: 134: if (++giMins >= 60)
  7209  0030BE  2BD3               	incf	_giMins& (0+255),f,b
  7210  0030C0  0E3B               	movlw	59
  7211  0030C2  65D3               	cpfsgt	_giMins& (0+255),b
  7212  0030C4  EF66  F018         	goto	u7411
  7213  0030C8  EF68  F018         	goto	u7410
  7214  0030CC                     u7411:
  7215  0030CC  EF77  F018         	goto	l6456
  7216  0030D0                     u7410:
  7217  0030D0                     
  7218                           ; BSR set to: 0
  7219                           ;main.c: 135: {;main.c: 136: giMins = 0;
  7220  0030D0  0E00               	movlw	0
  7221  0030D2  6FD3               	movwf	_giMins& (0+255),b
  7222  0030D4                     
  7223                           ; BSR set to: 0
  7224                           ;main.c: 137: if (++giHours >= 24){
  7225  0030D4  2BD2               	incf	_giHours& (0+255),f,b
  7226  0030D6  0E17               	movlw	23
  7227  0030D8  65D2               	cpfsgt	_giHours& (0+255),b
  7228  0030DA  EF71  F018         	goto	u7421
  7229  0030DE  EF73  F018         	goto	u7420
  7230  0030E2                     u7421:
  7231  0030E2  EF77  F018         	goto	l6456
  7232  0030E6                     u7420:
  7233  0030E6                     
  7234                           ; BSR set to: 0
  7235                           ;main.c: 138: giHours = 0;
  7236  0030E6  0E00               	movlw	0
  7237  0030E8  6FD2               	movwf	_giHours& (0+255),b
  7238                           
  7239                           ;main.c: 139: bIncDays = 1;
  7240  0030EA  0E01               	movlw	1
  7241  0030EC  6E33               	movwf	ComputeTOD@bIncDays^0,c
  7242  0030EE                     l6456:
  7243                           
  7244                           ; BSR set to: 0
  7245                           ;main.c: 140: };main.c: 141: };main.c: 142: };main.c: 143: sprintf(gsTotalSecs, "%n3");
  7246  0030EE  0EF3               	movlw	low _gsTotalSecs
  7247  0030F0  6E0E               	movwf	sprintf@sp^0,c
  7248  0030F2  0E00               	movlw	high _gsTotalSecs
  7249  0030F4  6E0F               	movwf	(sprintf@sp+1)^0,c
  7250  0030F6  0ECC               	movlw	low STR_6
  7251  0030F8  6E10               	movwf	sprintf@f^0,c
  7252  0030FA  0E08               	movlw	high STR_6
  7253  0030FC  6E11               	movwf	(sprintf@f+1)^0,c
  7254  0030FE  EC6B  F004         	call	_sprintf	;wreg free
  7255  003102                     
  7256                           ;main.c: 144: LCD_GoTo (1, 12);
  7257  003102  0E0C               	movlw	12
  7258  003104  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  7259  003106  0E01               	movlw	1
  7260  003108  ECA9  F01D         	call	_LCD_GoTo
  7261  00310C                     
  7262                           ;main.c: 145: LCD_WriteString (gsTotalSecs);
  7263  00310C  0EF3               	movlw	low _gsTotalSecs
  7264  00310E  6E05               	movwf	LCD_WriteString@iData^0,c
  7265  003110  0E00               	movlw	high _gsTotalSecs
  7266  003112  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  7267  003114  EC97  F01C         	call	_LCD_WriteString	;wreg free
  7268  003118                     
  7269                           ;main.c: 146: sprintf(gsCurrTime, "%n2/%n2/%n2", giHours, giMins, giSecs);
  7270  003118  0EE1               	movlw	low _gsCurrTime
  7271  00311A  6E0E               	movwf	sprintf@sp^0,c
  7272  00311C  0E00               	movlw	high _gsCurrTime
  7273  00311E  6E0F               	movwf	(sprintf@sp+1)^0,c
  7274  003120  0EAF               	movlw	low STR_8
  7275  003122  6E10               	movwf	sprintf@f^0,c
  7276  003124  0E08               	movlw	high STR_8
  7277  003126  6E11               	movwf	(sprintf@f+1)^0,c
  7278  003128  C0D2  F012         	movff	_giHours,?_sprintf+4
  7279  00312C  6A13               	clrf	(?_sprintf+5)^0,c
  7280  00312E  C0D3  F014         	movff	_giMins,?_sprintf+6
  7281  003132  6A15               	clrf	(?_sprintf+7)^0,c
  7282  003134  C0D4  F016         	movff	_giSecs,?_sprintf+8
  7283  003138  6A17               	clrf	(?_sprintf+9)^0,c
  7284  00313A  EC6B  F004         	call	_sprintf	;wreg free
  7285  00313E                     
  7286                           ;main.c: 149: if (bIncDays)
  7287  00313E  5033               	movf	ComputeTOD@bIncDays^0,w,c
  7288  003140  B4D8               	btfsc	status,2,c
  7289  003142  EFA5  F018         	goto	u7431
  7290  003146  EFA7  F018         	goto	u7430
  7291  00314A                     u7431:
  7292  00314A  EFD9  F018         	goto	l347
  7293  00314E                     u7430:
  7294  00314E                     
  7295                           ;main.c: 150: {;main.c: 151: if (++giDay > giMonthEndTbl[giMonth - 1])
  7296  00314E  0100               	movlb	0	; () banked
  7297  003150  2BE0               	incf	_giDay& (0+255),f,b
  7298  003152  0E22               	movlw	low (_giMonthEndTbl+65535)
  7299  003154  245D               	addwf	_giMonth^0,w,c
  7300  003156  6ED9               	movwf	fsr2l,c
  7301  003158  6ADA               	clrf	fsr2h,c
  7302  00315A  0E01               	movlw	high (_giMonthEndTbl+65535)
  7303  00315C  22DA               	addwfc	fsr2h,f,c
  7304  00315E  51E0               	movf	_giDay& (0+255),w,b
  7305  003160  5CDE               	subwf	postinc2,w,c
  7306  003162  B0D8               	btfsc	status,0,c
  7307  003164  EFB6  F018         	goto	u7441
  7308  003168  EFB8  F018         	goto	u7440
  7309  00316C                     u7441:
  7310  00316C  EFC6  F018         	goto	l6476
  7311  003170                     u7440:
  7312  003170                     
  7313                           ; BSR set to: 0
  7314                           ;main.c: 152: {;main.c: 153: giDay = 1;
  7315  003170  0E01               	movlw	1
  7316  003172  6FE0               	movwf	_giDay& (0+255),b
  7317  003174                     
  7318                           ; BSR set to: 0
  7319                           ;main.c: 154: if (++giMonth > 12)
  7320  003174  2A5D               	incf	_giMonth^0,f,c
  7321  003176  0E0C               	movlw	12
  7322  003178  645D               	cpfsgt	_giMonth^0,c
  7323  00317A  EFC1  F018         	goto	u7451
  7324  00317E  EFC3  F018         	goto	u7450
  7325  003182                     u7451:
  7326  003182  EFC6  F018         	goto	l6476
  7327  003186                     u7450:
  7328  003186                     
  7329                           ; BSR set to: 0
  7330                           ;main.c: 155: {;main.c: 156: giMonth = 1;
  7331  003186  0E01               	movlw	1
  7332  003188  6E5D               	movwf	_giMonth^0,c
  7333  00318A                     
  7334                           ; BSR set to: 0
  7335                           ;main.c: 157: giYear ++;
  7336  00318A  2BDF               	incf	_giYear& (0+255),f,b
  7337  00318C                     l6476:
  7338                           
  7339                           ; BSR set to: 0
  7340                           ;main.c: 158: };main.c: 159: };main.c: 160: sprintf (gsCurrDate, "&n2/%n2/%n2", giMonth,
      +                           giDay, giYear);
  7341  00318C  0EEA               	movlw	low _gsCurrDate
  7342  00318E  6E0E               	movwf	sprintf@sp^0,c
  7343  003190  0E00               	movlw	high _gsCurrDate
  7344  003192  6E0F               	movwf	(sprintf@sp+1)^0,c
  7345  003194  0EBB               	movlw	low STR_9
  7346  003196  6E10               	movwf	sprintf@f^0,c
  7347  003198  0E08               	movlw	high STR_9
  7348  00319A  6E11               	movwf	(sprintf@f+1)^0,c
  7349  00319C  C05D  F012         	movff	_giMonth,?_sprintf+4
  7350  0031A0  6A13               	clrf	(?_sprintf+5)^0,c
  7351  0031A2  C0E0  F014         	movff	_giDay,?_sprintf+6
  7352  0031A6  6A15               	clrf	(?_sprintf+7)^0,c
  7353  0031A8  C0DF  F016         	movff	_giYear,?_sprintf+8
  7354  0031AC  6A17               	clrf	(?_sprintf+9)^0,c
  7355  0031AE  EC6B  F004         	call	_sprintf	;wreg free
  7356  0031B2                     l347:
  7357  0031B2  0012               	return		;funcret
  7358  0031B4                     __end_of_ComputeTOD:
  7359                           	callstack 0
  7360                           
  7361 ;; *************** function _sprintf *****************
  7362 ;; Defined at:
  7363 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  sp              2   13[COMRAM] PTR unsigned char 
  7366 ;;		 -> gsCurrDate(9), gsCurrTime(9), gsTotalSecs(4), RAM(2047), 
  7367 ;;  f               2   15[COMRAM] PTR const unsigned char 
  7368 ;;		 -> STR_9(12), STR_8(12), STR_7(4), STR_6(4), 
  7369 ;;		 -> STR_5(4), 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  idx             1   27[COMRAM] unsigned char 
  7372 ;;  tmpval          4    0        struct .
  7373 ;;  flag            2   46[COMRAM] unsigned short 
  7374 ;;  width           2   43[COMRAM] int 
  7375 ;;  val             2   40[COMRAM] unsigned int 
  7376 ;;  ap              2   38[COMRAM] PTR void [1]
  7377 ;;		 -> ?_sprintf(2), 
  7378 ;;  len             2   36[COMRAM] unsigned int 
  7379 ;;  cp              2   28[COMRAM] PTR const unsigned char 
  7380 ;;		 -> sprintf@c(1), 
  7381 ;;  c               1   45[COMRAM] unsigned char 
  7382 ;;  prec            1   42[COMRAM] char 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  2   13[COMRAM] int 
  7385 ;; Registers used:
  7386 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7392 ;;      Params:        10       0       0       0       0       0       0       0       0
  7393 ;;      Locals:        21       0       0       0       0       0       0       0       0
  7394 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7395 ;;      Totals:        35       0       0       0       0       0       0       0       0
  7396 ;;Total ram usage:       35 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:    4
  7399 ;; This function calls:
  7400 ;;		___lwdiv
  7401 ;;		___lwmod
  7402 ;;		___wmul
  7403 ;;		_isdigit
  7404 ;; This function is called by:
  7405 ;;		_ComputeWaterVol
  7406 ;;		_ComputeTOD
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text30
  7411  0008D6                     __ptext30:
  7412                           	callstack 0
  7413  0008D6                     _sprintf:
  7414                           	callstack 25
  7415  0008D6                     
  7416                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 540: union {;doprnt.
      +                          c: 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c
      +                          : 545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;do
      +                          prnt.c: 550: *ap = __va_start();
  7417  0008D6  0E12               	movlw	low (?_sprintf+4)
  7418  0008D8  6E27               	movwf	sprintf@ap^0,c
  7419  0008DA  0E00               	movlw	high (?_sprintf+4)
  7420  0008DC  6E28               	movwf	(sprintf@ap+1)^0,c
  7421                           
  7422                           ;doprnt.c: 553: while((c = *f++)) {
  7423  0008DE  EFED  F009         	goto	l6298
  7424  0008E2                     l5950:
  7425                           
  7426                           ;doprnt.c: 555: if(c != '%')
  7427  0008E2  0E25               	movlw	37
  7428  0008E4  182E               	xorwf	sprintf@c^0,w,c
  7429  0008E6  B4D8               	btfsc	status,2,c
  7430  0008E8  EF78  F004         	goto	u6741
  7431  0008EC  EF7A  F004         	goto	u6740
  7432  0008F0                     u6741:
  7433  0008F0  EF84  F004         	goto	l5956
  7434  0008F4                     u6740:
  7435  0008F4                     
  7436                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  7437  0008F4  C00E  FFD9         	movff	sprintf@sp,fsr2l
  7438  0008F8  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  7439  0008FC  C02E  FFDF         	movff	sprintf@c,indf2
  7440  000900  4A0E               	infsnz	sprintf@sp^0,f,c
  7441  000902  2A0F               	incf	(sprintf@sp+1)^0,f,c
  7442                           
  7443                           ;doprnt.c: 559: continue;
  7444  000904  EFED  F009         	goto	l6298
  7445  000908                     l5956:
  7446                           
  7447                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  7448  000908  0E00               	movlw	0
  7449  00090A  6E2D               	movwf	(sprintf@width+1)^0,c
  7450  00090C  0E00               	movlw	0
  7451  00090E  6E2C               	movwf	sprintf@width^0,c
  7452                           
  7453                           ;doprnt.c: 565: flag = 0;
  7454  000910  0E00               	movlw	0
  7455  000912  6E30               	movwf	(sprintf@flag+1)^0,c
  7456  000914  0E00               	movlw	0
  7457  000916  6E2F               	movwf	sprintf@flag^0,c
  7458  000918  EFA0  F004         	goto	l5968
  7459  00091C                     l5958:
  7460                           
  7461                           ;doprnt.c: 571: flag |= 0x08;
  7462  00091C  862F               	bsf	sprintf@flag^0,3,c
  7463                           
  7464                           ;doprnt.c: 572: f++;
  7465  00091E  4A10               	infsnz	sprintf@f^0,f,c
  7466  000920  2A11               	incf	(sprintf@f+1)^0,f,c
  7467                           
  7468                           ;doprnt.c: 573: continue;
  7469  000922  EFA0  F004         	goto	l5968
  7470  000926                     l5960:
  7471                           
  7472                           ;doprnt.c: 578: flag |= 0x01;
  7473  000926  802F               	bsf	sprintf@flag^0,0,c
  7474                           
  7475                           ;doprnt.c: 579: f++;
  7476  000928  4A10               	infsnz	sprintf@f^0,f,c
  7477  00092A  2A11               	incf	(sprintf@f+1)^0,f,c
  7478                           
  7479                           ;doprnt.c: 580: continue;
  7480  00092C  EFA0  F004         	goto	l5968
  7481  000930                     l5962:
  7482                           
  7483                           ;doprnt.c: 591: flag |= 0x800;
  7484  000930  8630               	bsf	(sprintf@flag+1)^0,3,c
  7485                           
  7486                           ;doprnt.c: 592: f++;
  7487  000932  4A10               	infsnz	sprintf@f^0,f,c
  7488  000934  2A11               	incf	(sprintf@f+1)^0,f,c
  7489                           
  7490                           ;doprnt.c: 593: continue;
  7491  000936  EFA0  F004         	goto	l5968
  7492  00093A                     l5964:
  7493                           
  7494                           ;doprnt.c: 597: flag |= 0x04;
  7495  00093A  842F               	bsf	sprintf@flag^0,2,c
  7496                           
  7497                           ;doprnt.c: 598: f++;
  7498  00093C  4A10               	infsnz	sprintf@f^0,f,c
  7499  00093E  2A11               	incf	(sprintf@f+1)^0,f,c
  7500  000940                     l5968:
  7501  000940  C010  FFF6         	movff	sprintf@f,tblptrl
  7502  000944  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7503  000948                     	if	0	;tblptru may be non-zero
  7504  000948                     	endif
  7505  000948                     	if	0	;tblptru may be non-zero
  7506  000948                     	endif
  7507  000948  0008               	tblrd		*
  7508  00094A  50F5               	movf	tablat,w,c
  7509                           
  7510                           ; Switch size 1, requested type "simple"
  7511                           ; Number of cases is 4, Range of values is 32 to 48
  7512                           ; switch strategies available:
  7513                           ; Name         Instructions Cycles
  7514                           ; simple_byte           13     7 (average)
  7515                           ;	Chosen strategy is simple_byte
  7516  00094C  0A20               	xorlw	32	; case 32
  7517  00094E  B4D8               	btfsc	status,2,c
  7518  000950  EF93  F004         	goto	l5960
  7519  000954  0A03               	xorlw	3	; case 35
  7520  000956  B4D8               	btfsc	status,2,c
  7521  000958  EF98  F004         	goto	l5962
  7522  00095C  0A0E               	xorlw	14	; case 45
  7523  00095E  B4D8               	btfsc	status,2,c
  7524  000960  EF8E  F004         	goto	l5958
  7525  000964  0A1D               	xorlw	29	; case 48
  7526  000966  B4D8               	btfsc	status,2,c
  7527  000968  EF9D  F004         	goto	l5964
  7528  00096C  EFB8  F004         	goto	l664
  7529  000970                     l664:
  7530                           
  7531                           ;doprnt.c: 610: if(flag & 0x08)
  7532  000970  A62F               	btfss	sprintf@flag^0,3,c
  7533  000972  EFBD  F004         	goto	u6751
  7534  000976  EFBF  F004         	goto	u6750
  7535  00097A                     u6751:
  7536  00097A  EFC0  F004         	goto	l5972
  7537  00097E                     u6750:
  7538  00097E                     
  7539                           ;doprnt.c: 611: flag &= ~0x04;
  7540  00097E  942F               	bcf	sprintf@flag^0,2,c
  7541  000980                     l5972:
  7542                           
  7543                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  7544  000980  C010  FFF6         	movff	sprintf@f,tblptrl
  7545  000984  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7546  000988                     	if	0	;tblptru may be non-zero
  7547  000988                     	endif
  7548  000988                     	if	0	;tblptru may be non-zero
  7549  000988                     	endif
  7550  000988  0008               	tblrd		*
  7551  00098A  50F5               	movf	tablat,w,c
  7552  00098C  EC96  F01E         	call	_isdigit
  7553  000990  A0D8               	btfss	status,0,c
  7554  000992  EFCD  F004         	goto	u6761
  7555  000996  EFCF  F004         	goto	u6760
  7556  00099A                     u6761:
  7557  00099A  EF08  F005         	goto	l5984
  7558  00099E                     u6760:
  7559  00099E                     
  7560                           ;doprnt.c: 615: width = 0;
  7561  00099E  0E00               	movlw	0
  7562  0009A0  6E2D               	movwf	(sprintf@width+1)^0,c
  7563  0009A2  0E00               	movlw	0
  7564  0009A4  6E2C               	movwf	sprintf@width^0,c
  7565  0009A6                     l5976:
  7566                           
  7567                           ;doprnt.c: 617: width *= 10;
  7568  0009A6  C02C  F002         	movff	sprintf@width,___wmul@multiplier
  7569  0009AA  C02D  F003         	movff	sprintf@width+1,___wmul@multiplier+1
  7570  0009AE  0E00               	movlw	0
  7571  0009B0  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  7572  0009B2  0E0A               	movlw	10
  7573  0009B4  6E04               	movwf	___wmul@multiplicand^0,c
  7574  0009B6  ECE0  F01E         	call	___wmul	;wreg free
  7575  0009BA  C002  F02C         	movff	?___wmul,sprintf@width
  7576  0009BE  C003  F02D         	movff	?___wmul+1,sprintf@width+1
  7577  0009C2                     
  7578                           ;doprnt.c: 618: width += *f++ - '0';
  7579  0009C2  0ED0               	movlw	208
  7580  0009C4  6E18               	movwf	??_sprintf^0,c
  7581  0009C6  0EFF               	movlw	255
  7582  0009C8  6E19               	movwf	(??_sprintf+1)^0,c
  7583  0009CA  C010  FFF6         	movff	sprintf@f,tblptrl
  7584  0009CE  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7585  0009D2                     	if	0	;tblptru may be non-zero
  7586  0009D2                     	endif
  7587  0009D2                     	if	0	;tblptru may be non-zero
  7588  0009D2                     	endif
  7589  0009D2  0008               	tblrd		*
  7590  0009D4  50F5               	movf	tablat,w,c
  7591  0009D6  6E1A               	movwf	(??_sprintf+2)^0,c
  7592  0009D8  6A1B               	clrf	(??_sprintf+3)^0,c
  7593  0009DA  5018               	movf	??_sprintf^0,w,c
  7594  0009DC  261A               	addwf	(??_sprintf+2)^0,f,c
  7595  0009DE  5019               	movf	(??_sprintf+1)^0,w,c
  7596  0009E0  221B               	addwfc	(??_sprintf+3)^0,f,c
  7597  0009E2  501A               	movf	(??_sprintf+2)^0,w,c
  7598  0009E4  262C               	addwf	sprintf@width^0,f,c
  7599  0009E6  501B               	movf	(??_sprintf+3)^0,w,c
  7600  0009E8  222D               	addwfc	(sprintf@width+1)^0,f,c
  7601  0009EA  4A10               	infsnz	sprintf@f^0,f,c
  7602  0009EC  2A11               	incf	(sprintf@f+1)^0,f,c
  7603  0009EE                     
  7604                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  7605  0009EE  C010  FFF6         	movff	sprintf@f,tblptrl
  7606  0009F2  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7607  0009F6                     	if	0	;tblptru may be non-zero
  7608  0009F6                     	endif
  7609  0009F6                     	if	0	;tblptru may be non-zero
  7610  0009F6                     	endif
  7611  0009F6  0008               	tblrd		*
  7612  0009F8  50F5               	movf	tablat,w,c
  7613  0009FA  EC96  F01E         	call	_isdigit
  7614  0009FE  B0D8               	btfsc	status,0,c
  7615  000A00  EF04  F005         	goto	u6771
  7616  000A04  EF06  F005         	goto	u6770
  7617  000A08                     u6771:
  7618  000A08  EFD3  F004         	goto	l5976
  7619  000A0C                     u6770:
  7620  000A0C  EF24  F005         	goto	l5992
  7621  000A10                     l5984:
  7622  000A10  C010  FFF6         	movff	sprintf@f,tblptrl
  7623  000A14  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7624  000A18                     	if	0	;tblptru may be non-zero
  7625  000A18                     	endif
  7626  000A18                     	if	0	;tblptru may be non-zero
  7627  000A18                     	endif
  7628  000A18  0008               	tblrd		*
  7629  000A1A  50F5               	movf	tablat,w,c
  7630  000A1C  0A2A               	xorlw	42
  7631  000A1E  A4D8               	btfss	status,2,c
  7632  000A20  EF14  F005         	goto	u6781
  7633  000A24  EF16  F005         	goto	u6780
  7634  000A28                     u6781:
  7635  000A28  EF24  F005         	goto	l5992
  7636  000A2C                     u6780:
  7637  000A2C                     
  7638                           ;doprnt.c: 622: width = (*(int *)__va_arg((*(int **)ap), (int)0));
  7639  000A2C  C027  FFD9         	movff	sprintf@ap,fsr2l
  7640  000A30  C028  FFDA         	movff	sprintf@ap+1,fsr2h
  7641  000A34  CFDE F02C          	movff	postinc2,sprintf@width
  7642  000A38  CFDD F02D          	movff	postdec2,sprintf@width+1
  7643  000A3C  0E02               	movlw	2
  7644  000A3E  2627               	addwf	sprintf@ap^0,f,c
  7645  000A40  0E00               	movlw	0
  7646  000A42  2228               	addwfc	(sprintf@ap+1)^0,f,c
  7647  000A44                     
  7648                           ;doprnt.c: 623: f++;
  7649  000A44  4A10               	infsnz	sprintf@f^0,f,c
  7650  000A46  2A11               	incf	(sprintf@f+1)^0,f,c
  7651  000A48                     l5992:
  7652                           
  7653                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  7654  000A48  C010  FFF6         	movff	sprintf@f,tblptrl
  7655  000A4C  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7656  000A50                     	if	0	;tblptru may be non-zero
  7657  000A50                     	endif
  7658  000A50                     	if	0	;tblptru may be non-zero
  7659  000A50                     	endif
  7660  000A50  0008               	tblrd		*
  7661  000A52  50F5               	movf	tablat,w,c
  7662  000A54  0A2E               	xorlw	46
  7663  000A56  A4D8               	btfss	status,2,c
  7664  000A58  EF30  F005         	goto	u6791
  7665  000A5C  EF32  F005         	goto	u6790
  7666  000A60                     u6791:
  7667  000A60  EF7E  F005         	goto	l6020
  7668  000A64                     u6790:
  7669  000A64                     
  7670                           ;doprnt.c: 629: flag |= 0x4000;
  7671  000A64  8C30               	bsf	(sprintf@flag+1)^0,6,c
  7672                           
  7673                           ;doprnt.c: 630: f++;
  7674  000A66  4A10               	infsnz	sprintf@f^0,f,c
  7675  000A68  2A11               	incf	(sprintf@f+1)^0,f,c
  7676  000A6A                     
  7677                           ;doprnt.c: 632: if(*f == '*') {
  7678  000A6A  C010  FFF6         	movff	sprintf@f,tblptrl
  7679  000A6E  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7680  000A72                     	if	0	;tblptru may be non-zero
  7681  000A72                     	endif
  7682  000A72                     	if	0	;tblptru may be non-zero
  7683  000A72                     	endif
  7684  000A72  0008               	tblrd		*
  7685  000A74  50F5               	movf	tablat,w,c
  7686  000A76  0A2A               	xorlw	42
  7687  000A78  A4D8               	btfss	status,2,c
  7688  000A7A  EF41  F005         	goto	u6801
  7689  000A7E  EF43  F005         	goto	u6800
  7690  000A82                     u6801:
  7691  000A82  EF5B  F005         	goto	l6010
  7692  000A86                     u6800:
  7693  000A86                     
  7694                           ;doprnt.c: 633: prec = (*(int *)__va_arg((*(int **)ap), (int)0));
  7695  000A86  C027  FFD9         	movff	sprintf@ap,fsr2l
  7696  000A8A  C028  FFDA         	movff	sprintf@ap+1,fsr2h
  7697  000A8E  50DF               	movf	indf2,w,c
  7698  000A90  6E2B               	movwf	sprintf@prec^0,c
  7699  000A92  0E02               	movlw	2
  7700  000A94  2627               	addwf	sprintf@ap^0,f,c
  7701  000A96  0E00               	movlw	0
  7702  000A98  2228               	addwfc	(sprintf@ap+1)^0,f,c
  7703  000A9A                     
  7704                           ;doprnt.c: 634: if (prec < 0) {
  7705  000A9A  BE2B               	btfsc	sprintf@prec^0,7,c
  7706  000A9C  EF54  F005         	goto	u6810
  7707  000AA0  EF52  F005         	goto	u6811
  7708  000AA4                     u6811:
  7709  000AA4  EF57  F005         	goto	l6008
  7710  000AA8                     u6810:
  7711  000AA8                     
  7712                           ;doprnt.c: 635: prec = 0;
  7713  000AA8  0E00               	movlw	0
  7714  000AAA  6E2B               	movwf	sprintf@prec^0,c
  7715  000AAC                     
  7716                           ;doprnt.c: 636: flag &= ~0x4000;
  7717  000AAC  9C30               	bcf	(sprintf@flag+1)^0,6,c
  7718  000AAE                     l6008:
  7719                           
  7720                           ;doprnt.c: 640: };doprnt.c: 641: f++;
  7721  000AAE  4A10               	infsnz	sprintf@f^0,f,c
  7722  000AB0  2A11               	incf	(sprintf@f+1)^0,f,c
  7723                           
  7724                           ;doprnt.c: 642: } else
  7725  000AB2  EF2C  F006         	goto	l6076
  7726  000AB6                     l6010:
  7727                           
  7728                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  7729  000AB6  0E00               	movlw	0
  7730  000AB8  6E2B               	movwf	sprintf@prec^0,c
  7731                           
  7732                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  7733  000ABA  EF6D  F005         	goto	l6018
  7734  000ABE                     l6012:
  7735                           
  7736                           ;doprnt.c: 647: prec *= 10;
  7737  000ABE  0E0A               	movlw	10
  7738  000AC0  022B               	mulwf	sprintf@prec^0,c
  7739  000AC2  50F3               	movf	prodl,w,c
  7740  000AC4  6E2B               	movwf	sprintf@prec^0,c
  7741  000AC6                     
  7742                           ;doprnt.c: 648: prec += *f++ - '0';
  7743  000AC6  C010  FFF6         	movff	sprintf@f,tblptrl
  7744  000ACA  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7745  000ACE                     	if	0	;tblptru may be non-zero
  7746  000ACE                     	endif
  7747  000ACE                     	if	0	;tblptru may be non-zero
  7748  000ACE                     	endif
  7749  000ACE  0008               	tblrd		*
  7750  000AD0  50F5               	movf	tablat,w,c
  7751  000AD2  0FD0               	addlw	208
  7752  000AD4  262B               	addwf	sprintf@prec^0,f,c
  7753  000AD6  4A10               	infsnz	sprintf@f^0,f,c
  7754  000AD8  2A11               	incf	(sprintf@f+1)^0,f,c
  7755  000ADA                     l6018:
  7756  000ADA  C010  FFF6         	movff	sprintf@f,tblptrl
  7757  000ADE  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7758  000AE2                     	if	0	;tblptru may be non-zero
  7759  000AE2                     	endif
  7760  000AE2                     	if	0	;tblptru may be non-zero
  7761  000AE2                     	endif
  7762  000AE2  0008               	tblrd		*
  7763  000AE4  50F5               	movf	tablat,w,c
  7764  000AE6  EC96  F01E         	call	_isdigit
  7765  000AEA  B0D8               	btfsc	status,0,c
  7766  000AEC  EF7A  F005         	goto	u6821
  7767  000AF0  EF7C  F005         	goto	u6820
  7768  000AF4                     u6821:
  7769  000AF4  EF5F  F005         	goto	l6012
  7770  000AF8                     u6820:
  7771  000AF8  EF2C  F006         	goto	l6076
  7772  000AFC                     l6020:
  7773                           
  7774                           ;doprnt.c: 652: prec = 0;
  7775  000AFC  0E00               	movlw	0
  7776  000AFE  6E2B               	movwf	sprintf@prec^0,c
  7777  000B00  EF2C  F006         	goto	l6076
  7778  000B04                     l6022:
  7779                           
  7780                           ;doprnt.c: 717: flag |= 0x40;
  7781  000B04  8C2F               	bsf	sprintf@flag^0,6,c
  7782                           
  7783                           ;doprnt.c: 719: break;
  7784  000B06  EF58  F006         	goto	l6078
  7785  000B0A                     l6024:
  7786                           
  7787                           ;doprnt.c: 740: flag |= 0x20;
  7788  000B0A  8A2F               	bsf	sprintf@flag^0,5,c
  7789  000B0C                     l687:
  7790                           
  7791                           ;doprnt.c: 747: flag |= 0x80;
  7792  000B0C  8E2F               	bsf	sprintf@flag^0,7,c
  7793                           
  7794                           ;doprnt.c: 749: break;
  7795  000B0E  EF58  F006         	goto	l6078
  7796  000B12                     l6026:
  7797                           
  7798                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
  7799  000B12  502B               	movf	sprintf@prec^0,w,c
  7800  000B14  B4D8               	btfsc	status,2,c
  7801  000B16  EF8F  F005         	goto	u6831
  7802  000B1A  EF91  F005         	goto	u6830
  7803  000B1E                     u6831:
  7804  000B1E  EFA4  F005         	goto	l6032
  7805  000B22                     u6830:
  7806  000B22  0E80               	movlw	128
  7807  000B24  BE2B               	btfsc	sprintf@prec^0,7,c
  7808  000B26  0E7F               	movlw	127
  7809  000B28  6E18               	movwf	??_sprintf^0,c
  7810  000B2A  5025               	movf	sprintf@len^0,w,c
  7811  000B2C  5C2B               	subwf	sprintf@prec^0,w,c
  7812  000B2E  5026               	movf	(sprintf@len+1)^0,w,c
  7813  000B30  0A80               	xorlw	128
  7814  000B32  5818               	subwfb	??_sprintf^0,w,c
  7815  000B34  B0D8               	btfsc	status,0,c
  7816  000B36  EF9F  F005         	goto	u6841
  7817  000B3A  EFA1  F005         	goto	u6840
  7818  000B3E                     u6841:
  7819  000B3E  EFA4  F005         	goto	l6032
  7820  000B42                     u6840:
  7821  000B42                     
  7822                           ;doprnt.c: 780: len = (unsigned char)prec;
  7823  000B42  C02B  F025         	movff	sprintf@prec,sprintf@len
  7824  000B46  6A26               	clrf	(sprintf@len+1)^0,c
  7825  000B48                     l6032:
  7826                           
  7827                           ;doprnt.c: 783: if(((unsigned)width) > len)
  7828  000B48  502C               	movf	sprintf@width^0,w,c
  7829  000B4A  5C25               	subwf	sprintf@len^0,w,c
  7830  000B4C  502D               	movf	(sprintf@width+1)^0,w,c
  7831  000B4E  5826               	subwfb	(sprintf@len+1)^0,w,c
  7832  000B50  B0D8               	btfsc	status,0,c
  7833  000B52  EFAD  F005         	goto	u6851
  7834  000B56  EFAF  F005         	goto	u6850
  7835  000B5A                     u6851:
  7836  000B5A  EFB5  F005         	goto	l6036
  7837  000B5E                     u6850:
  7838  000B5E                     
  7839                           ;doprnt.c: 784: width -= len;
  7840  000B5E  5025               	movf	sprintf@len^0,w,c
  7841  000B60  5E2C               	subwf	sprintf@width^0,f,c
  7842  000B62  5026               	movf	(sprintf@len+1)^0,w,c
  7843  000B64  5A2D               	subwfb	(sprintf@width+1)^0,f,c
  7844  000B66  EFB9  F005         	goto	l6038
  7845  000B6A                     l6036:
  7846                           
  7847                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  7848  000B6A  0E00               	movlw	0
  7849  000B6C  6E2D               	movwf	(sprintf@width+1)^0,c
  7850  000B6E  0E00               	movlw	0
  7851  000B70  6E2C               	movwf	sprintf@width^0,c
  7852  000B72                     l6038:
  7853                           
  7854                           ;doprnt.c: 788: if(!(flag & 0x08))
  7855  000B72  B62F               	btfsc	sprintf@flag^0,3,c
  7856  000B74  EFBE  F005         	goto	u6861
  7857  000B78  EFC0  F005         	goto	u6860
  7858  000B7C                     u6861:
  7859  000B7C  EFE7  F005         	goto	l6054
  7860  000B80                     u6860:
  7861  000B80  EFCA  F005         	goto	l6046
  7862  000B84                     l6042:
  7863                           
  7864                           ;doprnt.c: 791: ((*sp++ = (' ')));
  7865  000B84  C00E  FFD9         	movff	sprintf@sp,fsr2l
  7866  000B88  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  7867  000B8C  0E20               	movlw	32
  7868  000B8E  6EDF               	movwf	indf2,c
  7869  000B90  4A0E               	infsnz	sprintf@sp^0,f,c
  7870  000B92  2A0F               	incf	(sprintf@sp+1)^0,f,c
  7871  000B94                     l6046:
  7872  000B94  062C               	decf	sprintf@width^0,f,c
  7873  000B96  A0D8               	btfss	status,0,c
  7874  000B98  062D               	decf	(sprintf@width+1)^0,f,c
  7875  000B9A  282C               	incf	sprintf@width^0,w,c
  7876  000B9C  E106               	bnz	u6871
  7877  000B9E  282D               	incf	(sprintf@width+1)^0,w,c
  7878  000BA0  A4D8               	btfss	status,2,c
  7879  000BA2  EFD5  F005         	goto	u6871
  7880  000BA6  EFD7  F005         	goto	u6870
  7881  000BAA                     u6871:
  7882  000BAA  EFC2  F005         	goto	l6042
  7883  000BAE                     u6870:
  7884  000BAE  EFE7  F005         	goto	l6054
  7885  000BB2                     l6048:
  7886                           
  7887                           ;doprnt.c: 794: ((*sp++ = (*cp++)));
  7888  000BB2  C01D  FFD9         	movff	sprintf@cp,fsr2l
  7889  000BB6  C01E  FFDA         	movff	sprintf@cp+1,fsr2h
  7890  000BBA  C00E  FFE1         	movff	sprintf@sp,fsr1l
  7891  000BBE  C00F  FFE2         	movff	sprintf@sp+1,fsr1h
  7892  000BC2  CFDF FFE7          	movff	indf2,indf1
  7893  000BC6  4A1D               	infsnz	sprintf@cp^0,f,c
  7894  000BC8  2A1E               	incf	(sprintf@cp+1)^0,f,c
  7895  000BCA  4A0E               	infsnz	sprintf@sp^0,f,c
  7896  000BCC  2A0F               	incf	(sprintf@sp+1)^0,f,c
  7897  000BCE                     l6054:
  7898  000BCE  0625               	decf	sprintf@len^0,f,c
  7899  000BD0  A0D8               	btfss	status,0,c
  7900  000BD2  0626               	decf	(sprintf@len+1)^0,f,c
  7901  000BD4  2825               	incf	sprintf@len^0,w,c
  7902  000BD6  E106               	bnz	u6881
  7903  000BD8  2826               	incf	(sprintf@len+1)^0,w,c
  7904  000BDA  A4D8               	btfss	status,2,c
  7905  000BDC  EFF2  F005         	goto	u6881
  7906  000BE0  EFF4  F005         	goto	u6880
  7907  000BE4                     u6881:
  7908  000BE4  EFD9  F005         	goto	l6048
  7909  000BE8                     u6880:
  7910  000BE8                     
  7911                           ;doprnt.c: 796: if(flag & 0x08)
  7912  000BE8  A62F               	btfss	sprintf@flag^0,3,c
  7913  000BEA  EFF9  F005         	goto	u6891
  7914  000BEE  EFFB  F005         	goto	u6890
  7915  000BF2                     u6891:
  7916  000BF2  EFED  F009         	goto	l6298
  7917  000BF6                     u6890:
  7918  000BF6  EF05  F006         	goto	l6062
  7919  000BFA                     l6058:
  7920                           
  7921                           ;doprnt.c: 798: ((*sp++ = (' ')));
  7922  000BFA  C00E  FFD9         	movff	sprintf@sp,fsr2l
  7923  000BFE  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  7924  000C02  0E20               	movlw	32
  7925  000C04  6EDF               	movwf	indf2,c
  7926  000C06  4A0E               	infsnz	sprintf@sp^0,f,c
  7927  000C08  2A0F               	incf	(sprintf@sp+1)^0,f,c
  7928  000C0A                     l6062:
  7929  000C0A  062C               	decf	sprintf@width^0,f,c
  7930  000C0C  A0D8               	btfss	status,0,c
  7931  000C0E  062D               	decf	(sprintf@width+1)^0,f,c
  7932  000C10  282C               	incf	sprintf@width^0,w,c
  7933  000C12  E106               	bnz	u6901
  7934  000C14  282D               	incf	(sprintf@width+1)^0,w,c
  7935  000C16  A4D8               	btfss	status,2,c
  7936  000C18  EF10  F006         	goto	u6901
  7937  000C1C  EF12  F006         	goto	u6900
  7938  000C20                     u6901:
  7939  000C20  EFFD  F005         	goto	l6058
  7940  000C24                     u6900:
  7941  000C24  EFED  F009         	goto	l6298
  7942  000C28                     l6064:
  7943                           
  7944                           ;doprnt.c: 825: c = (char)(*(int *)__va_arg((*(int **)ap), (int)0));
  7945  000C28  C027  FFD9         	movff	sprintf@ap,fsr2l
  7946  000C2C  C028  FFDA         	movff	sprintf@ap+1,fsr2h
  7947  000C30  50DF               	movf	indf2,w,c
  7948  000C32  6E2E               	movwf	sprintf@c^0,c
  7949  000C34  0E02               	movlw	2
  7950  000C36  2627               	addwf	sprintf@ap^0,f,c
  7951  000C38  0E00               	movlw	0
  7952  000C3A  2228               	addwfc	(sprintf@ap+1)^0,f,c
  7953  000C3C                     l6068:
  7954                           
  7955                           ;doprnt.c: 831: cp = (char *)&c;
  7956  000C3C  0E2E               	movlw	low sprintf@c
  7957  000C3E  6E1D               	movwf	sprintf@cp^0,c
  7958  000C40  0E00               	movlw	high sprintf@c
  7959  000C42  6E1E               	movwf	(sprintf@cp+1)^0,c
  7960  000C44                     
  7961                           ;doprnt.c: 832: len = 1;
  7962  000C44  0E00               	movlw	0
  7963  000C46  6E26               	movwf	(sprintf@len+1)^0,c
  7964  000C48  0E01               	movlw	1
  7965  000C4A  6E25               	movwf	sprintf@len^0,c
  7966                           
  7967                           ;doprnt.c: 833: goto dostring;
  7968  000C4C  EF89  F005         	goto	l6026
  7969  000C50                     l6072:
  7970                           
  7971                           ;doprnt.c: 844: flag |= 0xC0;
  7972  000C50  0EC0               	movlw	192
  7973  000C52  122F               	iorwf	sprintf@flag^0,f,c
  7974                           
  7975                           ;doprnt.c: 845: break;
  7976  000C54  EF58  F006         	goto	l6078
  7977  000C58                     l6076:
  7978  000C58  C010  FFF6         	movff	sprintf@f,tblptrl
  7979  000C5C  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7980  000C60  4A10               	infsnz	sprintf@f^0,f,c
  7981  000C62  2A11               	incf	(sprintf@f+1)^0,f,c
  7982  000C64                     	if	0	;tblptru may be non-zero
  7983  000C64                     	endif
  7984  000C64                     	if	0	;tblptru may be non-zero
  7985  000C64                     	endif
  7986  000C64  0008               	tblrd		*
  7987  000C66  CFF5 F02E          	movff	tablat,sprintf@c
  7988  000C6A  502E               	movf	sprintf@c^0,w,c
  7989                           
  7990                           ; Switch size 1, requested type "simple"
  7991                           ; Number of cases is 8, Range of values is 0 to 120
  7992                           ; switch strategies available:
  7993                           ; Name         Instructions Cycles
  7994                           ; simple_byte           25    13 (average)
  7995                           ;	Chosen strategy is simple_byte
  7996  000C6C  0A00               	xorlw	0	; case 0
  7997  000C6E  B4D8               	btfsc	status,2,c
  7998  000C70  EFFE  F009         	goto	l6300
  7999  000C74  0A58               	xorlw	88	; case 88
  8000  000C76  B4D8               	btfsc	status,2,c
  8001  000C78  EF85  F005         	goto	l6024
  8002  000C7C  0A3B               	xorlw	59	; case 99
  8003  000C7E  B4D8               	btfsc	status,2,c
  8004  000C80  EF14  F006         	goto	l6064
  8005  000C84  0A07               	xorlw	7	; case 100
  8006  000C86  B4D8               	btfsc	status,2,c
  8007  000C88  EF58  F006         	goto	l6078
  8008  000C8C  0A0D               	xorlw	13	; case 105
  8009  000C8E  B4D8               	btfsc	status,2,c
  8010  000C90  EF58  F006         	goto	l6078
  8011  000C94  0A06               	xorlw	6	; case 111
  8012  000C96  B4D8               	btfsc	status,2,c
  8013  000C98  EF82  F005         	goto	l6022
  8014  000C9C  0A1A               	xorlw	26	; case 117
  8015  000C9E  B4D8               	btfsc	status,2,c
  8016  000CA0  EF28  F006         	goto	l6072
  8017  000CA4  0A0D               	xorlw	13	; case 120
  8018  000CA6  B4D8               	btfsc	status,2,c
  8019  000CA8  EF86  F005         	goto	l687
  8020  000CAC  EF1E  F006         	goto	l6068
  8021  000CB0                     l6078:
  8022                           
  8023                           ;doprnt.c: 1277: if((flag & (0xC0)) == 0x00)
  8024  000CB0  0EC0               	movlw	192
  8025  000CB2  142F               	andwf	sprintf@flag^0,w,c
  8026  000CB4  6E18               	movwf	??_sprintf^0,c
  8027  000CB6  0E00               	movlw	0
  8028  000CB8  1430               	andwf	(sprintf@flag+1)^0,w,c
  8029  000CBA  6E19               	movwf	(??_sprintf+1)^0,c
  8030  000CBC  5018               	movf	??_sprintf^0,w,c
  8031  000CBE  1019               	iorwf	(??_sprintf+1)^0,w,c
  8032  000CC0  A4D8               	btfss	status,2,c
  8033  000CC2  EF65  F006         	goto	u6911
  8034  000CC6  EF67  F006         	goto	u6910
  8035  000CCA                     u6911:
  8036  000CCA  EF82  F006         	goto	l6090
  8037  000CCE                     u6910:
  8038  000CCE                     
  8039                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  8040  000CCE  C027  FFD9         	movff	sprintf@ap,fsr2l
  8041  000CD2  C028  FFDA         	movff	sprintf@ap+1,fsr2h
  8042  000CD6  CFDE F029          	movff	postinc2,sprintf@val
  8043  000CDA  CFDD F02A          	movff	postdec2,sprintf@val+1
  8044  000CDE  0E02               	movlw	2
  8045  000CE0  2627               	addwf	sprintf@ap^0,f,c
  8046  000CE2  0E00               	movlw	0
  8047  000CE4  2228               	addwfc	(sprintf@ap+1)^0,f,c
  8048  000CE6                     
  8049                           ;doprnt.c: 1287: if((int)val < 0) {
  8050  000CE6  BE2A               	btfsc	(sprintf@val+1)^0,7,c
  8051  000CE8  EF7A  F006         	goto	u6920
  8052  000CEC  EF78  F006         	goto	u6921
  8053  000CF0                     u6921:
  8054  000CF0  EF8E  F006         	goto	l6094
  8055  000CF4                     u6920:
  8056  000CF4                     
  8057                           ;doprnt.c: 1288: flag |= 0x03;
  8058  000CF4  0E03               	movlw	3
  8059  000CF6  122F               	iorwf	sprintf@flag^0,f,c
  8060  000CF8                     
  8061                           ;doprnt.c: 1289: val = -val;
  8062  000CF8  6C29               	negf	sprintf@val^0,c
  8063  000CFA  1E2A               	comf	(sprintf@val+1)^0,f,c
  8064  000CFC  B0D8               	btfsc	status,0,c
  8065  000CFE  2A2A               	incf	(sprintf@val+1)^0,f,c
  8066  000D00  EF8E  F006         	goto	l6094
  8067  000D04                     l6090:
  8068                           
  8069                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  8070  000D04  C027  FFD9         	movff	sprintf@ap,fsr2l
  8071  000D08  C028  FFDA         	movff	sprintf@ap+1,fsr2h
  8072  000D0C  CFDE F029          	movff	postinc2,sprintf@val
  8073  000D10  CFDD F02A          	movff	postdec2,sprintf@val+1
  8074  000D14  0E02               	movlw	2
  8075  000D16  2627               	addwf	sprintf@ap^0,f,c
  8076  000D18  0E00               	movlw	0
  8077  000D1A  2228               	addwfc	(sprintf@ap+1)^0,f,c
  8078  000D1C                     l6094:
  8079                           
  8080                           ;doprnt.c: 1313: };doprnt.c: 1316: if(prec == 0 && val == 0)
  8081  000D1C  502B               	movf	sprintf@prec^0,w,c
  8082  000D1E  A4D8               	btfss	status,2,c
  8083  000D20  EF94  F006         	goto	u6931
  8084  000D24  EF96  F006         	goto	u6930
  8085  000D28                     u6931:
  8086  000D28  EF17  F007         	goto	l6144
  8087  000D2C                     u6930:
  8088  000D2C  5029               	movf	sprintf@val^0,w,c
  8089  000D2E  102A               	iorwf	(sprintf@val+1)^0,w,c
  8090  000D30  A4D8               	btfss	status,2,c
  8091  000D32  EF9D  F006         	goto	u6941
  8092  000D36  EF9F  F006         	goto	u6940
  8093  000D3A                     u6941:
  8094  000D3A  EF17  F007         	goto	l6144
  8095  000D3E                     u6940:
  8096  000D3E                     
  8097                           ;doprnt.c: 1317: prec++;
  8098  000D3E  2A2B               	incf	sprintf@prec^0,f,c
  8099  000D40  EF17  F007         	goto	l6144
  8100  000D44                     l6100:
  8101                           
  8102                           ;doprnt.c: 1328: case 0xC0:;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowe
      +                          rs[0] ; c++)
  8103  000D44  0E01               	movlw	1
  8104  000D46  6E2E               	movwf	sprintf@c^0,c
  8105  000D48                     l6102:
  8106  000D48  0E05               	movlw	5
  8107  000D4A  182E               	xorwf	sprintf@c^0,w,c
  8108  000D4C  A4D8               	btfss	status,2,c
  8109  000D4E  EFAB  F006         	goto	u6951
  8110  000D52  EFAD  F006         	goto	u6950
  8111  000D56                     u6951:
  8112  000D56  EFAF  F006         	goto	l6106
  8113  000D5A                     u6950:
  8114  000D5A  EF2B  F007         	goto	l6146
  8115  000D5E                     l6106:
  8116                           
  8117                           ;doprnt.c: 1332: if(val < dpowers[c])
  8118  000D5E  502E               	movf	sprintf@c^0,w,c
  8119  000D60  0D02               	mullw	2
  8120  000D62  0E0D               	movlw	low _dpowers
  8121  000D64  24F3               	addwf	243,w,c
  8122  000D66  6EF6               	movwf	tblptrl,c
  8123  000D68  0E08               	movlw	high _dpowers
  8124  000D6A  20F4               	addwfc	244,w,c
  8125  000D6C  6EF7               	movwf	tblptrh,c
  8126  000D6E                     	if	0	;There are less than 3 active tblptr bytes
  8127  000D6E                     	endif
  8128  000D6E  0009               	tblrd		*+
  8129  000D70  50F5               	movf	tablat,w,c
  8130  000D72  5C29               	subwf	sprintf@val^0,w,c
  8131  000D74  0009               	tblrd		*+
  8132  000D76  50F5               	movf	tablat,w,c
  8133  000D78  582A               	subwfb	(sprintf@val+1)^0,w,c
  8134  000D7A  B0D8               	btfsc	status,0,c
  8135  000D7C  EFC2  F006         	goto	u6961
  8136  000D80  EFC4  F006         	goto	u6960
  8137  000D84                     u6961:
  8138  000D84  EFC6  F006         	goto	l6110
  8139  000D88                     u6960:
  8140  000D88  EF2B  F007         	goto	l6146
  8141  000D8C                     l6110:
  8142  000D8C  2A2E               	incf	sprintf@c^0,f,c
  8143  000D8E  EFA4  F006         	goto	l6102
  8144  000D92                     l6114:
  8145                           
  8146                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  8147  000D92  0E01               	movlw	1
  8148  000D94  6E2E               	movwf	sprintf@c^0,c
  8149  000D96                     l6116:
  8150  000D96  0E04               	movlw	4
  8151  000D98  182E               	xorwf	sprintf@c^0,w,c
  8152  000D9A  A4D8               	btfss	status,2,c
  8153  000D9C  EFD2  F006         	goto	u6971
  8154  000DA0  EFD4  F006         	goto	u6970
  8155  000DA4                     u6971:
  8156  000DA4  EFD6  F006         	goto	l6120
  8157  000DA8                     u6970:
  8158  000DA8  EF2B  F007         	goto	l6146
  8159  000DAC                     l6120:
  8160                           
  8161                           ;doprnt.c: 1343: if(val < hexpowers[c])
  8162  000DAC  502E               	movf	sprintf@c^0,w,c
  8163  000DAE  0D02               	mullw	2
  8164  000DB0  0E17               	movlw	low _hexpowers
  8165  000DB2  24F3               	addwf	243,w,c
  8166  000DB4  6EF6               	movwf	tblptrl,c
  8167  000DB6  0E08               	movlw	high _hexpowers
  8168  000DB8  20F4               	addwfc	244,w,c
  8169  000DBA  6EF7               	movwf	tblptrh,c
  8170  000DBC                     	if	0	;There are less than 3 active tblptr bytes
  8171  000DBC                     	endif
  8172  000DBC  0009               	tblrd		*+
  8173  000DBE  50F5               	movf	tablat,w,c
  8174  000DC0  5C29               	subwf	sprintf@val^0,w,c
  8175  000DC2  0009               	tblrd		*+
  8176  000DC4  50F5               	movf	tablat,w,c
  8177  000DC6  582A               	subwfb	(sprintf@val+1)^0,w,c
  8178  000DC8  B0D8               	btfsc	status,0,c
  8179  000DCA  EFE9  F006         	goto	u6981
  8180  000DCE  EFEB  F006         	goto	u6980
  8181  000DD2                     u6981:
  8182  000DD2  EFED  F006         	goto	l6124
  8183  000DD6                     u6980:
  8184  000DD6  EF2B  F007         	goto	l6146
  8185  000DDA                     l6124:
  8186  000DDA  2A2E               	incf	sprintf@c^0,f,c
  8187  000DDC  EFCB  F006         	goto	l6116
  8188  000DE0                     l6128:
  8189                           
  8190                           ;doprnt.c: 1354: for(c = 1 ; c != sizeof octpowers/sizeof octpowers[0] ; c++)
  8191  000DE0  0E01               	movlw	1
  8192  000DE2  6E2E               	movwf	sprintf@c^0,c
  8193  000DE4                     l6130:
  8194  000DE4  0E06               	movlw	6
  8195  000DE6  182E               	xorwf	sprintf@c^0,w,c
  8196  000DE8  A4D8               	btfss	status,2,c
  8197  000DEA  EFF9  F006         	goto	u6991
  8198  000DEE  EFFB  F006         	goto	u6990
  8199  000DF2                     u6991:
  8200  000DF2  EFFD  F006         	goto	l6134
  8201  000DF6                     u6990:
  8202  000DF6  EF2B  F007         	goto	l6146
  8203  000DFA                     l6134:
  8204                           
  8205                           ;doprnt.c: 1355: if(val < octpowers[c])
  8206  000DFA  502E               	movf	sprintf@c^0,w,c
  8207  000DFC  0D02               	mullw	2
  8208  000DFE  0E01               	movlw	low _octpowers
  8209  000E00  24F3               	addwf	243,w,c
  8210  000E02  6EF6               	movwf	tblptrl,c
  8211  000E04  0E08               	movlw	high _octpowers
  8212  000E06  20F4               	addwfc	244,w,c
  8213  000E08  6EF7               	movwf	tblptrh,c
  8214  000E0A                     	if	0	;There are less than 3 active tblptr bytes
  8215  000E0A                     	endif
  8216  000E0A  0009               	tblrd		*+
  8217  000E0C  50F5               	movf	tablat,w,c
  8218  000E0E  5C29               	subwf	sprintf@val^0,w,c
  8219  000E10  0009               	tblrd		*+
  8220  000E12  50F5               	movf	tablat,w,c
  8221  000E14  582A               	subwfb	(sprintf@val+1)^0,w,c
  8222  000E16  B0D8               	btfsc	status,0,c
  8223  000E18  EF10  F007         	goto	u7001
  8224  000E1C  EF12  F007         	goto	u7000
  8225  000E20                     u7001:
  8226  000E20  EF14  F007         	goto	l6138
  8227  000E24                     u7000:
  8228  000E24  EF2B  F007         	goto	l6146
  8229  000E28                     l6138:
  8230  000E28  2A2E               	incf	sprintf@c^0,f,c
  8231  000E2A  EFF2  F006         	goto	l6130
  8232  000E2E                     l6144:
  8233  000E2E  502F               	movf	sprintf@flag^0,w,c
  8234  000E30  0BC0               	andlw	192
  8235                           
  8236                           ; Switch size 1, requested type "simple"
  8237                           ; Number of cases is 4, Range of values is 0 to 192
  8238                           ; switch strategies available:
  8239                           ; Name         Instructions Cycles
  8240                           ; simple_byte           13     7 (average)
  8241                           ;	Chosen strategy is simple_byte
  8242  000E32  0A00               	xorlw	0	; case 0
  8243  000E34  B4D8               	btfsc	status,2,c
  8244  000E36  EFA2  F006         	goto	l6100
  8245  000E3A  0A40               	xorlw	64	; case 64
  8246  000E3C  B4D8               	btfsc	status,2,c
  8247  000E3E  EFF0  F006         	goto	l6128
  8248  000E42  0AC0               	xorlw	192	; case 128
  8249  000E44  B4D8               	btfsc	status,2,c
  8250  000E46  EFC9  F006         	goto	l6114
  8251  000E4A  0A40               	xorlw	64	; case 192
  8252  000E4C  B4D8               	btfsc	status,2,c
  8253  000E4E  EFA2  F006         	goto	l6100
  8254  000E52  EF2B  F007         	goto	l6146
  8255  000E56                     l6146:
  8256                           
  8257                           ;doprnt.c: 1365: if(c < prec)
  8258  000E56  502E               	movf	sprintf@c^0,w,c
  8259  000E58  80D8               	bsf	status,0,c
  8260  000E5A  84D8               	bsf	status,2,c
  8261  000E5C  AE2B               	btfss	sprintf@prec^0,7,c
  8262  000E5E  5C2B               	subwf	sprintf@prec^0,w,c
  8263  000E60  A0D8               	btfss	status,0,c
  8264  000E62  84D8               	bsf	status,2,c
  8265  000E64  B4D8               	btfsc	status,2,c
  8266  000E66  EF37  F007         	goto	u7011
  8267  000E6A  EF39  F007         	goto	u7010
  8268  000E6E                     u7011:
  8269  000E6E  EF3D  F007         	goto	l6150
  8270  000E72                     u7010:
  8271  000E72                     
  8272                           ;doprnt.c: 1366: c = (char)prec;
  8273  000E72  C02B  F02E         	movff	sprintf@prec,sprintf@c
  8274  000E76  EF4C  F007         	goto	l6154
  8275  000E7A                     l6150:
  8276                           
  8277                           ;doprnt.c: 1367: else if(prec < c)
  8278  000E7A  502E               	movf	sprintf@c^0,w,c
  8279  000E7C  90D8               	bcf	status,0,c
  8280  000E7E  AE2B               	btfss	sprintf@prec^0,7,c
  8281  000E80  5C2B               	subwf	sprintf@prec^0,w,c
  8282  000E82  B0D8               	btfsc	status,0,c
  8283  000E84  80D8               	bsf	status,0,c
  8284  000E86  B0D8               	btfsc	status,0,c
  8285  000E88  EF48  F007         	goto	u7021
  8286  000E8C  EF4A  F007         	goto	u7020
  8287  000E90                     u7021:
  8288  000E90  EF4C  F007         	goto	l6154
  8289  000E94                     u7020:
  8290  000E94                     
  8291                           ;doprnt.c: 1368: prec = c;
  8292  000E94  C02E  F02B         	movff	sprintf@c,sprintf@prec
  8293  000E98                     l6154:
  8294                           
  8295                           ;doprnt.c: 1371: if(width && flag & 0x03)
  8296  000E98  502C               	movf	sprintf@width^0,w,c
  8297  000E9A  102D               	iorwf	(sprintf@width+1)^0,w,c
  8298  000E9C  B4D8               	btfsc	status,2,c
  8299  000E9E  EF53  F007         	goto	u7031
  8300  000EA2  EF55  F007         	goto	u7030
  8301  000EA6                     u7031:
  8302  000EA6  EF67  F007         	goto	l6160
  8303  000EAA                     u7030:
  8304  000EAA  0E03               	movlw	3
  8305  000EAC  142F               	andwf	sprintf@flag^0,w,c
  8306  000EAE  6E18               	movwf	??_sprintf^0,c
  8307  000EB0  0E00               	movlw	0
  8308  000EB2  1430               	andwf	(sprintf@flag+1)^0,w,c
  8309  000EB4  6E19               	movwf	(??_sprintf+1)^0,c
  8310  000EB6  5018               	movf	??_sprintf^0,w,c
  8311  000EB8  1019               	iorwf	(??_sprintf+1)^0,w,c
  8312  000EBA  B4D8               	btfsc	status,2,c
  8313  000EBC  EF62  F007         	goto	u7041
  8314  000EC0  EF64  F007         	goto	u7040
  8315  000EC4                     u7041:
  8316  000EC4  EF67  F007         	goto	l6160
  8317  000EC8                     u7040:
  8318  000EC8                     
  8319                           ;doprnt.c: 1372: width--;
  8320  000EC8  062C               	decf	sprintf@width^0,f,c
  8321  000ECA  A0D8               	btfss	status,0,c
  8322  000ECC  062D               	decf	(sprintf@width+1)^0,f,c
  8323  000ECE                     l6160:
  8324                           
  8325                           ;doprnt.c: 1374: if(flag & 0x4000) {
  8326  000ECE  AC30               	btfss	(sprintf@flag+1)^0,6,c
  8327  000ED0  EF6C  F007         	goto	u7051
  8328  000ED4  EF6E  F007         	goto	u7050
  8329  000ED8                     u7051:
  8330  000ED8  EF8A  F007         	goto	l6168
  8331  000EDC                     u7050:
  8332  000EDC                     
  8333                           ;doprnt.c: 1375: if(width > prec)
  8334  000EDC  0E80               	movlw	128
  8335  000EDE  BE2B               	btfsc	sprintf@prec^0,7,c
  8336  000EE0  0E7F               	movlw	127
  8337  000EE2  6E18               	movwf	??_sprintf^0,c
  8338  000EE4  502C               	movf	sprintf@width^0,w,c
  8339  000EE6  5C2B               	subwf	sprintf@prec^0,w,c
  8340  000EE8  502D               	movf	(sprintf@width+1)^0,w,c
  8341  000EEA  0A80               	xorlw	128
  8342  000EEC  5818               	subwfb	??_sprintf^0,w,c
  8343  000EEE  B0D8               	btfsc	status,0,c
  8344  000EF0  EF7C  F007         	goto	u7061
  8345  000EF4  EF7E  F007         	goto	u7060
  8346  000EF8                     u7061:
  8347  000EF8  EF86  F007         	goto	l6166
  8348  000EFC                     u7060:
  8349  000EFC                     
  8350                           ;doprnt.c: 1376: width -= prec;
  8351  000EFC  502B               	movf	sprintf@prec^0,w,c
  8352  000EFE  5E2C               	subwf	sprintf@width^0,f,c
  8353  000F00  0E00               	movlw	0
  8354  000F02  BE2B               	btfsc	sprintf@prec^0,7,c
  8355  000F04  0EFF               	movlw	255
  8356  000F06  5A2D               	subwfb	(sprintf@width+1)^0,f,c
  8357  000F08  EF8A  F007         	goto	l6168
  8358  000F0C                     l6166:
  8359                           
  8360                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  8361  000F0C  0E00               	movlw	0
  8362  000F0E  6E2D               	movwf	(sprintf@width+1)^0,c
  8363  000F10  0E00               	movlw	0
  8364  000F12  6E2C               	movwf	sprintf@width^0,c
  8365  000F14                     l6168:
  8366                           
  8367                           ;doprnt.c: 1379: };doprnt.c: 1383: if((flag & (;doprnt.c: 1385: 0x04|;doprnt.c: 1387: (0
      +                          xC0)|0x800)) == (0x40|0x800)) {
  8368  000F14  0EC4               	movlw	196
  8369  000F16  6E18               	movwf	??_sprintf^0,c
  8370  000F18  0E08               	movlw	8
  8371  000F1A  6E19               	movwf	(??_sprintf+1)^0,c
  8372  000F1C  C02F  F01A         	movff	sprintf@flag,??_sprintf+2
  8373  000F20  C030  F01B         	movff	sprintf@flag+1,??_sprintf+3
  8374  000F24  5018               	movf	??_sprintf^0,w,c
  8375  000F26  161A               	andwf	(??_sprintf+2)^0,f,c
  8376  000F28  5019               	movf	(??_sprintf+1)^0,w,c
  8377  000F2A  161B               	andwf	(??_sprintf+3)^0,f,c
  8378  000F2C  0E40               	movlw	64
  8379  000F2E  181A               	xorwf	(??_sprintf+2)^0,w,c
  8380  000F30  E107               	bnz	u7071
  8381  000F32  0E08               	movlw	8
  8382  000F34  181B               	xorwf	(??_sprintf+3)^0,w,c
  8383  000F36  A4D8               	btfss	status,2,c
  8384  000F38  EFA0  F007         	goto	u7071
  8385  000F3C  EFA2  F007         	goto	u7070
  8386  000F40                     u7071:
  8387  000F40  EFB0  F007         	goto	l6174
  8388  000F44                     u7070:
  8389  000F44                     
  8390                           ;doprnt.c: 1388: if(width)
  8391  000F44  502C               	movf	sprintf@width^0,w,c
  8392  000F46  102D               	iorwf	(sprintf@width+1)^0,w,c
  8393  000F48  B4D8               	btfsc	status,2,c
  8394  000F4A  EFA9  F007         	goto	u7081
  8395  000F4E  EFAB  F007         	goto	u7080
  8396  000F52                     u7081:
  8397  000F52  EFE0  F007         	goto	l6182
  8398  000F56                     u7080:
  8399  000F56                     
  8400                           ;doprnt.c: 1389: width--;
  8401  000F56  062C               	decf	sprintf@width^0,f,c
  8402  000F58  A0D8               	btfss	status,0,c
  8403  000F5A  062D               	decf	(sprintf@width+1)^0,f,c
  8404  000F5C  EFE0  F007         	goto	l6182
  8405  000F60                     l6174:
  8406                           
  8407                           ;doprnt.c: 1394: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  8408  000F60  0EC0               	movlw	192
  8409  000F62  6E18               	movwf	??_sprintf^0,c
  8410  000F64  0E08               	movlw	8
  8411  000F66  6E19               	movwf	(??_sprintf+1)^0,c
  8412  000F68  C02F  F01A         	movff	sprintf@flag,??_sprintf+2
  8413  000F6C  C030  F01B         	movff	sprintf@flag+1,??_sprintf+3
  8414  000F70  5018               	movf	??_sprintf^0,w,c
  8415  000F72  161A               	andwf	(??_sprintf+2)^0,f,c
  8416  000F74  5019               	movf	(??_sprintf+1)^0,w,c
  8417  000F76  161B               	andwf	(??_sprintf+3)^0,f,c
  8418  000F78  0E80               	movlw	128
  8419  000F7A  181A               	xorwf	(??_sprintf+2)^0,w,c
  8420  000F7C  E107               	bnz	u7091
  8421  000F7E  0E08               	movlw	8
  8422  000F80  181B               	xorwf	(??_sprintf+3)^0,w,c
  8423  000F82  A4D8               	btfss	status,2,c
  8424  000F84  EFC6  F007         	goto	u7091
  8425  000F88  EFC8  F007         	goto	u7090
  8426  000F8C                     u7091:
  8427  000F8C  EFE0  F007         	goto	l6182
  8428  000F90                     u7090:
  8429  000F90                     
  8430                           ;doprnt.c: 1398: if(width > 2)
  8431  000F90  BE2D               	btfsc	(sprintf@width+1)^0,7,c
  8432  000F92  EFD4  F007         	goto	u7101
  8433  000F96  502D               	movf	(sprintf@width+1)^0,w,c
  8434  000F98  E109               	bnz	u7100
  8435  000F9A  0E03               	movlw	3
  8436  000F9C  5C2C               	subwf	sprintf@width^0,w,c
  8437  000F9E  A0D8               	btfss	status,0,c
  8438  000FA0  EFD4  F007         	goto	u7101
  8439  000FA4  EFD6  F007         	goto	u7100
  8440  000FA8                     u7101:
  8441  000FA8  EFDC  F007         	goto	l6180
  8442  000FAC                     u7100:
  8443  000FAC                     
  8444                           ;doprnt.c: 1399: width -= 2;
  8445  000FAC  0EFE               	movlw	254
  8446  000FAE  262C               	addwf	sprintf@width^0,f,c
  8447  000FB0  0EFF               	movlw	255
  8448  000FB2  222D               	addwfc	(sprintf@width+1)^0,f,c
  8449  000FB4  EFE0  F007         	goto	l6182
  8450  000FB8                     l6180:
  8451                           
  8452                           ;doprnt.c: 1400: else;doprnt.c: 1401: width = 0;
  8453  000FB8  0E00               	movlw	0
  8454  000FBA  6E2D               	movwf	(sprintf@width+1)^0,c
  8455  000FBC  0E00               	movlw	0
  8456  000FBE  6E2C               	movwf	sprintf@width^0,c
  8457  000FC0                     l6182:
  8458                           
  8459                           ;doprnt.c: 1402: };doprnt.c: 1407: if(width > c)
  8460  000FC0  502E               	movf	sprintf@c^0,w,c
  8461  000FC2  6E18               	movwf	??_sprintf^0,c
  8462  000FC4  6A19               	clrf	(??_sprintf+1)^0,c
  8463  000FC6  502C               	movf	sprintf@width^0,w,c
  8464  000FC8  5C18               	subwf	??_sprintf^0,w,c
  8465  000FCA  5019               	movf	(??_sprintf+1)^0,w,c
  8466  000FCC  0A80               	xorlw	128
  8467  000FCE  6E1A               	movwf	(??_sprintf+2)^0,c
  8468  000FD0  502D               	movf	(sprintf@width+1)^0,w,c
  8469  000FD2  0A80               	xorlw	128
  8470  000FD4  581A               	subwfb	(??_sprintf+2)^0,w,c
  8471  000FD6  B0D8               	btfsc	status,0,c
  8472  000FD8  EFF0  F007         	goto	u7111
  8473  000FDC  EFF2  F007         	goto	u7110
  8474  000FE0                     u7111:
  8475  000FE0  EFF8  F007         	goto	l6186
  8476  000FE4                     u7110:
  8477  000FE4                     
  8478                           ;doprnt.c: 1408: width -= c;
  8479  000FE4  502E               	movf	sprintf@c^0,w,c
  8480  000FE6  5E2C               	subwf	sprintf@width^0,f,c
  8481  000FE8  0E00               	movlw	0
  8482  000FEA  5A2D               	subwfb	(sprintf@width+1)^0,f,c
  8483  000FEC  EFFC  F007         	goto	l6188
  8484  000FF0                     l6186:
  8485                           
  8486                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  8487  000FF0  0E00               	movlw	0
  8488  000FF2  6E2D               	movwf	(sprintf@width+1)^0,c
  8489  000FF4  0E00               	movlw	0
  8490  000FF6  6E2C               	movwf	sprintf@width^0,c
  8491  000FF8                     l6188:
  8492                           
  8493                           ;doprnt.c: 1413: if(flag & 0x04) {
  8494  000FF8  A42F               	btfss	sprintf@flag^0,2,c
  8495  000FFA  EF01  F008         	goto	u7121
  8496  000FFE  EF03  F008         	goto	u7120
  8497  001002                     u7121:
  8498  001002  EF83  F008         	goto	l6224
  8499  001006                     u7120:
  8500  001006                     
  8501                           ;doprnt.c: 1418: if(flag & 0x03)
  8502  001006  0E03               	movlw	3
  8503  001008  142F               	andwf	sprintf@flag^0,w,c
  8504  00100A  6E18               	movwf	??_sprintf^0,c
  8505  00100C  0E00               	movlw	0
  8506  00100E  1430               	andwf	(sprintf@flag+1)^0,w,c
  8507  001010  6E19               	movwf	(??_sprintf+1)^0,c
  8508  001012  5018               	movf	??_sprintf^0,w,c
  8509  001014  1019               	iorwf	(??_sprintf+1)^0,w,c
  8510  001016  B4D8               	btfsc	status,2,c
  8511  001018  EF10  F008         	goto	u7131
  8512  00101C  EF12  F008         	goto	u7130
  8513  001020                     u7131:
  8514  001020  EF1C  F008         	goto	l741
  8515  001024                     u7130:
  8516  001024                     
  8517                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  8518  001024  C00E  FFD9         	movff	sprintf@sp,fsr2l
  8519  001028  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  8520  00102C  0E2D               	movlw	45
  8521  00102E  6EDF               	movwf	indf2,c
  8522  001030                     l6194:
  8523  001030  4A0E               	infsnz	sprintf@sp^0,f,c
  8524  001032  2A0F               	incf	(sprintf@sp+1)^0,f,c
  8525  001034  EF64  F008         	goto	l6216
  8526  001038                     l741:
  8527                           
  8528                           ;doprnt.c: 1422: else;doprnt.c: 1425: if(flag & 0x01)
  8529  001038  A02F               	btfss	sprintf@flag^0,0,c
  8530  00103A  EF21  F008         	goto	u7141
  8531  00103E  EF23  F008         	goto	u7140
  8532  001042                     u7141:
  8533  001042  EF2B  F008         	goto	l6200
  8534  001046                     u7140:
  8535  001046                     
  8536                           ;doprnt.c: 1426: ((*sp++ = (' ')));
  8537  001046  C00E  FFD9         	movff	sprintf@sp,fsr2l
  8538  00104A  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  8539  00104E  0E20               	movlw	32
  8540  001050  6EDF               	movwf	indf2,c
  8541  001052  EF18  F008         	goto	l6194
  8542  001056                     l6200:
  8543                           
  8544                           ;doprnt.c: 1429: else if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  8545  001056  0EC0               	movlw	192
  8546  001058  6E18               	movwf	??_sprintf^0,c
  8547  00105A  0E08               	movlw	8
  8548  00105C  6E19               	movwf	(??_sprintf+1)^0,c
  8549  00105E  C02F  F01A         	movff	sprintf@flag,??_sprintf+2
  8550  001062  C030  F01B         	movff	sprintf@flag+1,??_sprintf+3
  8551  001066  5018               	movf	??_sprintf^0,w,c
  8552  001068  161A               	andwf	(??_sprintf+2)^0,f,c
  8553  00106A  5019               	movf	(??_sprintf+1)^0,w,c
  8554  00106C  161B               	andwf	(??_sprintf+3)^0,f,c
  8555  00106E  0E80               	movlw	128
  8556  001070  181A               	xorwf	(??_sprintf+2)^0,w,c
  8557  001072  E107               	bnz	u7151
  8558  001074  0E08               	movlw	8
  8559  001076  181B               	xorwf	(??_sprintf+3)^0,w,c
  8560  001078  A4D8               	btfss	status,2,c
  8561  00107A  EF41  F008         	goto	u7151
  8562  00107E  EF43  F008         	goto	u7150
  8563  001082                     u7151:
  8564  001082  EF64  F008         	goto	l6216
  8565  001086                     u7150:
  8566  001086                     
  8567                           ;doprnt.c: 1430: ((*sp++ = ('0')));
  8568  001086  C00E  FFD9         	movff	sprintf@sp,fsr2l
  8569  00108A  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  8570  00108E  0E30               	movlw	48
  8571  001090  6EDF               	movwf	indf2,c
  8572  001092  4A0E               	infsnz	sprintf@sp^0,f,c
  8573  001094  2A0F               	incf	(sprintf@sp+1)^0,f,c
  8574  001096                     
  8575                           ;doprnt.c: 1432: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
  8576  001096  BA2F               	btfsc	sprintf@flag^0,5,c
  8577  001098  EF50  F008         	goto	u7161
  8578  00109C  EF52  F008         	goto	u7160
  8579  0010A0                     u7161:
  8580  0010A0  EF58  F008         	goto	l6210
  8581  0010A4                     u7160:
  8582  0010A4  0E00               	movlw	0
  8583  0010A6  6E20               	movwf	(_sprintf$1621+1)^0,c
  8584  0010A8  0E78               	movlw	120
  8585  0010AA  6E1F               	movwf	_sprintf$1621^0,c
  8586  0010AC  EF5C  F008         	goto	l6212
  8587  0010B0                     l6210:
  8588  0010B0  0E00               	movlw	0
  8589  0010B2  6E20               	movwf	(_sprintf$1621+1)^0,c
  8590  0010B4  0E58               	movlw	88
  8591  0010B6  6E1F               	movwf	_sprintf$1621^0,c
  8592  0010B8                     l6212:
  8593  0010B8  C00E  FFD9         	movff	sprintf@sp,fsr2l
  8594  0010BC  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  8595  0010C0  C01F  FFDF         	movff	_sprintf$1621,indf2
  8596  0010C4  EF18  F008         	goto	l6194
  8597  0010C8                     l6216:
  8598                           
  8599                           ;doprnt.c: 1438: };doprnt.c: 1441: if(width)
  8600  0010C8  502C               	movf	sprintf@width^0,w,c
  8601  0010CA  102D               	iorwf	(sprintf@width+1)^0,w,c
  8602  0010CC  B4D8               	btfsc	status,2,c
  8603  0010CE  EF6B  F008         	goto	u7171
  8604  0010D2  EF6D  F008         	goto	u7170
  8605  0010D6                     u7171:
  8606  0010D6  EFBC  F009         	goto	l6288
  8607  0010DA                     u7170:
  8608  0010DA                     l6218:
  8609                           
  8610                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  8611  0010DA  C00E  FFD9         	movff	sprintf@sp,fsr2l
  8612  0010DE  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  8613  0010E2  0E30               	movlw	48
  8614  0010E4  6EDF               	movwf	indf2,c
  8615  0010E6  4A0E               	infsnz	sprintf@sp^0,f,c
  8616  0010E8  2A0F               	incf	(sprintf@sp+1)^0,f,c
  8617  0010EA                     
  8618                           ;doprnt.c: 1444: while(--width);
  8619  0010EA  062C               	decf	sprintf@width^0,f,c
  8620  0010EC  A0D8               	btfss	status,0,c
  8621  0010EE  062D               	decf	(sprintf@width+1)^0,f,c
  8622  0010F0  502C               	movf	sprintf@width^0,w,c
  8623  0010F2  102D               	iorwf	(sprintf@width+1)^0,w,c
  8624  0010F4  A4D8               	btfss	status,2,c
  8625  0010F6  EF7F  F008         	goto	u7181
  8626  0010FA  EF81  F008         	goto	u7180
  8627  0010FE                     u7181:
  8628  0010FE  EF6D  F008         	goto	l6218
  8629  001102                     u7180:
  8630  001102  EFBC  F009         	goto	l6288
  8631  001106                     l6224:
  8632                           
  8633                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1452: && !(flag & 0x08);doprnt.c: 
      +                          1454: )
  8634  001106  502C               	movf	sprintf@width^0,w,c
  8635  001108  102D               	iorwf	(sprintf@width+1)^0,w,c
  8636  00110A  B4D8               	btfsc	status,2,c
  8637  00110C  EF8A  F008         	goto	u7191
  8638  001110  EF8C  F008         	goto	u7190
  8639  001114                     u7191:
  8640  001114  EFA7  F008         	goto	l6234
  8641  001118                     u7190:
  8642  001118  B62F               	btfsc	sprintf@flag^0,3,c
  8643  00111A  EF91  F008         	goto	u7201
  8644  00111E  EF93  F008         	goto	u7200
  8645  001122                     u7201:
  8646  001122  EFA7  F008         	goto	l6234
  8647  001126                     u7200:
  8648  001126                     l6228:
  8649                           
  8650                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  8651  001126  C00E  FFD9         	movff	sprintf@sp,fsr2l
  8652  00112A  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  8653  00112E  0E20               	movlw	32
  8654  001130  6EDF               	movwf	indf2,c
  8655  001132  4A0E               	infsnz	sprintf@sp^0,f,c
  8656  001134  2A0F               	incf	(sprintf@sp+1)^0,f,c
  8657  001136                     
  8658                           ;doprnt.c: 1457: while(--width);
  8659  001136  062C               	decf	sprintf@width^0,f,c
  8660  001138  A0D8               	btfss	status,0,c
  8661  00113A  062D               	decf	(sprintf@width+1)^0,f,c
  8662  00113C  502C               	movf	sprintf@width^0,w,c
  8663  00113E  102D               	iorwf	(sprintf@width+1)^0,w,c
  8664  001140  A4D8               	btfss	status,2,c
  8665  001142  EFA5  F008         	goto	u7211
  8666  001146  EFA7  F008         	goto	u7210
  8667  00114A                     u7211:
  8668  00114A  EF93  F008         	goto	l6228
  8669  00114E                     u7210:
  8670  00114E                     l6234:
  8671                           
  8672                           ;doprnt.c: 1464: if(flag & 0x03)
  8673  00114E  0E03               	movlw	3
  8674  001150  142F               	andwf	sprintf@flag^0,w,c
  8675  001152  6E18               	movwf	??_sprintf^0,c
  8676  001154  0E00               	movlw	0
  8677  001156  1430               	andwf	(sprintf@flag+1)^0,w,c
  8678  001158  6E19               	movwf	(??_sprintf+1)^0,c
  8679  00115A  5018               	movf	??_sprintf^0,w,c
  8680  00115C  1019               	iorwf	(??_sprintf+1)^0,w,c
  8681  00115E  B4D8               	btfsc	status,2,c
  8682  001160  EFB4  F008         	goto	u7221
  8683  001164  EFB6  F008         	goto	u7220
  8684  001168                     u7221:
  8685  001168  EFC0  F008         	goto	l757
  8686  00116C                     u7220:
  8687  00116C                     
  8688                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  8689  00116C  C00E  FFD9         	movff	sprintf@sp,fsr2l
  8690  001170  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  8691  001174  0E2D               	movlw	45
  8692  001176  6EDF               	movwf	indf2,c
  8693  001178                     l6238:
  8694  001178  4A0E               	infsnz	sprintf@sp^0,f,c
  8695  00117A  2A0F               	incf	(sprintf@sp+1)^0,f,c
  8696  00117C  EFCF  F008         	goto	l6244
  8697  001180                     l757:
  8698                           
  8699                           ;doprnt.c: 1469: else if(flag & 0x01)
  8700  001180  A02F               	btfss	sprintf@flag^0,0,c
  8701  001182  EFC5  F008         	goto	u7231
  8702  001186  EFC7  F008         	goto	u7230
  8703  00118A                     u7231:
  8704  00118A  EFCF  F008         	goto	l6244
  8705  00118E                     u7230:
  8706  00118E                     
  8707                           ;doprnt.c: 1470: ((*sp++ = (' ')));
  8708  00118E  C00E  FFD9         	movff	sprintf@sp,fsr2l
  8709  001192  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  8710  001196  0E20               	movlw	32
  8711  001198  6EDF               	movwf	indf2,c
  8712  00119A  EFBC  F008         	goto	l6238
  8713  00119E                     l6244:
  8714                           
  8715                           ;doprnt.c: 1474: if((flag & ((0xC0)|0x800)) == (0x40|0x800))
  8716  00119E  0EC0               	movlw	192
  8717  0011A0  6E18               	movwf	??_sprintf^0,c
  8718  0011A2  0E08               	movlw	8
  8719  0011A4  6E19               	movwf	(??_sprintf+1)^0,c
  8720  0011A6  C02F  F01A         	movff	sprintf@flag,??_sprintf+2
  8721  0011AA  C030  F01B         	movff	sprintf@flag+1,??_sprintf+3
  8722  0011AE  5018               	movf	??_sprintf^0,w,c
  8723  0011B0  161A               	andwf	(??_sprintf+2)^0,f,c
  8724  0011B2  5019               	movf	(??_sprintf+1)^0,w,c
  8725  0011B4  161B               	andwf	(??_sprintf+3)^0,f,c
  8726  0011B6  0E40               	movlw	64
  8727  0011B8  181A               	xorwf	(??_sprintf+2)^0,w,c
  8728  0011BA  E107               	bnz	u7241
  8729  0011BC  0E08               	movlw	8
  8730  0011BE  181B               	xorwf	(??_sprintf+3)^0,w,c
  8731  0011C0  A4D8               	btfss	status,2,c
  8732  0011C2  EFE5  F008         	goto	u7241
  8733  0011C6  EFE7  F008         	goto	u7240
  8734  0011CA                     u7241:
  8735  0011CA  EFF1  F008         	goto	l6250
  8736  0011CE                     u7240:
  8737  0011CE                     
  8738                           ;doprnt.c: 1475: ((*sp++ = ('0')));
  8739  0011CE  C00E  FFD9         	movff	sprintf@sp,fsr2l
  8740  0011D2  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  8741  0011D6  0E30               	movlw	48
  8742  0011D8  6EDF               	movwf	indf2,c
  8743  0011DA                     l6248:
  8744  0011DA  4A0E               	infsnz	sprintf@sp^0,f,c
  8745  0011DC  2A0F               	incf	(sprintf@sp+1)^0,f,c
  8746  0011DE  EFBC  F009         	goto	l6288
  8747  0011E2                     l6250:
  8748                           
  8749                           ;doprnt.c: 1476: else;doprnt.c: 1480: if((flag & ((0xC0)|0x800)) == (0x80|0x800)) {
  8750  0011E2  0EC0               	movlw	192
  8751  0011E4  6E18               	movwf	??_sprintf^0,c
  8752  0011E6  0E08               	movlw	8
  8753  0011E8  6E19               	movwf	(??_sprintf+1)^0,c
  8754  0011EA  C02F  F01A         	movff	sprintf@flag,??_sprintf+2
  8755  0011EE  C030  F01B         	movff	sprintf@flag+1,??_sprintf+3
  8756  0011F2  5018               	movf	??_sprintf^0,w,c
  8757  0011F4  161A               	andwf	(??_sprintf+2)^0,f,c
  8758  0011F6  5019               	movf	(??_sprintf+1)^0,w,c
  8759  0011F8  161B               	andwf	(??_sprintf+3)^0,f,c
  8760  0011FA  0E80               	movlw	128
  8761  0011FC  181A               	xorwf	(??_sprintf+2)^0,w,c
  8762  0011FE  E107               	bnz	u7251
  8763  001200  0E08               	movlw	8
  8764  001202  181B               	xorwf	(??_sprintf+3)^0,w,c
  8765  001204  A4D8               	btfss	status,2,c
  8766  001206  EF07  F009         	goto	u7251
  8767  00120A  EF09  F009         	goto	u7250
  8768  00120E                     u7251:
  8769  00120E  EF2A  F009         	goto	l753
  8770  001212                     u7250:
  8771  001212                     
  8772                           ;doprnt.c: 1484: ((*sp++ = ('0')));
  8773  001212  C00E  FFD9         	movff	sprintf@sp,fsr2l
  8774  001216  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  8775  00121A  0E30               	movlw	48
  8776  00121C  6EDF               	movwf	indf2,c
  8777  00121E  4A0E               	infsnz	sprintf@sp^0,f,c
  8778  001220  2A0F               	incf	(sprintf@sp+1)^0,f,c
  8779  001222                     
  8780                           ;doprnt.c: 1486: ((*sp++ = (flag & 0x20 ? 'X' : 'x')));
  8781  001222  BA2F               	btfsc	sprintf@flag^0,5,c
  8782  001224  EF16  F009         	goto	u7261
  8783  001228  EF18  F009         	goto	u7260
  8784  00122C                     u7261:
  8785  00122C  EF1E  F009         	goto	l6260
  8786  001230                     u7260:
  8787  001230  0E00               	movlw	0
  8788  001232  6E22               	movwf	(_sprintf$1622+1)^0,c
  8789  001234  0E78               	movlw	120
  8790  001236  6E21               	movwf	_sprintf$1622^0,c
  8791  001238  EF22  F009         	goto	l6262
  8792  00123C                     l6260:
  8793  00123C  0E00               	movlw	0
  8794  00123E  6E22               	movwf	(_sprintf$1622+1)^0,c
  8795  001240  0E58               	movlw	88
  8796  001242  6E21               	movwf	_sprintf$1622^0,c
  8797  001244                     l6262:
  8798  001244  C00E  FFD9         	movff	sprintf@sp,fsr2l
  8799  001248  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  8800  00124C  C021  FFDF         	movff	_sprintf$1622,indf2
  8801  001250  EFED  F008         	goto	l6248
  8802  001254                     l753:
  8803                           
  8804                           ;doprnt.c: 1492: };doprnt.c: 1495: };doprnt.c: 1500: while(prec--) {
  8805  001254  EFBC  F009         	goto	l6288
  8806  001258                     l6266:
  8807                           
  8808                           ;doprnt.c: 1512: case 0xC0:;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 1
      +                          0 + '0';
  8809  001258  502B               	movf	sprintf@prec^0,w,c
  8810  00125A  0D02               	mullw	2
  8811  00125C  0E0D               	movlw	low _dpowers
  8812  00125E  24F3               	addwf	243,w,c
  8813  001260  6EF6               	movwf	tblptrl,c
  8814  001262  0E08               	movlw	high _dpowers
  8815  001264  20F4               	addwfc	244,w,c
  8816  001266  6EF7               	movwf	tblptrh,c
  8817  001268                     	if	0	;There are less than 3 active tblptr bytes
  8818  001268                     	endif
  8819  001268  0009               	tblrd		*+
  8820  00126A  CFF5 F004          	movff	tablat,___lwdiv@divisor
  8821  00126E  000A               	tblrd		*-
  8822  001270  CFF5 F005          	movff	tablat,___lwdiv@divisor+1
  8823  001274  C029  F002         	movff	sprintf@val,___lwdiv@dividend
  8824  001278  C02A  F003         	movff	sprintf@val+1,___lwdiv@dividend+1
  8825  00127C  ECD3  F01C         	call	___lwdiv	;wreg free
  8826  001280  C002  F009         	movff	?___lwdiv,___lwmod@dividend
  8827  001284  C003  F00A         	movff	?___lwdiv+1,___lwmod@dividend+1
  8828  001288  0E00               	movlw	0
  8829  00128A  6E0C               	movwf	(___lwmod@divisor+1)^0,c
  8830  00128C  0E0A               	movlw	10
  8831  00128E  6E0B               	movwf	___lwmod@divisor^0,c
  8832  001290  EC77  F01D         	call	___lwmod	;wreg free
  8833  001294  5009               	movf	?___lwmod^0,w,c
  8834  001296  0F30               	addlw	48
  8835  001298  6E2E               	movwf	sprintf@c^0,c
  8836                           
  8837                           ;doprnt.c: 1517: break;
  8838  00129A  EFB4  F009         	goto	l6284
  8839  00129E                     l6268:
  8840                           
  8841                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
  8842  00129E  C029  F002         	movff	sprintf@val,___lwdiv@dividend
  8843  0012A2  C02A  F003         	movff	sprintf@val+1,___lwdiv@dividend+1
  8844  0012A6  502B               	movf	sprintf@prec^0,w,c
  8845  0012A8  0D02               	mullw	2
  8846  0012AA  0E17               	movlw	low _hexpowers
  8847  0012AC  24F3               	addwf	243,w,c
  8848  0012AE  6EF6               	movwf	tblptrl,c
  8849  0012B0  0E08               	movlw	high _hexpowers
  8850  0012B2  20F4               	addwfc	244,w,c
  8851  0012B4  6EF7               	movwf	tblptrh,c
  8852  0012B6                     	if	0	;There are less than 3 active tblptr bytes
  8853  0012B6                     	endif
  8854  0012B6  0009               	tblrd		*+
  8855  0012B8  CFF5 F004          	movff	tablat,___lwdiv@divisor
  8856  0012BC  000A               	tblrd		*-
  8857  0012BE  CFF5 F005          	movff	tablat,___lwdiv@divisor+1
  8858  0012C2  ECD3  F01C         	call	___lwdiv	;wreg free
  8859  0012C6  5002               	movf	?___lwdiv^0,w,c
  8860  0012C8  0B0F               	andlw	15
  8861  0012CA  6E1C               	movwf	sprintf@idx^0,c
  8862  0012CC                     
  8863                           ;doprnt.c: 1528: c = (flag & 0x20 ? "0123456789ABCDEF" : "0123456789abcdef")[idx];
  8864  0012CC  BA2F               	btfsc	sprintf@flag^0,5,c
  8865  0012CE  EF6B  F009         	goto	u7271
  8866  0012D2  EF6D  F009         	goto	u7270
  8867  0012D6                     u7271:
  8868  0012D6  EF73  F009         	goto	l6274
  8869  0012DA                     u7270:
  8870  0012DA  0E7E               	movlw	low STR_11
  8871  0012DC  6E23               	movwf	_sprintf$1628^0,c
  8872  0012DE  0E08               	movlw	high STR_11
  8873  0012E0  6E24               	movwf	(_sprintf$1628+1)^0,c
  8874  0012E2  EF77  F009         	goto	l6276
  8875  0012E6                     l6274:
  8876  0012E6  0E6D               	movlw	low STR_10
  8877  0012E8  6E23               	movwf	_sprintf$1628^0,c
  8878  0012EA  0E08               	movlw	high STR_10
  8879  0012EC  6E24               	movwf	(_sprintf$1628+1)^0,c
  8880  0012EE                     l6276:
  8881  0012EE  501C               	movf	sprintf@idx^0,w,c
  8882  0012F0  2423               	addwf	_sprintf$1628^0,w,c
  8883  0012F2  6E18               	movwf	??_sprintf^0,c
  8884  0012F4  0E00               	movlw	0
  8885  0012F6  2024               	addwfc	(_sprintf$1628+1)^0,w,c
  8886  0012F8  6E19               	movwf	(??_sprintf+1)^0,c
  8887  0012FA  C018  FFF6         	movff	??_sprintf,tblptrl
  8888  0012FE  C019  FFF7         	movff	??_sprintf+1,tblptrh
  8889  001302                     	if	0	;tblptru may be non-zero
  8890  001302                     	endif
  8891  001302                     	if	0	;tblptru may be non-zero
  8892  001302                     	endif
  8893  001302  0008               	tblrd		*
  8894  001304  CFF5 F02E          	movff	tablat,sprintf@c
  8895                           
  8896                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  8897  001308  EFB4  F009         	goto	l6284
  8898  00130C                     l6278:
  8899                           
  8900                           ;doprnt.c: 1544: c = ((val / octpowers[(unsigned char)prec]) & 07) + '0';
  8901  00130C  C029  F002         	movff	sprintf@val,___lwdiv@dividend
  8902  001310  C02A  F003         	movff	sprintf@val+1,___lwdiv@dividend+1
  8903  001314  502B               	movf	sprintf@prec^0,w,c
  8904  001316  0D02               	mullw	2
  8905  001318  0E01               	movlw	low _octpowers
  8906  00131A  24F3               	addwf	243,w,c
  8907  00131C  6EF6               	movwf	tblptrl,c
  8908  00131E  0E08               	movlw	high _octpowers
  8909  001320  20F4               	addwfc	244,w,c
  8910  001322  6EF7               	movwf	tblptrh,c
  8911  001324                     	if	0	;There are less than 3 active tblptr bytes
  8912  001324                     	endif
  8913  001324  0009               	tblrd		*+
  8914  001326  CFF5 F004          	movff	tablat,___lwdiv@divisor
  8915  00132A  000A               	tblrd		*-
  8916  00132C  CFF5 F005          	movff	tablat,___lwdiv@divisor+1
  8917  001330  ECD3  F01C         	call	___lwdiv	;wreg free
  8918  001334  5002               	movf	?___lwdiv^0,w,c
  8919  001336  0B07               	andlw	7
  8920  001338  0F30               	addlw	48
  8921  00133A  6E2E               	movwf	sprintf@c^0,c
  8922                           
  8923                           ;doprnt.c: 1546: break;
  8924  00133C  EFB4  F009         	goto	l6284
  8925  001340                     l6282:
  8926  001340  502F               	movf	sprintf@flag^0,w,c
  8927  001342  0BC0               	andlw	192
  8928                           
  8929                           ; Switch size 1, requested type "simple"
  8930                           ; Number of cases is 4, Range of values is 0 to 192
  8931                           ; switch strategies available:
  8932                           ; Name         Instructions Cycles
  8933                           ; simple_byte           13     7 (average)
  8934                           ;	Chosen strategy is simple_byte
  8935  001344  0A00               	xorlw	0	; case 0
  8936  001346  B4D8               	btfsc	status,2,c
  8937  001348  EF2C  F009         	goto	l6266
  8938  00134C  0A40               	xorlw	64	; case 64
  8939  00134E  B4D8               	btfsc	status,2,c
  8940  001350  EF86  F009         	goto	l6278
  8941  001354  0AC0               	xorlw	192	; case 128
  8942  001356  B4D8               	btfsc	status,2,c
  8943  001358  EF4F  F009         	goto	l6268
  8944  00135C  0A40               	xorlw	64	; case 192
  8945  00135E  B4D8               	btfsc	status,2,c
  8946  001360  EF2C  F009         	goto	l6266
  8947  001364  EFB4  F009         	goto	l6284
  8948  001368                     l6284:
  8949                           
  8950                           ;doprnt.c: 1550: ((*sp++ = (c)));
  8951  001368  C00E  FFD9         	movff	sprintf@sp,fsr2l
  8952  00136C  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  8953  001370  C02E  FFDF         	movff	sprintf@c,indf2
  8954  001374  EFED  F008         	goto	l6248
  8955  001378                     l6288:
  8956  001378  062B               	decf	sprintf@prec^0,f,c
  8957  00137A  282B               	incf	sprintf@prec^0,w,c
  8958  00137C  A4D8               	btfss	status,2,c
  8959  00137E  EFC3  F009         	goto	u7281
  8960  001382  EFC5  F009         	goto	u7280
  8961  001386                     u7281:
  8962  001386  EFA0  F009         	goto	l6282
  8963  00138A                     u7280:
  8964  00138A                     
  8965                           ;doprnt.c: 1551: };doprnt.c: 1554: if((flag & 0x08) && width > 0)
  8966  00138A  A62F               	btfss	sprintf@flag^0,3,c
  8967  00138C  EFCA  F009         	goto	u7291
  8968  001390  EFCC  F009         	goto	u7290
  8969  001394                     u7291:
  8970  001394  EFED  F009         	goto	l6298
  8971  001398                     u7290:
  8972  001398  BE2D               	btfsc	(sprintf@width+1)^0,7,c
  8973  00139A  EFD7  F009         	goto	u7301
  8974  00139E  502D               	movf	(sprintf@width+1)^0,w,c
  8975  0013A0  E108               	bnz	u7300
  8976  0013A2  042C               	decf	sprintf@width^0,w,c
  8977  0013A4  A0D8               	btfss	status,0,c
  8978  0013A6  EFD7  F009         	goto	u7301
  8979  0013AA  EFD9  F009         	goto	u7300
  8980  0013AE                     u7301:
  8981  0013AE  EFED  F009         	goto	l6298
  8982  0013B2                     u7300:
  8983  0013B2                     l6292:
  8984                           
  8985                           ;doprnt.c: 1556: ((*sp++ = (' ')));
  8986  0013B2  C00E  FFD9         	movff	sprintf@sp,fsr2l
  8987  0013B6  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  8988  0013BA  0E20               	movlw	32
  8989  0013BC  6EDF               	movwf	indf2,c
  8990  0013BE  4A0E               	infsnz	sprintf@sp^0,f,c
  8991  0013C0  2A0F               	incf	(sprintf@sp+1)^0,f,c
  8992  0013C2                     
  8993                           ;doprnt.c: 1557: while(--width);
  8994  0013C2  062C               	decf	sprintf@width^0,f,c
  8995  0013C4  A0D8               	btfss	status,0,c
  8996  0013C6  062D               	decf	(sprintf@width+1)^0,f,c
  8997  0013C8  502C               	movf	sprintf@width^0,w,c
  8998  0013CA  102D               	iorwf	(sprintf@width+1)^0,w,c
  8999  0013CC  A4D8               	btfss	status,2,c
  9000  0013CE  EFEB  F009         	goto	u7311
  9001  0013D2  EFED  F009         	goto	u7310
  9002  0013D6                     u7311:
  9003  0013D6  EFD9  F009         	goto	l6292
  9004  0013DA                     u7310:
  9005  0013DA                     l6298:
  9006  0013DA  C010  FFF6         	movff	sprintf@f,tblptrl
  9007  0013DE  C011  FFF7         	movff	sprintf@f+1,tblptrh
  9008  0013E2  4A10               	infsnz	sprintf@f^0,f,c
  9009  0013E4  2A11               	incf	(sprintf@f+1)^0,f,c
  9010  0013E6                     	if	0	;tblptru may be non-zero
  9011  0013E6                     	endif
  9012  0013E6                     	if	0	;tblptru may be non-zero
  9013  0013E6                     	endif
  9014  0013E6  0008               	tblrd		*
  9015  0013E8  CFF5 F02E          	movff	tablat,sprintf@c
  9016  0013EC  502E               	movf	sprintf@c^0,w,c
  9017  0013EE  A4D8               	btfss	status,2,c
  9018  0013F0  EFFC  F009         	goto	u7321
  9019  0013F4  EFFE  F009         	goto	u7320
  9020  0013F8                     u7321:
  9021  0013F8  EF71  F004         	goto	l5950
  9022  0013FC                     u7320:
  9023  0013FC                     l6300:
  9024                           
  9025                           ;doprnt.c: 1564: *sp = 0;
  9026  0013FC  C00E  FFD9         	movff	sprintf@sp,fsr2l
  9027  001400  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  9028  001404  0E00               	movlw	0
  9029  001406  6EDF               	movwf	indf2,c
  9030  001408  0012               	return		;funcret
  9031  00140A                     __end_of_sprintf:
  9032                           	callstack 0
  9033                           
  9034 ;; *************** function _isdigit *****************
  9035 ;; Defined at:
  9036 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\isdigit.c"
  9037 ;; Parameters:    Size  Location     Type
  9038 ;;  c               1    wreg     unsigned char 
  9039 ;; Auto vars:     Size  Location     Type
  9040 ;;  c               1    3[COMRAM] unsigned char 
  9041 ;; Return value:  Size  Location     Type
  9042 ;;		None               void
  9043 ;; Registers used:
  9044 ;;		wreg, status,2, status,0
  9045 ;; Tracked objects:
  9046 ;;		On entry : 0/0
  9047 ;;		On exit  : 0/0
  9048 ;;		Unchanged: 0/0
  9049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9050 ;;      Params:         0       0       0       0       0       0       0       0       0
  9051 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9052 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9053 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9054 ;;Total ram usage:        3 bytes
  9055 ;; Hardware stack levels used:    1
  9056 ;; Hardware stack levels required when called:    3
  9057 ;; This function calls:
  9058 ;;		Nothing
  9059 ;; This function is called by:
  9060 ;;		_sprintf
  9061 ;; This function uses a non-reentrant model
  9062 ;;
  9063                           
  9064                           	psect	text31
  9065  003D2C                     __ptext31:
  9066                           	callstack 0
  9067  003D2C                     _isdigit:
  9068                           	callstack 25
  9069                           
  9070                           ;incstack = 0
  9071                           ;isdigit@c stored from wreg
  9072  003D2C  6E04               	movwf	isdigit@c^0,c
  9073  003D2E  0E00               	movlw	0
  9074  003D30  6E03               	movwf	_isdigit$2113^0,c
  9075  003D32  0E3A               	movlw	58
  9076  003D34  6004               	cpfslt	isdigit@c^0,c
  9077  003D36  EF9F  F01E         	goto	u6401
  9078  003D3A  EFA1  F01E         	goto	u6400
  9079  003D3E                     u6401:
  9080  003D3E  EFAB  F01E         	goto	l5696
  9081  003D42                     u6400:
  9082  003D42  0E2F               	movlw	47
  9083  003D44  6404               	cpfsgt	isdigit@c^0,c
  9084  003D46  EFA7  F01E         	goto	u6411
  9085  003D4A  EFA9  F01E         	goto	u6410
  9086  003D4E                     u6411:
  9087  003D4E  EFAB  F01E         	goto	l5696
  9088  003D52                     u6410:
  9089  003D52  0E01               	movlw	1
  9090  003D54  6E03               	movwf	_isdigit$2113^0,c
  9091  003D56                     l5696:
  9092  003D56  C003  F002         	movff	_isdigit$2113,??_isdigit
  9093  003D5A  3002               	rrcf	??_isdigit^0,w,c
  9094  003D5C  0012               	return		;funcret
  9095  003D5E                     __end_of_isdigit:
  9096                           	callstack 0
  9097                           
  9098 ;; *************** function ___wmul *****************
  9099 ;; Defined at:
  9100 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  9101 ;; Parameters:    Size  Location     Type
  9102 ;;  multiplier      2    1[COMRAM] unsigned int 
  9103 ;;  multiplicand    2    3[COMRAM] unsigned int 
  9104 ;; Auto vars:     Size  Location     Type
  9105 ;;  product         2    5[COMRAM] unsigned int 
  9106 ;; Return value:  Size  Location     Type
  9107 ;;                  2    1[COMRAM] unsigned int 
  9108 ;; Registers used:
  9109 ;;		wreg, status,2, status,0, prodl, prodh
  9110 ;; Tracked objects:
  9111 ;;		On entry : 0/0
  9112 ;;		On exit  : 0/0
  9113 ;;		Unchanged: 0/0
  9114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9115 ;;      Params:         4       0       0       0       0       0       0       0       0
  9116 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9118 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9119 ;;Total ram usage:        6 bytes
  9120 ;; Hardware stack levels used:    1
  9121 ;; Hardware stack levels required when called:    3
  9122 ;; This function calls:
  9123 ;;		Nothing
  9124 ;; This function is called by:
  9125 ;;		_sprintf
  9126 ;; This function uses a non-reentrant model
  9127 ;;
  9128                           
  9129                           	psect	text32
  9130  003DC0                     __ptext32:
  9131                           	callstack 0
  9132  003DC0                     ___wmul:
  9133                           	callstack 25
  9134  003DC0  5002               	movf	___wmul@multiplier^0,w,c
  9135  003DC2  0204               	mulwf	___wmul@multiplicand^0,c
  9136  003DC4  CFF3 F006          	movff	prodl,___wmul@product
  9137  003DC8  CFF4 F007          	movff	prodh,___wmul@product+1
  9138  003DCC  5002               	movf	___wmul@multiplier^0,w,c
  9139  003DCE  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  9140  003DD0  50F3               	movf	243,w,c
  9141  003DD2  2607               	addwf	(___wmul@product+1)^0,f,c
  9142  003DD4  5003               	movf	(___wmul@multiplier+1)^0,w,c
  9143  003DD6  0204               	mulwf	___wmul@multiplicand^0,c
  9144  003DD8  50F3               	movf	243,w,c
  9145  003DDA  2607               	addwf	(___wmul@product+1)^0,f,c
  9146  003DDC  C006  F002         	movff	___wmul@product,?___wmul
  9147  003DE0  C007  F003         	movff	___wmul@product+1,?___wmul+1
  9148  003DE4  0012               	return		;funcret
  9149  003DE6                     __end_of___wmul:
  9150                           	callstack 0
  9151                           
  9152 ;; *************** function ___lwmod *****************
  9153 ;; Defined at:
  9154 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;  dividend        2    8[COMRAM] unsigned int 
  9157 ;;  divisor         2   10[COMRAM] unsigned int 
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;  counter         1   12[COMRAM] unsigned char 
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  2    8[COMRAM] unsigned int 
  9162 ;; Registers used:
  9163 ;;		wreg, status,2, status,0
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9169 ;;      Params:         4       0       0       0       0       0       0       0       0
  9170 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9172 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9173 ;;Total ram usage:        5 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; Hardware stack levels required when called:    3
  9176 ;; This function calls:
  9177 ;;		Nothing
  9178 ;; This function is called by:
  9179 ;;		_sprintf
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           	psect	text33
  9184  003AEE                     __ptext33:
  9185                           	callstack 0
  9186  003AEE                     ___lwmod:
  9187                           	callstack 25
  9188  003AEE  500B               	movf	___lwmod@divisor^0,w,c
  9189  003AF0  100C               	iorwf	(___lwmod@divisor+1)^0,w,c
  9190  003AF2  B4D8               	btfsc	status,2,c
  9191  003AF4  EF7E  F01D         	goto	u6451
  9192  003AF8  EF80  F01D         	goto	u6450
  9193  003AFC                     u6451:
  9194  003AFC  EFA4  F01D         	goto	l1276
  9195  003B00                     u6450:
  9196  003B00  0E01               	movlw	1
  9197  003B02  6E0D               	movwf	___lwmod@counter^0,c
  9198  003B04  EF88  F01D         	goto	l5734
  9199  003B08                     l5732:
  9200  003B08  90D8               	bcf	status,0,c
  9201  003B0A  360B               	rlcf	___lwmod@divisor^0,f,c
  9202  003B0C  360C               	rlcf	(___lwmod@divisor+1)^0,f,c
  9203  003B0E  2A0D               	incf	___lwmod@counter^0,f,c
  9204  003B10                     l5734:
  9205  003B10  AE0C               	btfss	(___lwmod@divisor+1)^0,7,c
  9206  003B12  EF8D  F01D         	goto	u6461
  9207  003B16  EF8F  F01D         	goto	u6460
  9208  003B1A                     u6461:
  9209  003B1A  EF84  F01D         	goto	l5732
  9210  003B1E                     u6460:
  9211  003B1E                     l5736:
  9212  003B1E  500B               	movf	___lwmod@divisor^0,w,c
  9213  003B20  5C09               	subwf	___lwmod@dividend^0,w,c
  9214  003B22  500C               	movf	(___lwmod@divisor+1)^0,w,c
  9215  003B24  580A               	subwfb	(___lwmod@dividend+1)^0,w,c
  9216  003B26  A0D8               	btfss	status,0,c
  9217  003B28  EF98  F01D         	goto	u6471
  9218  003B2C  EF9A  F01D         	goto	u6470
  9219  003B30                     u6471:
  9220  003B30  EF9E  F01D         	goto	l5740
  9221  003B34                     u6470:
  9222  003B34  500B               	movf	___lwmod@divisor^0,w,c
  9223  003B36  5E09               	subwf	___lwmod@dividend^0,f,c
  9224  003B38  500C               	movf	(___lwmod@divisor+1)^0,w,c
  9225  003B3A  5A0A               	subwfb	(___lwmod@dividend+1)^0,f,c
  9226  003B3C                     l5740:
  9227  003B3C  90D8               	bcf	status,0,c
  9228  003B3E  320C               	rrcf	(___lwmod@divisor+1)^0,f,c
  9229  003B40  320B               	rrcf	___lwmod@divisor^0,f,c
  9230  003B42  2E0D               	decfsz	___lwmod@counter^0,f,c
  9231  003B44  EF8F  F01D         	goto	l5736
  9232  003B48                     l1276:
  9233  003B48  C009  F009         	movff	___lwmod@dividend,?___lwmod
  9234  003B4C  C00A  F00A         	movff	___lwmod@dividend+1,?___lwmod+1
  9235  003B50  0012               	return		;funcret
  9236  003B52                     __end_of___lwmod:
  9237                           	callstack 0
  9238                           
  9239 ;; *************** function ___lwdiv *****************
  9240 ;; Defined at:
  9241 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;  dividend        2    1[COMRAM] unsigned int 
  9244 ;;  divisor         2    3[COMRAM] unsigned int 
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;  quotient        2    6[COMRAM] unsigned int 
  9247 ;;  counter         1    5[COMRAM] unsigned char 
  9248 ;; Return value:  Size  Location     Type
  9249 ;;                  2    1[COMRAM] unsigned int 
  9250 ;; Registers used:
  9251 ;;		wreg, status,2, status,0
  9252 ;; Tracked objects:
  9253 ;;		On entry : 0/0
  9254 ;;		On exit  : 0/0
  9255 ;;		Unchanged: 0/0
  9256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9257 ;;      Params:         4       0       0       0       0       0       0       0       0
  9258 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9259 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9260 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9261 ;;Total ram usage:        7 bytes
  9262 ;; Hardware stack levels used:    1
  9263 ;; Hardware stack levels required when called:    3
  9264 ;; This function calls:
  9265 ;;		Nothing
  9266 ;; This function is called by:
  9267 ;;		_sprintf
  9268 ;; This function uses a non-reentrant model
  9269 ;;
  9270                           
  9271                           	psect	text34
  9272  0039A6                     __ptext34:
  9273                           	callstack 0
  9274  0039A6                     ___lwdiv:
  9275                           	callstack 25
  9276  0039A6  0E00               	movlw	0
  9277  0039A8  6E08               	movwf	(___lwdiv@quotient+1)^0,c
  9278  0039AA  0E00               	movlw	0
  9279  0039AC  6E07               	movwf	___lwdiv@quotient^0,c
  9280  0039AE  5004               	movf	___lwdiv@divisor^0,w,c
  9281  0039B0  1005               	iorwf	(___lwdiv@divisor+1)^0,w,c
  9282  0039B2  B4D8               	btfsc	status,2,c
  9283  0039B4  EFDE  F01C         	goto	u6421
  9284  0039B8  EFE0  F01C         	goto	u6420
  9285  0039BC                     u6421:
  9286  0039BC  EF08  F01D         	goto	l1266
  9287  0039C0                     u6420:
  9288  0039C0  0E01               	movlw	1
  9289  0039C2  6E06               	movwf	___lwdiv@counter^0,c
  9290  0039C4  EFE8  F01C         	goto	l5714
  9291  0039C8                     l5712:
  9292  0039C8  90D8               	bcf	status,0,c
  9293  0039CA  3604               	rlcf	___lwdiv@divisor^0,f,c
  9294  0039CC  3605               	rlcf	(___lwdiv@divisor+1)^0,f,c
  9295  0039CE  2A06               	incf	___lwdiv@counter^0,f,c
  9296  0039D0                     l5714:
  9297  0039D0  AE05               	btfss	(___lwdiv@divisor+1)^0,7,c
  9298  0039D2  EFED  F01C         	goto	u6431
  9299  0039D6  EFEF  F01C         	goto	u6430
  9300  0039DA                     u6431:
  9301  0039DA  EFE4  F01C         	goto	l5712
  9302  0039DE                     u6430:
  9303  0039DE                     l5716:
  9304  0039DE  90D8               	bcf	status,0,c
  9305  0039E0  3607               	rlcf	___lwdiv@quotient^0,f,c
  9306  0039E2  3608               	rlcf	(___lwdiv@quotient+1)^0,f,c
  9307  0039E4  5004               	movf	___lwdiv@divisor^0,w,c
  9308  0039E6  5C02               	subwf	___lwdiv@dividend^0,w,c
  9309  0039E8  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  9310  0039EA  5803               	subwfb	(___lwdiv@dividend+1)^0,w,c
  9311  0039EC  A0D8               	btfss	status,0,c
  9312  0039EE  EFFB  F01C         	goto	u6441
  9313  0039F2  EFFD  F01C         	goto	u6440
  9314  0039F6                     u6441:
  9315  0039F6  EF02  F01D         	goto	l5724
  9316  0039FA                     u6440:
  9317  0039FA  5004               	movf	___lwdiv@divisor^0,w,c
  9318  0039FC  5E02               	subwf	___lwdiv@dividend^0,f,c
  9319  0039FE  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  9320  003A00  5A03               	subwfb	(___lwdiv@dividend+1)^0,f,c
  9321  003A02  8007               	bsf	___lwdiv@quotient^0,0,c
  9322  003A04                     l5724:
  9323  003A04  90D8               	bcf	status,0,c
  9324  003A06  3205               	rrcf	(___lwdiv@divisor+1)^0,f,c
  9325  003A08  3204               	rrcf	___lwdiv@divisor^0,f,c
  9326  003A0A  2E06               	decfsz	___lwdiv@counter^0,f,c
  9327  003A0C  EFEF  F01C         	goto	l5716
  9328  003A10                     l1266:
  9329  003A10  C007  F002         	movff	___lwdiv@quotient,?___lwdiv
  9330  003A14  C008  F003         	movff	___lwdiv@quotient+1,?___lwdiv+1
  9331  003A18  0012               	return		;funcret
  9332  003A1A                     __end_of___lwdiv:
  9333                           	callstack 0
  9334                           
  9335 ;; *************** function _LCD_WriteString *****************
  9336 ;; Defined at:
  9337 ;;		line 59 in file "LCD.c"
  9338 ;; Parameters:    Size  Location     Type
  9339 ;;  iData           2    4[COMRAM] PTR unsigned char 
  9340 ;;		 -> gsTotalSecs(4), RAM(2047), STR_2(17), STR_1(15), 
  9341 ;; Auto vars:     Size  Location     Type
  9342 ;;  ix              1    8[COMRAM] unsigned char 
  9343 ;; Return value:  Size  Location     Type
  9344 ;;                  1    wreg      void 
  9345 ;; Registers used:
  9346 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9347 ;; Tracked objects:
  9348 ;;		On entry : 0/0
  9349 ;;		On exit  : 0/0
  9350 ;;		Unchanged: 0/0
  9351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9352 ;;      Params:         2       0       0       0       0       0       0       0       0
  9353 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9354 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9355 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9356 ;;Total ram usage:        5 bytes
  9357 ;; Hardware stack levels used:    1
  9358 ;; Hardware stack levels required when called:    4
  9359 ;; This function calls:
  9360 ;;		_LCD_WriteChar
  9361 ;; This function is called by:
  9362 ;;		_main
  9363 ;;		_ComputeWaterVol
  9364 ;;		_ComputeTOD
  9365 ;; This function uses a non-reentrant model
  9366 ;;
  9367                           
  9368                           	psect	text35
  9369  00392E                     __ptext35:
  9370                           	callstack 0
  9371  00392E                     _LCD_WriteString:
  9372                           	callstack 26
  9373  00392E                     
  9374                           ;LCD.c: 61: uint8_t ix = 0;
  9375  00392E  0E00               	movlw	0
  9376  003930  6E09               	movwf	LCD_WriteString@ix^0,c
  9377                           
  9378                           ;LCD.c: 62: while (iData[ix]) {
  9379  003932  EFB4  F01C         	goto	l5836
  9380  003936                     l5832:
  9381                           
  9382                           ;LCD.c: 63: LCD_WriteChar (iData[ix]);
  9383  003936  5009               	movf	LCD_WriteString@ix^0,w,c
  9384  003938  2405               	addwf	LCD_WriteString@iData^0,w,c
  9385  00393A  6E07               	movwf	??_LCD_WriteString^0,c
  9386  00393C  0E00               	movlw	0
  9387  00393E  2006               	addwfc	(LCD_WriteString@iData+1)^0,w,c
  9388  003940  6E08               	movwf	(??_LCD_WriteString+1)^0,c
  9389  003942  C007  FFF6         	movff	??_LCD_WriteString,tblptrl
  9390  003946  C008  FFF7         	movff	??_LCD_WriteString+1,tblptrh
  9391  00394A  6AF8               	clrf	tblptru,c
  9392  00394C  0E07               	movlw	(high __ramtop+-1)
  9393  00394E  64F7               	cpfsgt	tblptrh,c
  9394  003950  D003               	bra	u6587
  9395  003952  0008               	tblrd		*
  9396  003954  50F5               	movf	tablat,w,c
  9397  003956  D005               	bra	u6580
  9398  003958                     u6587:
  9399  003958  CFF6 FFE1          	movff	tblptrl,fsr1l
  9400  00395C  CFF7 FFE2          	movff	tblptrh,fsr1h
  9401  003960  50E7               	movf	indf1,w,c
  9402  003962                     u6580:
  9403  003962  ECD7  F01D         	call	_LCD_WriteChar
  9404  003966                     
  9405                           ;LCD.c: 64: ix ++;
  9406  003966  2A09               	incf	LCD_WriteString@ix^0,f,c
  9407  003968                     l5836:
  9408  003968  5009               	movf	LCD_WriteString@ix^0,w,c
  9409  00396A  2405               	addwf	LCD_WriteString@iData^0,w,c
  9410  00396C  6E07               	movwf	??_LCD_WriteString^0,c
  9411  00396E  0E00               	movlw	0
  9412  003970  2006               	addwfc	(LCD_WriteString@iData+1)^0,w,c
  9413  003972  6E08               	movwf	(??_LCD_WriteString+1)^0,c
  9414  003974  C007  FFF6         	movff	??_LCD_WriteString,tblptrl
  9415  003978  C008  FFF7         	movff	??_LCD_WriteString+1,tblptrh
  9416  00397C  6AF8               	clrf	tblptru,c
  9417  00397E  0E07               	movlw	(high __ramtop+-1)
  9418  003980  64F7               	cpfsgt	tblptrh,c
  9419  003982  D003               	bra	u6597
  9420  003984  0008               	tblrd		*
  9421  003986  50F5               	movf	tablat,w,c
  9422  003988  D005               	bra	u6590
  9423  00398A                     u6597:
  9424  00398A  CFF6 FFE1          	movff	tblptrl,fsr1l
  9425  00398E  CFF7 FFE2          	movff	tblptrh,fsr1h
  9426  003992  50E7               	movf	indf1,w,c
  9427  003994                     u6590:
  9428  003994  0900               	iorlw	0
  9429  003996  A4D8               	btfss	status,2,c
  9430  003998  EFD0  F01C         	goto	u6601
  9431  00399C  EFD2  F01C         	goto	u6600
  9432  0039A0                     u6601:
  9433  0039A0  EF9B  F01C         	goto	l5832
  9434  0039A4                     u6600:
  9435  0039A4  0012               	return		;funcret
  9436  0039A6                     __end_of_LCD_WriteString:
  9437                           	callstack 0
  9438                           
  9439 ;; *************** function _LCD_WriteChar *****************
  9440 ;; Defined at:
  9441 ;;		line 46 in file "LCD.c"
  9442 ;; Parameters:    Size  Location     Type
  9443 ;;  iChar           1    wreg     unsigned char 
  9444 ;; Auto vars:     Size  Location     Type
  9445 ;;  iChar           1    3[COMRAM] unsigned char 
  9446 ;; Return value:  Size  Location     Type
  9447 ;;                  1    wreg      void 
  9448 ;; Registers used:
  9449 ;;		wreg, status,2, status,0
  9450 ;; Tracked objects:
  9451 ;;		On entry : 0/0
  9452 ;;		On exit  : 0/0
  9453 ;;		Unchanged: 0/0
  9454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9455 ;;      Params:         0       0       0       0       0       0       0       0       0
  9456 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9457 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9458 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9459 ;;Total ram usage:        3 bytes
  9460 ;; Hardware stack levels used:    1
  9461 ;; Hardware stack levels required when called:    3
  9462 ;; This function calls:
  9463 ;;		Nothing
  9464 ;; This function is called by:
  9465 ;;		_LCD_WriteString
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469                           	psect	text36
  9470  003BAE                     __ptext36:
  9471                           	callstack 0
  9472  003BAE                     _LCD_WriteChar:
  9473                           	callstack 26
  9474                           
  9475                           ;incstack = 0
  9476                           ;LCD_WriteChar@iChar stored from wreg
  9477  003BAE  6E04               	movwf	LCD_WriteChar@iChar^0,c
  9478  003BB0  8689               	bsf	137,3,c	;volatile
  9479  003BB2  9489               	bcf	137,2,c	;volatile
  9480  003BB4  8289               	bsf	137,1,c	;volatile
  9481  003BB6                     
  9482                           ;LCD.c: 52: LATB = iChar;
  9483  003BB6  C004  FF8A         	movff	LCD_WriteChar@iChar,3978	;volatile
  9484  003BBA                     
  9485                           ;LCD.c: 53: LATC6 = iChar>>6;
  9486  003BBA  C004  F002         	movff	LCD_WriteChar@iChar,??_LCD_WriteChar
  9487  003BBE  0E06               	movlw	6
  9488  003BC0  6E03               	movwf	(??_LCD_WriteChar+1)^0,c
  9489  003BC2                     u6345:
  9490  003BC2  90D8               	bcf	status,0,c
  9491  003BC4  3202               	rrcf	??_LCD_WriteChar^0,f,c
  9492  003BC6  2E03               	decfsz	(??_LCD_WriteChar+1)^0,f,c
  9493  003BC8  EFE1  F01D         	goto	u6345
  9494  003BCC  3002               	rrcf	??_LCD_WriteChar^0,w,c
  9495  003BCE  B0D8               	btfsc	status,0,c
  9496  003BD0  EFEC  F01D         	goto	u6351
  9497  003BD4  EFEF  F01D         	goto	u6350
  9498  003BD8                     u6351:
  9499  003BD8  8C8B               	bsf	3979,6,c	;volatile
  9500  003BDA  EFF0  F01D         	goto	u6365
  9501  003BDE                     u6350:
  9502  003BDE  9C8B               	bcf	3979,6,c	;volatile
  9503  003BE0                     u6365:
  9504  003BE0                     
  9505                           ;LCD.c: 54: LATC7 = iChar>>7;
  9506  003BE0  6A02               	clrf	??_LCD_WriteChar^0,c
  9507  003BE2  AE04               	btfss	LCD_WriteChar@iChar^0,7,c
  9508  003BE4  D001               	bra	u6375
  9509  003BE6  2A02               	incf	??_LCD_WriteChar^0,f,c
  9510  003BE8                     u6375:
  9511  003BE8  3002               	rrcf	??_LCD_WriteChar^0,w,c
  9512  003BEA  B0D8               	btfsc	status,0,c
  9513  003BEC  EFFA  F01D         	goto	u6381
  9514  003BF0  EFFD  F01D         	goto	u6380
  9515  003BF4                     u6381:
  9516  003BF4  8E8B               	bsf	3979,7,c	;volatile
  9517  003BF6  EFFE  F01D         	goto	u6395
  9518  003BFA                     u6380:
  9519  003BFA  9E8B               	bcf	3979,7,c	;volatile
  9520  003BFC                     u6395:
  9521  003BFC  9289               	bcf	137,1,c	;volatile
  9522  003BFE                     
  9523                           ;LCD.c: 56: _delay((unsigned long)((40+10)*(8000000/4000000.0)));
  9524  003BFE  0E21               	movlw	33
  9525  003C00                     u7497:
  9526  003C00  2EE8               	decfsz	wreg,f,c
  9527  003C02  D7FE               	bra	u7497
  9528  003C04  F000               	nop	
  9529  003C06  0012               	return		;funcret
  9530  003C08                     __end_of_LCD_WriteChar:
  9531                           	callstack 0
  9532                           
  9533 ;; *************** function _LCD_GoTo *****************
  9534 ;; Defined at:
  9535 ;;		line 68 in file "LCD.c"
  9536 ;; Parameters:    Size  Location     Type
  9537 ;;  iLine           1    wreg     unsigned char 
  9538 ;;  iCharPos        1    8[COMRAM] unsigned char 
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  iLine           1   14[COMRAM] unsigned char 
  9541 ;;  iPos            1   11[COMRAM] unsigned char 
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  1    wreg      void 
  9544 ;; Registers used:
  9545 ;;		wreg, status,2, status,0, cstack
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9551 ;;      Params:         1       0       0       0       0       0       0       0       0
  9552 ;;      Locals:         4       0       0       0       0       0       0       0       0
  9553 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9554 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9555 ;;Total ram usage:        7 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:    4
  9558 ;; This function calls:
  9559 ;;		_LCD_WriteCmd
  9560 ;; This function is called by:
  9561 ;;		_main
  9562 ;;		_ComputeWaterVol
  9563 ;;		_ComputeTOD
  9564 ;; This function uses a non-reentrant model
  9565 ;;
  9566                           
  9567                           	psect	text37
  9568  003B52                     __ptext37:
  9569                           	callstack 0
  9570  003B52                     _LCD_GoTo:
  9571                           	callstack 26
  9572                           
  9573                           ;incstack = 0
  9574                           ;LCD_GoTo@iLine stored from wreg
  9575  003B52  6E0F               	movwf	LCD_GoTo@iLine^0,c
  9576  003B54                     
  9577                           ;LCD.c: 70: uint8_t iPos;;LCD.c: 71: if (iLine < 2)
  9578  003B54  0E02               	movlw	2
  9579  003B56  600F               	cpfslt	LCD_GoTo@iLine^0,c
  9580  003B58  EFB0  F01D         	goto	u6611
  9581  003B5C  EFB2  F01D         	goto	u6610
  9582  003B60                     u6611:
  9583  003B60  EFCE  F01D         	goto	l5848
  9584  003B64                     u6610:
  9585  003B64                     
  9586                           ;LCD.c: 72: iPos = (iLine == 0) ?;LCD.c: 73: (0x80 | iCharPos) :;LCD.c: 74: (0xC0 | iCha
      +                          rPos);
  9587  003B64  500F               	movf	LCD_GoTo@iLine^0,w,c
  9588  003B66  B4D8               	btfsc	status,2,c
  9589  003B68  EFB8  F01D         	goto	u6621
  9590  003B6C  EFBA  F01D         	goto	u6620
  9591  003B70                     u6621:
  9592  003B70  EFC4  F01D         	goto	l5844
  9593  003B74                     u6620:
  9594  003B74  0EC0               	movlw	192
  9595  003B76  C009  F00A         	movff	LCD_GoTo@iCharPos,??_LCD_GoTo
  9596  003B7A  6A0B               	clrf	(??_LCD_GoTo+1)^0,c
  9597  003B7C  100A               	iorwf	??_LCD_GoTo^0,w,c
  9598  003B7E  6E0D               	movwf	_LCD_GoTo$1457^0,c
  9599  003B80  500B               	movf	(??_LCD_GoTo+1)^0,w,c
  9600  003B82  6E0E               	movwf	(_LCD_GoTo$1457+1)^0,c
  9601  003B84  EFCC  F01D         	goto	l5846
  9602  003B88                     l5844:
  9603  003B88  0E80               	movlw	128
  9604  003B8A  C009  F00A         	movff	LCD_GoTo@iCharPos,??_LCD_GoTo
  9605  003B8E  6A0B               	clrf	(??_LCD_GoTo+1)^0,c
  9606  003B90  100A               	iorwf	??_LCD_GoTo^0,w,c
  9607  003B92  6E0D               	movwf	_LCD_GoTo$1457^0,c
  9608  003B94  500B               	movf	(??_LCD_GoTo+1)^0,w,c
  9609  003B96  6E0E               	movwf	(_LCD_GoTo$1457+1)^0,c
  9610  003B98                     l5846:
  9611  003B98  C00D  F00C         	movff	_LCD_GoTo$1457,LCD_GoTo@iPos
  9612  003B9C                     l5848:
  9613                           
  9614                           ;LCD.c: 75: LCD_WriteCmd (0x80 | iPos, 40+10);
  9615  003B9C  0E00               	movlw	0
  9616  003B9E  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  9617  003BA0  0E32               	movlw	50
  9618  003BA2  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  9619  003BA4  500C               	movf	LCD_GoTo@iPos^0,w,c
  9620  003BA6  0980               	iorlw	128
  9621  003BA8  EC5A  F01C         	call	_LCD_WriteCmd
  9622  003BAC  0012               	return		;funcret
  9623  003BAE                     __end_of_LCD_GoTo:
  9624                           	callstack 0
  9625                           
  9626 ;; *************** function _LCD_WriteCmd *****************
  9627 ;; Defined at:
  9628 ;;		line 33 in file "LCD.c"
  9629 ;; Parameters:    Size  Location     Type
  9630 ;;  iCmd            1    wreg     unsigned char 
  9631 ;;  iDelay          2    1[COMRAM] unsigned int 
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;  iCmd            1    7[COMRAM] unsigned char 
  9634 ;;  i               2    5[COMRAM] int 
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  1    wreg      void 
  9637 ;; Registers used:
  9638 ;;		wreg, status,2, status,0
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9644 ;;      Params:         2       0       0       0       0       0       0       0       0
  9645 ;;      Locals:         3       0       0       0       0       0       0       0       0
  9646 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9647 ;;      Totals:         7       0       0       0       0       0       0       0       0
  9648 ;;Total ram usage:        7 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:    3
  9651 ;; This function calls:
  9652 ;;		Nothing
  9653 ;; This function is called by:
  9654 ;;		_LCD_Init
  9655 ;;		_LCD_GoTo
  9656 ;;		_LCD_ClearScreen
  9657 ;; This function uses a non-reentrant model
  9658 ;;
  9659                           
  9660                           	psect	text38
  9661  0038B4                     __ptext38:
  9662                           	callstack 0
  9663  0038B4                     _LCD_WriteCmd:
  9664                           	callstack 26
  9665                           
  9666                           ;incstack = 0
  9667                           ;LCD_WriteCmd@iCmd stored from wreg
  9668  0038B4  6E08               	movwf	LCD_WriteCmd@iCmd^0,c
  9669  0038B6  9689               	bcf	137,3,c	;volatile
  9670  0038B8  9489               	bcf	137,2,c	;volatile
  9671  0038BA                     
  9672                           ;LCD.c: 37: LATB = iCmd;
  9673  0038BA  C008  FF8A         	movff	LCD_WriteCmd@iCmd,3978	;volatile
  9674  0038BE                     
  9675                           ;LCD.c: 38: LATC6 = iCmd>>6;
  9676  0038BE  C008  F004         	movff	LCD_WriteCmd@iCmd,??_LCD_WriteCmd
  9677  0038C2  0E06               	movlw	6
  9678  0038C4  6E05               	movwf	(??_LCD_WriteCmd+1)^0,c
  9679  0038C6                     u6275:
  9680  0038C6  90D8               	bcf	status,0,c
  9681  0038C8  3204               	rrcf	??_LCD_WriteCmd^0,f,c
  9682  0038CA  2E05               	decfsz	(??_LCD_WriteCmd+1)^0,f,c
  9683  0038CC  EF63  F01C         	goto	u6275
  9684  0038D0  3004               	rrcf	??_LCD_WriteCmd^0,w,c
  9685  0038D2  B0D8               	btfsc	status,0,c
  9686  0038D4  EF6E  F01C         	goto	u6281
  9687  0038D8  EF71  F01C         	goto	u6280
  9688  0038DC                     u6281:
  9689  0038DC  8C8B               	bsf	3979,6,c	;volatile
  9690  0038DE  EF72  F01C         	goto	u6295
  9691  0038E2                     u6280:
  9692  0038E2  9C8B               	bcf	3979,6,c	;volatile
  9693  0038E4                     u6295:
  9694  0038E4                     
  9695                           ;LCD.c: 39: LATC7 = iCmd>>7;
  9696  0038E4  6A04               	clrf	??_LCD_WriteCmd^0,c
  9697  0038E6  AE08               	btfss	LCD_WriteCmd@iCmd^0,7,c
  9698  0038E8  D001               	bra	u6305
  9699  0038EA  2A04               	incf	??_LCD_WriteCmd^0,f,c
  9700  0038EC                     u6305:
  9701  0038EC  3004               	rrcf	??_LCD_WriteCmd^0,w,c
  9702  0038EE  B0D8               	btfsc	status,0,c
  9703  0038F0  EF7C  F01C         	goto	u6311
  9704  0038F4  EF7F  F01C         	goto	u6310
  9705  0038F8                     u6311:
  9706  0038F8  8E8B               	bsf	3979,7,c	;volatile
  9707  0038FA  EF80  F01C         	goto	u6325
  9708  0038FE                     u6310:
  9709  0038FE  9E8B               	bcf	3979,7,c	;volatile
  9710  003900                     u6325:
  9711  003900  8289               	bsf	137,1,c	;volatile
  9712  003902  9289               	bcf	137,1,c	;volatile
  9713  003904                     
  9714                           ;LCD.c: 42: for (int i = 0; i<iDelay; i++)
  9715  003904  0E00               	movlw	0
  9716  003906  6E07               	movwf	(LCD_WriteCmd@i+1)^0,c
  9717  003908  0E00               	movlw	0
  9718  00390A  6E06               	movwf	LCD_WriteCmd@i^0,c
  9719  00390C  EF8B  F01C         	goto	l5678
  9720  003910                     l541:
  9721                           
  9722                           ;LCD.c: 43: _delay((unsigned long)((1)*(8000000/4000000.0)));
  9723  003910  D000               	nop2		;2 cycle nop
  9724  003912  4A06               	infsnz	LCD_WriteCmd@i^0,f,c
  9725  003914  2A07               	incf	(LCD_WriteCmd@i+1)^0,f,c
  9726  003916                     l5678:
  9727  003916  5002               	movf	LCD_WriteCmd@iDelay^0,w,c
  9728  003918  5C06               	subwf	LCD_WriteCmd@i^0,w,c
  9729  00391A  5003               	movf	(LCD_WriteCmd@iDelay+1)^0,w,c
  9730  00391C  5807               	subwfb	(LCD_WriteCmd@i+1)^0,w,c
  9731  00391E  A0D8               	btfss	status,0,c
  9732  003920  EF94  F01C         	goto	u6331
  9733  003924  EF96  F01C         	goto	u6330
  9734  003928                     u6331:
  9735  003928  EF88  F01C         	goto	l541
  9736  00392C                     u6330:
  9737  00392C  0012               	return		;funcret
  9738  00392E                     __end_of_LCD_WriteCmd:
  9739                           	callstack 0
  9740                           
  9741 ;; *************** function _CCP2_Init *****************
  9742 ;; Defined at:
  9743 ;;		line 22 in file "CCP2.c"
  9744 ;; Parameters:    Size  Location     Type
  9745 ;;		None
  9746 ;; Auto vars:     Size  Location     Type
  9747 ;;		None
  9748 ;; Return value:  Size  Location     Type
  9749 ;;                  1    wreg      void 
  9750 ;; Registers used:
  9751 ;;		wreg, status,2, status,0
  9752 ;; Tracked objects:
  9753 ;;		On entry : 0/0
  9754 ;;		On exit  : 0/0
  9755 ;;		Unchanged: 0/0
  9756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9757 ;;      Params:         0       0       0       0       0       0       0       0       0
  9758 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9760 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9761 ;;Total ram usage:        1 bytes
  9762 ;; Hardware stack levels used:    1
  9763 ;; Hardware stack levels required when called:    3
  9764 ;; This function calls:
  9765 ;;		Nothing
  9766 ;; This function is called by:
  9767 ;;		_main
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	text39
  9772  003E06                     __ptext39:
  9773                           	callstack 0
  9774  003E06                     _CCP2_Init:
  9775                           	callstack 27
  9776  003E06                     
  9777                           ;CCP2.c: 27: CCP2CON = 0x0C;
  9778  003E06  0E0C               	movlw	12
  9779  003E08  6E97               	movwf	151,c	;volatile
  9780                           
  9781                           ;CCP2.c: 28: CCPR2L = 99>>2;
  9782  003E0A  0E18               	movlw	24
  9783  003E0C  6E90               	movwf	144,c	;volatile
  9784                           
  9785                           ;CCP2.c: 29: CCP2CONbits.DC2B = 99 && 0x03;
  9786  003E0E  0E00               	movlw	0
  9787  003E10  6E02               	movwf	_CCP2_Init$1296^0,c
  9788  003E12  0E01               	movlw	1
  9789  003E14  6E02               	movwf	_CCP2_Init$1296^0,c
  9790  003E16  5097               	movf	151,w,c	;volatile
  9791  003E18  0BCF               	andlw	-49
  9792  003E1A  0910               	iorlw	16
  9793  003E1C  6E97               	movwf	151,c	;volatile
  9794  003E1E                     
  9795                           ;CCP2.c: 30: CCPR2H = 0x00;
  9796  003E1E  0E00               	movlw	0
  9797  003E20  6E91               	movwf	145,c	;volatile
  9798  003E22  0012               	return		;funcret
  9799  003E24                     __end_of_CCP2_Init:
  9800                           	callstack 0
  9801                           
  9802 ;; *************** function _CCP1_Init *****************
  9803 ;; Defined at:
  9804 ;;		line 12 in file "CCP1.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;		None
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;		None
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  1    wreg      void 
  9811 ;; Registers used:
  9812 ;;		wreg, status,2
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9818 ;;      Params:         0       0       0       0       0       0       0       0       0
  9819 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9820 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9821 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9822 ;;Total ram usage:        0 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; Hardware stack levels required when called:    3
  9825 ;; This function calls:
  9826 ;;		Nothing
  9827 ;; This function is called by:
  9828 ;;		_main
  9829 ;; This function uses a non-reentrant model
  9830 ;;
  9831                           
  9832                           	psect	text40
  9833  003E58                     __ptext40:
  9834                           	callstack 0
  9835  003E58                     _CCP1_Init:
  9836                           	callstack 27
  9837  003E58                     
  9838                           ;CCP1.c: 17: CCP1CON = 0x04;
  9839  003E58  0E04               	movlw	4
  9840  003E5A  6EBD               	movwf	189,c	;volatile
  9841                           
  9842                           ;CCP1.c: 20: CCPR1H = 0x00;
  9843  003E5C  0E00               	movlw	0
  9844  003E5E  6EBF               	movwf	191,c	;volatile
  9845                           
  9846                           ;CCP1.c: 23: CCPR1L = 0x00;
  9847  003E60  0E00               	movlw	0
  9848  003E62  6EBE               	movwf	190,c	;volatile
  9849  003E64                     
  9850                           ;CCP1.c: 26: PIR1bits.CCP1IF = 0;
  9851  003E64  949E               	bcf	158,2,c	;volatile
  9852  003E66                     
  9853                           ;CCP1.c: 29: PIE1bits.CCP1IE = 1;
  9854  003E66  849D               	bsf	157,2,c	;volatile
  9855  003E68                     
  9856                           ;CCP1.c: 32: CCPTMRSbits.C1TSEL = 0x0;
  9857  003E68  010F               	movlb	15	; () banked
  9858  003E6A  9159               	bcf	89,0,b	;volatile
  9859  003E6C                     
  9860                           ; BSR set to: 15
  9861  003E6C  0012               	return		;funcret
  9862  003E6E                     __end_of_CCP1_Init:
  9863                           	callstack 0
  9864                           
  9865 ;; *************** function _INTERRUPT_InterruptManager *****************
  9866 ;; Defined at:
  9867 ;;		line 15 in file "Interrupt_Mgr.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;		None
  9870 ;; Auto vars:     Size  Location     Type
  9871 ;;		None
  9872 ;; Return value:  Size  Location     Type
  9873 ;;                  1    wreg      void 
  9874 ;; Registers used:
  9875 ;;		wreg, status,2, status,0, cstack
  9876 ;; Tracked objects:
  9877 ;;		On entry : 0/0
  9878 ;;		On exit  : 0/0
  9879 ;;		Unchanged: 0/0
  9880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9881 ;;      Params:         0       0       0       0       0       0       0       0       0
  9882 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9883 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9884 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9885 ;;Total ram usage:        0 bytes
  9886 ;; Hardware stack levels used:    1
  9887 ;; Hardware stack levels required when called:    2
  9888 ;; This function calls:
  9889 ;;		_CCP1_ISR
  9890 ;;		_Timer0_ISR
  9891 ;;		_Timer2_ISR
  9892 ;;		_Timer3_ISR
  9893 ;; This function is called by:
  9894 ;;		Interrupt level 2
  9895 ;; This function uses a non-reentrant model
  9896 ;;
  9897                           
  9898                           	psect	intcode
  9899  000008                     __pintcode:
  9900                           	callstack 0
  9901  000008                     _INTERRUPT_InterruptManager:
  9902                           	callstack 22
  9903                           
  9904                           ; BSR set to: 15
  9905                           ;incstack = 0
  9906  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9907  00000A                     
  9908                           ;Interrupt_Mgr.c: 18: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  9909  00000A  AAF2               	btfss	242,5,c	;volatile
  9910  00000C  EF0A  F000         	goto	i2u497_41
  9911  000010  EF0C  F000         	goto	i2u497_40
  9912  000014                     i2u497_41:
  9913  000014  EF17  F000         	goto	i2l51
  9914  000018                     i2u497_40:
  9915  000018  A4F2               	btfss	242,2,c	;volatile
  9916  00001A  EF11  F000         	goto	i2u498_41
  9917  00001E  EF13  F000         	goto	i2u498_40
  9918  000022                     i2u498_41:
  9919  000022  EF17  F000         	goto	i2l51
  9920  000026                     i2u498_40:
  9921  000026                     
  9922                           ;Interrupt_Mgr.c: 19: {;Interrupt_Mgr.c: 20: Timer0_ISR();
  9923  000026  ECAF  F01E         	call	_Timer0_ISR	;wreg free
  9924                           
  9925                           ;Interrupt_Mgr.c: 21: }
  9926  00002A  EF54  F000         	goto	i2l61
  9927  00002E                     i2l51:
  9928                           
  9929                           ;Interrupt_Mgr.c: 22: else if(INTCONbits.PEIE == 1)
  9930  00002E  ACF2               	btfss	242,6,c	;volatile
  9931  000030  EF1C  F000         	goto	i2u499_41
  9932  000034  EF1E  F000         	goto	i2u499_40
  9933  000038                     i2u499_41:
  9934  000038  EF54  F000         	goto	i2l61
  9935  00003C                     i2u499_40:
  9936  00003C                     
  9937                           ;Interrupt_Mgr.c: 23: {;Interrupt_Mgr.c: 24: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF 
      +                          == 1)
  9938  00003C  A2A0               	btfss	160,1,c	;volatile
  9939  00003E  EF23  F000         	goto	i2u500_41
  9940  000042  EF25  F000         	goto	i2u500_40
  9941  000046                     i2u500_41:
  9942  000046  EF30  F000         	goto	i2l54
  9943  00004A                     i2u500_40:
  9944  00004A  A2A1               	btfss	161,1,c	;volatile
  9945  00004C  EF2A  F000         	goto	i2u501_41
  9946  000050  EF2C  F000         	goto	i2u501_40
  9947  000054                     i2u501_41:
  9948  000054  EF30  F000         	goto	i2l54
  9949  000058                     i2u501_40:
  9950  000058                     
  9951                           ;Interrupt_Mgr.c: 25: {;Interrupt_Mgr.c: 26: Timer3_ISR();
  9952  000058  EC43  F01D         	call	_Timer3_ISR	;wreg free
  9953                           
  9954                           ;Interrupt_Mgr.c: 27: }
  9955  00005C  EF54  F000         	goto	i2l61
  9956  000060                     i2l54:
  9957                           
  9958                           ;Interrupt_Mgr.c: 28: else if(PIE1bits.CCP1IE == 1 && PIR1bits.CCP1IF == 1)
  9959  000060  A49D               	btfss	157,2,c	;volatile
  9960  000062  EF35  F000         	goto	i2u502_41
  9961  000066  EF37  F000         	goto	i2u502_40
  9962  00006A                     i2u502_41:
  9963  00006A  EF42  F000         	goto	i2l56
  9964  00006E                     i2u502_40:
  9965  00006E  A49E               	btfss	158,2,c	;volatile
  9966  000070  EF3C  F000         	goto	i2u503_41
  9967  000074  EF3E  F000         	goto	i2u503_40
  9968  000078                     i2u503_41:
  9969  000078  EF42  F000         	goto	i2l56
  9970  00007C                     i2u503_40:
  9971  00007C                     
  9972                           ;Interrupt_Mgr.c: 29: {;Interrupt_Mgr.c: 30: CCP1_ISR();
  9973  00007C  EC12  F01F         	call	_CCP1_ISR	;wreg free
  9974                           
  9975                           ;Interrupt_Mgr.c: 31: }
  9976  000080  EF54  F000         	goto	i2l61
  9977  000084                     i2l56:
  9978                           
  9979                           ;Interrupt_Mgr.c: 32: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  9980  000084  A29D               	btfss	157,1,c	;volatile
  9981  000086  EF47  F000         	goto	i2u504_41
  9982  00008A  EF49  F000         	goto	i2u504_40
  9983  00008E                     i2u504_41:
  9984  00008E  EF54  F000         	goto	i2l55
  9985  000092                     i2u504_40:
  9986  000092  A29E               	btfss	158,1,c	;volatile
  9987  000094  EF4E  F000         	goto	i2u505_41
  9988  000098  EF50  F000         	goto	i2u505_40
  9989  00009C                     i2u505_41:
  9990  00009C  EF54  F000         	goto	i2l55
  9991  0000A0                     i2u505_40:
  9992  0000A0                     
  9993                           ;Interrupt_Mgr.c: 33: {;Interrupt_Mgr.c: 34: Timer2_ISR();
  9994  0000A0  EC62  F01F         	call	_Timer2_ISR	;wreg free
  9995                           
  9996                           ;Interrupt_Mgr.c: 35: }
  9997  0000A4  EF54  F000         	goto	i2l61
  9998  0000A8                     i2l55:
  9999  0000A8                     i2l61:
 10000  0000A8  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10001  0000AA  0011               	retfie		f
 10002  0000AC                     __end_of_INTERRUPT_InterruptManager:
 10003                           	callstack 0
 10004                           
 10005 ;; *************** function _Timer3_ISR *****************
 10006 ;; Defined at:
 10007 ;;		line 20 in file "Timer_3.c"
 10008 ;; Parameters:    Size  Location     Type
 10009 ;;		None
 10010 ;; Auto vars:     Size  Location     Type
 10011 ;;		None
 10012 ;; Return value:  Size  Location     Type
 10013 ;;                  1    wreg      void 
 10014 ;; Registers used:
 10015 ;;		wreg, status,2, status,0, cstack
 10016 ;; Tracked objects:
 10017 ;;		On entry : 0/0
 10018 ;;		On exit  : 0/0
 10019 ;;		Unchanged: 0/0
 10020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10021 ;;      Params:         0       0       0       0       0       0       0       0       0
 10022 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10023 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10024 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10025 ;;Total ram usage:        0 bytes
 10026 ;; Hardware stack levels used:    1
 10027 ;; Hardware stack levels required when called:    1
 10028 ;; This function calls:
 10029 ;;		_StartDepthDetection
 10030 ;; This function is called by:
 10031 ;;		_INTERRUPT_InterruptManager
 10032 ;; This function uses a non-reentrant model
 10033 ;;
 10034                           
 10035                           	psect	text42
 10036  003A86                     __ptext42:
 10037                           	callstack 0
 10038  003A86                     _Timer3_ISR:
 10039                           	callstack 22
 10040  003A86                     
 10041                           ;Timer_3.c: 22: Timer3_Cntr ++;
 10042  003A86  0100               	movlb	0	; () banked
 10043  003A88  4BCB               	infsnz	_Timer3_Cntr& (0+255),f,b
 10044  003A8A  2BCC               	incf	(_Timer3_Cntr+1)& (0+255),f,b
 10045  003A8C                     
 10046                           ; BSR set to: 0
 10047                           ;Timer_3.c: 23: T3CONbits.TMR3ON = 0;
 10048  003A8C  90B1               	bcf	177,0,c	;volatile
 10049  003A8E                     
 10050                           ; BSR set to: 0
 10051                           ;Timer_3.c: 24: TMR3H = (uint8_t)(Timer3_Reload>>8);
 10052  003A8E  51DD               	movf	(_Timer3_Reload+1)& (0+255),w,b
 10053  003A90  6EB3               	movwf	179,c	;volatile
 10054  003A92                     
 10055                           ; BSR set to: 0
 10056                           ;Timer_3.c: 25: TMR3L = (uint8_t) Timer3_Reload;
 10057  003A92  C0DC  FFB2         	movff	_Timer3_Reload,4018	;volatile
 10058  003A96                     
 10059                           ; BSR set to: 0
 10060                           ;Timer_3.c: 26: T3CONbits.TMR3ON = 1;
 10061  003A96  80B1               	bsf	177,0,c	;volatile
 10062  003A98                     
 10063                           ; BSR set to: 0
 10064                           ;Timer_3.c: 28: PIR2bits.TMR3IF = 0;
 10065  003A98  92A1               	bcf	161,1,c	;volatile
 10066  003A9A                     
 10067                           ; BSR set to: 0
 10068                           ;Timer_3.c: 30: if (Timer3_Sampling)
 10069  003A9A  51DE               	movf	_Timer3_Sampling& (0+255),w,b
 10070  003A9C  B4D8               	btfsc	status,2,c
 10071  003A9E  EF53  F01D         	goto	i2u487_41
 10072  003AA2  EF55  F01D         	goto	i2u487_40
 10073  003AA6                     i2u487_41:
 10074  003AA6  EF63  F01D         	goto	i2l4742
 10075  003AAA                     i2u487_40:
 10076  003AAA                     
 10077                           ; BSR set to: 0
 10078                           ;Timer_3.c: 31: {;Timer_3.c: 32: if (Timer3_Cntr >= 2)
 10079  003AAA  51CC               	movf	(_Timer3_Cntr+1)& (0+255),w,b
 10080  003AAC  E109               	bnz	i2u488_40
 10081  003AAE  0E02               	movlw	2
 10082  003AB0  5DCB               	subwf	_Timer3_Cntr& (0+255),w,b
 10083  003AB2  A0D8               	btfss	status,0,c
 10084  003AB4  EF5E  F01D         	goto	i2u488_41
 10085  003AB8  EF60  F01D         	goto	i2u488_40
 10086  003ABC                     i2u488_41:
 10087  003ABC  EF63  F01D         	goto	i2l4742
 10088  003AC0                     i2u488_40:
 10089  003AC0                     
 10090                           ; BSR set to: 0
 10091                           ;Timer_3.c: 33: {;Timer_3.c: 34: Timer3_Sampling = 0;
 10092  003AC0  0E00               	movlw	0
 10093  003AC2  6FDE               	movwf	_Timer3_Sampling& (0+255),b
 10094  003AC4                     
 10095                           ; BSR set to: 0
 10096                           ;Timer_3.c: 35: LATAbits.LATA5 = 1;
 10097  003AC4  8A89               	bsf	137,5,c	;volatile
 10098  003AC6                     i2l4742:
 10099                           
 10100                           ; BSR set to: 0
 10101                           ;Timer_3.c: 36: };Timer_3.c: 37: };Timer_3.c: 38: if (Timer3_Cntr >= 100)
 10102  003AC6  51CC               	movf	(_Timer3_Cntr+1)& (0+255),w,b
 10103  003AC8  E109               	bnz	i2u489_40
 10104  003ACA  0E64               	movlw	100
 10105  003ACC  5DCB               	subwf	_Timer3_Cntr& (0+255),w,b
 10106  003ACE  A0D8               	btfss	status,0,c
 10107  003AD0  EF6C  F01D         	goto	i2u489_41
 10108  003AD4  EF6E  F01D         	goto	i2u489_40
 10109  003AD8                     i2u489_41:
 10110  003AD8  EF76  F01D         	goto	i2l239
 10111  003ADC                     i2u489_40:
 10112  003ADC                     
 10113                           ; BSR set to: 0
 10114                           ;Timer_3.c: 39: {;Timer_3.c: 40: Timer3_Sampling = 1;
 10115  003ADC  0E01               	movlw	1
 10116  003ADE  6FDE               	movwf	_Timer3_Sampling& (0+255),b
 10117                           
 10118                           ;Timer_3.c: 41: Timer3_Cntr = 0;
 10119  003AE0  0E00               	movlw	0
 10120  003AE2  6FCC               	movwf	(_Timer3_Cntr+1)& (0+255),b
 10121  003AE4  0E00               	movlw	0
 10122  003AE6  6FCB               	movwf	_Timer3_Cntr& (0+255),b
 10123  003AE8                     
 10124                           ; BSR set to: 0
 10125                           ;Timer_3.c: 42: StartDepthDetection();
 10126  003AE8  EC5C  F01F         	call	_StartDepthDetection	;wreg free
 10127  003AEC                     i2l239:
 10128  003AEC  0012               	return		;funcret
 10129  003AEE                     __end_of_Timer3_ISR:
 10130                           	callstack 0
 10131                           
 10132 ;; *************** function _StartDepthDetection *****************
 10133 ;; Defined at:
 10134 ;;		line 19 in file "Timer_2.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;		None
 10137 ;; Auto vars:     Size  Location     Type
 10138 ;;		None
 10139 ;; Return value:  Size  Location     Type
 10140 ;;                  1    wreg      void 
 10141 ;; Registers used:
 10142 ;;		None
 10143 ;; Tracked objects:
 10144 ;;		On entry : 0/0
 10145 ;;		On exit  : 0/0
 10146 ;;		Unchanged: 0/0
 10147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10148 ;;      Params:         0       0       0       0       0       0       0       0       0
 10149 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10150 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10151 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10152 ;;Total ram usage:        0 bytes
 10153 ;; Hardware stack levels used:    1
 10154 ;; This function calls:
 10155 ;;		Nothing
 10156 ;; This function is called by:
 10157 ;;		_Timer3_ISR
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161                           	psect	text43
 10162  003EB8                     __ptext43:
 10163                           	callstack 0
 10164  003EB8                     _StartDepthDetection:
 10165                           	callstack 22
 10166  003EB8                     
 10167                           ;Timer_2.c: 25: LATAbits.LATA5 = 0;
 10168  003EB8  9A89               	bcf	137,5,c	;volatile
 10169                           
 10170                           ;Timer_2.c: 27: PIR1bits.TMR2IF = 0;
 10171  003EBA  929E               	bcf	158,1,c	;volatile
 10172                           
 10173                           ;Timer_2.c: 28: PIE1bits.TMR2IE = 1;
 10174  003EBC  829D               	bsf	157,1,c	;volatile
 10175                           
 10176                           ;Timer_2.c: 29: T2CONbits.TMR2ON = 1;
 10177  003EBE  84BA               	bsf	186,2,c	;volatile
 10178                           
 10179                           ;Timer_2.c: 30: T1CONbits.TMR1ON = 1;
 10180  003EC0  80CD               	bsf	205,0,c	;volatile
 10181  003EC2  0012               	return		;funcret
 10182  003EC4                     __end_of_StartDepthDetection:
 10183                           	callstack 0
 10184                           
 10185 ;; *************** function _Timer2_ISR *****************
 10186 ;; Defined at:
 10187 ;;		line 9 in file "Timer_2.c"
 10188 ;; Parameters:    Size  Location     Type
 10189 ;;		None
 10190 ;; Auto vars:     Size  Location     Type
 10191 ;;		None
 10192 ;; Return value:  Size  Location     Type
 10193 ;;                  1    wreg      void 
 10194 ;; Registers used:
 10195 ;;		wreg, status,2
 10196 ;; Tracked objects:
 10197 ;;		On entry : 0/0
 10198 ;;		On exit  : 0/0
 10199 ;;		Unchanged: 0/0
 10200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10201 ;;      Params:         0       0       0       0       0       0       0       0       0
 10202 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10203 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10204 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10205 ;;Total ram usage:        0 bytes
 10206 ;; Hardware stack levels used:    1
 10207 ;; This function calls:
 10208 ;;		Nothing
 10209 ;; This function is called by:
 10210 ;;		_INTERRUPT_InterruptManager
 10211 ;; This function uses a non-reentrant model
 10212 ;;
 10213                           
 10214                           	psect	text44
 10215  003EC4                     __ptext44:
 10216                           	callstack 0
 10217  003EC4                     _Timer2_ISR:
 10218                           	callstack 23
 10219  003EC4                     
 10220                           ;Timer_2.c: 13: T2CONbits.TMR2ON = 0;
 10221  003EC4  94BA               	bcf	186,2,c	;volatile
 10222  003EC6                     
 10223                           ;Timer_2.c: 14: TMR2 = 0;
 10224  003EC6  0E00               	movlw	0
 10225  003EC8  6EBC               	movwf	188,c	;volatile
 10226  003ECA                     
 10227                           ;Timer_2.c: 15: PIE1bits.TMR2IE = 0;
 10228  003ECA  929D               	bcf	157,1,c	;volatile
 10229  003ECC                     
 10230                           ;Timer_2.c: 16: PIR1bits.TMR2IF = 0;
 10231  003ECC  929E               	bcf	158,1,c	;volatile
 10232  003ECE  0012               	return		;funcret
 10233  003ED0                     __end_of_Timer2_ISR:
 10234                           	callstack 0
 10235                           
 10236 ;; *************** function _Timer0_ISR *****************
 10237 ;; Defined at:
 10238 ;;		line 15 in file "Timer_0.c"
 10239 ;; Parameters:    Size  Location     Type
 10240 ;;		None
 10241 ;; Auto vars:     Size  Location     Type
 10242 ;;		None
 10243 ;; Return value:  Size  Location     Type
 10244 ;;                  1    wreg      void 
 10245 ;; Registers used:
 10246 ;;		wreg, status,2, status,0
 10247 ;; Tracked objects:
 10248 ;;		On entry : 0/0
 10249 ;;		On exit  : 0/0
 10250 ;;		Unchanged: 0/0
 10251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10252 ;;      Params:         0       0       0       0       0       0       0       0       0
 10253 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10254 ;;      Temps:          1       0       0       0       0       0       0       0       0
 10255 ;;      Totals:         1       0       0       0       0       0       0       0       0
 10256 ;;Total ram usage:        1 bytes
 10257 ;; Hardware stack levels used:    1
 10258 ;; This function calls:
 10259 ;;		Nothing
 10260 ;; This function is called by:
 10261 ;;		_INTERRUPT_InterruptManager
 10262 ;; This function uses a non-reentrant model
 10263 ;;
 10264                           
 10265                           	psect	text45
 10266  003D5E                     __ptext45:
 10267                           	callstack 0
 10268  003D5E                     _Timer0_ISR:
 10269                           	callstack 23
 10270  003D5E  0EE1               	movlw	225
 10271  003D60  6ED7               	movwf	215,c	;volatile
 10272  003D62  0E7B               	movlw	123
 10273  003D64  6ED6               	movwf	214,c	;volatile
 10274  003D66                     
 10275                           ;Timer_0.c: 17: INTCONbits.TMR0IF = 0;
 10276  003D66  94F2               	bcf	242,2,c	;volatile
 10277  003D68  B08B               	btfsc	139,0,c	;volatile
 10278  003D6A  EFB9  F01E         	goto	i2u486_41
 10279  003D6E  EFBC  F01E         	goto	i2u486_40
 10280  003D72                     i2u486_41:
 10281  003D72  0E01               	movlw	1
 10282  003D74  EFBD  F01E         	goto	i2u486_46
 10283  003D78                     i2u486_40:
 10284  003D78  0E00               	movlw	0
 10285  003D7A                     i2u486_46:
 10286  003D7A  0AFF               	xorlw	255
 10287  003D7C  6E01               	movwf	??_Timer0_ISR^0,c
 10288  003D7E  508B               	movf	139,w,c	;volatile
 10289  003D80  1801               	xorwf	??_Timer0_ISR^0,w,c
 10290  003D82  0BFE               	andlw	-2
 10291  003D84  1801               	xorwf	??_Timer0_ISR^0,w,c
 10292  003D86  6E8B               	movwf	139,c	;volatile
 10293  003D88                     
 10294                           ;Timer_0.c: 19: gb_UpdateTime = 1;
 10295  003D88  0E01               	movlw	1
 10296  003D8A  0100               	movlb	0	; () banked
 10297  003D8C  6FD6               	movwf	_gb_UpdateTime& (0+255),b	;volatile
 10298  003D8E                     
 10299                           ; BSR set to: 0
 10300  003D8E  0012               	return		;funcret
 10301  003D90                     __end_of_Timer0_ISR:
 10302                           	callstack 0
 10303                           
 10304 ;; *************** function _CCP1_ISR *****************
 10305 ;; Defined at:
 10306 ;;		line 35 in file "CCP1.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;		None
 10309 ;; Auto vars:     Size  Location     Type
 10310 ;;		None
 10311 ;; Return value:  Size  Location     Type
 10312 ;;                  1    wreg      void 
 10313 ;; Registers used:
 10314 ;;		wreg, status,2, cstack
 10315 ;; Tracked objects:
 10316 ;;		On entry : 0/0
 10317 ;;		On exit  : 0/0
 10318 ;;		Unchanged: 0/0
 10319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10320 ;;      Params:         0       0       0       0       0       0       0       0       0
 10321 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10322 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10323 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10324 ;;Total ram usage:        0 bytes
 10325 ;; Hardware stack levels used:    1
 10326 ;; Hardware stack levels required when called:    1
 10327 ;; This function calls:
 10328 ;;		_Timer1_Reset
 10329 ;; This function is called by:
 10330 ;;		_INTERRUPT_InterruptManager
 10331 ;; This function uses a non-reentrant model
 10332 ;;
 10333                           
 10334                           	psect	text46
 10335  003E24                     __ptext46:
 10336                           	callstack 0
 10337  003E24                     _CCP1_ISR:
 10338                           	callstack 22
 10339  003E24                     
 10340                           ;CCP1.c: 37: PIR1bits.CCP1IF = 0;
 10341  003E24  949E               	bcf	158,2,c	;volatile
 10342                           
 10343                           ;CCP1.c: 39: giEchoCounter.EPl = CCPR1L;
 10344  003E26  CFBE F0CF          	movff	4030,_giEchoCounter	;volatile
 10345                           
 10346                           ;CCP1.c: 40: giEchoCounter.EPh = CCPR1H;
 10347  003E2A  CFBF F0D0          	movff	4031,_giEchoCounter+1	;volatile
 10348  003E2E                     
 10349                           ;CCP1.c: 41: CCPR1H = 0;
 10350  003E2E  0E00               	movlw	0
 10351  003E30  6EBF               	movwf	191,c	;volatile
 10352                           
 10353                           ;CCP1.c: 42: CCPR1L = 0;
 10354  003E32  0E00               	movlw	0
 10355  003E34  6EBE               	movwf	190,c	;volatile
 10356  003E36                     
 10357                           ;CCP1.c: 43: Timer1_Reset();
 10358  003E36  EC68  F01F         	call	_Timer1_Reset	;wreg free
 10359  003E3A                     
 10360                           ;CCP1.c: 44: gb_EchoDetected = 1;
 10361  003E3A  0E01               	movlw	1
 10362  003E3C  0100               	movlb	0	; () banked
 10363  003E3E  6FD5               	movwf	_gb_EchoDetected& (0+255),b	;volatile
 10364  003E40                     
 10365                           ; BSR set to: 0
 10366  003E40  0012               	return		;funcret
 10367  003E42                     __end_of_CCP1_ISR:
 10368                           	callstack 0
 10369                           
 10370 ;; *************** function _Timer1_Reset *****************
 10371 ;; Defined at:
 10372 ;;		line 26 in file "Timer_1.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;		None
 10375 ;; Auto vars:     Size  Location     Type
 10376 ;;		None
 10377 ;; Return value:  Size  Location     Type
 10378 ;;                  1    wreg      void 
 10379 ;; Registers used:
 10380 ;;		wreg, status,2
 10381 ;; Tracked objects:
 10382 ;;		On entry : 0/0
 10383 ;;		On exit  : 0/0
 10384 ;;		Unchanged: 0/0
 10385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10386 ;;      Params:         0       0       0       0       0       0       0       0       0
 10387 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10388 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10389 ;;      Totals:         0       0       0       0       0       0       0       0       0
 10390 ;;Total ram usage:        0 bytes
 10391 ;; Hardware stack levels used:    1
 10392 ;; This function calls:
 10393 ;;		Nothing
 10394 ;; This function is called by:
 10395 ;;		_CCP1_ISR
 10396 ;; This function uses a non-reentrant model
 10397 ;;
 10398                           
 10399                           	psect	text47
 10400  003ED0                     __ptext47:
 10401                           	callstack 0
 10402  003ED0                     _Timer1_Reset:
 10403                           	callstack 22
 10404  003ED0                     
 10405                           ;Timer_1.c: 28: T1CONbits.TMR1ON = 0;
 10406  003ED0  90CD               	bcf	205,0,c	;volatile
 10407  003ED2                     
 10408                           ;Timer_1.c: 29: TMR1H = 0;
 10409  003ED2  0E00               	movlw	0
 10410  003ED4  6ECF               	movwf	207,c	;volatile
 10411                           
 10412                           ;Timer_1.c: 30: TMR1L = 0;
 10413  003ED6  0E00               	movlw	0
 10414  003ED8  6ECE               	movwf	206,c	;volatile
 10415  003EDA  0012               	return		;funcret
 10416  003EDC                     __end_of_Timer1_Reset:
 10417                           	callstack 0
 10418                           
 10419                           	psect	rparam
 10420  0000                     
 10421                           	psect	temp
 10422  00005E                     btemp:
 10423                           	callstack 0
 10424  00005E                     	ds	1
 10425  0000                     int$flags	set	btemp
 10426  0000                     wtemp8	set	btemp+1
 10427  0000                     ttemp5	set	btemp+1
 10428  0000                     ttemp6	set	btemp+4
 10429  0000                     ttemp7	set	btemp+8
 10430                           
 10431                           	psect	idloc
 10432                           
 10433                           ;Config register IDLOC0 @ 0x200000
 10434                           ;	unspecified, using default values
 10435  200000                     	org	2097152
 10436  200000  FF                 	db	255
 10437                           
 10438                           ;Config register IDLOC1 @ 0x200001
 10439                           ;	unspecified, using default values
 10440  200001                     	org	2097153
 10441  200001  FF                 	db	255
 10442                           
 10443                           ;Config register IDLOC2 @ 0x200002
 10444                           ;	unspecified, using default values
 10445  200002                     	org	2097154
 10446  200002  FF                 	db	255
 10447                           
 10448                           ;Config register IDLOC3 @ 0x200003
 10449                           ;	unspecified, using default values
 10450  200003                     	org	2097155
 10451  200003  FF                 	db	255
 10452                           
 10453                           ;Config register IDLOC4 @ 0x200004
 10454                           ;	unspecified, using default values
 10455  200004                     	org	2097156
 10456  200004  FF                 	db	255
 10457                           
 10458                           ;Config register IDLOC5 @ 0x200005
 10459                           ;	unspecified, using default values
 10460  200005                     	org	2097157
 10461  200005  FF                 	db	255
 10462                           
 10463                           ;Config register IDLOC6 @ 0x200006
 10464                           ;	unspecified, using default values
 10465  200006                     	org	2097158
 10466  200006  FF                 	db	255
 10467                           
 10468                           ;Config register IDLOC7 @ 0x200007
 10469                           ;	unspecified, using default values
 10470  200007                     	org	2097159
 10471  200007  FF                 	db	255
 10472                           
 10473                           	psect	config
 10474                           
 10475                           ;Config register CONFIG1L @ 0x300000
 10476                           ;	PLL Selection
 10477                           ;	PLLSEL = PLL4X, 4x clock multiplier
 10478                           ;	PLL Enable Configuration bit
 10479                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
 10480                           ;	CPU System Clock Postscaler
 10481                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
 10482                           ;	Low Speed USB mode with 48 MHz system clock
 10483                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
 10484  300000                     	org	3145728
 10485  300000  00                 	db	0
 10486                           
 10487                           ;Config register CONFIG1H @ 0x300001
 10488                           ;	Oscillator Selection
 10489                           ;	FOSC = HSM, HS oscillator, medium power 4MHz to 16MHz
 10490                           ;	Primary Oscillator Shutdown
 10491                           ;	PCLKEN = ON, Primary oscillator enabled
 10492                           ;	Fail-Safe Clock Monitor
 10493                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10494                           ;	Internal/External Oscillator Switchover
 10495                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10496  300001                     	org	3145729
 10497  300001  23                 	db	35
 10498                           
 10499                           ;Config register CONFIG2L @ 0x300002
 10500                           ;	Power-up Timer Enable
 10501                           ;	nPWRTEN = OFF, Power up timer disabled
 10502                           ;	Brown-out Reset Enable
 10503                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
 10504                           ;	Brown-out Reset Voltage
 10505                           ;	BORV = 190, BOR set to 1.9V nominal
 10506                           ;	Low-Power Brown-out Reset
 10507                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
 10508  300002                     	org	3145730
 10509  300002  5F                 	db	95
 10510                           
 10511                           ;Config register CONFIG2H @ 0x300003
 10512                           ;	Watchdog Timer Enable bits
 10513                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
 10514                           ;	Watchdog Timer Postscaler
 10515                           ;	WDTPS = 32768, 1:32768
 10516  300003                     	org	3145731
 10517  300003  3C                 	db	60
 10518                           
 10519                           ; Padding undefined space
 10520  300004                     	org	3145732
 10521  300004  FF                 	db	255
 10522                           
 10523                           ;Config register CONFIG3H @ 0x300005
 10524                           ;	CCP2 MUX bit
 10525                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
 10526                           ;	PORTB A/D Enable bit
 10527                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 10528                           ;	Timer3 Clock Input MUX bit
 10529                           ;	T3CMX = RC0, T3CKI function is on RC0
 10530                           ;	SDO Output MUX bit
 10531                           ;	SDOMX = RB3, SDO function is on RB3
 10532                           ;	Master Clear Reset Pin Enable
 10533                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
 10534  300005                     	org	3145733
 10535  300005  D3                 	db	211
 10536                           
 10537                           ;Config register CONFIG4L @ 0x300006
 10538                           ;	Stack Full/Underflow Reset
 10539                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10540                           ;	Single-Supply ICSP Enable bit
 10541                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 10542                           ;	Dedicated In-Circuit Debug/Programming Port Enable
 10543                           ;	ICPRT = OFF, ICPORT disabled
 10544                           ;	Extended Instruction Set Enable bit
 10545                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
 10546                           ;	Background Debugger Enable bit
 10547                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10548  300006                     	org	3145734
 10549  300006  85                 	db	133
 10550                           
 10551                           ; Padding undefined space
 10552  300007                     	org	3145735
 10553  300007  FF                 	db	255
 10554                           
 10555                           ;Config register CONFIG5L @ 0x300008
 10556                           ;	Block 0 Code Protect
 10557                           ;	CP0 = OFF, Block 0 is not code-protected
 10558                           ;	Block 1 Code Protect
 10559                           ;	CP1 = OFF, Block 1 is not code-protected
 10560                           ;	Block 2 Code Protect
 10561                           ;	CP2 = OFF, Block 2 is not code-protected
 10562                           ;	Block 3 Code Protect
 10563                           ;	CP3 = OFF, Block 3 is not code-protected
 10564  300008                     	org	3145736
 10565  300008  0F                 	db	15
 10566                           
 10567                           ;Config register CONFIG5H @ 0x300009
 10568                           ;	Boot Block Code Protect
 10569                           ;	CPB = OFF, Boot block is not code-protected
 10570                           ;	Data EEPROM Code Protect
 10571                           ;	CPD = OFF, Data EEPROM is not code-protected
 10572  300009                     	org	3145737
 10573  300009  C0                 	db	192
 10574                           
 10575                           ;Config register CONFIG6L @ 0x30000A
 10576                           ;	Block 0 Write Protect
 10577                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 10578                           ;	Block 1 Write Protect
 10579                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 10580                           ;	Block 2 Write Protect
 10581                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 10582                           ;	Block 3 Write Protect
 10583                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 10584  30000A                     	org	3145738
 10585  30000A  0F                 	db	15
 10586                           
 10587                           ;Config register CONFIG6H @ 0x30000B
 10588                           ;	Configuration Registers Write Protect
 10589                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10590                           ;	Boot Block Write Protect
 10591                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 10592                           ;	Data EEPROM Write Protect
 10593                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10594  30000B                     	org	3145739
 10595  30000B  E0                 	db	224
 10596                           
 10597                           ;Config register CONFIG7L @ 0x30000C
 10598                           ;	Block 0 Table Read Protect
 10599                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 10600                           ;	Block 1 Table Read Protect
 10601                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 10602                           ;	Block 2 Table Read Protect
 10603                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 10604                           ;	Block 3 Table Read Protect
 10605                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 10606  30000C                     	org	3145740
 10607  30000C  0F                 	db	15
 10608                           
 10609                           ;Config register CONFIG7H @ 0x30000D
 10610                           ;	Boot Block Table Read Protect
 10611                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 10612  30000D                     	org	3145741
 10613  30000D  40                 	db	64
 10614                           tosu	equ	0xFFF
 10615                           tosh	equ	0xFFE
 10616                           tosl	equ	0xFFD
 10617                           stkptr	equ	0xFFC
 10618                           pclatu	equ	0xFFB
 10619                           pclath	equ	0xFFA
 10620                           pcl	equ	0xFF9
 10621                           tblptru	equ	0xFF8
 10622                           tblptrh	equ	0xFF7
 10623                           tblptrl	equ	0xFF6
 10624                           tablat	equ	0xFF5
 10625                           prodh	equ	0xFF4
 10626                           prodl	equ	0xFF3
 10627                           indf0	equ	0xFEF
 10628                           postinc0	equ	0xFEE
 10629                           postdec0	equ	0xFED
 10630                           preinc0	equ	0xFEC
 10631                           plusw0	equ	0xFEB
 10632                           fsr0h	equ	0xFEA
 10633                           fsr0l	equ	0xFE9
 10634                           wreg	equ	0xFE8
 10635                           indf1	equ	0xFE7
 10636                           postinc1	equ	0xFE6
 10637                           postdec1	equ	0xFE5
 10638                           preinc1	equ	0xFE4
 10639                           plusw1	equ	0xFE3
 10640                           fsr1h	equ	0xFE2
 10641                           fsr1l	equ	0xFE1
 10642                           bsr	equ	0xFE0
 10643                           indf2	equ	0xFDF
 10644                           postinc2	equ	0xFDE
 10645                           postdec2	equ	0xFDD
 10646                           preinc2	equ	0xFDC
 10647                           plusw2	equ	0xFDB
 10648                           fsr2h	equ	0xFDA
 10649                           fsr2l	equ	0xFD9
 10650                           status	equ	0xFD8

Data Sizes:
    Strings     103
    Constant    108
    Data        80
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      93
    BANK0           160     86     152
    BANK1           256      0      47
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    sprintf$1628	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_11(CODE[17]), STR_10(CODE[17]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(COMRAM[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_9(CODE[12]), STR_8(CODE[12]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 2047
		 -> gsCurrDate(BANK0[9]), gsCurrTime(BANK0[9]), gsTotalSecs(BANK0[4]), RAM(DATA[2047]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    LCD_WriteString@iData	PTR unsigned char  size(2) Largest target is 2047
		 -> gsTotalSecs(BANK0[4]), RAM(DATA[2047]), STR_2(CODE[17]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _LCD_Init->_LCD_WriteCmd
    _pow->_log
    _log->___fladd
    _exp->_ldexp
    _exp->_log
    _floor->___fladd
    _frexp->___fleq
    ___fleq->___xxtofl
    _eval_poly->___fladd
    _ComputeWaterVol->___fladd
    _sqrt->___fladd
    ___xxtofl->___fltol
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->_frexp
    _ComputeTOD->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_WriteString->_LCD_WriteChar
    _LCD_GoTo->_LCD_WriteCmd

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_Timer0_ISR

Critical Paths under _main in BANK0

    _main->_ComputeWaterVol
    _InitTankVariables->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___fladd
    _eval_poly->___fladd
    _ComputeWaterVol->_sqrt
    _sqrt->___fladd
    ___flsub->___fladd
    ___fladd->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  119579
                                             85 BANK0      1     1      0
                          _CCP1_Init
                          _CCP2_Init
                         _ComputeTOD
                    _ComputeWaterVol
                  _InitTankVariables
                           _LCD_GoTo
                           _LCD_Init
                    _LCD_WriteString
                            _SysInit
                        _Timer0_Init
                        _Timer1_Init
                        _Timer2_Init
                        _Timer3_Init
 ---------------------------------------------------------------------------------
 (1) _Timer3_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer2_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SysInit                                              0     0      0       0
                            _OscInit
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OscInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     927
                                              8 COMRAM     2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _InitTankVariables                                    4     4      0   79407
                                             75 BANK0      4     4      0
                            ___flmul
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 21    13      8   74560
                                             54 BANK0     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   24552
                                             90 COMRAM     2     2      0
                                             37 BANK0      4     0      4
                            ___fladd
                             ___fleq
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                 11     7      4   39614
                                             43 BANK0     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                8     2      6    2389
                                             90 COMRAM     2     2      0
                                             37 BANK0      6     0      6
                             ___fleq
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                               10     6      4    9851
                                             21 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                8     2      6    2532
                                             62 COMRAM     8     2      6
                             ___fleq
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    1850
                                             50 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     8      8    9769
                                             21 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     335
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _ComputeWaterVol                                     35    35      0   28456
                                             50 BANK0     35    35      0
                           _LCD_GoTo
                    _LCD_WriteString
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                29    25      4    1403
                                             21 BANK0     29    25      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1016
                                             36 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     697
                                             26 COMRAM    10     6      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4727
                                             21 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    4162
                                             82 COMRAM     8     0      8
                                             13 BANK0      8     8      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4813
                                             70 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fldiv (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2543
                                              1 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _ComputeTOD                                           3     3      0    8730
                                             48 COMRAM     3     3      0
                           _LCD_GoTo
                    _LCD_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             39    29     10    6674
                                             13 COMRAM    35    25     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     412
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     412
                                              8 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     781
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      5     3      2     673
                                              4 COMRAM     5     3      2
                      _LCD_WriteChar
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteChar                                        3     3      0      93
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_GoTo                                             7     6      1    1346
                                              8 COMRAM     7     6      1
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         7     5      2     791
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _CCP2_Init                                            1     1      0      37
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CCP1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0       0
                           _CCP1_ISR
                         _Timer0_ISR
                         _Timer2_ISR
                         _Timer3_ISR
 ---------------------------------------------------------------------------------
 (8) _Timer3_ISR                                           0     0      0       0
                _StartDepthDetection
 ---------------------------------------------------------------------------------
 (9) _StartDepthDetection                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CCP1_ISR                                             0     0      0       0
                       _Timer1_Reset
 ---------------------------------------------------------------------------------
 (9) _Timer1_Reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP1_Init
   _CCP2_Init
   _ComputeTOD
     _LCD_GoTo
       _LCD_WriteCmd
     _LCD_WriteString
       _LCD_WriteChar
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _ComputeWaterVol
     _LCD_GoTo
       _LCD_WriteCmd
     _LCD_WriteString
       _LCD_WriteChar
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
     ___fldiv
     ___flmul
       ___fldiv (ARG)
       ___fltol (ARG)
         ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
     ___flsub
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
     ___fltol
       ___fldiv (ARG)
     ___xxtofl
       ___fltol (ARG)
         ___fldiv (ARG)
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
     _sqrt
       ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
   _InitTankVariables
     ___flmul
       ___fldiv (ARG)
       ___fltol (ARG)
         ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
       _frexp (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
     _pow
       ___fleq
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
       ___flge
       ___flmul
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
       ___flneg
       ___fltol
         ___fldiv (ARG)
       ___xxtofl
         ___fltol (ARG)
           ___fldiv (ARG)
       _exp
         ___fldiv
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
         ___flge
         ___flmul
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
         ___fltol
           ___fldiv (ARG)
         ___xxtofl
           ___fltol (ARG)
             ___fldiv (ARG)
         _eval_poly
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___fldiv (ARG)
         _floor
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___fldiv (ARG)
           ___flge
           ___fltol
             ___fldiv (ARG)
           ___xxtofl
             ___fltol (ARG)
               ___fldiv (ARG)
           _frexp
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
         _ldexp
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
           _eval_poly (ARG)
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___fldiv (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___fldiv (ARG)
         _log (ARG)
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___fldiv (ARG)
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___fldiv (ARG)
           ___xxtofl
             ___fltol (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
               ___flmul (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___fldiv (ARG)
                 _frexp (ARG)
                   ___fleq
                     ___xxtofl (ARG)
                       ___fltol (ARG)
                         ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___fldiv (ARG)
             ___flmul
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___fldiv (ARG)
           _frexp
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
       _log
         ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
         ___fleq
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
         ___flmul
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
         ___xxtofl
           ___fltol (ARG)
             ___fldiv (ARG)
         _eval_poly
           ___fladd
             ___fldiv (ARG)
             ___flmul (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fltol (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fleq
                   ___xxtofl (ARG)
                     ___fltol (ARG)
                       ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___fldiv (ARG)
           ___flmul
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fleq
                 ___xxtofl (ARG)
                   ___fltol (ARG)
                     ___fldiv (ARG)
         _frexp
           ___fleq
             ___xxtofl (ARG)
               ___fltol (ARG)
                 ___fldiv (ARG)
   _LCD_GoTo
     _LCD_WriteCmd
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
     _LCD_WriteChar
   _SysInit
     _OscInit
     _PIN_MANAGER_Initialize
       _PIN_MANAGER_IOC
   _Timer0_Init
   _Timer1_Init
   _Timer2_Init
   _Timer3_Init

 _INTERRUPT_InterruptManager (ROOT)
   _CCP1_ISR
     _Timer1_Reset
   _Timer0_ISR
   _Timer2_ISR
   _Timer3_ISR
     _StartDepthDetection

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      2F       8       18.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     56      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5D       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     124       6        0.0%
DATA                 0      0     124       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Apr 22 11:54:37 2021

                       ___fldiv@aexp 001A                         ___fldiv@bexp 0019  
                 __size_of_CCP1_Init 0016                         ___fldiv@sign 0012  
                 __size_of_CCP2_Init 001E                                   l76 3EE4  
                                 l79 3EB6                  ___wmul@multiplicand 0004  
                                l127 3EA4                                  l242 3E80  
                                l334 269A                                  l183 3E92  
                                l337 36BC                                  l347 31B2  
                                l532 38B6                                  l541 3910  
                                l438 3E6C                                  l534 38B8  
                                l550 3BB4                                  l390 3CAA  
                                l543 392C                                  l560 39A4  
                                l632 3E56                                  l553 3BFE  
                                l529 3C5E                                  l393 3EE8  
                                l482 3E22                                  l554 3C06  
                                l546 3BB0                                  l548 3BB2  
                                l741 1038                                  l568 3BAC  
                                l664 0970                                  l753 1254  
                                l757 1180                                  l687 0B0C  
                                l784 1408                                  l698 0BE8  
                                l787 3DE4                                  l779 138A  
                                _PR2 000FBB                                  _exp 269C  
                                _log 2D98                                  _pow 2984  
                                wreg 000FE8                    ??_LCD_WriteString 0007  
                       ___flmul@aexp 0061                         ___flmul@bexp 0066  
                       ___flmul@sign 0060                         ___flmul@temp 006B  
                       ___flmul@prod 0067                         ___fltol@exp1 0024  
                               l1042 382A                                 l1053 3D2A  
                               l1303 15FA                                 l1320 1714  
                               l1312 18CA                                 l1304 15E8  
                               l1048 34AE                                 l1305 15AE  
                               l1049 34F4                                 l1330 17D2  
                               l1076 33F0                                 l1406 1CB8  
                               l1502 2982                                 l1512 35E8  
                               l1520 3076                                 l1273 3A18  
                               l1329 17E4                                 l1345 3CF2  
                               l1513 35F8                                 l1266 3A10  
                               l1370 1FAE                                 l1362 1EB4  
                               l1450 2C3A                                 l1418 23AC  
                               l1522 3066                                 l1506 2972  
                               l1283 3B50                                 l1371 1F9C  
                               l1276 3B48                                 l1532 32EA  
                               l1357 2090                                 l1453 2D96  
                               l1550 2F34                                 l1359 1EF0  
                               l1368 1F36                                 l5000 1478  
                               l1464 2D2E                                 l1528 3780  
                               l1473 3D5C                                 l1393 1CF6  
                               l1457 2CD2                                 l5010 14A2  
                               l5002 148A                                 l1483 29F8  
                               l1396 1B88                                 l5100 1678  
                               l5012 14B2                                 l5020 14DC  
                               l5004 148C                                 l1484 2BE2  
                               l1389 1992                                 l1398 1C00  
                               l5110 16E4                                 l5102 1682  
                               l5030 1514                                 l5022 14EC  
                               l5014 14C2                                 l5006 1492  
                               l1399 1BEE                                 l6000 0A92  
                               l5200 1936                                 l5112 16F4  
                               l5104 1688                                 l5040 1528  
                               l5032 1518                                 l5024 14FE  
                               l5016 14D2                                 l5008 14A0  
                               l1488 2BD2                                 l6002 0A9A  
                               l6010 0AB6                                 l5210 196C  
                               l5202 193C                                 l5130 1776  
                               l5122 174E                                 l5106 16AE  
                               l5114 1704                                 l5050 153C  
                               l5042 152C                                 l5034 151C  
                               l5026 150C                                 l5018 14D4  
                               l6100 0D44                                 l6012 0ABE  
                               l6004 0AA8                                 l6020 0AFC  
                               l5300 1CCC                                 l5212 197C  
                               l5204 194A                                 l5132 177E  
                               l5124 1758                                 l5116 172A  
                               l5108 16E2                                 l5140 17A2  
                               l5060 1550                                 l5052 1540  
                               l5044 1530                                 l5036 1520  
                               l5028 1510                                 l6110 0D8C  
                               l6102 0D48                                 l6030 0B42  
                               l6022 0B04                                 l6014 0AC6  
                               l6006 0AAC                                 l5302 1CDA  
                               l5230 19FE                                 l5222 19C6  
                               l5214 1982                                 l5206 194C  
                               l5150 17F4                                 l5142 17A6  
                               l5134 1782                                 l5126 1766  
                               l5118 173A                                 l5070 15C8  
                               l5062 157A                                 l5054 1544  
                               l5046 1534                                 l5038 1524  
                               l6200 1056                                 l6120 0DAC  
                               l6032 0B48                                 l6024 0B0A  
                               l6016 0AD6                                 l6008 0AAE  
                               l5304 1CDC                                 l5240 1A48  
                               l5232 1A16                                 l5224 19D2  
                               l5216 19A2                                 l5208 195C  
                               l5160 185A                                 l5152 1800  
                               l5144 17B4                                 l5136 1792  
                               l5128 1768                                 l5080 1608  
                               l5072 15CC                                 l5064 1596  
                               l5056 1548                                 l5048 1538  
                               l5400 2CC8                                 l5320 346E  
                               l5312 33F2                                 l6210 10B0  
                               l6202 1086                                 l6130 0DE4  
                               l6114 0D92                                 l6106 0D5E  
                               l6050 0BC6                                 l6042 0B84  
                               l6034 0B5E                                 l6026 0B12  
                               l6018 0ADA                                 l5306 1CE2  
                               l5250 1A9E                                 l5242 1A58  
                               l5234 1A22                                 l5226 19DC  
                               l5218 19B2                                 l5170 18A2  
                               l5162 186A                                 l5154 180E  
                               l5146 17CA                                 l5138 1794  
                               l5090 164A                                 l5082 1618  
                               l5074 15DA                                 l5066 15A6  
                               l5058 154C                                 l5410 2D3E  
                               l5402 2D04                                 l5330 34F2  
                               l5322 347C                                 l5314 3420  
                               l6220 10E6                                 l6212 10B8  
                               l6204 1092                                 l6124 0DDA  
                               l6116 0D96                                 l6300 13FC  
                               l6060 0C06                                 l6052 0BCA  
                               l6044 0B90                                 l6036 0B6A  
                               l6028 0B22                                 l5308 1CE6  
                               l5260 1B42                                 l5252 1ABA  
                               l5244 1A64                                 l5236 1A2E  
                               l5228 19F2                                 l5172 18A4  
                               l5164 188A                                 l5156 1848  
                               l5092 1658                                 l5076 15DC  
                               l5068 15BC                                 l5340 3316  
                               l5420 2D86                                 l5412 2D42  
                               l5404 2D10                                 l5324 348E  
                               l5316 3430                                 l6230 1132  
                               l6222 10EA                                 l6206 1096  
                               l6150 0E7A                                 l6134 0DFA  
                               l6070 0C44                                 l6062 0C0A  
                               l6046 0B94                                 l6054 0BCE  
                               l6038 0B72                                 l5510 1E78  
                               l5502 1E2E                                 l5270 1B98  
                               l5262 1B50                                 l5254 1AC6  
                               l5246 1A74                                 l5238 1A3C  
                               l5190 18FA                                 l5182 18CC  
                               l5174 18AA                                 l5166 188E  
                               l5158 184A                                 l5094 1664  
                               l5086 162C                                 l5078 15E6  
                               l5350 3364                                 l5342 3340  
                               l5334 32EC                                 l5414 2D66  
                               l5406 2D1E                                 l5326 349C  
                               l5318 345E                                 l6310 29EE  
                               l6400 3E58                                 l6240 118E  
                               l6232 1136                                 l6208 10A4  
                               l6216 10C8                                 l6224 1106  
                               l6160 0ECE                                 l6152 0E94  
                               l6128 0DE0                                 l6144 0E2E  
                               l6080 0CCE                                 l6072 0C50  
                               l6064 0C28                                 l6048 0BB2  
                               l5520 1EBE                                 l5512 1E80  
                               l5504 1E48                                 l5272 1BA6  
                               l5264 1B6E                                 l5256 1AE2  
                               l5248 1A8E                                 l5192 190A  
                               l5184 18DA                                 l5176 18B8  
                               l5168 189C                                 l5096 1668  
                               l5088 163C                                 l5360 3390  
                               l5344 3342                                 l5336 3302  
                               l5416 2D76                                 l5408 2D3C  
                               l5328 34EC                                 l5440 3770  
                               l5432 3714                                 l5424 36BE  
                               l5600 2F62                                 l6320 2A56  
                               l6304 2984                                 l6402 3E64  
                               l6410 3E16                                 l6250 11E2  
                               l6226 1118                                 l6234 114E  
                               l6218 10DA                                 l6170 0F44  
                               l6162 0EDC                                 l6154 0E98  
                               l6138 0E28                                 l6146 0E56  
                               l6082 0CDE                                 l6090 0D04  
                               l6066 0C34                                 l6058 0BFA  
                               l5530 1F16                                 l5522 1EDC  
                               l5514 1E90                                 l5506 1E58  
                               l5450 1D14                                 l5282 1C10  
                               l5290 1C58                                 l5274 1BAA  
                               l5266 1B78                                 l5258 1B0C  
                               l5194 191A                                 l5186 18E8  
                               l5178 18BA                                 l5098 1676  
                               l5370 33C0                                 l5346 3352  
                               l5418 2D84                                 l5434 3756  
                               l5426 36F0                                 l5602 2F70  
                               l5610 2F98                                 l6330 2AF8  
                               l6322 2A66                                 l6314 2A0E  
                               l6306 298A                                 l6404 3E66  
                               l6412 3E1E                                 l5700 3DC0  
                               l6260 123C                                 l6252 1212  
                               l6244 119E                                 l6236 116C  
                               l6228 1126                                 l6180 0FB8  
                               l6172 0F56                                 l6164 0EFC  
                               l6156 0EAA                                 l6148 0E72  
                               l6092 0D14                                 l6084 0CE6  
                               l6068 0C3C                                 l6076 0C58  
                               l5540 1F54                                 l5532 1F1C  
                               l5524 1EDE                                 l5516 1EA4  
                               l5508 1E68                                 l5452 1D24  
                               l5460 1D4E                                 l5444 1CF8  
                               l5292 1C72                                 l5284 1C1C  
                               l5276 1BB8                                 l5268 1B86  
                               l5196 1920                                 l5188 18EA  
                               l5372 33D0                                 l5356 337C  
                               l5348 3356                                 l5380 2BF6  
                               l6420 2548                                 l5620 34F6  
                               l5436 3766                                 l5428 3700  
                               l5612 2FAE                                 l6340 2BAA  
                               l6324 2AD2                                 l6332 2B1C  
                               l6316 2A40                                 l6308 29BC  
                               l6500 386A                                 l6406 3E68  
                               l5710 39C0                                 l5702 3DDC  
                               l6270 12CC                                 l6262 1244  
                               l6254 121E                                 l6246 11CE  
                               l6238 1178                                 l6190 1006  
                               l6182 0FC0                                 l6174 0F60  
                               l6166 0F0C                                 l6158 0EC8  
                               l6086 0CF4                                 l6094 0D1C  
                               l6078 0CB0                                 l5550 1FBE  
                               l5542 1F58                                 l5534 1F26  
                               l5526 1EEE                                 l5518 1EB2  
                               l5470 1D7A                                 l5462 1D5E  
                               l5454 1D34                                 l5446 1D04  
                               l5294 1C86                                 l5286 1C2A  
                               l5278 1BE6                                 l5198 1930  
                               l5374 33E0                                 l5366 33A4  
                               l5358 3386                                 l5390 2C74  
                               l5382 2C04                                 l6430 2646  
                               l6422 257C                                 l6414 23AE  
                               l5622 3540                                 l5438 376E  
                               l5614 2FC2                                 l5606 2F84  
                               l6334 2B40                                 l6350 3E9E  
                               l6510 3888                                 l6502 386E  
                               l6408 3E06                                 l5720 39FA  
                               l5712 39C8                                 l6272 12DA  
                               l6256 1222                                 l6248 11DA  
                               l6192 1024                                 l6184 0FE4  
                               l6176 0F90                                 l6168 0F14  
                               l6096 0D2C                                 l6088 0CF8  
                               l6440 307C                                 l5560 2020  
                               l5552 1FCA                                 l5544 1F66  
                               l5536 1F34                                 l5528 1F00  
                               l5472 1D8A                                 l5480 1DB4  
                               l5464 1D64                                 l5456 1D44  
                               l5448 1D12                                 l5296 1CA0  
                               l5288 1C54                                 l5368 33B0  
                               l5392 2C7C                                 l5384 2C4A  
                               l6432 265A                                 l6424 25B0  
                               l6416 23B8                                 l5624 35D4  
                               l5616 302E                                 l5640 325C  
                               l5632 31FC                                 l5800 28E0  
                               l6336 2B74                                 l6328 2AF0  
                               l6344 3EDC                                 l6352 3E82  
                               l6360 3E74                                 l6512 388C  
                               l6504 3872                                 l5722 3A02  
                               l5714 39D0                                 l5706 39A6  
                               l5730 3B00                                 l6290 1398  
                               l6282 1340                                 l6274 12E6  
                               l6266 1258                                 l6258 1230  
                               l6194 1030                                 l6186 0FF0  
                               l6178 0FAC                                 l6098 0D3E  
                               l6450 30D0                                 l6442 30A0  
                               l5570 207E                                 l5562 2036  
                               l5554 1FD8                                 l5546 1F94  
                               l5538 1F46                                 l5490 1DF6  
                               l5482 1DC4                                 l5474 1D9A  
                               l5466 1D6A                                 l5458 1D46  
                               l5298 1CBC                                 l5394 2C88  
                               l5386 2C60                                 l5378 2BE6  
                               l6434 267C                                 l6426 2612  
                               l6418 23EE                                 l5642 3272  
                               l5634 3240                                 l5626 31B4  
                               l5802 28F2                                 l6338 2B98  
                               l6370 3C18                                 l6346 3E94  
                               l6354 3E8A                                 l6362 3E78  
                               l6514 3892                                 l6506 3874  
                               l5724 3A04                                 l5716 39DE  
                               l5708 39AE                                 l5740 3B3C  
                               l5732 3B08                                 l6292 13B2  
                               l6276 12EE                                 l6268 129E  
                               l6284 1368                                 l6196 1046  
                               l6188 0FF8                                 l6460 310C  
                               l6452 30D4                                 l6444 30A8  
                               l5572 2084                                 l5564 2050  
                               l5556 2002                                 l5484 1DDA  
                               l5476 1DAA                                 l5468 1D78  
                               l5396 2CBA                                 l5900 21D2  
                               l6436 2686                                 l6428 263C  
                               l5652 329C                                 l5644 327A  
                               l5628 31E6                                 l5804 2924  
                               l6380 3C42                                 l6372 3C26  
                               l5820 3C8A                                 l5812 3C60  
                               l6348 3E9C                                 l6356 3E8C  
                               l6364 3E7E                                 l6516 38A2  
                               l6508 3876                                 ?_exp 008B  
                               ?_log 0085                                 l5670 3900  
                               l5830 392E                                 l5726 3A0A  
                               l5718 39E4                                 l5742 3B42  
                               l5734 3B10                                 l6294 13BE  
                               l6278 130C                                 l6470 3174  
                               l6462 3118                                 l6454 30E6  
                               l6446 30BA                                 l6438 3078  
                               l5574 2086                                 l5566 206C  
                               l5558 2006                                 l5486 1DEA  
                               l5494 1E0A                                 l5478 1DAC  
                               l5582 3CAC                                 l5398 2CBC  
                               l5910 2232                                 l5902 21E2  
                               l5590 3D0A                                 l5646 3288  
                               l5750 2DC4                                 l6390 3664  
                               l6382 3C50                                 l6374 3C26  
                               l6366 3C08                                 l5662 3EE6  
                               l5822 3C8C                                 l5814 3C84  
                               l6358 3E6E                                 l6518 38A6  
                               l5672 3902                                 l5664 38BA  
                               l5840 3B64                                 l5680 3BB6  
                               l5832 3936                                 l5736 3B1E  
                               l5728 3AEE                                 l6296 13C2  
                               l6288 1378                                 l6472 3186  
                               l6464 313E                                 l6448 30BE  
                               l6456 30EE                                 l5568 2070  
                               l5496 1E1A                                 l5488 1DF2  
                               l5584 3CBE                                 l5912 2256  
                               l5920 22AC                                 l5904 21F2  
                               l5592 3D1A                                 l5656 32B0  
                               l5808 293A                                 l5760 2E8E  
                               l5752 2DF6                                 l5744 2D98  
                               l6392 3676                                 l6384 3C50  
                               l6376 3C34                                 l6368 3C18  
                               l5824 3CA4                                 l5816 3C86  
                               l6480 382C                                 l5674 3904  
                               l5666 38BE                                 l5842 3B74  
                               l5682 3BBA                                 l5834 3966  
                               l5738 3B34                                 l5690 3D32  
                               l6298 13DA                                 l6474 318A  
                               l6466 314E                                 l6458 3102  
                               l5498 1E1A                                 l5930 2346  
                               l5922 22BC                                 l5914 2276  
                               l5906 21FC                                 l5850 2092  
                               l4970 37EE                                 l5658 32DA  
                               l5762 2EC4                                 l5746 2DA8  
                               l6394 36AA                                 l6386 35FA  
                               l6378 3C34                                 l5826 3CA6  
                               l5818 3C88                                 l6490 3856  
                               l6482 3830                                 l5676 3912  
                               l5668 38E4                                 l5844 3B88  
                               l5684 3BE0                                 l5836 3968  
                               l5692 3D42                                 l6468 3170  
                               l6476 318C                                 l4980 140A  
                               l5940 23A0                                 l5932 2374  
                               l5924 22E6                                 l5916 22A0  
                               l5908 2204                                 l5860 20CE  
                               l5852 20A0                                 l5588 3CF4  
                               l4972 37FE                                 l4964 3782  
                               l5596 2F36                                 l5780 2766  
                               l5772 26E4                                 l5756 2E14  
                               l6388 3630                                 l5828 3EA6  
                               l6396 3E42                                 l6492 385A  
                               l6484 3834                                 l5678 3916  
                               l5846 3B98                                 l5838 3B54  
                               l5686 3BFC                                 l5694 3D52  
                               l5950 08E2                                 l4990 1448  
                               l4982 1418                                 l5942 23A6  
                               l5934 238C                                 l5926 22FE  
                               l5918 22AA                                 l5870 2104  
                               l5862 20E0                                 l5854 20AE  
                               l4974 3822                                 l4966 37B0  
                               l5598 2F52                                 l5790 27CE  
                               l5774 2716                                 l5766 269C  
                               l5758 2E88                                 l6398 3E46  
                               l6494 385E                                 l6486 3840  
                               l6478 382C                                 l5848 3B9C  
                               l5696 3D56                                 l5688 3D2E  
                               l5960 0926                                 l5952 08F4  
                               l4992 1458                                 l4984 1426  
                               l5936 2390                                 l5928 2338  
                               l5880 214A                                 l5872 2116  
                               l5864 20E2                                 l5856 20B0  
                               l4976 3828                                 l4968 37C0  
                               l5792 2802                                 l5784 2784  
                               l5768 26CE                                 l6496 3862  
                               l6488 384A                                 l5970 097E  
                               l5962 0930                                 l5954 0900  
                               l4994 145A                                 l4986 1428  
                               l5938 239E                                 l5890 2180  
                               l5882 2152                                 l5866 20F4  
                               l5858 20B6                                 l5794 2826  
                               l5786 279A                                 l5778 2734  
                               l6498 3866                                 l5980 09EA  
                               l5972 0980                                 l5964 093A  
                               l5956 0908                                 l5948 08D6  
                               l4988 1438                                 l4996 1462  
                               l5884 215A                                 l5876 212A  
                               l5796 2842                                 l5788 27AA  
                               l5990 0A44                                 l5982 09EE  
                               l5974 099E                                 l5958 091C  
                               l4998 1472                                 l5878 213A  
                               l5798 288E                                 l5992 0A48  
                               l5976 09A6                                 l5984 0A10  
                               l5968 0940                                 l5896 2194  
                               l5888 216E                                 l5994 0A64  
                               l5986 0A2C                                 l5978 09C2  
                               l5898 21C2                                 l5996 0A6A  
                               l5988 0A3C                                 l5998 0A86  
                               ?_pow 0096                                 STR_1 08A0  
                               STR_2 088F                                 STR_3 08C7  
                               STR_4 08C8                                 STR_5 08D0  
                               STR_6 08CC                                 STR_7 08CC  
                               STR_8 08AF                                 STR_9 08BB  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 u5100 3822  
                               u5101 381E                                 u5110 1426  
                               u5111 1422                                 u6000 1E1A  
                               u5200 157A                                 u5120 1438  
                               u6001 1E16                                 u5201 1576  
                               u5121 1434                                 u6010 1E90  
                               u5210 1592                                 u5130 1448  
                               u6011 1E8C                                 u5211 158C  
                               u5131 1444                                 u6100 1FAA  
                               u6020 1EB2                                 u5300 1676  
                               u5220 1594                                 u5140 148A  
                               u6101 1FA6                                 u6021 1EAE  
                               u5301 1672                                 u5141 1486  
                               u6110 1FBE                                 u6030 1EDC  
                               u5310 16AE                                 u5230 15BC  
                               u5150 14A0                                 u6111 1FBA  
                               u6031 1ED8                                 u5311 16AA  
                               u5231 15B8                                 u5151 149C  
                               u7000 0E24                                 u6120 1FD8  
                               u6040 1F00                                 u5400 17CA  
                               u5320 16F4                                 u5240 15DA  
                               u5160 14B2                                 u5080 37B0  
                               u6200 302E                                 u7001 0E20  
                               u6121 1FD4                                 u6041 1EFC  
                               u5401 17C6                                 u5321 16F0  
                               u5241 15D6                                 u5161 14AE  
                               u5081 37AC                                 u6201 302A  
                               u7010 0E72                                 u6130 2020  
                               u6050 1F16                                 u5410 17E0  
                               u5330 172A                                 u5250 15FA  
                               u5170 14C2                                 u6210 35E8  
                               u5090 37EE                                 u7011 0E6E  
                               u6131 201C                                 u6051 1F12  
                               u5411 17DC                                 u5331 1726  
                               u5251 15F6                                 u5171 14BE  
                               u6211 35E4                                 u5091 37EA  
                               u7100 0FAC                                 u7020 0E94  
                               u6140 2050                                 u6060 1F34  
                               u5500 18E8                                 u5420 17F4  
                               u5340 173A                                 u5260 1608  
                               u5180 14FE                                 u6220 31E6  
                               u7101 0FA8                                 u7021 0E90  
                               u6141 204C                                 u6061 1F30  
                               u5501 18E4                                 u5421 17F0  
                               u5341 1736                                 u5261 1604  
                               u5181 14FA                                 u6221 31E2  
                               u6310 38FE                                 u7110 0FE4  
                               u7030 0EAA                                 u6150 207E  
                               u6070 1F54                                 u5510 18FA  
                               u5430 180E                                 u5350 1766  
                               u5270 1618                                 u5190 150C  
                               u6230 3226                                 u6311 38F8  
                               u7111 0FE0                                 u7031 0EA6  
                               u6151 207A                                 u6071 1F50  
                               u5511 18F6                                 u5431 180A  
                               u5351 1762                                 u5271 1614  
                               u5191 1508                                 u6231 321E  
                               u6400 3D42                                 u7200 1126  
                               u7120 1006                                 u7040 0EC8  
                               u6080 1F66                                 u5600 1BA6  
                               u5520 190A                                 u5440 1848  
                               u5360 1776                                 u5280 164A  
                               u6160 3D0A                                 u6240 3240  
                               u6305 38EC                                 u6401 3D3E  
                               u7201 1122                                 u7121 1002  
                               u7041 0EC4                                 u6081 1F62  
                               u5601 1BA2                                 u5521 1906  
                               u5441 1844                                 u5361 1772  
                               u5281 1646                                 u6161 3D06  
                               u6241 323C                                 u6330 392C  
                               u6410 3D52                                 u7210 114E  
                               u7130 1024                                 u7050 0EDC  
                               u6090 1F94                                 u5610 1BB8  
                               u5530 194A                                 u5450 185A  
                               u5370 1792                                 u5290 1658  
                               u6170 2F62                                 u6250 3272  
                               u6331 3928                                 u6411 3D4E  
                               u7211 114A                                 u7131 1020  
                               u7051 0ED8                                 u6091 1F90  
                               u5611 1BB4                                 u5531 1946  
                               u5451 1856                                 u5371 178E  
                               u5291 1654                                 u6171 2F5E  
                               u6251 326E                                 u6420 39C0  
                               u7300 13B2                                 u7220 116C  
                               u7140 1046                                 u7060 0EFC  
                               u5620 1BE6                                 u5540 195C  
                               u5460 186A                                 u5380 17A2  
                               u5700 345E                                 u6180 2F70  
                               u6260 3288                                 u6500 26CE  
                               u6325 3900                                 u6421 39BC  
                               u7301 13AE                                 u7221 1168  
                               u7141 1042                                 u7061 0EF8  
                               u5621 1BE2                                 u5541 1958  
                               u5461 1866                                 u5381 179E  
                               u5701 345A                                 u6181 2F6C  
                               u6261 3284                                 u6501 26CA  
                               u6350 3BDE                                 u6430 39DE  
                               u7310 13DA                                 u7230 118E  
                               u7150 1086                                 u7070 0F44  
                               u5630 1BFC                                 u5550 196C  
                               u5470 188A                                 u5390 17B4  
                               u5710 347C                                 u6190 2FAE  
                               u6238 3228                                 u6510 2716  
                               u6351 3BD8                                 u6431 39DA  
                               u7311 13D6                                 u7231 118A  
                               u7151 1082                                 u7071 0F40  
                               u5631 1BF8                                 u5551 1968  
                               u5471 1886                                 u5391 17B0  
                               u5711 3478                                 u6191 2FAA  
                               u6511 2712                                 u6280 38E2  
                               u6600 39A4                                 u6440 39FA  
                               u7320 13FC                                 u7240 11CE  
                               u7160 10A4                                 u7080 0F56  
                               u7400 30BA                                 u5640 1C10  
                               u5560 19A2                                 u5480 189C  
                               u5800 33D0                                 u5720 349C  
                               u6520 2766                                 u6281 38DC  
                               u6345 3BC2                                 u6601 39A0  
                               u6441 39F6                                 u7321 13F8  
                               u7241 11CA                                 u7161 10A0  
                               u7081 0F52                                 u7401 30B6  
                               u5641 1C0C                                 u5561 199E  
                               u5481 1898                                 u5801 33CC  
                               u5721 3498                                 u6521 2762  
                               u6610 3B64                                 u6450 3B00  
                               u7250 1212                                 u7170 10DA  
                               u7090 0F90                                 u7410 30D0  
                               u5650 1C2A                                 u5570 19B2  
                               u5490 18B8                                 u5810 2BF6  
                               u5730 34EC                                 u6530 2796  
                               u7330 29BC                                 i2l51 002E  
                               u6275 38C6                                 u6611 3B60  
                               u6451 3AFC                                 u7251 120E  
                               u7171 10D6                                 u7091 0F8C  
                               u7411 30CC                                 u5651 1C26  
                               u5571 19AE                                 u5491 18B4  
                               u5811 2BF2                                 u5731 34E8  
                               u6531 2790                                 u7331 29B8  
                               u6620 3B74                                 u6380 3BFA  
                               u6460 3B1E                                 u7260 1230  
                               u7180 1102                                 u7420 30E6  
                               u5660 1C72                                 u5580 1B2C  
                               u5740 3302                                 u5900 2D84  
                               u5820 2C04                                 u6700 2232  
                               u6540 2798                                 u7340 29EE  
                               i2l61 00A8                                 u6621 3B70  
                               u6381 3BF4                                 u6365 3BE0  
                               u6461 3B1A                                 u7261 122C  
                               u7181 10FE                                 u7421 30E2  
                               u5661 1C6E                                 u5741 32FE  
                               u5901 2D80                                 u5821 2C00  
                               u6701 222E                                 u7341 29EA  
                               i2l54 0060                                 u6470 3B34  
                               u7270 12DA                                 u7190 1118  
                               u7430 314E                                 u5670 1CA0  
                               u5590 1B86                                 u5750 3336  
                               u5830 2C60                                 u6710 22BC  
                               u6630 20AE                                 u5910 36F0  
                               u6550 27AA                                 u7350 2A40  
                               i2l55 00A8                                 u6295 38E4  
                               u6375 3BE8                                 u6471 3B30  
                               u7271 12D6                                 u7191 1114  
                               u7431 314A                                 u5671 1C9C  
                               u5591 1B82                                 u5831 2C5C  
                               u6711 22B8                                 u6631 20AA  
                               u5911 36EC                                 u6551 27A6  
                               u7351 2A3C                                 i2l56 0084  
                               u7280 138A                                 u6800 0A86  
                               u7440 3170                                 u5680 1CDA  
                               u5760 3364                                 u5840 2CB6  
                               u6720 2346                                 u6640 20E0  
                               u5920 3744                                 u6560 28F2  
                               u6480 2DA8                                 u7360 2A66  
                               u7281 1386                                 u6801 0A82  
                               u7441 316C                                 u5681 1CD6  
                               u5585 1B22                                 u5761 3360  
                               u5841 2CB2                                 u6721 2342  
                               u6641 20DC                                 u5921 373C  
                               u6561 28EE                                 u6481 2DA4  
                               u7361 2A62                                 u7290 1398  
                               u6810 0AA8                                 u7450 3186  
                               u5930 1D12                                 u5770 3378  
                               u5850 2D00                                 u6730 239E  
                               u6650 20F4                                 u5690 3420  
                               u6570 2924                                 u6490 2DF6  
                               u7370 2AD2                                 u6395 3BFC  
                               u7291 1394                                 u6811 0AA4  
                               u7451 3182                                 u5931 1D0E  
                               u5771 3374                                 u5755 332C  
                               u5851 2CFC                                 u6731 239A  
                               u6651 20F0                                 u5691 341C  
                               u6571 2920                                 u6491 2DF2  
                               u7371 2ACE                                 u6580 3962  
                               u6900 0C24                                 u6820 0AF8  
                               u6740 08F4                                 u5940 1D24  
                               u5780 33A0                                 u5860 2D1E  
                               u6660 2116                                 u7380 2BAA  
                               u7460 3888                                 u6901 0C20  
                               u6821 0AF4                                 u6741 08F0  
                               u5941 1D20                                 u5781 339C  
                               u5861 2D1A                                 u6661 2112  
                               u7381 2BA6                                 u7461 3884  
                               u6590 3994                                 u6910 0CCE  
                               u6830 0B22                                 u6750 097E  
                               u7390 30A0                                 u5950 1D34  
                               u5790 33C0                                 u5870 2D2E  
                               u6670 213A                                 u7470 38A2  
                               u6911 0CCA                                 u6831 0B1E  
                               u6751 097A                                 u7391 309C  
                               u5951 1D30                                 u5791 33BC  
                               u5871 2D2A                                 u6671 2136  
                               u7471 389E                                 u6920 0CF4  
                               u6840 0B42                                 u6760 099E  
                               u5960 1D78                                 u5880 2D3C  
                               u6680 2180                                 u5928 3746  
                               u6921 0CF0                                 u6841 0B3E  
                               u6761 099A                                 u5961 1D74  
                               u5881 2D38                                 u6681 217C  
                               u6930 0D2C                                 u6850 0B5E  
                               u6770 0A0C                                 u5970 1D8A  
                               u5890 2D76                                 u6690 21F2  
                               u6587 3958                                 u6931 0D28  
                               u6851 0B5A                                 u6771 0A08  
                               u5971 1D86                                 u5891 2D72  
                               u6691 21EE                                 u6940 0D3E  
                               u6860 0B80                                 u6780 0A2C  
                               u5980 1D9A                                 u6597 398A  
                               u6941 0D3A                                 u6861 0B7C  
                               u6781 0A28                                 u5981 1D96  
                               u6950 0D5A                                 u6870 0BAE  
                               u6790 0A64                                 u5990 1DDA  
                               u6951 0D56                                 u6871 0BAA  
                               u6791 0A60                                 u5991 1DD6  
                               u7487 3C0E                                 u6960 0D88  
                               u6880 0BE8                                 u7497 3C00  
                               u6961 0D84                                 u6881 0BE4  
                               u6970 0DA8                                 u6890 0BF6  
                               u6971 0DA4                                 u6891 0BF2  
                               u6980 0DD6                                 u6981 0DD2  
                               u6990 0DF6                                 u6991 0DF2  
                               _TMR0 000FD6                                 _TMR2 000FBC  
                _StartDepthDetection 3EB8                                 _WPUB 000F85  
                               _main 382C                     __end_of_CCP1_ISR 3E42  
                               fsr1h 000FE2                                 fsr2h 000FDA  
                               indf1 000FE7                                 indf2 000FDF  
                               fsr1l 000FE1                                 fsr2l 000FD9  
                               btemp 005E                                 _sqrt 2092  
                               exp@x 008B                                 log@x 0085  
                               pow@x 0096                                 pow@y 009A  
                               prodh 000FF4                                 prodl 000FF3  
                               start 00AC                      ___fldiv@new_exp 0013  
                       _sprintf$1621 001F                         _sprintf$1622 0021  
                       _sprintf$1628 0023                        ?_LCD_WriteCmd 0002  
                      _LCD_WriteChar 3BAE                         ___param_bank 000000  
    ComputeWaterVol@d_WaterHeight_mm 00AF                      __end_of_OscInit 3EB8  
                              ??_exp 005D                                ??_log 005B  
                              ??_pow 005D                     __end_of_LCD_GoTo 3BAE  
                   __end_of_LCD_Init 3C60                 ?_StartDepthDetection 0001  
                      ___fltol@sign1 0023                      __end_of___fladd 18CC  
                              ?_main 0001                      __end_of___fldiv 2092  
                    __end_of___flneg 3D2C                                STR_10 086D  
                              STR_11 087E                      __end_of_SysInit 3EE6  
          ComputeWaterVol@d_CurrTemp 009A                      __end_of___flmul 1CF8  
                    __end_of___flsub 3CF4                      __end_of___fltol 33F2  
                              ?_sqrt 0075                                _T0CON 000FD5  
                              _T1CON 000FCD                                _T2CON 000FBA  
                              _T3CON 000FB1                                _LATC6 007C5E  
                              _LATC7 007C5F                      __end_of___lwdiv 3A1A  
                    __end_of___lwmod 3B52                                i2l124 3D8E  
                              i2l174 3ECE                                i2l239 3AEC  
                              i2l441 3E40                                i2l177 3EC2  
                              i2l635 3EDA                                _TMR1H 000FCF  
                              _TMR3H 000FB3                                _TMR1L 000FCE  
                              _TMR3L 000FB2                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                       LCD_GoTo@iPos 000C                                _giDay 00E0  
            __end_of_PIN_MANAGER_IOC 3EEA                      __end_of_dpowers 0817  
                              _floor 2F36                                _ldexp 31B4  
                              _frexp 36BE                                _errno 00C9  
                    __end_of_isdigit 3D5E                 ComputeWaterVol@d_SOS 009E  
          ComputeWaterVol@d_WaterVol 00AA                    __end_of_CCP1_Init 3E6E  
                  __end_of_CCP2_Init 3E24                           _ComputeTOD 3078  
               ComputeWaterVol@sGals 00B3                 ComputeWaterVol@sFill 00B4  
                              tablat 000FF5                                pow@yi 00A7  
                              ttemp5 005F                                sqrt@a 0075  
                              ttemp6 0062                                ttemp7 0066  
                              sqrt@i 007E                                sqrt@p 0083  
                              status 000FD8                                wtemp8 005F  
                    __end_of_sprintf 140A                          exp@exponent 0093  
                     ??_LCD_WriteCmd 0004                       ?_LCD_WriteChar 0001  
                        ldexp@newexp 0089                      __initialization 3A1A  
                        log@exponent 005B                         __end_of_main 38B4  
                       __end_of_sqrt 23AE                ??_StartDepthDetection 0001  
        ?_INTERRUPT_InterruptManager 0001                      _LCD_TestString1 0100  
                    _LCD_TestString2 0112                      _LCD_TestString3 00D7  
                             ??_main 005D                               ??_sqrt 0079  
                      __activetblptr 000002                 LCD_WriteString@iData 0005  
                             ?_floor 0075                               ?_ldexp 0085  
                             ?_frexp 003F                               _ACTCON 000FB5  
                             _CCPR1H 000FBF                               _CCPR2H 000F91  
                             _CCPR1L 000FBE                               _CCPR2L 000F90  
                             _ANSELA 000F5B                               _ANSELB 000F5C  
                             _ANSELC 000F5D                               _ANSELD 000F5E  
                             _ANSELE 000F5F                               _T1GCON 000FCC  
                             i2l3110 3EC6                               i2l3112 3ECA  
                             i2l3114 3ECC                               i2l3108 3EC4  
                             i2l4192 3EB8                               i2l4710 3ED2  
                             i2l4712 3D5E                               i2l4714 3D66  
                             i2l4730 3A96                               i2l4722 3A86  
                             i2l4708 3ED0                               i2l4716 3D68  
                             i2l4740 3AC4                               i2l4732 3A98  
                             i2l4724 3A8C                               i2l4900 0058  
                             i2l4750 3E2E                               i2l4718 3D88  
                             i2l4742 3AC6                               i2l4734 3A9A  
                             i2l4726 3A8E                               i2l4902 006E  
                             i2l4752 3E36                               i2l4744 3ADC  
                             i2l4736 3AAA                               i2l4728 3A92  
                             i2l4904 007C                               i2l4754 3E3A  
                             i2l4746 3AE8                               i2l4738 3AC0  
                             i2l4906 0092                               i2l4748 3E24  
                             i2l4908 00A0                               i2l4890 000A  
                             i2l4892 0018                               i2l4894 0026  
                             i2l4896 003C                               i2l4898 004A  
                             _OSCCON 000FD3                     __end_of___xxtofl 2D98  
                      LCD_GoTo@iLine 000F               _InitTankVariables$2409 00AB  
                      ??_Timer0_Init 0002                    _InitTankVariables 35FA  
                      ??_Timer1_Init 0002                        ??_Timer2_Init 0002  
                          ??_OscInit 0002                        ??_Timer3_Init 0002  
                         _Timer0_ISR 3D5E                           _Timer2_ISR 3EC4  
                         _Timer3_ISR 3A86                     LCD_WriteCmd@iCmd 0008  
                 ?_InitTankVariables 0001                               ___flge 33F2  
                             ___fleq 3782                            ??___fladd 006D  
                             ___wmul 3DC0                            ??___fldiv 000A  
                          ??___flneg 0006                            ??_SysInit 0002  
                             _giMins 00D3                               _giSecs 00D4  
                          ??___flmul 004F                            ??___flsub 005B  
                          ??___fltol 001F             __size_of_ComputeWaterVol 02EE  
                             _giYear 00DF                            ??___lwdiv 0006  
                          ??___lwmod 000D                               clear_0 3A72  
                ??_InitTankVariables 005D                               floor@i 0079  
                             floor@x 0075                            ?_CCP1_ISR 0001  
                       __pdataCOMRAM 005D                            ??_isdigit 0002  
                       __mediumconst 0000                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                   ?_PIN_MANAGER_IOC 0001                            ??_sprintf 0018  
                        ?_ComputeTOD 0001                           ___flge@ff1 0002  
                         ___flge@ff2 0006                         ___xxtofl@arg 002F  
                   __end_ofexp@coeff 0847                         ___xxtofl@exp 002E  
                       ___xxtofl@val 0025                           ___fleq@ff1 0033  
                         ___fleq@ff2 0037                     __end_oflog@coeff 086B  
                         __accesstop 0060              __end_of__initialization 3A78  
                          ?_LCD_GoTo 0009                            ?_LCD_Init 0001  
                         ___flneg@f1 0002            __end_of_InitTankVariables 36BE  
                    ??_LCD_WriteChar 0002                         eval_poly@res 0081  
                      ___rparam_used 000001                           ___fltol@f1 001B  
                 ComputeTOD@bIncDays 0033                    _gd_TankGalsPer_mm 00B9  
                      _giEchoCounter 00CF                       __pcstackCOMRAM 0001  
                       __pidataBANK0 3DE6                         __pidataBANK1 3D90  
                    _LCD_WriteString 392E                        __end_of_floor 3078  
                      __end_of_ldexp 32EC                        __end_of_frexp 3782  
                __end_of_Timer0_Init 3EA6                  __end_of_Timer1_Init 3E58  
                __end_of_Timer2_Init 3E94                  __end_of_Timer3_Init 3E82  
                         ??_CCP1_ISR 0001                 __end_of_LCD_WriteCmd 392E  
         ComputeWaterVol@d_mmPerTick 00A2                              ??_floor 005B  
                            ??_ldexp 005B                              ??_frexp 0045  
                       sprintf@width 002C                           __pbssBANK0 00B5  
                 __size_of_eval_poly 0104                           ??_LCD_GoTo 000A  
                         ??_LCD_Init 0009                        ?_Timer1_Reset 0001  
                        ?_Timer0_ISR 0001                          ?_Timer2_ISR 0001  
                        ?_Timer3_ISR 0001                              ?___flge 0002  
                            ?___fleq 0033                              ?___wmul 0002  
                            _CCP1CON 000FBD                              _CCP2CON 000F97  
                         _gsCurrDate 00EA                           _gsCurrTime 00E1  
                __size_of_ComputeTOD 013C                    ??_ComputeWaterVol 0092  
                          ?___xxtofl 0025                              _OSCCON2 000FD2  
                            _OSCTUNE 000F9B                        _gb_UpdateTime 00D6  
         __size_of_InitTankVariables 00C4                      _Timer3_Sampling 00DE  
                          _CCP1_Init 3E58                            _CCP2_Init 3E06  
                     ??_Timer1_Reset 0001              __end_of_LCD_WriteString 39A6  
                            _OscInit 3EA6                              __Hparam 0000  
                        _Timer0_Init 3E94                          _Timer1_Init 3E42  
                        _Timer2_Init 3E82                          _Timer3_Cntr 00CB  
                            __Lparam 0000                          _Timer3_Init 3E6E  
                      LCD_WriteCmd@i 0006                      __size_of___flge 0104  
                    __size_of___fleq 00AA                              ___fladd 140A  
                            ___fldiv 1CF8                              ___flneg 3CF4  
                            _SysInit 3EDC                              ___flmul 18CC  
                            ___flsub 3CAC                              ___fltol 32EC  
                    __size_of___wmul 0026                              ___lwdiv 39A6  
                            ___lwmod 3AEE                         __psmallconst 0800  
                            _gd_Temp 00C5                              _giHours 00D2  
                            _giMonth 005D                              __pcinit 3A1A  
                  __end_of_eval_poly 35FA                              __ramtop 0800  
                            __ptext0 382C                              __ptext1 3E6E  
                            __ptext2 3E82                              __ptext3 3E42  
                            __ptext4 3E94                              __ptext5 3EDC  
                            __ptext6 3C60                              __ptext7 3EE6  
                            __ptext8 3EA6                              __ptext9 3C08  
                  __end_of_hexpowers 081F                            _T1CONbits 000FCD  
                            _dpowers 080D                            _T2CONbits 000FBA  
                       __size_of_exp 02E8                         __size_of_log 019E  
                            _isdigit 3D2C                         __size_of_pow 0260  
                         ??___xxtofl 0029                            _T3CONbits 000FB1  
           ??_PIN_MANAGER_Initialize 0002                  __size_of_Timer0_ISR 0032  
                __size_of_Timer2_ISR 000C                  __size_of_Timer3_ISR 0068  
                     _CCP2_Init$1296 0002                    _Timer0_Reload_Val 086B  
                            _sprintf 08D6                 end_of_initialization 3A78  
                  __end_of_octpowers 080D                              exp@sign 0095  
                      __Lmediumconst 0000                           ?_CCP1_Init 0001  
                         ?_CCP2_Init 0001          __end_of_StartDepthDetection 3EC4  
                            pow@sign 00A6                              postdec1 000FE5  
                            postdec2 000FDD                              postinc0 000FEE  
                            postinc2 000FDE                              sqrt@grs 0084  
                            sqrt@exp 0088                __size_of_LCD_WriteCmd 007A  
                          _PORTBbits 000F81                          ___fladd@grs 0074  
                      ___xxtofl@sign 002D            __end_of_Timer0_Reload_Val 086D  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                  __size_of_CCP1_ISR 001E                          ___fldiv@grs 0015  
                        ___fldiv@rem 000E                     LCD_GoTo@iCharPos 0009  
                       ??_ComputeTOD 0031                          ___flmul@grs 0062  
                  LCD_WriteString@ix 0009                          _CCP2CONbits 000F97  
                  __size_of_LCD_GoTo 005C                     ?_LCD_WriteString 0005  
                  __size_of_LCD_Init 0058                         _LCD_WriteCmd 38B4  
                     __end_of___flge 34F6                       __end_of___fleq 382C  
                     __end_of___wmul 3DE6                        __pidataCOMRAM 3EEA  
                      _giMonthEndTbl 0123                   __end_of_ComputeTOD 31B4  
                         floor@expon 007D                 __end_of_Timer1_Reset 3EDC  
                start_initialization 3A1A                           eval_poly@d 0079  
                         eval_poly@n 007B                           eval_poly@x 0075  
                         ldexp@value 0085      __size_of_PIN_MANAGER_Initialize 004C  
                        __end_of_exp 2984                          __end_of_log 2F36  
                        __end_of_pow 2BE4                           frexp@value 003F  
                        ??_CCP1_Init 0002                          ??_CCP2_Init 0002  
           __size_of_PIN_MANAGER_IOC 0004                __end_of_LCD_WriteChar 3C08  
                       ??_Timer0_ISR 0001                         ??_Timer2_ISR 0001  
                      _Timer3_Reload 00DC                         ??_Timer3_ISR 0001  
                    _ComputeWaterVol 23AE                             ??___flge 000A  
                           ??___fleq 003B                             ??___wmul 0006  
                        _CCPTMRSbits 000F59                          __pdataBANK0 00D7  
                        __pdataBANK1 0100                            ___fladd@a 0057  
                          ___fladd@b 0053                            ___fldiv@a 0006  
                          ___fldiv@b 0002                            ___flmul@a 004B  
                          ___flmul@b 0047                            ___flsub@a 0079  
                          ___flsub@b 0075                        __pcstackBANK0 0060  
                  __size_of___xxtofl 01B4                   __end_of_Timer0_ISR 3D90  
                       _isdigit$2113 0003                   __end_of_Timer2_ISR 3ED0  
                 __end_of_Timer3_ISR 3AEE                          sprintf@flag 002F  
                        sprintf@prec 002B                             ?_OscInit 0001  
                       ?_Timer0_Init 0001                         ?_Timer1_Init 0001  
                       ?_Timer2_Init 0001                         ?_Timer3_Init 0001  
                   ___lwdiv@dividend 0002               _PIN_MANAGER_Initialize 3C60  
                        _giTotalSecs 00CD                            __pintcode 0008  
                           ?___fladd 0053                             ?___fldiv 0002  
                           ?___flneg 0002                             ?_SysInit 0001  
                           ?___flmul 0047                             ?___flsub 0075  
                           ?___fltol 001B                             ?___lwdiv 0002  
                           ?___lwmod 0009         ??_INTERRUPT_InterruptManager 0002  
                        __smallconst 0800                             _CCP1_ISR 3E24  
                           ?_isdigit 0001                            _eval_poly 34F6  
                          _hexpowers 0817                     ___lwdiv@quotient 0007  
                           ?_sprintf 000E                       __size_of_floor 0142  
                     __size_of_ldexp 0138                       __size_of_frexp 00C4  
                           _LCD_GoTo 3B52                             _LCD_Init 3C08  
            __end_of_ComputeWaterVol 269C                       ___wmul@product 0006  
                           _LATAbits 000F89                             _LATCbits 000F8B  
                          _octpowers 0801                             _PIE1bits 000F9D  
                           _PIE2bits 000FA0  __size_of_INTERRUPT_InterruptManager 00A4  
                 _gd_SensorHeight_mm 00BD                             i2u500_40 004A  
                           i2u500_41 0046                             i2u501_40 0058  
                           i2u501_41 0054                             i2u502_40 006E  
                           i2u502_41 006A                             i2u503_40 007C  
                           i2u503_41 0078                             i2u504_40 0092  
                           i2u504_41 008E                             i2u505_40 00A0  
                           i2u505_41 009C                             _PIR1bits 000F9E  
                           _PIR2bits 000FA1                             i2u486_40 3D78  
                           i2u486_41 3D72                             i2u486_46 3D7A  
                           i2u487_40 3AAA                             i2u487_41 3AA6  
                           i2u488_40 3AC0                             i2u488_41 3ABC  
                           i2u489_40 3ADC                             i2u497_40 0018  
                           i2u489_41 3AD8                             i2u497_41 0014  
                           i2u498_40 0026                             i2u498_41 0022  
                           i2u499_40 003C                             i2u499_41 0038  
                  ??_PIN_MANAGER_IOC 0002                __size_of_Timer1_Reset 000C  
               _gd_MaxWaterHeight_mm 00B5                          _gsTotalSecs 00F3  
                  ___wmul@multiplier 0002                  _gd_TankSurfArea_mm2 00C1  
                         ?_eval_poly 0075                          _INTCON2bits 000FF1  
                          copy_data0 3A2E                            copy_data1 3A4E  
                    _gb_EchoDetected 00D5                            frexp@eptr 0043  
                           _bIncDays 00D1                             __Hrparam 0000  
                       _Timer1_Reset 3ED0                   LCD_WriteCmd@iDelay 0002  
                   __size_of_OscInit 0012                             __Lrparam 0000  
                 LCD_WriteChar@iChar 0004                     __size_of___fladd 04C2  
                   __size_of___fldiv 039A                     __size_of___flneg 0038  
                   __size_of_SysInit 000A                     __size_of___flmul 042C  
                   __size_of___flsub 0048                     __size_of___fltol 0106  
       __size_of_StartDepthDetection 000C                     __size_of___lwdiv 0074  
                   __size_of___lwmod 0064                             _exp$2412 008F  
                         sprintf@idx 001C                           sprintf@len 0025  
                         sprintf@val 0029                             ___xxtofl 2BE4  
                   __size_of_isdigit 0032                      ___lwdiv@divisor 0004  
                    ___lwdiv@counter 0006                             __ptext10 35FA  
                           __ptext11 2984                             __ptext20 3CF4  
                           __ptext12 2D98                             __ptext21 23AE  
                           __ptext13 269C                             __ptext30 08D6  
                           __ptext22 2092                             __ptext14 31B4  
                           __ptext31 3D2C                             __ptext23 2BE4  
                           __ptext15 2F36                             __ptext40 3E58  
                           __ptext32 3DC0                             __ptext24 32EC  
                           __ptext16 36BE                             __ptext33 3AEE  
                           __ptext25 3CAC                             __ptext17 3782  
                           __ptext42 3A86                             __ptext34 39A6  
                           __ptext26 140A                             __ptext18 33F2  
                           __ptext43 3EB8                             __ptext35 392E  
                           __ptext27 18CC                             __ptext19 34F6  
                           __ptext44 3EC4                             __ptext36 3BAE  
                           __ptext28 1CF8                             __ptext45 3D5E  
                           __ptext37 3B52                             __ptext29 3078  
                           __ptext46 3E24                             __ptext38 38B4  
                           __ptext47 3ED0                             __ptext39 3E06  
     ComputeWaterVol@d_EmptySpace_mm 00A6                             _pow$2410 009E  
                           _pow$2411 00A2                     __size_of_sprintf 0B34  
                      __size_of_main 0088                     ?_ComputeWaterVol 0001  
                      __size_of_sqrt 031C                 __size_of_Timer0_Init 0012  
               __size_of_Timer1_Init 0016                 __size_of_Timer2_Init 0012  
                           int$flags 005E                 __size_of_Timer3_Init 0014  
 __end_of_INTERRUPT_InterruptManager 00AC           _INTERRUPT_InterruptManager 0008  
           __size_of_LCD_WriteString 0078         ComputeWaterVol@i_PercentFull 00AE  
                           exp@coeff 081F                             log@coeff 0847  
                         _INTCONbits 000FF2                          ??_eval_poly 007D  
                           isdigit@c 0004                            sqrt@tfrac 007F  
                           intlevel2 0000                            sprintf@ap 0027  
                          sprintf@cp 001D                            sprintf@sp 000E  
                   ___lwmod@dividend 0009              ?_PIN_MANAGER_Initialize 0001  
                      _LCD_GoTo$1457 000D                             sqrt@frac 008E  
                           sqrt@sign 007D                             sqrt@root 008A  
                           sprintf@c 002E                             sprintf@f 0010  
                    ___lwmod@divisor 000B                      ___lwmod@counter 000D  
             __size_of_LCD_WriteChar 005A                        ___fladd@signs 0071  
     __end_of_PIN_MANAGER_Initialize 3CAC                         ___fladd@aexp 0072  
                       ___fladd@bexp 0073                      _PIN_MANAGER_IOC 3EE6  
