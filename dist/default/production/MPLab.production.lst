

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Jun 02 06:14:04 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,delta=1
    75                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    76                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    77                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    78                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    79                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    80  0000                     
    81                           ; Version 2.20
    82                           ; Generated 12/02/2020 GMT
    83                           ; 
    84                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    85                           ; All rights reserved.
    86                           ; 
    87                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    88                           ; 
    89                           ; Redistribution and use in source and binary forms, with or without modification, are
    90                           ; permitted provided that the following conditions are met:
    91                           ; 
    92                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    93                           ;        conditions and the following disclaimer.
    94                           ; 
    95                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    96                           ;        of conditions and the following disclaimer in the documentation and/or other
    97                           ;        materials provided with the distribution.
    98                           ; 
    99                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   100                           ;        software without specific prior written permission.
   101                           ; 
   102                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   103                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   104                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   105                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   106                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   107                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   108                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   109                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   110                           ; 
   111                           ; 
   112                           ; Code-generator required, PIC18F2455 Definitions
   113                           ; 
   114                           ; SFR Addresses
   115  0000                     
   116                           	psect	idataCOMRAM
   117  003D0D                     __pidataCOMRAM:
   118                           	callstack 0
   119                           
   120                           ;initializer for _giMonth
   121  003D0D  04                 	db	4
   122                           
   123                           	psect	idataBANK0
   124  003D04                     __pidataBANK0:
   125                           	callstack 0
   126                           
   127                           ;initializer for _Timer0_Reload
   128  003D04  D8ED               	dw	55533
   129                           
   130                           ;initializer for _giBacklight_Timeout
   131  003D06  05                 	db	5
   132                           
   133                           ;initializer for _giYear
   134  003D07  15                 	db	21
   135                           
   136                           ;initializer for _giDay
   137  003D08  01                 	db	1
   138                           
   139                           ;initializer for _gsTotalSecs
   140  003D09  2D                 	db	45
   141  003D0A  2D                 	db	45
   142  003D0B  2D                 	db	45
   143  003D0C  00                 	db	0
   144                           
   145                           	psect	idataBANK1
   146  003BDC                     __pidataBANK1:
   147                           	callstack 0
   148                           
   149                           ;initializer for _giMonthEndTbl
   150  003BDC  1F                 	db	31
   151  003BDD  1C                 	db	28
   152  003BDE  1F                 	db	31
   153  003BDF  1E                 	db	30
   154  003BE0  1F                 	db	31
   155  003BE1  1E                 	db	30
   156  003BE2  1F                 	db	31
   157  003BE3  1F                 	db	31
   158  003BE4  1E                 	db	30
   159  003BE5  1F                 	db	31
   160  003BE6  1E                 	db	30
   161  003BE7  1F                 	db	31
   162                           
   163                           ;initializer for _gsCurrTime
   164  003BE8  30                 	db	48
   165  003BE9  31                 	db	49
   166  003BEA  3A                 	db	58
   167  003BEB  30                 	db	48
   168  003BEC  30                 	db	48
   169  003BED  3A                 	db	58
   170  003BEE  30                 	db	48
   171  003BEF  30                 	db	48
   172  003BF0  00                 	db	0
   173                           
   174                           ;initializer for _gsCurrDate
   175  003BF1  30                 	db	48
   176  003BF2  31                 	db	49
   177  003BF3  2F                 	db	47
   178  003BF4  30                 	db	48
   179  003BF5  34                 	db	52
   180  003BF6  2F                 	db	47
   181  003BF7  32                 	db	50
   182  003BF8  31                 	db	49
   183  003BF9  00                 	db	0
   184                           
   185                           	psect	smallconst
   186  000800                     __psmallconst:
   187                           	callstack 0
   188  000800  00                 	db	0
   189  000801                     _dpowers:
   190                           	callstack 0
   191  000801  0001               	dw	1
   192  000803  000A               	dw	10
   193  000805  0064               	dw	100
   194  000807  03E8               	dw	1000
   195  000809  2710               	dw	10000
   196  00080B                     __end_of_dpowers:
   197                           	callstack 0
   198  00080B                     exp@coeff:
   199                           	callstack 0
   200  00080B  0000               	dw	0
   201  00080D  3F80               	dw	16256
   202  00080F  7218               	dw	29208
   203  000811  3F31               	dw	16177
   204  000813  FDF0               	dw	65008
   205  000815  3E75               	dw	15989
   206  000817  5847               	dw	22599
   207  000819  3D63               	dw	15715
   208  00081B  9558               	dw	38232
   209  00081D  3C1D               	dw	15389
   210  00081F  C482               	dw	50306
   211  000821  3AAE               	dw	15022
   212  000823  78A8               	dw	30888
   213  000825  3921               	dw	14625
   214  000827  93EF               	dw	37871
   215  000829  3780               	dw	14208
   216  00082B  92A0               	dw	37536
   217  00082D  35A7               	dw	13735
   218  00082F  5646               	dw	22086
   219  000831  3415               	dw	13333
   220  000833                     __end_ofexp@coeff:
   221                           	callstack 0
   222  000833                     log@coeff:
   223                           	callstack 0
   224  000833  0000               	dw	0
   225  000835  0000               	dw	0
   226  000837  FFC4               	dw	65476
   227  000839  3F7F               	dw	16255
   228  00083B  EF80               	dw	61312
   229  00083D  BEFF               	dw	48895
   230  00083F  E190               	dw	57744
   231  000841  3EA9               	dw	16041
   232  000843  82EC               	dw	33516
   233  000845  BE76               	dw	48758
   234  000847  AD82               	dw	44418
   235  000849  3E2B               	dw	15915
   236  00084B  3C0E               	dw	15374
   237  00084D  BDC3               	dw	48579
   238  00084F  D187               	dw	53639
   239  000851  3D13               	dw	15635
   240  000853  7841               	dw	30785
   241  000855  BBD3               	dw	48083
   242  000857                     __end_oflog@coeff:
   243                           	callstack 0
   244  0000                     _ADCON0bits	set	4034
   245  0000                     _ADRESL	set	4035
   246  0000                     _ADRESH	set	4036
   247  0000                     _ADCON2	set	4032
   248  0000                     _ADCON0	set	4034
   249  0000                     _T1CONbits	set	4045
   250  0000                     _TMR1L	set	4046
   251  0000                     _TMR1H	set	4047
   252  0000                     _T1CON	set	4045
   253  0000                     _LATCbits	set	3979
   254  0000                     _LATBbits	set	3978
   255  0000                     _CCPR2H	set	4028
   256  0000                     _CCP2CONbits	set	4026
   257  0000                     _CCPR2L	set	4027
   258  0000                     _CCP2CON	set	4026
   259  0000                     _CCPR1L	set	4030
   260  0000                     _CCPR1H	set	4031
   261  0000                     _CCP1CON	set	4029
   262  0000                     _INTCON2bits	set	4081
   263  0000                     _ADCON1	set	4033
   264  0000                     _TRISCbits	set	3988
   265  0000                     _TRISAbits	set	3986
   266  0000                     _TRISC	set	3988
   267  0000                     _TRISB	set	3987
   268  0000                     _TRISA	set	3986
   269  0000                     _LATC	set	3979
   270  0000                     _LATB	set	3978
   271  0000                     _LATA	set	3977
   272  0000                     _UCFGbits	set	3951
   273  0000                     _UCFG	set	3951
   274  0000                     _UCON	set	3949
   275  0000                     _PORTCbits	set	3970
   276  0000                     _TMR3L	set	4018
   277  0000                     _TMR3H	set	4019
   278  0000                     _T3CONbits	set	4017
   279  0000                     _T2CON	set	4042
   280  0000                     _PR2	set	4043
   281  0000                     _TMR2	set	4044
   282  0000                     _T2CONbits	set	4042
   283  0000                     _LATAbits	set	3977
   284  0000                     _T0CON	set	4053
   285  0000                     _TMR0L	set	4054
   286  0000                     _TMR0H	set	4055
   287  0000                     _OSCTUNE	set	3995
   288  0000                     _OSCCON	set	4051
   289  0000                     _PIR1bits	set	3998
   290  0000                     _PIE1bits	set	3997
   291  0000                     _PIR2bits	set	4001
   292  0000                     _PIE2bits	set	4000
   293  0000                     _INTCONbits	set	4082
   294  0000                     _LATC7	set	31839
   295  0000                     _LATC6	set	31838
   296  000857                     STR_3:
   297                           
   298                           ; BSR set to: 0
   299  000857  47                 	db	71	;'G'
   300  000858  61                 	db	97	;'a'
   301  000859  6C                 	db	108	;'l'
   302  00085A  73                 	db	115	;'s'
   303  00085B  3A                 	db	58	;':'
   304  00085C  25                 	db	37
   305  00085D  34                 	db	52	;'4'
   306  00085E  75                 	db	117	;'u'
   307  00085F  20                 	db	32
   308  000860  20                 	db	32
   309  000861  25                 	db	37
   310  000862  33                 	db	51	;'3'
   311  000863  75                 	db	117	;'u'
   312  000864  25                 	db	37
   313  000865  25                 	db	37
   314  000866  20                 	db	32
   315  000867  00                 	db	0
   316  000868                     STR_4:
   317                           
   318                           ; BSR set to: 0
   319  000868  45                 	db	69	;'E'
   320  000869  63                 	db	99	;'c'
   321  00086A  68                 	db	104	;'h'
   322  00086B  6F                 	db	111	;'o'
   323  00086C  3A                 	db	58	;':'
   324  00086D  25                 	db	37
   325  00086E  34                 	db	52	;'4'
   326  00086F  75                 	db	117	;'u'
   327  000870  20                 	db	32
   328  000871  25                 	db	37
   329  000872  32                 	db	50	;'2'
   330  000873  75                 	db	117	;'u'
   331  000874  2F                 	db	47
   332  000875  25                 	db	37
   333  000876  32                 	db	50	;'2'
   334  000877  75                 	db	117	;'u'
   335  000878  00                 	db	0
   336  000879                     STR_1:
   337                           
   338                           ; BSR set to: 0
   339  000879  4C                 	db	76	;'L'
   340  00087A  6F                 	db	111	;'o'
   341  00087B  61                 	db	97	;'a'
   342  00087C  64                 	db	100	;'d'
   343  00087D  69                 	db	105	;'i'
   344  00087E  6E                 	db	110	;'n'
   345  00087F  67                 	db	103	;'g'
   346  000880  2E                 	db	46
   347  000881  2E                 	db	46
   348  000882  2E                 	db	46
   349  000883  20                 	db	32
   350  000884  00                 	db	0
   351  000885                     STR_2:
   352                           
   353                           ; BSR set to: 0
   354  000885  25                 	db	37
   355  000886  33                 	db	51	;'3'
   356  000887  69                 	db	105	;'i'
   357  000888  00                 	db	0
   358  000889  00                 	db	0	; dummy byte at the end
   359  0000                     
   360                           ; #config settings
   361                           
   362                           	psect	cinit
   363  0036FE                     __pcinit:
   364                           	callstack 0
   365  0036FE                     start_initialization:
   366                           	callstack 0
   367  0036FE                     __initialization:
   368                           	callstack 0
   369                           
   370                           ; Initialize objects allocated to BANK1 (30 bytes)
   371                           ; load TBLPTR registers with __pidataBANK1
   372  0036FE  0EDC               	movlw	low __pidataBANK1
   373  003700  6EF6               	movwf	tblptrl,c
   374  003702  0E3B               	movlw	high __pidataBANK1
   375  003704  6EF7               	movwf	tblptrh,c
   376  003706  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   377  003708  6EF8               	movwf	tblptru,c
   378  00370A  EE01  F0D0         	lfsr	0,__pdataBANK1
   379  00370E  EE10 F01E          	lfsr	1,30
   380  003712                     copy_data0:
   381  003712  0009               	tblrd		*+
   382  003714  CFF5 FFEE          	movff	tablat,postinc0
   383  003718  50E5               	movf	postdec1,w,c
   384  00371A  50E1               	movf	fsr1l,w,c
   385  00371C  E1FA               	bnz	copy_data0
   386                           
   387                           ; Initialize objects allocated to BANK0 (9 bytes)
   388                           ; load TBLPTR registers with __pidataBANK0
   389  00371E  0E04               	movlw	low __pidataBANK0
   390  003720  6EF6               	movwf	tblptrl,c
   391  003722  0E3D               	movlw	high __pidataBANK0
   392  003724  6EF7               	movwf	tblptrh,c
   393  003726  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   394  003728  6EF8               	movwf	tblptru,c
   395  00372A  EE00  F0F4         	lfsr	0,__pdataBANK0
   396  00372E  EE10 F009          	lfsr	1,9
   397  003732                     copy_data1:
   398  003732  0009               	tblrd		*+
   399  003734  CFF5 FFEE          	movff	tablat,postinc0
   400  003738  50E5               	movf	postdec1,w,c
   401  00373A  50E1               	movf	fsr1l,w,c
   402  00373C  E1FA               	bnz	copy_data1
   403                           
   404                           ; Initialize objects allocated to COMRAM (1 bytes)
   405                           ; load TBLPTR registers with __pidataCOMRAM
   406  00373E  0E0D               	movlw	low __pidataCOMRAM
   407  003740  6EF6               	movwf	tblptrl,c
   408  003742  0E3D               	movlw	high __pidataCOMRAM
   409  003744  6EF7               	movwf	tblptrh,c
   410  003746  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   411  003748  6EF8               	movwf	tblptru,c
   412  00374A  0009               	tblrd		*+	;fetch initializer
   413  00374C  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   414                           
   415                           ; Clear objects allocated to BANK1 (208 bytes)
   416  003750  EE01  F000         	lfsr	0,__pbssBANK1
   417  003754  0ED0               	movlw	208
   418  003756                     clear_0:
   419  003756  6AEE               	clrf	postinc0,c
   420  003758  06E8               	decf	wreg,f,c
   421  00375A  E1FD               	bnz	clear_0
   422                           
   423                           ; Clear objects allocated to BANK0 (67 bytes)
   424  00375C  EE00  F0B1         	lfsr	0,__pbssBANK0
   425  003760  0E43               	movlw	67
   426  003762                     clear_1:
   427  003762  6AEE               	clrf	postinc0,c
   428  003764  06E8               	decf	wreg,f,c
   429  003766  E1FD               	bnz	clear_1
   430  003768                     end_of_initialization:
   431                           	callstack 0
   432  003768                     __end_of__initialization:
   433                           	callstack 0
   434  003768  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   435  00376A  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   436  00376C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   437  00376E  6EF8               	movwf	tblptru,c
   438  003770  0100               	movlb	0
   439  003772  EF32  F016         	goto	_main	;jump to C main() function
   440                           
   441                           	psect	dataCOMRAM
   442  00005E                     __pdataCOMRAM:
   443                           	callstack 0
   444  00005E                     _giMonth:
   445                           	callstack 0
   446  00005E                     	ds	1
   447                           
   448                           	psect	bssBANK0
   449  0000B1                     __pbssBANK0:
   450                           	callstack 0
   451  0000B1                     _gfMaxWaterHeight_mm:
   452                           	callstack 0
   453  0000B1                     	ds	4
   454  0000B5                     _gfTankGalsPer_mm:
   455                           	callstack 0
   456  0000B5                     	ds	4
   457  0000B9                     _gfSensorHeight_mm:
   458                           	callstack 0
   459  0000B9                     	ds	4
   460  0000BD                     _gfTankSurfArea_mm2:
   461                           	callstack 0
   462  0000BD                     	ds	4
   463  0000C1                     _gfRRatio:
   464                           	callstack 0
   465  0000C1                     	ds	4
   466  0000C5                     _gfRtherm:
   467                           	callstack 0
   468  0000C5                     	ds	4
   469  0000C9                     _gfAirTempC:
   470                           	callstack 0
   471  0000C9                     	ds	4
   472  0000CD                     _errno:
   473                           	callstack 0
   474  0000CD                     	ds	2
   475  0000CF                     _iTOD_Cntr:
   476                           	callstack 0
   477  0000CF                     	ds	2
   478  0000D1                     _giBacklight_Timer:
   479                           	callstack 0
   480  0000D1                     	ds	2
   481  0000D3                     _giTotalSecs:
   482                           	callstack 0
   483  0000D3                     	ds	2
   484  0000D5                     _giEmptySpace_mm:
   485                           	callstack 0
   486  0000D5                     	ds	2
   487  0000D7                     _giPercentFull:
   488                           	callstack 0
   489  0000D7                     	ds	2
   490  0000D9                     _giGals:
   491                           	callstack 0
   492  0000D9                     	ds	2
   493  0000DB                     _giAirTempF:
   494                           	callstack 0
   495  0000DB                     	ds	2
   496  0000DD                     _giAirTempC:
   497                           	callstack 0
   498  0000DD                     	ds	2
   499  0000DF                     _giEchoCounter:
   500                           	callstack 0
   501  0000DF                     	ds	2
   502  0000E1                     _gi_SW_Time:
   503                           	callstack 0
   504  0000E1                     	ds	2
   505  0000E3                     _gbBacklight_On:
   506                           	callstack 0
   507  0000E3                     	ds	1
   508  0000E4                     _iSampleCntr:
   509                           	callstack 0
   510  0000E4                     	ds	1
   511  0000E5                     _bIncDays:
   512                           	callstack 0
   513  0000E5                     	ds	1
   514  0000E6                     _giHours:
   515                           	callstack 0
   516  0000E6                     	ds	1
   517  0000E7                     _giMins:
   518                           	callstack 0
   519  0000E7                     	ds	1
   520  0000E8                     _giSecs:
   521                           	callstack 0
   522  0000E8                     	ds	1
   523  0000E9                     _gb_TempCaptured:
   524                           	callstack 0
   525  0000E9                     	ds	1
   526  0000EA                     _gb_Temp_Done:
   527                           	callstack 0
   528  0000EA                     	ds	1
   529  0000EB                     _gb_Temp_Captured:
   530                           	callstack 0
   531  0000EB                     	ds	1
   532  0000EC                     _gb_EchoDetected:
   533                           	callstack 0
   534  0000EC                     	ds	1
   535  0000ED                     _gb_UpdateTime:
   536                           	callstack 0
   537  0000ED                     	ds	1
   538  0000EE                     _gfLnRRatio:
   539                           	callstack 0
   540  0000EE                     	ds	4
   541  0000F2                     _giTempCapture:
   542                           	callstack 0
   543  0000F2                     	ds	2
   544                           
   545                           	psect	dataBANK0
   546  0000F4                     __pdataBANK0:
   547                           	callstack 0
   548  0000F4                     _Timer0_Reload:
   549                           	callstack 0
   550  0000F4                     	ds	2
   551  0000F6                     _giBacklight_Timeout:
   552                           	callstack 0
   553  0000F6                     	ds	1
   554  0000F7                     _giYear:
   555                           	callstack 0
   556  0000F7                     	ds	1
   557  0000F8                     _giDay:
   558                           	callstack 0
   559  0000F8                     	ds	1
   560  0000F9                     _gsTotalSecs:
   561                           	callstack 0
   562  0000F9                     	ds	4
   563                           
   564                           	psect	bssBANK1
   565  000100                     __pbssBANK1:
   566                           	callstack 0
   567  000100                     _gfDefault_SOS:
   568                           	callstack 0
   569  000100                     	ds	4
   570  000104                     _gd_Temp:
   571                           	callstack 0
   572  000104                     	ds	4
   573  000108                     _sLine2:
   574                           	callstack 0
   575  000108                     	ds	100
   576  00016C                     _sLine1:
   577                           	callstack 0
   578  00016C                     	ds	100
   579                           
   580                           	psect	dataBANK1
   581  0001D0                     __pdataBANK1:
   582                           	callstack 0
   583  0001D0                     _giMonthEndTbl:
   584                           	callstack 0
   585  0001D0                     	ds	12
   586  0001DC                     _gsCurrTime:
   587                           	callstack 0
   588  0001DC                     	ds	9
   589  0001E5                     _gsCurrDate:
   590                           	callstack 0
   591  0001E5                     	ds	9
   592                           
   593                           	psect	cstackBANK0
   594  000060                     __pcstackBANK0:
   595                           	callstack 0
   596  000060                     ??___flmul:
   597  000060                     floor@i:
   598                           	callstack 0
   599  000060                     trunc@i:
   600                           	callstack 0
   601                           
   602                           ; 4 bytes @ 0x0
   603  000060                     	ds	4
   604  000064                     ___flmul@sign:
   605                           	callstack 0
   606  000064                     floor@expon:
   607                           	callstack 0
   608  000064                     trunc@expon:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x4
   612  000064                     	ds	1
   613  000065                     ___flmul@grs:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x5
   617  000065                     	ds	1
   618  000066                     ?___flsub:
   619                           	callstack 0
   620  000066                     ___flsub@b:
   621                           	callstack 0
   622                           
   623                           ; 4 bytes @ 0x6
   624  000066                     	ds	3
   625  000069                     ___flmul@aexp:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0x9
   629  000069                     	ds	1
   630  00006A                     ___flmul@bexp:
   631                           	callstack 0
   632  00006A                     ___flsub@a:
   633                           	callstack 0
   634                           
   635                           ; 4 bytes @ 0xA
   636  00006A                     	ds	1
   637  00006B                     ___flmul@prod:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0xB
   641  00006B                     	ds	4
   642  00006F                     ___flmul@temp:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0xF
   646  00006F                     	ds	2
   647  000071                     ?_round:
   648                           	callstack 0
   649  000071                     ?_eval_poly:
   650                           	callstack 0
   651  000071                     eval_poly@x:
   652                           	callstack 0
   653  000071                     round@x:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x11
   657  000071                     	ds	4
   658  000075                     eval_poly@d:
   659                           	callstack 0
   660  000075                     round@f:
   661                           	callstack 0
   662                           
   663                           ; 4 bytes @ 0x15
   664  000075                     	ds	2
   665  000077                     eval_poly@n:
   666                           	callstack 0
   667                           
   668                           ; 2 bytes @ 0x17
   669  000077                     	ds	2
   670  000079                     ??_ComputeWaterVol:
   671  000079                     ??_eval_poly:
   672                           
   673                           ; 1 bytes @ 0x19
   674  000079                     	ds	4
   675  00007D                     eval_poly@res:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x1D
   679  00007D                     	ds	4
   680  000081                     ?_log:
   681                           	callstack 0
   682  000081                     ?_ldexp:
   683                           	callstack 0
   684  000081                     ComputeWaterVol@dCurrTemp:
   685                           	callstack 0
   686  000081                     log@x:
   687                           	callstack 0
   688  000081                     ldexp@value:
   689                           	callstack 0
   690                           
   691                           ; 4 bytes @ 0x21
   692  000081                     	ds	4
   693  000085                     log@exponent:
   694                           	callstack 0
   695  000085                     ldexp@newexp:
   696                           	callstack 0
   697  000085                     ComputeWaterVol@dWaterVol:
   698                           	callstack 0
   699                           
   700                           ; 4 bytes @ 0x25
   701  000085                     	ds	2
   702  000087                     ??_ComputeTemp:
   703  000087                     ??_ldexp:
   704                           
   705                           ; 1 bytes @ 0x27
   706  000087                     	ds	2
   707  000089                     ?_exp:
   708                           	callstack 0
   709  000089                     ComputeWaterVol@dSOS:
   710                           	callstack 0
   711  000089                     exp@x:
   712                           	callstack 0
   713  000089                     _ComputeTemp$2924:
   714                           	callstack 0
   715                           
   716                           ; 4 bytes @ 0x29
   717  000089                     	ds	4
   718  00008D                     _ComputeTemp$2925:
   719                           	callstack 0
   720  00008D                     _ComputeWaterVol$2927:
   721                           	callstack 0
   722  00008D                     _exp$2932:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x2D
   726  00008D                     	ds	4
   727  000091                     exp@exponent:
   728                           	callstack 0
   729  000091                     ComputeWaterVol@d_mmPerTick:
   730                           	callstack 0
   731  000091                     _ComputeTemp$2926:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x31
   735  000091                     	ds	2
   736  000093                     exp@sign:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x33
   740  000093                     	ds	1
   741  000094                     ?_pow:
   742                           	callstack 0
   743  000094                     pow@x:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0x34
   747  000094                     	ds	1
   748  000095                     ComputeWaterVol@dWaterHeight_mm:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x35
   752  000095                     	ds	3
   753  000098                     pow@y:
   754                           	callstack 0
   755                           
   756                           ; 4 bytes @ 0x38
   757  000098                     	ds	1
   758  000099                     ComputeWaterVol@dEmptySpace_mm:
   759                           	callstack 0
   760                           
   761                           ; 4 bytes @ 0x39
   762  000099                     	ds	3
   763  00009C                     _pow$2930:
   764                           	callstack 0
   765                           
   766                           ; 4 bytes @ 0x3C
   767  00009C                     	ds	4
   768  0000A0                     _pow$2931:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x40
   772  0000A0                     	ds	4
   773  0000A4                     pow@sign:
   774                           	callstack 0
   775                           
   776                           ; 1 bytes @ 0x44
   777  0000A4                     	ds	1
   778  0000A5                     pow@yi:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x45
   782  0000A5                     	ds	8
   783  0000AD                     ??_main:
   784                           
   785                           ; 1 bytes @ 0x4D
   786  0000AD                     	ds	2
   787  0000AF                     _main$921:
   788                           	callstack 0
   789                           
   790                           ; 2 bytes @ 0x4F
   791  0000AF                     	ds	2
   792                           
   793                           	psect	cstackCOMRAM
   794  000001                     __pcstackCOMRAM:
   795                           	callstack 0
   796  000001                     ??_isdigit:
   797  000001                     ??_LCD_WriteChar:
   798  000001                     ?___wmul:
   799                           	callstack 0
   800  000001                     ?___lwdiv:
   801                           	callstack 0
   802  000001                     ?___fldiv:
   803                           	callstack 0
   804  000001                     ?___flneg:
   805                           	callstack 0
   806  000001                     LCD_WriteCmd@iDelay:
   807                           	callstack 0
   808  000001                     ___wmul@multiplier:
   809                           	callstack 0
   810  000001                     ___lwdiv@dividend:
   811                           	callstack 0
   812  000001                     ___flge@ff1:
   813                           	callstack 0
   814  000001                     ___flneg@f1:
   815                           	callstack 0
   816  000001                     ___fldiv@b:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x0
   820  000001                     	ds	1
   821  000002                     _isdigit$2622:
   822                           	callstack 0
   823                           
   824                           ; 1 bytes @ 0x1
   825  000002                     	ds	1
   826  000003                     ??_LCD_WriteCmd:
   827  000003                     LCD_WriteChar@iChar:
   828                           	callstack 0
   829  000003                     isdigit@c:
   830                           	callstack 0
   831  000003                     ___wmul@multiplicand:
   832                           	callstack 0
   833  000003                     ___lwdiv@divisor:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x2
   837  000003                     	ds	1
   838  000004                     LCD_WriteString@iData:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x3
   842  000004                     	ds	1
   843  000005                     LCD_WriteCmd@iCmd:
   844                           	callstack 0
   845  000005                     ___wmul@product:
   846                           	callstack 0
   847  000005                     ___lwdiv@quotient:
   848                           	callstack 0
   849  000005                     ___flge@ff2:
   850                           	callstack 0
   851  000005                     ___fldiv@a:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x4
   855  000005                     	ds	1
   856  000006                     ??_LCD_Init:
   857  000006                     ??_LCD_WriteString:
   858  000006                     LCD_GoTo@iCharPos:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x5
   862  000006                     	ds	1
   863  000007                     ??_LCD_GoTo:
   864  000007                     ___lwdiv@counter:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x6
   868  000007                     	ds	1
   869  000008                     ?___lwmod:
   870                           	callstack 0
   871  000008                     LCD_WriteString@ix:
   872                           	callstack 0
   873  000008                     ___lwmod@dividend:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x7
   877  000008                     	ds	1
   878  000009                     ??___fldiv:
   879  000009                     ??___flge:
   880  000009                     LCD_WriteLine@iData:
   881                           	callstack 0
   882  000009                     _LCD_GoTo$1544:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x8
   886  000009                     	ds	1
   887  00000A                     ___lwmod@divisor:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x9
   891  00000A                     	ds	1
   892  00000B                     LCD_GoTo@iPos:
   893                           	callstack 0
   894  00000B                     LCD_WriteLine@sLine:
   895                           	callstack 0
   896                           
   897                           ; 17 bytes @ 0xA
   898  00000B                     	ds	1
   899  00000C                     LCD_GoTo@iLine:
   900                           	callstack 0
   901  00000C                     ___lwmod@counter:
   902                           	callstack 0
   903                           
   904                           ; 1 bytes @ 0xB
   905  00000C                     	ds	1
   906  00000D                     ?_sprintf:
   907                           	callstack 0
   908  00000D                     sprintf@sp:
   909                           	callstack 0
   910  00000D                     ___fldiv@rem:
   911                           	callstack 0
   912                           
   913                           ; 4 bytes @ 0xC
   914  00000D                     	ds	2
   915  00000F                     sprintf@f:
   916                           	callstack 0
   917                           
   918                           ; 2 bytes @ 0xE
   919  00000F                     	ds	2
   920  000011                     ___fldiv@sign:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x10
   924  000011                     	ds	1
   925  000012                     ___fldiv@new_exp:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x11
   929  000012                     	ds	2
   930  000014                     ___fldiv@grs:
   931                           	callstack 0
   932                           
   933                           ; 4 bytes @ 0x13
   934  000014                     	ds	3
   935  000017                     ??_sprintf:
   936                           
   937                           ; 1 bytes @ 0x16
   938  000017                     	ds	1
   939  000018                     ___fldiv@bexp:
   940                           	callstack 0
   941                           
   942                           ; 1 bytes @ 0x17
   943  000018                     	ds	1
   944  000019                     ___fldiv@aexp:
   945                           	callstack 0
   946                           
   947                           ; 1 bytes @ 0x18
   948  000019                     	ds	1
   949  00001A                     ?___fladd:
   950                           	callstack 0
   951  00001A                     ___fladd@b:
   952                           	callstack 0
   953                           
   954                           ; 4 bytes @ 0x19
   955  00001A                     	ds	1
   956  00001B                     sprintf@cp:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x1A
   960  00001B                     	ds	1
   961  00001C                     LCD_WriteLine@bInString:
   962                           	callstack 0
   963                           
   964                           ; 1 bytes @ 0x1B
   965  00001C                     	ds	1
   966  00001D                     sprintf@prec:
   967                           	callstack 0
   968  00001D                     LCD_WriteLine@i:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x1C
   972  00001D                     	ds	1
   973  00001E                     sprintf@ap:
   974                           	callstack 0
   975  00001E                     ___fladd@a:
   976                           	callstack 0
   977                           
   978                           ; 4 bytes @ 0x1D
   979  00001E                     	ds	2
   980  000020                     sprintf@len:
   981                           	callstack 0
   982                           
   983                           ; 2 bytes @ 0x1F
   984  000020                     	ds	2
   985  000022                     ??___fladd:
   986  000022                     sprintf@flag:
   987                           	callstack 0
   988                           
   989                           ; 1 bytes @ 0x21
   990  000022                     	ds	1
   991  000023                     sprintf@val:
   992                           	callstack 0
   993                           
   994                           ; 2 bytes @ 0x22
   995  000023                     	ds	2
   996  000025                     sprintf@width:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x24
  1000  000025                     	ds	1
  1001  000026                     ___fladd@signs:
  1002                           	callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x25
  1005  000026                     	ds	1
  1006  000027                     sprintf@c:
  1007                           	callstack 0
  1008  000027                     ___fladd@aexp:
  1009                           	callstack 0
  1010                           
  1011                           ; 1 bytes @ 0x26
  1012  000027                     	ds	1
  1013  000028                     ___fladd@bexp:
  1014                           	callstack 0
  1015                           
  1016                           ; 1 bytes @ 0x27
  1017  000028                     	ds	1
  1018  000029                     ComputeTOD@bIncDays:
  1019                           	callstack 0
  1020  000029                     ___fladd@grs:
  1021                           	callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x28
  1024  000029                     	ds	1
  1025  00002A                     ?_sqrt:
  1026                           	callstack 0
  1027  00002A                     ?___fltol:
  1028                           	callstack 0
  1029  00002A                     ___fltol@f1:
  1030                           	callstack 0
  1031  00002A                     sqrt@a:
  1032                           	callstack 0
  1033                           
  1034                           ; 4 bytes @ 0x29
  1035  00002A                     	ds	4
  1036  00002E                     ??_sqrt:
  1037  00002E                     ??___fltol:
  1038                           
  1039                           ; 1 bytes @ 0x2D
  1040  00002E                     	ds	4
  1041  000032                     ___fltol@sign1:
  1042                           	callstack 0
  1043  000032                     sqrt@sign:
  1044                           	callstack 0
  1045                           
  1046                           ; 1 bytes @ 0x31
  1047  000032                     	ds	1
  1048  000033                     ___fltol@exp1:
  1049                           	callstack 0
  1050  000033                     sqrt@i:
  1051                           	callstack 0
  1052                           
  1053                           ; 1 bytes @ 0x32
  1054  000033                     	ds	1
  1055  000034                     ?___xxtofl:
  1056                           	callstack 0
  1057  000034                     sqrt@tfrac:
  1058                           	callstack 0
  1059  000034                     ___xxtofl@val:
  1060                           	callstack 0
  1061                           
  1062                           ; 4 bytes @ 0x33
  1063  000034                     	ds	4
  1064  000038                     ??___xxtofl:
  1065  000038                     sqrt@p:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x37
  1069  000038                     	ds	1
  1070  000039                     sqrt@grs:
  1071                           	callstack 0
  1072                           
  1073                           ; 4 bytes @ 0x38
  1074  000039                     	ds	3
  1075  00003C                     ___xxtofl@sign:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0x3B
  1079  00003C                     	ds	1
  1080  00003D                     ___xxtofl@exp:
  1081                           	callstack 0
  1082  00003D                     sqrt@exp:
  1083                           	callstack 0
  1084                           
  1085                           ; 2 bytes @ 0x3C
  1086  00003D                     	ds	1
  1087  00003E                     ___xxtofl@arg:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x3D
  1091  00003E                     	ds	1
  1092  00003F                     sqrt@root:
  1093                           	callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x3E
  1096  00003F                     	ds	3
  1097  000042                     ___fleq@ff1:
  1098                           	callstack 0
  1099                           
  1100                           ; 4 bytes @ 0x41
  1101  000042                     	ds	1
  1102  000043                     sqrt@frac:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x42
  1106  000043                     	ds	3
  1107  000046                     ___fleq@ff2:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x45
  1111  000046                     	ds	4
  1112  00004A                     ??___fleq:
  1113                           
  1114                           ; 1 bytes @ 0x49
  1115  00004A                     	ds	4
  1116  00004E                     ?_frexp:
  1117                           	callstack 0
  1118  00004E                     frexp@value:
  1119                           	callstack 0
  1120                           
  1121                           ; 4 bytes @ 0x4D
  1122  00004E                     	ds	4
  1123  000052                     frexp@eptr:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0x51
  1127  000052                     	ds	2
  1128  000054                     ??_frexp:
  1129                           
  1130                           ; 1 bytes @ 0x53
  1131  000054                     	ds	2
  1132  000056                     ?___flmul:
  1133                           	callstack 0
  1134  000056                     ?_floor:
  1135                           	callstack 0
  1136  000056                     ?_trunc:
  1137                           	callstack 0
  1138  000056                     ___flmul@b:
  1139                           	callstack 0
  1140  000056                     floor@x:
  1141                           	callstack 0
  1142  000056                     trunc@x:
  1143                           	callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x55
  1146  000056                     	ds	4
  1147  00005A                     ___flmul@a:
  1148                           	callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x59
  1151  00005A                     	ds	4
  1152  00005E                     
  1153                           ; 1 bytes @ 0x5D
  1154 ;;
  1155 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1156 ;;
  1157 ;; *************** function _main *****************
  1158 ;; Defined at:
  1159 ;;		line 23 in file "main.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1173 ;;      Params:         0       0       0       0       0       0       0       0       0
  1174 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1175 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1176 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1177 ;;Total ram usage:        4 bytes
  1178 ;; Hardware stack levels required when called:    9
  1179 ;; This function calls:
  1180 ;;		_AN0_Init
  1181 ;;		_CCP1_Init
  1182 ;;		_CCP2_Init
  1183 ;;		_ComputeTOD
  1184 ;;		_ComputeTemp
  1185 ;;		_ComputeWaterVol
  1186 ;;		_InitTankVariables
  1187 ;;		_LCD_Init
  1188 ;;		_LCD_WriteString
  1189 ;;		_StartDepthDetection
  1190 ;;		_SysInit
  1191 ;;		_Timer0_Init
  1192 ;;		_Timer1_Init
  1193 ;;		_Timer2_Init
  1194 ;;		_Timer3_Init
  1195 ;; This function is called by:
  1196 ;;		Startup code after reset
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text0
  1201  002C64                     __ptext0:
  1202                           	callstack 0
  1203  002C64                     _main:
  1204                           	callstack 22
  1205  002C64                     
  1206                           ;main.c: 28: if (1)
  1207  002C64  EC73  F01E         	call	_SysInit	;wreg free
  1208  002C68                     
  1209                           ;main.c: 29: {;main.c: 30: LCD_Init();
  1210  002C68  ECC1  F01C         	call	_LCD_Init	;wreg free
  1211  002C6C                     
  1212                           ;main.c: 31: LCD_WriteString ((uint8_t *)"Loading... ");
  1213  002C6C  0E79               	movlw	low STR_1
  1214  002C6E  6E04               	movwf	LCD_WriteString@iData^0,c
  1215  002C70  0E08               	movlw	high STR_1
  1216  002C72  6E05               	movwf	(LCD_WriteString@iData+1)^0,c
  1217  002C74  ECBB  F01B         	call	_LCD_WriteString	;wreg free
  1218  002C78                     
  1219                           ;main.c: 32: };main.c: 34: __nop();
  1220  002C78  F000               	nop	
  1221  002C7A                     
  1222                           ;main.c: 36: giBacklight_Timeout = (PORTCbits.RC5 == 1) ? 180 : 10;
  1223  002C7A  BA82               	btfsc	130,5,c	;volatile
  1224  002C7C  EF42  F016         	goto	u4481
  1225  002C80  EF44  F016         	goto	u4480
  1226  002C84                     u4481:
  1227  002C84  EF4B  F016         	goto	l5236
  1228  002C88                     u4480:
  1229  002C88  0E00               	movlw	0
  1230  002C8A  0100               	movlb	0	; () banked
  1231  002C8C  6FB0               	movwf	(_main$921+1)& (0+255),b
  1232  002C8E  0E0A               	movlw	10
  1233  002C90  6FAF               	movwf	_main$921& (0+255),b
  1234  002C92  EF50  F016         	goto	l5238
  1235  002C96                     l5236:
  1236  002C96  0E00               	movlw	0
  1237  002C98  0100               	movlb	0	; () banked
  1238  002C9A  6FB0               	movwf	(_main$921+1)& (0+255),b
  1239  002C9C  0EB4               	movlw	180
  1240  002C9E  6FAF               	movwf	_main$921& (0+255),b
  1241  002CA0                     l5238:
  1242                           
  1243                           ; BSR set to: 0
  1244  002CA0  C0AF  F0F6         	movff	_main$921,_giBacklight_Timeout
  1245  002CA4                     
  1246                           ; BSR set to: 0
  1247                           ;main.c: 38: InitTankVariables();
  1248  002CA4  EC3F  F01A         	call	_InitTankVariables	;wreg free
  1249  002CA8                     
  1250                           ;main.c: 39: Timer0_Init();
  1251  002CA8  EC18  F01E         	call	_Timer0_Init	;wreg free
  1252  002CAC                     
  1253                           ;main.c: 40: Timer1_Init();
  1254  002CAC  EC35  F01E         	call	_Timer1_Init	;wreg free
  1255  002CB0                     
  1256                           ;main.c: 41: Timer2_Init();
  1257  002CB0  EC2C  F01E         	call	_Timer2_Init	;wreg free
  1258  002CB4                     
  1259                           ;main.c: 42: Timer3_Init();
  1260  002CB4  ECFD  F01D         	call	_Timer3_Init	;wreg free
  1261  002CB8                     
  1262                           ;main.c: 43: CCP1_Init();
  1263  002CB8  EC50  F01E         	call	_CCP1_Init	;wreg free
  1264  002CBC                     
  1265                           ;main.c: 44: CCP2_Init();
  1266  002CBC  EC47  F01E         	call	_CCP2_Init	;wreg free
  1267  002CC0                     
  1268                           ;main.c: 45: AN0_Init();
  1269  002CC0  EC59  F01E         	call	_AN0_Init	;wreg free
  1270  002CC4                     
  1271                           ;main.c: 47: INTCONbits.GIE = 1;
  1272  002CC4  8EF2               	bsf	242,7,c	;volatile
  1273  002CC6                     
  1274                           ;main.c: 48: INTCONbits.PEIE = 1;
  1275  002CC6  8CF2               	bsf	242,6,c	;volatile
  1276  002CC8                     l5260:
  1277                           
  1278                           ;main.c: 62: {;main.c: 63: if (gb_TempCaptured)
  1279  002CC8  0100               	movlb	0	; () banked
  1280  002CCA  51E9               	movf	_gb_TempCaptured& (0+255),w,b	;volatile
  1281  002CCC  B4D8               	btfsc	status,2,c
  1282  002CCE  EF6B  F016         	goto	u4491
  1283  002CD2  EF6D  F016         	goto	u4490
  1284  002CD6                     u4491:
  1285  002CD6  EF73  F016         	goto	l5268
  1286  002CDA                     u4490:
  1287  002CDA                     
  1288                           ; BSR set to: 0
  1289                           ;main.c: 64: {;main.c: 65: gb_TempCaptured = 0;
  1290  002CDA  0E00               	movlw	0
  1291  002CDC  6FE9               	movwf	_gb_TempCaptured& (0+255),b	;volatile
  1292  002CDE                     
  1293                           ; BSR set to: 0
  1294                           ;main.c: 66: ComputeTemp();
  1295  002CDE  EC28  F012         	call	_ComputeTemp	;wreg free
  1296  002CE2                     
  1297                           ;main.c: 67: StartDepthDetection();
  1298  002CE2  EC22  F01E         	call	_StartDepthDetection	;wreg free
  1299  002CE6                     l5268:
  1300                           
  1301                           ;main.c: 68: };main.c: 70: if (gb_EchoDetected)
  1302  002CE6  0100               	movlb	0	; () banked
  1303  002CE8  51EC               	movf	_gb_EchoDetected& (0+255),w,b	;volatile
  1304  002CEA  B4D8               	btfsc	status,2,c
  1305  002CEC  EF7A  F016         	goto	u4501
  1306  002CF0  EF7C  F016         	goto	u4500
  1307  002CF4                     u4501:
  1308  002CF4  EF81  F016         	goto	l5274
  1309  002CF8                     u4500:
  1310  002CF8                     
  1311                           ; BSR set to: 0
  1312                           ;main.c: 71: {;main.c: 72: ComputeWaterVol();
  1313  002CF8  EC68  F00C         	call	_ComputeWaterVol	;wreg free
  1314  002CFC                     
  1315                           ;main.c: 73: gb_EchoDetected = 0;
  1316  002CFC  0E00               	movlw	0
  1317  002CFE  0100               	movlb	0	; () banked
  1318  002D00  6FEC               	movwf	_gb_EchoDetected& (0+255),b	;volatile
  1319  002D02                     l5274:
  1320                           
  1321                           ; BSR set to: 0
  1322                           ;main.c: 74: };main.c: 76: if (gb_UpdateTime)
  1323  002D02  51ED               	movf	_gb_UpdateTime& (0+255),w,b	;volatile
  1324  002D04  B4D8               	btfsc	status,2,c
  1325  002D06  EF87  F016         	goto	u4511
  1326  002D0A  EF89  F016         	goto	u4510
  1327  002D0E                     u4511:
  1328  002D0E  EF64  F016         	goto	l5260
  1329  002D12                     u4510:
  1330  002D12                     
  1331                           ; BSR set to: 0
  1332                           ;main.c: 77: {;main.c: 78: ComputeTOD();
  1333  002D12  EC4D  F018         	call	_ComputeTOD	;wreg free
  1334  002D16                     
  1335                           ;main.c: 79: gb_UpdateTime = 0;
  1336  002D16  0E00               	movlw	0
  1337  002D18  0100               	movlb	0	; () banked
  1338  002D1A  6FED               	movwf	_gb_UpdateTime& (0+255),b	;volatile
  1339  002D1C                     
  1340                           ; BSR set to: 0
  1341                           ;main.c: 82: if (!gbBacklight_On)
  1342  002D1C  51E3               	movf	_gbBacklight_On& (0+255),w,b
  1343  002D1E  A4D8               	btfss	status,2,c
  1344  002D20  EF94  F016         	goto	u4521
  1345  002D24  EF96  F016         	goto	u4520
  1346  002D28                     u4521:
  1347  002D28  EFA6  F016         	goto	l5288
  1348  002D2C                     u4520:
  1349  002D2C                     
  1350                           ; BSR set to: 0
  1351                           ;main.c: 83: {;main.c: 84: if (PORTCbits.RC4 == 1)
  1352  002D2C  A882               	btfss	130,4,c	;volatile
  1353  002D2E  EF9B  F016         	goto	u4531
  1354  002D32  EF9D  F016         	goto	u4530
  1355  002D36                     u4531:
  1356  002D36  EF64  F016         	goto	l5260
  1357  002D3A                     u4530:
  1358  002D3A                     
  1359                           ; BSR set to: 0
  1360                           ;main.c: 85: {;main.c: 86: LATAbits.LATA4 = 1;
  1361  002D3A  8889               	bsf	137,4,c	;volatile
  1362  002D3C                     
  1363                           ; BSR set to: 0
  1364                           ;main.c: 87: gbBacklight_On = 1;
  1365  002D3C  0E01               	movlw	1
  1366  002D3E  6FE3               	movwf	_gbBacklight_On& (0+255),b
  1367                           
  1368                           ;main.c: 88: giBacklight_Timer = 0;
  1369  002D40  0E00               	movlw	0
  1370  002D42  6FD2               	movwf	(_giBacklight_Timer+1)& (0+255),b
  1371  002D44  0E00               	movlw	0
  1372  002D46  6FD1               	movwf	_giBacklight_Timer& (0+255),b
  1373  002D48  EF64  F016         	goto	l5260
  1374  002D4C                     l5288:
  1375                           
  1376                           ; BSR set to: 0
  1377                           ;main.c: 91: if (++giBacklight_Timer > giBacklight_Timeout)
  1378  002D4C  4BD1               	infsnz	_giBacklight_Timer& (0+255),f,b
  1379  002D4E  2BD2               	incf	(_giBacklight_Timer+1)& (0+255),f,b
  1380  002D50  51F6               	movf	_giBacklight_Timeout& (0+255),w,b
  1381  002D52  6FAD               	movwf	??_main& (0+255),b
  1382  002D54  6BAE               	clrf	(??_main+1)& (0+255),b
  1383  002D56  51D1               	movf	_giBacklight_Timer& (0+255),w,b
  1384  002D58  5DAD               	subwf	??_main& (0+255),w,b
  1385  002D5A  51D2               	movf	(_giBacklight_Timer+1)& (0+255),w,b
  1386  002D5C  59AE               	subwfb	(??_main+1)& (0+255),w,b
  1387  002D5E  B0D8               	btfsc	status,0,c
  1388  002D60  EFB4  F016         	goto	u4541
  1389  002D64  EFB6  F016         	goto	u4540
  1390  002D68                     u4541:
  1391  002D68  EFC2  F016         	goto	l455
  1392  002D6C                     u4540:
  1393  002D6C                     
  1394                           ; BSR set to: 0
  1395                           ;main.c: 92: {;main.c: 93: if (PORTCbits.RC4 == 0)
  1396  002D6C  B882               	btfsc	130,4,c	;volatile
  1397  002D6E  EFBB  F016         	goto	u4551
  1398  002D72  EFBD  F016         	goto	u4550
  1399  002D76                     u4551:
  1400  002D76  EFC2  F016         	goto	l455
  1401  002D7A                     u4550:
  1402  002D7A                     
  1403                           ; BSR set to: 0
  1404                           ;main.c: 94: {;main.c: 95: gbBacklight_On = 0;
  1405  002D7A  0E00               	movlw	0
  1406  002D7C  6FE3               	movwf	_gbBacklight_On& (0+255),b
  1407  002D7E                     
  1408                           ; BSR set to: 0
  1409                           ;main.c: 96: LATAbits.LATA4 = 0;
  1410  002D7E  9889               	bcf	137,4,c	;volatile
  1411  002D80  EF64  F016         	goto	l5260
  1412  002D84                     l455:
  1413                           
  1414                           ; BSR set to: 0
  1415  002D84  EF64  F016         	goto	l5260
  1416  002D88  EF07  F000         	goto	start
  1417  002D8C                     __end_of_main:
  1418                           	callstack 0
  1419                           
  1420 ;; *************** function _Timer3_Init *****************
  1421 ;; Defined at:
  1422 ;;		line 23 in file "Timer_3.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1436 ;;      Params:         0       0       0       0       0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1438 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1439 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1440 ;;Total ram usage:        0 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    3
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_main
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text1
  1451  003BFA                     __ptext1:
  1452                           	callstack 0
  1453  003BFA                     _Timer3_Init:
  1454                           	callstack 27
  1455  003BFA                     
  1456                           ;Timer_3.c: 26: T3CONbits.RD16 = 1;
  1457  003BFA  8EB1               	bsf	177,7,c	;volatile
  1458                           
  1459                           ;Timer_3.c: 27: T3CONbits.T3CCP1 = 0;
  1460  003BFC  96B1               	bcf	177,3,c	;volatile
  1461                           
  1462                           ;Timer_3.c: 28: T3CONbits.T3CCP2 = 0;
  1463  003BFE  9CB1               	bcf	177,6,c	;volatile
  1464  003C00                     
  1465                           ;Timer_3.c: 29: T3CONbits.T3CKPS = 0;
  1466  003C00  0ECF               	movlw	-49
  1467  003C02  16B1               	andwf	177,f,c	;volatile
  1468  003C04                     
  1469                           ;Timer_3.c: 30: T3CONbits.TMR3CS = 0;
  1470  003C04  92B1               	bcf	177,1,c	;volatile
  1471  003C06                     
  1472                           ;Timer_3.c: 31: T3CONbits.nT3SYNC = 0;
  1473  003C06  94B1               	bcf	177,2,c	;volatile
  1474  003C08                     
  1475                           ;Timer_3.c: 32: T3CONbits.TMR3ON = 0;
  1476  003C08  90B1               	bcf	177,0,c	;volatile
  1477                           
  1478                           ;Timer_3.c: 34: TMR3H = 0;
  1479  003C0A  0E00               	movlw	0
  1480  003C0C  6EB3               	movwf	179,c	;volatile
  1481                           
  1482                           ;Timer_3.c: 35: TMR3L = 0;
  1483  003C0E  0E00               	movlw	0
  1484  003C10  6EB2               	movwf	178,c	;volatile
  1485  003C12                     
  1486                           ;Timer_3.c: 37: PIR2bits.TMR3IF = 0;
  1487  003C12  92A1               	bcf	161,1,c	;volatile
  1488  003C14                     
  1489                           ;Timer_3.c: 38: PIE2bits.TMR3IE = 0;
  1490  003C14  92A0               	bcf	160,1,c	;volatile
  1491  003C16  0012               	return		;funcret
  1492  003C18                     __end_of_Timer3_Init:
  1493                           	callstack 0
  1494                           
  1495 ;; *************** function _Timer2_Init *****************
  1496 ;; Defined at:
  1497 ;;		line 23 in file "Timer_2.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;		None
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, status,2
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1511 ;;      Params:         0       0       0       0       0       0       0       0       0
  1512 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1514 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1515 ;;Total ram usage:        0 bytes
  1516 ;; Hardware stack levels used:    1
  1517 ;; Hardware stack levels required when called:    3
  1518 ;; This function calls:
  1519 ;;		Nothing
  1520 ;; This function is called by:
  1521 ;;		_main
  1522 ;; This function uses a non-reentrant model
  1523 ;;
  1524                           
  1525                           	psect	text2
  1526  003C58                     __ptext2:
  1527                           	callstack 0
  1528  003C58                     _Timer2_Init:
  1529                           	callstack 27
  1530  003C58                     
  1531                           ;Timer_2.c: 26: PR2 = 0x31;
  1532  003C58  0E31               	movlw	49
  1533  003C5A  6ECB               	movwf	203,c	;volatile
  1534                           
  1535                           ;Timer_2.c: 32: T2CON = (10-2)<<3 | 0 | 0;
  1536  003C5C  0E40               	movlw	64
  1537  003C5E  6ECA               	movwf	202,c	;volatile
  1538                           
  1539                           ;Timer_2.c: 34: TMR2 = 0;
  1540  003C60  0E00               	movlw	0
  1541  003C62  6ECC               	movwf	204,c	;volatile
  1542  003C64                     
  1543                           ;Timer_2.c: 35: PIR1bits.TMR2IF = 0;
  1544  003C64  929E               	bcf	158,1,c	;volatile
  1545  003C66                     
  1546                           ;Timer_2.c: 36: PIE1bits.TMR2IE = 0;
  1547  003C66  929D               	bcf	157,1,c	;volatile
  1548  003C68  0012               	return		;funcret
  1549  003C6A                     __end_of_Timer2_Init:
  1550                           	callstack 0
  1551                           
  1552 ;; *************** function _Timer1_Init *****************
  1553 ;; Defined at:
  1554 ;;		line 10 in file "Timer_1.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;		None
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;		None
  1559 ;; Return value:  Size  Location     Type
  1560 ;;                  1    wreg      void 
  1561 ;; Registers used:
  1562 ;;		wreg, status,2
  1563 ;; Tracked objects:
  1564 ;;		On entry : 0/0
  1565 ;;		On exit  : 0/0
  1566 ;;		Unchanged: 0/0
  1567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1568 ;;      Params:         0       0       0       0       0       0       0       0       0
  1569 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1570 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1571 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1572 ;;Total ram usage:        0 bytes
  1573 ;; Hardware stack levels used:    1
  1574 ;; Hardware stack levels required when called:    3
  1575 ;; This function calls:
  1576 ;;		Nothing
  1577 ;; This function is called by:
  1578 ;;		_main
  1579 ;; This function uses a non-reentrant model
  1580 ;;
  1581                           
  1582                           	psect	text3
  1583  003C6A                     __ptext3:
  1584                           	callstack 0
  1585  003C6A                     _Timer1_Init:
  1586                           	callstack 27
  1587  003C6A                     
  1588                           ;Timer_1.c: 12: PIR1bits.TMR1IF = 0;
  1589  003C6A  909E               	bcf	158,0,c	;volatile
  1590                           
  1591                           ;Timer_1.c: 13: PIE1bits.TMR1IE = 0;
  1592  003C6C  909D               	bcf	157,0,c	;volatile
  1593  003C6E                     
  1594                           ;Timer_1.c: 20: T1CON = 0x80;
  1595  003C6E  0E80               	movlw	128
  1596  003C70  6ECD               	movwf	205,c	;volatile
  1597                           
  1598                           ;Timer_1.c: 22: TMR1H = 0;
  1599  003C72  0E00               	movlw	0
  1600  003C74  6ECF               	movwf	207,c	;volatile
  1601                           
  1602                           ;Timer_1.c: 23: TMR1L = 0;
  1603  003C76  0E00               	movlw	0
  1604  003C78  6ECE               	movwf	206,c	;volatile
  1605  003C7A  0012               	return		;funcret
  1606  003C7C                     __end_of_Timer1_Init:
  1607                           	callstack 0
  1608                           
  1609 ;; *************** function _Timer0_Init *****************
  1610 ;; Defined at:
  1611 ;;		line 18 in file "Timer_0.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;		None
  1616 ;; Return value:  Size  Location     Type
  1617 ;;                  1    wreg      void 
  1618 ;; Registers used:
  1619 ;;		wreg, status,2
  1620 ;; Tracked objects:
  1621 ;;		On entry : 0/0
  1622 ;;		On exit  : 0/0
  1623 ;;		Unchanged: 0/0
  1624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1625 ;;      Params:         0       0       0       0       0       0       0       0       0
  1626 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1627 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1628 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1629 ;;Total ram usage:        0 bytes
  1630 ;; Hardware stack levels used:    1
  1631 ;; Hardware stack levels required when called:    3
  1632 ;; This function calls:
  1633 ;;		Nothing
  1634 ;; This function is called by:
  1635 ;;		_main
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text4
  1640  003C30                     __ptext4:
  1641                           	callstack 0
  1642  003C30                     _Timer0_Init:
  1643                           	callstack 27
  1644  003C30                     
  1645                           ;Timer_0.c: 20: TMR0H = Timer0_Reload >> 8;
  1646  003C30  0100               	movlb	0	; () banked
  1647  003C32  51F5               	movf	(_Timer0_Reload+1)& (0+255),w,b
  1648  003C34  6ED7               	movwf	215,c	;volatile
  1649  003C36                     
  1650                           ; BSR set to: 0
  1651                           ;Timer_0.c: 21: TMR0L = Timer0_Reload;
  1652  003C36  C0F4  FFD6         	movff	_Timer0_Reload,4054	;volatile
  1653  003C3A                     
  1654                           ; BSR set to: 0
  1655                           ;Timer_0.c: 23: INTCONbits.TMR0IF = 0;
  1656  003C3A  94F2               	bcf	242,2,c	;volatile
  1657  003C3C                     
  1658                           ; BSR set to: 0
  1659                           ;Timer_0.c: 24: INTCONbits.TMR0IE = 1;
  1660  003C3C  8AF2               	bsf	242,5,c	;volatile
  1661                           
  1662                           ;Timer_0.c: 27: T0CON = 0x98;
  1663  003C3E  0E98               	movlw	152
  1664  003C40  6ED5               	movwf	213,c	;volatile
  1665  003C42                     
  1666                           ; BSR set to: 0
  1667  003C42  0012               	return		;funcret
  1668  003C44                     __end_of_Timer0_Init:
  1669                           	callstack 0
  1670                           
  1671 ;; *************** function _SysInit *****************
  1672 ;; Defined at:
  1673 ;;		line 10 in file "SysInit.c"
  1674 ;; Parameters:    Size  Location     Type
  1675 ;;		None
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;		None
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  1    wreg      void 
  1680 ;; Registers used:
  1681 ;;		wreg, status,2, cstack
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1687 ;;      Params:         0       0       0       0       0       0       0       0       0
  1688 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1690 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1691 ;;Total ram usage:        0 bytes
  1692 ;; Hardware stack levels used:    1
  1693 ;; Hardware stack levels required when called:    4
  1694 ;; This function calls:
  1695 ;;		_OscInit
  1696 ;;		_PIN_MANAGER_Initialize
  1697 ;; This function is called by:
  1698 ;;		_main
  1699 ;; This function uses a non-reentrant model
  1700 ;;
  1701                           
  1702                           	psect	text5
  1703  003CE6                     __ptext5:
  1704                           	callstack 0
  1705  003CE6                     _SysInit:
  1706                           	callstack 26
  1707  003CE6                     
  1708                           ;SysInit.c: 12: PIN_MANAGER_Initialize();
  1709  003CE6  EC67  F01D         	call	_PIN_MANAGER_Initialize	;wreg free
  1710                           
  1711                           ;SysInit.c: 13: OscInit();
  1712  003CEA  EC78  F01E         	call	_OscInit	;wreg free
  1713  003CEE  0012               	return		;funcret
  1714  003CF0                     __end_of_SysInit:
  1715                           	callstack 0
  1716                           
  1717 ;; *************** function _PIN_MANAGER_Initialize *****************
  1718 ;; Defined at:
  1719 ;;		line 26 in file "pin_manager.c"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;		None
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1733 ;;      Params:         0       0       0       0       0       0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1735 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1736 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1737 ;;Total ram usage:        0 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    3
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_SysInit
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text6
  1748  003ACE                     __ptext6:
  1749                           	callstack 0
  1750  003ACE                     _PIN_MANAGER_Initialize:
  1751                           	callstack 26
  1752  003ACE                     
  1753                           ;pin_manager.c: 30: UCON = 0;
  1754  003ACE  0E00               	movlw	0
  1755  003AD0  6E6D               	movwf	109,c	;volatile
  1756                           
  1757                           ;pin_manager.c: 31: UCFG = 0;
  1758  003AD2  0E00               	movlw	0
  1759  003AD4  6E6F               	movwf	111,c	;volatile
  1760  003AD6                     
  1761                           ;pin_manager.c: 32: UCFGbits.UTRDIS = 1;
  1762  003AD6  866F               	bsf	111,3,c	;volatile
  1763                           
  1764                           ;pin_manager.c: 41: LATA = 0x00;
  1765  003AD8  0E00               	movlw	0
  1766  003ADA  6E89               	movwf	137,c	;volatile
  1767                           
  1768                           ;pin_manager.c: 42: LATB = 0x00;
  1769  003ADC  0E00               	movlw	0
  1770  003ADE  6E8A               	movwf	138,c	;volatile
  1771                           
  1772                           ;pin_manager.c: 43: LATC = 0x00;
  1773  003AE0  0E00               	movlw	0
  1774  003AE2  6E8B               	movwf	139,c	;volatile
  1775  003AE4                     
  1776                           ;pin_manager.c: 53: TRISA = 0xff;
  1777  003AE4  6892               	setf	146,c	;volatile
  1778  003AE6                     
  1779                           ;pin_manager.c: 54: TRISB = 0xff;
  1780  003AE6  6893               	setf	147,c	;volatile
  1781  003AE8                     
  1782                           ;pin_manager.c: 55: TRISC = 0xff;
  1783  003AE8  6894               	setf	148,c	;volatile
  1784                           
  1785                           ;pin_manager.c: 58: TRISB = 0;
  1786  003AEA  0E00               	movlw	0
  1787  003AEC  6E93               	movwf	147,c	;volatile
  1788  003AEE                     
  1789                           ;pin_manager.c: 59: TRISAbits.RA1 = 0;
  1790  003AEE  9292               	bcf	146,1,c	;volatile
  1791  003AF0                     
  1792                           ;pin_manager.c: 60: TRISAbits.RA3 = 0;
  1793  003AF0  9692               	bcf	146,3,c	;volatile
  1794  003AF2                     
  1795                           ;pin_manager.c: 61: TRISAbits.RA2 = 0;
  1796  003AF2  9492               	bcf	146,2,c	;volatile
  1797  003AF4                     
  1798                           ;pin_manager.c: 62: TRISAbits.RA4 = 0;
  1799  003AF4  9892               	bcf	146,4,c	;volatile
  1800  003AF6                     
  1801                           ;pin_manager.c: 63: TRISAbits.TRISA5 = 0;
  1802  003AF6  9A92               	bcf	146,5,c	;volatile
  1803  003AF8                     
  1804                           ;pin_manager.c: 64: TRISCbits.RC0 = 0;
  1805  003AF8  9094               	bcf	148,0,c	;volatile
  1806  003AFA                     
  1807                           ;pin_manager.c: 65: TRISCbits.RC1 = 0;
  1808  003AFA  9294               	bcf	148,1,c	;volatile
  1809  003AFC                     
  1810                           ;pin_manager.c: 66: TRISCbits.RC6 = 0;
  1811  003AFC  9C94               	bcf	148,6,c	;volatile
  1812  003AFE                     
  1813                           ;pin_manager.c: 67: TRISCbits.RC7 = 0;
  1814  003AFE  9E94               	bcf	148,7,c	;volatile
  1815                           
  1816                           ;pin_manager.c: 87: ADCON1 = 0x0e;
  1817  003B00  0E0E               	movlw	14
  1818  003B02  6EC1               	movwf	193,c	;volatile
  1819  003B04                     
  1820                           ;pin_manager.c: 95: INTCON2bits.nRBPU = 1;
  1821  003B04  8EF1               	bsf	241,7,c	;volatile
  1822  003B06  0012               	return		;funcret
  1823  003B08                     __end_of_PIN_MANAGER_Initialize:
  1824                           	callstack 0
  1825                           
  1826 ;; *************** function _OscInit *****************
  1827 ;; Defined at:
  1828 ;;		line 16 in file "SysInit.c"
  1829 ;; Parameters:    Size  Location     Type
  1830 ;;		None
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;		None
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, status,2
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0
  1843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1845 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1846 ;;Total ram usage:        0 bytes
  1847 ;; Hardware stack levels used:    1
  1848 ;; Hardware stack levels required when called:    3
  1849 ;; This function calls:
  1850 ;;		Nothing
  1851 ;; This function is called by:
  1852 ;;		_SysInit
  1853 ;; This function uses a non-reentrant model
  1854 ;;
  1855                           
  1856                           	psect	text7
  1857  003CF0                     __ptext7:
  1858                           	callstack 0
  1859  003CF0                     _OscInit:
  1860                           	callstack 26
  1861  003CF0                     
  1862                           ;SysInit.c: 21: OSCCON = 0x10;
  1863  003CF0  0E10               	movlw	16
  1864  003CF2  6ED3               	movwf	211,c	;volatile
  1865                           
  1866                           ;SysInit.c: 31: OSCTUNE = 0x00;
  1867  003CF4  0E00               	movlw	0
  1868  003CF6  6E9B               	movwf	155,c	;volatile
  1869  003CF8  0012               	return		;funcret
  1870  003CFA                     __end_of_OscInit:
  1871                           	callstack 0
  1872                           
  1873 ;; *************** function _StartDepthDetection *****************
  1874 ;; Defined at:
  1875 ;;		line 20 in file "DepthDetection.c"
  1876 ;; Parameters:    Size  Location     Type
  1877 ;;		None
  1878 ;; Auto vars:     Size  Location     Type
  1879 ;;		None
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  1    wreg      void 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1889 ;;      Params:         0       0       0       0       0       0       0       0       0
  1890 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1891 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1892 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1893 ;;Total ram usage:        0 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    4
  1896 ;; This function calls:
  1897 ;;		_CCP1_Activate
  1898 ;; This function is called by:
  1899 ;;		_main
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text8
  1904  003C44                     __ptext8:
  1905                           	callstack 0
  1906  003C44                     _StartDepthDetection:
  1907                           	callstack 26
  1908  003C44                     
  1909                           ;DepthDetection.c: 26: TMR2 = 0;
  1910  003C44  0E00               	movlw	0
  1911  003C46  6ECC               	movwf	204,c	;volatile
  1912  003C48                     
  1913                           ;DepthDetection.c: 27: PIR1bits.TMR2IF = 0;
  1914  003C48  929E               	bcf	158,1,c	;volatile
  1915  003C4A                     
  1916                           ;DepthDetection.c: 28: PIE1bits.TMR2IE = 1;
  1917  003C4A  829D               	bsf	157,1,c	;volatile
  1918  003C4C                     
  1919                           ;DepthDetection.c: 29: T2CONbits.TMR2ON = 1;
  1920  003C4C  84CA               	bsf	202,2,c	;volatile
  1921  003C4E                     
  1922                           ;DepthDetection.c: 30: CCP1_Activate();
  1923  003C4E  EC3E  F01E         	call	_CCP1_Activate	;wreg free
  1924  003C52                     
  1925                           ;DepthDetection.c: 31: LATAbits.LATA5 = 0;
  1926  003C52  9A89               	bcf	137,5,c	;volatile
  1927  003C54                     
  1928                           ;DepthDetection.c: 32: T1CONbits.TMR1ON = 1;
  1929  003C54  80CD               	bsf	205,0,c	;volatile
  1930  003C56  0012               	return		;funcret
  1931  003C58                     __end_of_StartDepthDetection:
  1932                           	callstack 0
  1933                           
  1934 ;; *************** function _CCP1_Activate *****************
  1935 ;; Defined at:
  1936 ;;		line 49 in file "CCP1.c"
  1937 ;; Parameters:    Size  Location     Type
  1938 ;;		None
  1939 ;; Auto vars:     Size  Location     Type
  1940 ;;		None
  1941 ;; Return value:  Size  Location     Type
  1942 ;;                  1    wreg      void 
  1943 ;; Registers used:
  1944 ;;		wreg, status,2
  1945 ;; Tracked objects:
  1946 ;;		On entry : 0/0
  1947 ;;		On exit  : 0/0
  1948 ;;		Unchanged: 0/0
  1949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1950 ;;      Params:         0       0       0       0       0       0       0       0       0
  1951 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1952 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1953 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1954 ;;Total ram usage:        0 bytes
  1955 ;; Hardware stack levels used:    1
  1956 ;; Hardware stack levels required when called:    3
  1957 ;; This function calls:
  1958 ;;		Nothing
  1959 ;; This function is called by:
  1960 ;;		_StartDepthDetection
  1961 ;; This function uses a non-reentrant model
  1962 ;;
  1963                           
  1964                           	psect	text9
  1965  003C7C                     __ptext9:
  1966                           	callstack 0
  1967  003C7C                     _CCP1_Activate:
  1968                           	callstack 26
  1969  003C7C                     
  1970                           ;CCP1.c: 51: CCPR1H = 0;
  1971  003C7C  0E00               	movlw	0
  1972  003C7E  6EBF               	movwf	191,c	;volatile
  1973                           
  1974                           ;CCP1.c: 52: CCPR1L = 0;
  1975  003C80  0E00               	movlw	0
  1976  003C82  6EBE               	movwf	190,c	;volatile
  1977                           
  1978                           ;CCP1.c: 53: CCP1CON = 0x04;
  1979  003C84  0E04               	movlw	4
  1980  003C86  6EBD               	movwf	189,c	;volatile
  1981  003C88                     
  1982                           ;CCP1.c: 54: PIR1bits.CCP1IF = 0;
  1983  003C88  949E               	bcf	158,2,c	;volatile
  1984  003C8A                     
  1985                           ;CCP1.c: 55: PIE1bits.CCP1IE = 1;
  1986  003C8A  849D               	bsf	157,2,c	;volatile
  1987  003C8C  0012               	return		;funcret
  1988  003C8E                     __end_of_CCP1_Activate:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _LCD_Init *****************
  1992 ;; Defined at:
  1993 ;;		line 12 in file "LCD.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;		None
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  iCmd            1    0        unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0
  2008 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2009 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2010 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2011 ;;Total ram usage:        2 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    5
  2014 ;; This function calls:
  2015 ;;		_LCD_WriteCmd
  2016 ;; This function is called by:
  2017 ;;		_main
  2018 ;; This function uses a non-reentrant model
  2019 ;;
  2020                           
  2021                           	psect	text10
  2022  003982                     __ptext10:
  2023                           	callstack 0
  2024  003982                     _LCD_Init:
  2025                           	callstack 25
  2026  003982                     
  2027                           ;LCD.c: 14: uint8_t iCmd;;LCD.c: 16: _delay((unsigned long)((15)*(8000000/4000.0)));
  2028  003982  0E27               	movlw	39
  2029  003984  6E06               	movwf	??_LCD_Init^0,c
  2030  003986  0EF5               	movlw	245
  2031  003988                     u4577:
  2032  003988  2EE8               	decfsz	wreg,f,c
  2033  00398A  D7FE               	bra	u4577
  2034  00398C  2E06               	decfsz	??_LCD_Init^0,f,c
  2035  00398E  D7FC               	bra	u4577
  2036  003990  F000               	nop	
  2037  003992                     
  2038                           ;LCD.c: 32: LCD_WriteCmd (iCmd, 40+1);
  2039  003992  0E00               	movlw	0
  2040  003994  6E02               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  2041  003996  0E29               	movlw	41
  2042  003998  6E01               	movwf	LCD_WriteCmd@iDelay^0,c
  2043  00399A  0E3C               	movlw	60
  2044  00399C  EC18  F01D         	call	_LCD_WriteCmd
  2045  0039A0                     
  2046                           ;LCD.c: 37: LCD_WriteCmd (iCmd, 40+1);
  2047  0039A0  0E00               	movlw	0
  2048  0039A2  6E02               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  2049  0039A4  0E29               	movlw	41
  2050  0039A6  6E01               	movwf	LCD_WriteCmd@iDelay^0,c
  2051  0039A8  0E08               	movlw	8
  2052  0039AA  EC18  F01D         	call	_LCD_WriteCmd
  2053  0039AE                     
  2054                           ;LCD.c: 40: LCD_WriteCmd (iCmd, 40+1);
  2055  0039AE  0E00               	movlw	0
  2056  0039B0  6E02               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  2057  0039B2  0E29               	movlw	41
  2058  0039B4  6E01               	movwf	LCD_WriteCmd@iDelay^0,c
  2059  0039B6  0E06               	movlw	6
  2060  0039B8  EC18  F01D         	call	_LCD_WriteCmd
  2061  0039BC                     
  2062                           ;LCD.c: 42: LCD_WriteCmd (0x01, 2000);
  2063  0039BC  0E07               	movlw	7
  2064  0039BE  6E02               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  2065  0039C0  0ED0               	movlw	208
  2066  0039C2  6E01               	movwf	LCD_WriteCmd@iDelay^0,c
  2067  0039C4  0E01               	movlw	1
  2068  0039C6  EC18  F01D         	call	_LCD_WriteCmd
  2069  0039CA                     
  2070                           ;LCD.c: 46: LCD_WriteCmd (iCmd, 40+1);
  2071  0039CA  0E00               	movlw	0
  2072  0039CC  6E02               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  2073  0039CE  0E29               	movlw	41
  2074  0039D0  6E01               	movwf	LCD_WriteCmd@iDelay^0,c
  2075  0039D2  0E0C               	movlw	12
  2076  0039D4  EC18  F01D         	call	_LCD_WriteCmd
  2077  0039D8  0012               	return		;funcret
  2078  0039DA                     __end_of_LCD_Init:
  2079                           	callstack 0
  2080                           
  2081 ;; *************** function _InitTankVariables *****************
  2082 ;; Defined at:
  2083 ;;		line 78 in file "DepthDetection.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2097 ;;      Params:         0       0       0       0       0       0       0       0       0
  2098 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2100 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2101 ;;Total ram usage:        4 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    8
  2104 ;; This function calls:
  2105 ;;		___flmul
  2106 ;;		_pow
  2107 ;;		_sqrt
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text11
  2114  00347E                     __ptext11:
  2115                           	callstack 0
  2116  00347E                     _InitTankVariables:
  2117                           	callstack 22
  2118  00347E                     
  2119                           ;DepthDetection.c: 82: else;DepthDetection.c: 83: gfTankSurfArea_mm2 = (24 * 25.4) * (24
      +                           * 25.4);
  2120  00347E  0E85               	movlw	133
  2121  003480  0100               	movlb	0	; () banked
  2122  003482  6FBD               	movwf	_gfTankSurfArea_mm2& (0+255),b
  2123  003484  0E73               	movlw	115
  2124  003486  6FBE               	movwf	(_gfTankSurfArea_mm2+1)& (0+255),b
  2125  003488  0EB5               	movlw	181
  2126  00348A  6FBF               	movwf	(_gfTankSurfArea_mm2+2)& (0+255),b
  2127  00348C  0E48               	movlw	72
  2128  00348E  6FC0               	movwf	(_gfTankSurfArea_mm2+3)& (0+255),b
  2129  003490                     
  2130                           ; BSR set to: 0
  2131                           ;DepthDetection.c: 84: gfSensorHeight_mm = 72 * 25.4;
  2132  003490  0E9A               	movlw	154
  2133  003492  6FB9               	movwf	_gfSensorHeight_mm& (0+255),b
  2134  003494  0E99               	movlw	153
  2135  003496  6FBA               	movwf	(_gfSensorHeight_mm+1)& (0+255),b
  2136  003498  0EE4               	movlw	228
  2137  00349A  6FBB               	movwf	(_gfSensorHeight_mm+2)& (0+255),b
  2138  00349C  0E44               	movlw	68
  2139  00349E  6FBC               	movwf	(_gfSensorHeight_mm+3)& (0+255),b
  2140  0034A0                     
  2141                           ; BSR set to: 0
  2142                           ;DepthDetection.c: 85: gfTankGalsPer_mm = gfTankSurfArea_mm2 * 264.172052e-9;
  2143  0034A0  C0BD  F056         	movff	_gfTankSurfArea_mm2,___flmul@b
  2144  0034A4  C0BE  F057         	movff	_gfTankSurfArea_mm2+1,___flmul@b+1
  2145  0034A8  C0BF  F058         	movff	_gfTankSurfArea_mm2+2,___flmul@b+2
  2146  0034AC  C0C0  F059         	movff	_gfTankSurfArea_mm2+3,___flmul@b+3
  2147  0034B0  0E88               	movlw	136
  2148  0034B2  6E5A               	movwf	___flmul@a^0,c
  2149  0034B4  0ED3               	movlw	211
  2150  0034B6  6E5B               	movwf	(___flmul@a+1)^0,c
  2151  0034B8  0E8D               	movlw	141
  2152  0034BA  6E5C               	movwf	(___flmul@a+2)^0,c
  2153  0034BC  0E34               	movlw	52
  2154  0034BE  6E5D               	movwf	(___flmul@a+3)^0,c
  2155  0034C0  ECA5  F006         	call	___flmul	;wreg free
  2156  0034C4  C056  F0B5         	movff	?___flmul,_gfTankGalsPer_mm
  2157  0034C8  C057  F0B6         	movff	?___flmul+1,_gfTankGalsPer_mm+1
  2158  0034CC  C058  F0B7         	movff	?___flmul+2,_gfTankGalsPer_mm+2
  2159  0034D0  C059  F0B8         	movff	?___flmul+3,_gfTankGalsPer_mm+3
  2160  0034D4                     
  2161                           ;DepthDetection.c: 86: gfMaxWaterHeight_mm = 68 * 25.4;
  2162  0034D4  0E66               	movlw	102
  2163  0034D6  0100               	movlb	0	; () banked
  2164  0034D8  6FB1               	movwf	_gfMaxWaterHeight_mm& (0+255),b
  2165  0034DA  0EE6               	movlw	230
  2166  0034DC  6FB2               	movwf	(_gfMaxWaterHeight_mm+1)& (0+255),b
  2167  0034DE  0ED7               	movlw	215
  2168  0034E0  6FB3               	movwf	(_gfMaxWaterHeight_mm+2)& (0+255),b
  2169  0034E2  0E44               	movlw	68
  2170  0034E4  6FB4               	movwf	(_gfMaxWaterHeight_mm+3)& (0+255),b
  2171                           
  2172                           ;DepthDetection.c: 87: gfDefault_SOS = 331.3e3 * sqrt( 1 + (22.22 / 273.15));
  2173  0034E6  0E96               	movlw	150
  2174  0034E8  6E2A               	movwf	sqrt@a^0,c
  2175  0034EA  0E69               	movlw	105
  2176  0034EC  6E2B               	movwf	(sqrt@a+1)^0,c
  2177  0034EE  0E8A               	movlw	138
  2178  0034F0  6E2C               	movwf	(sqrt@a+2)^0,c
  2179  0034F2  0E3F               	movlw	63
  2180  0034F4  6E2D               	movwf	(sqrt@a+3)^0,c
  2181  0034F6  ECF6  F00D         	call	_sqrt	;wreg free
  2182  0034FA  C02A  F056         	movff	?_sqrt,___flmul@b
  2183  0034FE  C02B  F057         	movff	?_sqrt+1,___flmul@b+1
  2184  003502  C02C  F058         	movff	?_sqrt+2,___flmul@b+2
  2185  003506  C02D  F059         	movff	?_sqrt+3,___flmul@b+3
  2186  00350A  0E80               	movlw	128
  2187  00350C  6E5A               	movwf	___flmul@a^0,c
  2188  00350E  0EC4               	movlw	196
  2189  003510  6E5B               	movwf	(___flmul@a+1)^0,c
  2190  003512  0EA1               	movlw	161
  2191  003514  6E5C               	movwf	(___flmul@a+2)^0,c
  2192  003516  0E48               	movlw	72
  2193  003518  6E5D               	movwf	(___flmul@a+3)^0,c
  2194  00351A  ECA5  F006         	call	___flmul	;wreg free
  2195  00351E  C056  F100         	movff	?___flmul,_gfDefault_SOS
  2196  003522  C057  F101         	movff	?___flmul+1,_gfDefault_SOS+1
  2197  003526  C058  F102         	movff	?___flmul+2,_gfDefault_SOS+2
  2198  00352A  C059  F103         	movff	?___flmul+3,_gfDefault_SOS+3
  2199  00352E  0012               	return		;funcret
  2200  003530                     __end_of_InitTankVariables:
  2201                           	callstack 0
  2202                           
  2203 ;; *************** function _pow *****************
  2204 ;; Defined at:
  2205 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\pow.c"
  2206 ;; Parameters:    Size  Location     Type
  2207 ;;  x               4   52[BANK0 ] void 
  2208 ;;  y               4   56[BANK0 ] void 
  2209 ;; Auto vars:     Size  Location     Type
  2210 ;;  yi              4   69[BANK0 ] unsigned long 
  2211 ;;  sign            1   68[BANK0 ] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  4   52[BANK0 ] unsigned char 
  2214 ;; Registers used:
  2215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2221 ;;      Params:         0       8       0       0       0       0       0       0       0
  2222 ;;      Locals:         0      13       0       0       0       0       0       0       0
  2223 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2224 ;;      Totals:         0      21       0       0       0       0       0       0       0
  2225 ;;Total ram usage:       21 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    7
  2228 ;; This function calls:
  2229 ;;		___fleq
  2230 ;;		___flge
  2231 ;;		___flmul
  2232 ;;		___flneg
  2233 ;;		___fltol
  2234 ;;		___xxtofl
  2235 ;;		_exp
  2236 ;;		_log
  2237 ;; This function is called by:
  2238 ;;		_InitTankVariables
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text12
  2243  0021F0                     __ptext12:
  2244                           	callstack 0
  2245  0021F0                     _pow:
  2246                           	callstack 22
  2247  0021F0  0E00               	movlw	0
  2248  0021F2  0100               	movlb	0	; () banked
  2249  0021F4  6FA4               	movwf	pow@sign& (0+255),b
  2250  0021F6                     
  2251                           ; BSR set to: 0
  2252  0021F6  C094  F042         	movff	pow@x,___fleq@ff1
  2253  0021FA  C095  F043         	movff	pow@x+1,___fleq@ff1+1
  2254  0021FE  C096  F044         	movff	pow@x+2,___fleq@ff1+2
  2255  002202  C097  F045         	movff	pow@x+3,___fleq@ff1+3
  2256  002206  0E00               	movlw	0
  2257  002208  6E46               	movwf	___fleq@ff2^0,c
  2258  00220A  0E00               	movlw	0
  2259  00220C  6E47               	movwf	(___fleq@ff2+1)^0,c
  2260  00220E  0E00               	movlw	0
  2261  002210  6E48               	movwf	(___fleq@ff2+2)^0,c
  2262  002212  0E00               	movlw	0
  2263  002214  6E49               	movwf	(___fleq@ff2+3)^0,c
  2264  002216  EC98  F01A         	call	___fleq	;wreg free
  2265  00221A  A0D8               	btfss	status,0,c
  2266  00221C  EF12  F011         	goto	u4181
  2267  002220  EF14  F011         	goto	u4180
  2268  002224                     u4181:
  2269  002224  EF3D  F011         	goto	l4932
  2270  002228                     u4180:
  2271  002228  0E00               	movlw	0
  2272  00222A  6E01               	movwf	___flge@ff1^0,c
  2273  00222C  0E00               	movlw	0
  2274  00222E  6E02               	movwf	(___flge@ff1+1)^0,c
  2275  002230  0E00               	movlw	0
  2276  002232  6E03               	movwf	(___flge@ff1+2)^0,c
  2277  002234  0E00               	movlw	0
  2278  002236  6E04               	movwf	(___flge@ff1+3)^0,c
  2279  002238  C098  F005         	movff	pow@y,___flge@ff2
  2280  00223C  C099  F006         	movff	pow@y+1,___flge@ff2+1
  2281  002240  C09A  F007         	movff	pow@y+2,___flge@ff2+2
  2282  002244  C09B  F008         	movff	pow@y+3,___flge@ff2+3
  2283  002248  EC49  F017         	call	___flge	;wreg free
  2284  00224C  A0D8               	btfss	status,0,c
  2285  00224E  EF2B  F011         	goto	u4191
  2286  002252  EF2D  F011         	goto	u4190
  2287  002256                     u4191:
  2288  002256  EF32  F011         	goto	l1945
  2289  00225A                     u4190:
  2290  00225A  0E00               	movlw	0
  2291  00225C  0100               	movlb	0	; () banked
  2292  00225E  6FCE               	movwf	(_errno+1)& (0+255),b
  2293  002260  0E21               	movlw	33
  2294  002262  6FCD               	movwf	_errno& (0+255),b
  2295  002264                     l1945:
  2296  002264  0E00               	movlw	0
  2297  002266  0100               	movlb	0	; () banked
  2298  002268  6F94               	movwf	?_pow& (0+255),b
  2299  00226A  0E00               	movlw	0
  2300  00226C  6F95               	movwf	(?_pow+1)& (0+255),b
  2301  00226E  0E00               	movlw	0
  2302  002270  6F96               	movwf	(?_pow+2)& (0+255),b
  2303  002272  0E00               	movlw	0
  2304  002274  6F97               	movwf	(?_pow+3)& (0+255),b
  2305  002276  EF27  F012         	goto	l1946
  2306  00227A                     l4932:
  2307  00227A  C098  F042         	movff	pow@y,___fleq@ff1
  2308  00227E  C099  F043         	movff	pow@y+1,___fleq@ff1+1
  2309  002282  C09A  F044         	movff	pow@y+2,___fleq@ff1+2
  2310  002286  C09B  F045         	movff	pow@y+3,___fleq@ff1+3
  2311  00228A  0E00               	movlw	0
  2312  00228C  6E46               	movwf	___fleq@ff2^0,c
  2313  00228E  0E00               	movlw	0
  2314  002290  6E47               	movwf	(___fleq@ff2+1)^0,c
  2315  002292  0E00               	movlw	0
  2316  002294  6E48               	movwf	(___fleq@ff2+2)^0,c
  2317  002296  0E00               	movlw	0
  2318  002298  6E49               	movwf	(___fleq@ff2+3)^0,c
  2319  00229A  EC98  F01A         	call	___fleq	;wreg free
  2320  00229E  A0D8               	btfss	status,0,c
  2321  0022A0  EF54  F011         	goto	u4201
  2322  0022A4  EF56  F011         	goto	u4200
  2323  0022A8                     u4201:
  2324  0022A8  EF61  F011         	goto	l4938
  2325  0022AC                     u4200:
  2326  0022AC  0E00               	movlw	0
  2327  0022AE  0100               	movlb	0	; () banked
  2328  0022B0  6F94               	movwf	?_pow& (0+255),b
  2329  0022B2  0E00               	movlw	0
  2330  0022B4  6F95               	movwf	(?_pow+1)& (0+255),b
  2331  0022B6  0E80               	movlw	128
  2332  0022B8  6F96               	movwf	(?_pow+2)& (0+255),b
  2333  0022BA  0E3F               	movlw	63
  2334  0022BC  6F97               	movwf	(?_pow+3)& (0+255),b
  2335  0022BE  EF27  F012         	goto	l1946
  2336  0022C2                     l4938:
  2337  0022C2  0100               	movlb	0	; () banked
  2338  0022C4  BF97               	btfsc	(pow@x+3)& (0+255),7,b
  2339  0022C6  EF69  F011         	goto	u4210
  2340  0022CA  EF67  F011         	goto	u4211
  2341  0022CE                     u4211:
  2342  0022CE  EFC4  F011         	goto	l4950
  2343  0022D2                     u4210:
  2344  0022D2                     
  2345                           ; BSR set to: 0
  2346  0022D2  C098  F02A         	movff	pow@y,___fltol@f1
  2347  0022D6  C099  F02B         	movff	pow@y+1,___fltol@f1+1
  2348  0022DA  C09A  F02C         	movff	pow@y+2,___fltol@f1+2
  2349  0022DE  C09B  F02D         	movff	pow@y+3,___fltol@f1+3
  2350  0022E2  ECC6  F016         	call	___fltol	;wreg free
  2351  0022E6  C02A  F0A5         	movff	?___fltol,pow@yi
  2352  0022EA  C02B  F0A6         	movff	?___fltol+1,pow@yi+1
  2353  0022EE  C02C  F0A7         	movff	?___fltol+2,pow@yi+2
  2354  0022F2  C02D  F0A8         	movff	?___fltol+3,pow@yi+3
  2355  0022F6  C0A5  F034         	movff	pow@yi,___xxtofl@val
  2356  0022FA  C0A6  F035         	movff	pow@yi+1,___xxtofl@val+1
  2357  0022FE  C0A7  F036         	movff	pow@yi+2,___xxtofl@val+2
  2358  002302  C0A8  F037         	movff	pow@yi+3,___xxtofl@val+3
  2359  002306  0E00               	movlw	0
  2360  002308  EC4C  F013         	call	___xxtofl
  2361  00230C  C034  F042         	movff	?___xxtofl,___fleq@ff1
  2362  002310  C035  F043         	movff	?___xxtofl+1,___fleq@ff1+1
  2363  002314  C036  F044         	movff	?___xxtofl+2,___fleq@ff1+2
  2364  002318  C037  F045         	movff	?___xxtofl+3,___fleq@ff1+3
  2365  00231C  C098  F046         	movff	pow@y,___fleq@ff2
  2366  002320  C099  F047         	movff	pow@y+1,___fleq@ff2+1
  2367  002324  C09A  F048         	movff	pow@y+2,___fleq@ff2+2
  2368  002328  C09B  F049         	movff	pow@y+3,___fleq@ff2+3
  2369  00232C  EC98  F01A         	call	___fleq	;wreg free
  2370  002330  B0D8               	btfsc	status,0,c
  2371  002332  EF9D  F011         	goto	u4221
  2372  002336  EF9F  F011         	goto	u4220
  2373  00233A                     u4221:
  2374  00233A  EFAE  F011         	goto	l4946
  2375  00233E                     u4220:
  2376  00233E  0E00               	movlw	0
  2377  002340  0100               	movlb	0	; () banked
  2378  002342  6FCE               	movwf	(_errno+1)& (0+255),b
  2379  002344  0E21               	movlw	33
  2380  002346  6FCD               	movwf	_errno& (0+255),b
  2381  002348  0E00               	movlw	0
  2382  00234A  6F94               	movwf	?_pow& (0+255),b
  2383  00234C  0E00               	movlw	0
  2384  00234E  6F95               	movwf	(?_pow+1)& (0+255),b
  2385  002350  0E00               	movlw	0
  2386  002352  6F96               	movwf	(?_pow+2)& (0+255),b
  2387  002354  0E00               	movlw	0
  2388  002356  6F97               	movwf	(?_pow+3)& (0+255),b
  2389  002358  EF27  F012         	goto	l1946
  2390  00235C                     l4946:
  2391  00235C  0100               	movlb	0	; () banked
  2392  00235E  51A5               	movf	pow@yi& (0+255),w,b
  2393  002360  0B01               	andlw	1
  2394  002362  6FA4               	movwf	pow@sign& (0+255),b
  2395  002364                     
  2396                           ; BSR set to: 0
  2397  002364  C094  F001         	movff	pow@x,___flneg@f1
  2398  002368  C095  F002         	movff	pow@x+1,___flneg@f1+1
  2399  00236C  C096  F003         	movff	pow@x+2,___flneg@f1+2
  2400  002370  C097  F004         	movff	pow@x+3,___flneg@f1+3
  2401  002374  EC84  F01D         	call	___flneg	;wreg free
  2402  002378  C001  F094         	movff	?___flneg,pow@x
  2403  00237C  C002  F095         	movff	?___flneg+1,pow@x+1
  2404  002380  C003  F096         	movff	?___flneg+2,pow@x+2
  2405  002384  C004  F097         	movff	?___flneg+3,pow@x+3
  2406  002388                     l4950:
  2407  002388  C094  F081         	movff	pow@x,log@x
  2408  00238C  C095  F082         	movff	pow@x+1,log@x+1
  2409  002390  C096  F083         	movff	pow@x+2,log@x+2
  2410  002394  C097  F084         	movff	pow@x+3,log@x+3
  2411  002398  EC26  F014         	call	_log	;wreg free
  2412  00239C  C081  F09C         	movff	?_log,_pow$2930
  2413  0023A0  C082  F09D         	movff	?_log+1,_pow$2930+1
  2414  0023A4  C083  F09E         	movff	?_log+2,_pow$2930+2
  2415  0023A8  C084  F09F         	movff	?_log+3,_pow$2930+3
  2416  0023AC  C09C  F056         	movff	_pow$2930,___flmul@b
  2417  0023B0  C09D  F057         	movff	_pow$2930+1,___flmul@b+1
  2418  0023B4  C09E  F058         	movff	_pow$2930+2,___flmul@b+2
  2419  0023B8  C09F  F059         	movff	_pow$2930+3,___flmul@b+3
  2420  0023BC  C098  F05A         	movff	pow@y,___flmul@a
  2421  0023C0  C099  F05B         	movff	pow@y+1,___flmul@a+1
  2422  0023C4  C09A  F05C         	movff	pow@y+2,___flmul@a+2
  2423  0023C8  C09B  F05D         	movff	pow@y+3,___flmul@a+3
  2424  0023CC  ECA5  F006         	call	___flmul	;wreg free
  2425  0023D0  C056  F0A0         	movff	?___flmul,_pow$2931
  2426  0023D4  C057  F0A1         	movff	?___flmul+1,_pow$2931+1
  2427  0023D8  C058  F0A2         	movff	?___flmul+2,_pow$2931+2
  2428  0023DC  C059  F0A3         	movff	?___flmul+3,_pow$2931+3
  2429  0023E0  C0A0  F089         	movff	_pow$2931,exp@x
  2430  0023E4  C0A1  F08A         	movff	_pow$2931+1,exp@x+1
  2431  0023E8  C0A2  F08B         	movff	_pow$2931+2,exp@x+2
  2432  0023EC  C0A3  F08C         	movff	_pow$2931+3,exp@x+3
  2433  0023F0  EC84  F00F         	call	_exp	;wreg free
  2434  0023F4  C089  F094         	movff	?_exp,pow@x
  2435  0023F8  C08A  F095         	movff	?_exp+1,pow@x+1
  2436  0023FC  C08B  F096         	movff	?_exp+2,pow@x+2
  2437  002400  C08C  F097         	movff	?_exp+3,pow@x+3
  2438  002404  0100               	movlb	0	; () banked
  2439  002406  51A4               	movf	pow@sign& (0+255),w,b
  2440  002408  B4D8               	btfsc	status,2,c
  2441  00240A  EF09  F012         	goto	u4231
  2442  00240E  EF0B  F012         	goto	u4230
  2443  002412                     u4231:
  2444  002412  EF1F  F012         	goto	l1950
  2445  002416                     u4230:
  2446  002416                     
  2447                           ; BSR set to: 0
  2448  002416  C094  F001         	movff	pow@x,___flneg@f1
  2449  00241A  C095  F002         	movff	pow@x+1,___flneg@f1+1
  2450  00241E  C096  F003         	movff	pow@x+2,___flneg@f1+2
  2451  002422  C097  F004         	movff	pow@x+3,___flneg@f1+3
  2452  002426  EC84  F01D         	call	___flneg	;wreg free
  2453  00242A  C001  F094         	movff	?___flneg,?_pow
  2454  00242E  C002  F095         	movff	?___flneg+1,?_pow+1
  2455  002432  C003  F096         	movff	?___flneg+2,?_pow+2
  2456  002436  C004  F097         	movff	?___flneg+3,?_pow+3
  2457  00243A  EF27  F012         	goto	l1946
  2458  00243E                     l1950:
  2459                           
  2460                           ; BSR set to: 0
  2461  00243E  C094  F094         	movff	pow@x,?_pow
  2462  002442  C095  F095         	movff	pow@x+1,?_pow+1
  2463  002446  C096  F096         	movff	pow@x+2,?_pow+2
  2464  00244A  C097  F097         	movff	pow@x+3,?_pow+3
  2465  00244E                     l1946:
  2466  00244E  0012               	return		;funcret
  2467  002450                     __end_of_pow:
  2468                           	callstack 0
  2469                           
  2470 ;; *************** function _exp *****************
  2471 ;; Defined at:
  2472 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\exp.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  x               4   41[BANK0 ] unsigned char 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;  exponent        2   49[BANK0 ] int 
  2477 ;;  sign            1   51[BANK0 ] unsigned char 
  2478 ;; Return value:  Size  Location     Type
  2479 ;;                  4   41[BANK0 ] unsigned char 
  2480 ;; Registers used:
  2481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2482 ;; Tracked objects:
  2483 ;;		On entry : 0/0
  2484 ;;		On exit  : 0/0
  2485 ;;		Unchanged: 0/0
  2486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2487 ;;      Params:         0       4       0       0       0       0       0       0       0
  2488 ;;      Locals:         0       7       0       0       0       0       0       0       0
  2489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2490 ;;      Totals:         0      11       0       0       0       0       0       0       0
  2491 ;;Total ram usage:       11 bytes
  2492 ;; Hardware stack levels used:    1
  2493 ;; Hardware stack levels required when called:    6
  2494 ;; This function calls:
  2495 ;;		___fldiv
  2496 ;;		___fleq
  2497 ;;		___flge
  2498 ;;		___flmul
  2499 ;;		___flneg
  2500 ;;		___flsub
  2501 ;;		___fltol
  2502 ;;		___xxtofl
  2503 ;;		_eval_poly
  2504 ;;		_floor
  2505 ;;		_ldexp
  2506 ;; This function is called by:
  2507 ;;		_pow
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text13
  2512  001F08                     __ptext13:
  2513                           	callstack 0
  2514  001F08                     _exp:
  2515                           	callstack 22
  2516  001F08  C089  F042         	movff	exp@x,___fleq@ff1
  2517  001F0C  C08A  F043         	movff	exp@x+1,___fleq@ff1+1
  2518  001F10  C08B  F044         	movff	exp@x+2,___fleq@ff1+2
  2519  001F14  C08C  F045         	movff	exp@x+3,___fleq@ff1+3
  2520  001F18  0E00               	movlw	0
  2521  001F1A  6E46               	movwf	___fleq@ff2^0,c
  2522  001F1C  0E00               	movlw	0
  2523  001F1E  6E47               	movwf	(___fleq@ff2+1)^0,c
  2524  001F20  0E00               	movlw	0
  2525  001F22  6E48               	movwf	(___fleq@ff2+2)^0,c
  2526  001F24  0E00               	movlw	0
  2527  001F26  6E49               	movwf	(___fleq@ff2+3)^0,c
  2528  001F28  EC98  F01A         	call	___fleq	;wreg free
  2529  001F2C  A0D8               	btfss	status,0,c
  2530  001F2E  EF9B  F00F         	goto	u3971
  2531  001F32  EF9D  F00F         	goto	u3970
  2532  001F36                     u3971:
  2533  001F36  EFA8  F00F         	goto	l4698
  2534  001F3A                     u3970:
  2535  001F3A  0E00               	movlw	0
  2536  001F3C  0100               	movlb	0	; () banked
  2537  001F3E  6F89               	movwf	?_exp& (0+255),b
  2538  001F40  0E00               	movlw	0
  2539  001F42  6F8A               	movwf	(?_exp+1)& (0+255),b
  2540  001F44  0E80               	movlw	128
  2541  001F46  6F8B               	movwf	(?_exp+2)& (0+255),b
  2542  001F48  0E3F               	movlw	63
  2543  001F4A  6F8C               	movwf	(?_exp+3)& (0+255),b
  2544  001F4C  EFF7  F010         	goto	l1964
  2545  001F50                     l4698:
  2546  001F50  0E18               	movlw	24
  2547  001F52  6E01               	movwf	___flge@ff1^0,c
  2548  001F54  0E72               	movlw	114
  2549  001F56  6E02               	movwf	(___flge@ff1+1)^0,c
  2550  001F58  0E31               	movlw	49
  2551  001F5A  6E03               	movwf	(___flge@ff1+2)^0,c
  2552  001F5C  0E44               	movlw	68
  2553  001F5E  6E04               	movwf	(___flge@ff1+3)^0,c
  2554  001F60  C089  F005         	movff	exp@x,___flge@ff2
  2555  001F64  C08A  F006         	movff	exp@x+1,___flge@ff2+1
  2556  001F68  C08B  F007         	movff	exp@x+2,___flge@ff2+2
  2557  001F6C  C08C  F008         	movff	exp@x+3,___flge@ff2+3
  2558  001F70  EC49  F017         	call	___flge	;wreg free
  2559  001F74  B0D8               	btfsc	status,0,c
  2560  001F76  EFBF  F00F         	goto	u3981
  2561  001F7A  EFC1  F00F         	goto	u3980
  2562  001F7E                     u3981:
  2563  001F7E  EFD0  F00F         	goto	l4704
  2564  001F82                     u3980:
  2565  001F82  0E00               	movlw	0
  2566  001F84  0100               	movlb	0	; () banked
  2567  001F86  6FCE               	movwf	(_errno+1)& (0+255),b
  2568  001F88  0E22               	movlw	34
  2569  001F8A  6FCD               	movwf	_errno& (0+255),b
  2570  001F8C  0EFF               	movlw	255
  2571  001F8E  6F89               	movwf	?_exp& (0+255),b
  2572  001F90  0EFF               	movlw	255
  2573  001F92  6F8A               	movwf	(?_exp+1)& (0+255),b
  2574  001F94  0E7F               	movlw	127
  2575  001F96  6F8B               	movwf	(?_exp+2)& (0+255),b
  2576  001F98  0E7F               	movlw	127
  2577  001F9A  6F8C               	movwf	(?_exp+3)& (0+255),b
  2578  001F9C  EFF7  F010         	goto	l1964
  2579  001FA0                     l4704:
  2580  001FA0  C089  F001         	movff	exp@x,___flge@ff1
  2581  001FA4  C08A  F002         	movff	exp@x+1,___flge@ff1+1
  2582  001FA8  C08B  F003         	movff	exp@x+2,___flge@ff1+2
  2583  001FAC  C08C  F004         	movff	exp@x+3,___flge@ff1+3
  2584  001FB0  0E87               	movlw	135
  2585  001FB2  6E05               	movwf	___flge@ff2^0,c
  2586  001FB4  0E48               	movlw	72
  2587  001FB6  6E06               	movwf	(___flge@ff2+1)^0,c
  2588  001FB8  0E3A               	movlw	58
  2589  001FBA  6E07               	movwf	(___flge@ff2+2)^0,c
  2590  001FBC  0EC4               	movlw	196
  2591  001FBE  6E08               	movwf	(___flge@ff2+3)^0,c
  2592  001FC0  EC49  F017         	call	___flge	;wreg free
  2593  001FC4  B0D8               	btfsc	status,0,c
  2594  001FC6  EFE7  F00F         	goto	u3991
  2595  001FCA  EFE9  F00F         	goto	u3990
  2596  001FCE                     u3991:
  2597  001FCE  EFF8  F00F         	goto	l4710
  2598  001FD2                     u3990:
  2599  001FD2  0E00               	movlw	0
  2600  001FD4  0100               	movlb	0	; () banked
  2601  001FD6  6FCE               	movwf	(_errno+1)& (0+255),b
  2602  001FD8  0E22               	movlw	34
  2603  001FDA  6FCD               	movwf	_errno& (0+255),b
  2604  001FDC  0E00               	movlw	0
  2605  001FDE  6F89               	movwf	?_exp& (0+255),b
  2606  001FE0  0E00               	movlw	0
  2607  001FE2  6F8A               	movwf	(?_exp+1)& (0+255),b
  2608  001FE4  0E00               	movlw	0
  2609  001FE6  6F8B               	movwf	(?_exp+2)& (0+255),b
  2610  001FE8  0E00               	movlw	0
  2611  001FEA  6F8C               	movwf	(?_exp+3)& (0+255),b
  2612  001FEC  EFF7  F010         	goto	l1964
  2613  001FF0                     l4710:
  2614  001FF0  0100               	movlb	0	; () banked
  2615  001FF2  BF8C               	btfsc	(exp@x+3)& (0+255),7,b
  2616  001FF4  EFFE  F00F         	goto	u4001
  2617  001FF8  EF01  F010         	goto	u4000
  2618  001FFC                     u4001:
  2619  001FFC  0E01               	movlw	1
  2620  001FFE  EF02  F010         	goto	u4010
  2621  002002                     u4000:
  2622  002002  0E00               	movlw	0
  2623  002004                     u4010:
  2624  002004  6F93               	movwf	exp@sign& (0+255),b
  2625  002006                     
  2626                           ; BSR set to: 0
  2627  002006  5193               	movf	exp@sign& (0+255),w,b
  2628  002008  B4D8               	btfsc	status,2,c
  2629  00200A  EF09  F010         	goto	u4021
  2630  00200E  EF0B  F010         	goto	u4020
  2631  002012                     u4021:
  2632  002012  EF1D  F010         	goto	l4716
  2633  002016                     u4020:
  2634  002016                     
  2635                           ; BSR set to: 0
  2636  002016  C089  F001         	movff	exp@x,___flneg@f1
  2637  00201A  C08A  F002         	movff	exp@x+1,___flneg@f1+1
  2638  00201E  C08B  F003         	movff	exp@x+2,___flneg@f1+2
  2639  002022  C08C  F004         	movff	exp@x+3,___flneg@f1+3
  2640  002026  EC84  F01D         	call	___flneg	;wreg free
  2641  00202A  C001  F089         	movff	?___flneg,exp@x
  2642  00202E  C002  F08A         	movff	?___flneg+1,exp@x+1
  2643  002032  C003  F08B         	movff	?___flneg+2,exp@x+2
  2644  002036  C004  F08C         	movff	?___flneg+3,exp@x+3
  2645  00203A                     l4716:
  2646  00203A  C089  F056         	movff	exp@x,___flmul@b
  2647  00203E  C08A  F057         	movff	exp@x+1,___flmul@b+1
  2648  002042  C08B  F058         	movff	exp@x+2,___flmul@b+2
  2649  002046  C08C  F059         	movff	exp@x+3,___flmul@b+3
  2650  00204A  0E3B               	movlw	59
  2651  00204C  6E5A               	movwf	___flmul@a^0,c
  2652  00204E  0EAA               	movlw	170
  2653  002050  6E5B               	movwf	(___flmul@a+1)^0,c
  2654  002052  0EB8               	movlw	184
  2655  002054  6E5C               	movwf	(___flmul@a+2)^0,c
  2656  002056  0E3F               	movlw	63
  2657  002058  6E5D               	movwf	(___flmul@a+3)^0,c
  2658  00205A  ECA5  F006         	call	___flmul	;wreg free
  2659  00205E  C056  F089         	movff	?___flmul,exp@x
  2660  002062  C057  F08A         	movff	?___flmul+1,exp@x+1
  2661  002066  C058  F08B         	movff	?___flmul+2,exp@x+2
  2662  00206A  C059  F08C         	movff	?___flmul+3,exp@x+3
  2663  00206E  C089  F056         	movff	exp@x,floor@x
  2664  002072  C08A  F057         	movff	exp@x+1,floor@x+1
  2665  002076  C08B  F058         	movff	exp@x+2,floor@x+2
  2666  00207A  C08C  F059         	movff	exp@x+3,floor@x+3
  2667  00207E  ECF5  F014         	call	_floor	;wreg free
  2668  002082  C056  F08D         	movff	?_floor,_exp$2932
  2669  002086  C057  F08E         	movff	?_floor+1,_exp$2932+1
  2670  00208A  C058  F08F         	movff	?_floor+2,_exp$2932+2
  2671  00208E  C059  F090         	movff	?_floor+3,_exp$2932+3
  2672  002092  C08D  F02A         	movff	_exp$2932,___fltol@f1
  2673  002096  C08E  F02B         	movff	_exp$2932+1,___fltol@f1+1
  2674  00209A  C08F  F02C         	movff	_exp$2932+2,___fltol@f1+2
  2675  00209E  C090  F02D         	movff	_exp$2932+3,___fltol@f1+3
  2676  0020A2  ECC6  F016         	call	___fltol	;wreg free
  2677  0020A6  C02A  F091         	movff	?___fltol,exp@exponent
  2678  0020AA  C02B  F092         	movff	?___fltol+1,exp@exponent+1
  2679  0020AE  C089  F066         	movff	exp@x,___flsub@b
  2680  0020B2  C08A  F067         	movff	exp@x+1,___flsub@b+1
  2681  0020B6  C08B  F068         	movff	exp@x+2,___flsub@b+2
  2682  0020BA  C08C  F069         	movff	exp@x+3,___flsub@b+3
  2683  0020BE  C091  F034         	movff	exp@exponent,___xxtofl@val
  2684  0020C2  C092  F035         	movff	exp@exponent+1,___xxtofl@val+1
  2685  0020C6  0E00               	movlw	0
  2686  0020C8  BE35               	btfsc	(___xxtofl@val+1)^0,7,c
  2687  0020CA  0EFF               	movlw	-1
  2688  0020CC  6E36               	movwf	(___xxtofl@val+2)^0,c
  2689  0020CE  6E37               	movwf	(___xxtofl@val+3)^0,c
  2690  0020D0  0E01               	movlw	1
  2691  0020D2  EC4C  F013         	call	___xxtofl
  2692  0020D6  C034  F06A         	movff	?___xxtofl,___flsub@a
  2693  0020DA  C035  F06B         	movff	?___xxtofl+1,___flsub@a+1
  2694  0020DE  C036  F06C         	movff	?___xxtofl+2,___flsub@a+2
  2695  0020E2  C037  F06D         	movff	?___xxtofl+3,___flsub@a+3
  2696  0020E6  EC43  F01D         	call	___flsub	;wreg free
  2697  0020EA  C066  F089         	movff	?___flsub,exp@x
  2698  0020EE  C067  F08A         	movff	?___flsub+1,exp@x+1
  2699  0020F2  C068  F08B         	movff	?___flsub+2,exp@x+2
  2700  0020F6  C069  F08C         	movff	?___flsub+3,exp@x+3
  2701  0020FA  C089  F071         	movff	exp@x,eval_poly@x
  2702  0020FE  C08A  F072         	movff	exp@x+1,eval_poly@x+1
  2703  002102  C08B  F073         	movff	exp@x+2,eval_poly@x+2
  2704  002106  C08C  F074         	movff	exp@x+3,eval_poly@x+3
  2705  00210A  0E0B               	movlw	low exp@coeff
  2706  00210C  0100               	movlb	0	; () banked
  2707  00210E  6F75               	movwf	eval_poly@d& (0+255),b
  2708  002110  0E08               	movlw	high exp@coeff
  2709  002112  6F76               	movwf	(eval_poly@d+1)& (0+255),b
  2710  002114  0E00               	movlw	0
  2711  002116  6F78               	movwf	(eval_poly@n+1)& (0+255),b
  2712  002118  0E09               	movlw	9
  2713  00211A  6F77               	movwf	eval_poly@n& (0+255),b
  2714  00211C  ECCB  F017         	call	_eval_poly	;wreg free
  2715  002120  C071  F081         	movff	?_eval_poly,ldexp@value
  2716  002124  C072  F082         	movff	?_eval_poly+1,ldexp@value+1
  2717  002128  C073  F083         	movff	?_eval_poly+2,ldexp@value+2
  2718  00212C  C074  F084         	movff	?_eval_poly+3,ldexp@value+3
  2719  002130  C091  F085         	movff	exp@exponent,ldexp@newexp
  2720  002134  C092  F086         	movff	exp@exponent+1,ldexp@newexp+1
  2721  002138  EC96  F015         	call	_ldexp	;wreg free
  2722  00213C  C081  F089         	movff	?_ldexp,exp@x
  2723  002140  C082  F08A         	movff	?_ldexp+1,exp@x+1
  2724  002144  C083  F08B         	movff	?_ldexp+2,exp@x+2
  2725  002148  C084  F08C         	movff	?_ldexp+3,exp@x+3
  2726  00214C  0100               	movlb	0	; () banked
  2727  00214E  5193               	movf	exp@sign& (0+255),w,b
  2728  002150  B4D8               	btfsc	status,2,c
  2729  002152  EFAD  F010         	goto	u4031
  2730  002156  EFAF  F010         	goto	u4030
  2731  00215A                     u4031:
  2732  00215A  EFEF  F010         	goto	l1968
  2733  00215E                     u4030:
  2734  00215E                     
  2735                           ; BSR set to: 0
  2736  00215E  C089  F042         	movff	exp@x,___fleq@ff1
  2737  002162  C08A  F043         	movff	exp@x+1,___fleq@ff1+1
  2738  002166  C08B  F044         	movff	exp@x+2,___fleq@ff1+2
  2739  00216A  C08C  F045         	movff	exp@x+3,___fleq@ff1+3
  2740  00216E  0EFF               	movlw	255
  2741  002170  6E46               	movwf	___fleq@ff2^0,c
  2742  002172  0EFF               	movlw	255
  2743  002174  6E47               	movwf	(___fleq@ff2+1)^0,c
  2744  002176  0E7F               	movlw	127
  2745  002178  6E48               	movwf	(___fleq@ff2+2)^0,c
  2746  00217A  0E7F               	movlw	127
  2747  00217C  6E49               	movwf	(___fleq@ff2+3)^0,c
  2748  00217E  EC98  F01A         	call	___fleq	;wreg free
  2749  002182  A0D8               	btfss	status,0,c
  2750  002184  EFC6  F010         	goto	u4041
  2751  002188  EFC8  F010         	goto	u4040
  2752  00218C                     u4041:
  2753  00218C  EFD3  F010         	goto	l4734
  2754  002190                     u4040:
  2755  002190  0E00               	movlw	0
  2756  002192  0100               	movlb	0	; () banked
  2757  002194  6F89               	movwf	?_exp& (0+255),b
  2758  002196  0E00               	movlw	0
  2759  002198  6F8A               	movwf	(?_exp+1)& (0+255),b
  2760  00219A  0E00               	movlw	0
  2761  00219C  6F8B               	movwf	(?_exp+2)& (0+255),b
  2762  00219E  0E00               	movlw	0
  2763  0021A0  6F8C               	movwf	(?_exp+3)& (0+255),b
  2764  0021A2  EFF7  F010         	goto	l1964
  2765  0021A6                     l4734:
  2766  0021A6  0E00               	movlw	0
  2767  0021A8  6E01               	movwf	___fldiv@b^0,c
  2768  0021AA  0E00               	movlw	0
  2769  0021AC  6E02               	movwf	(___fldiv@b+1)^0,c
  2770  0021AE  0E80               	movlw	128
  2771  0021B0  6E03               	movwf	(___fldiv@b+2)^0,c
  2772  0021B2  0E3F               	movlw	63
  2773  0021B4  6E04               	movwf	(___fldiv@b+3)^0,c
  2774  0021B6  C089  F005         	movff	exp@x,___fldiv@a
  2775  0021BA  C08A  F006         	movff	exp@x+1,___fldiv@a+1
  2776  0021BE  C08B  F007         	movff	exp@x+2,___fldiv@a+2
  2777  0021C2  C08C  F008         	movff	exp@x+3,___fldiv@a+3
  2778  0021C6  EC9B  F00A         	call	___fldiv	;wreg free
  2779  0021CA  C001  F089         	movff	?___fldiv,?_exp
  2780  0021CE  C002  F08A         	movff	?___fldiv+1,?_exp+1
  2781  0021D2  C003  F08B         	movff	?___fldiv+2,?_exp+2
  2782  0021D6  C004  F08C         	movff	?___fldiv+3,?_exp+3
  2783  0021DA  EFF7  F010         	goto	l1964
  2784  0021DE                     l1968:
  2785                           
  2786                           ; BSR set to: 0
  2787  0021DE  C089  F089         	movff	exp@x,?_exp
  2788  0021E2  C08A  F08A         	movff	exp@x+1,?_exp+1
  2789  0021E6  C08B  F08B         	movff	exp@x+2,?_exp+2
  2790  0021EA  C08C  F08C         	movff	exp@x+3,?_exp+3
  2791  0021EE                     l1964:
  2792  0021EE  0012               	return		;funcret
  2793  0021F0                     __end_of_exp:
  2794                           	callstack 0
  2795                           
  2796 ;; *************** function _ldexp *****************
  2797 ;; Defined at:
  2798 ;;		line 277 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\frexp.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  value           4   33[BANK0 ] unsigned char 
  2801 ;;  newexp          2   37[BANK0 ] int 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;		None
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  4   33[BANK0 ] int 
  2806 ;; Registers used:
  2807 ;;		wreg, status,2, status,0, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2813 ;;      Params:         0       6       0       0       0       0       0       0       0
  2814 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2815 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2816 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2817 ;;Total ram usage:        8 bytes
  2818 ;; Hardware stack levels used:    1
  2819 ;; Hardware stack levels required when called:    4
  2820 ;; This function calls:
  2821 ;;		___fleq
  2822 ;; This function is called by:
  2823 ;;		_exp
  2824 ;; This function uses a non-reentrant model
  2825 ;;
  2826                           
  2827                           	psect	text14
  2828  002B2C                     __ptext14:
  2829                           	callstack 0
  2830  002B2C                     _ldexp:
  2831                           	callstack 23
  2832  002B2C  C081  F042         	movff	ldexp@value,___fleq@ff1
  2833  002B30  C082  F043         	movff	ldexp@value+1,___fleq@ff1+1
  2834  002B34  C083  F044         	movff	ldexp@value+2,___fleq@ff1+2
  2835  002B38  C084  F045         	movff	ldexp@value+3,___fleq@ff1+3
  2836  002B3C  0E00               	movlw	0
  2837  002B3E  6E46               	movwf	___fleq@ff2^0,c
  2838  002B40  0E00               	movlw	0
  2839  002B42  6E47               	movwf	(___fleq@ff2+1)^0,c
  2840  002B44  0E00               	movlw	0
  2841  002B46  6E48               	movwf	(___fleq@ff2+2)^0,c
  2842  002B48  0E00               	movlw	0
  2843  002B4A  6E49               	movwf	(___fleq@ff2+3)^0,c
  2844  002B4C  EC98  F01A         	call	___fleq	;wreg free
  2845  002B50  A0D8               	btfss	status,0,c
  2846  002B52  EFAD  F015         	goto	u3631
  2847  002B56  EFAF  F015         	goto	u3630
  2848  002B5A                     u3631:
  2849  002B5A  EFBA  F015         	goto	l4456
  2850  002B5E                     u3630:
  2851  002B5E  0E00               	movlw	0
  2852  002B60  0100               	movlb	0	; () banked
  2853  002B62  6F81               	movwf	?_ldexp& (0+255),b
  2854  002B64  0E00               	movlw	0
  2855  002B66  6F82               	movwf	(?_ldexp+1)& (0+255),b
  2856  002B68  0E00               	movlw	0
  2857  002B6A  6F83               	movwf	(?_ldexp+2)& (0+255),b
  2858  002B6C  0E00               	movlw	0
  2859  002B6E  6F84               	movwf	(?_ldexp+3)& (0+255),b
  2860  002B70  EF31  F016         	goto	l1929
  2861  002B74                     l4456:
  2862  002B74  0100               	movlb	0	; () banked
  2863  002B76  5184               	movf	(ldexp@value+3)& (0+255),w,b
  2864  002B78  0B7F               	andlw	127
  2865  002B7A  6F87               	movwf	??_ldexp& (0+255),b
  2866  002B7C  6B88               	clrf	(??_ldexp+1)& (0+255),b
  2867  002B7E  90D8               	bcf	status,0,c
  2868  002B80  3787               	rlcf	??_ldexp& (0+255),f,b
  2869  002B82  3788               	rlcf	(??_ldexp+1)& (0+255),f,b
  2870  002B84  5187               	movf	??_ldexp& (0+255),w,b
  2871  002B86  2785               	addwf	ldexp@newexp& (0+255),f,b
  2872  002B88  5188               	movf	(??_ldexp+1)& (0+255),w,b
  2873  002B8A  2386               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  2874  002B8C  BF83               	btfsc	(ldexp@value+2)& (0+255),7,b
  2875  002B8E  EFCB  F015         	goto	u3641
  2876  002B92  EFCF  F015         	goto	u3640
  2877  002B96                     u3641:
  2878  002B96  6B87               	clrf	??_ldexp& (0+255),b
  2879  002B98  2B87               	incf	??_ldexp& (0+255),f,b
  2880  002B9A  EFD1  F015         	goto	u3648
  2881  002B9E                     u3640:
  2882  002B9E  0100               	movlb	0	; () banked
  2883  002BA0  6B87               	clrf	??_ldexp& (0+255),b
  2884  002BA2                     u3648:
  2885  002BA2  5187               	movf	??_ldexp& (0+255),w,b
  2886  002BA4  2785               	addwf	ldexp@newexp& (0+255),f,b
  2887  002BA6  0E00               	movlw	0
  2888  002BA8  2386               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  2889  002BAA  BF86               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  2890  002BAC  EFDC  F015         	goto	u3650
  2891  002BB0  EFDA  F015         	goto	u3651
  2892  002BB4                     u3651:
  2893  002BB4  EFEA  F015         	goto	l4464
  2894  002BB8                     u3650:
  2895  002BB8                     
  2896                           ; BSR set to: 0
  2897  002BB8  0E00               	movlw	0
  2898  002BBA  6FCE               	movwf	(_errno+1)& (0+255),b
  2899  002BBC  0E22               	movlw	34
  2900  002BBE  6FCD               	movwf	_errno& (0+255),b
  2901  002BC0  0E00               	movlw	0
  2902  002BC2  6F81               	movwf	?_ldexp& (0+255),b
  2903  002BC4  0E00               	movlw	0
  2904  002BC6  6F82               	movwf	(?_ldexp+1)& (0+255),b
  2905  002BC8  0E00               	movlw	0
  2906  002BCA  6F83               	movwf	(?_ldexp+2)& (0+255),b
  2907  002BCC  0E00               	movlw	0
  2908  002BCE  6F84               	movwf	(?_ldexp+3)& (0+255),b
  2909  002BD0  EF31  F016         	goto	l1929
  2910  002BD4                     l4464:
  2911                           
  2912                           ; BSR set to: 0
  2913  002BD4  BF86               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  2914  002BD6  EFF3  F015         	goto	u3661
  2915  002BDA  0586               	decf	(ldexp@newexp+1)& (0+255),w,b
  2916  002BDC  A0D8               	btfss	status,0,c
  2917  002BDE  EFF3  F015         	goto	u3661
  2918  002BE2  EFF5  F015         	goto	u3660
  2919  002BE6                     u3661:
  2920  002BE6  EF14  F016         	goto	l4480
  2921  002BEA                     u3660:
  2922  002BEA                     
  2923                           ; BSR set to: 0
  2924  002BEA  0E00               	movlw	0
  2925  002BEC  6FCE               	movwf	(_errno+1)& (0+255),b
  2926  002BEE  0E22               	movlw	34
  2927  002BF0  6FCD               	movwf	_errno& (0+255),b
  2928  002BF2                     
  2929                           ; BSR set to: 0
  2930  002BF2  BF84               	btfsc	(ldexp@value+3)& (0+255),7,b
  2931  002BF4  EF00  F016         	goto	u3670
  2932  002BF8  EFFE  F015         	goto	u3671
  2933  002BFC                     u3671:
  2934  002BFC  EF0A  F016         	goto	l4476
  2935  002C00                     u3670:
  2936  002C00                     
  2937                           ; BSR set to: 0
  2938  002C00  0EFF               	movlw	255
  2939  002C02  6F81               	movwf	?_ldexp& (0+255),b
  2940  002C04  0EFF               	movlw	255
  2941  002C06  6F82               	movwf	(?_ldexp+1)& (0+255),b
  2942  002C08  0E7F               	movlw	127
  2943  002C0A  6F83               	movwf	(?_ldexp+2)& (0+255),b
  2944  002C0C  0EFF               	movlw	255
  2945  002C0E  6F84               	movwf	(?_ldexp+3)& (0+255),b
  2946  002C10  EF31  F016         	goto	l1929
  2947  002C14                     l4476:
  2948                           
  2949                           ; BSR set to: 0
  2950  002C14  0EFF               	movlw	255
  2951  002C16  6F81               	movwf	?_ldexp& (0+255),b
  2952  002C18  0EFF               	movlw	255
  2953  002C1A  6F82               	movwf	(?_ldexp+1)& (0+255),b
  2954  002C1C  0E7F               	movlw	127
  2955  002C1E  6F83               	movwf	(?_ldexp+2)& (0+255),b
  2956  002C20  0E7F               	movlw	127
  2957  002C22  6F84               	movwf	(?_ldexp+3)& (0+255),b
  2958  002C24  EF31  F016         	goto	l1929
  2959  002C28                     l4480:
  2960                           
  2961                           ; BSR set to: 0
  2962  002C28  3586               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  2963  002C2A  3186               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  2964  002C2C  6F88               	movwf	(??_ldexp+1)& (0+255),b
  2965  002C2E  3185               	rrcf	ldexp@newexp& (0+255),w,b
  2966  002C30  6F87               	movwf	??_ldexp& (0+255),b
  2967  002C32  5184               	movf	(ldexp@value+3)& (0+255),w,b
  2968  002C34  1987               	xorwf	??_ldexp& (0+255),w,b
  2969  002C36  0B80               	andlw	-128
  2970  002C38  1987               	xorwf	??_ldexp& (0+255),w,b
  2971  002C3A  6F84               	movwf	(ldexp@value+3)& (0+255),b
  2972  002C3C  C085  F087         	movff	ldexp@newexp,??_ldexp
  2973  002C40  0E01               	movlw	1
  2974  002C42  1787               	andwf	??_ldexp& (0+255),f,b
  2975  002C44  3387               	rrcf	??_ldexp& (0+255),f,b
  2976  002C46  3387               	rrcf	??_ldexp& (0+255),f,b
  2977  002C48  5183               	movf	(ldexp@value+2)& (0+255),w,b
  2978  002C4A  1987               	xorwf	??_ldexp& (0+255),w,b
  2979  002C4C  0B7F               	andlw	-129
  2980  002C4E  1987               	xorwf	??_ldexp& (0+255),w,b
  2981  002C50  6F83               	movwf	(ldexp@value+2)& (0+255),b
  2982  002C52                     
  2983                           ; BSR set to: 0
  2984  002C52  C081  F081         	movff	ldexp@value,?_ldexp
  2985  002C56  C082  F082         	movff	ldexp@value+1,?_ldexp+1
  2986  002C5A  C083  F083         	movff	ldexp@value+2,?_ldexp+2
  2987  002C5E  C084  F084         	movff	ldexp@value+3,?_ldexp+3
  2988  002C62                     l1929:
  2989                           
  2990                           ; BSR set to: 0
  2991  002C62  0012               	return		;funcret
  2992  002C64                     __end_of_ldexp:
  2993                           	callstack 0
  2994                           
  2995 ;; *************** function _floor *****************
  2996 ;; Defined at:
  2997 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\floor.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;  x               4   85[COMRAM] int 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  i               4    0[BANK0 ] int 
  3002 ;;  expon           2    4[BANK0 ] int 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  4   85[COMRAM] int 
  3005 ;; Registers used:
  3006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3012 ;;      Params:         4       0       0       0       0       0       0       0       0
  3013 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3015 ;;      Totals:         4       6       0       0       0       0       0       0       0
  3016 ;;Total ram usage:       10 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:    5
  3019 ;; This function calls:
  3020 ;;		___fladd
  3021 ;;		___flge
  3022 ;;		___fltol
  3023 ;;		___xxtofl
  3024 ;;		_frexp
  3025 ;; This function is called by:
  3026 ;;		_exp
  3027 ;; This function uses a non-reentrant model
  3028 ;;
  3029                           
  3030                           	psect	text15
  3031  0029EA                     __ptext15:
  3032                           	callstack 0
  3033  0029EA                     _floor:
  3034                           	callstack 22
  3035  0029EA  C056  F04E         	movff	floor@x,frexp@value
  3036  0029EE  C057  F04F         	movff	floor@x+1,frexp@value+1
  3037  0029F2  C058  F050         	movff	floor@x+2,frexp@value+2
  3038  0029F6  C059  F051         	movff	floor@x+3,frexp@value+3
  3039  0029FA  0E64               	movlw	low floor@expon
  3040  0029FC  6E52               	movwf	frexp@eptr^0,c
  3041  0029FE  0E00               	movlw	high floor@expon
  3042  002A00  6E53               	movwf	(frexp@eptr+1)^0,c
  3043  002A02  EC23  F019         	call	_frexp	;wreg free
  3044  002A06  0100               	movlb	0	; () banked
  3045  002A08  BF65               	btfsc	(floor@expon+1)& (0+255),7,b
  3046  002A0A  EF0B  F015         	goto	u3680
  3047  002A0E  EF09  F015         	goto	u3681
  3048  002A12                     u3681:
  3049  002A12  EF26  F015         	goto	l4500
  3050  002A16                     u3680:
  3051  002A16                     
  3052                           ; BSR set to: 0
  3053  002A16  BE59               	btfsc	(floor@x+3)^0,7,c
  3054  002A18  EF12  F015         	goto	u3690
  3055  002A1C  EF10  F015         	goto	u3691
  3056  002A20                     u3691:
  3057  002A20  EF1C  F015         	goto	l4496
  3058  002A24                     u3690:
  3059  002A24                     
  3060                           ; BSR set to: 0
  3061  002A24  0E00               	movlw	0
  3062  002A26  6E56               	movwf	?_floor^0,c
  3063  002A28  0E00               	movlw	0
  3064  002A2A  6E57               	movwf	(?_floor+1)^0,c
  3065  002A2C  0E80               	movlw	128
  3066  002A2E  6E58               	movwf	(?_floor+2)^0,c
  3067  002A30  0EBF               	movlw	191
  3068  002A32  6E59               	movwf	(?_floor+3)^0,c
  3069  002A34  EF95  F015         	goto	l1976
  3070  002A38                     l4496:
  3071                           
  3072                           ; BSR set to: 0
  3073  002A38  0E00               	movlw	0
  3074  002A3A  6E56               	movwf	?_floor^0,c
  3075  002A3C  0E00               	movlw	0
  3076  002A3E  6E57               	movwf	(?_floor+1)^0,c
  3077  002A40  0E00               	movlw	0
  3078  002A42  6E58               	movwf	(?_floor+2)^0,c
  3079  002A44  0E00               	movlw	0
  3080  002A46  6E59               	movwf	(?_floor+3)^0,c
  3081  002A48  EF95  F015         	goto	l1976
  3082  002A4C                     l4500:
  3083                           
  3084                           ; BSR set to: 0
  3085  002A4C  5165               	movf	(floor@expon+1)& (0+255),w,b
  3086  002A4E  E109               	bnz	u3700
  3087  002A50  0E1D               	movlw	29
  3088  002A52  5D64               	subwf	floor@expon& (0+255),w,b
  3089  002A54  A0D8               	btfss	status,0,c
  3090  002A56  EF2F  F015         	goto	u3701
  3091  002A5A  EF31  F015         	goto	u3700
  3092  002A5E                     u3701:
  3093  002A5E  EF3B  F015         	goto	l4504
  3094  002A62                     u3700:
  3095  002A62                     
  3096                           ; BSR set to: 0
  3097  002A62  C056  F056         	movff	floor@x,?_floor
  3098  002A66  C057  F057         	movff	floor@x+1,?_floor+1
  3099  002A6A  C058  F058         	movff	floor@x+2,?_floor+2
  3100  002A6E  C059  F059         	movff	floor@x+3,?_floor+3
  3101  002A72  EF95  F015         	goto	l1976
  3102  002A76                     l4504:
  3103                           
  3104                           ; BSR set to: 0
  3105  002A76  C056  F02A         	movff	floor@x,___fltol@f1
  3106  002A7A  C057  F02B         	movff	floor@x+1,___fltol@f1+1
  3107  002A7E  C058  F02C         	movff	floor@x+2,___fltol@f1+2
  3108  002A82  C059  F02D         	movff	floor@x+3,___fltol@f1+3
  3109  002A86  ECC6  F016         	call	___fltol	;wreg free
  3110  002A8A  C02A  F034         	movff	?___fltol,___xxtofl@val
  3111  002A8E  C02B  F035         	movff	?___fltol+1,___xxtofl@val+1
  3112  002A92  C02C  F036         	movff	?___fltol+2,___xxtofl@val+2
  3113  002A96  C02D  F037         	movff	?___fltol+3,___xxtofl@val+3
  3114  002A9A  0E01               	movlw	1
  3115  002A9C  EC4C  F013         	call	___xxtofl
  3116  002AA0  C034  F060         	movff	?___xxtofl,floor@i
  3117  002AA4  C035  F061         	movff	?___xxtofl+1,floor@i+1
  3118  002AA8  C036  F062         	movff	?___xxtofl+2,floor@i+2
  3119  002AAC  C037  F063         	movff	?___xxtofl+3,floor@i+3
  3120  002AB0  C056  F001         	movff	floor@x,___flge@ff1
  3121  002AB4  C057  F002         	movff	floor@x+1,___flge@ff1+1
  3122  002AB8  C058  F003         	movff	floor@x+2,___flge@ff1+2
  3123  002ABC  C059  F004         	movff	floor@x+3,___flge@ff1+3
  3124  002AC0  C060  F005         	movff	floor@i,___flge@ff2
  3125  002AC4  C061  F006         	movff	floor@i+1,___flge@ff2+1
  3126  002AC8  C062  F007         	movff	floor@i+2,___flge@ff2+2
  3127  002ACC  C063  F008         	movff	floor@i+3,___flge@ff2+3
  3128  002AD0  EC49  F017         	call	___flge	;wreg free
  3129  002AD4  B0D8               	btfsc	status,0,c
  3130  002AD6  EF6F  F015         	goto	u3711
  3131  002ADA  EF71  F015         	goto	u3710
  3132  002ADE                     u3711:
  3133  002ADE  EF8D  F015         	goto	l1978
  3134  002AE2                     u3710:
  3135  002AE2  C060  F01A         	movff	floor@i,___fladd@b
  3136  002AE6  C061  F01B         	movff	floor@i+1,___fladd@b+1
  3137  002AEA  C062  F01C         	movff	floor@i+2,___fladd@b+2
  3138  002AEE  C063  F01D         	movff	floor@i+3,___fladd@b+3
  3139  002AF2  0E00               	movlw	0
  3140  002AF4  6E1E               	movwf	___fladd@a^0,c
  3141  002AF6  0E00               	movlw	0
  3142  002AF8  6E1F               	movwf	(___fladd@a+1)^0,c
  3143  002AFA  0E80               	movlw	128
  3144  002AFC  6E20               	movwf	(___fladd@a+2)^0,c
  3145  002AFE  0EBF               	movlw	191
  3146  002B00  6E21               	movwf	(___fladd@a+3)^0,c
  3147  002B02  EC45  F004         	call	___fladd	;wreg free
  3148  002B06  C01A  F056         	movff	?___fladd,?_floor
  3149  002B0A  C01B  F057         	movff	?___fladd+1,?_floor+1
  3150  002B0E  C01C  F058         	movff	?___fladd+2,?_floor+2
  3151  002B12  C01D  F059         	movff	?___fladd+3,?_floor+3
  3152  002B16  EF95  F015         	goto	l1976
  3153  002B1A                     l1978:
  3154  002B1A  C060  F056         	movff	floor@i,?_floor
  3155  002B1E  C061  F057         	movff	floor@i+1,?_floor+1
  3156  002B22  C062  F058         	movff	floor@i+2,?_floor+2
  3157  002B26  C063  F059         	movff	floor@i+3,?_floor+3
  3158  002B2A                     l1976:
  3159  002B2A  0012               	return		;funcret
  3160  002B2C                     __end_of_floor:
  3161                           	callstack 0
  3162                           
  3163 ;; *************** function ___flge *****************
  3164 ;; Defined at:
  3165 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flge.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  ff1             4    0[COMRAM] int 
  3168 ;;  ff2             4    4[COMRAM] int 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;		None               void
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3180 ;;      Params:         8       0       0       0       0       0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3182 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3183 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3184 ;;Total ram usage:       12 bytes
  3185 ;; Hardware stack levels used:    1
  3186 ;; Hardware stack levels required when called:    3
  3187 ;; This function calls:
  3188 ;;		Nothing
  3189 ;; This function is called by:
  3190 ;;		_pow
  3191 ;;		_exp
  3192 ;;		_floor
  3193 ;; This function uses a non-reentrant model
  3194 ;;
  3195                           
  3196                           	psect	text16
  3197  002E92                     __ptext16:
  3198                           	callstack 0
  3199  002E92                     ___flge:
  3200                           	callstack 23
  3201  002E92  0E00               	movlw	0
  3202  002E94  1401               	andwf	___flge@ff1^0,w,c
  3203  002E96  6E09               	movwf	??___flge^0,c
  3204  002E98  0E00               	movlw	0
  3205  002E9A  1402               	andwf	(___flge@ff1+1)^0,w,c
  3206  002E9C  6E0A               	movwf	(??___flge+1)^0,c
  3207  002E9E  0E80               	movlw	128
  3208  002EA0  1403               	andwf	(___flge@ff1+2)^0,w,c
  3209  002EA2  6E0B               	movwf	(??___flge+2)^0,c
  3210  002EA4  0E7F               	movlw	127
  3211  002EA6  1404               	andwf	(___flge@ff1+3)^0,w,c
  3212  002EA8  6E0C               	movwf	(??___flge+3)^0,c
  3213  002EAA  5009               	movf	??___flge^0,w,c
  3214  002EAC  100A               	iorwf	(??___flge+1)^0,w,c
  3215  002EAE  100B               	iorwf	(??___flge+2)^0,w,c
  3216  002EB0  100C               	iorwf	(??___flge+3)^0,w,c
  3217  002EB2  A4D8               	btfss	status,2,c
  3218  002EB4  EF5E  F017         	goto	u2971
  3219  002EB8  EF60  F017         	goto	u2970
  3220  002EBC                     u2971:
  3221  002EBC  EF68  F017         	goto	l4090
  3222  002EC0                     u2970:
  3223  002EC0  0E00               	movlw	0
  3224  002EC2  6E01               	movwf	___flge@ff1^0,c
  3225  002EC4  0E00               	movlw	0
  3226  002EC6  6E02               	movwf	(___flge@ff1+1)^0,c
  3227  002EC8  0E00               	movlw	0
  3228  002ECA  6E03               	movwf	(___flge@ff1+2)^0,c
  3229  002ECC  0E00               	movlw	0
  3230  002ECE  6E04               	movwf	(___flge@ff1+3)^0,c
  3231  002ED0                     l4090:
  3232  002ED0  0E00               	movlw	0
  3233  002ED2  1405               	andwf	___flge@ff2^0,w,c
  3234  002ED4  6E09               	movwf	??___flge^0,c
  3235  002ED6  0E00               	movlw	0
  3236  002ED8  1406               	andwf	(___flge@ff2+1)^0,w,c
  3237  002EDA  6E0A               	movwf	(??___flge+1)^0,c
  3238  002EDC  0E80               	movlw	128
  3239  002EDE  1407               	andwf	(___flge@ff2+2)^0,w,c
  3240  002EE0  6E0B               	movwf	(??___flge+2)^0,c
  3241  002EE2  0E7F               	movlw	127
  3242  002EE4  1408               	andwf	(___flge@ff2+3)^0,w,c
  3243  002EE6  6E0C               	movwf	(??___flge+3)^0,c
  3244  002EE8  5009               	movf	??___flge^0,w,c
  3245  002EEA  100A               	iorwf	(??___flge+1)^0,w,c
  3246  002EEC  100B               	iorwf	(??___flge+2)^0,w,c
  3247  002EEE  100C               	iorwf	(??___flge+3)^0,w,c
  3248  002EF0  A4D8               	btfss	status,2,c
  3249  002EF2  EF7D  F017         	goto	u2981
  3250  002EF6  EF7F  F017         	goto	u2980
  3251  002EFA                     u2981:
  3252  002EFA  EF87  F017         	goto	l4094
  3253  002EFE                     u2980:
  3254  002EFE  0E00               	movlw	0
  3255  002F00  6E05               	movwf	___flge@ff2^0,c
  3256  002F02  0E00               	movlw	0
  3257  002F04  6E06               	movwf	(___flge@ff2+1)^0,c
  3258  002F06  0E00               	movlw	0
  3259  002F08  6E07               	movwf	(___flge@ff2+2)^0,c
  3260  002F0A  0E00               	movlw	0
  3261  002F0C  6E08               	movwf	(___flge@ff2+3)^0,c
  3262  002F0E                     l4094:
  3263  002F0E  AE04               	btfss	(___flge@ff1+3)^0,7,c
  3264  002F10  EF8C  F017         	goto	u2991
  3265  002F14  EF8E  F017         	goto	u2990
  3266  002F18                     u2991:
  3267  002F18  EF97  F017         	goto	l4098
  3268  002F1C                     u2990:
  3269  002F1C  6C01               	negf	___flge@ff1^0,c
  3270  002F1E  1E02               	comf	(___flge@ff1+1)^0,f,c
  3271  002F20  B0D8               	btfsc	status,0,c
  3272  002F22  2A02               	incf	(___flge@ff1+1)^0,f,c
  3273  002F24  1E03               	comf	(___flge@ff1+2)^0,f,c
  3274  002F26  B0D8               	btfsc	status,0,c
  3275  002F28  2A03               	incf	(___flge@ff1+2)^0,f,c
  3276  002F2A  0E80               	movlw	128
  3277  002F2C  5604               	subfwb	(___flge@ff1+3)^0,f,c
  3278  002F2E                     l4098:
  3279  002F2E  AE08               	btfss	(___flge@ff2+3)^0,7,c
  3280  002F30  EF9C  F017         	goto	u3001
  3281  002F34  EF9E  F017         	goto	u3000
  3282  002F38                     u3001:
  3283  002F38  EFA7  F017         	goto	l1472
  3284  002F3C                     u3000:
  3285  002F3C  6C05               	negf	___flge@ff2^0,c
  3286  002F3E  1E06               	comf	(___flge@ff2+1)^0,f,c
  3287  002F40  B0D8               	btfsc	status,0,c
  3288  002F42  2A06               	incf	(___flge@ff2+1)^0,f,c
  3289  002F44  1E07               	comf	(___flge@ff2+2)^0,f,c
  3290  002F46  B0D8               	btfsc	status,0,c
  3291  002F48  2A07               	incf	(___flge@ff2+2)^0,f,c
  3292  002F4A  0E80               	movlw	128
  3293  002F4C  5608               	subfwb	(___flge@ff2+3)^0,f,c
  3294  002F4E                     l1472:
  3295  002F4E  0E00               	movlw	0
  3296  002F50  1A01               	xorwf	___flge@ff1^0,f,c
  3297  002F52  0E00               	movlw	0
  3298  002F54  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  3299  002F56  0E00               	movlw	0
  3300  002F58  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  3301  002F5A  0E80               	movlw	128
  3302  002F5C  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  3303  002F5E  0E00               	movlw	0
  3304  002F60  1A05               	xorwf	___flge@ff2^0,f,c
  3305  002F62  0E00               	movlw	0
  3306  002F64  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  3307  002F66  0E00               	movlw	0
  3308  002F68  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  3309  002F6A  0E80               	movlw	128
  3310  002F6C  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  3311  002F6E  5005               	movf	___flge@ff2^0,w,c
  3312  002F70  5C01               	subwf	___flge@ff1^0,w,c
  3313  002F72  5006               	movf	(___flge@ff2+1)^0,w,c
  3314  002F74  5802               	subwfb	(___flge@ff1+1)^0,w,c
  3315  002F76  5007               	movf	(___flge@ff2+2)^0,w,c
  3316  002F78  5803               	subwfb	(___flge@ff1+2)^0,w,c
  3317  002F7A  5008               	movf	(___flge@ff2+3)^0,w,c
  3318  002F7C  5804               	subwfb	(___flge@ff1+3)^0,w,c
  3319  002F7E  B0D8               	btfsc	status,0,c
  3320  002F80  EFC4  F017         	goto	u3011
  3321  002F84  EFC6  F017         	goto	u3010
  3322  002F88                     u3011:
  3323  002F88  EFC9  F017         	goto	l4104
  3324  002F8C                     u3010:
  3325  002F8C  90D8               	bcf	status,0,c
  3326  002F8E  EFCA  F017         	goto	l1473
  3327  002F92                     l4104:
  3328  002F92  80D8               	bsf	status,0,c
  3329  002F94                     l1473:
  3330  002F94  0012               	return		;funcret
  3331  002F96                     __end_of___flge:
  3332                           	callstack 0
  3333                           
  3334 ;; *************** function ___flneg *****************
  3335 ;; Defined at:
  3336 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\flneg.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;  f1              4    0[COMRAM] int 
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  4    0[COMRAM] int 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3350 ;;      Params:         4       0       0       0       0       0       0       0       0
  3351 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3352 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3353 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3354 ;;Total ram usage:        4 bytes
  3355 ;; Hardware stack levels used:    1
  3356 ;; Hardware stack levels required when called:    3
  3357 ;; This function calls:
  3358 ;;		Nothing
  3359 ;; This function is called by:
  3360 ;;		_pow
  3361 ;;		_exp
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365                           	psect	text17
  3366  003B08                     __ptext17:
  3367                           	callstack 0
  3368  003B08                     ___flneg:
  3369                           	callstack 24
  3370  003B08  5001               	movf	___flneg@f1^0,w,c
  3371  003B0A  1002               	iorwf	(___flneg@f1+1)^0,w,c
  3372  003B0C  1003               	iorwf	(___flneg@f1+2)^0,w,c
  3373  003B0E  1004               	iorwf	(___flneg@f1+3)^0,w,c
  3374  003B10  B4D8               	btfsc	status,2,c
  3375  003B12  EF8D  F01D         	goto	u3551
  3376  003B16  EF8F  F01D         	goto	u3550
  3377  003B1A                     u3551:
  3378  003B1A  EF97  F01D         	goto	l4402
  3379  003B1E                     u3550:
  3380  003B1E  0E00               	movlw	0
  3381  003B20  1A01               	xorwf	___flneg@f1^0,f,c
  3382  003B22  0E00               	movlw	0
  3383  003B24  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  3384  003B26  0E00               	movlw	0
  3385  003B28  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  3386  003B2A  0E80               	movlw	128
  3387  003B2C  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  3388  003B2E                     l4402:
  3389  003B2E  C001  F001         	movff	___flneg@f1,?___flneg
  3390  003B32  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  3391  003B36  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  3392  003B3A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  3393  003B3E  0012               	return		;funcret
  3394  003B40                     __end_of___flneg:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function _ComputeWaterVol *****************
  3398 ;; Defined at:
  3399 ;;		line 35 in file "DepthDetection.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;		None
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  dEmptySpace_    4   57[BANK0 ] float 
  3404 ;;  dWaterHeight    4   53[BANK0 ] float 
  3405 ;;  d_mmPerTick     4   49[BANK0 ] float 
  3406 ;;  dSOS            4   41[BANK0 ] float 
  3407 ;;  dWaterVol       4   37[BANK0 ] float 
  3408 ;;  dCurrTemp       4   33[BANK0 ] float 
  3409 ;;  dEchoPeriod     4    0        float 
  3410 ;; Return value:  Size  Location     Type
  3411 ;;                  1    wreg      void 
  3412 ;; Registers used:
  3413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3414 ;; Tracked objects:
  3415 ;;		On entry : 0/0
  3416 ;;		On exit  : 0/0
  3417 ;;		Unchanged: 0/0
  3418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3419 ;;      Params:         0       0       0       0       0       0       0       0       0
  3420 ;;      Locals:         0      32       0       0       0       0       0       0       0
  3421 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3422 ;;      Totals:         0      36       0       0       0       0       0       0       0
  3423 ;;Total ram usage:       36 bytes
  3424 ;; Hardware stack levels used:    1
  3425 ;; Hardware stack levels required when called:    8
  3426 ;; This function calls:
  3427 ;;		_LCD_DisplayResults
  3428 ;;		___fladd
  3429 ;;		___fldiv
  3430 ;;		___flmul
  3431 ;;		___flsub
  3432 ;;		___fltol
  3433 ;;		___xxtofl
  3434 ;;		_round
  3435 ;;		_sqrt
  3436 ;; This function is called by:
  3437 ;;		_main
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text18
  3442  0018D0                     __ptext18:
  3443                           	callstack 0
  3444  0018D0                     _ComputeWaterVol:
  3445                           	callstack 22
  3446  0018D0                     
  3447                           ;DepthDetection.c: 37: { TMR3H = 0; TMR3L = 0; T3CONbits.TMR3ON = 1;};
  3448  0018D0  0E00               	movlw	0
  3449  0018D2  6EB3               	movwf	179,c	;volatile
  3450  0018D4  0E00               	movlw	0
  3451  0018D6  6EB2               	movwf	178,c	;volatile
  3452  0018D8  80B1               	bsf	177,0,c	;volatile
  3453  0018DA  C0DF  F034         	movff	_giEchoCounter,___xxtofl@val	;volatile
  3454  0018DE  C0E0  F035         	movff	_giEchoCounter+1,___xxtofl@val+1	;volatile
  3455  0018E2  6A36               	clrf	(___xxtofl@val+2)^0,c
  3456  0018E4  6A37               	clrf	(___xxtofl@val+3)^0,c
  3457  0018E6  0E00               	movlw	0
  3458  0018E8  EC4C  F013         	call	___xxtofl
  3459  0018EC  C034  F056         	movff	?___xxtofl,___flmul@b
  3460  0018F0  C035  F057         	movff	?___xxtofl+1,___flmul@b+1
  3461  0018F4  C036  F058         	movff	?___xxtofl+2,___flmul@b+2
  3462  0018F8  C037  F059         	movff	?___xxtofl+3,___flmul@b+3
  3463  0018FC  0EBD               	movlw	189
  3464  0018FE  6E5A               	movwf	___flmul@a^0,c
  3465  001900  0E37               	movlw	55
  3466  001902  6E5B               	movwf	(___flmul@a+1)^0,c
  3467  001904  0E06               	movlw	6
  3468  001906  6E5C               	movwf	(___flmul@a+2)^0,c
  3469  001908  0E35               	movlw	53
  3470  00190A  6E5D               	movwf	(___flmul@a+3)^0,c
  3471  00190C  ECA5  F006         	call	___flmul	;wreg free
  3472  001910                     
  3473                           ;DepthDetection.c: 47: dCurrTemp = gfAirTempC;
  3474  001910  C0C9  F081         	movff	_gfAirTempC,ComputeWaterVol@dCurrTemp	;volatile
  3475  001914  C0CA  F082         	movff	_gfAirTempC+1,ComputeWaterVol@dCurrTemp+1	;volatile
  3476  001918  C0CB  F083         	movff	_gfAirTempC+2,ComputeWaterVol@dCurrTemp+2	;volatile
  3477  00191C  C0CC  F084         	movff	_gfAirTempC+3,ComputeWaterVol@dCurrTemp+3	;volatile
  3478  001920                     
  3479                           ;DepthDetection.c: 48: dSOS = 331.3e3 * sqrt( 1 + (dCurrTemp / 273.15));
  3480  001920  0E00               	movlw	0
  3481  001922  6E1E               	movwf	___fladd@a^0,c
  3482  001924  0E00               	movlw	0
  3483  001926  6E1F               	movwf	(___fladd@a+1)^0,c
  3484  001928  0E80               	movlw	128
  3485  00192A  6E20               	movwf	(___fladd@a+2)^0,c
  3486  00192C  0E3F               	movlw	63
  3487  00192E  6E21               	movwf	(___fladd@a+3)^0,c
  3488  001930  0E33               	movlw	51
  3489  001932  6E05               	movwf	___fldiv@a^0,c
  3490  001934  0E93               	movlw	147
  3491  001936  6E06               	movwf	(___fldiv@a+1)^0,c
  3492  001938  0E88               	movlw	136
  3493  00193A  6E07               	movwf	(___fldiv@a+2)^0,c
  3494  00193C  0E43               	movlw	67
  3495  00193E  6E08               	movwf	(___fldiv@a+3)^0,c
  3496  001940  C081  F001         	movff	ComputeWaterVol@dCurrTemp,___fldiv@b
  3497  001944  C082  F002         	movff	ComputeWaterVol@dCurrTemp+1,___fldiv@b+1
  3498  001948  C083  F003         	movff	ComputeWaterVol@dCurrTemp+2,___fldiv@b+2
  3499  00194C  C084  F004         	movff	ComputeWaterVol@dCurrTemp+3,___fldiv@b+3
  3500  001950  EC9B  F00A         	call	___fldiv	;wreg free
  3501  001954  C001  F01A         	movff	?___fldiv,___fladd@b
  3502  001958  C002  F01B         	movff	?___fldiv+1,___fladd@b+1
  3503  00195C  C003  F01C         	movff	?___fldiv+2,___fladd@b+2
  3504  001960  C004  F01D         	movff	?___fldiv+3,___fladd@b+3
  3505  001964  EC45  F004         	call	___fladd	;wreg free
  3506  001968  C01A  F02A         	movff	?___fladd,sqrt@a
  3507  00196C  C01B  F02B         	movff	?___fladd+1,sqrt@a+1
  3508  001970  C01C  F02C         	movff	?___fladd+2,sqrt@a+2
  3509  001974  C01D  F02D         	movff	?___fladd+3,sqrt@a+3
  3510  001978  ECF6  F00D         	call	_sqrt	;wreg free
  3511  00197C  C02A  F056         	movff	?_sqrt,___flmul@b
  3512  001980  C02B  F057         	movff	?_sqrt+1,___flmul@b+1
  3513  001984  C02C  F058         	movff	?_sqrt+2,___flmul@b+2
  3514  001988  C02D  F059         	movff	?_sqrt+3,___flmul@b+3
  3515  00198C  0E80               	movlw	128
  3516  00198E  6E5A               	movwf	___flmul@a^0,c
  3517  001990  0EC4               	movlw	196
  3518  001992  6E5B               	movwf	(___flmul@a+1)^0,c
  3519  001994  0EA1               	movlw	161
  3520  001996  6E5C               	movwf	(___flmul@a+2)^0,c
  3521  001998  0E48               	movlw	72
  3522  00199A  6E5D               	movwf	(___flmul@a+3)^0,c
  3523  00199C  ECA5  F006         	call	___flmul	;wreg free
  3524  0019A0  C056  F089         	movff	?___flmul,ComputeWaterVol@dSOS
  3525  0019A4  C057  F08A         	movff	?___flmul+1,ComputeWaterVol@dSOS+1
  3526  0019A8  C058  F08B         	movff	?___flmul+2,ComputeWaterVol@dSOS+2
  3527  0019AC  C059  F08C         	movff	?___flmul+3,ComputeWaterVol@dSOS+3
  3528  0019B0                     
  3529                           ;DepthDetection.c: 53: if (0 == 0)
  3530  0019B0  0EBD               	movlw	189
  3531  0019B2  6E5A               	movwf	___flmul@a^0,c
  3532  0019B4  0E37               	movlw	55
  3533  0019B6  6E5B               	movwf	(___flmul@a+1)^0,c
  3534  0019B8  0E06               	movlw	6
  3535  0019BA  6E5C               	movwf	(___flmul@a+2)^0,c
  3536  0019BC  0E35               	movlw	53
  3537  0019BE  6E5D               	movwf	(___flmul@a+3)^0,c
  3538  0019C0  C089  F056         	movff	ComputeWaterVol@dSOS,___flmul@b
  3539  0019C4  C08A  F057         	movff	ComputeWaterVol@dSOS+1,___flmul@b+1
  3540  0019C8  C08B  F058         	movff	ComputeWaterVol@dSOS+2,___flmul@b+2
  3541  0019CC  C08C  F059         	movff	ComputeWaterVol@dSOS+3,___flmul@b+3
  3542  0019D0  ECA5  F006         	call	___flmul	;wreg free
  3543  0019D4  C056  F001         	movff	?___flmul,___fldiv@b
  3544  0019D8  C057  F002         	movff	?___flmul+1,___fldiv@b+1
  3545  0019DC  C058  F003         	movff	?___flmul+2,___fldiv@b+2
  3546  0019E0  C059  F004         	movff	?___flmul+3,___fldiv@b+3
  3547  0019E4  0E00               	movlw	0
  3548  0019E6  6E05               	movwf	___fldiv@a^0,c
  3549  0019E8  0E00               	movlw	0
  3550  0019EA  6E06               	movwf	(___fldiv@a+1)^0,c
  3551  0019EC  0E00               	movlw	0
  3552  0019EE  6E07               	movwf	(___fldiv@a+2)^0,c
  3553  0019F0  0E40               	movlw	64
  3554  0019F2  6E08               	movwf	(___fldiv@a+3)^0,c
  3555  0019F4  EC9B  F00A         	call	___fldiv	;wreg free
  3556  0019F8  C001  F091         	movff	?___fldiv,ComputeWaterVol@d_mmPerTick
  3557  0019FC  C002  F092         	movff	?___fldiv+1,ComputeWaterVol@d_mmPerTick+1
  3558  001A00  C003  F093         	movff	?___fldiv+2,ComputeWaterVol@d_mmPerTick+2
  3559  001A04  C004  F094         	movff	?___fldiv+3,ComputeWaterVol@d_mmPerTick+3
  3560  001A08                     
  3561                           ;DepthDetection.c: 54: dEmptySpace_mm = (giEchoCounter.EP16 - 4400) * d_mmPerTick;
  3562  001A08  0ED0               	movlw	208
  3563  001A0A  0100               	movlb	0	; () banked
  3564  001A0C  6F79               	movwf	??_ComputeWaterVol& (0+255),b
  3565  001A0E  0EEE               	movlw	238
  3566  001A10  6F7A               	movwf	(??_ComputeWaterVol+1)& (0+255),b
  3567  001A12  C0DF  F07B         	movff	_giEchoCounter,??_ComputeWaterVol+2	;volatile
  3568  001A16  C0E0  F07C         	movff	_giEchoCounter+1,??_ComputeWaterVol+3	;volatile
  3569  001A1A  5179               	movf	??_ComputeWaterVol& (0+255),w,b
  3570  001A1C  277B               	addwf	(??_ComputeWaterVol+2)& (0+255),f,b
  3571  001A1E  517A               	movf	(??_ComputeWaterVol+1)& (0+255),w,b
  3572  001A20  237C               	addwfc	(??_ComputeWaterVol+3)& (0+255),f,b
  3573  001A22  C07B  F034         	movff	??_ComputeWaterVol+2,___xxtofl@val
  3574  001A26  C07C  F035         	movff	??_ComputeWaterVol+3,___xxtofl@val+1
  3575  001A2A  6A36               	clrf	(___xxtofl@val+2)^0,c
  3576  001A2C  6A37               	clrf	(___xxtofl@val+3)^0,c
  3577  001A2E  0E00               	movlw	0
  3578  001A30  EC4C  F013         	call	___xxtofl
  3579  001A34  C034  F056         	movff	?___xxtofl,___flmul@b
  3580  001A38  C035  F057         	movff	?___xxtofl+1,___flmul@b+1
  3581  001A3C  C036  F058         	movff	?___xxtofl+2,___flmul@b+2
  3582  001A40  C037  F059         	movff	?___xxtofl+3,___flmul@b+3
  3583  001A44  C091  F05A         	movff	ComputeWaterVol@d_mmPerTick,___flmul@a
  3584  001A48  C092  F05B         	movff	ComputeWaterVol@d_mmPerTick+1,___flmul@a+1
  3585  001A4C  C093  F05C         	movff	ComputeWaterVol@d_mmPerTick+2,___flmul@a+2
  3586  001A50  C094  F05D         	movff	ComputeWaterVol@d_mmPerTick+3,___flmul@a+3
  3587  001A54  ECA5  F006         	call	___flmul	;wreg free
  3588  001A58  C056  F099         	movff	?___flmul,ComputeWaterVol@dEmptySpace_mm
  3589  001A5C  C057  F09A         	movff	?___flmul+1,ComputeWaterVol@dEmptySpace_mm+1
  3590  001A60  C058  F09B         	movff	?___flmul+2,ComputeWaterVol@dEmptySpace_mm+2
  3591  001A64  C059  F09C         	movff	?___flmul+3,ComputeWaterVol@dEmptySpace_mm+3
  3592  001A68                     
  3593                           ;DepthDetection.c: 57: giEmptySpace_mm = dEmptySpace_mm;
  3594  001A68  C099  F02A         	movff	ComputeWaterVol@dEmptySpace_mm,___fltol@f1
  3595  001A6C  C09A  F02B         	movff	ComputeWaterVol@dEmptySpace_mm+1,___fltol@f1+1
  3596  001A70  C09B  F02C         	movff	ComputeWaterVol@dEmptySpace_mm+2,___fltol@f1+2
  3597  001A74  C09C  F02D         	movff	ComputeWaterVol@dEmptySpace_mm+3,___fltol@f1+3
  3598  001A78  ECC6  F016         	call	___fltol	;wreg free
  3599  001A7C  C02A  F0D5         	movff	?___fltol,_giEmptySpace_mm	;volatile
  3600  001A80  C02B  F0D6         	movff	?___fltol+1,_giEmptySpace_mm+1	;volatile
  3601  001A84                     
  3602                           ;DepthDetection.c: 58: dWaterHeight_mm = gfSensorHeight_mm - dEmptySpace_mm;
  3603  001A84  C0B9  F066         	movff	_gfSensorHeight_mm,___flsub@b
  3604  001A88  C0BA  F067         	movff	_gfSensorHeight_mm+1,___flsub@b+1
  3605  001A8C  C0BB  F068         	movff	_gfSensorHeight_mm+2,___flsub@b+2
  3606  001A90  C0BC  F069         	movff	_gfSensorHeight_mm+3,___flsub@b+3
  3607  001A94  C099  F06A         	movff	ComputeWaterVol@dEmptySpace_mm,___flsub@a
  3608  001A98  C09A  F06B         	movff	ComputeWaterVol@dEmptySpace_mm+1,___flsub@a+1
  3609  001A9C  C09B  F06C         	movff	ComputeWaterVol@dEmptySpace_mm+2,___flsub@a+2
  3610  001AA0  C09C  F06D         	movff	ComputeWaterVol@dEmptySpace_mm+3,___flsub@a+3
  3611  001AA4  EC43  F01D         	call	___flsub	;wreg free
  3612  001AA8  C066  F095         	movff	?___flsub,ComputeWaterVol@dWaterHeight_mm
  3613  001AAC  C067  F096         	movff	?___flsub+1,ComputeWaterVol@dWaterHeight_mm+1
  3614  001AB0  C068  F097         	movff	?___flsub+2,ComputeWaterVol@dWaterHeight_mm+2
  3615  001AB4  C069  F098         	movff	?___flsub+3,ComputeWaterVol@dWaterHeight_mm+3
  3616                           
  3617                           ;DepthDetection.c: 59: dWaterVol = dWaterHeight_mm * gfTankGalsPer_mm;
  3618  001AB8  C095  F056         	movff	ComputeWaterVol@dWaterHeight_mm,___flmul@b
  3619  001ABC  C096  F057         	movff	ComputeWaterVol@dWaterHeight_mm+1,___flmul@b+1
  3620  001AC0  C097  F058         	movff	ComputeWaterVol@dWaterHeight_mm+2,___flmul@b+2
  3621  001AC4  C098  F059         	movff	ComputeWaterVol@dWaterHeight_mm+3,___flmul@b+3
  3622  001AC8  C0B5  F05A         	movff	_gfTankGalsPer_mm,___flmul@a
  3623  001ACC  C0B6  F05B         	movff	_gfTankGalsPer_mm+1,___flmul@a+1
  3624  001AD0  C0B7  F05C         	movff	_gfTankGalsPer_mm+2,___flmul@a+2
  3625  001AD4  C0B8  F05D         	movff	_gfTankGalsPer_mm+3,___flmul@a+3
  3626  001AD8  ECA5  F006         	call	___flmul	;wreg free
  3627  001ADC  C056  F085         	movff	?___flmul,ComputeWaterVol@dWaterVol
  3628  001AE0  C057  F086         	movff	?___flmul+1,ComputeWaterVol@dWaterVol+1
  3629  001AE4  C058  F087         	movff	?___flmul+2,ComputeWaterVol@dWaterVol+2
  3630  001AE8  C059  F088         	movff	?___flmul+3,ComputeWaterVol@dWaterVol+3
  3631                           
  3632                           ;DepthDetection.c: 60: giPercentFull = dWaterHeight_mm * 100 / gfMaxWaterHeight_mm;
  3633  001AEC  C0B1  F005         	movff	_gfMaxWaterHeight_mm,___fldiv@a
  3634  001AF0  C0B2  F006         	movff	_gfMaxWaterHeight_mm+1,___fldiv@a+1
  3635  001AF4  C0B3  F007         	movff	_gfMaxWaterHeight_mm+2,___fldiv@a+2
  3636  001AF8  C0B4  F008         	movff	_gfMaxWaterHeight_mm+3,___fldiv@a+3
  3637  001AFC  0E00               	movlw	0
  3638  001AFE  6E5A               	movwf	___flmul@a^0,c
  3639  001B00  0E00               	movlw	0
  3640  001B02  6E5B               	movwf	(___flmul@a+1)^0,c
  3641  001B04  0EC8               	movlw	200
  3642  001B06  6E5C               	movwf	(___flmul@a+2)^0,c
  3643  001B08  0E42               	movlw	66
  3644  001B0A  6E5D               	movwf	(___flmul@a+3)^0,c
  3645  001B0C  C095  F056         	movff	ComputeWaterVol@dWaterHeight_mm,___flmul@b
  3646  001B10  C096  F057         	movff	ComputeWaterVol@dWaterHeight_mm+1,___flmul@b+1
  3647  001B14  C097  F058         	movff	ComputeWaterVol@dWaterHeight_mm+2,___flmul@b+2
  3648  001B18  C098  F059         	movff	ComputeWaterVol@dWaterHeight_mm+3,___flmul@b+3
  3649  001B1C  ECA5  F006         	call	___flmul	;wreg free
  3650  001B20  C056  F001         	movff	?___flmul,___fldiv@b
  3651  001B24  C057  F002         	movff	?___flmul+1,___fldiv@b+1
  3652  001B28  C058  F003         	movff	?___flmul+2,___fldiv@b+2
  3653  001B2C  C059  F004         	movff	?___flmul+3,___fldiv@b+3
  3654  001B30  EC9B  F00A         	call	___fldiv	;wreg free
  3655  001B34  C001  F02A         	movff	?___fldiv,___fltol@f1
  3656  001B38  C002  F02B         	movff	?___fldiv+1,___fltol@f1+1
  3657  001B3C  C003  F02C         	movff	?___fldiv+2,___fltol@f1+2
  3658  001B40  C004  F02D         	movff	?___fldiv+3,___fltol@f1+3
  3659  001B44  ECC6  F016         	call	___fltol	;wreg free
  3660  001B48  C02A  F0D7         	movff	?___fltol,_giPercentFull	;volatile
  3661  001B4C  C02B  F0D8         	movff	?___fltol+1,_giPercentFull+1	;volatile
  3662  001B50                     
  3663                           ;DepthDetection.c: 61: giGals = round(dWaterVol);
  3664  001B50  C085  F071         	movff	ComputeWaterVol@dWaterVol,round@x
  3665  001B54  C086  F072         	movff	ComputeWaterVol@dWaterVol+1,round@x+1
  3666  001B58  C087  F073         	movff	ComputeWaterVol@dWaterVol+2,round@x+2
  3667  001B5C  C088  F074         	movff	ComputeWaterVol@dWaterVol+3,round@x+3
  3668  001B60  ECED  F01A         	call	_round	;wreg free
  3669  001B64  C071  F08D         	movff	?_round,_ComputeWaterVol$2927
  3670  001B68  C072  F08E         	movff	?_round+1,_ComputeWaterVol$2927+1
  3671  001B6C  C073  F08F         	movff	?_round+2,_ComputeWaterVol$2927+2
  3672  001B70  C074  F090         	movff	?_round+3,_ComputeWaterVol$2927+3
  3673  001B74                     
  3674                           ;DepthDetection.c: 61: giGals = round(dWaterVol);
  3675  001B74  C08D  F02A         	movff	_ComputeWaterVol$2927,___fltol@f1
  3676  001B78  C08E  F02B         	movff	_ComputeWaterVol$2927+1,___fltol@f1+1
  3677  001B7C  C08F  F02C         	movff	_ComputeWaterVol$2927+2,___fltol@f1+2
  3678  001B80  C090  F02D         	movff	_ComputeWaterVol$2927+3,___fltol@f1+3
  3679  001B84  ECC6  F016         	call	___fltol	;wreg free
  3680  001B88  C02A  F0D9         	movff	?___fltol,_giGals	;volatile
  3681  001B8C  C02B  F0DA         	movff	?___fltol+1,_giGals+1	;volatile
  3682  001B90                     
  3683                           ;DepthDetection.c: 66: if (LATCbits.LATC0 == 1) {
  3684  001B90  A08B               	btfss	139,0,c	;volatile
  3685  001B92  EFCD  F00D         	goto	u4271
  3686  001B96  EFCF  F00D         	goto	u4270
  3687  001B9A                     u4271:
  3688  001B9A  EFDE  F00D         	goto	l5152
  3689  001B9E                     u4270:
  3690  001B9E                     
  3691                           ;DepthDetection.c: 67: if (giPercentFull < 25) LATCbits.LATC0 = 0;
  3692  001B9E  0100               	movlb	0	; () banked
  3693  001BA0  51D8               	movf	(_giPercentFull+1)& (0+255),w,b	;volatile
  3694  001BA2  E107               	bnz	u4281
  3695  001BA4  0E19               	movlw	25
  3696  001BA6  5DD7               	subwf	_giPercentFull& (0+255),w,b	;volatile
  3697  001BA8  B0D8               	btfsc	status,0,c
  3698  001BAA  EFD9  F00D         	goto	u4281
  3699  001BAE  EFDB  F00D         	goto	u4280
  3700  001BB2                     u4281:
  3701  001BB2  EFEB  F00D         	goto	l5156
  3702  001BB6                     u4280:
  3703  001BB6                     
  3704                           ; BSR set to: 0
  3705  001BB6  908B               	bcf	139,0,c	;volatile
  3706  001BB8  EFEB  F00D         	goto	l5156
  3707  001BBC                     l5152:
  3708                           
  3709                           ;DepthDetection.c: 69: if (giPercentFull > 80) LATCbits.LATC0 = 1;
  3710  001BBC  0100               	movlb	0	; () banked
  3711  001BBE  51D8               	movf	(_giPercentFull+1)& (0+255),w,b	;volatile
  3712  001BC0  E109               	bnz	u4290
  3713  001BC2  0E51               	movlw	81
  3714  001BC4  5DD7               	subwf	_giPercentFull& (0+255),w,b	;volatile
  3715  001BC6  A0D8               	btfss	status,0,c
  3716  001BC8  EFE8  F00D         	goto	u4291
  3717  001BCC  EFEA  F00D         	goto	u4290
  3718  001BD0                     u4291:
  3719  001BD0  EFEB  F00D         	goto	l5156
  3720  001BD4                     u4290:
  3721  001BD4                     
  3722                           ; BSR set to: 0
  3723  001BD4  808B               	bsf	139,0,c	;volatile
  3724  001BD6                     l5156:
  3725                           
  3726                           ; BSR set to: 0
  3727  001BD6  EC3E  F01B         	call	_LCD_DisplayResults	;wreg free
  3728  001BDA                     
  3729                           ;DepthDetection.c: 73: {T3CONbits.TMR3ON = 0;};
  3730  001BDA  90B1               	bcf	177,0,c	;volatile
  3731  001BDC                     
  3732                           ;DepthDetection.c: 74: { gi_SW_Time = TMR3L; gi_SW_Time += TMR3H << 8;};
  3733  001BDC  CFB2 F0E1          	movff	4018,_gi_SW_Time	;volatile
  3734  001BE0  0100               	movlb	0	; () banked
  3735  001BE2  6BE2               	clrf	(_gi_SW_Time+1)& (0+255),b
  3736  001BE4                     
  3737                           ; BSR set to: 0
  3738  001BE4  50B3               	movf	179,w,c	;volatile
  3739  001BE6  27E2               	addwf	(_gi_SW_Time+1)& (0+255),f,b
  3740  001BE8                     
  3741                           ; BSR set to: 0
  3742                           ;DepthDetection.c: 75: __nop();
  3743  001BE8  F000               	nop	
  3744  001BEA  0012               	return		;funcret
  3745  001BEC                     __end_of_ComputeWaterVol:
  3746                           	callstack 0
  3747                           
  3748 ;; *************** function _sqrt *****************
  3749 ;; Defined at:
  3750 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcsqrt.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  a               4   41[COMRAM] void 
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  frac            4   66[COMRAM] unsigned long 
  3755 ;;  root            4   62[COMRAM] struct .
  3756 ;;  grs             4   56[COMRAM] unsigned long 
  3757 ;;  tfrac           4   51[COMRAM] unsigned long 
  3758 ;;  exp             2   60[COMRAM] int 
  3759 ;;  p               1   55[COMRAM] unsigned char 
  3760 ;;  i               1   50[COMRAM] unsigned char 
  3761 ;;  sign            1   49[COMRAM] unsigned char 
  3762 ;; Return value:  Size  Location     Type
  3763 ;;                  4   41[COMRAM] unsigned char 
  3764 ;; Registers used:
  3765 ;;		wreg, status,2, status,0
  3766 ;; Tracked objects:
  3767 ;;		On entry : 0/0
  3768 ;;		On exit  : 0/0
  3769 ;;		Unchanged: 0/0
  3770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3771 ;;      Params:         4       0       0       0       0       0       0       0       0
  3772 ;;      Locals:        21       0       0       0       0       0       0       0       0
  3773 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3774 ;;      Totals:        29       0       0       0       0       0       0       0       0
  3775 ;;Total ram usage:       29 bytes
  3776 ;; Hardware stack levels used:    1
  3777 ;; Hardware stack levels required when called:    3
  3778 ;; This function calls:
  3779 ;;		Nothing
  3780 ;; This function is called by:
  3781 ;;		_ComputeWaterVol
  3782 ;;		_InitTankVariables
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text19
  3787  001BEC                     __ptext19:
  3788                           	callstack 0
  3789  001BEC                     _sqrt:
  3790                           	callstack 26
  3791  001BEC  502D               	movf	(sqrt@a+3)^0,w,c
  3792  001BEE  0B80               	andlw	128
  3793  001BF0  6E32               	movwf	sqrt@sign^0,c
  3794  001BF2  502D               	movf	(sqrt@a+3)^0,w,c
  3795  001BF4  242D               	addwf	(sqrt@a+3)^0,w,c
  3796  001BF6  6E38               	movwf	sqrt@p^0,c
  3797  001BF8  AE2C               	btfss	(sqrt@a+2)^0,7,c
  3798  001BFA  EF01  F00E         	goto	u4071
  3799  001BFE  EF03  F00E         	goto	u4070
  3800  001C02                     u4071:
  3801  001C02  EF04  F00E         	goto	l4830
  3802  001C06                     u4070:
  3803  001C06  8038               	bsf	sqrt@p^0,0,c
  3804  001C08                     l4830:
  3805  001C08  C038  F03D         	movff	sqrt@p,sqrt@exp
  3806  001C0C  6A3E               	clrf	(sqrt@exp+1)^0,c
  3807  001C0E  0EFF               	movlw	255
  3808  001C10  142A               	andwf	sqrt@a^0,w,c
  3809  001C12  6E43               	movwf	sqrt@frac^0,c
  3810  001C14  0EFF               	movlw	255
  3811  001C16  142B               	andwf	(sqrt@a+1)^0,w,c
  3812  001C18  6E44               	movwf	(sqrt@frac+1)^0,c
  3813  001C1A  0E7F               	movlw	127
  3814  001C1C  142C               	andwf	(sqrt@a+2)^0,w,c
  3815  001C1E  6E45               	movwf	(sqrt@frac+2)^0,c
  3816  001C20  0E00               	movlw	0
  3817  001C22  142D               	andwf	(sqrt@a+3)^0,w,c
  3818  001C24  6E46               	movwf	(sqrt@frac+3)^0,c
  3819  001C26  503D               	movf	sqrt@exp^0,w,c
  3820  001C28  103E               	iorwf	(sqrt@exp+1)^0,w,c
  3821  001C2A  B4D8               	btfsc	status,2,c
  3822  001C2C  EF1A  F00E         	goto	u4081
  3823  001C30  EF1C  F00E         	goto	u4080
  3824  001C34                     u4081:
  3825  001C34  EF26  F00E         	goto	l4840
  3826  001C38                     u4080:
  3827  001C38  8E45               	bsf	(sqrt@frac+2)^0,7,c
  3828  001C3A  283D               	incf	sqrt@exp^0,w,c
  3829  001C3C  103E               	iorwf	(sqrt@exp+1)^0,w,c
  3830  001C3E  A4D8               	btfss	status,2,c
  3831  001C40  EF24  F00E         	goto	u4091
  3832  001C44  EF26  F00E         	goto	u4090
  3833  001C48                     u4091:
  3834  001C48  EF2E  F00E         	goto	l4844
  3835  001C4C                     u4090:
  3836  001C4C                     l4840:
  3837  001C4C  0E00               	movlw	0
  3838  001C4E  6E43               	movwf	sqrt@frac^0,c
  3839  001C50  0E00               	movlw	0
  3840  001C52  6E44               	movwf	(sqrt@frac+1)^0,c
  3841  001C54  0E00               	movlw	0
  3842  001C56  6E45               	movwf	(sqrt@frac+2)^0,c
  3843  001C58  0E00               	movlw	0
  3844  001C5A  6E46               	movwf	(sqrt@frac+3)^0,c
  3845  001C5C                     l4844:
  3846  001C5C  503D               	movf	sqrt@exp^0,w,c
  3847  001C5E  103E               	iorwf	(sqrt@exp+1)^0,w,c
  3848  001C60  A4D8               	btfss	status,2,c
  3849  001C62  EF35  F00E         	goto	u4101
  3850  001C66  EF37  F00E         	goto	u4100
  3851  001C6A                     u4101:
  3852  001C6A  EF41  F00E         	goto	l4850
  3853  001C6E                     u4100:
  3854  001C6E  0E00               	movlw	0
  3855  001C70  6E2A               	movwf	?_sqrt^0,c
  3856  001C72  0E00               	movlw	0
  3857  001C74  6E2B               	movwf	(?_sqrt+1)^0,c
  3858  001C76  0E00               	movlw	0
  3859  001C78  6E2C               	movwf	(?_sqrt+2)^0,c
  3860  001C7A  0E00               	movlw	0
  3861  001C7C  6E2D               	movwf	(?_sqrt+3)^0,c
  3862  001C7E  EF83  F00F         	goto	l1842
  3863  001C82                     l4850:
  3864  001C82  5032               	movf	sqrt@sign^0,w,c
  3865  001C84  B4D8               	btfsc	status,2,c
  3866  001C86  EF47  F00E         	goto	u4111
  3867  001C8A  EF49  F00E         	goto	u4110
  3868  001C8E                     u4111:
  3869  001C8E  EF64  F00E         	goto	l4862
  3870  001C92                     u4110:
  3871  001C92  0E00               	movlw	0
  3872  001C94  6E3F               	movwf	sqrt@root^0,c
  3873  001C96  0E00               	movlw	0
  3874  001C98  6E40               	movwf	(sqrt@root+1)^0,c
  3875  001C9A  0E40               	movlw	64
  3876  001C9C  6E41               	movwf	(sqrt@root+2)^0,c
  3877  001C9E  0E00               	movlw	0
  3878  001CA0  6E42               	movwf	(sqrt@root+3)^0,c
  3879  001CA2  0E80               	movlw	128
  3880  001CA4  1241               	iorwf	(sqrt@root+2)^0,f,c
  3881  001CA6  0EFF               	movlw	255
  3882  001CA8  1242               	iorwf	(sqrt@root+3)^0,f,c
  3883  001CAA  0E00               	movlw	0
  3884  001CAC  0100               	movlb	0	; () banked
  3885  001CAE  6FCE               	movwf	(_errno+1)& (0+255),b
  3886  001CB0  0E21               	movlw	33
  3887  001CB2  6FCD               	movwf	_errno& (0+255),b
  3888  001CB4                     l4858:
  3889  001CB4  C03F  F02A         	movff	sqrt@root,?_sqrt
  3890  001CB8  C040  F02B         	movff	sqrt@root+1,?_sqrt+1
  3891  001CBC  C041  F02C         	movff	sqrt@root+2,?_sqrt+2
  3892  001CC0  C042  F02D         	movff	sqrt@root+3,?_sqrt+3
  3893  001CC4  EF83  F00F         	goto	l1842
  3894  001CC8                     l4862:
  3895  001CC8  283D               	incf	sqrt@exp^0,w,c
  3896  001CCA  103E               	iorwf	(sqrt@exp+1)^0,w,c
  3897  001CCC  A4D8               	btfss	status,2,c
  3898  001CCE  EF6B  F00E         	goto	u4121
  3899  001CD2  EF6D  F00E         	goto	u4120
  3900  001CD6                     u4121:
  3901  001CD6  EF77  F00E         	goto	l4870
  3902  001CDA                     u4120:
  3903  001CDA  0E00               	movlw	0
  3904  001CDC  6E3F               	movwf	sqrt@root^0,c
  3905  001CDE  0E00               	movlw	0
  3906  001CE0  6E40               	movwf	(sqrt@root+1)^0,c
  3907  001CE2  0E80               	movlw	128
  3908  001CE4  6E41               	movwf	(sqrt@root+2)^0,c
  3909  001CE6  0E7F               	movlw	127
  3910  001CE8  6E42               	movwf	(sqrt@root+3)^0,c
  3911  001CEA  EF5A  F00E         	goto	l4858
  3912  001CEE                     l4870:
  3913  001CEE  0E81               	movlw	129
  3914  001CF0  263D               	addwf	sqrt@exp^0,f,c
  3915  001CF2  0EFF               	movlw	255
  3916  001CF4  223E               	addwfc	(sqrt@exp+1)^0,f,c
  3917  001CF6  503D               	movf	sqrt@exp^0,w,c
  3918  001CF8  0B01               	andlw	1
  3919  001CFA  6E38               	movwf	sqrt@p^0,c
  3920  001CFC  343E               	rlcf	(sqrt@exp+1)^0,w,c
  3921  001CFE  323E               	rrcf	(sqrt@exp+1)^0,f,c
  3922  001D00  323D               	rrcf	sqrt@exp^0,f,c
  3923  001D02  0E7F               	movlw	127
  3924  001D04  263D               	addwf	sqrt@exp^0,f,c
  3925  001D06  0E00               	movlw	0
  3926  001D08  223E               	addwfc	(sqrt@exp+1)^0,f,c
  3927  001D0A  90D8               	bcf	status,0,c
  3928  001D0C  3443               	rlcf	sqrt@frac^0,w,c
  3929  001D0E  6E34               	movwf	sqrt@tfrac^0,c
  3930  001D10  3444               	rlcf	(sqrt@frac+1)^0,w,c
  3931  001D12  6E35               	movwf	(sqrt@tfrac+1)^0,c
  3932  001D14  3445               	rlcf	(sqrt@frac+2)^0,w,c
  3933  001D16  6E36               	movwf	(sqrt@tfrac+2)^0,c
  3934  001D18  3446               	rlcf	(sqrt@frac+3)^0,w,c
  3935  001D1A  6E37               	movwf	(sqrt@tfrac+3)^0,c
  3936  001D1C  0E00               	movlw	0
  3937  001D1E  6E43               	movwf	sqrt@frac^0,c
  3938  001D20  0E00               	movlw	0
  3939  001D22  6E44               	movwf	(sqrt@frac+1)^0,c
  3940  001D24  0E00               	movlw	0
  3941  001D26  6E45               	movwf	(sqrt@frac+2)^0,c
  3942  001D28  0E00               	movlw	0
  3943  001D2A  6E46               	movwf	(sqrt@frac+3)^0,c
  3944  001D2C  0E00               	movlw	0
  3945  001D2E  6E39               	movwf	sqrt@grs^0,c
  3946  001D30  0E00               	movlw	0
  3947  001D32  6E3A               	movwf	(sqrt@grs+1)^0,c
  3948  001D34  0E00               	movlw	0
  3949  001D36  6E3B               	movwf	(sqrt@grs+2)^0,c
  3950  001D38  0E01               	movlw	1
  3951  001D3A  6E3C               	movwf	(sqrt@grs+3)^0,c
  3952  001D3C  5038               	movf	sqrt@p^0,w,c
  3953  001D3E  B4D8               	btfsc	status,2,c
  3954  001D40  EFA4  F00E         	goto	u4131
  3955  001D44  EFA6  F00E         	goto	u4130
  3956  001D48                     u4131:
  3957  001D48  EFAB  F00E         	goto	l4880
  3958  001D4C                     u4130:
  3959  001D4C  90D8               	bcf	status,0,c
  3960  001D4E  3634               	rlcf	sqrt@tfrac^0,f,c
  3961  001D50  3635               	rlcf	(sqrt@tfrac+1)^0,f,c
  3962  001D52  3636               	rlcf	(sqrt@tfrac+2)^0,f,c
  3963  001D54  3637               	rlcf	(sqrt@tfrac+3)^0,f,c
  3964  001D56                     l4880:
  3965  001D56  0E00               	movlw	0
  3966  001D58  6E33               	movwf	sqrt@i^0,c
  3967  001D5A  EF03  F00F         	goto	l4894
  3968  001D5E                     l4882:
  3969  001D5E  5039               	movf	sqrt@grs^0,w,c
  3970  001D60  1243               	iorwf	sqrt@frac^0,f,c
  3971  001D62  503A               	movf	(sqrt@grs+1)^0,w,c
  3972  001D64  1244               	iorwf	(sqrt@frac+1)^0,f,c
  3973  001D66  503B               	movf	(sqrt@grs+2)^0,w,c
  3974  001D68  1245               	iorwf	(sqrt@frac+2)^0,f,c
  3975  001D6A  503C               	movf	(sqrt@grs+3)^0,w,c
  3976  001D6C  1246               	iorwf	(sqrt@frac+3)^0,f,c
  3977  001D6E  5043               	movf	sqrt@frac^0,w,c
  3978  001D70  5C34               	subwf	sqrt@tfrac^0,w,c
  3979  001D72  5044               	movf	(sqrt@frac+1)^0,w,c
  3980  001D74  5835               	subwfb	(sqrt@tfrac+1)^0,w,c
  3981  001D76  5045               	movf	(sqrt@frac+2)^0,w,c
  3982  001D78  5836               	subwfb	(sqrt@tfrac+2)^0,w,c
  3983  001D7A  5046               	movf	(sqrt@frac+3)^0,w,c
  3984  001D7C  5837               	subwfb	(sqrt@tfrac+3)^0,w,c
  3985  001D7E  A0D8               	btfss	status,0,c
  3986  001D80  EFC4  F00E         	goto	u4141
  3987  001D84  EFC6  F00E         	goto	u4140
  3988  001D88                     u4141:
  3989  001D88  EFD8  F00E         	goto	l4886
  3990  001D8C                     u4140:
  3991  001D8C  5043               	movf	sqrt@frac^0,w,c
  3992  001D8E  5E34               	subwf	sqrt@tfrac^0,f,c
  3993  001D90  5044               	movf	(sqrt@frac+1)^0,w,c
  3994  001D92  5A35               	subwfb	(sqrt@tfrac+1)^0,f,c
  3995  001D94  5045               	movf	(sqrt@frac+2)^0,w,c
  3996  001D96  5A36               	subwfb	(sqrt@tfrac+2)^0,f,c
  3997  001D98  5046               	movf	(sqrt@frac+3)^0,w,c
  3998  001D9A  5A37               	subwfb	(sqrt@tfrac+3)^0,f,c
  3999  001D9C  5039               	movf	sqrt@grs^0,w,c
  4000  001D9E  2643               	addwf	sqrt@frac^0,f,c
  4001  001DA0  503A               	movf	(sqrt@grs+1)^0,w,c
  4002  001DA2  2244               	addwfc	(sqrt@frac+1)^0,f,c
  4003  001DA4  503B               	movf	(sqrt@grs+2)^0,w,c
  4004  001DA6  2245               	addwfc	(sqrt@frac+2)^0,f,c
  4005  001DA8  503C               	movf	(sqrt@grs+3)^0,w,c
  4006  001DAA  2246               	addwfc	(sqrt@frac+3)^0,f,c
  4007  001DAC  EFE8  F00E         	goto	l4888
  4008  001DB0                     l4886:
  4009  001DB0  1C39               	comf	sqrt@grs^0,w,c
  4010  001DB2  6E2E               	movwf	??_sqrt^0,c
  4011  001DB4  1C3A               	comf	(sqrt@grs+1)^0,w,c
  4012  001DB6  6E2F               	movwf	(??_sqrt+1)^0,c
  4013  001DB8  1C3B               	comf	(sqrt@grs+2)^0,w,c
  4014  001DBA  6E30               	movwf	(??_sqrt+2)^0,c
  4015  001DBC  1C3C               	comf	(sqrt@grs+3)^0,w,c
  4016  001DBE  6E31               	movwf	(??_sqrt+3)^0,c
  4017  001DC0  502E               	movf	??_sqrt^0,w,c
  4018  001DC2  1643               	andwf	sqrt@frac^0,f,c
  4019  001DC4  502F               	movf	(??_sqrt+1)^0,w,c
  4020  001DC6  1644               	andwf	(sqrt@frac+1)^0,f,c
  4021  001DC8  5030               	movf	(??_sqrt+2)^0,w,c
  4022  001DCA  1645               	andwf	(sqrt@frac+2)^0,f,c
  4023  001DCC  5031               	movf	(??_sqrt+3)^0,w,c
  4024  001DCE  1646               	andwf	(sqrt@frac+3)^0,f,c
  4025  001DD0                     l4888:
  4026  001DD0  C039  F02E         	movff	sqrt@grs,??_sqrt
  4027  001DD4  C03A  F02F         	movff	sqrt@grs+1,??_sqrt+1
  4028  001DD8  C03B  F030         	movff	sqrt@grs+2,??_sqrt+2
  4029  001DDC  C03C  F031         	movff	sqrt@grs+3,??_sqrt+3
  4030  001DE0  90D8               	bcf	status,0,c
  4031  001DE2  3231               	rrcf	(??_sqrt+3)^0,f,c
  4032  001DE4  3230               	rrcf	(??_sqrt+2)^0,f,c
  4033  001DE6  322F               	rrcf	(??_sqrt+1)^0,f,c
  4034  001DE8  322E               	rrcf	??_sqrt^0,f,c
  4035  001DEA  C02E  F039         	movff	??_sqrt,sqrt@grs
  4036  001DEE  C02F  F03A         	movff	??_sqrt+1,sqrt@grs+1
  4037  001DF2  C030  F03B         	movff	??_sqrt+2,sqrt@grs+2
  4038  001DF6  C031  F03C         	movff	??_sqrt+3,sqrt@grs+3
  4039  001DFA  90D8               	bcf	status,0,c
  4040  001DFC  3634               	rlcf	sqrt@tfrac^0,f,c
  4041  001DFE  3635               	rlcf	(sqrt@tfrac+1)^0,f,c
  4042  001E00  3636               	rlcf	(sqrt@tfrac+2)^0,f,c
  4043  001E02  3637               	rlcf	(sqrt@tfrac+3)^0,f,c
  4044  001E04  2A33               	incf	sqrt@i^0,f,c
  4045  001E06                     l4894:
  4046  001E06  0E18               	movlw	24
  4047  001E08  6433               	cpfsgt	sqrt@i^0,c
  4048  001E0A  EF09  F00F         	goto	u4151
  4049  001E0E  EF0B  F00F         	goto	u4150
  4050  001E12                     u4151:
  4051  001E12  EFAF  F00E         	goto	l4882
  4052  001E16                     u4150:
  4053  001E16  C043  F02E         	movff	sqrt@frac,??_sqrt
  4054  001E1A  C044  F02F         	movff	sqrt@frac+1,??_sqrt+1
  4055  001E1E  C045  F030         	movff	sqrt@frac+2,??_sqrt+2
  4056  001E22  C046  F031         	movff	sqrt@frac+3,??_sqrt+3
  4057  001E26  90D8               	bcf	status,0,c
  4058  001E28  3231               	rrcf	(??_sqrt+3)^0,f,c
  4059  001E2A  3230               	rrcf	(??_sqrt+2)^0,f,c
  4060  001E2C  322F               	rrcf	(??_sqrt+1)^0,f,c
  4061  001E2E  322E               	rrcf	??_sqrt^0,f,c
  4062  001E30  C02E  F043         	movff	??_sqrt,sqrt@frac
  4063  001E34  C02F  F044         	movff	??_sqrt+1,sqrt@frac+1
  4064  001E38  C030  F045         	movff	??_sqrt+2,sqrt@frac+2
  4065  001E3C  C031  F046         	movff	??_sqrt+3,sqrt@frac+3
  4066  001E40  0E01               	movlw	1
  4067  001E42  1443               	andwf	sqrt@frac^0,w,c
  4068  001E44  6E39               	movwf	sqrt@grs^0,c
  4069  001E46  0E00               	movlw	0
  4070  001E48  1444               	andwf	(sqrt@frac+1)^0,w,c
  4071  001E4A  6E3A               	movwf	(sqrt@grs+1)^0,c
  4072  001E4C  0E00               	movlw	0
  4073  001E4E  1445               	andwf	(sqrt@frac+2)^0,w,c
  4074  001E50  6E3B               	movwf	(sqrt@grs+2)^0,c
  4075  001E52  0E00               	movlw	0
  4076  001E54  1446               	andwf	(sqrt@frac+3)^0,w,c
  4077  001E56  6E3C               	movwf	(sqrt@grs+3)^0,c
  4078  001E58  C043  F02E         	movff	sqrt@frac,??_sqrt
  4079  001E5C  C044  F02F         	movff	sqrt@frac+1,??_sqrt+1
  4080  001E60  C045  F030         	movff	sqrt@frac+2,??_sqrt+2
  4081  001E64  C046  F031         	movff	sqrt@frac+3,??_sqrt+3
  4082  001E68  90D8               	bcf	status,0,c
  4083  001E6A  3231               	rrcf	(??_sqrt+3)^0,f,c
  4084  001E6C  3230               	rrcf	(??_sqrt+2)^0,f,c
  4085  001E6E  322F               	rrcf	(??_sqrt+1)^0,f,c
  4086  001E70  322E               	rrcf	??_sqrt^0,f,c
  4087  001E72  C02E  F043         	movff	??_sqrt,sqrt@frac
  4088  001E76  C02F  F044         	movff	??_sqrt+1,sqrt@frac+1
  4089  001E7A  C030  F045         	movff	??_sqrt+2,sqrt@frac+2
  4090  001E7E  C031  F046         	movff	??_sqrt+3,sqrt@frac+3
  4091  001E82  5039               	movf	sqrt@grs^0,w,c
  4092  001E84  2643               	addwf	sqrt@frac^0,f,c
  4093  001E86  503A               	movf	(sqrt@grs+1)^0,w,c
  4094  001E88  2244               	addwfc	(sqrt@frac+1)^0,f,c
  4095  001E8A  503B               	movf	(sqrt@grs+2)^0,w,c
  4096  001E8C  2245               	addwfc	(sqrt@frac+2)^0,f,c
  4097  001E8E  503C               	movf	(sqrt@grs+3)^0,w,c
  4098  001E90  2246               	addwfc	(sqrt@frac+3)^0,f,c
  4099  001E92  A046               	btfss	(sqrt@frac+3)^0,0,c
  4100  001E94  EF4E  F00F         	goto	u4161
  4101  001E98  EF50  F00F         	goto	u4160
  4102  001E9C                     u4161:
  4103  001E9C  EF67  F00F         	goto	l4906
  4104  001EA0                     u4160:
  4105  001EA0  C043  F02E         	movff	sqrt@frac,??_sqrt
  4106  001EA4  C044  F02F         	movff	sqrt@frac+1,??_sqrt+1
  4107  001EA8  C045  F030         	movff	sqrt@frac+2,??_sqrt+2
  4108  001EAC  C046  F031         	movff	sqrt@frac+3,??_sqrt+3
  4109  001EB0  90D8               	bcf	status,0,c
  4110  001EB2  3231               	rrcf	(??_sqrt+3)^0,f,c
  4111  001EB4  3230               	rrcf	(??_sqrt+2)^0,f,c
  4112  001EB6  322F               	rrcf	(??_sqrt+1)^0,f,c
  4113  001EB8  322E               	rrcf	??_sqrt^0,f,c
  4114  001EBA  C02E  F043         	movff	??_sqrt,sqrt@frac
  4115  001EBE  C02F  F044         	movff	??_sqrt+1,sqrt@frac+1
  4116  001EC2  C030  F045         	movff	??_sqrt+2,sqrt@frac+2
  4117  001EC6  C031  F046         	movff	??_sqrt+3,sqrt@frac+3
  4118  001ECA  4A3D               	infsnz	sqrt@exp^0,f,c
  4119  001ECC  2A3E               	incf	(sqrt@exp+1)^0,f,c
  4120  001ECE                     l4906:
  4121  001ECE  0EFF               	movlw	255
  4122  001ED0  1443               	andwf	sqrt@frac^0,w,c
  4123  001ED2  6E3F               	movwf	sqrt@root^0,c
  4124  001ED4  0EFF               	movlw	255
  4125  001ED6  1444               	andwf	(sqrt@frac+1)^0,w,c
  4126  001ED8  6E40               	movwf	(sqrt@root+1)^0,c
  4127  001EDA  0E7F               	movlw	127
  4128  001EDC  1445               	andwf	(sqrt@frac+2)^0,w,c
  4129  001EDE  6E41               	movwf	(sqrt@root+2)^0,c
  4130  001EE0  0E00               	movlw	0
  4131  001EE2  1446               	andwf	(sqrt@frac+3)^0,w,c
  4132  001EE4  6E42               	movwf	(sqrt@root+3)^0,c
  4133  001EE6  C03D  F038         	movff	sqrt@exp,sqrt@p
  4134  001EEA  A038               	btfss	sqrt@p^0,0,c
  4135  001EEC  EF7A  F00F         	goto	u4171
  4136  001EF0  EF7C  F00F         	goto	u4170
  4137  001EF4                     u4171:
  4138  001EF4  EF7D  F00F         	goto	l4914
  4139  001EF8                     u4170:
  4140  001EF8  8E41               	bsf	(sqrt@root+2)^0,7,c
  4141  001EFA                     l4914:
  4142  001EFA  90D8               	bcf	status,0,c
  4143  001EFC  3038               	rrcf	sqrt@p^0,w,c
  4144  001EFE  6E42               	movwf	(sqrt@root+3)^0,c
  4145  001F00  9E42               	bcf	(sqrt@root+3)^0,7,c
  4146  001F02  EF5A  F00E         	goto	l4858
  4147  001F06                     l1842:
  4148  001F06  0012               	return		;funcret
  4149  001F08                     __end_of_sqrt:
  4150                           	callstack 0
  4151                           
  4152 ;; *************** function _LCD_DisplayResults *****************
  4153 ;; Defined at:
  4154 ;;		line 49 in file "LCD.c"
  4155 ;; Parameters:    Size  Location     Type
  4156 ;;		None
  4157 ;; Auto vars:     Size  Location     Type
  4158 ;;		None
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4168 ;;      Params:         0       0       0       0       0       0       0       0       0
  4169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4171 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4172 ;;Total ram usage:        0 bytes
  4173 ;; Hardware stack levels used:    1
  4174 ;; Hardware stack levels required when called:    7
  4175 ;; This function calls:
  4176 ;;		_LCD_GoTo
  4177 ;;		_LCD_WriteLine
  4178 ;;		_sprintf
  4179 ;; This function is called by:
  4180 ;;		_ComputeWaterVol
  4181 ;; This function uses a non-reentrant model
  4182 ;;
  4183                           
  4184                           	psect	text20
  4185  00367C                     __ptext20:
  4186                           	callstack 0
  4187  00367C                     _LCD_DisplayResults:
  4188                           	callstack 22
  4189  00367C                     
  4190                           ;LCD.c: 51: LCD_GoTo (0, 0);
  4191  00367C  0E00               	movlw	0
  4192  00367E  6E06               	movwf	LCD_GoTo@iCharPos^0,c
  4193  003680  0E00               	movlw	0
  4194  003682  EC93  F01C         	call	_LCD_GoTo
  4195  003686                     
  4196                           ;LCD.c: 52: sprintf(sLine1, "Gals:%4u  %3u%% ", giGals, giPercentFull);
  4197  003686  0E6C               	movlw	low _sLine1
  4198  003688  6E0D               	movwf	sprintf@sp^0,c
  4199  00368A  0E01               	movlw	high _sLine1
  4200  00368C  6E0E               	movwf	(sprintf@sp+1)^0,c
  4201  00368E  0E57               	movlw	low STR_3
  4202  003690  6E0F               	movwf	sprintf@f^0,c
  4203  003692  0E08               	movlw	high STR_3
  4204  003694  6E10               	movwf	(sprintf@f+1)^0,c
  4205  003696  C0D9  F011         	movff	_giGals,?_sprintf+4	;volatile
  4206  00369A  C0DA  F012         	movff	_giGals+1,?_sprintf+5	;volatile
  4207  00369E  C0D7  F013         	movff	_giPercentFull,?_sprintf+6	;volatile
  4208  0036A2  C0D8  F014         	movff	_giPercentFull+1,?_sprintf+7	;volatile
  4209  0036A6  ECBB  F008         	call	_sprintf	;wreg free
  4210  0036AA                     
  4211                           ;LCD.c: 53: LCD_WriteLine (sLine1);
  4212  0036AA  0E6C               	movlw	low _sLine1
  4213  0036AC  6E09               	movwf	LCD_WriteLine@iData^0,c
  4214  0036AE  0E01               	movlw	high _sLine1
  4215  0036B0  6E0A               	movwf	(LCD_WriteLine@iData+1)^0,c
  4216  0036B2  EC85  F019         	call	_LCD_WriteLine	;wreg free
  4217  0036B6                     
  4218                           ;LCD.c: 55: __nop();
  4219  0036B6  F000               	nop	
  4220  0036B8                     
  4221                           ;LCD.c: 56: LCD_GoTo(1, 0);
  4222  0036B8  0E00               	movlw	0
  4223  0036BA  6E06               	movwf	LCD_GoTo@iCharPos^0,c
  4224  0036BC  0E01               	movlw	1
  4225  0036BE  EC93  F01C         	call	_LCD_GoTo
  4226  0036C2                     
  4227                           ;LCD.c: 57: sprintf(sLine2, "Echo:%4u %2u/%2u", giEmptySpace_mm,;LCD.c: 58: giAirTempC, 
      +                          giAirTempF);
  4228  0036C2  0E08               	movlw	low _sLine2
  4229  0036C4  6E0D               	movwf	sprintf@sp^0,c
  4230  0036C6  0E01               	movlw	high _sLine2
  4231  0036C8  6E0E               	movwf	(sprintf@sp+1)^0,c
  4232  0036CA  0E68               	movlw	low STR_4
  4233  0036CC  6E0F               	movwf	sprintf@f^0,c
  4234  0036CE  0E08               	movlw	high STR_4
  4235  0036D0  6E10               	movwf	(sprintf@f+1)^0,c
  4236  0036D2  C0D5  F011         	movff	_giEmptySpace_mm,?_sprintf+4	;volatile
  4237  0036D6  C0D6  F012         	movff	_giEmptySpace_mm+1,?_sprintf+5	;volatile
  4238  0036DA  C0DD  F013         	movff	_giAirTempC,?_sprintf+6	;volatile
  4239  0036DE  C0DE  F014         	movff	_giAirTempC+1,?_sprintf+7	;volatile
  4240  0036E2  C0DB  F015         	movff	_giAirTempF,?_sprintf+8	;volatile
  4241  0036E6  C0DC  F016         	movff	_giAirTempF+1,?_sprintf+9	;volatile
  4242  0036EA  ECBB  F008         	call	_sprintf	;wreg free
  4243                           
  4244                           ;LCD.c: 59: LCD_WriteLine (sLine2);
  4245  0036EE  0E08               	movlw	low _sLine2
  4246  0036F0  6E09               	movwf	LCD_WriteLine@iData^0,c
  4247  0036F2  0E01               	movlw	high _sLine2
  4248  0036F4  6E0A               	movwf	(LCD_WriteLine@iData+1)^0,c
  4249  0036F6  EC85  F019         	call	_LCD_WriteLine	;wreg free
  4250  0036FA                     
  4251                           ;LCD.c: 60: __nop();
  4252  0036FA  F000               	nop	
  4253  0036FC  0012               	return		;funcret
  4254  0036FE                     __end_of_LCD_DisplayResults:
  4255                           	callstack 0
  4256                           
  4257 ;; *************** function _LCD_WriteLine *****************
  4258 ;; Defined at:
  4259 ;;		line 122 in file "LCD.c"
  4260 ;; Parameters:    Size  Location     Type
  4261 ;;  iData           2    8[COMRAM] PTR unsigned char 
  4262 ;;		 -> sLine2(100), sLine1(100), 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  sLine          17   10[COMRAM] unsigned char [17]
  4265 ;;  i               2   28[COMRAM] int 
  4266 ;;  bInString       1   27[COMRAM] unsigned char 
  4267 ;; Return value:  Size  Location     Type
  4268 ;;                  1    wreg      void 
  4269 ;; Registers used:
  4270 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4271 ;; Tracked objects:
  4272 ;;		On entry : 0/0
  4273 ;;		On exit  : 0/0
  4274 ;;		Unchanged: 0/0
  4275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4276 ;;      Params:         2       0       0       0       0       0       0       0       0
  4277 ;;      Locals:        20       0       0       0       0       0       0       0       0
  4278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4279 ;;      Totals:        22       0       0       0       0       0       0       0       0
  4280 ;;Total ram usage:       22 bytes
  4281 ;; Hardware stack levels used:    1
  4282 ;; Hardware stack levels required when called:    6
  4283 ;; This function calls:
  4284 ;;		_LCD_WriteString
  4285 ;; This function is called by:
  4286 ;;		_LCD_DisplayResults
  4287 ;; This function uses a non-reentrant model
  4288 ;;
  4289                           
  4290                           	psect	text21
  4291  00330A                     __ptext21:
  4292                           	callstack 0
  4293  00330A                     _LCD_WriteLine:
  4294                           	callstack 22
  4295  00330A                     
  4296                           ;LCD.c: 124: int i;;LCD.c: 125: uint8_t sLine[17];;LCD.c: 126: bool bInString = 1;
  4297  00330A  0E01               	movlw	1
  4298  00330C  6E1C               	movwf	LCD_WriteLine@bInString^0,c
  4299                           
  4300                           ;LCD.c: 129: for (i = 0; i < 16; i++)
  4301  00330E  0E00               	movlw	0
  4302  003310  6E1E               	movwf	(LCD_WriteLine@i+1)^0,c
  4303  003312  0E00               	movlw	0
  4304  003314  6E1D               	movwf	LCD_WriteLine@i^0,c
  4305  003316                     l4650:
  4306                           
  4307                           ;LCD.c: 130: {;LCD.c: 131: if (bInString)
  4308  003316  501C               	movf	LCD_WriteLine@bInString^0,w,c
  4309  003318  B4D8               	btfsc	status,2,c
  4310  00331A  EF91  F019         	goto	u3921
  4311  00331E  EF93  F019         	goto	u3920
  4312  003322                     u3921:
  4313  003322  EFBD  F019         	goto	l4660
  4314  003326                     u3920:
  4315  003326                     
  4316                           ;LCD.c: 132: {;LCD.c: 133: if (iData[i] == 0)
  4317  003326  501D               	movf	LCD_WriteLine@i^0,w,c
  4318  003328  2409               	addwf	LCD_WriteLine@iData^0,w,c
  4319  00332A  6ED9               	movwf	fsr2l,c
  4320  00332C  501E               	movf	(LCD_WriteLine@i+1)^0,w,c
  4321  00332E  200A               	addwfc	(LCD_WriteLine@iData+1)^0,w,c
  4322  003330  6EDA               	movwf	fsr2h,c
  4323  003332  50DF               	movf	indf2,w,c
  4324  003334  A4D8               	btfss	status,2,c
  4325  003336  EF9F  F019         	goto	u3931
  4326  00333A  EFA1  F019         	goto	u3930
  4327  00333E                     u3931:
  4328  00333E  EFAD  F019         	goto	l4658
  4329  003342                     u3930:
  4330  003342                     
  4331                           ;LCD.c: 134: {;LCD.c: 135: bInString = 0;
  4332  003342  0E00               	movlw	0
  4333  003344  6E1C               	movwf	LCD_WriteLine@bInString^0,c
  4334  003346                     
  4335                           ;LCD.c: 136: iData[i] = 0x20;
  4336  003346  501D               	movf	LCD_WriteLine@i^0,w,c
  4337  003348  2409               	addwf	LCD_WriteLine@iData^0,w,c
  4338  00334A  6ED9               	movwf	fsr2l,c
  4339  00334C  501E               	movf	(LCD_WriteLine@i+1)^0,w,c
  4340  00334E  200A               	addwfc	(LCD_WriteLine@iData+1)^0,w,c
  4341  003350  6EDA               	movwf	fsr2h,c
  4342  003352  0E20               	movlw	32
  4343  003354  6EDF               	movwf	indf2,c
  4344                           
  4345                           ;LCD.c: 137: }
  4346  003356  EFC5  F019         	goto	l4662
  4347  00335A                     l4658:
  4348                           
  4349                           ;LCD.c: 138: else;LCD.c: 139: sLine[i] = iData[i];
  4350  00335A  501D               	movf	LCD_WriteLine@i^0,w,c
  4351  00335C  2409               	addwf	LCD_WriteLine@iData^0,w,c
  4352  00335E  6ED9               	movwf	fsr2l,c
  4353  003360  501E               	movf	(LCD_WriteLine@i+1)^0,w,c
  4354  003362  200A               	addwfc	(LCD_WriteLine@iData+1)^0,w,c
  4355  003364  6EDA               	movwf	fsr2h,c
  4356  003366  0E0B               	movlw	low LCD_WriteLine@sLine
  4357  003368  241D               	addwf	LCD_WriteLine@i^0,w,c
  4358  00336A  6EE1               	movwf	fsr1l,c
  4359  00336C  0E00               	movlw	high LCD_WriteLine@sLine
  4360  00336E  201E               	addwfc	(LCD_WriteLine@i+1)^0,w,c
  4361  003370  6EE2               	movwf	fsr1h,c
  4362  003372  CFDF FFE7          	movff	indf2,indf1
  4363  003376  EFC5  F019         	goto	l4662
  4364  00337A                     l4660:
  4365                           
  4366                           ;LCD.c: 141: sLine[i] = 0x20;
  4367  00337A  0E0B               	movlw	low LCD_WriteLine@sLine
  4368  00337C  241D               	addwf	LCD_WriteLine@i^0,w,c
  4369  00337E  6ED9               	movwf	fsr2l,c
  4370  003380  0E00               	movlw	high LCD_WriteLine@sLine
  4371  003382  201E               	addwfc	(LCD_WriteLine@i+1)^0,w,c
  4372  003384  6EDA               	movwf	fsr2h,c
  4373  003386  0E20               	movlw	32
  4374  003388  6EDF               	movwf	indf2,c
  4375  00338A                     l4662:
  4376  00338A  4A1D               	infsnz	LCD_WriteLine@i^0,f,c
  4377  00338C  2A1E               	incf	(LCD_WriteLine@i+1)^0,f,c
  4378  00338E  BE1E               	btfsc	(LCD_WriteLine@i+1)^0,7,c
  4379  003390  EFD3  F019         	goto	u3941
  4380  003394  501E               	movf	(LCD_WriteLine@i+1)^0,w,c
  4381  003396  E109               	bnz	u3940
  4382  003398  0E10               	movlw	16
  4383  00339A  5C1D               	subwf	LCD_WriteLine@i^0,w,c
  4384  00339C  A0D8               	btfss	status,0,c
  4385  00339E  EFD3  F019         	goto	u3941
  4386  0033A2  EFD5  F019         	goto	u3940
  4387  0033A6                     u3941:
  4388  0033A6  EF8B  F019         	goto	l4650
  4389  0033AA                     u3940:
  4390  0033AA                     
  4391                           ;LCD.c: 142: };LCD.c: 143: sLine[i] = 0;
  4392  0033AA  0E0B               	movlw	low LCD_WriteLine@sLine
  4393  0033AC  241D               	addwf	LCD_WriteLine@i^0,w,c
  4394  0033AE  6ED9               	movwf	fsr2l,c
  4395  0033B0  0E00               	movlw	high LCD_WriteLine@sLine
  4396  0033B2  201E               	addwfc	(LCD_WriteLine@i+1)^0,w,c
  4397  0033B4  6EDA               	movwf	fsr2h,c
  4398  0033B6  0E00               	movlw	0
  4399  0033B8  6EDF               	movwf	indf2,c
  4400  0033BA                     
  4401                           ;LCD.c: 144: LCD_WriteString (sLine);
  4402  0033BA  0E0B               	movlw	low LCD_WriteLine@sLine
  4403  0033BC  6E04               	movwf	LCD_WriteString@iData^0,c
  4404  0033BE  0E00               	movlw	high LCD_WriteLine@sLine
  4405  0033C0  6E05               	movwf	(LCD_WriteString@iData+1)^0,c
  4406  0033C2  ECBB  F01B         	call	_LCD_WriteString	;wreg free
  4407  0033C6  0012               	return		;funcret
  4408  0033C8                     __end_of_LCD_WriteLine:
  4409                           	callstack 0
  4410                           
  4411 ;; *************** function _LCD_WriteString *****************
  4412 ;; Defined at:
  4413 ;;		line 114 in file "LCD.c"
  4414 ;; Parameters:    Size  Location     Type
  4415 ;;  iData           2    3[COMRAM] PTR unsigned char 
  4416 ;;		 -> LCD_WriteLine@sLine(17), STR_1(12), 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  ix              1    7[COMRAM] unsigned char 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4428 ;;      Params:         2       0       0       0       0       0       0       0       0
  4429 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4430 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4431 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4432 ;;Total ram usage:        5 bytes
  4433 ;; Hardware stack levels used:    1
  4434 ;; Hardware stack levels required when called:    5
  4435 ;; This function calls:
  4436 ;;		_LCD_WriteChar
  4437 ;; This function is called by:
  4438 ;;		_main
  4439 ;;		_LCD_WriteLine
  4440 ;; This function uses a non-reentrant model
  4441 ;;
  4442                           
  4443                           	psect	text22
  4444  003776                     __ptext22:
  4445                           	callstack 0
  4446  003776                     _LCD_WriteString:
  4447                           	callstack 25
  4448  003776                     
  4449                           ;LCD.c: 116: uint8_t ix = 0;
  4450  003776  0E00               	movlw	0
  4451  003778  6E08               	movwf	LCD_WriteString@ix^0,c
  4452                           
  4453                           ;LCD.c: 117: while (iData[ix]) {
  4454  00377A  EFD8  F01B         	goto	l4224
  4455  00377E                     l4220:
  4456                           
  4457                           ;LCD.c: 118: LCD_WriteChar (iData[ix]);
  4458  00377E  5008               	movf	LCD_WriteString@ix^0,w,c
  4459  003780  2404               	addwf	LCD_WriteString@iData^0,w,c
  4460  003782  6E06               	movwf	??_LCD_WriteString^0,c
  4461  003784  0E00               	movlw	0
  4462  003786  2005               	addwfc	(LCD_WriteString@iData+1)^0,w,c
  4463  003788  6E07               	movwf	(??_LCD_WriteString+1)^0,c
  4464  00378A  C006  FFF6         	movff	??_LCD_WriteString,tblptrl
  4465  00378E  C007  FFF7         	movff	??_LCD_WriteString+1,tblptrh
  4466  003792  6AF8               	clrf	tblptru,c
  4467  003794  0E07               	movlw	(high __ramtop+-1)
  4468  003796  64F7               	cpfsgt	tblptrh,c
  4469  003798  D003               	bra	u3217
  4470  00379A  0008               	tblrd		*
  4471  00379C  50F5               	movf	tablat,w,c
  4472  00379E  D005               	bra	u3210
  4473  0037A0                     u3217:
  4474  0037A0  CFF6 FFE1          	movff	tblptrl,fsr1l
  4475  0037A4  CFF7 FFE2          	movff	tblptrh,fsr1h
  4476  0037A8  50E7               	movf	indf1,w,c
  4477  0037AA                     u3210:
  4478  0037AA  ECED  F01C         	call	_LCD_WriteChar
  4479  0037AE                     
  4480                           ;LCD.c: 119: ix ++;
  4481  0037AE  2A08               	incf	LCD_WriteString@ix^0,f,c
  4482  0037B0                     l4224:
  4483  0037B0  5008               	movf	LCD_WriteString@ix^0,w,c
  4484  0037B2  2404               	addwf	LCD_WriteString@iData^0,w,c
  4485  0037B4  6E06               	movwf	??_LCD_WriteString^0,c
  4486  0037B6  0E00               	movlw	0
  4487  0037B8  2005               	addwfc	(LCD_WriteString@iData+1)^0,w,c
  4488  0037BA  6E07               	movwf	(??_LCD_WriteString+1)^0,c
  4489  0037BC  C006  FFF6         	movff	??_LCD_WriteString,tblptrl
  4490  0037C0  C007  FFF7         	movff	??_LCD_WriteString+1,tblptrh
  4491  0037C4  6AF8               	clrf	tblptru,c
  4492  0037C6  0E07               	movlw	(high __ramtop+-1)
  4493  0037C8  64F7               	cpfsgt	tblptrh,c
  4494  0037CA  D003               	bra	u3227
  4495  0037CC  0008               	tblrd		*
  4496  0037CE  50F5               	movf	tablat,w,c
  4497  0037D0  D005               	bra	u3220
  4498  0037D2                     u3227:
  4499  0037D2  CFF6 FFE1          	movff	tblptrl,fsr1l
  4500  0037D6  CFF7 FFE2          	movff	tblptrh,fsr1h
  4501  0037DA  50E7               	movf	indf1,w,c
  4502  0037DC                     u3220:
  4503  0037DC  0900               	iorlw	0
  4504  0037DE  A4D8               	btfss	status,2,c
  4505  0037E0  EFF4  F01B         	goto	u3231
  4506  0037E4  EFF6  F01B         	goto	u3230
  4507  0037E8                     u3231:
  4508  0037E8  EFBF  F01B         	goto	l4220
  4509  0037EC                     u3230:
  4510  0037EC  0012               	return		;funcret
  4511  0037EE                     __end_of_LCD_WriteString:
  4512                           	callstack 0
  4513                           
  4514 ;; *************** function _LCD_WriteChar *****************
  4515 ;; Defined at:
  4516 ;;		line 83 in file "LCD.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  iChar           1    wreg     unsigned char 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  iChar           1    2[COMRAM] unsigned char 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;                  1    wreg      void 
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0, cstack
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4530 ;;      Params:         0       0       0       0       0       0       0       0       0
  4531 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4532 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4533 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4534 ;;Total ram usage:        3 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:    4
  4537 ;; This function calls:
  4538 ;;		_LCD_WaitNotBusy
  4539 ;; This function is called by:
  4540 ;;		_LCD_WriteString
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text23
  4545  0039DA                     __ptext23:
  4546                           	callstack 0
  4547  0039DA                     _LCD_WriteChar:
  4548                           	callstack 25
  4549                           
  4550                           ;incstack = 0
  4551                           ;LCD_WriteChar@iChar stored from wreg
  4552  0039DA  6E03               	movwf	LCD_WriteChar@iChar^0,c
  4553  0039DC  8689               	bsf	137,3,c	;volatile
  4554  0039DE  9489               	bcf	137,2,c	;volatile
  4555  0039E0  8289               	bsf	137,1,c	;volatile
  4556  0039E2                     
  4557                           ;LCD.c: 93: LATB = iChar;
  4558  0039E2  C003  FF8A         	movff	LCD_WriteChar@iChar,3978	;volatile
  4559  0039E6                     
  4560                           ;LCD.c: 94: LATC6 = iChar >> 6;
  4561  0039E6  C003  F001         	movff	LCD_WriteChar@iChar,??_LCD_WriteChar
  4562  0039EA  0E06               	movlw	6
  4563  0039EC  6E02               	movwf	(??_LCD_WriteChar+1)^0,c
  4564  0039EE                     u2335:
  4565  0039EE  90D8               	bcf	status,0,c
  4566  0039F0  3201               	rrcf	??_LCD_WriteChar^0,f,c
  4567  0039F2  2E02               	decfsz	(??_LCD_WriteChar+1)^0,f,c
  4568  0039F4  EFF7  F01C         	goto	u2335
  4569  0039F8  3001               	rrcf	??_LCD_WriteChar^0,w,c
  4570  0039FA  B0D8               	btfsc	status,0,c
  4571  0039FC  EF02  F01D         	goto	u2341
  4572  003A00  EF05  F01D         	goto	u2340
  4573  003A04                     u2341:
  4574  003A04  8C8B               	bsf	3979,6,c	;volatile
  4575  003A06  EF06  F01D         	goto	u2355
  4576  003A0A                     u2340:
  4577  003A0A  9C8B               	bcf	3979,6,c	;volatile
  4578  003A0C                     u2355:
  4579  003A0C                     
  4580                           ;LCD.c: 95: LATC7 = iChar >> 7;
  4581  003A0C  6A01               	clrf	??_LCD_WriteChar^0,c
  4582  003A0E  AE03               	btfss	LCD_WriteChar@iChar^0,7,c
  4583  003A10  D001               	bra	u2365
  4584  003A12  2A01               	incf	??_LCD_WriteChar^0,f,c
  4585  003A14                     u2365:
  4586  003A14  3001               	rrcf	??_LCD_WriteChar^0,w,c
  4587  003A16  B0D8               	btfsc	status,0,c
  4588  003A18  EF10  F01D         	goto	u2371
  4589  003A1C  EF13  F01D         	goto	u2370
  4590  003A20                     u2371:
  4591  003A20  8E8B               	bsf	3979,7,c	;volatile
  4592  003A22  EF14  F01D         	goto	u2385
  4593  003A26                     u2370:
  4594  003A26  9E8B               	bcf	3979,7,c	;volatile
  4595  003A28                     u2385:
  4596  003A28  9289               	bcf	137,1,c	;volatile
  4597  003A2A                     
  4598                           ;LCD.c: 99: LCD_WaitNotBusy();
  4599  003A2A  ECDE  F01D         	call	_LCD_WaitNotBusy	;wreg free
  4600  003A2E  0012               	return		;funcret
  4601  003A30                     __end_of_LCD_WriteChar:
  4602                           	callstack 0
  4603                           
  4604 ;; *************** function _ComputeTemp *****************
  4605 ;; Defined at:
  4606 ;;		line 56 in file "TempCalc.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;		None
  4609 ;; Auto vars:     Size  Location     Type
  4610 ;;		None
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4620 ;;      Params:         0       0       0       0       0       0       0       0       0
  4621 ;;      Locals:         0      12       0       0       0       0       0       0       0
  4622 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4623 ;;      Totals:         0      14       0       0       0       0       0       0       0
  4624 ;;Total ram usage:       14 bytes
  4625 ;; Hardware stack levels used:    1
  4626 ;; Hardware stack levels required when called:    7
  4627 ;; This function calls:
  4628 ;;		___fladd
  4629 ;;		___fldiv
  4630 ;;		___flmul
  4631 ;;		___fltol
  4632 ;;		___xxtofl
  4633 ;;		_log
  4634 ;;		_round
  4635 ;; This function is called by:
  4636 ;;		_main
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text24
  4641  002450                     __ptext24:
  4642                           	callstack 0
  4643  002450                     _ComputeTemp:
  4644                           	callstack 23
  4645  002450                     
  4646                           ;TempCalc.c: 59: { TMR3H = 0; TMR3L = 0; T3CONbits.TMR3ON = 1;};
  4647  002450  0E00               	movlw	0
  4648  002452  6EB3               	movwf	179,c	;volatile
  4649  002454  0E00               	movlw	0
  4650  002456  6EB2               	movwf	178,c	;volatile
  4651  002458  80B1               	bsf	177,0,c	;volatile
  4652  00245A                     
  4653                           ;TempCalc.c: 60: gfRtherm = ((4700.0 * giTempCapture) / (1023 - giTempCapture));
  4654  00245A  0E00               	movlw	0
  4655  00245C  6E5A               	movwf	___flmul@a^0,c
  4656  00245E  0EE0               	movlw	224
  4657  002460  6E5B               	movwf	(___flmul@a+1)^0,c
  4658  002462  0E92               	movlw	146
  4659  002464  6E5C               	movwf	(___flmul@a+2)^0,c
  4660  002466  0E45               	movlw	69
  4661  002468  6E5D               	movwf	(___flmul@a+3)^0,c
  4662  00246A  C0F2  F034         	movff	_giTempCapture,___xxtofl@val	;volatile
  4663  00246E  C0F3  F035         	movff	_giTempCapture+1,___xxtofl@val+1	;volatile
  4664  002472  6A36               	clrf	(___xxtofl@val+2)^0,c
  4665  002474  6A37               	clrf	(___xxtofl@val+3)^0,c
  4666  002476  0E00               	movlw	0
  4667  002478  EC4C  F013         	call	___xxtofl
  4668  00247C  C034  F056         	movff	?___xxtofl,___flmul@b
  4669  002480  C035  F057         	movff	?___xxtofl+1,___flmul@b+1
  4670  002484  C036  F058         	movff	?___xxtofl+2,___flmul@b+2
  4671  002488  C037  F059         	movff	?___xxtofl+3,___flmul@b+3
  4672  00248C  ECA5  F006         	call	___flmul	;wreg free
  4673  002490  C056  F001         	movff	?___flmul,___fldiv@b
  4674  002494  C057  F002         	movff	?___flmul+1,___fldiv@b+1
  4675  002498  C058  F003         	movff	?___flmul+2,___fldiv@b+2
  4676  00249C  C059  F004         	movff	?___flmul+3,___fldiv@b+3
  4677  0024A0  0EFF               	movlw	255
  4678  0024A2  0100               	movlb	0	; () banked
  4679  0024A4  6F87               	movwf	??_ComputeTemp& (0+255),b
  4680  0024A6  0E03               	movlw	3
  4681  0024A8  6F88               	movwf	(??_ComputeTemp+1)& (0+255),b
  4682  0024AA  51F2               	movf	_giTempCapture& (0+255),w,b	;volatile
  4683  0024AC  5F87               	subwf	??_ComputeTemp& (0+255),f,b
  4684  0024AE  51F3               	movf	(_giTempCapture+1)& (0+255),w,b	;volatile
  4685  0024B0  5B88               	subwfb	(??_ComputeTemp+1)& (0+255),f,b
  4686  0024B2  C087  F034         	movff	??_ComputeTemp,___xxtofl@val
  4687  0024B6  C088  F035         	movff	??_ComputeTemp+1,___xxtofl@val+1
  4688  0024BA  6A36               	clrf	(___xxtofl@val+2)^0,c
  4689  0024BC  6A37               	clrf	(___xxtofl@val+3)^0,c
  4690  0024BE  0E00               	movlw	0
  4691  0024C0  EC4C  F013         	call	___xxtofl
  4692  0024C4  C034  F005         	movff	?___xxtofl,___fldiv@a
  4693  0024C8  C035  F006         	movff	?___xxtofl+1,___fldiv@a+1
  4694  0024CC  C036  F007         	movff	?___xxtofl+2,___fldiv@a+2
  4695  0024D0  C037  F008         	movff	?___xxtofl+3,___fldiv@a+3
  4696  0024D4  EC9B  F00A         	call	___fldiv	;wreg free
  4697  0024D8  C001  F0C5         	movff	?___fldiv,_gfRtherm
  4698  0024DC  C002  F0C6         	movff	?___fldiv+1,_gfRtherm+1
  4699  0024E0  C003  F0C7         	movff	?___fldiv+2,_gfRtherm+2
  4700  0024E4  C004  F0C8         	movff	?___fldiv+3,_gfRtherm+3
  4701  0024E8                     
  4702                           ;TempCalc.c: 61: gfRRatio = gfRtherm / 0.01763227;
  4703  0024E8  C0C5  F001         	movff	_gfRtherm,___fldiv@b
  4704  0024EC  C0C6  F002         	movff	_gfRtherm+1,___fldiv@b+1
  4705  0024F0  C0C7  F003         	movff	_gfRtherm+2,___fldiv@b+2
  4706  0024F4  C0C8  F004         	movff	_gfRtherm+3,___fldiv@b+3
  4707  0024F8  0E8D               	movlw	141
  4708  0024FA  6E05               	movwf	___fldiv@a^0,c
  4709  0024FC  0E71               	movlw	113
  4710  0024FE  6E06               	movwf	(___fldiv@a+1)^0,c
  4711  002500  0E90               	movlw	144
  4712  002502  6E07               	movwf	(___fldiv@a+2)^0,c
  4713  002504  0E3C               	movlw	60
  4714  002506  6E08               	movwf	(___fldiv@a+3)^0,c
  4715  002508  EC9B  F00A         	call	___fldiv	;wreg free
  4716  00250C  C001  F0C1         	movff	?___fldiv,_gfRRatio
  4717  002510  C002  F0C2         	movff	?___fldiv+1,_gfRRatio+1
  4718  002514  C003  F0C3         	movff	?___fldiv+2,_gfRRatio+2
  4719  002518  C004  F0C4         	movff	?___fldiv+3,_gfRRatio+3
  4720  00251C                     
  4721                           ;TempCalc.c: 63: gfLnRRatio = log(gfRRatio);
  4722  00251C  C0C1  F081         	movff	_gfRRatio,log@x
  4723  002520  C0C2  F082         	movff	_gfRRatio+1,log@x+1
  4724  002524  C0C3  F083         	movff	_gfRRatio+2,log@x+2
  4725  002528  C0C4  F084         	movff	_gfRRatio+3,log@x+3
  4726  00252C  EC26  F014         	call	_log	;wreg free
  4727  002530  C081  F0EE         	movff	?_log,_gfLnRRatio
  4728  002534  C082  F0EF         	movff	?_log+1,_gfLnRRatio+1
  4729  002538  C083  F0F0         	movff	?_log+2,_gfLnRRatio+2
  4730  00253C  C084  F0F1         	movff	?_log+3,_gfLnRRatio+3
  4731  002540                     
  4732                           ;TempCalc.c: 66: gfAirTempC = 3950.0 / gfLnRRatio - 273.15;
  4733  002540  C0EE  F005         	movff	_gfLnRRatio,___fldiv@a
  4734  002544  C0EF  F006         	movff	_gfLnRRatio+1,___fldiv@a+1
  4735  002548  C0F0  F007         	movff	_gfLnRRatio+2,___fldiv@a+2
  4736  00254C  C0F1  F008         	movff	_gfLnRRatio+3,___fldiv@a+3
  4737  002550  0E00               	movlw	0
  4738  002552  6E01               	movwf	___fldiv@b^0,c
  4739  002554  0EE0               	movlw	224
  4740  002556  6E02               	movwf	(___fldiv@b+1)^0,c
  4741  002558  0E76               	movlw	118
  4742  00255A  6E03               	movwf	(___fldiv@b+2)^0,c
  4743  00255C  0E45               	movlw	69
  4744  00255E  6E04               	movwf	(___fldiv@b+3)^0,c
  4745  002560  EC9B  F00A         	call	___fldiv	;wreg free
  4746  002564  C001  F01A         	movff	?___fldiv,___fladd@b
  4747  002568  C002  F01B         	movff	?___fldiv+1,___fladd@b+1
  4748  00256C  C003  F01C         	movff	?___fldiv+2,___fladd@b+2
  4749  002570  C004  F01D         	movff	?___fldiv+3,___fladd@b+3
  4750  002574  0E33               	movlw	51
  4751  002576  6E1E               	movwf	___fladd@a^0,c
  4752  002578  0E93               	movlw	147
  4753  00257A  6E1F               	movwf	(___fladd@a+1)^0,c
  4754  00257C  0E88               	movlw	136
  4755  00257E  6E20               	movwf	(___fladd@a+2)^0,c
  4756  002580  0EC3               	movlw	195
  4757  002582  6E21               	movwf	(___fladd@a+3)^0,c
  4758  002584  EC45  F004         	call	___fladd	;wreg free
  4759  002588  C01A  F0C9         	movff	?___fladd,_gfAirTempC	;volatile
  4760  00258C  C01B  F0CA         	movff	?___fladd+1,_gfAirTempC+1	;volatile
  4761  002590  C01C  F0CB         	movff	?___fladd+2,_gfAirTempC+2	;volatile
  4762  002594  C01D  F0CC         	movff	?___fladd+3,_gfAirTempC+3	;volatile
  4763  002598                     
  4764                           ;TempCalc.c: 67: giAirTempC = (int) round(gfAirTempC);
  4765  002598  C0C9  F071         	movff	_gfAirTempC,round@x	;volatile
  4766  00259C  C0CA  F072         	movff	_gfAirTempC+1,round@x+1	;volatile
  4767  0025A0  C0CB  F073         	movff	_gfAirTempC+2,round@x+2	;volatile
  4768  0025A4  C0CC  F074         	movff	_gfAirTempC+3,round@x+3	;volatile
  4769  0025A8  ECED  F01A         	call	_round	;wreg free
  4770  0025AC  C071  F089         	movff	?_round,_ComputeTemp$2924
  4771  0025B0  C072  F08A         	movff	?_round+1,_ComputeTemp$2924+1
  4772  0025B4  C073  F08B         	movff	?_round+2,_ComputeTemp$2924+2
  4773  0025B8  C074  F08C         	movff	?_round+3,_ComputeTemp$2924+3
  4774  0025BC                     
  4775                           ;TempCalc.c: 67: giAirTempC = (int) round(gfAirTempC);
  4776  0025BC  C089  F02A         	movff	_ComputeTemp$2924,___fltol@f1
  4777  0025C0  C08A  F02B         	movff	_ComputeTemp$2924+1,___fltol@f1+1
  4778  0025C4  C08B  F02C         	movff	_ComputeTemp$2924+2,___fltol@f1+2
  4779  0025C8  C08C  F02D         	movff	_ComputeTemp$2924+3,___fltol@f1+3
  4780  0025CC  ECC6  F016         	call	___fltol	;wreg free
  4781  0025D0  C02A  F0DD         	movff	?___fltol,_giAirTempC	;volatile
  4782  0025D4  C02B  F0DE         	movff	?___fltol+1,_giAirTempC+1	;volatile
  4783  0025D8                     
  4784                           ;TempCalc.c: 68: giAirTempF = (int) round((gfAirTempC * 9 / 5) + 32);
  4785  0025D8  0E00               	movlw	0
  4786  0025DA  6E1E               	movwf	___fladd@a^0,c
  4787  0025DC  0E00               	movlw	0
  4788  0025DE  6E1F               	movwf	(___fladd@a+1)^0,c
  4789  0025E0  0E00               	movlw	0
  4790  0025E2  6E20               	movwf	(___fladd@a+2)^0,c
  4791  0025E4  0E42               	movlw	66
  4792  0025E6  6E21               	movwf	(___fladd@a+3)^0,c
  4793  0025E8  0E00               	movlw	0
  4794  0025EA  6E05               	movwf	___fldiv@a^0,c
  4795  0025EC  0E00               	movlw	0
  4796  0025EE  6E06               	movwf	(___fldiv@a+1)^0,c
  4797  0025F0  0EA0               	movlw	160
  4798  0025F2  6E07               	movwf	(___fldiv@a+2)^0,c
  4799  0025F4  0E40               	movlw	64
  4800  0025F6  6E08               	movwf	(___fldiv@a+3)^0,c
  4801  0025F8  0E00               	movlw	0
  4802  0025FA  6E5A               	movwf	___flmul@a^0,c
  4803  0025FC  0E00               	movlw	0
  4804  0025FE  6E5B               	movwf	(___flmul@a+1)^0,c
  4805  002600  0E10               	movlw	16
  4806  002602  6E5C               	movwf	(___flmul@a+2)^0,c
  4807  002604  0E41               	movlw	65
  4808  002606  6E5D               	movwf	(___flmul@a+3)^0,c
  4809  002608  C0C9  F056         	movff	_gfAirTempC,___flmul@b	;volatile
  4810  00260C  C0CA  F057         	movff	_gfAirTempC+1,___flmul@b+1	;volatile
  4811  002610  C0CB  F058         	movff	_gfAirTempC+2,___flmul@b+2	;volatile
  4812  002614  C0CC  F059         	movff	_gfAirTempC+3,___flmul@b+3	;volatile
  4813  002618  ECA5  F006         	call	___flmul	;wreg free
  4814  00261C  C056  F001         	movff	?___flmul,___fldiv@b
  4815  002620  C057  F002         	movff	?___flmul+1,___fldiv@b+1
  4816  002624  C058  F003         	movff	?___flmul+2,___fldiv@b+2
  4817  002628  C059  F004         	movff	?___flmul+3,___fldiv@b+3
  4818  00262C  EC9B  F00A         	call	___fldiv	;wreg free
  4819  002630  C001  F01A         	movff	?___fldiv,___fladd@b
  4820  002634  C002  F01B         	movff	?___fldiv+1,___fladd@b+1
  4821  002638  C003  F01C         	movff	?___fldiv+2,___fladd@b+2
  4822  00263C  C004  F01D         	movff	?___fldiv+3,___fladd@b+3
  4823  002640  EC45  F004         	call	___fladd	;wreg free
  4824  002644  C01A  F08D         	movff	?___fladd,_ComputeTemp$2925
  4825  002648  C01B  F08E         	movff	?___fladd+1,_ComputeTemp$2925+1
  4826  00264C  C01C  F08F         	movff	?___fladd+2,_ComputeTemp$2925+2
  4827  002650  C01D  F090         	movff	?___fladd+3,_ComputeTemp$2925+3
  4828  002654                     
  4829                           ;TempCalc.c: 68: giAirTempF = (int) round((gfAirTempC * 9 / 5) + 32);
  4830  002654  C08D  F071         	movff	_ComputeTemp$2925,round@x
  4831  002658  C08E  F072         	movff	_ComputeTemp$2925+1,round@x+1
  4832  00265C  C08F  F073         	movff	_ComputeTemp$2925+2,round@x+2
  4833  002660  C090  F074         	movff	_ComputeTemp$2925+3,round@x+3
  4834  002664  ECED  F01A         	call	_round	;wreg free
  4835  002668  C071  F091         	movff	?_round,_ComputeTemp$2926
  4836  00266C  C072  F092         	movff	?_round+1,_ComputeTemp$2926+1
  4837  002670  C073  F093         	movff	?_round+2,_ComputeTemp$2926+2
  4838  002674  C074  F094         	movff	?_round+3,_ComputeTemp$2926+3
  4839  002678                     
  4840                           ;TempCalc.c: 68: giAirTempF = (int) round((gfAirTempC * 9 / 5) + 32);
  4841  002678  C091  F02A         	movff	_ComputeTemp$2926,___fltol@f1
  4842  00267C  C092  F02B         	movff	_ComputeTemp$2926+1,___fltol@f1+1
  4843  002680  C093  F02C         	movff	_ComputeTemp$2926+2,___fltol@f1+2
  4844  002684  C094  F02D         	movff	_ComputeTemp$2926+3,___fltol@f1+3
  4845  002688  ECC6  F016         	call	___fltol	;wreg free
  4846  00268C  C02A  F0DB         	movff	?___fltol,_giAirTempF	;volatile
  4847  002690  C02B  F0DC         	movff	?___fltol+1,_giAirTempF+1	;volatile
  4848  002694                     
  4849                           ;TempCalc.c: 69: __nop();
  4850  002694  F000               	nop	
  4851  002696  0012               	return		;funcret
  4852  002698                     __end_of_ComputeTemp:
  4853                           	callstack 0
  4854                           
  4855 ;; *************** function _round *****************
  4856 ;; Defined at:
  4857 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\round.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  x               4   17[BANK0 ] void 
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;  f               4   21[BANK0 ] void 
  4862 ;; Return value:  Size  Location     Type
  4863 ;;                  4   17[BANK0 ] void 
  4864 ;; Registers used:
  4865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4866 ;; Tracked objects:
  4867 ;;		On entry : 0/0
  4868 ;;		On exit  : 0/0
  4869 ;;		Unchanged: 0/0
  4870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4871 ;;      Params:         0       4       0       0       0       0       0       0       0
  4872 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4873 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4874 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4875 ;;Total ram usage:        8 bytes
  4876 ;; Hardware stack levels used:    1
  4877 ;; Hardware stack levels required when called:    6
  4878 ;; This function calls:
  4879 ;;		___fladd
  4880 ;;		___flsub
  4881 ;;		_trunc
  4882 ;; This function is called by:
  4883 ;;		_ComputeTemp
  4884 ;;		_ComputeWaterVol
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text25
  4889  0035DA                     __ptext25:
  4890                           	callstack 0
  4891  0035DA                     _round:
  4892                           	callstack 23
  4893  0035DA  C071  F066         	movff	round@x,___flsub@b
  4894  0035DE  C072  F067         	movff	round@x+1,___flsub@b+1
  4895  0035E2  C073  F068         	movff	round@x+2,___flsub@b+2
  4896  0035E6  C074  F069         	movff	round@x+3,___flsub@b+3
  4897  0035EA  C071  F056         	movff	round@x,trunc@x
  4898  0035EE  C072  F057         	movff	round@x+1,trunc@x+1
  4899  0035F2  C073  F058         	movff	round@x+2,trunc@x+2
  4900  0035F6  C074  F059         	movff	round@x+3,trunc@x+3
  4901  0035FA  ECE4  F019         	call	_trunc	;wreg free
  4902  0035FE  C056  F06A         	movff	?_trunc,___flsub@a
  4903  003602  C057  F06B         	movff	?_trunc+1,___flsub@a+1
  4904  003606  C058  F06C         	movff	?_trunc+2,___flsub@a+2
  4905  00360A  C059  F06D         	movff	?_trunc+3,___flsub@a+3
  4906  00360E  EC43  F01D         	call	___flsub	;wreg free
  4907  003612  C066  F075         	movff	?___flsub,round@f
  4908  003616  C067  F076         	movff	?___flsub+1,round@f+1
  4909  00361A  C068  F077         	movff	?___flsub+2,round@f+2
  4910  00361E  C069  F078         	movff	?___flsub+3,round@f+3
  4911  003622  C071  F01A         	movff	round@x,___fladd@b
  4912  003626  C072  F01B         	movff	round@x+1,___fladd@b+1
  4913  00362A  C073  F01C         	movff	round@x+2,___fladd@b+2
  4914  00362E  C074  F01D         	movff	round@x+3,___fladd@b+3
  4915  003632  C075  F01E         	movff	round@f,___fladd@a
  4916  003636  C076  F01F         	movff	round@f+1,___fladd@a+1
  4917  00363A  C077  F020         	movff	round@f+2,___fladd@a+2
  4918  00363E  C078  F021         	movff	round@f+3,___fladd@a+3
  4919  003642  EC45  F004         	call	___fladd	;wreg free
  4920  003646  C01A  F071         	movff	?___fladd,round@x
  4921  00364A  C01B  F072         	movff	?___fladd+1,round@x+1
  4922  00364E  C01C  F073         	movff	?___fladd+2,round@x+2
  4923  003652  C01D  F074         	movff	?___fladd+3,round@x+3
  4924  003656  C071  F056         	movff	round@x,trunc@x
  4925  00365A  C072  F057         	movff	round@x+1,trunc@x+1
  4926  00365E  C073  F058         	movff	round@x+2,trunc@x+2
  4927  003662  C074  F059         	movff	round@x+3,trunc@x+3
  4928  003666  ECE4  F019         	call	_trunc	;wreg free
  4929  00366A  C056  F071         	movff	?_trunc,?_round
  4930  00366E  C057  F072         	movff	?_trunc+1,?_round+1
  4931  003672  C058  F073         	movff	?_trunc+2,?_round+2
  4932  003676  C059  F074         	movff	?_trunc+3,?_round+3
  4933  00367A  0012               	return		;funcret
  4934  00367C                     __end_of_round:
  4935                           	callstack 0
  4936                           
  4937 ;; *************** function _trunc *****************
  4938 ;; Defined at:
  4939 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\trunc.c"
  4940 ;; Parameters:    Size  Location     Type
  4941 ;;  x               4   85[COMRAM] void 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  i               4    0[BANK0 ] void 
  4944 ;;  expon           2    4[BANK0 ] int 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  4   85[COMRAM] int 
  4947 ;; Registers used:
  4948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4954 ;;      Params:         4       0       0       0       0       0       0       0       0
  4955 ;;      Locals:         0       6       0       0       0       0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4957 ;;      Totals:         4       6       0       0       0       0       0       0       0
  4958 ;;Total ram usage:       10 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:    5
  4961 ;; This function calls:
  4962 ;;		___fltol
  4963 ;;		___xxtofl
  4964 ;;		_frexp
  4965 ;; This function is called by:
  4966 ;;		_round
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text26
  4971  0033C8                     __ptext26:
  4972                           	callstack 0
  4973  0033C8                     _trunc:
  4974                           	callstack 23
  4975  0033C8  C056  F04E         	movff	trunc@x,frexp@value
  4976  0033CC  C057  F04F         	movff	trunc@x+1,frexp@value+1
  4977  0033D0  C058  F050         	movff	trunc@x+2,frexp@value+2
  4978  0033D4  C059  F051         	movff	trunc@x+3,frexp@value+3
  4979  0033D8  0E64               	movlw	low trunc@expon
  4980  0033DA  6E52               	movwf	frexp@eptr^0,c
  4981  0033DC  0E00               	movlw	high trunc@expon
  4982  0033DE  6E53               	movwf	(frexp@eptr+1)^0,c
  4983  0033E0  EC23  F019         	call	_frexp	;wreg free
  4984  0033E4  0100               	movlb	0	; () banked
  4985  0033E6  BF65               	btfsc	(trunc@expon+1)& (0+255),7,b
  4986  0033E8  EFFA  F019         	goto	u4050
  4987  0033EC  EFF8  F019         	goto	u4051
  4988  0033F0                     u4051:
  4989  0033F0  EF04  F01A         	goto	l4746
  4990  0033F4                     u4050:
  4991  0033F4                     
  4992                           ; BSR set to: 0
  4993  0033F4  0E00               	movlw	0
  4994  0033F6  6E56               	movwf	?_trunc^0,c
  4995  0033F8  0E00               	movlw	0
  4996  0033FA  6E57               	movwf	(?_trunc+1)^0,c
  4997  0033FC  0E00               	movlw	0
  4998  0033FE  6E58               	movwf	(?_trunc+2)^0,c
  4999  003400  0E00               	movlw	0
  5000  003402  6E59               	movwf	(?_trunc+3)^0,c
  5001  003404  EF3E  F01A         	goto	l1989
  5002  003408                     l4746:
  5003                           
  5004                           ; BSR set to: 0
  5005  003408  5165               	movf	(trunc@expon+1)& (0+255),w,b
  5006  00340A  E109               	bnz	u4060
  5007  00340C  0E1D               	movlw	29
  5008  00340E  5D64               	subwf	trunc@expon& (0+255),w,b
  5009  003410  A0D8               	btfss	status,0,c
  5010  003412  EF0D  F01A         	goto	u4061
  5011  003416  EF0F  F01A         	goto	u4060
  5012  00341A                     u4061:
  5013  00341A  EF19  F01A         	goto	l4750
  5014  00341E                     u4060:
  5015  00341E                     
  5016                           ; BSR set to: 0
  5017  00341E  C056  F056         	movff	trunc@x,?_trunc
  5018  003422  C057  F057         	movff	trunc@x+1,?_trunc+1
  5019  003426  C058  F058         	movff	trunc@x+2,?_trunc+2
  5020  00342A  C059  F059         	movff	trunc@x+3,?_trunc+3
  5021  00342E  EF3E  F01A         	goto	l1989
  5022  003432                     l4750:
  5023                           
  5024                           ; BSR set to: 0
  5025  003432  C056  F02A         	movff	trunc@x,___fltol@f1
  5026  003436  C057  F02B         	movff	trunc@x+1,___fltol@f1+1
  5027  00343A  C058  F02C         	movff	trunc@x+2,___fltol@f1+2
  5028  00343E  C059  F02D         	movff	trunc@x+3,___fltol@f1+3
  5029  003442  ECC6  F016         	call	___fltol	;wreg free
  5030  003446  C02A  F034         	movff	?___fltol,___xxtofl@val
  5031  00344A  C02B  F035         	movff	?___fltol+1,___xxtofl@val+1
  5032  00344E  C02C  F036         	movff	?___fltol+2,___xxtofl@val+2
  5033  003452  C02D  F037         	movff	?___fltol+3,___xxtofl@val+3
  5034  003456  0E01               	movlw	1
  5035  003458  EC4C  F013         	call	___xxtofl
  5036  00345C  C034  F060         	movff	?___xxtofl,trunc@i
  5037  003460  C035  F061         	movff	?___xxtofl+1,trunc@i+1
  5038  003464  C036  F062         	movff	?___xxtofl+2,trunc@i+2
  5039  003468  C037  F063         	movff	?___xxtofl+3,trunc@i+3
  5040  00346C  C060  F056         	movff	trunc@i,?_trunc
  5041  003470  C061  F057         	movff	trunc@i+1,?_trunc+1
  5042  003474  C062  F058         	movff	trunc@i+2,?_trunc+2
  5043  003478  C063  F059         	movff	trunc@i+3,?_trunc+3
  5044  00347C                     l1989:
  5045  00347C  0012               	return		;funcret
  5046  00347E                     __end_of_trunc:
  5047                           	callstack 0
  5048                           
  5049 ;; *************** function ___fltol *****************
  5050 ;; Defined at:
  5051 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  f1              4   41[COMRAM] int 
  5054 ;; Auto vars:     Size  Location     Type
  5055 ;;  exp1            1   50[COMRAM] unsigned char 
  5056 ;;  sign1           1   49[COMRAM] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  4   41[COMRAM] long 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5066 ;;      Params:         4       0       0       0       0       0       0       0       0
  5067 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5068 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5069 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5070 ;;Total ram usage:       10 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:    3
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_ComputeTemp
  5077 ;;		_ComputeWaterVol
  5078 ;;		_pow
  5079 ;;		_exp
  5080 ;;		_floor
  5081 ;;		_trunc
  5082 ;; This function uses a non-reentrant model
  5083 ;;
  5084                           
  5085                           	psect	text27
  5086  002D8C                     __ptext27:
  5087                           	callstack 0
  5088  002D8C                     ___fltol:
  5089                           	callstack 23
  5090  002D8C  342C               	rlcf	(___fltol@f1+2)^0,w,c
  5091  002D8E  342D               	rlcf	(___fltol@f1+3)^0,w,c
  5092  002D90  6E33               	movwf	___fltol@exp1^0,c
  5093  002D92  5033               	movf	___fltol@exp1^0,w,c
  5094  002D94  A4D8               	btfss	status,2,c
  5095  002D96  EFCF  F016         	goto	u3021
  5096  002D9A  EFD1  F016         	goto	u3020
  5097  002D9E                     u3021:
  5098  002D9E  EFDB  F016         	goto	l4114
  5099  002DA2                     u3020:
  5100  002DA2                     l4110:
  5101  002DA2  0E00               	movlw	0
  5102  002DA4  6E2A               	movwf	?___fltol^0,c
  5103  002DA6  0E00               	movlw	0
  5104  002DA8  6E2B               	movwf	(?___fltol+1)^0,c
  5105  002DAA  0E00               	movlw	0
  5106  002DAC  6E2C               	movwf	(?___fltol+2)^0,c
  5107  002DAE  0E00               	movlw	0
  5108  002DB0  6E2D               	movwf	(?___fltol+3)^0,c
  5109  002DB2  EF48  F017         	goto	l1500
  5110  002DB6                     l4114:
  5111  002DB6  C02A  F02E         	movff	___fltol@f1,??___fltol
  5112  002DBA  C02B  F02F         	movff	___fltol@f1+1,??___fltol+1
  5113  002DBE  C02C  F030         	movff	___fltol@f1+2,??___fltol+2
  5114  002DC2  C02D  F031         	movff	___fltol@f1+3,??___fltol+3
  5115  002DC6  0E20               	movlw	32
  5116  002DC8  EFEB  F016         	goto	u3030
  5117  002DCC                     u3035:
  5118  002DCC  90D8               	bcf	status,0,c
  5119  002DCE  3231               	rrcf	(??___fltol+3)^0,f,c
  5120  002DD0  3230               	rrcf	(??___fltol+2)^0,f,c
  5121  002DD2  322F               	rrcf	(??___fltol+1)^0,f,c
  5122  002DD4  322E               	rrcf	??___fltol^0,f,c
  5123  002DD6                     u3030:
  5124  002DD6  2EE8               	decfsz	wreg,f,c
  5125  002DD8  EFE6  F016         	goto	u3035
  5126  002DDC  502E               	movf	??___fltol^0,w,c
  5127  002DDE  6E32               	movwf	___fltol@sign1^0,c
  5128  002DE0  8E2C               	bsf	(___fltol@f1+2)^0,7,c
  5129  002DE2  0EFF               	movlw	255
  5130  002DE4  162A               	andwf	___fltol@f1^0,f,c
  5131  002DE6  0EFF               	movlw	255
  5132  002DE8  162B               	andwf	(___fltol@f1+1)^0,f,c
  5133  002DEA  0EFF               	movlw	255
  5134  002DEC  162C               	andwf	(___fltol@f1+2)^0,f,c
  5135  002DEE  0E00               	movlw	0
  5136  002DF0  162D               	andwf	(___fltol@f1+3)^0,f,c
  5137  002DF2  0E96               	movlw	150
  5138  002DF4  5E33               	subwf	___fltol@exp1^0,f,c
  5139  002DF6  BE33               	btfsc	___fltol@exp1^0,7,c
  5140  002DF8  EF02  F017         	goto	u3040
  5141  002DFC  EF00  F017         	goto	u3041
  5142  002E00                     u3041:
  5143  002E00  EF18  F017         	goto	l4134
  5144  002E04                     u3040:
  5145  002E04  5033               	movf	___fltol@exp1^0,w,c
  5146  002E06  0A80               	xorlw	128
  5147  002E08  0F97               	addlw	151
  5148  002E0A  B0D8               	btfsc	status,0,c
  5149  002E0C  EF0A  F017         	goto	u3051
  5150  002E10  EF0C  F017         	goto	u3050
  5151  002E14                     u3051:
  5152  002E14  EF0E  F017         	goto	l4130
  5153  002E18                     u3050:
  5154  002E18  EFD1  F016         	goto	l4110
  5155  002E1C                     l4130:
  5156  002E1C  90D8               	bcf	status,0,c
  5157  002E1E  322D               	rrcf	(___fltol@f1+3)^0,f,c
  5158  002E20  322C               	rrcf	(___fltol@f1+2)^0,f,c
  5159  002E22  322B               	rrcf	(___fltol@f1+1)^0,f,c
  5160  002E24  322A               	rrcf	___fltol@f1^0,f,c
  5161  002E26  3E33               	incfsz	___fltol@exp1^0,f,c
  5162  002E28  EF0E  F017         	goto	l4130
  5163  002E2C  EF30  F017         	goto	l4144
  5164  002E30                     l4134:
  5165  002E30  0E1F               	movlw	31
  5166  002E32  6433               	cpfsgt	___fltol@exp1^0,c
  5167  002E34  EF1E  F017         	goto	u3061
  5168  002E38  EF20  F017         	goto	u3060
  5169  002E3C                     u3061:
  5170  002E3C  EF28  F017         	goto	l4142
  5171  002E40                     u3060:
  5172  002E40  EFD1  F016         	goto	l4110
  5173  002E44                     l4140:
  5174  002E44  90D8               	bcf	status,0,c
  5175  002E46  362A               	rlcf	___fltol@f1^0,f,c
  5176  002E48  362B               	rlcf	(___fltol@f1+1)^0,f,c
  5177  002E4A  362C               	rlcf	(___fltol@f1+2)^0,f,c
  5178  002E4C  362D               	rlcf	(___fltol@f1+3)^0,f,c
  5179  002E4E  0633               	decf	___fltol@exp1^0,f,c
  5180  002E50                     l4142:
  5181  002E50  5033               	movf	___fltol@exp1^0,w,c
  5182  002E52  A4D8               	btfss	status,2,c
  5183  002E54  EF2E  F017         	goto	u3071
  5184  002E58  EF30  F017         	goto	u3070
  5185  002E5C                     u3071:
  5186  002E5C  EF22  F017         	goto	l4140
  5187  002E60                     u3070:
  5188  002E60                     l4144:
  5189  002E60  5032               	movf	___fltol@sign1^0,w,c
  5190  002E62  B4D8               	btfsc	status,2,c
  5191  002E64  EF36  F017         	goto	u3081
  5192  002E68  EF38  F017         	goto	u3080
  5193  002E6C                     u3081:
  5194  002E6C  EF40  F017         	goto	l4148
  5195  002E70                     u3080:
  5196  002E70  1E2D               	comf	(___fltol@f1+3)^0,f,c
  5197  002E72  1E2C               	comf	(___fltol@f1+2)^0,f,c
  5198  002E74  1E2B               	comf	(___fltol@f1+1)^0,f,c
  5199  002E76  6C2A               	negf	___fltol@f1^0,c
  5200  002E78  0E00               	movlw	0
  5201  002E7A  222B               	addwfc	(___fltol@f1+1)^0,f,c
  5202  002E7C  222C               	addwfc	(___fltol@f1+2)^0,f,c
  5203  002E7E  222D               	addwfc	(___fltol@f1+3)^0,f,c
  5204  002E80                     l4148:
  5205  002E80  C02A  F02A         	movff	___fltol@f1,?___fltol
  5206  002E84  C02B  F02B         	movff	___fltol@f1+1,?___fltol+1
  5207  002E88  C02C  F02C         	movff	___fltol@f1+2,?___fltol+2
  5208  002E8C  C02D  F02D         	movff	___fltol@f1+3,?___fltol+3
  5209  002E90                     l1500:
  5210  002E90  0012               	return		;funcret
  5211  002E92                     __end_of___fltol:
  5212                           	callstack 0
  5213                           
  5214 ;; *************** function ___flsub *****************
  5215 ;; Defined at:
  5216 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  5217 ;; Parameters:    Size  Location     Type
  5218 ;;  b               4    6[BANK0 ] long 
  5219 ;;  a               4   10[BANK0 ] long 
  5220 ;; Auto vars:     Size  Location     Type
  5221 ;;		None
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  4    6[BANK0 ] long 
  5224 ;; Registers used:
  5225 ;;		wreg, status,2, status,0, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5231 ;;      Params:         0       8       0       0       0       0       0       0       0
  5232 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5234 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5235 ;;Total ram usage:        8 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    4
  5238 ;; This function calls:
  5239 ;;		___fladd
  5240 ;; This function is called by:
  5241 ;;		_ComputeWaterVol
  5242 ;;		_exp
  5243 ;;		_round
  5244 ;; This function uses a non-reentrant model
  5245 ;;
  5246                           
  5247                           	psect	text28
  5248  003A86                     __ptext28:
  5249                           	callstack 0
  5250  003A86                     ___flsub:
  5251                           	callstack 23
  5252  003A86  0E00               	movlw	0
  5253  003A88  0100               	movlb	0	; () banked
  5254  003A8A  1B6A               	xorwf	___flsub@a& (0+255),f,b
  5255  003A8C  0E00               	movlw	0
  5256  003A8E  1B6B               	xorwf	(___flsub@a+1)& (0+255),f,b
  5257  003A90  0E00               	movlw	0
  5258  003A92  1B6C               	xorwf	(___flsub@a+2)& (0+255),f,b
  5259  003A94  0E80               	movlw	128
  5260  003A96  1B6D               	xorwf	(___flsub@a+3)& (0+255),f,b
  5261  003A98                     
  5262                           ; BSR set to: 0
  5263  003A98  C066  F01A         	movff	___flsub@b,___fladd@b
  5264  003A9C  C067  F01B         	movff	___flsub@b+1,___fladd@b+1
  5265  003AA0  C068  F01C         	movff	___flsub@b+2,___fladd@b+2
  5266  003AA4  C069  F01D         	movff	___flsub@b+3,___fladd@b+3
  5267  003AA8  C06A  F01E         	movff	___flsub@a,___fladd@a
  5268  003AAC  C06B  F01F         	movff	___flsub@a+1,___fladd@a+1
  5269  003AB0  C06C  F020         	movff	___flsub@a+2,___fladd@a+2
  5270  003AB4  C06D  F021         	movff	___flsub@a+3,___fladd@a+3
  5271  003AB8  EC45  F004         	call	___fladd	;wreg free
  5272  003ABC  C01A  F066         	movff	?___fladd,?___flsub
  5273  003AC0  C01B  F067         	movff	?___fladd+1,?___flsub+1
  5274  003AC4  C01C  F068         	movff	?___fladd+2,?___flsub+2
  5275  003AC8  C01D  F069         	movff	?___fladd+3,?___flsub+3
  5276  003ACC  0012               	return		;funcret
  5277  003ACE                     __end_of___flsub:
  5278                           	callstack 0
  5279                           
  5280 ;; *************** function _log *****************
  5281 ;; Defined at:
  5282 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\log.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  x               4   33[BANK0 ] long 
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;  exponent        2   37[BANK0 ] int 
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  4   33[BANK0 ] int 
  5289 ;; Registers used:
  5290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5296 ;;      Params:         0       4       0       0       0       0       0       0       0
  5297 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5299 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5300 ;;Total ram usage:        6 bytes
  5301 ;; Hardware stack levels used:    1
  5302 ;; Hardware stack levels required when called:    5
  5303 ;; This function calls:
  5304 ;;		___fladd
  5305 ;;		___fleq
  5306 ;;		___flmul
  5307 ;;		___xxtofl
  5308 ;;		_eval_poly
  5309 ;;		_frexp
  5310 ;; This function is called by:
  5311 ;;		_ComputeTemp
  5312 ;;		_pow
  5313 ;; This function uses a non-reentrant model
  5314 ;;
  5315                           
  5316                           	psect	text29
  5317  00284C                     __ptext29:
  5318                           	callstack 0
  5319  00284C                     _log:
  5320                           	callstack 23
  5321  00284C  0100               	movlb	0	; () banked
  5322  00284E  BF84               	btfsc	(log@x+3)& (0+255),7,b
  5323  002850  EF2E  F014         	goto	u3950
  5324  002854  EF2C  F014         	goto	u3951
  5325  002858                     u3951:
  5326  002858  EF3C  F014         	goto	l4676
  5327  00285C                     u3950:
  5328  00285C                     
  5329                           ; BSR set to: 0
  5330  00285C  0E00               	movlw	0
  5331  00285E  6FCE               	movwf	(_errno+1)& (0+255),b
  5332  002860  0E21               	movlw	33
  5333  002862  6FCD               	movwf	_errno& (0+255),b
  5334  002864  0E00               	movlw	0
  5335  002866  6F81               	movwf	?_log& (0+255),b
  5336  002868  0E00               	movlw	0
  5337  00286A  6F82               	movwf	(?_log+1)& (0+255),b
  5338  00286C  0E00               	movlw	0
  5339  00286E  6F83               	movwf	(?_log+2)& (0+255),b
  5340  002870  0E00               	movlw	0
  5341  002872  6F84               	movwf	(?_log+3)& (0+255),b
  5342  002874  EFF4  F014         	goto	l1909
  5343  002878                     l4676:
  5344                           
  5345                           ; BSR set to: 0
  5346  002878  C081  F042         	movff	log@x,___fleq@ff1
  5347  00287C  C082  F043         	movff	log@x+1,___fleq@ff1+1
  5348  002880  C083  F044         	movff	log@x+2,___fleq@ff1+2
  5349  002884  C084  F045         	movff	log@x+3,___fleq@ff1+3
  5350  002888  0E00               	movlw	0
  5351  00288A  6E46               	movwf	___fleq@ff2^0,c
  5352  00288C  0E00               	movlw	0
  5353  00288E  6E47               	movwf	(___fleq@ff2+1)^0,c
  5354  002890  0E00               	movlw	0
  5355  002892  6E48               	movwf	(___fleq@ff2+2)^0,c
  5356  002894  0E00               	movlw	0
  5357  002896  6E49               	movwf	(___fleq@ff2+3)^0,c
  5358  002898  EC98  F01A         	call	___fleq	;wreg free
  5359  00289C  A0D8               	btfss	status,0,c
  5360  00289E  EF53  F014         	goto	u3961
  5361  0028A2  EF55  F014         	goto	u3960
  5362  0028A6                     u3961:
  5363  0028A6  EF64  F014         	goto	l4682
  5364  0028AA                     u3960:
  5365  0028AA  0E00               	movlw	0
  5366  0028AC  0100               	movlb	0	; () banked
  5367  0028AE  6FCE               	movwf	(_errno+1)& (0+255),b
  5368  0028B0  0E22               	movlw	34
  5369  0028B2  6FCD               	movwf	_errno& (0+255),b
  5370  0028B4  0E00               	movlw	0
  5371  0028B6  6F81               	movwf	?_log& (0+255),b
  5372  0028B8  0E00               	movlw	0
  5373  0028BA  6F82               	movwf	(?_log+1)& (0+255),b
  5374  0028BC  0E00               	movlw	0
  5375  0028BE  6F83               	movwf	(?_log+2)& (0+255),b
  5376  0028C0  0E00               	movlw	0
  5377  0028C2  6F84               	movwf	(?_log+3)& (0+255),b
  5378  0028C4  EFF4  F014         	goto	l1909
  5379  0028C8                     l4682:
  5380  0028C8  0E00               	movlw	0
  5381  0028CA  6E5A               	movwf	___flmul@a^0,c
  5382  0028CC  0E00               	movlw	0
  5383  0028CE  6E5B               	movwf	(___flmul@a+1)^0,c
  5384  0028D0  0E00               	movlw	0
  5385  0028D2  6E5C               	movwf	(___flmul@a+2)^0,c
  5386  0028D4  0E40               	movlw	64
  5387  0028D6  6E5D               	movwf	(___flmul@a+3)^0,c
  5388  0028D8  0E85               	movlw	low log@exponent
  5389  0028DA  6E52               	movwf	frexp@eptr^0,c
  5390  0028DC  0E00               	movlw	high log@exponent
  5391  0028DE  6E53               	movwf	(frexp@eptr+1)^0,c
  5392  0028E0  C081  F04E         	movff	log@x,frexp@value
  5393  0028E4  C082  F04F         	movff	log@x+1,frexp@value+1
  5394  0028E8  C083  F050         	movff	log@x+2,frexp@value+2
  5395  0028EC  C084  F051         	movff	log@x+3,frexp@value+3
  5396  0028F0  EC23  F019         	call	_frexp	;wreg free
  5397  0028F4  C04E  F056         	movff	?_frexp,___flmul@b
  5398  0028F8  C04F  F057         	movff	?_frexp+1,___flmul@b+1
  5399  0028FC  C050  F058         	movff	?_frexp+2,___flmul@b+2
  5400  002900  C051  F059         	movff	?_frexp+3,___flmul@b+3
  5401  002904  ECA5  F006         	call	___flmul	;wreg free
  5402  002908  C056  F01A         	movff	?___flmul,___fladd@b
  5403  00290C  C057  F01B         	movff	?___flmul+1,___fladd@b+1
  5404  002910  C058  F01C         	movff	?___flmul+2,___fladd@b+2
  5405  002914  C059  F01D         	movff	?___flmul+3,___fladd@b+3
  5406  002918  0E00               	movlw	0
  5407  00291A  6E1E               	movwf	___fladd@a^0,c
  5408  00291C  0E00               	movlw	0
  5409  00291E  6E1F               	movwf	(___fladd@a+1)^0,c
  5410  002920  0E80               	movlw	128
  5411  002922  6E20               	movwf	(___fladd@a+2)^0,c
  5412  002924  0EBF               	movlw	191
  5413  002926  6E21               	movwf	(___fladd@a+3)^0,c
  5414  002928  EC45  F004         	call	___fladd	;wreg free
  5415  00292C  C01A  F081         	movff	?___fladd,log@x
  5416  002930  C01B  F082         	movff	?___fladd+1,log@x+1
  5417  002934  C01C  F083         	movff	?___fladd+2,log@x+2
  5418  002938  C01D  F084         	movff	?___fladd+3,log@x+3
  5419  00293C  0100               	movlb	0	; () banked
  5420  00293E  0785               	decf	log@exponent& (0+255),f,b
  5421  002940  A0D8               	btfss	status,0,c
  5422  002942  0786               	decf	(log@exponent+1)& (0+255),f,b
  5423  002944                     
  5424                           ; BSR set to: 0
  5425  002944  C081  F071         	movff	log@x,eval_poly@x
  5426  002948  C082  F072         	movff	log@x+1,eval_poly@x+1
  5427  00294C  C083  F073         	movff	log@x+2,eval_poly@x+2
  5428  002950  C084  F074         	movff	log@x+3,eval_poly@x+3
  5429  002954  0E33               	movlw	low log@coeff
  5430  002956  6F75               	movwf	eval_poly@d& (0+255),b
  5431  002958  0E08               	movlw	high log@coeff
  5432  00295A  6F76               	movwf	(eval_poly@d+1)& (0+255),b
  5433  00295C  0E00               	movlw	0
  5434  00295E  6F78               	movwf	(eval_poly@n+1)& (0+255),b
  5435  002960  0E08               	movlw	8
  5436  002962  6F77               	movwf	eval_poly@n& (0+255),b
  5437  002964  ECCB  F017         	call	_eval_poly	;wreg free
  5438  002968  C071  F081         	movff	?_eval_poly,log@x
  5439  00296C  C072  F082         	movff	?_eval_poly+1,log@x+1
  5440  002970  C073  F083         	movff	?_eval_poly+2,log@x+2
  5441  002974  C074  F084         	movff	?_eval_poly+3,log@x+3
  5442  002978  0E18               	movlw	24
  5443  00297A  6E5A               	movwf	___flmul@a^0,c
  5444  00297C  0E72               	movlw	114
  5445  00297E  6E5B               	movwf	(___flmul@a+1)^0,c
  5446  002980  0E31               	movlw	49
  5447  002982  6E5C               	movwf	(___flmul@a+2)^0,c
  5448  002984  0E3F               	movlw	63
  5449  002986  6E5D               	movwf	(___flmul@a+3)^0,c
  5450  002988  C085  F034         	movff	log@exponent,___xxtofl@val
  5451  00298C  C086  F035         	movff	log@exponent+1,___xxtofl@val+1
  5452  002990  0E00               	movlw	0
  5453  002992  BE35               	btfsc	(___xxtofl@val+1)^0,7,c
  5454  002994  0EFF               	movlw	-1
  5455  002996  6E36               	movwf	(___xxtofl@val+2)^0,c
  5456  002998  6E37               	movwf	(___xxtofl@val+3)^0,c
  5457  00299A  0E01               	movlw	1
  5458  00299C  EC4C  F013         	call	___xxtofl
  5459  0029A0  C034  F056         	movff	?___xxtofl,___flmul@b
  5460  0029A4  C035  F057         	movff	?___xxtofl+1,___flmul@b+1
  5461  0029A8  C036  F058         	movff	?___xxtofl+2,___flmul@b+2
  5462  0029AC  C037  F059         	movff	?___xxtofl+3,___flmul@b+3
  5463  0029B0  ECA5  F006         	call	___flmul	;wreg free
  5464  0029B4  C056  F01A         	movff	?___flmul,___fladd@b
  5465  0029B8  C057  F01B         	movff	?___flmul+1,___fladd@b+1
  5466  0029BC  C058  F01C         	movff	?___flmul+2,___fladd@b+2
  5467  0029C0  C059  F01D         	movff	?___flmul+3,___fladd@b+3
  5468  0029C4  C081  F01E         	movff	log@x,___fladd@a
  5469  0029C8  C082  F01F         	movff	log@x+1,___fladd@a+1
  5470  0029CC  C083  F020         	movff	log@x+2,___fladd@a+2
  5471  0029D0  C084  F021         	movff	log@x+3,___fladd@a+3
  5472  0029D4  EC45  F004         	call	___fladd	;wreg free
  5473  0029D8  C01A  F081         	movff	?___fladd,?_log
  5474  0029DC  C01B  F082         	movff	?___fladd+1,?_log+1
  5475  0029E0  C01C  F083         	movff	?___fladd+2,?_log+2
  5476  0029E4  C01D  F084         	movff	?___fladd+3,?_log+3
  5477  0029E8                     l1909:
  5478  0029E8  0012               	return		;funcret
  5479  0029EA                     __end_of_log:
  5480                           	callstack 0
  5481                           
  5482 ;; *************** function _frexp *****************
  5483 ;; Defined at:
  5484 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\frexp.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  value           4   77[COMRAM] int 
  5487 ;;  eptr            2   81[COMRAM] PTR int 
  5488 ;;		 -> trunc@expon(2), floor@expon(2), log@exponent(2), 
  5489 ;; Auto vars:     Size  Location     Type
  5490 ;;		None
  5491 ;; Return value:  Size  Location     Type
  5492 ;;                  4   77[COMRAM] PTR int 
  5493 ;; Registers used:
  5494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5495 ;; Tracked objects:
  5496 ;;		On entry : 0/0
  5497 ;;		On exit  : 0/0
  5498 ;;		Unchanged: 0/0
  5499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5500 ;;      Params:         6       0       0       0       0       0       0       0       0
  5501 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5502 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5503 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5504 ;;Total ram usage:        8 bytes
  5505 ;; Hardware stack levels used:    1
  5506 ;; Hardware stack levels required when called:    4
  5507 ;; This function calls:
  5508 ;;		___fleq
  5509 ;; This function is called by:
  5510 ;;		_log
  5511 ;;		_floor
  5512 ;;		_trunc
  5513 ;; This function uses a non-reentrant model
  5514 ;;
  5515                           
  5516                           	psect	text30
  5517  003246                     __ptext30:
  5518                           	callstack 0
  5519  003246                     _frexp:
  5520                           	callstack 23
  5521  003246  C04E  F042         	movff	frexp@value,___fleq@ff1
  5522  00324A  C04F  F043         	movff	frexp@value+1,___fleq@ff1+1
  5523  00324E  C050  F044         	movff	frexp@value+2,___fleq@ff1+2
  5524  003252  C051  F045         	movff	frexp@value+3,___fleq@ff1+3
  5525  003256  0E00               	movlw	0
  5526  003258  6E46               	movwf	___fleq@ff2^0,c
  5527  00325A  0E00               	movlw	0
  5528  00325C  6E47               	movwf	(___fleq@ff2+1)^0,c
  5529  00325E  0E00               	movlw	0
  5530  003260  6E48               	movwf	(___fleq@ff2+2)^0,c
  5531  003262  0E00               	movlw	0
  5532  003264  6E49               	movwf	(___fleq@ff2+3)^0,c
  5533  003266  EC98  F01A         	call	___fleq	;wreg free
  5534  00326A  A0D8               	btfss	status,0,c
  5535  00326C  EF3A  F019         	goto	u3191
  5536  003270  EF3C  F019         	goto	u3190
  5537  003274                     u3191:
  5538  003274  EF4E  F019         	goto	l4206
  5539  003278                     u3190:
  5540  003278  C052  FFD9         	movff	frexp@eptr,fsr2l
  5541  00327C  C053  FFDA         	movff	frexp@eptr+1,fsr2h
  5542  003280  0E00               	movlw	0
  5543  003282  6EDE               	movwf	postinc2,c
  5544  003284  0E00               	movlw	0
  5545  003286  6EDD               	movwf	postdec2,c
  5546  003288  0E00               	movlw	0
  5547  00328A  6E4E               	movwf	?_frexp^0,c
  5548  00328C  0E00               	movlw	0
  5549  00328E  6E4F               	movwf	(?_frexp+1)^0,c
  5550  003290  0E00               	movlw	0
  5551  003292  6E50               	movwf	(?_frexp+2)^0,c
  5552  003294  0E00               	movlw	0
  5553  003296  6E51               	movwf	(?_frexp+3)^0,c
  5554  003298  EF84  F019         	goto	l1925
  5555  00329C                     l4206:
  5556  00329C  5051               	movf	(frexp@value+3)^0,w,c
  5557  00329E  0B7F               	andlw	127
  5558  0032A0  6E54               	movwf	??_frexp^0,c
  5559  0032A2  6A55               	clrf	(??_frexp+1)^0,c
  5560  0032A4  90D8               	bcf	status,0,c
  5561  0032A6  3654               	rlcf	??_frexp^0,f,c
  5562  0032A8  3655               	rlcf	(??_frexp+1)^0,f,c
  5563  0032AA  C052  FFD9         	movff	frexp@eptr,fsr2l
  5564  0032AE  C053  FFDA         	movff	frexp@eptr+1,fsr2h
  5565  0032B2  C054  FFDE         	movff	??_frexp,postinc2
  5566  0032B6  C055  FFDD         	movff	??_frexp+1,postdec2
  5567  0032BA  BE50               	btfsc	(frexp@value+2)^0,7,c
  5568  0032BC  EF62  F019         	goto	u3201
  5569  0032C0  EF66  F019         	goto	u3200
  5570  0032C4                     u3201:
  5571  0032C4  6A54               	clrf	??_frexp^0,c
  5572  0032C6  2A54               	incf	??_frexp^0,f,c
  5573  0032C8  EF67  F019         	goto	u3208
  5574  0032CC                     u3200:
  5575  0032CC  6A54               	clrf	??_frexp^0,c
  5576  0032CE                     u3208:
  5577  0032CE  5054               	movf	??_frexp^0,w,c
  5578  0032D0  C052  FFD9         	movff	frexp@eptr,fsr2l
  5579  0032D4  C053  FFDA         	movff	frexp@eptr+1,fsr2h
  5580  0032D8  12DE               	iorwf	postinc2,f,c
  5581  0032DA  0E00               	movlw	0
  5582  0032DC  12DD               	iorwf	postdec2,f,c
  5583  0032DE  C052  FFD9         	movff	frexp@eptr,fsr2l
  5584  0032E2  C053  FFDA         	movff	frexp@eptr+1,fsr2h
  5585  0032E6  0E82               	movlw	130
  5586  0032E8  26DE               	addwf	postinc2,f,c
  5587  0032EA  0EFF               	movlw	255
  5588  0032EC  22DD               	addwfc	postdec2,f,c
  5589  0032EE  5051               	movf	(frexp@value+3)^0,w,c
  5590  0032F0  0B80               	andlw	-128
  5591  0032F2  093F               	iorlw	63
  5592  0032F4  6E51               	movwf	(frexp@value+3)^0,c
  5593  0032F6  9E50               	bcf	(frexp@value+2)^0,7,c
  5594  0032F8  C04E  F04E         	movff	frexp@value,?_frexp
  5595  0032FC  C04F  F04F         	movff	frexp@value+1,?_frexp+1
  5596  003300  C050  F050         	movff	frexp@value+2,?_frexp+2
  5597  003304  C051  F051         	movff	frexp@value+3,?_frexp+3
  5598  003308                     l1925:
  5599  003308  0012               	return		;funcret
  5600  00330A                     __end_of_frexp:
  5601                           	callstack 0
  5602                           
  5603 ;; *************** function ___fleq *****************
  5604 ;; Defined at:
  5605 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fleq.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  ff1             4   65[COMRAM] PTR int 
  5608 ;;  ff2             4   69[COMRAM] PTR int 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;		None
  5611 ;; Return value:  Size  Location     Type
  5612 ;;		None               void
  5613 ;; Registers used:
  5614 ;;		wreg, status,2, status,0
  5615 ;; Tracked objects:
  5616 ;;		On entry : 0/0
  5617 ;;		On exit  : 0/0
  5618 ;;		Unchanged: 0/0
  5619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5620 ;;      Params:         8       0       0       0       0       0       0       0       0
  5621 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5622 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5623 ;;      Totals:        12       0       0       0       0       0       0       0       0
  5624 ;;Total ram usage:       12 bytes
  5625 ;; Hardware stack levels used:    1
  5626 ;; Hardware stack levels required when called:    3
  5627 ;; This function calls:
  5628 ;;		Nothing
  5629 ;; This function is called by:
  5630 ;;		_log
  5631 ;;		_frexp
  5632 ;;		_ldexp
  5633 ;;		_pow
  5634 ;;		_exp
  5635 ;; This function uses a non-reentrant model
  5636 ;;
  5637                           
  5638                           	psect	text31
  5639  003530                     __ptext31:
  5640                           	callstack 0
  5641  003530                     ___fleq:
  5642                           	callstack 23
  5643  003530  0E00               	movlw	0
  5644  003532  1442               	andwf	___fleq@ff1^0,w,c
  5645  003534  6E4A               	movwf	??___fleq^0,c
  5646  003536  0E00               	movlw	0
  5647  003538  1443               	andwf	(___fleq@ff1+1)^0,w,c
  5648  00353A  6E4B               	movwf	(??___fleq+1)^0,c
  5649  00353C  0E80               	movlw	128
  5650  00353E  1444               	andwf	(___fleq@ff1+2)^0,w,c
  5651  003540  6E4C               	movwf	(??___fleq+2)^0,c
  5652  003542  0E7F               	movlw	127
  5653  003544  1445               	andwf	(___fleq@ff1+3)^0,w,c
  5654  003546  6E4D               	movwf	(??___fleq+3)^0,c
  5655  003548  504A               	movf	??___fleq^0,w,c
  5656  00354A  104B               	iorwf	(??___fleq+1)^0,w,c
  5657  00354C  104C               	iorwf	(??___fleq+2)^0,w,c
  5658  00354E  104D               	iorwf	(??___fleq+3)^0,w,c
  5659  003550  A4D8               	btfss	status,2,c
  5660  003552  EFAD  F01A         	goto	u2301
  5661  003556  EFAF  F01A         	goto	u2300
  5662  00355A                     u2301:
  5663  00355A  EFB7  F01A         	goto	l3732
  5664  00355E                     u2300:
  5665  00355E  0E00               	movlw	0
  5666  003560  6E42               	movwf	___fleq@ff1^0,c
  5667  003562  0E00               	movlw	0
  5668  003564  6E43               	movwf	(___fleq@ff1+1)^0,c
  5669  003566  0E00               	movlw	0
  5670  003568  6E44               	movwf	(___fleq@ff1+2)^0,c
  5671  00356A  0E00               	movlw	0
  5672  00356C  6E45               	movwf	(___fleq@ff1+3)^0,c
  5673  00356E                     l3732:
  5674  00356E  0E00               	movlw	0
  5675  003570  1446               	andwf	___fleq@ff2^0,w,c
  5676  003572  6E4A               	movwf	??___fleq^0,c
  5677  003574  0E00               	movlw	0
  5678  003576  1447               	andwf	(___fleq@ff2+1)^0,w,c
  5679  003578  6E4B               	movwf	(??___fleq+1)^0,c
  5680  00357A  0E80               	movlw	128
  5681  00357C  1448               	andwf	(___fleq@ff2+2)^0,w,c
  5682  00357E  6E4C               	movwf	(??___fleq+2)^0,c
  5683  003580  0E7F               	movlw	127
  5684  003582  1449               	andwf	(___fleq@ff2+3)^0,w,c
  5685  003584  6E4D               	movwf	(??___fleq+3)^0,c
  5686  003586  504A               	movf	??___fleq^0,w,c
  5687  003588  104B               	iorwf	(??___fleq+1)^0,w,c
  5688  00358A  104C               	iorwf	(??___fleq+2)^0,w,c
  5689  00358C  104D               	iorwf	(??___fleq+3)^0,w,c
  5690  00358E  A4D8               	btfss	status,2,c
  5691  003590  EFCC  F01A         	goto	u2311
  5692  003594  EFCE  F01A         	goto	u2310
  5693  003598                     u2311:
  5694  003598  EFD6  F01A         	goto	l3736
  5695  00359C                     u2310:
  5696  00359C  0E00               	movlw	0
  5697  00359E  6E46               	movwf	___fleq@ff2^0,c
  5698  0035A0  0E00               	movlw	0
  5699  0035A2  6E47               	movwf	(___fleq@ff2+1)^0,c
  5700  0035A4  0E00               	movlw	0
  5701  0035A6  6E48               	movwf	(___fleq@ff2+2)^0,c
  5702  0035A8  0E00               	movlw	0
  5703  0035AA  6E49               	movwf	(___fleq@ff2+3)^0,c
  5704  0035AC                     l3736:
  5705  0035AC  5046               	movf	___fleq@ff2^0,w,c
  5706  0035AE  1842               	xorwf	___fleq@ff1^0,w,c
  5707  0035B0  E10F               	bnz	u2320
  5708  0035B2  5047               	movf	(___fleq@ff2+1)^0,w,c
  5709  0035B4  1843               	xorwf	(___fleq@ff1+1)^0,w,c
  5710  0035B6  E10C               	bnz	u2320
  5711  0035B8  5048               	movf	(___fleq@ff2+2)^0,w,c
  5712  0035BA  1844               	xorwf	(___fleq@ff1+2)^0,w,c
  5713  0035BC  E109               	bnz	u2320
  5714  0035BE  5049               	movf	(___fleq@ff2+3)^0,w,c
  5715  0035C0  1845               	xorwf	(___fleq@ff1+3)^0,w,c
  5716  0035C2  B4D8               	btfsc	status,2,c
  5717  0035C4  EFE6  F01A         	goto	u2321
  5718  0035C8  EFE8  F01A         	goto	u2320
  5719  0035CC                     u2321:
  5720  0035CC  EFEB  F01A         	goto	l3740
  5721  0035D0                     u2320:
  5722  0035D0  90D8               	bcf	status,0,c
  5723  0035D2  EFEC  F01A         	goto	l1466
  5724  0035D6                     l3740:
  5725  0035D6  80D8               	bsf	status,0,c
  5726  0035D8                     l1466:
  5727  0035D8  0012               	return		;funcret
  5728  0035DA                     __end_of___fleq:
  5729                           	callstack 0
  5730                           
  5731 ;; *************** function _eval_poly *****************
  5732 ;; Defined at:
  5733 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\evalpoly.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;  x               4   17[BANK0 ] PTR int 
  5736 ;;  d               2   21[BANK0 ] PTR const 
  5737 ;;		 -> exp@coeff(40), log@coeff(36), 
  5738 ;;  n               2   23[BANK0 ] int 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  res             4   29[BANK0 ] int 
  5741 ;; Return value:  Size  Location     Type
  5742 ;;                  4   17[BANK0 ] int 
  5743 ;; Registers used:
  5744 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5745 ;; Tracked objects:
  5746 ;;		On entry : 0/0
  5747 ;;		On exit  : 0/0
  5748 ;;		Unchanged: 0/0
  5749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5750 ;;      Params:         0       8       0       0       0       0       0       0       0
  5751 ;;      Locals:         0       4       0       0       0       0       0       0       0
  5752 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5753 ;;      Totals:         0      16       0       0       0       0       0       0       0
  5754 ;;Total ram usage:       16 bytes
  5755 ;; Hardware stack levels used:    1
  5756 ;; Hardware stack levels required when called:    4
  5757 ;; This function calls:
  5758 ;;		___fladd
  5759 ;;		___flmul
  5760 ;; This function is called by:
  5761 ;;		_log
  5762 ;;		_exp
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text32
  5767  002F96                     __ptext32:
  5768                           	callstack 0
  5769  002F96                     _eval_poly:
  5770                           	callstack 23
  5771  002F96  C077  F079         	movff	eval_poly@n,??_eval_poly
  5772  002F9A  C078  F07A         	movff	eval_poly@n+1,??_eval_poly+1
  5773  002F9E  0100               	movlb	0	; () banked
  5774  002FA0  90D8               	bcf	status,0,c
  5775  002FA2  3779               	rlcf	??_eval_poly& (0+255),f,b
  5776  002FA4  377A               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5777  002FA6  90D8               	bcf	status,0,c
  5778  002FA8  3779               	rlcf	??_eval_poly& (0+255),f,b
  5779  002FAA  377A               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5780  002FAC  C075  F07B         	movff	eval_poly@d,??_eval_poly+2
  5781  002FB0  C076  F07C         	movff	eval_poly@d+1,??_eval_poly+3
  5782  002FB4  5179               	movf	??_eval_poly& (0+255),w,b
  5783  002FB6  277B               	addwf	(??_eval_poly+2)& (0+255),f,b
  5784  002FB8  517A               	movf	(??_eval_poly+1)& (0+255),w,b
  5785  002FBA  237C               	addwfc	(??_eval_poly+3)& (0+255),f,b
  5786  002FBC  C07B  FFF6         	movff	??_eval_poly+2,tblptrl
  5787  002FC0  C07C  FFF7         	movff	??_eval_poly+3,tblptrh
  5788  002FC4                     	if	0	;tblptru may be non-zero
  5789  002FC4                     	endif
  5790  002FC4                     	if	0	;tblptru may be non-zero
  5791  002FC4                     	endif
  5792  002FC4  0009               	tblrd		*+
  5793  002FC6  CFF5 F07D          	movff	tablat,eval_poly@res
  5794  002FCA  0009               	tblrd		*+
  5795  002FCC  CFF5 F07E          	movff	tablat,eval_poly@res+1
  5796  002FD0  0009               	tblrd		*+
  5797  002FD2  CFF5 F07F          	movff	tablat,eval_poly@res+2
  5798  002FD6  000A               	tblrd		*-
  5799  002FD8  CFF5 F080          	movff	tablat,eval_poly@res+3
  5800  002FDC  EF3A  F018         	goto	l4448
  5801  002FE0                     l4446:
  5802                           
  5803                           ; BSR set to: 0
  5804  002FE0  C07D  F05A         	movff	eval_poly@res,___flmul@a
  5805  002FE4  C07E  F05B         	movff	eval_poly@res+1,___flmul@a+1
  5806  002FE8  C07F  F05C         	movff	eval_poly@res+2,___flmul@a+2
  5807  002FEC  C080  F05D         	movff	eval_poly@res+3,___flmul@a+3
  5808  002FF0  C071  F056         	movff	eval_poly@x,___flmul@b
  5809  002FF4  C072  F057         	movff	eval_poly@x+1,___flmul@b+1
  5810  002FF8  C073  F058         	movff	eval_poly@x+2,___flmul@b+2
  5811  002FFC  C074  F059         	movff	eval_poly@x+3,___flmul@b+3
  5812  003000  ECA5  F006         	call	___flmul	;wreg free
  5813  003004  C056  F01A         	movff	?___flmul,___fladd@b
  5814  003008  C057  F01B         	movff	?___flmul+1,___fladd@b+1
  5815  00300C  C058  F01C         	movff	?___flmul+2,___fladd@b+2
  5816  003010  C059  F01D         	movff	?___flmul+3,___fladd@b+3
  5817  003014  0100               	movlb	0	; () banked
  5818  003016  0777               	decf	eval_poly@n& (0+255),f,b
  5819  003018  A0D8               	btfss	status,0,c
  5820  00301A  0778               	decf	(eval_poly@n+1)& (0+255),f,b
  5821  00301C  C077  F079         	movff	eval_poly@n,??_eval_poly
  5822  003020  C078  F07A         	movff	eval_poly@n+1,??_eval_poly+1
  5823  003024  90D8               	bcf	status,0,c
  5824  003026  3779               	rlcf	??_eval_poly& (0+255),f,b
  5825  003028  377A               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5826  00302A  90D8               	bcf	status,0,c
  5827  00302C  3779               	rlcf	??_eval_poly& (0+255),f,b
  5828  00302E  377A               	rlcf	(??_eval_poly+1)& (0+255),f,b
  5829  003030  C075  F07B         	movff	eval_poly@d,??_eval_poly+2
  5830  003034  C076  F07C         	movff	eval_poly@d+1,??_eval_poly+3
  5831  003038  5179               	movf	??_eval_poly& (0+255),w,b
  5832  00303A  277B               	addwf	(??_eval_poly+2)& (0+255),f,b
  5833  00303C  517A               	movf	(??_eval_poly+1)& (0+255),w,b
  5834  00303E  237C               	addwfc	(??_eval_poly+3)& (0+255),f,b
  5835  003040  C07B  FFF6         	movff	??_eval_poly+2,tblptrl
  5836  003044  C07C  FFF7         	movff	??_eval_poly+3,tblptrh
  5837  003048                     	if	0	;tblptru may be non-zero
  5838  003048                     	endif
  5839  003048                     	if	0	;tblptru may be non-zero
  5840  003048                     	endif
  5841  003048  0009               	tblrd		*+
  5842  00304A  CFF5 F01E          	movff	tablat,___fladd@a
  5843  00304E  0009               	tblrd		*+
  5844  003050  CFF5 F01F          	movff	tablat,___fladd@a+1
  5845  003054  0009               	tblrd		*+
  5846  003056  CFF5 F020          	movff	tablat,___fladd@a+2
  5847  00305A  000A               	tblrd		*-
  5848  00305C  CFF5 F021          	movff	tablat,___fladd@a+3
  5849  003060  EC45  F004         	call	___fladd	;wreg free
  5850  003064  C01A  F07D         	movff	?___fladd,eval_poly@res
  5851  003068  C01B  F07E         	movff	?___fladd+1,eval_poly@res+1
  5852  00306C  C01C  F07F         	movff	?___fladd+2,eval_poly@res+2
  5853  003070  C01D  F080         	movff	?___fladd+3,eval_poly@res+3
  5854  003074                     l4448:
  5855  003074  0100               	movlb	0	; () banked
  5856  003076  5177               	movf	eval_poly@n& (0+255),w,b
  5857  003078  1178               	iorwf	(eval_poly@n+1)& (0+255),w,b
  5858  00307A  A4D8               	btfss	status,2,c
  5859  00307C  EF42  F018         	goto	u3621
  5860  003080  EF44  F018         	goto	u3620
  5861  003084                     u3621:
  5862  003084  EFF0  F017         	goto	l4446
  5863  003088                     u3620:
  5864  003088                     
  5865                           ; BSR set to: 0
  5866  003088  C07D  F071         	movff	eval_poly@res,?_eval_poly
  5867  00308C  C07E  F072         	movff	eval_poly@res+1,?_eval_poly+1
  5868  003090  C07F  F073         	movff	eval_poly@res+2,?_eval_poly+2
  5869  003094  C080  F074         	movff	eval_poly@res+3,?_eval_poly+3
  5870  003098                     
  5871                           ; BSR set to: 0
  5872  003098  0012               	return		;funcret
  5873  00309A                     __end_of_eval_poly:
  5874                           	callstack 0
  5875                           
  5876 ;; *************** function ___flmul *****************
  5877 ;; Defined at:
  5878 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcmul.c"
  5879 ;; Parameters:    Size  Location     Type
  5880 ;;  b               4   85[COMRAM] int 
  5881 ;;  a               4   89[COMRAM] int 
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;  prod            4   11[BANK0 ] struct .
  5884 ;;  grs             4    5[BANK0 ] unsigned long 
  5885 ;;  temp            2   15[BANK0 ] struct .
  5886 ;;  bexp            1   10[BANK0 ] unsigned char 
  5887 ;;  aexp            1    9[BANK0 ] unsigned char 
  5888 ;;  sign            1    4[BANK0 ] unsigned char 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  4   85[COMRAM] unsigned char 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0, prodl, prodh
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5898 ;;      Params:         8       0       0       0       0       0       0       0       0
  5899 ;;      Locals:         0      13       0       0       0       0       0       0       0
  5900 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5901 ;;      Totals:         8      17       0       0       0       0       0       0       0
  5902 ;;Total ram usage:       25 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; Hardware stack levels required when called:    3
  5905 ;; This function calls:
  5906 ;;		Nothing
  5907 ;; This function is called by:
  5908 ;;		_ComputeTemp
  5909 ;;		_ComputeWaterVol
  5910 ;;		_InitTankVariables
  5911 ;;		_log
  5912 ;;		_eval_poly
  5913 ;;		_pow
  5914 ;;		_exp
  5915 ;; This function uses a non-reentrant model
  5916 ;;
  5917                           
  5918                           	psect	text33
  5919  000D4A                     __ptext33:
  5920                           	callstack 0
  5921  000D4A                     ___flmul:
  5922                           	callstack 23
  5923  000D4A  5059               	movf	(___flmul@b+3)^0,w,c
  5924  000D4C  0B80               	andlw	128
  5925  000D4E  0100               	movlb	0	; () banked
  5926  000D50  6F64               	movwf	___flmul@sign& (0+255),b
  5927  000D52  5059               	movf	(___flmul@b+3)^0,w,c
  5928  000D54  2459               	addwf	(___flmul@b+3)^0,w,c
  5929  000D56  6F6A               	movwf	___flmul@bexp& (0+255),b
  5930  000D58                     
  5931                           ; BSR set to: 0
  5932  000D58  AE58               	btfss	(___flmul@b+2)^0,7,c
  5933  000D5A  EFB1  F006         	goto	u2781
  5934  000D5E  EFB3  F006         	goto	u2780
  5935  000D62                     u2781:
  5936  000D62  EFB4  F006         	goto	l3962
  5937  000D66                     u2780:
  5938  000D66                     
  5939                           ; BSR set to: 0
  5940  000D66  816A               	bsf	___flmul@bexp& (0+255),0,b
  5941  000D68                     l3962:
  5942                           
  5943                           ; BSR set to: 0
  5944  000D68  516A               	movf	___flmul@bexp& (0+255),w,b
  5945  000D6A  B4D8               	btfsc	status,2,c
  5946  000D6C  EFBA  F006         	goto	u2791
  5947  000D70  EFBC  F006         	goto	u2790
  5948  000D74                     u2791:
  5949  000D74  EFCF  F006         	goto	l3970
  5950  000D78                     u2790:
  5951  000D78                     
  5952                           ; BSR set to: 0
  5953  000D78  296A               	incf	___flmul@bexp& (0+255),w,b
  5954  000D7A  A4D8               	btfss	status,2,c
  5955  000D7C  EFC2  F006         	goto	u2801
  5956  000D80  EFC4  F006         	goto	u2800
  5957  000D84                     u2801:
  5958  000D84  EFCC  F006         	goto	l3968
  5959  000D88                     u2800:
  5960  000D88                     
  5961                           ; BSR set to: 0
  5962  000D88  0E00               	movlw	0
  5963  000D8A  6E56               	movwf	___flmul@b^0,c
  5964  000D8C  0E00               	movlw	0
  5965  000D8E  6E57               	movwf	(___flmul@b+1)^0,c
  5966  000D90  0E00               	movlw	0
  5967  000D92  6E58               	movwf	(___flmul@b+2)^0,c
  5968  000D94  0E00               	movlw	0
  5969  000D96  6E59               	movwf	(___flmul@b+3)^0,c
  5970  000D98                     l3968:
  5971                           
  5972                           ; BSR set to: 0
  5973  000D98  8E58               	bsf	(___flmul@b+2)^0,7,c
  5974  000D9A  EFD7  F006         	goto	l3972
  5975  000D9E                     l3970:
  5976                           
  5977                           ; BSR set to: 0
  5978  000D9E  0E00               	movlw	0
  5979  000DA0  6E56               	movwf	___flmul@b^0,c
  5980  000DA2  0E00               	movlw	0
  5981  000DA4  6E57               	movwf	(___flmul@b+1)^0,c
  5982  000DA6  0E00               	movlw	0
  5983  000DA8  6E58               	movwf	(___flmul@b+2)^0,c
  5984  000DAA  0E00               	movlw	0
  5985  000DAC  6E59               	movwf	(___flmul@b+3)^0,c
  5986  000DAE                     l3972:
  5987                           
  5988                           ; BSR set to: 0
  5989  000DAE  505D               	movf	(___flmul@a+3)^0,w,c
  5990  000DB0  0B80               	andlw	128
  5991  000DB2  1B64               	xorwf	___flmul@sign& (0+255),f,b
  5992  000DB4                     
  5993                           ; BSR set to: 0
  5994  000DB4  505D               	movf	(___flmul@a+3)^0,w,c
  5995  000DB6  245D               	addwf	(___flmul@a+3)^0,w,c
  5996  000DB8  6F69               	movwf	___flmul@aexp& (0+255),b
  5997  000DBA                     
  5998                           ; BSR set to: 0
  5999  000DBA  AE5C               	btfss	(___flmul@a+2)^0,7,c
  6000  000DBC  EFE2  F006         	goto	u2811
  6001  000DC0  EFE4  F006         	goto	u2810
  6002  000DC4                     u2811:
  6003  000DC4  EFE5  F006         	goto	l3980
  6004  000DC8                     u2810:
  6005  000DC8                     
  6006                           ; BSR set to: 0
  6007  000DC8  8169               	bsf	___flmul@aexp& (0+255),0,b
  6008  000DCA                     l3980:
  6009                           
  6010                           ; BSR set to: 0
  6011  000DCA  5169               	movf	___flmul@aexp& (0+255),w,b
  6012  000DCC  B4D8               	btfsc	status,2,c
  6013  000DCE  EFEB  F006         	goto	u2821
  6014  000DD2  EFED  F006         	goto	u2820
  6015  000DD6                     u2821:
  6016  000DD6  EF00  F007         	goto	l3988
  6017  000DDA                     u2820:
  6018  000DDA                     
  6019                           ; BSR set to: 0
  6020  000DDA  2969               	incf	___flmul@aexp& (0+255),w,b
  6021  000DDC  A4D8               	btfss	status,2,c
  6022  000DDE  EFF3  F006         	goto	u2831
  6023  000DE2  EFF5  F006         	goto	u2830
  6024  000DE6                     u2831:
  6025  000DE6  EFFD  F006         	goto	l3986
  6026  000DEA                     u2830:
  6027  000DEA                     
  6028                           ; BSR set to: 0
  6029  000DEA  0E00               	movlw	0
  6030  000DEC  6E5A               	movwf	___flmul@a^0,c
  6031  000DEE  0E00               	movlw	0
  6032  000DF0  6E5B               	movwf	(___flmul@a+1)^0,c
  6033  000DF2  0E00               	movlw	0
  6034  000DF4  6E5C               	movwf	(___flmul@a+2)^0,c
  6035  000DF6  0E00               	movlw	0
  6036  000DF8  6E5D               	movwf	(___flmul@a+3)^0,c
  6037  000DFA                     l3986:
  6038                           
  6039                           ; BSR set to: 0
  6040  000DFA  8E5C               	bsf	(___flmul@a+2)^0,7,c
  6041  000DFC  EF08  F007         	goto	l1813
  6042  000E00                     l3988:
  6043                           
  6044                           ; BSR set to: 0
  6045  000E00  0E00               	movlw	0
  6046  000E02  6E5A               	movwf	___flmul@a^0,c
  6047  000E04  0E00               	movlw	0
  6048  000E06  6E5B               	movwf	(___flmul@a+1)^0,c
  6049  000E08  0E00               	movlw	0
  6050  000E0A  6E5C               	movwf	(___flmul@a+2)^0,c
  6051  000E0C  0E00               	movlw	0
  6052  000E0E  6E5D               	movwf	(___flmul@a+3)^0,c
  6053  000E10                     l1813:
  6054                           
  6055                           ; BSR set to: 0
  6056  000E10  5169               	movf	___flmul@aexp& (0+255),w,b
  6057  000E12  B4D8               	btfsc	status,2,c
  6058  000E14  EF0E  F007         	goto	u2841
  6059  000E18  EF10  F007         	goto	u2840
  6060  000E1C                     u2841:
  6061  000E1C  EF18  F007         	goto	l3992
  6062  000E20                     u2840:
  6063  000E20                     
  6064                           ; BSR set to: 0
  6065  000E20  516A               	movf	___flmul@bexp& (0+255),w,b
  6066  000E22  A4D8               	btfss	status,2,c
  6067  000E24  EF16  F007         	goto	u2851
  6068  000E28  EF18  F007         	goto	u2850
  6069  000E2C                     u2851:
  6070  000E2C  EF22  F007         	goto	l3996
  6071  000E30                     u2850:
  6072  000E30                     l3992:
  6073                           
  6074                           ; BSR set to: 0
  6075  000E30  0E00               	movlw	0
  6076  000E32  6E56               	movwf	?___flmul^0,c
  6077  000E34  0E00               	movlw	0
  6078  000E36  6E57               	movwf	(?___flmul+1)^0,c
  6079  000E38  0E00               	movlw	0
  6080  000E3A  6E58               	movwf	(?___flmul+2)^0,c
  6081  000E3C  0E00               	movlw	0
  6082  000E3E  6E59               	movwf	(?___flmul+3)^0,c
  6083  000E40  EFBA  F008         	goto	l1817
  6084  000E44                     l3996:
  6085                           
  6086                           ; BSR set to: 0
  6087  000E44  505C               	movf	(___flmul@a+2)^0,w,c
  6088  000E46  0256               	mulwf	___flmul@b^0,c
  6089  000E48  CFF3 F06F          	movff	prodl,___flmul@temp
  6090  000E4C  CFF4 F070          	movff	prodh,___flmul@temp+1
  6091  000E50                     
  6092                           ; BSR set to: 0
  6093  000E50  516F               	movf	___flmul@temp& (0+255),w,b
  6094  000E52  6F65               	movwf	___flmul@grs& (0+255),b
  6095  000E54  6B66               	clrf	(___flmul@grs+1)& (0+255),b
  6096  000E56  6B67               	clrf	(___flmul@grs+2)& (0+255),b
  6097  000E58  6B68               	clrf	(___flmul@grs+3)& (0+255),b
  6098  000E5A                     
  6099                           ; BSR set to: 0
  6100  000E5A  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6101  000E5C  6F6B               	movwf	___flmul@prod& (0+255),b
  6102  000E5E  6B6C               	clrf	(___flmul@prod+1)& (0+255),b
  6103  000E60  6B6D               	clrf	(___flmul@prod+2)& (0+255),b
  6104  000E62  6B6E               	clrf	(___flmul@prod+3)& (0+255),b
  6105  000E64  505B               	movf	(___flmul@a+1)^0,w,c
  6106  000E66  0257               	mulwf	(___flmul@b+1)^0,c
  6107  000E68  CFF3 F06F          	movff	prodl,___flmul@temp
  6108  000E6C  CFF4 F070          	movff	prodh,___flmul@temp+1
  6109  000E70                     
  6110                           ; BSR set to: 0
  6111  000E70  516F               	movf	___flmul@temp& (0+255),w,b
  6112  000E72  2765               	addwf	___flmul@grs& (0+255),f,b
  6113  000E74  0E00               	movlw	0
  6114  000E76  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6115  000E78  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6116  000E7A  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6117  000E7C                     
  6118                           ; BSR set to: 0
  6119  000E7C  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6120  000E7E  276B               	addwf	___flmul@prod& (0+255),f,b
  6121  000E80  0E00               	movlw	0
  6122  000E82  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6123  000E84  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6124  000E86  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6125  000E88  505A               	movf	___flmul@a^0,w,c
  6126  000E8A  0258               	mulwf	(___flmul@b+2)^0,c
  6127  000E8C  CFF3 F06F          	movff	prodl,___flmul@temp
  6128  000E90  CFF4 F070          	movff	prodh,___flmul@temp+1
  6129  000E94                     
  6130                           ; BSR set to: 0
  6131  000E94  516F               	movf	___flmul@temp& (0+255),w,b
  6132  000E96  2765               	addwf	___flmul@grs& (0+255),f,b
  6133  000E98  0E00               	movlw	0
  6134  000E9A  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6135  000E9C  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6136  000E9E  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6137  000EA0                     
  6138                           ; BSR set to: 0
  6139  000EA0  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6140  000EA2  276B               	addwf	___flmul@prod& (0+255),f,b
  6141  000EA4  0E00               	movlw	0
  6142  000EA6  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6143  000EA8  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6144  000EAA  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6145  000EAC                     
  6146                           ; BSR set to: 0
  6147  000EAC  C067  F068         	movff	___flmul@grs+2,___flmul@grs+3
  6148  000EB0  C066  F067         	movff	___flmul@grs+1,___flmul@grs+2
  6149  000EB4  C065  F066         	movff	___flmul@grs,___flmul@grs+1
  6150  000EB8  6B65               	clrf	___flmul@grs& (0+255),b
  6151  000EBA                     
  6152                           ; BSR set to: 0
  6153  000EBA  505A               	movf	___flmul@a^0,w,c
  6154  000EBC  0257               	mulwf	(___flmul@b+1)^0,c
  6155  000EBE  CFF3 F06F          	movff	prodl,___flmul@temp
  6156  000EC2  CFF4 F070          	movff	prodh,___flmul@temp+1
  6157  000EC6                     
  6158                           ; BSR set to: 0
  6159  000EC6  516F               	movf	___flmul@temp& (0+255),w,b
  6160  000EC8  2765               	addwf	___flmul@grs& (0+255),f,b
  6161  000ECA  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6162  000ECC  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6163  000ECE  0E00               	movlw	0
  6164  000ED0  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6165  000ED2  0E00               	movlw	0
  6166  000ED4  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6167  000ED6                     
  6168                           ; BSR set to: 0
  6169  000ED6  505B               	movf	(___flmul@a+1)^0,w,c
  6170  000ED8  0256               	mulwf	___flmul@b^0,c
  6171  000EDA  CFF3 F06F          	movff	prodl,___flmul@temp
  6172  000EDE  CFF4 F070          	movff	prodh,___flmul@temp+1
  6173  000EE2                     
  6174                           ; BSR set to: 0
  6175  000EE2  516F               	movf	___flmul@temp& (0+255),w,b
  6176  000EE4  2765               	addwf	___flmul@grs& (0+255),f,b
  6177  000EE6  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6178  000EE8  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6179  000EEA  0E00               	movlw	0
  6180  000EEC  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6181  000EEE  0E00               	movlw	0
  6182  000EF0  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6183  000EF2                     
  6184                           ; BSR set to: 0
  6185  000EF2  C067  F068         	movff	___flmul@grs+2,___flmul@grs+3
  6186  000EF6  C066  F067         	movff	___flmul@grs+1,___flmul@grs+2
  6187  000EFA  C065  F066         	movff	___flmul@grs,___flmul@grs+1
  6188  000EFE  6B65               	clrf	___flmul@grs& (0+255),b
  6189  000F00  505A               	movf	___flmul@a^0,w,c
  6190  000F02  0256               	mulwf	___flmul@b^0,c
  6191  000F04  CFF3 F06F          	movff	prodl,___flmul@temp
  6192  000F08  CFF4 F070          	movff	prodh,___flmul@temp+1
  6193  000F0C                     
  6194                           ; BSR set to: 0
  6195  000F0C  516F               	movf	___flmul@temp& (0+255),w,b
  6196  000F0E  2765               	addwf	___flmul@grs& (0+255),f,b
  6197  000F10  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6198  000F12  2366               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6199  000F14  0E00               	movlw	0
  6200  000F16  2367               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6201  000F18  0E00               	movlw	0
  6202  000F1A  2368               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6203  000F1C                     
  6204                           ; BSR set to: 0
  6205  000F1C  505C               	movf	(___flmul@a+2)^0,w,c
  6206  000F1E  0257               	mulwf	(___flmul@b+1)^0,c
  6207  000F20  CFF3 F06F          	movff	prodl,___flmul@temp
  6208  000F24  CFF4 F070          	movff	prodh,___flmul@temp+1
  6209  000F28  516F               	movf	___flmul@temp& (0+255),w,b
  6210  000F2A  276B               	addwf	___flmul@prod& (0+255),f,b
  6211  000F2C  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6212  000F2E  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6213  000F30  0E00               	movlw	0
  6214  000F32  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6215  000F34  0E00               	movlw	0
  6216  000F36  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6217  000F38                     
  6218                           ; BSR set to: 0
  6219  000F38  505B               	movf	(___flmul@a+1)^0,w,c
  6220  000F3A  0258               	mulwf	(___flmul@b+2)^0,c
  6221  000F3C  CFF3 F06F          	movff	prodl,___flmul@temp
  6222  000F40  CFF4 F070          	movff	prodh,___flmul@temp+1
  6223  000F44                     
  6224                           ; BSR set to: 0
  6225  000F44  516F               	movf	___flmul@temp& (0+255),w,b
  6226  000F46  276B               	addwf	___flmul@prod& (0+255),f,b
  6227  000F48  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6228  000F4A  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6229  000F4C  0E00               	movlw	0
  6230  000F4E  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6231  000F50  0E00               	movlw	0
  6232  000F52  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6233  000F54  505C               	movf	(___flmul@a+2)^0,w,c
  6234  000F56  0258               	mulwf	(___flmul@b+2)^0,c
  6235  000F58  CFF3 F06F          	movff	prodl,___flmul@temp
  6236  000F5C  CFF4 F070          	movff	prodh,___flmul@temp+1
  6237  000F60                     
  6238                           ; BSR set to: 0
  6239  000F60  516F               	movf	___flmul@temp& (0+255),w,b
  6240  000F62  6F60               	movwf	??___flmul& (0+255),b
  6241  000F64  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6242  000F66  6F61               	movwf	(??___flmul+1)& (0+255),b
  6243  000F68  6B62               	clrf	(??___flmul+2)& (0+255),b
  6244  000F6A  6B63               	clrf	(??___flmul+3)& (0+255),b
  6245  000F6C  C062  F063         	movff	??___flmul+2,??___flmul+3
  6246  000F70  C061  F062         	movff	??___flmul+1,??___flmul+2
  6247  000F74  C060  F061         	movff	??___flmul,??___flmul+1
  6248  000F78  6B60               	clrf	??___flmul& (0+255),b
  6249  000F7A  5160               	movf	??___flmul& (0+255),w,b
  6250  000F7C  276B               	addwf	___flmul@prod& (0+255),f,b
  6251  000F7E  5161               	movf	(??___flmul+1)& (0+255),w,b
  6252  000F80  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6253  000F82  5162               	movf	(??___flmul+2)& (0+255),w,b
  6254  000F84  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6255  000F86  5163               	movf	(??___flmul+3)& (0+255),w,b
  6256  000F88  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6257  000F8A                     
  6258                           ; BSR set to: 0
  6259  000F8A  C065  F060         	movff	___flmul@grs,??___flmul
  6260  000F8E  C066  F061         	movff	___flmul@grs+1,??___flmul+1
  6261  000F92  C067  F062         	movff	___flmul@grs+2,??___flmul+2
  6262  000F96  C068  F063         	movff	___flmul@grs+3,??___flmul+3
  6263  000F9A  0E19               	movlw	25
  6264  000F9C  EFD5  F007         	goto	u2860
  6265  000FA0                     u2865:
  6266  000FA0  90D8               	bcf	status,0,c
  6267  000FA2  3363               	rrcf	(??___flmul+3)& (0+255),f,b
  6268  000FA4  3362               	rrcf	(??___flmul+2)& (0+255),f,b
  6269  000FA6  3361               	rrcf	(??___flmul+1)& (0+255),f,b
  6270  000FA8  3360               	rrcf	??___flmul& (0+255),f,b
  6271  000FAA                     u2860:
  6272  000FAA  2EE8               	decfsz	wreg,f,c
  6273  000FAC  EFD0  F007         	goto	u2865
  6274  000FB0  5160               	movf	??___flmul& (0+255),w,b
  6275  000FB2  276B               	addwf	___flmul@prod& (0+255),f,b
  6276  000FB4  5161               	movf	(??___flmul+1)& (0+255),w,b
  6277  000FB6  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6278  000FB8  5162               	movf	(??___flmul+2)& (0+255),w,b
  6279  000FBA  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6280  000FBC  5163               	movf	(??___flmul+3)& (0+255),w,b
  6281  000FBE  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6282  000FC0                     
  6283                           ; BSR set to: 0
  6284  000FC0  C067  F068         	movff	___flmul@grs+2,___flmul@grs+3
  6285  000FC4  C066  F067         	movff	___flmul@grs+1,___flmul@grs+2
  6286  000FC8  C065  F066         	movff	___flmul@grs,___flmul@grs+1
  6287  000FCC  6B65               	clrf	___flmul@grs& (0+255),b
  6288  000FCE                     
  6289                           ; BSR set to: 0
  6290  000FCE  5169               	movf	___flmul@aexp& (0+255),w,b
  6291  000FD0  C06A  F060         	movff	___flmul@bexp,??___flmul
  6292  000FD4  6B61               	clrf	(??___flmul+1)& (0+255),b
  6293  000FD6  2760               	addwf	??___flmul& (0+255),f,b
  6294  000FD8  0E00               	movlw	0
  6295  000FDA  2361               	addwfc	(??___flmul+1)& (0+255),f,b
  6296  000FDC  0E82               	movlw	130
  6297  000FDE  2560               	addwf	??___flmul& (0+255),w,b
  6298  000FE0  6F6F               	movwf	___flmul@temp& (0+255),b
  6299  000FE2  0EFF               	movlw	255
  6300  000FE4  2161               	addwfc	(??___flmul+1)& (0+255),w,b
  6301  000FE6  6F70               	movwf	(___flmul@temp+1)& (0+255),b
  6302  000FE8  EF0B  F008         	goto	l4044
  6303  000FEC                     l4038:
  6304                           
  6305                           ; BSR set to: 0
  6306  000FEC  90D8               	bcf	status,0,c
  6307  000FEE  376B               	rlcf	___flmul@prod& (0+255),f,b
  6308  000FF0  376C               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6309  000FF2  376D               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6310  000FF4  376E               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6311  000FF6                     
  6312                           ; BSR set to: 0
  6313  000FF6  AF68               	btfss	(___flmul@grs+3)& (0+255),7,b
  6314  000FF8  EF00  F008         	goto	u2871
  6315  000FFC  EF02  F008         	goto	u2870
  6316  001000                     u2871:
  6317  001000  EF03  F008         	goto	l1820
  6318  001004                     u2870:
  6319  001004                     
  6320                           ; BSR set to: 0
  6321  001004  816B               	bsf	___flmul@prod& (0+255),0,b
  6322  001006                     l1820:
  6323                           
  6324                           ; BSR set to: 0
  6325  001006  90D8               	bcf	status,0,c
  6326  001008  3765               	rlcf	___flmul@grs& (0+255),f,b
  6327  00100A  3766               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6328  00100C  3767               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6329  00100E  3768               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6330  001010  076F               	decf	___flmul@temp& (0+255),f,b
  6331  001012  A0D8               	btfss	status,0,c
  6332  001014  0770               	decf	(___flmul@temp+1)& (0+255),f,b
  6333  001016                     l4044:
  6334                           
  6335                           ; BSR set to: 0
  6336  001016  AF6D               	btfss	(___flmul@prod+2)& (0+255),7,b
  6337  001018  EF10  F008         	goto	u2881
  6338  00101C  EF12  F008         	goto	u2880
  6339  001020                     u2881:
  6340  001020  EFF6  F007         	goto	l4038
  6341  001024                     u2880:
  6342  001024                     
  6343                           ; BSR set to: 0
  6344  001024  0E00               	movlw	0
  6345  001026  6F69               	movwf	___flmul@aexp& (0+255),b
  6346  001028                     
  6347                           ; BSR set to: 0
  6348  001028  AF68               	btfss	(___flmul@grs+3)& (0+255),7,b
  6349  00102A  EF19  F008         	goto	u2891
  6350  00102E  EF1B  F008         	goto	u2890
  6351  001032                     u2891:
  6352  001032  EF3F  F008         	goto	l1822
  6353  001036                     u2890:
  6354  001036                     
  6355                           ; BSR set to: 0
  6356  001036  0EFF               	movlw	255
  6357  001038  1565               	andwf	___flmul@grs& (0+255),w,b
  6358  00103A  6F60               	movwf	??___flmul& (0+255),b
  6359  00103C  0EFF               	movlw	255
  6360  00103E  1566               	andwf	(___flmul@grs+1)& (0+255),w,b
  6361  001040  6F61               	movwf	(??___flmul+1)& (0+255),b
  6362  001042  0EFF               	movlw	255
  6363  001044  1567               	andwf	(___flmul@grs+2)& (0+255),w,b
  6364  001046  6F62               	movwf	(??___flmul+2)& (0+255),b
  6365  001048  0E7F               	movlw	127
  6366  00104A  1568               	andwf	(___flmul@grs+3)& (0+255),w,b
  6367  00104C  6F63               	movwf	(??___flmul+3)& (0+255),b
  6368  00104E  5160               	movf	??___flmul& (0+255),w,b
  6369  001050  1161               	iorwf	(??___flmul+1)& (0+255),w,b
  6370  001052  1162               	iorwf	(??___flmul+2)& (0+255),w,b
  6371  001054  1163               	iorwf	(??___flmul+3)& (0+255),w,b
  6372  001056  B4D8               	btfsc	status,2,c
  6373  001058  EF30  F008         	goto	u2901
  6374  00105C  EF32  F008         	goto	u2900
  6375  001060                     u2901:
  6376  001060  EF36  F008         	goto	l1823
  6377  001064                     u2900:
  6378  001064                     l4052:
  6379                           
  6380                           ; BSR set to: 0
  6381  001064  0E01               	movlw	1
  6382  001066  6F69               	movwf	___flmul@aexp& (0+255),b
  6383  001068  EF3F  F008         	goto	l1822
  6384  00106C                     l1823:
  6385                           
  6386                           ; BSR set to: 0
  6387  00106C  A16B               	btfss	___flmul@prod& (0+255),0,b
  6388  00106E  EF3B  F008         	goto	u2911
  6389  001072  EF3D  F008         	goto	u2910
  6390  001076                     u2911:
  6391  001076  EF3F  F008         	goto	l1822
  6392  00107A                     u2910:
  6393  00107A  EF32  F008         	goto	l4052
  6394  00107E                     l1822:
  6395                           
  6396                           ; BSR set to: 0
  6397  00107E  5169               	movf	___flmul@aexp& (0+255),w,b
  6398  001080  B4D8               	btfsc	status,2,c
  6399  001082  EF45  F008         	goto	u2921
  6400  001086  EF47  F008         	goto	u2920
  6401  00108A                     u2921:
  6402  00108A  EF6B  F008         	goto	l4064
  6403  00108E                     u2920:
  6404  00108E                     
  6405                           ; BSR set to: 0
  6406  00108E  0E01               	movlw	1
  6407  001090  276B               	addwf	___flmul@prod& (0+255),f,b
  6408  001092  0E00               	movlw	0
  6409  001094  236C               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6410  001096  236D               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6411  001098  236E               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6412  00109A                     
  6413                           ; BSR set to: 0
  6414  00109A  A16E               	btfss	(___flmul@prod+3)& (0+255),0,b
  6415  00109C  EF52  F008         	goto	u2931
  6416  0010A0  EF54  F008         	goto	u2930
  6417  0010A4                     u2931:
  6418  0010A4  EF6B  F008         	goto	l4064
  6419  0010A8                     u2930:
  6420  0010A8                     
  6421                           ; BSR set to: 0
  6422  0010A8  C06B  F060         	movff	___flmul@prod,??___flmul
  6423  0010AC  C06C  F061         	movff	___flmul@prod+1,??___flmul+1
  6424  0010B0  C06D  F062         	movff	___flmul@prod+2,??___flmul+2
  6425  0010B4  C06E  F063         	movff	___flmul@prod+3,??___flmul+3
  6426  0010B8  3563               	rlcf	(??___flmul+3)& (0+255),w,b
  6427  0010BA  3363               	rrcf	(??___flmul+3)& (0+255),f,b
  6428  0010BC  3362               	rrcf	(??___flmul+2)& (0+255),f,b
  6429  0010BE  3361               	rrcf	(??___flmul+1)& (0+255),f,b
  6430  0010C0  3360               	rrcf	??___flmul& (0+255),f,b
  6431  0010C2  C060  F06B         	movff	??___flmul,___flmul@prod
  6432  0010C6  C061  F06C         	movff	??___flmul+1,___flmul@prod+1
  6433  0010CA  C062  F06D         	movff	??___flmul+2,___flmul@prod+2
  6434  0010CE  C063  F06E         	movff	??___flmul+3,___flmul@prod+3
  6435  0010D2                     
  6436                           ; BSR set to: 0
  6437  0010D2  4B6F               	infsnz	___flmul@temp& (0+255),f,b
  6438  0010D4  2B70               	incf	(___flmul@temp+1)& (0+255),f,b
  6439  0010D6                     l4064:
  6440                           
  6441                           ; BSR set to: 0
  6442  0010D6  BF70               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6443  0010D8  EF76  F008         	goto	u2941
  6444  0010DC  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6445  0010DE  E108               	bnz	u2940
  6446  0010E0  296F               	incf	___flmul@temp& (0+255),w,b
  6447  0010E2  A0D8               	btfss	status,0,c
  6448  0010E4  EF76  F008         	goto	u2941
  6449  0010E8  EF78  F008         	goto	u2940
  6450  0010EC                     u2941:
  6451  0010EC  EF82  F008         	goto	l4068
  6452  0010F0                     u2940:
  6453  0010F0                     
  6454                           ; BSR set to: 0
  6455  0010F0  0E00               	movlw	0
  6456  0010F2  6F6B               	movwf	___flmul@prod& (0+255),b
  6457  0010F4  0E00               	movlw	0
  6458  0010F6  6F6C               	movwf	(___flmul@prod+1)& (0+255),b
  6459  0010F8  0E80               	movlw	128
  6460  0010FA  6F6D               	movwf	(___flmul@prod+2)& (0+255),b
  6461  0010FC  0E7F               	movlw	127
  6462  0010FE  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
  6463  001100  EFB0  F008         	goto	l4080
  6464  001104                     l4068:
  6465                           
  6466                           ; BSR set to: 0
  6467  001104  BF70               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6468  001106  EF8F  F008         	goto	u2950
  6469  00110A  5170               	movf	(___flmul@temp+1)& (0+255),w,b
  6470  00110C  E106               	bnz	u2951
  6471  00110E  056F               	decf	___flmul@temp& (0+255),w,b
  6472  001110  B0D8               	btfsc	status,0,c
  6473  001112  EF8D  F008         	goto	u2951
  6474  001116  EF8F  F008         	goto	u2950
  6475  00111A                     u2951:
  6476  00111A  EF9B  F008         	goto	l1830
  6477  00111E                     u2950:
  6478  00111E                     
  6479                           ; BSR set to: 0
  6480  00111E  0E00               	movlw	0
  6481  001120  6F6B               	movwf	___flmul@prod& (0+255),b
  6482  001122  0E00               	movlw	0
  6483  001124  6F6C               	movwf	(___flmul@prod+1)& (0+255),b
  6484  001126  0E00               	movlw	0
  6485  001128  6F6D               	movwf	(___flmul@prod+2)& (0+255),b
  6486  00112A  0E00               	movlw	0
  6487  00112C  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
  6488  00112E  0E00               	movlw	0
  6489  001130  6F64               	movwf	___flmul@sign& (0+255),b
  6490  001132  EFB0  F008         	goto	l4080
  6491  001136                     l1830:
  6492                           
  6493                           ; BSR set to: 0
  6494  001136  C06F  F06A         	movff	___flmul@temp,___flmul@bexp
  6495  00113A                     
  6496                           ; BSR set to: 0
  6497  00113A  0EFF               	movlw	255
  6498  00113C  176B               	andwf	___flmul@prod& (0+255),f,b
  6499  00113E  0EFF               	movlw	255
  6500  001140  176C               	andwf	(___flmul@prod+1)& (0+255),f,b
  6501  001142  0E7F               	movlw	127
  6502  001144  176D               	andwf	(___flmul@prod+2)& (0+255),f,b
  6503  001146  0E00               	movlw	0
  6504  001148  176E               	andwf	(___flmul@prod+3)& (0+255),f,b
  6505  00114A                     
  6506                           ; BSR set to: 0
  6507  00114A  A16A               	btfss	___flmul@bexp& (0+255),0,b
  6508  00114C  EFAA  F008         	goto	u2961
  6509  001150  EFAC  F008         	goto	u2960
  6510  001154                     u2961:
  6511  001154  EFAD  F008         	goto	l4078
  6512  001158                     u2960:
  6513  001158                     
  6514                           ; BSR set to: 0
  6515  001158  8F6D               	bsf	(___flmul@prod+2)& (0+255),7,b
  6516  00115A                     l4078:
  6517                           
  6518                           ; BSR set to: 0
  6519  00115A  90D8               	bcf	status,0,c
  6520  00115C  316A               	rrcf	___flmul@bexp& (0+255),w,b
  6521  00115E  6F6E               	movwf	(___flmul@prod+3)& (0+255),b
  6522  001160                     l4080:
  6523                           
  6524                           ; BSR set to: 0
  6525  001160  5164               	movf	___flmul@sign& (0+255),w,b
  6526  001162  136E               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6527  001164                     
  6528                           ; BSR set to: 0
  6529  001164  C06B  F056         	movff	___flmul@prod,?___flmul
  6530  001168  C06C  F057         	movff	___flmul@prod+1,?___flmul+1
  6531  00116C  C06D  F058         	movff	___flmul@prod+2,?___flmul+2
  6532  001170  C06E  F059         	movff	___flmul@prod+3,?___flmul+3
  6533  001174                     l1817:
  6534                           
  6535                           ; BSR set to: 0
  6536  001174  0012               	return		;funcret
  6537  001176                     __end_of___flmul:
  6538                           	callstack 0
  6539                           
  6540 ;; *************** function ___fladd *****************
  6541 ;; Defined at:
  6542 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcadd.c"
  6543 ;; Parameters:    Size  Location     Type
  6544 ;;  b               4   25[COMRAM] unsigned char 
  6545 ;;  a               4   29[COMRAM] unsigned char 
  6546 ;; Auto vars:     Size  Location     Type
  6547 ;;  grs             1   40[COMRAM] unsigned char 
  6548 ;;  bexp            1   39[COMRAM] unsigned char 
  6549 ;;  aexp            1   38[COMRAM] unsigned char 
  6550 ;;  signs           1   37[COMRAM] unsigned char 
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  4   25[COMRAM] unsigned char 
  6553 ;; Registers used:
  6554 ;;		wreg, status,2, status,0
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6560 ;;      Params:         8       0       0       0       0       0       0       0       0
  6561 ;;      Locals:         4       0       0       0       0       0       0       0       0
  6562 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6563 ;;      Totals:        16       0       0       0       0       0       0       0       0
  6564 ;;Total ram usage:       16 bytes
  6565 ;; Hardware stack levels used:    1
  6566 ;; Hardware stack levels required when called:    3
  6567 ;; This function calls:
  6568 ;;		Nothing
  6569 ;; This function is called by:
  6570 ;;		_ComputeTemp
  6571 ;;		_ComputeWaterVol
  6572 ;;		___flsub
  6573 ;;		_log
  6574 ;;		_eval_poly
  6575 ;;		_floor
  6576 ;;		_round
  6577 ;; This function uses a non-reentrant model
  6578 ;;
  6579                           
  6580                           	psect	text34
  6581  00088A                     __ptext34:
  6582                           	callstack 0
  6583  00088A                     ___fladd:
  6584                           	callstack 23
  6585  00088A  501D               	movf	(___fladd@b+3)^0,w,c
  6586  00088C  0B80               	andlw	128
  6587  00088E  6E26               	movwf	___fladd@signs^0,c
  6588  000890  501D               	movf	(___fladd@b+3)^0,w,c
  6589  000892  241D               	addwf	(___fladd@b+3)^0,w,c
  6590  000894  6E28               	movwf	___fladd@bexp^0,c
  6591  000896  AE1C               	btfss	(___fladd@b+2)^0,7,c
  6592  000898  EF50  F004         	goto	u2391
  6593  00089C  EF52  F004         	goto	u2390
  6594  0008A0                     u2391:
  6595  0008A0  EF53  F004         	goto	l3760
  6596  0008A4                     u2390:
  6597  0008A4  8028               	bsf	___fladd@bexp^0,0,c
  6598  0008A6                     l3760:
  6599  0008A6  5028               	movf	___fladd@bexp^0,w,c
  6600  0008A8  B4D8               	btfsc	status,2,c
  6601  0008AA  EF59  F004         	goto	u2401
  6602  0008AE  EF5B  F004         	goto	u2400
  6603  0008B2                     u2401:
  6604  0008B2  EF70  F004         	goto	l3770
  6605  0008B6                     u2400:
  6606  0008B6  2828               	incf	___fladd@bexp^0,w,c
  6607  0008B8  A4D8               	btfss	status,2,c
  6608  0008BA  EF61  F004         	goto	u2411
  6609  0008BE  EF63  F004         	goto	u2410
  6610  0008C2                     u2411:
  6611  0008C2  EF6B  F004         	goto	l3766
  6612  0008C6                     u2410:
  6613  0008C6  0E00               	movlw	0
  6614  0008C8  6E1A               	movwf	___fladd@b^0,c
  6615  0008CA  0E00               	movlw	0
  6616  0008CC  6E1B               	movwf	(___fladd@b+1)^0,c
  6617  0008CE  0E00               	movlw	0
  6618  0008D0  6E1C               	movwf	(___fladd@b+2)^0,c
  6619  0008D2  0E00               	movlw	0
  6620  0008D4  6E1D               	movwf	(___fladd@b+3)^0,c
  6621  0008D6                     l3766:
  6622  0008D6  8E1C               	bsf	(___fladd@b+2)^0,7,c
  6623  0008D8  0E00               	movlw	0
  6624  0008DA  6E1D               	movwf	(___fladd@b+3)^0,c
  6625  0008DC  EF78  F004         	goto	l3772
  6626  0008E0                     l3770:
  6627  0008E0  0E00               	movlw	0
  6628  0008E2  6E1A               	movwf	___fladd@b^0,c
  6629  0008E4  0E00               	movlw	0
  6630  0008E6  6E1B               	movwf	(___fladd@b+1)^0,c
  6631  0008E8  0E00               	movlw	0
  6632  0008EA  6E1C               	movwf	(___fladd@b+2)^0,c
  6633  0008EC  0E00               	movlw	0
  6634  0008EE  6E1D               	movwf	(___fladd@b+3)^0,c
  6635  0008F0                     l3772:
  6636  0008F0  5021               	movf	(___fladd@a+3)^0,w,c
  6637  0008F2  0B80               	andlw	128
  6638  0008F4  6E27               	movwf	___fladd@aexp^0,c
  6639  0008F6  5026               	movf	___fladd@signs^0,w,c
  6640  0008F8  1827               	xorwf	___fladd@aexp^0,w,c
  6641  0008FA  B4D8               	btfsc	status,2,c
  6642  0008FC  EF82  F004         	goto	u2421
  6643  000900  EF84  F004         	goto	u2420
  6644  000904                     u2421:
  6645  000904  EF85  F004         	goto	l3778
  6646  000908                     u2420:
  6647  000908  8C26               	bsf	___fladd@signs^0,6,c
  6648  00090A                     l3778:
  6649  00090A  5021               	movf	(___fladd@a+3)^0,w,c
  6650  00090C  2421               	addwf	(___fladd@a+3)^0,w,c
  6651  00090E  6E27               	movwf	___fladd@aexp^0,c
  6652  000910  AE20               	btfss	(___fladd@a+2)^0,7,c
  6653  000912  EF8D  F004         	goto	u2431
  6654  000916  EF8F  F004         	goto	u2430
  6655  00091A                     u2431:
  6656  00091A  EF90  F004         	goto	l3784
  6657  00091E                     u2430:
  6658  00091E  8027               	bsf	___fladd@aexp^0,0,c
  6659  000920                     l3784:
  6660  000920  5027               	movf	___fladd@aexp^0,w,c
  6661  000922  B4D8               	btfsc	status,2,c
  6662  000924  EF96  F004         	goto	u2441
  6663  000928  EF98  F004         	goto	u2440
  6664  00092C                     u2441:
  6665  00092C  EFAD  F004         	goto	l3794
  6666  000930                     u2440:
  6667  000930  2827               	incf	___fladd@aexp^0,w,c
  6668  000932  A4D8               	btfss	status,2,c
  6669  000934  EF9E  F004         	goto	u2451
  6670  000938  EFA0  F004         	goto	u2450
  6671  00093C                     u2451:
  6672  00093C  EFA8  F004         	goto	l3790
  6673  000940                     u2450:
  6674  000940  0E00               	movlw	0
  6675  000942  6E1E               	movwf	___fladd@a^0,c
  6676  000944  0E00               	movlw	0
  6677  000946  6E1F               	movwf	(___fladd@a+1)^0,c
  6678  000948  0E00               	movlw	0
  6679  00094A  6E20               	movwf	(___fladd@a+2)^0,c
  6680  00094C  0E00               	movlw	0
  6681  00094E  6E21               	movwf	(___fladd@a+3)^0,c
  6682  000950                     l3790:
  6683  000950  8E20               	bsf	(___fladd@a+2)^0,7,c
  6684  000952  0E00               	movlw	0
  6685  000954  6E21               	movwf	(___fladd@a+3)^0,c
  6686  000956  EFB5  F004         	goto	l3796
  6687  00095A                     l3794:
  6688  00095A  0E00               	movlw	0
  6689  00095C  6E1E               	movwf	___fladd@a^0,c
  6690  00095E  0E00               	movlw	0
  6691  000960  6E1F               	movwf	(___fladd@a+1)^0,c
  6692  000962  0E00               	movlw	0
  6693  000964  6E20               	movwf	(___fladd@a+2)^0,c
  6694  000966  0E00               	movlw	0
  6695  000968  6E21               	movwf	(___fladd@a+3)^0,c
  6696  00096A                     l3796:
  6697  00096A  5028               	movf	___fladd@bexp^0,w,c
  6698  00096C  5C27               	subwf	___fladd@aexp^0,w,c
  6699  00096E  B0D8               	btfsc	status,0,c
  6700  000970  EFBC  F004         	goto	u2461
  6701  000974  EFBE  F004         	goto	u2460
  6702  000978                     u2461:
  6703  000978  EFE5  F004         	goto	l3832
  6704  00097C                     u2460:
  6705  00097C  AC26               	btfss	___fladd@signs^0,6,c
  6706  00097E  EFC3  F004         	goto	u2471
  6707  000982  EFC5  F004         	goto	u2470
  6708  000986                     u2471:
  6709  000986  EFC7  F004         	goto	l3802
  6710  00098A                     u2470:
  6711  00098A  0E80               	movlw	128
  6712  00098C  1A26               	xorwf	___fladd@signs^0,f,c
  6713  00098E                     l3802:
  6714  00098E  C028  F029         	movff	___fladd@bexp,___fladd@grs
  6715  000992  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  6716  000996  C029  F027         	movff	___fladd@grs,___fladd@aexp
  6717  00099A  C01A  F029         	movff	___fladd@b,___fladd@grs
  6718  00099E  C01E  F01A         	movff	___fladd@a,___fladd@b
  6719  0009A2  C029  F01E         	movff	___fladd@grs,___fladd@a
  6720  0009A6  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  6721  0009AA  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  6722  0009AE  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  6723  0009B2  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  6724  0009B6  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  6725  0009BA  C029  F020         	movff	___fladd@grs,___fladd@a+2
  6726  0009BE  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  6727  0009C2  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  6728  0009C6  C029  F021         	movff	___fladd@grs,___fladd@a+3
  6729  0009CA                     l3832:
  6730  0009CA  0E00               	movlw	0
  6731  0009CC  6E29               	movwf	___fladd@grs^0,c
  6732  0009CE  5028               	movf	___fladd@bexp^0,w,c
  6733  0009D0  C027  F022         	movff	___fladd@aexp,??___fladd
  6734  0009D4  6A23               	clrf	(??___fladd+1)^0,c
  6735  0009D6  5E22               	subwf	??___fladd^0,f,c
  6736  0009D8  0E00               	movlw	0
  6737  0009DA  5A23               	subwfb	(??___fladd+1)^0,f,c
  6738  0009DC  BE23               	btfsc	(??___fladd+1)^0,7,c
  6739  0009DE  EFFA  F004         	goto	u2481
  6740  0009E2  5023               	movf	(??___fladd+1)^0,w,c
  6741  0009E4  E109               	bnz	u2480
  6742  0009E6  0E1A               	movlw	26
  6743  0009E8  5C22               	subwf	??___fladd^0,w,c
  6744  0009EA  A0D8               	btfss	status,0,c
  6745  0009EC  EFFA  F004         	goto	u2481
  6746  0009F0  EFFC  F004         	goto	u2480
  6747  0009F4                     u2481:
  6748  0009F4  EF33  F005         	goto	l1728
  6749  0009F8                     u2480:
  6750  0009F8  501A               	movf	___fladd@b^0,w,c
  6751  0009FA  101B               	iorwf	(___fladd@b+1)^0,w,c
  6752  0009FC  101C               	iorwf	(___fladd@b+2)^0,w,c
  6753  0009FE  101D               	iorwf	(___fladd@b+3)^0,w,c
  6754  000A00  A4D8               	btfss	status,2,c
  6755  000A02  EF05  F005         	goto	u2491
  6756  000A06  EF08  F005         	goto	u2490
  6757  000A0A                     u2491:
  6758  000A0A  0E01               	movlw	1
  6759  000A0C  EF09  F005         	goto	u2500
  6760  000A10                     u2490:
  6761  000A10  0E00               	movlw	0
  6762  000A12                     u2500:
  6763  000A12  6E29               	movwf	___fladd@grs^0,c
  6764  000A14  0E00               	movlw	0
  6765  000A16  6E1A               	movwf	___fladd@b^0,c
  6766  000A18  0E00               	movlw	0
  6767  000A1A  6E1B               	movwf	(___fladd@b+1)^0,c
  6768  000A1C  0E00               	movlw	0
  6769  000A1E  6E1C               	movwf	(___fladd@b+2)^0,c
  6770  000A20  0E00               	movlw	0
  6771  000A22  6E1D               	movwf	(___fladd@b+3)^0,c
  6772  000A24  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  6773  000A28  EF3C  F005         	goto	l1727
  6774  000A2C                     l1729:
  6775  000A2C  A029               	btfss	___fladd@grs^0,0,c
  6776  000A2E  EF1B  F005         	goto	u2511
  6777  000A32  EF1D  F005         	goto	u2510
  6778  000A36                     u2511:
  6779  000A36  EF23  F005         	goto	l3844
  6780  000A3A                     u2510:
  6781  000A3A  90D8               	bcf	status,0,c
  6782  000A3C  3029               	rrcf	___fladd@grs^0,w,c
  6783  000A3E  0901               	iorlw	1
  6784  000A40  6E29               	movwf	___fladd@grs^0,c
  6785  000A42  EF25  F005         	goto	l3846
  6786  000A46                     l3844:
  6787  000A46  90D8               	bcf	status,0,c
  6788  000A48  3229               	rrcf	___fladd@grs^0,f,c
  6789  000A4A                     l3846:
  6790  000A4A  A01A               	btfss	___fladd@b^0,0,c
  6791  000A4C  EF2A  F005         	goto	u2521
  6792  000A50  EF2C  F005         	goto	u2520
  6793  000A54                     u2521:
  6794  000A54  EF2D  F005         	goto	l3850
  6795  000A58                     u2520:
  6796  000A58  8E29               	bsf	___fladd@grs^0,7,c
  6797  000A5A                     l3850:
  6798  000A5A  341D               	rlcf	(___fladd@b+3)^0,w,c
  6799  000A5C  321D               	rrcf	(___fladd@b+3)^0,f,c
  6800  000A5E  321C               	rrcf	(___fladd@b+2)^0,f,c
  6801  000A60  321B               	rrcf	(___fladd@b+1)^0,f,c
  6802  000A62  321A               	rrcf	___fladd@b^0,f,c
  6803  000A64  2A28               	incf	___fladd@bexp^0,f,c
  6804  000A66                     l1728:
  6805  000A66  5027               	movf	___fladd@aexp^0,w,c
  6806  000A68  5C28               	subwf	___fladd@bexp^0,w,c
  6807  000A6A  A0D8               	btfss	status,0,c
  6808  000A6C  EF3A  F005         	goto	u2531
  6809  000A70  EF3C  F005         	goto	u2530
  6810  000A74                     u2531:
  6811  000A74  EF16  F005         	goto	l1729
  6812  000A78                     u2530:
  6813  000A78                     l1727:
  6814  000A78  BC26               	btfsc	___fladd@signs^0,6,c
  6815  000A7A  EF41  F005         	goto	u2541
  6816  000A7E  EF43  F005         	goto	u2540
  6817  000A82                     u2541:
  6818  000A82  EF83  F005         	goto	l3878
  6819  000A86                     u2540:
  6820  000A86  5028               	movf	___fladd@bexp^0,w,c
  6821  000A88  A4D8               	btfss	status,2,c
  6822  000A8A  EF49  F005         	goto	u2551
  6823  000A8E  EF4B  F005         	goto	u2550
  6824  000A92                     u2551:
  6825  000A92  EF55  F005         	goto	l3860
  6826  000A96                     u2550:
  6827  000A96  0E00               	movlw	0
  6828  000A98  6E1A               	movwf	?___fladd^0,c
  6829  000A9A  0E00               	movlw	0
  6830  000A9C  6E1B               	movwf	(?___fladd+1)^0,c
  6831  000A9E  0E00               	movlw	0
  6832  000AA0  6E1C               	movwf	(?___fladd+2)^0,c
  6833  000AA2  0E00               	movlw	0
  6834  000AA4  6E1D               	movwf	(?___fladd+3)^0,c
  6835  000AA6  EFA4  F006         	goto	l1736
  6836  000AAA                     l3860:
  6837  000AAA  501E               	movf	___fladd@a^0,w,c
  6838  000AAC  261A               	addwf	___fladd@b^0,f,c
  6839  000AAE  501F               	movf	(___fladd@a+1)^0,w,c
  6840  000AB0  221B               	addwfc	(___fladd@b+1)^0,f,c
  6841  000AB2  5020               	movf	(___fladd@a+2)^0,w,c
  6842  000AB4  221C               	addwfc	(___fladd@b+2)^0,f,c
  6843  000AB6  5021               	movf	(___fladd@a+3)^0,w,c
  6844  000AB8  221D               	addwfc	(___fladd@b+3)^0,f,c
  6845  000ABA  A01D               	btfss	(___fladd@b+3)^0,0,c
  6846  000ABC  EF62  F005         	goto	u2561
  6847  000AC0  EF64  F005         	goto	u2560
  6848  000AC4                     u2561:
  6849  000AC4  EF10  F006         	goto	l3914
  6850  000AC8                     u2560:
  6851  000AC8  A029               	btfss	___fladd@grs^0,0,c
  6852  000ACA  EF69  F005         	goto	u2571
  6853  000ACE  EF6B  F005         	goto	u2570
  6854  000AD2                     u2571:
  6855  000AD2  EF71  F005         	goto	l3868
  6856  000AD6                     u2570:
  6857  000AD6  90D8               	bcf	status,0,c
  6858  000AD8  3029               	rrcf	___fladd@grs^0,w,c
  6859  000ADA  0901               	iorlw	1
  6860  000ADC  6E29               	movwf	___fladd@grs^0,c
  6861  000ADE  EF73  F005         	goto	l3870
  6862  000AE2                     l3868:
  6863  000AE2  90D8               	bcf	status,0,c
  6864  000AE4  3229               	rrcf	___fladd@grs^0,f,c
  6865  000AE6                     l3870:
  6866  000AE6  A01A               	btfss	___fladd@b^0,0,c
  6867  000AE8  EF78  F005         	goto	u2581
  6868  000AEC  EF7A  F005         	goto	u2580
  6869  000AF0                     u2581:
  6870  000AF0  EF7B  F005         	goto	l3874
  6871  000AF4                     u2580:
  6872  000AF4  8E29               	bsf	___fladd@grs^0,7,c
  6873  000AF6                     l3874:
  6874  000AF6  341D               	rlcf	(___fladd@b+3)^0,w,c
  6875  000AF8  321D               	rrcf	(___fladd@b+3)^0,f,c
  6876  000AFA  321C               	rrcf	(___fladd@b+2)^0,f,c
  6877  000AFC  321B               	rrcf	(___fladd@b+1)^0,f,c
  6878  000AFE  321A               	rrcf	___fladd@b^0,f,c
  6879  000B00  2A28               	incf	___fladd@bexp^0,f,c
  6880  000B02  EF10  F006         	goto	l3914
  6881  000B06                     l3878:
  6882  000B06  501E               	movf	___fladd@a^0,w,c
  6883  000B08  5C1A               	subwf	___fladd@b^0,w,c
  6884  000B0A  501F               	movf	(___fladd@a+1)^0,w,c
  6885  000B0C  581B               	subwfb	(___fladd@b+1)^0,w,c
  6886  000B0E  5020               	movf	(___fladd@a+2)^0,w,c
  6887  000B10  581C               	subwfb	(___fladd@b+2)^0,w,c
  6888  000B12  501D               	movf	(___fladd@b+3)^0,w,c
  6889  000B14  0A80               	xorlw	128
  6890  000B16  6E22               	movwf	??___fladd^0,c
  6891  000B18  5021               	movf	(___fladd@a+3)^0,w,c
  6892  000B1A  0A80               	xorlw	128
  6893  000B1C  5822               	subwfb	??___fladd^0,w,c
  6894  000B1E  B0D8               	btfsc	status,0,c
  6895  000B20  EF94  F005         	goto	u2591
  6896  000B24  EF96  F005         	goto	u2590
  6897  000B28                     u2591:
  6898  000B28  EFC1  F005         	goto	l3888
  6899  000B2C                     u2590:
  6900  000B2C  501A               	movf	___fladd@b^0,w,c
  6901  000B2E  5C1E               	subwf	___fladd@a^0,w,c
  6902  000B30  6E22               	movwf	??___fladd^0,c
  6903  000B32  501B               	movf	(___fladd@b+1)^0,w,c
  6904  000B34  581F               	subwfb	(___fladd@a+1)^0,w,c
  6905  000B36  6E23               	movwf	(??___fladd+1)^0,c
  6906  000B38  501C               	movf	(___fladd@b+2)^0,w,c
  6907  000B3A  5820               	subwfb	(___fladd@a+2)^0,w,c
  6908  000B3C  6E24               	movwf	(??___fladd+2)^0,c
  6909  000B3E  501D               	movf	(___fladd@b+3)^0,w,c
  6910  000B40  5821               	subwfb	(___fladd@a+3)^0,w,c
  6911  000B42  6E25               	movwf	(??___fladd+3)^0,c
  6912  000B44  0EFF               	movlw	255
  6913  000B46  2422               	addwf	??___fladd^0,w,c
  6914  000B48  6E1A               	movwf	___fladd@b^0,c
  6915  000B4A  0EFF               	movlw	255
  6916  000B4C  2023               	addwfc	(??___fladd+1)^0,w,c
  6917  000B4E  6E1B               	movwf	(___fladd@b+1)^0,c
  6918  000B50  0EFF               	movlw	255
  6919  000B52  2024               	addwfc	(??___fladd+2)^0,w,c
  6920  000B54  6E1C               	movwf	(___fladd@b+2)^0,c
  6921  000B56  0EFF               	movlw	255
  6922  000B58  2025               	addwfc	(??___fladd+3)^0,w,c
  6923  000B5A  6E1D               	movwf	(___fladd@b+3)^0,c
  6924  000B5C  0E80               	movlw	128
  6925  000B5E  1A26               	xorwf	___fladd@signs^0,f,c
  6926  000B60  6C29               	negf	___fladd@grs^0,c
  6927  000B62  5029               	movf	___fladd@grs^0,w,c
  6928  000B64  A4D8               	btfss	status,2,c
  6929  000B66  EFB7  F005         	goto	u2601
  6930  000B6A  EFB9  F005         	goto	u2600
  6931  000B6E                     u2601:
  6932  000B6E  EFC9  F005         	goto	l1744
  6933  000B72                     u2600:
  6934  000B72  0E01               	movlw	1
  6935  000B74  261A               	addwf	___fladd@b^0,f,c
  6936  000B76  0E00               	movlw	0
  6937  000B78  221B               	addwfc	(___fladd@b+1)^0,f,c
  6938  000B7A  221C               	addwfc	(___fladd@b+2)^0,f,c
  6939  000B7C  221D               	addwfc	(___fladd@b+3)^0,f,c
  6940  000B7E  EFC9  F005         	goto	l1744
  6941  000B82                     l3888:
  6942  000B82  501E               	movf	___fladd@a^0,w,c
  6943  000B84  5E1A               	subwf	___fladd@b^0,f,c
  6944  000B86  501F               	movf	(___fladd@a+1)^0,w,c
  6945  000B88  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  6946  000B8A  5020               	movf	(___fladd@a+2)^0,w,c
  6947  000B8C  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  6948  000B8E  5021               	movf	(___fladd@a+3)^0,w,c
  6949  000B90  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  6950  000B92                     l1744:
  6951  000B92  501A               	movf	___fladd@b^0,w,c
  6952  000B94  101B               	iorwf	(___fladd@b+1)^0,w,c
  6953  000B96  101C               	iorwf	(___fladd@b+2)^0,w,c
  6954  000B98  101D               	iorwf	(___fladd@b+3)^0,w,c
  6955  000B9A  A4D8               	btfss	status,2,c
  6956  000B9C  EFD2  F005         	goto	u2611
  6957  000BA0  EFD4  F005         	goto	u2610
  6958  000BA4                     u2611:
  6959  000BA4  EF09  F006         	goto	l3912
  6960  000BA8                     u2610:
  6961  000BA8  5029               	movf	___fladd@grs^0,w,c
  6962  000BAA  A4D8               	btfss	status,2,c
  6963  000BAC  EFDA  F005         	goto	u2621
  6964  000BB0  EFDC  F005         	goto	u2620
  6965  000BB4                     u2621:
  6966  000BB4  EF09  F006         	goto	l3912
  6967  000BB8                     u2620:
  6968  000BB8  0E00               	movlw	0
  6969  000BBA  6E1A               	movwf	?___fladd^0,c
  6970  000BBC  0E00               	movlw	0
  6971  000BBE  6E1B               	movwf	(?___fladd+1)^0,c
  6972  000BC0  0E00               	movlw	0
  6973  000BC2  6E1C               	movwf	(?___fladd+2)^0,c
  6974  000BC4  0E00               	movlw	0
  6975  000BC6  6E1D               	movwf	(?___fladd+3)^0,c
  6976  000BC8  EFA4  F006         	goto	l1736
  6977  000BCC                     l3896:
  6978  000BCC  90D8               	bcf	status,0,c
  6979  000BCE  361A               	rlcf	___fladd@b^0,f,c
  6980  000BD0  361B               	rlcf	(___fladd@b+1)^0,f,c
  6981  000BD2  361C               	rlcf	(___fladd@b+2)^0,f,c
  6982  000BD4  361D               	rlcf	(___fladd@b+3)^0,f,c
  6983  000BD6  AE29               	btfss	___fladd@grs^0,7,c
  6984  000BD8  EFF0  F005         	goto	u2631
  6985  000BDC  EFF2  F005         	goto	u2630
  6986  000BE0                     u2631:
  6987  000BE0  EFF3  F005         	goto	l3902
  6988  000BE4                     u2630:
  6989  000BE4  801A               	bsf	___fladd@b^0,0,c
  6990  000BE6                     l3902:
  6991  000BE6  A029               	btfss	___fladd@grs^0,0,c
  6992  000BE8  EFF8  F005         	goto	u2641
  6993  000BEC  EFFA  F005         	goto	u2640
  6994  000BF0                     u2641:
  6995  000BF0  EFFE  F005         	goto	l3906
  6996  000BF4                     u2640:
  6997  000BF4  80D8               	bsf	status,0,c
  6998  000BF6  3629               	rlcf	___fladd@grs^0,f,c
  6999  000BF8  EF00  F006         	goto	l3908
  7000  000BFC                     l3906:
  7001  000BFC  90D8               	bcf	status,0,c
  7002  000BFE  3629               	rlcf	___fladd@grs^0,f,c
  7003  000C00                     l3908:
  7004  000C00  5028               	movf	___fladd@bexp^0,w,c
  7005  000C02  B4D8               	btfsc	status,2,c
  7006  000C04  EF06  F006         	goto	u2651
  7007  000C08  EF08  F006         	goto	u2650
  7008  000C0C                     u2651:
  7009  000C0C  EF09  F006         	goto	l3912
  7010  000C10                     u2650:
  7011  000C10  0628               	decf	___fladd@bexp^0,f,c
  7012  000C12                     l3912:
  7013  000C12  AE1C               	btfss	(___fladd@b+2)^0,7,c
  7014  000C14  EF0E  F006         	goto	u2661
  7015  000C18  EF10  F006         	goto	u2660
  7016  000C1C                     u2661:
  7017  000C1C  EFE6  F005         	goto	l3896
  7018  000C20                     u2660:
  7019  000C20                     l3914:
  7020  000C20  0E00               	movlw	0
  7021  000C22  6E27               	movwf	___fladd@aexp^0,c
  7022  000C24  AE29               	btfss	___fladd@grs^0,7,c
  7023  000C26  EF17  F006         	goto	u2671
  7024  000C2A  EF19  F006         	goto	u2670
  7025  000C2E                     u2671:
  7026  000C2E  EF31  F006         	goto	l1753
  7027  000C32                     u2670:
  7028  000C32  C029  F022         	movff	___fladd@grs,??___fladd
  7029  000C36  0E7F               	movlw	127
  7030  000C38  1622               	andwf	??___fladd^0,f,c
  7031  000C3A  B4D8               	btfsc	status,2,c
  7032  000C3C  EF22  F006         	goto	u2681
  7033  000C40  EF24  F006         	goto	u2680
  7034  000C44                     u2681:
  7035  000C44  EF28  F006         	goto	l1754
  7036  000C48                     u2680:
  7037  000C48                     l3920:
  7038  000C48  0E01               	movlw	1
  7039  000C4A  6E27               	movwf	___fladd@aexp^0,c
  7040  000C4C  EF31  F006         	goto	l1753
  7041  000C50                     l1754:
  7042  000C50  A01A               	btfss	___fladd@b^0,0,c
  7043  000C52  EF2D  F006         	goto	u2691
  7044  000C56  EF2F  F006         	goto	u2690
  7045  000C5A                     u2691:
  7046  000C5A  EF31  F006         	goto	l1753
  7047  000C5E                     u2690:
  7048  000C5E  EF24  F006         	goto	l3920
  7049  000C62                     l1753:
  7050  000C62  5027               	movf	___fladd@aexp^0,w,c
  7051  000C64  B4D8               	btfsc	status,2,c
  7052  000C66  EF37  F006         	goto	u2701
  7053  000C6A  EF39  F006         	goto	u2700
  7054  000C6E                     u2701:
  7055  000C6E  EF64  F006         	goto	l3932
  7056  000C72                     u2700:
  7057  000C72  0E01               	movlw	1
  7058  000C74  261A               	addwf	___fladd@b^0,f,c
  7059  000C76  0E00               	movlw	0
  7060  000C78  221B               	addwfc	(___fladd@b+1)^0,f,c
  7061  000C7A  221C               	addwfc	(___fladd@b+2)^0,f,c
  7062  000C7C  221D               	addwfc	(___fladd@b+3)^0,f,c
  7063  000C7E  A01D               	btfss	(___fladd@b+3)^0,0,c
  7064  000C80  EF44  F006         	goto	u2711
  7065  000C84  EF46  F006         	goto	u2710
  7066  000C88                     u2711:
  7067  000C88  EF64  F006         	goto	l3932
  7068  000C8C                     u2710:
  7069  000C8C  C01A  F022         	movff	___fladd@b,??___fladd
  7070  000C90  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  7071  000C94  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  7072  000C98  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  7073  000C9C  3425               	rlcf	(??___fladd+3)^0,w,c
  7074  000C9E  3225               	rrcf	(??___fladd+3)^0,f,c
  7075  000CA0  3224               	rrcf	(??___fladd+2)^0,f,c
  7076  000CA2  3223               	rrcf	(??___fladd+1)^0,f,c
  7077  000CA4  3222               	rrcf	??___fladd^0,f,c
  7078  000CA6  C022  F01A         	movff	??___fladd,___fladd@b
  7079  000CAA  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  7080  000CAE  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  7081  000CB2  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  7082  000CB6  2828               	incf	___fladd@bexp^0,w,c
  7083  000CB8  B4D8               	btfsc	status,2,c
  7084  000CBA  EF61  F006         	goto	u2721
  7085  000CBE  EF63  F006         	goto	u2720
  7086  000CC2                     u2721:
  7087  000CC2  EF64  F006         	goto	l3932
  7088  000CC6                     u2720:
  7089  000CC6  2A28               	incf	___fladd@bexp^0,f,c
  7090  000CC8                     l3932:
  7091  000CC8  2828               	incf	___fladd@bexp^0,w,c
  7092  000CCA  B4D8               	btfsc	status,2,c
  7093  000CCC  EF6A  F006         	goto	u2731
  7094  000CD0  EF6C  F006         	goto	u2730
  7095  000CD4                     u2731:
  7096  000CD4  EF74  F006         	goto	l3936
  7097  000CD8                     u2730:
  7098  000CD8  5028               	movf	___fladd@bexp^0,w,c
  7099  000CDA  A4D8               	btfss	status,2,c
  7100  000CDC  EF72  F006         	goto	u2741
  7101  000CE0  EF74  F006         	goto	u2740
  7102  000CE4                     u2741:
  7103  000CE4  EF86  F006         	goto	l3940
  7104  000CE8                     u2740:
  7105  000CE8                     l3936:
  7106  000CE8  0E00               	movlw	0
  7107  000CEA  6E1A               	movwf	___fladd@b^0,c
  7108  000CEC  0E00               	movlw	0
  7109  000CEE  6E1B               	movwf	(___fladd@b+1)^0,c
  7110  000CF0  0E00               	movlw	0
  7111  000CF2  6E1C               	movwf	(___fladd@b+2)^0,c
  7112  000CF4  0E00               	movlw	0
  7113  000CF6  6E1D               	movwf	(___fladd@b+3)^0,c
  7114  000CF8  5028               	movf	___fladd@bexp^0,w,c
  7115  000CFA  A4D8               	btfss	status,2,c
  7116  000CFC  EF82  F006         	goto	u2751
  7117  000D00  EF84  F006         	goto	u2750
  7118  000D04                     u2751:
  7119  000D04  EF86  F006         	goto	l3940
  7120  000D08                     u2750:
  7121  000D08  0E00               	movlw	0
  7122  000D0A  6E26               	movwf	___fladd@signs^0,c
  7123  000D0C                     l3940:
  7124  000D0C  A028               	btfss	___fladd@bexp^0,0,c
  7125  000D0E  EF8B  F006         	goto	u2761
  7126  000D12  EF8D  F006         	goto	u2760
  7127  000D16                     u2761:
  7128  000D16  EF90  F006         	goto	l3944
  7129  000D1A                     u2760:
  7130  000D1A  8E1C               	bsf	(___fladd@b+2)^0,7,c
  7131  000D1C  EF91  F006         	goto	l3946
  7132  000D20                     l3944:
  7133  000D20  9E1C               	bcf	(___fladd@b+2)^0,7,c
  7134  000D22                     l3946:
  7135  000D22  90D8               	bcf	status,0,c
  7136  000D24  3028               	rrcf	___fladd@bexp^0,w,c
  7137  000D26  6E1D               	movwf	(___fladd@b+3)^0,c
  7138  000D28  AE26               	btfss	___fladd@signs^0,7,c
  7139  000D2A  EF99  F006         	goto	u2771
  7140  000D2E  EF9B  F006         	goto	u2770
  7141  000D32                     u2771:
  7142  000D32  EF9C  F006         	goto	l3952
  7143  000D36                     u2770:
  7144  000D36  8E1D               	bsf	(___fladd@b+3)^0,7,c
  7145  000D38                     l3952:
  7146  000D38  C01A  F01A         	movff	___fladd@b,?___fladd
  7147  000D3C  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  7148  000D40  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  7149  000D44  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  7150  000D48                     l1736:
  7151  000D48  0012               	return		;funcret
  7152  000D4A                     __end_of___fladd:
  7153                           	callstack 0
  7154                           
  7155 ;; *************** function ___xxtofl *****************
  7156 ;; Defined at:
  7157 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  sign            1    wreg     unsigned char 
  7160 ;;  val             4   51[COMRAM] long 
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  sign            1   59[COMRAM] unsigned char 
  7163 ;;  arg             4   61[COMRAM] unsigned long 
  7164 ;;  exp             1   60[COMRAM] unsigned char 
  7165 ;; Return value:  Size  Location     Type
  7166 ;;                  4   51[COMRAM] unsigned char 
  7167 ;; Registers used:
  7168 ;;		wreg, status,2, status,0
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7174 ;;      Params:         4       0       0       0       0       0       0       0       0
  7175 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7176 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7177 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7178 ;;Total ram usage:       14 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:    3
  7181 ;; This function calls:
  7182 ;;		Nothing
  7183 ;; This function is called by:
  7184 ;;		_ComputeTemp
  7185 ;;		_ComputeWaterVol
  7186 ;;		_log
  7187 ;;		_pow
  7188 ;;		_exp
  7189 ;;		_floor
  7190 ;;		_trunc
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           	psect	text35
  7195  002698                     __ptext35:
  7196                           	callstack 0
  7197  002698                     ___xxtofl:
  7198                           	callstack 24
  7199                           
  7200                           ;incstack = 0
  7201                           ;___xxtofl@sign stored from wreg
  7202  002698  6E3C               	movwf	___xxtofl@sign^0,c
  7203  00269A  503C               	movf	___xxtofl@sign^0,w,c
  7204  00269C  B4D8               	btfsc	status,2,c
  7205  00269E  EF53  F013         	goto	u3091
  7206  0026A2  EF55  F013         	goto	u3090
  7207  0026A6                     u3091:
  7208  0026A6  EF77  F013         	goto	l1874
  7209  0026AA                     u3090:
  7210  0026AA  BE37               	btfsc	(___xxtofl@val+3)^0,7,c
  7211  0026AC  EF5C  F013         	goto	u3100
  7212  0026B0  EF5A  F013         	goto	u3101
  7213  0026B4                     u3101:
  7214  0026B4  EF77  F013         	goto	l1874
  7215  0026B8                     u3100:
  7216  0026B8  C034  F038         	movff	___xxtofl@val,??___xxtofl
  7217  0026BC  C035  F039         	movff	___xxtofl@val+1,??___xxtofl+1
  7218  0026C0  C036  F03A         	movff	___xxtofl@val+2,??___xxtofl+2
  7219  0026C4  C037  F03B         	movff	___xxtofl@val+3,??___xxtofl+3
  7220  0026C8  1E38               	comf	??___xxtofl^0,f,c
  7221  0026CA  1E39               	comf	(??___xxtofl+1)^0,f,c
  7222  0026CC  1E3A               	comf	(??___xxtofl+2)^0,f,c
  7223  0026CE  1E3B               	comf	(??___xxtofl+3)^0,f,c
  7224  0026D0  2A38               	incf	??___xxtofl^0,f,c
  7225  0026D2  0E00               	movlw	0
  7226  0026D4  2239               	addwfc	(??___xxtofl+1)^0,f,c
  7227  0026D6  223A               	addwfc	(??___xxtofl+2)^0,f,c
  7228  0026D8  223B               	addwfc	(??___xxtofl+3)^0,f,c
  7229  0026DA  C038  F03E         	movff	??___xxtofl,___xxtofl@arg
  7230  0026DE  C039  F03F         	movff	??___xxtofl+1,___xxtofl@arg+1
  7231  0026E2  C03A  F040         	movff	??___xxtofl+2,___xxtofl@arg+2
  7232  0026E6  C03B  F041         	movff	??___xxtofl+3,___xxtofl@arg+3
  7233  0026EA  EF7F  F013         	goto	l4158
  7234  0026EE                     l1874:
  7235  0026EE  C034  F03E         	movff	___xxtofl@val,___xxtofl@arg
  7236  0026F2  C035  F03F         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7237  0026F6  C036  F040         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7238  0026FA  C037  F041         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7239  0026FE                     l4158:
  7240  0026FE  5034               	movf	___xxtofl@val^0,w,c
  7241  002700  1035               	iorwf	(___xxtofl@val+1)^0,w,c
  7242  002702  1036               	iorwf	(___xxtofl@val+2)^0,w,c
  7243  002704  1037               	iorwf	(___xxtofl@val+3)^0,w,c
  7244  002706  A4D8               	btfss	status,2,c
  7245  002708  EF88  F013         	goto	u3111
  7246  00270C  EF8A  F013         	goto	u3110
  7247  002710                     u3111:
  7248  002710  EF94  F013         	goto	l4164
  7249  002714                     u3110:
  7250  002714  0E00               	movlw	0
  7251  002716  6E34               	movwf	?___xxtofl^0,c
  7252  002718  0E00               	movlw	0
  7253  00271A  6E35               	movwf	(?___xxtofl+1)^0,c
  7254  00271C  0E00               	movlw	0
  7255  00271E  6E36               	movwf	(?___xxtofl+2)^0,c
  7256  002720  0E00               	movlw	0
  7257  002722  6E37               	movwf	(?___xxtofl+3)^0,c
  7258  002724  EF25  F014         	goto	l1877
  7259  002728                     l4164:
  7260  002728  0E96               	movlw	150
  7261  00272A  6E3D               	movwf	___xxtofl@exp^0,c
  7262  00272C  EF9E  F013         	goto	l4168
  7263  002730                     l4166:
  7264  002730  2A3D               	incf	___xxtofl@exp^0,f,c
  7265  002732  90D8               	bcf	status,0,c
  7266  002734  3241               	rrcf	(___xxtofl@arg+3)^0,f,c
  7267  002736  3240               	rrcf	(___xxtofl@arg+2)^0,f,c
  7268  002738  323F               	rrcf	(___xxtofl@arg+1)^0,f,c
  7269  00273A  323E               	rrcf	___xxtofl@arg^0,f,c
  7270  00273C                     l4168:
  7271  00273C  0E00               	movlw	0
  7272  00273E  143E               	andwf	___xxtofl@arg^0,w,c
  7273  002740  6E38               	movwf	??___xxtofl^0,c
  7274  002742  0E00               	movlw	0
  7275  002744  143F               	andwf	(___xxtofl@arg+1)^0,w,c
  7276  002746  6E39               	movwf	(??___xxtofl+1)^0,c
  7277  002748  0E00               	movlw	0
  7278  00274A  1440               	andwf	(___xxtofl@arg+2)^0,w,c
  7279  00274C  6E3A               	movwf	(??___xxtofl+2)^0,c
  7280  00274E  0EFE               	movlw	254
  7281  002750  1441               	andwf	(___xxtofl@arg+3)^0,w,c
  7282  002752  6E3B               	movwf	(??___xxtofl+3)^0,c
  7283  002754  5038               	movf	??___xxtofl^0,w,c
  7284  002756  1039               	iorwf	(??___xxtofl+1)^0,w,c
  7285  002758  103A               	iorwf	(??___xxtofl+2)^0,w,c
  7286  00275A  103B               	iorwf	(??___xxtofl+3)^0,w,c
  7287  00275C  A4D8               	btfss	status,2,c
  7288  00275E  EFB3  F013         	goto	u3121
  7289  002762  EFB5  F013         	goto	u3120
  7290  002766                     u3121:
  7291  002766  EF98  F013         	goto	l4166
  7292  00276A                     u3120:
  7293  00276A  EFC3  F013         	goto	l1881
  7294  00276E                     l4170:
  7295  00276E  2A3D               	incf	___xxtofl@exp^0,f,c
  7296  002770  0E01               	movlw	1
  7297  002772  263E               	addwf	___xxtofl@arg^0,f,c
  7298  002774  0E00               	movlw	0
  7299  002776  223F               	addwfc	(___xxtofl@arg+1)^0,f,c
  7300  002778  2240               	addwfc	(___xxtofl@arg+2)^0,f,c
  7301  00277A  2241               	addwfc	(___xxtofl@arg+3)^0,f,c
  7302  00277C  90D8               	bcf	status,0,c
  7303  00277E  3241               	rrcf	(___xxtofl@arg+3)^0,f,c
  7304  002780  3240               	rrcf	(___xxtofl@arg+2)^0,f,c
  7305  002782  323F               	rrcf	(___xxtofl@arg+1)^0,f,c
  7306  002784  323E               	rrcf	___xxtofl@arg^0,f,c
  7307  002786                     l1881:
  7308  002786  0E00               	movlw	0
  7309  002788  143E               	andwf	___xxtofl@arg^0,w,c
  7310  00278A  6E38               	movwf	??___xxtofl^0,c
  7311  00278C  0E00               	movlw	0
  7312  00278E  143F               	andwf	(___xxtofl@arg+1)^0,w,c
  7313  002790  6E39               	movwf	(??___xxtofl+1)^0,c
  7314  002792  0E00               	movlw	0
  7315  002794  1440               	andwf	(___xxtofl@arg+2)^0,w,c
  7316  002796  6E3A               	movwf	(??___xxtofl+2)^0,c
  7317  002798  0EFF               	movlw	255
  7318  00279A  1441               	andwf	(___xxtofl@arg+3)^0,w,c
  7319  00279C  6E3B               	movwf	(??___xxtofl+3)^0,c
  7320  00279E  5038               	movf	??___xxtofl^0,w,c
  7321  0027A0  1039               	iorwf	(??___xxtofl+1)^0,w,c
  7322  0027A2  103A               	iorwf	(??___xxtofl+2)^0,w,c
  7323  0027A4  103B               	iorwf	(??___xxtofl+3)^0,w,c
  7324  0027A6  A4D8               	btfss	status,2,c
  7325  0027A8  EFD8  F013         	goto	u3131
  7326  0027AC  EFDA  F013         	goto	u3130
  7327  0027B0                     u3131:
  7328  0027B0  EFB7  F013         	goto	l4170
  7329  0027B4                     u3130:
  7330  0027B4  EFE2  F013         	goto	l4178
  7331  0027B8                     l4176:
  7332  0027B8  063D               	decf	___xxtofl@exp^0,f,c
  7333  0027BA  90D8               	bcf	status,0,c
  7334  0027BC  363E               	rlcf	___xxtofl@arg^0,f,c
  7335  0027BE  363F               	rlcf	(___xxtofl@arg+1)^0,f,c
  7336  0027C0  3640               	rlcf	(___xxtofl@arg+2)^0,f,c
  7337  0027C2  3641               	rlcf	(___xxtofl@arg+3)^0,f,c
  7338  0027C4                     l4178:
  7339  0027C4  BE40               	btfsc	(___xxtofl@arg+2)^0,7,c
  7340  0027C6  EFE7  F013         	goto	u3141
  7341  0027CA  EFE9  F013         	goto	u3140
  7342  0027CE                     u3141:
  7343  0027CE  EFF1  F013         	goto	l1888
  7344  0027D2                     u3140:
  7345  0027D2  0E02               	movlw	2
  7346  0027D4  603D               	cpfslt	___xxtofl@exp^0,c
  7347  0027D6  EFEF  F013         	goto	u3151
  7348  0027DA  EFF1  F013         	goto	u3150
  7349  0027DE                     u3151:
  7350  0027DE  EFDC  F013         	goto	l4176
  7351  0027E2                     u3150:
  7352  0027E2                     l1888:
  7353  0027E2  B03D               	btfsc	___xxtofl@exp^0,0,c
  7354  0027E4  EFF6  F013         	goto	u3161
  7355  0027E8  EFF8  F013         	goto	u3160
  7356  0027EC                     u3161:
  7357  0027EC  EFF9  F013         	goto	l4184
  7358  0027F0                     u3160:
  7359  0027F0  9E40               	bcf	(___xxtofl@arg+2)^0,7,c
  7360  0027F2                     l4184:
  7361  0027F2  90D8               	bcf	status,0,c
  7362  0027F4  323D               	rrcf	___xxtofl@exp^0,f,c
  7363  0027F6  C03D  F038         	movff	___xxtofl@exp,??___xxtofl
  7364  0027FA  6A39               	clrf	(??___xxtofl+1)^0,c
  7365  0027FC  6A3A               	clrf	(??___xxtofl+2)^0,c
  7366  0027FE  6A3B               	clrf	(??___xxtofl+3)^0,c
  7367  002800  C038  F03B         	movff	??___xxtofl,??___xxtofl+3
  7368  002804  6A3A               	clrf	(??___xxtofl+2)^0,c
  7369  002806  6A39               	clrf	(??___xxtofl+1)^0,c
  7370  002808  6A38               	clrf	??___xxtofl^0,c
  7371  00280A  5038               	movf	??___xxtofl^0,w,c
  7372  00280C  123E               	iorwf	___xxtofl@arg^0,f,c
  7373  00280E  5039               	movf	(??___xxtofl+1)^0,w,c
  7374  002810  123F               	iorwf	(___xxtofl@arg+1)^0,f,c
  7375  002812  503A               	movf	(??___xxtofl+2)^0,w,c
  7376  002814  1240               	iorwf	(___xxtofl@arg+2)^0,f,c
  7377  002816  503B               	movf	(??___xxtofl+3)^0,w,c
  7378  002818  1241               	iorwf	(___xxtofl@arg+3)^0,f,c
  7379  00281A  503C               	movf	___xxtofl@sign^0,w,c
  7380  00281C  B4D8               	btfsc	status,2,c
  7381  00281E  EF13  F014         	goto	u3171
  7382  002822  EF15  F014         	goto	u3170
  7383  002826                     u3171:
  7384  002826  EF1D  F014         	goto	l4194
  7385  00282A                     u3170:
  7386  00282A  BE37               	btfsc	(___xxtofl@val+3)^0,7,c
  7387  00282C  EF1C  F014         	goto	u3180
  7388  002830  EF1A  F014         	goto	u3181
  7389  002834                     u3181:
  7390  002834  EF1D  F014         	goto	l4194
  7391  002838                     u3180:
  7392  002838  8E41               	bsf	(___xxtofl@arg+3)^0,7,c
  7393  00283A                     l4194:
  7394  00283A  C03E  F034         	movff	___xxtofl@arg,?___xxtofl
  7395  00283E  C03F  F035         	movff	___xxtofl@arg+1,?___xxtofl+1
  7396  002842  C040  F036         	movff	___xxtofl@arg+2,?___xxtofl+2
  7397  002846  C041  F037         	movff	___xxtofl@arg+3,?___xxtofl+3
  7398  00284A                     l1877:
  7399  00284A  0012               	return		;funcret
  7400  00284C                     __end_of___xxtofl:
  7401                           	callstack 0
  7402                           
  7403 ;; *************** function ___fldiv *****************
  7404 ;; Defined at:
  7405 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  b               4    0[COMRAM] unsigned char 
  7408 ;;  a               4    4[COMRAM] unsigned char 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;  grs             4   19[COMRAM] unsigned long 
  7411 ;;  rem             4   12[COMRAM] unsigned long 
  7412 ;;  new_exp         2   17[COMRAM] int 
  7413 ;;  aexp            1   24[COMRAM] unsigned char 
  7414 ;;  bexp            1   23[COMRAM] unsigned char 
  7415 ;;  sign            1   16[COMRAM] unsigned char 
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  4    0[COMRAM] unsigned char 
  7418 ;; Registers used:
  7419 ;;		wreg, status,2, status,0
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7425 ;;      Params:         8       0       0       0       0       0       0       0       0
  7426 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7427 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7428 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7429 ;;Total ram usage:       25 bytes
  7430 ;; Hardware stack levels used:    1
  7431 ;; Hardware stack levels required when called:    3
  7432 ;; This function calls:
  7433 ;;		Nothing
  7434 ;; This function is called by:
  7435 ;;		_ComputeTemp
  7436 ;;		_ComputeWaterVol
  7437 ;;		_exp
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           	psect	text36
  7442  001536                     __ptext36:
  7443                           	callstack 0
  7444  001536                     ___fldiv:
  7445                           	callstack 24
  7446  001536  5004               	movf	(___fldiv@b+3)^0,w,c
  7447  001538  0B80               	andlw	128
  7448  00153A  6E11               	movwf	___fldiv@sign^0,c
  7449  00153C  5004               	movf	(___fldiv@b+3)^0,w,c
  7450  00153E  2404               	addwf	(___fldiv@b+3)^0,w,c
  7451  001540  6E18               	movwf	___fldiv@bexp^0,c
  7452  001542  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7453  001544  EFA6  F00A         	goto	u3321
  7454  001548  EFA8  F00A         	goto	u3320
  7455  00154C                     u3321:
  7456  00154C  EFA9  F00A         	goto	l4260
  7457  001550                     u3320:
  7458  001550  8018               	bsf	___fldiv@bexp^0,0,c
  7459  001552                     l4260:
  7460  001552  5018               	movf	___fldiv@bexp^0,w,c
  7461  001554  B4D8               	btfsc	status,2,c
  7462  001556  EFAF  F00A         	goto	u3331
  7463  00155A  EFB1  F00A         	goto	u3330
  7464  00155E                     u3331:
  7465  00155E  EFC6  F00A         	goto	l4270
  7466  001562                     u3330:
  7467  001562  2818               	incf	___fldiv@bexp^0,w,c
  7468  001564  A4D8               	btfss	status,2,c
  7469  001566  EFB7  F00A         	goto	u3341
  7470  00156A  EFB9  F00A         	goto	u3340
  7471  00156E                     u3341:
  7472  00156E  EFC1  F00A         	goto	l4266
  7473  001572                     u3340:
  7474  001572  0E00               	movlw	0
  7475  001574  6E01               	movwf	___fldiv@b^0,c
  7476  001576  0E00               	movlw	0
  7477  001578  6E02               	movwf	(___fldiv@b+1)^0,c
  7478  00157A  0E00               	movlw	0
  7479  00157C  6E03               	movwf	(___fldiv@b+2)^0,c
  7480  00157E  0E00               	movlw	0
  7481  001580  6E04               	movwf	(___fldiv@b+3)^0,c
  7482  001582                     l4266:
  7483  001582  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7484  001584  0E00               	movlw	0
  7485  001586  6E04               	movwf	(___fldiv@b+3)^0,c
  7486  001588  EFCE  F00A         	goto	l4272
  7487  00158C                     l4270:
  7488  00158C  0E00               	movlw	0
  7489  00158E  6E01               	movwf	___fldiv@b^0,c
  7490  001590  0E00               	movlw	0
  7491  001592  6E02               	movwf	(___fldiv@b+1)^0,c
  7492  001594  0E00               	movlw	0
  7493  001596  6E03               	movwf	(___fldiv@b+2)^0,c
  7494  001598  0E00               	movlw	0
  7495  00159A  6E04               	movwf	(___fldiv@b+3)^0,c
  7496  00159C                     l4272:
  7497  00159C  5008               	movf	(___fldiv@a+3)^0,w,c
  7498  00159E  0B80               	andlw	128
  7499  0015A0  1A11               	xorwf	___fldiv@sign^0,f,c
  7500  0015A2  5008               	movf	(___fldiv@a+3)^0,w,c
  7501  0015A4  2408               	addwf	(___fldiv@a+3)^0,w,c
  7502  0015A6  6E19               	movwf	___fldiv@aexp^0,c
  7503  0015A8  AE07               	btfss	(___fldiv@a+2)^0,7,c
  7504  0015AA  EFD9  F00A         	goto	u3351
  7505  0015AE  EFDB  F00A         	goto	u3350
  7506  0015B2                     u3351:
  7507  0015B2  EFDC  F00A         	goto	l4280
  7508  0015B6                     u3350:
  7509  0015B6  8019               	bsf	___fldiv@aexp^0,0,c
  7510  0015B8                     l4280:
  7511  0015B8  5019               	movf	___fldiv@aexp^0,w,c
  7512  0015BA  B4D8               	btfsc	status,2,c
  7513  0015BC  EFE2  F00A         	goto	u3361
  7514  0015C0  EFE4  F00A         	goto	u3360
  7515  0015C4                     u3361:
  7516  0015C4  EFF9  F00A         	goto	l4290
  7517  0015C8                     u3360:
  7518  0015C8  2819               	incf	___fldiv@aexp^0,w,c
  7519  0015CA  A4D8               	btfss	status,2,c
  7520  0015CC  EFEA  F00A         	goto	u3371
  7521  0015D0  EFEC  F00A         	goto	u3370
  7522  0015D4                     u3371:
  7523  0015D4  EFF4  F00A         	goto	l4286
  7524  0015D8                     u3370:
  7525  0015D8  0E00               	movlw	0
  7526  0015DA  6E05               	movwf	___fldiv@a^0,c
  7527  0015DC  0E00               	movlw	0
  7528  0015DE  6E06               	movwf	(___fldiv@a+1)^0,c
  7529  0015E0  0E00               	movlw	0
  7530  0015E2  6E07               	movwf	(___fldiv@a+2)^0,c
  7531  0015E4  0E00               	movlw	0
  7532  0015E6  6E08               	movwf	(___fldiv@a+3)^0,c
  7533  0015E8                     l4286:
  7534  0015E8  8E07               	bsf	(___fldiv@a+2)^0,7,c
  7535  0015EA  0E00               	movlw	0
  7536  0015EC  6E08               	movwf	(___fldiv@a+3)^0,c
  7537  0015EE  EF01  F00B         	goto	l4292
  7538  0015F2                     l4290:
  7539  0015F2  0E00               	movlw	0
  7540  0015F4  6E05               	movwf	___fldiv@a^0,c
  7541  0015F6  0E00               	movlw	0
  7542  0015F8  6E06               	movwf	(___fldiv@a+1)^0,c
  7543  0015FA  0E00               	movlw	0
  7544  0015FC  6E07               	movwf	(___fldiv@a+2)^0,c
  7545  0015FE  0E00               	movlw	0
  7546  001600  6E08               	movwf	(___fldiv@a+3)^0,c
  7547  001602                     l4292:
  7548  001602  5005               	movf	___fldiv@a^0,w,c
  7549  001604  1006               	iorwf	(___fldiv@a+1)^0,w,c
  7550  001606  1007               	iorwf	(___fldiv@a+2)^0,w,c
  7551  001608  1008               	iorwf	(___fldiv@a+3)^0,w,c
  7552  00160A  A4D8               	btfss	status,2,c
  7553  00160C  EF0A  F00B         	goto	u3381
  7554  001610  EF0C  F00B         	goto	u3380
  7555  001614                     u3381:
  7556  001614  EF24  F00B         	goto	l4304
  7557  001618                     u3380:
  7558  001618  0E00               	movlw	0
  7559  00161A  6E01               	movwf	___fldiv@b^0,c
  7560  00161C  0E00               	movlw	0
  7561  00161E  6E02               	movwf	(___fldiv@b+1)^0,c
  7562  001620  0E00               	movlw	0
  7563  001622  6E03               	movwf	(___fldiv@b+2)^0,c
  7564  001624  0E00               	movlw	0
  7565  001626  6E04               	movwf	(___fldiv@b+3)^0,c
  7566  001628  0E80               	movlw	128
  7567  00162A  1203               	iorwf	(___fldiv@b+2)^0,f,c
  7568  00162C  0E7F               	movlw	127
  7569  00162E  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7570  001630                     l4298:
  7571  001630  5011               	movf	___fldiv@sign^0,w,c
  7572  001632  1204               	iorwf	(___fldiv@b+3)^0,f,c
  7573  001634  C001  F001         	movff	___fldiv@b,?___fldiv
  7574  001638  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  7575  00163C  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  7576  001640  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  7577  001644  EF67  F00C         	goto	l1781
  7578  001648                     l4304:
  7579  001648  5018               	movf	___fldiv@bexp^0,w,c
  7580  00164A  A4D8               	btfss	status,2,c
  7581  00164C  EF2A  F00B         	goto	u3391
  7582  001650  EF2C  F00B         	goto	u3390
  7583  001654                     u3391:
  7584  001654  EF36  F00B         	goto	l4312
  7585  001658                     u3390:
  7586  001658  0E00               	movlw	0
  7587  00165A  6E01               	movwf	?___fldiv^0,c
  7588  00165C  0E00               	movlw	0
  7589  00165E  6E02               	movwf	(?___fldiv+1)^0,c
  7590  001660  0E00               	movlw	0
  7591  001662  6E03               	movwf	(?___fldiv+2)^0,c
  7592  001664  0E00               	movlw	0
  7593  001666  6E04               	movwf	(?___fldiv+3)^0,c
  7594  001668  EF67  F00C         	goto	l1781
  7595  00166C                     l4312:
  7596  00166C  5019               	movf	___fldiv@aexp^0,w,c
  7597  00166E  C018  F009         	movff	___fldiv@bexp,??___fldiv
  7598  001672  6A0A               	clrf	(??___fldiv+1)^0,c
  7599  001674  5E09               	subwf	??___fldiv^0,f,c
  7600  001676  0E00               	movlw	0
  7601  001678  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  7602  00167A  0E7F               	movlw	127
  7603  00167C  2409               	addwf	??___fldiv^0,w,c
  7604  00167E  6E12               	movwf	___fldiv@new_exp^0,c
  7605  001680  0E00               	movlw	0
  7606  001682  200A               	addwfc	(??___fldiv+1)^0,w,c
  7607  001684  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7608  001686  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  7609  00168A  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  7610  00168E  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  7611  001692  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  7612  001696  0E00               	movlw	0
  7613  001698  6E01               	movwf	___fldiv@b^0,c
  7614  00169A  0E00               	movlw	0
  7615  00169C  6E02               	movwf	(___fldiv@b+1)^0,c
  7616  00169E  0E00               	movlw	0
  7617  0016A0  6E03               	movwf	(___fldiv@b+2)^0,c
  7618  0016A2  0E00               	movlw	0
  7619  0016A4  6E04               	movwf	(___fldiv@b+3)^0,c
  7620  0016A6  0E00               	movlw	0
  7621  0016A8  6E14               	movwf	___fldiv@grs^0,c
  7622  0016AA  0E00               	movlw	0
  7623  0016AC  6E15               	movwf	(___fldiv@grs+1)^0,c
  7624  0016AE  0E00               	movlw	0
  7625  0016B0  6E16               	movwf	(___fldiv@grs+2)^0,c
  7626  0016B2  0E00               	movlw	0
  7627  0016B4  6E17               	movwf	(___fldiv@grs+3)^0,c
  7628  0016B6  0E00               	movlw	0
  7629  0016B8  6E19               	movwf	___fldiv@aexp^0,c
  7630  0016BA  EF97  F00B         	goto	l1783
  7631  0016BE                     l4322:
  7632  0016BE  5019               	movf	___fldiv@aexp^0,w,c
  7633  0016C0  B4D8               	btfsc	status,2,c
  7634  0016C2  EF65  F00B         	goto	u3401
  7635  0016C6  EF67  F00B         	goto	u3400
  7636  0016CA                     u3401:
  7637  0016CA  EF7E  F00B         	goto	l4330
  7638  0016CE                     u3400:
  7639  0016CE  90D8               	bcf	status,0,c
  7640  0016D0  360D               	rlcf	___fldiv@rem^0,f,c
  7641  0016D2  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  7642  0016D4  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  7643  0016D6  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  7644  0016D8  90D8               	bcf	status,0,c
  7645  0016DA  3601               	rlcf	___fldiv@b^0,f,c
  7646  0016DC  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7647  0016DE  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7648  0016E0  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7649  0016E2  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7650  0016E4  EF76  F00B         	goto	u3411
  7651  0016E8  EF78  F00B         	goto	u3410
  7652  0016EC                     u3411:
  7653  0016EC  EF79  F00B         	goto	l1786
  7654  0016F0                     u3410:
  7655  0016F0  8001               	bsf	___fldiv@b^0,0,c
  7656  0016F2                     l1786:
  7657  0016F2  90D8               	bcf	status,0,c
  7658  0016F4  3614               	rlcf	___fldiv@grs^0,f,c
  7659  0016F6  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7660  0016F8  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7661  0016FA  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7662  0016FC                     l4330:
  7663  0016FC  5005               	movf	___fldiv@a^0,w,c
  7664  0016FE  5C0D               	subwf	___fldiv@rem^0,w,c
  7665  001700  5006               	movf	(___fldiv@a+1)^0,w,c
  7666  001702  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  7667  001704  5007               	movf	(___fldiv@a+2)^0,w,c
  7668  001706  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  7669  001708  5008               	movf	(___fldiv@a+3)^0,w,c
  7670  00170A  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  7671  00170C  A0D8               	btfss	status,0,c
  7672  00170E  EF8B  F00B         	goto	u3421
  7673  001712  EF8D  F00B         	goto	u3420
  7674  001716                     u3421:
  7675  001716  EF96  F00B         	goto	l4336
  7676  00171A                     u3420:
  7677  00171A  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  7678  00171C  5005               	movf	___fldiv@a^0,w,c
  7679  00171E  5E0D               	subwf	___fldiv@rem^0,f,c
  7680  001720  5006               	movf	(___fldiv@a+1)^0,w,c
  7681  001722  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  7682  001724  5007               	movf	(___fldiv@a+2)^0,w,c
  7683  001726  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  7684  001728  5008               	movf	(___fldiv@a+3)^0,w,c
  7685  00172A  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  7686  00172C                     l4336:
  7687  00172C  2A19               	incf	___fldiv@aexp^0,f,c
  7688  00172E                     l1783:
  7689  00172E  0E19               	movlw	25
  7690  001730  6419               	cpfsgt	___fldiv@aexp^0,c
  7691  001732  EF9D  F00B         	goto	u3431
  7692  001736  EF9F  F00B         	goto	u3430
  7693  00173A                     u3431:
  7694  00173A  EF5F  F00B         	goto	l4322
  7695  00173E                     u3430:
  7696  00173E  500D               	movf	___fldiv@rem^0,w,c
  7697  001740  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  7698  001742  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  7699  001744  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  7700  001746  B4D8               	btfsc	status,2,c
  7701  001748  EFA8  F00B         	goto	u3441
  7702  00174C  EFAA  F00B         	goto	u3440
  7703  001750                     u3441:
  7704  001750  EFC2  F00B         	goto	l4348
  7705  001754                     u3440:
  7706  001754  8014               	bsf	___fldiv@grs^0,0,c
  7707  001756  EFC2  F00B         	goto	l4348
  7708  00175A                     l4342:
  7709  00175A  90D8               	bcf	status,0,c
  7710  00175C  3601               	rlcf	___fldiv@b^0,f,c
  7711  00175E  3602               	rlcf	(___fldiv@b+1)^0,f,c
  7712  001760  3603               	rlcf	(___fldiv@b+2)^0,f,c
  7713  001762  3604               	rlcf	(___fldiv@b+3)^0,f,c
  7714  001764  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7715  001766  EFB7  F00B         	goto	u3451
  7716  00176A  EFB9  F00B         	goto	u3450
  7717  00176E                     u3451:
  7718  00176E  EFBA  F00B         	goto	l1792
  7719  001772                     u3450:
  7720  001772  8001               	bsf	___fldiv@b^0,0,c
  7721  001774                     l1792:
  7722  001774  90D8               	bcf	status,0,c
  7723  001776  3614               	rlcf	___fldiv@grs^0,f,c
  7724  001778  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  7725  00177A  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  7726  00177C  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  7727  00177E  0612               	decf	___fldiv@new_exp^0,f,c
  7728  001780  A0D8               	btfss	status,0,c
  7729  001782  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  7730  001784                     l4348:
  7731  001784  AE03               	btfss	(___fldiv@b+2)^0,7,c
  7732  001786  EFC7  F00B         	goto	u3461
  7733  00178A  EFC9  F00B         	goto	u3460
  7734  00178E                     u3461:
  7735  00178E  EFAD  F00B         	goto	l4342
  7736  001792                     u3460:
  7737  001792  0E00               	movlw	0
  7738  001794  6E19               	movwf	___fldiv@aexp^0,c
  7739  001796  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  7740  001798  EFD0  F00B         	goto	u3471
  7741  00179C  EFD2  F00B         	goto	u3470
  7742  0017A0                     u3471:
  7743  0017A0  EFF6  F00B         	goto	l1794
  7744  0017A4                     u3470:
  7745  0017A4  0EFF               	movlw	255
  7746  0017A6  1414               	andwf	___fldiv@grs^0,w,c
  7747  0017A8  6E09               	movwf	??___fldiv^0,c
  7748  0017AA  0EFF               	movlw	255
  7749  0017AC  1415               	andwf	(___fldiv@grs+1)^0,w,c
  7750  0017AE  6E0A               	movwf	(??___fldiv+1)^0,c
  7751  0017B0  0EFF               	movlw	255
  7752  0017B2  1416               	andwf	(___fldiv@grs+2)^0,w,c
  7753  0017B4  6E0B               	movwf	(??___fldiv+2)^0,c
  7754  0017B6  0E7F               	movlw	127
  7755  0017B8  1417               	andwf	(___fldiv@grs+3)^0,w,c
  7756  0017BA  6E0C               	movwf	(??___fldiv+3)^0,c
  7757  0017BC  5009               	movf	??___fldiv^0,w,c
  7758  0017BE  100A               	iorwf	(??___fldiv+1)^0,w,c
  7759  0017C0  100B               	iorwf	(??___fldiv+2)^0,w,c
  7760  0017C2  100C               	iorwf	(??___fldiv+3)^0,w,c
  7761  0017C4  B4D8               	btfsc	status,2,c
  7762  0017C6  EFE7  F00B         	goto	u3481
  7763  0017CA  EFE9  F00B         	goto	u3480
  7764  0017CE                     u3481:
  7765  0017CE  EFED  F00B         	goto	l1795
  7766  0017D2                     u3480:
  7767  0017D2                     l4356:
  7768  0017D2  0E01               	movlw	1
  7769  0017D4  6E19               	movwf	___fldiv@aexp^0,c
  7770  0017D6  EFF6  F00B         	goto	l1794
  7771  0017DA                     l1795:
  7772  0017DA  A001               	btfss	___fldiv@b^0,0,c
  7773  0017DC  EFF2  F00B         	goto	u3491
  7774  0017E0  EFF4  F00B         	goto	u3490
  7775  0017E4                     u3491:
  7776  0017E4  EFF6  F00B         	goto	l1794
  7777  0017E8                     u3490:
  7778  0017E8  EFE9  F00B         	goto	l4356
  7779  0017EC                     l1794:
  7780  0017EC  5019               	movf	___fldiv@aexp^0,w,c
  7781  0017EE  B4D8               	btfsc	status,2,c
  7782  0017F0  EFFC  F00B         	goto	u3501
  7783  0017F4  EFFE  F00B         	goto	u3500
  7784  0017F8                     u3501:
  7785  0017F8  EF22  F00C         	goto	l4368
  7786  0017FC                     u3500:
  7787  0017FC  0E01               	movlw	1
  7788  0017FE  2601               	addwf	___fldiv@b^0,f,c
  7789  001800  0E00               	movlw	0
  7790  001802  2202               	addwfc	(___fldiv@b+1)^0,f,c
  7791  001804  2203               	addwfc	(___fldiv@b+2)^0,f,c
  7792  001806  2204               	addwfc	(___fldiv@b+3)^0,f,c
  7793  001808  A004               	btfss	(___fldiv@b+3)^0,0,c
  7794  00180A  EF09  F00C         	goto	u3511
  7795  00180E  EF0B  F00C         	goto	u3510
  7796  001812                     u3511:
  7797  001812  EF22  F00C         	goto	l4368
  7798  001816                     u3510:
  7799  001816  C001  F009         	movff	___fldiv@b,??___fldiv
  7800  00181A  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  7801  00181E  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  7802  001822  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  7803  001826  340C               	rlcf	(??___fldiv+3)^0,w,c
  7804  001828  320C               	rrcf	(??___fldiv+3)^0,f,c
  7805  00182A  320B               	rrcf	(??___fldiv+2)^0,f,c
  7806  00182C  320A               	rrcf	(??___fldiv+1)^0,f,c
  7807  00182E  3209               	rrcf	??___fldiv^0,f,c
  7808  001830  C009  F001         	movff	??___fldiv,___fldiv@b
  7809  001834  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  7810  001838  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  7811  00183C  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  7812  001840  4A12               	infsnz	___fldiv@new_exp^0,f,c
  7813  001842  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  7814  001844                     l4368:
  7815  001844  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7816  001846  EF2D  F00C         	goto	u3521
  7817  00184A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7818  00184C  E108               	bnz	u3520
  7819  00184E  2812               	incf	___fldiv@new_exp^0,w,c
  7820  001850  A0D8               	btfss	status,0,c
  7821  001852  EF2D  F00C         	goto	u3521
  7822  001856  EF2F  F00C         	goto	u3520
  7823  00185A                     u3521:
  7824  00185A  EF3A  F00C         	goto	l4372
  7825  00185E                     u3520:
  7826  00185E  0E00               	movlw	0
  7827  001860  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7828  001862  6812               	setf	___fldiv@new_exp^0,c
  7829  001864  0E00               	movlw	0
  7830  001866  6E01               	movwf	___fldiv@b^0,c
  7831  001868  0E00               	movlw	0
  7832  00186A  6E02               	movwf	(___fldiv@b+1)^0,c
  7833  00186C  0E00               	movlw	0
  7834  00186E  6E03               	movwf	(___fldiv@b+2)^0,c
  7835  001870  0E00               	movlw	0
  7836  001872  6E04               	movwf	(___fldiv@b+3)^0,c
  7837  001874                     l4372:
  7838  001874  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7839  001876  EF47  F00C         	goto	u3530
  7840  00187A  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  7841  00187C  E106               	bnz	u3531
  7842  00187E  0412               	decf	___fldiv@new_exp^0,w,c
  7843  001880  B0D8               	btfsc	status,0,c
  7844  001882  EF45  F00C         	goto	u3531
  7845  001886  EF47  F00C         	goto	u3530
  7846  00188A                     u3531:
  7847  00188A  EF55  F00C         	goto	l4376
  7848  00188E                     u3530:
  7849  00188E  0E00               	movlw	0
  7850  001890  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  7851  001892  0E00               	movlw	0
  7852  001894  6E12               	movwf	___fldiv@new_exp^0,c
  7853  001896  0E00               	movlw	0
  7854  001898  6E01               	movwf	___fldiv@b^0,c
  7855  00189A  0E00               	movlw	0
  7856  00189C  6E02               	movwf	(___fldiv@b+1)^0,c
  7857  00189E  0E00               	movlw	0
  7858  0018A0  6E03               	movwf	(___fldiv@b+2)^0,c
  7859  0018A2  0E00               	movlw	0
  7860  0018A4  6E04               	movwf	(___fldiv@b+3)^0,c
  7861  0018A6  0E00               	movlw	0
  7862  0018A8  6E11               	movwf	___fldiv@sign^0,c
  7863  0018AA                     l4376:
  7864  0018AA  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  7865  0018AE  A018               	btfss	___fldiv@bexp^0,0,c
  7866  0018B0  EF5C  F00C         	goto	u3541
  7867  0018B4  EF5E  F00C         	goto	u3540
  7868  0018B8                     u3541:
  7869  0018B8  EF61  F00C         	goto	l4382
  7870  0018BC                     u3540:
  7871  0018BC  8E03               	bsf	(___fldiv@b+2)^0,7,c
  7872  0018BE  EF62  F00C         	goto	l4384
  7873  0018C2                     l4382:
  7874  0018C2  9E03               	bcf	(___fldiv@b+2)^0,7,c
  7875  0018C4                     l4384:
  7876  0018C4  90D8               	bcf	status,0,c
  7877  0018C6  3018               	rrcf	___fldiv@bexp^0,w,c
  7878  0018C8  6E04               	movwf	(___fldiv@b+3)^0,c
  7879  0018CA  EF18  F00B         	goto	l4298
  7880  0018CE                     l1781:
  7881  0018CE  0012               	return		;funcret
  7882  0018D0                     __end_of___fldiv:
  7883                           	callstack 0
  7884                           
  7885 ;; *************** function _ComputeTOD *****************
  7886 ;; Defined at:
  7887 ;;		line 104 in file "main.c"
  7888 ;; Parameters:    Size  Location     Type
  7889 ;;		None
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;  bIncDays        1   40[COMRAM] unsigned char 
  7892 ;; Return value:  Size  Location     Type
  7893 ;;                  1    wreg      void 
  7894 ;; Registers used:
  7895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7901 ;;      Params:         0       0       0       0       0       0       0       0       0
  7902 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7903 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7904 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7905 ;;Total ram usage:        2 bytes
  7906 ;; Hardware stack levels used:    1
  7907 ;; Hardware stack levels required when called:    6
  7908 ;; This function calls:
  7909 ;;		_LCD_GoTo
  7910 ;;		_sprintf
  7911 ;; This function is called by:
  7912 ;;		_main
  7913 ;; This function uses a non-reentrant model
  7914 ;;
  7915                           
  7916                           	psect	text37
  7917  00309A                     __ptext37:
  7918                           	callstack 0
  7919  00309A                     _ComputeTOD:
  7920                           	callstack 24
  7921  00309A                     
  7922                           ;main.c: 106: bool bIncDays = 0;
  7923  00309A  0E00               	movlw	0
  7924  00309C  6E29               	movwf	ComputeTOD@bIncDays^0,c
  7925  00309E                     
  7926                           ;main.c: 108: if (++giTotalSecs >= 999) giTotalSecs = 0;
  7927  00309E  0100               	movlb	0	; () banked
  7928  0030A0  4BD3               	infsnz	_giTotalSecs& (0+255),f,b
  7929  0030A2  2BD4               	incf	(_giTotalSecs+1)& (0+255),f,b
  7930  0030A4  0EE7               	movlw	231
  7931  0030A6  5DD3               	subwf	_giTotalSecs& (0+255),w,b
  7932  0030A8  0E03               	movlw	3
  7933  0030AA  59D4               	subwfb	(_giTotalSecs+1)& (0+255),w,b
  7934  0030AC  A0D8               	btfss	status,0,c
  7935  0030AE  EF5B  F018         	goto	u4301
  7936  0030B2  EF5D  F018         	goto	u4300
  7937  0030B6                     u4301:
  7938  0030B6  EF61  F018         	goto	l5172
  7939  0030BA                     u4300:
  7940  0030BA                     
  7941                           ; BSR set to: 0
  7942  0030BA  0E00               	movlw	0
  7943  0030BC  6FD4               	movwf	(_giTotalSecs+1)& (0+255),b
  7944  0030BE  0E00               	movlw	0
  7945  0030C0  6FD3               	movwf	_giTotalSecs& (0+255),b
  7946  0030C2                     l5172:
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;main.c: 109: if (++giSecs >= 60)
  7950  0030C2  2BE8               	incf	_giSecs& (0+255),f,b
  7951  0030C4  0E3B               	movlw	59
  7952  0030C6  65E8               	cpfsgt	_giSecs& (0+255),b
  7953  0030C8  EF68  F018         	goto	u4311
  7954  0030CC  EF6A  F018         	goto	u4310
  7955  0030D0                     u4311:
  7956  0030D0  EF84  F018         	goto	l5184
  7957  0030D4                     u4310:
  7958  0030D4                     
  7959                           ; BSR set to: 0
  7960                           ;main.c: 110: {;main.c: 111: giSecs = 0;
  7961  0030D4  0E00               	movlw	0
  7962  0030D6  6FE8               	movwf	_giSecs& (0+255),b
  7963  0030D8                     
  7964                           ; BSR set to: 0
  7965                           ;main.c: 112: if (++giMins >= 60)
  7966  0030D8  2BE7               	incf	_giMins& (0+255),f,b
  7967  0030DA  0E3B               	movlw	59
  7968  0030DC  65E7               	cpfsgt	_giMins& (0+255),b
  7969  0030DE  EF73  F018         	goto	u4321
  7970  0030E2  EF75  F018         	goto	u4320
  7971  0030E6                     u4321:
  7972  0030E6  EF84  F018         	goto	l5184
  7973  0030EA                     u4320:
  7974  0030EA                     
  7975                           ; BSR set to: 0
  7976                           ;main.c: 113: {;main.c: 114: giMins = 0;
  7977  0030EA  0E00               	movlw	0
  7978  0030EC  6FE7               	movwf	_giMins& (0+255),b
  7979  0030EE                     
  7980                           ; BSR set to: 0
  7981                           ;main.c: 115: if (++giHours >= 24){
  7982  0030EE  2BE6               	incf	_giHours& (0+255),f,b
  7983  0030F0  0E17               	movlw	23
  7984  0030F2  65E6               	cpfsgt	_giHours& (0+255),b
  7985  0030F4  EF7E  F018         	goto	u4331
  7986  0030F8  EF80  F018         	goto	u4330
  7987  0030FC                     u4331:
  7988  0030FC  EF84  F018         	goto	l5184
  7989  003100                     u4330:
  7990  003100                     
  7991                           ; BSR set to: 0
  7992                           ;main.c: 116: giHours = 0;
  7993  003100  0E00               	movlw	0
  7994  003102  6FE6               	movwf	_giHours& (0+255),b
  7995                           
  7996                           ;main.c: 117: bIncDays = 1;
  7997  003104  0E01               	movlw	1
  7998  003106  6E29               	movwf	ComputeTOD@bIncDays^0,c
  7999  003108                     l5184:
  8000                           
  8001                           ; BSR set to: 0
  8002                           ;main.c: 122: {;main.c: 123: sprintf(gsTotalSecs, "%3i", giTotalSecs);
  8003  003108  0EF9               	movlw	low _gsTotalSecs
  8004  00310A  6E0D               	movwf	sprintf@sp^0,c
  8005  00310C  0E00               	movlw	high _gsTotalSecs
  8006  00310E  6E0E               	movwf	(sprintf@sp+1)^0,c
  8007  003110  0E85               	movlw	low STR_2
  8008  003112  6E0F               	movwf	sprintf@f^0,c
  8009  003114  0E08               	movlw	high STR_2
  8010  003116  6E10               	movwf	(sprintf@f+1)^0,c
  8011  003118  C0D3  F011         	movff	_giTotalSecs,?_sprintf+4
  8012  00311C  C0D4  F012         	movff	_giTotalSecs+1,?_sprintf+5
  8013  003120  ECBB  F008         	call	_sprintf	;wreg free
  8014  003124                     
  8015                           ;main.c: 124: LCD_GoTo (1, 12);
  8016  003124  0E0C               	movlw	12
  8017  003126  6E06               	movwf	LCD_GoTo@iCharPos^0,c
  8018  003128  0E01               	movlw	1
  8019  00312A  EC93  F01C         	call	_LCD_GoTo
  8020  00312E                     
  8021                           ;main.c: 126: };main.c: 129: if (bIncDays)
  8022  00312E  5029               	movf	ComputeTOD@bIncDays^0,w,c
  8023  003130  B4D8               	btfsc	status,2,c
  8024  003132  EF9D  F018         	goto	u4341
  8025  003136  EF9F  F018         	goto	u4340
  8026  00313A                     u4341:
  8027  00313A  EFBE  F018         	goto	l474
  8028  00313E                     u4340:
  8029  00313E                     
  8030                           ;main.c: 130: {;main.c: 131: if (++giDay > giMonthEndTbl[giMonth - 1])
  8031  00313E  0100               	movlb	0	; () banked
  8032  003140  2BF8               	incf	_giDay& (0+255),f,b
  8033  003142  0ECF               	movlw	low (_giMonthEndTbl+65535)
  8034  003144  245E               	addwf	_giMonth^0,w,c
  8035  003146  6ED9               	movwf	fsr2l,c
  8036  003148  6ADA               	clrf	fsr2h,c
  8037  00314A  0E01               	movlw	high (_giMonthEndTbl+65535)
  8038  00314C  22DA               	addwfc	fsr2h,f,c
  8039  00314E  51F8               	movf	_giDay& (0+255),w,b
  8040  003150  5CDE               	subwf	postinc2,w,c
  8041  003152  B0D8               	btfsc	status,0,c
  8042  003154  EFAE  F018         	goto	u4351
  8043  003158  EFB0  F018         	goto	u4350
  8044  00315C                     u4351:
  8045  00315C  EFBE  F018         	goto	l474
  8046  003160                     u4350:
  8047  003160                     
  8048                           ; BSR set to: 0
  8049                           ;main.c: 132: {;main.c: 133: giDay = 1;
  8050  003160  0E01               	movlw	1
  8051  003162  6FF8               	movwf	_giDay& (0+255),b
  8052  003164                     
  8053                           ; BSR set to: 0
  8054                           ;main.c: 134: if (++giMonth > 12)
  8055  003164  2A5E               	incf	_giMonth^0,f,c
  8056  003166  0E0C               	movlw	12
  8057  003168  645E               	cpfsgt	_giMonth^0,c
  8058  00316A  EFB9  F018         	goto	u4361
  8059  00316E  EFBB  F018         	goto	u4360
  8060  003172                     u4361:
  8061  003172  EFBE  F018         	goto	l474
  8062  003176                     u4360:
  8063  003176                     
  8064                           ; BSR set to: 0
  8065                           ;main.c: 135: {;main.c: 136: giMonth = 1;
  8066  003176  0E01               	movlw	1
  8067  003178  6E5E               	movwf	_giMonth^0,c
  8068  00317A                     
  8069                           ; BSR set to: 0
  8070                           ;main.c: 137: giYear ++;
  8071  00317A  2BF7               	incf	_giYear& (0+255),f,b
  8072  00317C                     l474:
  8073  00317C  0012               	return		;funcret
  8074  00317E                     __end_of_ComputeTOD:
  8075                           	callstack 0
  8076                           
  8077 ;; *************** function _sprintf *****************
  8078 ;; Defined at:
  8079 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\doprnt.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  sp              2   12[COMRAM] PTR unsigned char 
  8082 ;;		 -> sLine2(100), sLine1(100), gsTotalSecs(4), 
  8083 ;;  f               2   14[COMRAM] PTR const unsigned char 
  8084 ;;		 -> STR_4(17), STR_3(17), STR_2(4), 
  8085 ;; Auto vars:     Size  Location     Type
  8086 ;;  tmpval          4    0        struct .
  8087 ;;  width           2   36[COMRAM] int 
  8088 ;;  val             2   34[COMRAM] unsigned int 
  8089 ;;  len             2   31[COMRAM] unsigned int 
  8090 ;;  ap              2   29[COMRAM] PTR void [1]
  8091 ;;		 -> ?_sprintf(2), 
  8092 ;;  cp              2   26[COMRAM] PTR const unsigned char 
  8093 ;;		 -> sprintf@c(1), 
  8094 ;;  c               1   38[COMRAM] unsigned char 
  8095 ;;  flag            1   33[COMRAM] unsigned char 
  8096 ;;  prec            1   28[COMRAM] char 
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  2   12[COMRAM] int 
  8099 ;; Registers used:
  8100 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8106 ;;      Params:        10       0       0       0       0       0       0       0       0
  8107 ;;      Locals:        13       0       0       0       0       0       0       0       0
  8108 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8109 ;;      Totals:        27       0       0       0       0       0       0       0       0
  8110 ;;Total ram usage:       27 bytes
  8111 ;; Hardware stack levels used:    1
  8112 ;; Hardware stack levels required when called:    4
  8113 ;; This function calls:
  8114 ;;		___lwdiv
  8115 ;;		___lwmod
  8116 ;;		___wmul
  8117 ;;		_isdigit
  8118 ;; This function is called by:
  8119 ;;		_ComputeTOD
  8120 ;;		_LCD_DisplayResults
  8121 ;; This function uses a non-reentrant model
  8122 ;;
  8123                           
  8124                           	psect	text38
  8125  001176                     __ptext38:
  8126                           	callstack 0
  8127  001176                     _sprintf:
  8128                           	callstack 24
  8129  001176                     
  8130                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  8131  001176  0E11               	movlw	low (?_sprintf+4)
  8132  001178  6E1E               	movwf	sprintf@ap^0,c
  8133  00117A  0E00               	movlw	high (?_sprintf+4)
  8134  00117C  6E1F               	movwf	(sprintf@ap+1)^0,c
  8135                           
  8136                           ;doprnt.c: 553: while((c = *f++)) {
  8137  00117E  EF83  F00A         	goto	l4626
  8138  001182                     l4512:
  8139                           
  8140                           ;doprnt.c: 555: if(c != '%')
  8141  001182  0E25               	movlw	37
  8142  001184  1827               	xorwf	sprintf@c^0,w,c
  8143  001186  B4D8               	btfsc	status,2,c
  8144  001188  EFC8  F008         	goto	u3721
  8145  00118C  EFCA  F008         	goto	u3720
  8146  001190                     u3721:
  8147  001190  EFD4  F008         	goto	l4518
  8148  001194                     u3720:
  8149  001194                     
  8150                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  8151  001194  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8152  001198  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8153  00119C  C027  FFDF         	movff	sprintf@c,indf2
  8154  0011A0  4A0D               	infsnz	sprintf@sp^0,f,c
  8155  0011A2  2A0E               	incf	(sprintf@sp+1)^0,f,c
  8156                           
  8157                           ;doprnt.c: 559: continue;
  8158  0011A4  EF83  F00A         	goto	l4626
  8159  0011A8                     l4518:
  8160                           
  8161                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  8162  0011A8  0E00               	movlw	0
  8163  0011AA  6E26               	movwf	(sprintf@width+1)^0,c
  8164  0011AC  0E00               	movlw	0
  8165  0011AE  6E25               	movwf	sprintf@width^0,c
  8166                           
  8167                           ;doprnt.c: 565: flag = 0;
  8168  0011B0  0E00               	movlw	0
  8169  0011B2  6E22               	movwf	sprintf@flag^0,c
  8170  0011B4                     
  8171                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  8172  0011B4  C00F  FFF6         	movff	sprintf@f,tblptrl
  8173  0011B8  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8174  0011BC                     	if	0	;tblptru may be non-zero
  8175  0011BC                     	endif
  8176  0011BC                     	if	0	;tblptru may be non-zero
  8177  0011BC                     	endif
  8178  0011BC  0008               	tblrd		*
  8179  0011BE  50F5               	movf	tablat,w,c
  8180  0011C0  ECA0  F01D         	call	_isdigit
  8181  0011C4  A0D8               	btfss	status,0,c
  8182  0011C6  EFE7  F008         	goto	u3731
  8183  0011CA  EFE9  F008         	goto	u3730
  8184  0011CE                     u3731:
  8185  0011CE  EF79  F009         	goto	l4560
  8186  0011D2                     u3730:
  8187  0011D2                     
  8188                           ;doprnt.c: 615: width = 0;
  8189  0011D2  0E00               	movlw	0
  8190  0011D4  6E26               	movwf	(sprintf@width+1)^0,c
  8191  0011D6  0E00               	movlw	0
  8192  0011D8  6E25               	movwf	sprintf@width^0,c
  8193  0011DA                     l4524:
  8194                           
  8195                           ;doprnt.c: 617: width *= 10;
  8196  0011DA  C025  F001         	movff	sprintf@width,___wmul@multiplier
  8197  0011DE  C026  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  8198  0011E2  0E00               	movlw	0
  8199  0011E4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8200  0011E6  0E0A               	movlw	10
  8201  0011E8  6E03               	movwf	___wmul@multiplicand^0,c
  8202  0011EA  ECB9  F01D         	call	___wmul	;wreg free
  8203  0011EE  C001  F025         	movff	?___wmul,sprintf@width
  8204  0011F2  C002  F026         	movff	?___wmul+1,sprintf@width+1
  8205  0011F6                     
  8206                           ;doprnt.c: 618: width += *f++ - '0';
  8207  0011F6  0ED0               	movlw	208
  8208  0011F8  6E17               	movwf	??_sprintf^0,c
  8209  0011FA  0EFF               	movlw	255
  8210  0011FC  6E18               	movwf	(??_sprintf+1)^0,c
  8211  0011FE  C00F  FFF6         	movff	sprintf@f,tblptrl
  8212  001202  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8213  001206                     	if	0	;tblptru may be non-zero
  8214  001206                     	endif
  8215  001206                     	if	0	;tblptru may be non-zero
  8216  001206                     	endif
  8217  001206  0008               	tblrd		*
  8218  001208  50F5               	movf	tablat,w,c
  8219  00120A  6E19               	movwf	(??_sprintf+2)^0,c
  8220  00120C  6A1A               	clrf	(??_sprintf+3)^0,c
  8221  00120E  5017               	movf	??_sprintf^0,w,c
  8222  001210  2619               	addwf	(??_sprintf+2)^0,f,c
  8223  001212  5018               	movf	(??_sprintf+1)^0,w,c
  8224  001214  221A               	addwfc	(??_sprintf+3)^0,f,c
  8225  001216  5019               	movf	(??_sprintf+2)^0,w,c
  8226  001218  2625               	addwf	sprintf@width^0,f,c
  8227  00121A  501A               	movf	(??_sprintf+3)^0,w,c
  8228  00121C  2226               	addwfc	(sprintf@width+1)^0,f,c
  8229  00121E  4A0F               	infsnz	sprintf@f^0,f,c
  8230  001220  2A10               	incf	(sprintf@f+1)^0,f,c
  8231  001222                     
  8232                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  8233  001222  C00F  FFF6         	movff	sprintf@f,tblptrl
  8234  001226  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8235  00122A                     	if	0	;tblptru may be non-zero
  8236  00122A                     	endif
  8237  00122A                     	if	0	;tblptru may be non-zero
  8238  00122A                     	endif
  8239  00122A  0008               	tblrd		*
  8240  00122C  50F5               	movf	tablat,w,c
  8241  00122E  ECA0  F01D         	call	_isdigit
  8242  001232  B0D8               	btfsc	status,0,c
  8243  001234  EF1E  F009         	goto	u3741
  8244  001238  EF20  F009         	goto	u3740
  8245  00123C                     u3741:
  8246  00123C  EFED  F008         	goto	l4524
  8247  001240                     u3740:
  8248  001240  EF79  F009         	goto	l4560
  8249  001244                     l4532:
  8250                           
  8251                           ;doprnt.c: 783: if(((unsigned)width) > len)
  8252  001244  5026               	movf	(sprintf@width+1)^0,w,c
  8253  001246  E109               	bnz	u3750
  8254  001248  0E02               	movlw	2
  8255  00124A  5C25               	subwf	sprintf@width^0,w,c
  8256  00124C  A0D8               	btfss	status,0,c
  8257  00124E  EF2B  F009         	goto	u3751
  8258  001252  EF2D  F009         	goto	u3750
  8259  001256                     u3751:
  8260  001256  EF32  F009         	goto	l4536
  8261  00125A                     u3750:
  8262  00125A                     
  8263                           ;doprnt.c: 784: width -= len;
  8264  00125A  0625               	decf	sprintf@width^0,f,c
  8265  00125C  A0D8               	btfss	status,0,c
  8266  00125E  0626               	decf	(sprintf@width+1)^0,f,c
  8267  001260  EF40  F009         	goto	l4542
  8268  001264                     l4536:
  8269                           
  8270                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  8271  001264  0E00               	movlw	0
  8272  001266  6E26               	movwf	(sprintf@width+1)^0,c
  8273  001268  0E00               	movlw	0
  8274  00126A  6E25               	movwf	sprintf@width^0,c
  8275  00126C  EF40  F009         	goto	l4542
  8276  001270                     l4538:
  8277                           
  8278                           ;doprnt.c: 791: ((*sp++ = (' ')));
  8279  001270  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8280  001274  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8281  001278  0E20               	movlw	32
  8282  00127A  6EDF               	movwf	indf2,c
  8283  00127C  4A0D               	infsnz	sprintf@sp^0,f,c
  8284  00127E  2A0E               	incf	(sprintf@sp+1)^0,f,c
  8285  001280                     l4542:
  8286  001280  0625               	decf	sprintf@width^0,f,c
  8287  001282  A0D8               	btfss	status,0,c
  8288  001284  0626               	decf	(sprintf@width+1)^0,f,c
  8289  001286  2825               	incf	sprintf@width^0,w,c
  8290  001288  E106               	bnz	u3761
  8291  00128A  2826               	incf	(sprintf@width+1)^0,w,c
  8292  00128C  A4D8               	btfss	status,2,c
  8293  00128E  EF4B  F009         	goto	u3761
  8294  001292  EF4D  F009         	goto	u3760
  8295  001296                     u3761:
  8296  001296  EF38  F009         	goto	l4538
  8297  00129A                     u3760:
  8298  00129A  EF5D  F009         	goto	l4550
  8299  00129E                     l4544:
  8300                           
  8301                           ;doprnt.c: 794: ((*sp++ = (*cp++)));
  8302  00129E  C01B  FFD9         	movff	sprintf@cp,fsr2l
  8303  0012A2  C01C  FFDA         	movff	sprintf@cp+1,fsr2h
  8304  0012A6  C00D  FFE1         	movff	sprintf@sp,fsr1l
  8305  0012AA  C00E  FFE2         	movff	sprintf@sp+1,fsr1h
  8306  0012AE  CFDF FFE7          	movff	indf2,indf1
  8307  0012B2  4A1B               	infsnz	sprintf@cp^0,f,c
  8308  0012B4  2A1C               	incf	(sprintf@cp+1)^0,f,c
  8309  0012B6  4A0D               	infsnz	sprintf@sp^0,f,c
  8310  0012B8  2A0E               	incf	(sprintf@sp+1)^0,f,c
  8311  0012BA                     l4550:
  8312  0012BA  0620               	decf	sprintf@len^0,f,c
  8313  0012BC  A0D8               	btfss	status,0,c
  8314  0012BE  0621               	decf	(sprintf@len+1)^0,f,c
  8315  0012C0  2820               	incf	sprintf@len^0,w,c
  8316  0012C2  E106               	bnz	u3771
  8317  0012C4  2821               	incf	(sprintf@len+1)^0,w,c
  8318  0012C6  A4D8               	btfss	status,2,c
  8319  0012C8  EF68  F009         	goto	u3771
  8320  0012CC  EF6A  F009         	goto	u3770
  8321  0012D0                     u3771:
  8322  0012D0  EF4F  F009         	goto	l4544
  8323  0012D4                     u3770:
  8324  0012D4  EF83  F00A         	goto	l4626
  8325  0012D8                     l4552:
  8326                           
  8327                           ;doprnt.c: 831: cp = (char *)&c;
  8328  0012D8  0E27               	movlw	low sprintf@c
  8329  0012DA  6E1B               	movwf	sprintf@cp^0,c
  8330  0012DC  0E00               	movlw	high sprintf@c
  8331  0012DE  6E1C               	movwf	(sprintf@cp+1)^0,c
  8332  0012E0                     
  8333                           ;doprnt.c: 832: len = 1;
  8334  0012E0  0E00               	movlw	0
  8335  0012E2  6E21               	movwf	(sprintf@len+1)^0,c
  8336  0012E4  0E01               	movlw	1
  8337  0012E6  6E20               	movwf	sprintf@len^0,c
  8338                           
  8339                           ;doprnt.c: 833: goto dostring;
  8340  0012E8  EF22  F009         	goto	l4532
  8341  0012EC                     l4556:
  8342                           
  8343                           ;doprnt.c: 844: flag |= 0x40;
  8344  0012EC  8C22               	bsf	sprintf@flag^0,6,c
  8345                           
  8346                           ;doprnt.c: 845: break;
  8347  0012EE  EF95  F009         	goto	l1179
  8348  0012F2                     l4560:
  8349  0012F2  C00F  FFF6         	movff	sprintf@f,tblptrl
  8350  0012F6  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8351  0012FA  4A0F               	infsnz	sprintf@f^0,f,c
  8352  0012FC  2A10               	incf	(sprintf@f+1)^0,f,c
  8353  0012FE                     	if	0	;tblptru may be non-zero
  8354  0012FE                     	endif
  8355  0012FE                     	if	0	;tblptru may be non-zero
  8356  0012FE                     	endif
  8357  0012FE  0008               	tblrd		*
  8358  001300  CFF5 F027          	movff	tablat,sprintf@c
  8359  001304  5027               	movf	sprintf@c^0,w,c
  8360                           
  8361                           ; Switch size 1, requested type "simple"
  8362                           ; Number of cases is 4, Range of values is 0 to 117
  8363                           ; switch strategies available:
  8364                           ; Name         Instructions Cycles
  8365                           ; simple_byte           13     7 (average)
  8366                           ;	Chosen strategy is simple_byte
  8367  001306  0A00               	xorlw	0	; case 0
  8368  001308  B4D8               	btfsc	status,2,c
  8369  00130A  EF94  F00A         	goto	l4628
  8370  00130E  0A64               	xorlw	100	; case 100
  8371  001310  B4D8               	btfsc	status,2,c
  8372  001312  EF95  F009         	goto	l1179
  8373  001316  0A0D               	xorlw	13	; case 105
  8374  001318  B4D8               	btfsc	status,2,c
  8375  00131A  EF95  F009         	goto	l1179
  8376  00131E  0A1C               	xorlw	28	; case 117
  8377  001320  B4D8               	btfsc	status,2,c
  8378  001322  EF76  F009         	goto	l4556
  8379  001326  EF6C  F009         	goto	l4552
  8380  00132A                     l1179:
  8381                           
  8382                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  8383  00132A  BC22               	btfsc	sprintf@flag^0,6,c
  8384  00132C  EF9A  F009         	goto	u3781
  8385  001330  EF9C  F009         	goto	u3780
  8386  001334                     u3781:
  8387  001334  EFB7  F009         	goto	l4572
  8388  001338                     u3780:
  8389  001338                     
  8390                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  8391  001338  C01E  FFD9         	movff	sprintf@ap,fsr2l
  8392  00133C  C01F  FFDA         	movff	sprintf@ap+1,fsr2h
  8393  001340  CFDE F023          	movff	postinc2,sprintf@val
  8394  001344  CFDD F024          	movff	postdec2,sprintf@val+1
  8395  001348  0E02               	movlw	2
  8396  00134A  261E               	addwf	sprintf@ap^0,f,c
  8397  00134C  0E00               	movlw	0
  8398  00134E  221F               	addwfc	(sprintf@ap+1)^0,f,c
  8399  001350                     
  8400                           ;doprnt.c: 1287: if((int)val < 0) {
  8401  001350  BE24               	btfsc	(sprintf@val+1)^0,7,c
  8402  001352  EFAF  F009         	goto	u3790
  8403  001356  EFAD  F009         	goto	u3791
  8404  00135A                     u3791:
  8405  00135A  EFC3  F009         	goto	l4576
  8406  00135E                     u3790:
  8407  00135E                     
  8408                           ;doprnt.c: 1288: flag |= 0x03;
  8409  00135E  0E03               	movlw	3
  8410  001360  1222               	iorwf	sprintf@flag^0,f,c
  8411  001362                     
  8412                           ;doprnt.c: 1289: val = -val;
  8413  001362  6C23               	negf	sprintf@val^0,c
  8414  001364  1E24               	comf	(sprintf@val+1)^0,f,c
  8415  001366  B0D8               	btfsc	status,0,c
  8416  001368  2A24               	incf	(sprintf@val+1)^0,f,c
  8417  00136A  EFC3  F009         	goto	l4576
  8418  00136E                     l4572:
  8419                           
  8420                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  8421  00136E  C01E  FFD9         	movff	sprintf@ap,fsr2l
  8422  001372  C01F  FFDA         	movff	sprintf@ap+1,fsr2h
  8423  001376  CFDE F023          	movff	postinc2,sprintf@val
  8424  00137A  CFDD F024          	movff	postdec2,sprintf@val+1
  8425  00137E  0E02               	movlw	2
  8426  001380  261E               	addwf	sprintf@ap^0,f,c
  8427  001382  0E00               	movlw	0
  8428  001384  221F               	addwfc	(sprintf@ap+1)^0,f,c
  8429  001386                     l4576:
  8430                           
  8431                           ;doprnt.c: 1313: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c
      +                          ++)
  8432  001386  0E01               	movlw	1
  8433  001388  6E27               	movwf	sprintf@c^0,c
  8434  00138A                     l4578:
  8435  00138A  0E05               	movlw	5
  8436  00138C  1827               	xorwf	sprintf@c^0,w,c
  8437  00138E  A4D8               	btfss	status,2,c
  8438  001390  EFCC  F009         	goto	u3801
  8439  001394  EFCE  F009         	goto	u3800
  8440  001398                     u3801:
  8441  001398  EFD0  F009         	goto	l4582
  8442  00139C                     u3800:
  8443  00139C  EFEA  F009         	goto	l4590
  8444  0013A0                     l4582:
  8445                           
  8446                           ;doprnt.c: 1332: if(val < dpowers[c])
  8447  0013A0  5027               	movf	sprintf@c^0,w,c
  8448  0013A2  0D02               	mullw	2
  8449  0013A4  0E01               	movlw	low _dpowers
  8450  0013A6  24F3               	addwf	243,w,c
  8451  0013A8  6EF6               	movwf	tblptrl,c
  8452  0013AA  0E08               	movlw	high _dpowers
  8453  0013AC  20F4               	addwfc	244,w,c
  8454  0013AE  6EF7               	movwf	tblptrh,c
  8455  0013B0                     	if	0	;There are less than 3 active tblptr bytes
  8456  0013B0                     	endif
  8457  0013B0  0009               	tblrd		*+
  8458  0013B2  50F5               	movf	tablat,w,c
  8459  0013B4  5C23               	subwf	sprintf@val^0,w,c
  8460  0013B6  0009               	tblrd		*+
  8461  0013B8  50F5               	movf	tablat,w,c
  8462  0013BA  5824               	subwfb	(sprintf@val+1)^0,w,c
  8463  0013BC  B0D8               	btfsc	status,0,c
  8464  0013BE  EFE3  F009         	goto	u3811
  8465  0013C2  EFE5  F009         	goto	u3810
  8466  0013C6                     u3811:
  8467  0013C6  EFE7  F009         	goto	l4586
  8468  0013CA                     u3810:
  8469  0013CA  EFEA  F009         	goto	l4590
  8470  0013CE                     l4586:
  8471  0013CE  2A27               	incf	sprintf@c^0,f,c
  8472  0013D0  EFC5  F009         	goto	l4578
  8473  0013D4                     l4590:
  8474                           
  8475                           ;doprnt.c: 1371: if(width && flag & 0x03)
  8476  0013D4  5025               	movf	sprintf@width^0,w,c
  8477  0013D6  1026               	iorwf	(sprintf@width+1)^0,w,c
  8478  0013D8  B4D8               	btfsc	status,2,c
  8479  0013DA  EFF1  F009         	goto	u3821
  8480  0013DE  EFF3  F009         	goto	u3820
  8481  0013E2                     u3821:
  8482  0013E2  EF01  F00A         	goto	l4596
  8483  0013E6                     u3820:
  8484  0013E6  C022  F017         	movff	sprintf@flag,??_sprintf
  8485  0013EA  0E03               	movlw	3
  8486  0013EC  1617               	andwf	??_sprintf^0,f,c
  8487  0013EE  B4D8               	btfsc	status,2,c
  8488  0013F0  EFFC  F009         	goto	u3831
  8489  0013F4  EFFE  F009         	goto	u3830
  8490  0013F8                     u3831:
  8491  0013F8  EF01  F00A         	goto	l4596
  8492  0013FC                     u3830:
  8493  0013FC                     
  8494                           ;doprnt.c: 1372: width--;
  8495  0013FC  0625               	decf	sprintf@width^0,f,c
  8496  0013FE  A0D8               	btfss	status,0,c
  8497  001400  0626               	decf	(sprintf@width+1)^0,f,c
  8498  001402                     l4596:
  8499                           
  8500                           ;doprnt.c: 1407: if(width > c)
  8501  001402  5027               	movf	sprintf@c^0,w,c
  8502  001404  6E17               	movwf	??_sprintf^0,c
  8503  001406  6A18               	clrf	(??_sprintf+1)^0,c
  8504  001408  5025               	movf	sprintf@width^0,w,c
  8505  00140A  5C17               	subwf	??_sprintf^0,w,c
  8506  00140C  5018               	movf	(??_sprintf+1)^0,w,c
  8507  00140E  0A80               	xorlw	128
  8508  001410  6E19               	movwf	(??_sprintf+2)^0,c
  8509  001412  5026               	movf	(sprintf@width+1)^0,w,c
  8510  001414  0A80               	xorlw	128
  8511  001416  5819               	subwfb	(??_sprintf+2)^0,w,c
  8512  001418  B0D8               	btfsc	status,0,c
  8513  00141A  EF11  F00A         	goto	u3841
  8514  00141E  EF13  F00A         	goto	u3840
  8515  001422                     u3841:
  8516  001422  EF19  F00A         	goto	l4600
  8517  001426                     u3840:
  8518  001426                     
  8519                           ;doprnt.c: 1408: width -= c;
  8520  001426  5027               	movf	sprintf@c^0,w,c
  8521  001428  5E25               	subwf	sprintf@width^0,f,c
  8522  00142A  0E00               	movlw	0
  8523  00142C  5A26               	subwfb	(sprintf@width+1)^0,f,c
  8524  00142E  EF1D  F00A         	goto	l4602
  8525  001432                     l4600:
  8526                           
  8527                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  8528  001432  0E00               	movlw	0
  8529  001434  6E26               	movwf	(sprintf@width+1)^0,c
  8530  001436  0E00               	movlw	0
  8531  001438  6E25               	movwf	sprintf@width^0,c
  8532  00143A                     l4602:
  8533                           
  8534                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  8535  00143A  5025               	movf	sprintf@width^0,w,c
  8536  00143C  1026               	iorwf	(sprintf@width+1)^0,w,c
  8537  00143E  B4D8               	btfsc	status,2,c
  8538  001440  EF24  F00A         	goto	u3851
  8539  001444  EF26  F00A         	goto	u3850
  8540  001448                     u3851:
  8541  001448  EF3A  F00A         	goto	l4610
  8542  00144C                     u3850:
  8543  00144C                     l4604:
  8544                           
  8545                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  8546  00144C  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8547  001450  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8548  001454  0E20               	movlw	32
  8549  001456  6EDF               	movwf	indf2,c
  8550  001458  4A0D               	infsnz	sprintf@sp^0,f,c
  8551  00145A  2A0E               	incf	(sprintf@sp+1)^0,f,c
  8552  00145C                     
  8553                           ;doprnt.c: 1457: while(--width);
  8554  00145C  0625               	decf	sprintf@width^0,f,c
  8555  00145E  A0D8               	btfss	status,0,c
  8556  001460  0626               	decf	(sprintf@width+1)^0,f,c
  8557  001462  5025               	movf	sprintf@width^0,w,c
  8558  001464  1026               	iorwf	(sprintf@width+1)^0,w,c
  8559  001466  A4D8               	btfss	status,2,c
  8560  001468  EF38  F00A         	goto	u3861
  8561  00146C  EF3A  F00A         	goto	u3860
  8562  001470                     u3861:
  8563  001470  EF26  F00A         	goto	l4604
  8564  001474                     u3860:
  8565  001474                     l4610:
  8566                           
  8567                           ;doprnt.c: 1464: if(flag & 0x03)
  8568  001474  C022  F017         	movff	sprintf@flag,??_sprintf
  8569  001478  0E03               	movlw	3
  8570  00147A  1617               	andwf	??_sprintf^0,f,c
  8571  00147C  B4D8               	btfsc	status,2,c
  8572  00147E  EF43  F00A         	goto	u3871
  8573  001482  EF45  F00A         	goto	u3870
  8574  001486                     u3871:
  8575  001486  EF4D  F00A         	goto	l4616
  8576  00148A                     u3870:
  8577  00148A                     
  8578                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  8579  00148A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8580  00148E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8581  001492  0E2D               	movlw	45
  8582  001494  6EDF               	movwf	indf2,c
  8583  001496  4A0D               	infsnz	sprintf@sp^0,f,c
  8584  001498  2A0E               	incf	(sprintf@sp+1)^0,f,c
  8585  00149A                     l4616:
  8586                           
  8587                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  8588  00149A  C027  F01D         	movff	sprintf@c,sprintf@prec
  8589                           
  8590                           ;doprnt.c: 1500: while(prec--) {
  8591  00149E  EF7A  F00A         	goto	l4624
  8592  0014A2                     l4618:
  8593                           
  8594                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  8595  0014A2  501D               	movf	sprintf@prec^0,w,c
  8596  0014A4  0D02               	mullw	2
  8597  0014A6  0E01               	movlw	low _dpowers
  8598  0014A8  24F3               	addwf	243,w,c
  8599  0014AA  6EF6               	movwf	tblptrl,c
  8600  0014AC  0E08               	movlw	high _dpowers
  8601  0014AE  20F4               	addwfc	244,w,c
  8602  0014B0  6EF7               	movwf	tblptrh,c
  8603  0014B2                     	if	0	;There are less than 3 active tblptr bytes
  8604  0014B2                     	endif
  8605  0014B2  0009               	tblrd		*+
  8606  0014B4  CFF5 F003          	movff	tablat,___lwdiv@divisor
  8607  0014B8  000A               	tblrd		*-
  8608  0014BA  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  8609  0014BE  C023  F001         	movff	sprintf@val,___lwdiv@dividend
  8610  0014C2  C024  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  8611  0014C6  ECF7  F01B         	call	___lwdiv	;wreg free
  8612  0014CA  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  8613  0014CE  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  8614  0014D2  0E00               	movlw	0
  8615  0014D4  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  8616  0014D6  0E0A               	movlw	10
  8617  0014D8  6E0A               	movwf	___lwmod@divisor^0,c
  8618  0014DA  EC31  F01C         	call	___lwmod	;wreg free
  8619  0014DE  5008               	movf	?___lwmod^0,w,c
  8620  0014E0  0F30               	addlw	48
  8621  0014E2  6E27               	movwf	sprintf@c^0,c
  8622  0014E4                     
  8623                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  8624  0014E4  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8625  0014E8  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8626  0014EC  C027  FFDF         	movff	sprintf@c,indf2
  8627  0014F0  4A0D               	infsnz	sprintf@sp^0,f,c
  8628  0014F2  2A0E               	incf	(sprintf@sp+1)^0,f,c
  8629  0014F4                     l4624:
  8630  0014F4  061D               	decf	sprintf@prec^0,f,c
  8631  0014F6  281D               	incf	sprintf@prec^0,w,c
  8632  0014F8  A4D8               	btfss	status,2,c
  8633  0014FA  EF81  F00A         	goto	u3881
  8634  0014FE  EF83  F00A         	goto	u3880
  8635  001502                     u3881:
  8636  001502  EF51  F00A         	goto	l4618
  8637  001506                     u3880:
  8638  001506                     l4626:
  8639  001506  C00F  FFF6         	movff	sprintf@f,tblptrl
  8640  00150A  C010  FFF7         	movff	sprintf@f+1,tblptrh
  8641  00150E  4A0F               	infsnz	sprintf@f^0,f,c
  8642  001510  2A10               	incf	(sprintf@f+1)^0,f,c
  8643  001512                     	if	0	;tblptru may be non-zero
  8644  001512                     	endif
  8645  001512                     	if	0	;tblptru may be non-zero
  8646  001512                     	endif
  8647  001512  0008               	tblrd		*
  8648  001514  CFF5 F027          	movff	tablat,sprintf@c
  8649  001518  5027               	movf	sprintf@c^0,w,c
  8650  00151A  A4D8               	btfss	status,2,c
  8651  00151C  EF92  F00A         	goto	u3891
  8652  001520  EF94  F00A         	goto	u3890
  8653  001524                     u3891:
  8654  001524  EFC1  F008         	goto	l4512
  8655  001528                     u3890:
  8656  001528                     l4628:
  8657                           
  8658                           ;doprnt.c: 1564: *sp = 0;
  8659  001528  C00D  FFD9         	movff	sprintf@sp,fsr2l
  8660  00152C  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  8661  001530  0E00               	movlw	0
  8662  001532  6EDF               	movwf	indf2,c
  8663  001534  0012               	return		;funcret
  8664  001536                     __end_of_sprintf:
  8665                           	callstack 0
  8666                           
  8667 ;; *************** function _isdigit *****************
  8668 ;; Defined at:
  8669 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\isdigit.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;  c               1    wreg     unsigned char 
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;  c               1    2[COMRAM] unsigned char 
  8674 ;; Return value:  Size  Location     Type
  8675 ;;		None               void
  8676 ;; Registers used:
  8677 ;;		wreg, status,2, status,0
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8683 ;;      Params:         0       0       0       0       0       0       0       0       0
  8684 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8685 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8686 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8687 ;;Total ram usage:        3 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; Hardware stack levels required when called:    3
  8690 ;; This function calls:
  8691 ;;		Nothing
  8692 ;; This function is called by:
  8693 ;;		_sprintf
  8694 ;; This function uses a non-reentrant model
  8695 ;;
  8696                           
  8697                           	psect	text39
  8698  003B40                     __ptext39:
  8699                           	callstack 0
  8700  003B40                     _isdigit:
  8701                           	callstack 24
  8702                           
  8703                           ;incstack = 0
  8704                           ;isdigit@c stored from wreg
  8705  003B40  6E03               	movwf	isdigit@c^0,c
  8706  003B42  0E00               	movlw	0
  8707  003B44  6E02               	movwf	_isdigit$2622^0,c
  8708  003B46  0E3A               	movlw	58
  8709  003B48  6003               	cpfslt	isdigit@c^0,c
  8710  003B4A  EFA9  F01D         	goto	u3301
  8711  003B4E  EFAB  F01D         	goto	u3300
  8712  003B52                     u3301:
  8713  003B52  EFB5  F01D         	goto	l4244
  8714  003B56                     u3300:
  8715  003B56  0E2F               	movlw	47
  8716  003B58  6403               	cpfsgt	isdigit@c^0,c
  8717  003B5A  EFB1  F01D         	goto	u3311
  8718  003B5E  EFB3  F01D         	goto	u3310
  8719  003B62                     u3311:
  8720  003B62  EFB5  F01D         	goto	l4244
  8721  003B66                     u3310:
  8722  003B66  0E01               	movlw	1
  8723  003B68  6E02               	movwf	_isdigit$2622^0,c
  8724  003B6A                     l4244:
  8725  003B6A  C002  F001         	movff	_isdigit$2622,??_isdigit
  8726  003B6E  3001               	rrcf	??_isdigit^0,w,c
  8727  003B70  0012               	return		;funcret
  8728  003B72                     __end_of_isdigit:
  8729                           	callstack 0
  8730                           
  8731 ;; *************** function ___wmul *****************
  8732 ;; Defined at:
  8733 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul16.c"
  8734 ;; Parameters:    Size  Location     Type
  8735 ;;  multiplier      2    0[COMRAM] unsigned int 
  8736 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;  product         2    4[COMRAM] unsigned int 
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  2    0[COMRAM] unsigned int 
  8741 ;; Registers used:
  8742 ;;		wreg, status,2, status,0, prodl, prodh
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8748 ;;      Params:         4       0       0       0       0       0       0       0       0
  8749 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8750 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8751 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8752 ;;Total ram usage:        6 bytes
  8753 ;; Hardware stack levels used:    1
  8754 ;; Hardware stack levels required when called:    3
  8755 ;; This function calls:
  8756 ;;		Nothing
  8757 ;; This function is called by:
  8758 ;;		_sprintf
  8759 ;; This function uses a non-reentrant model
  8760 ;;
  8761                           
  8762                           	psect	text40
  8763  003B72                     __ptext40:
  8764                           	callstack 0
  8765  003B72                     ___wmul:
  8766                           	callstack 24
  8767  003B72  5001               	movf	___wmul@multiplier^0,w,c
  8768  003B74  0203               	mulwf	___wmul@multiplicand^0,c
  8769  003B76  CFF3 F005          	movff	prodl,___wmul@product
  8770  003B7A  CFF4 F006          	movff	prodh,___wmul@product+1
  8771  003B7E  5001               	movf	___wmul@multiplier^0,w,c
  8772  003B80  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8773  003B82  50F3               	movf	243,w,c
  8774  003B84  2606               	addwf	(___wmul@product+1)^0,f,c
  8775  003B86  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8776  003B88  0203               	mulwf	___wmul@multiplicand^0,c
  8777  003B8A  50F3               	movf	243,w,c
  8778  003B8C  2606               	addwf	(___wmul@product+1)^0,f,c
  8779  003B8E  C005  F001         	movff	___wmul@product,?___wmul
  8780  003B92  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8781  003B96  0012               	return		;funcret
  8782  003B98                     __end_of___wmul:
  8783                           	callstack 0
  8784                           
  8785 ;; *************** function ___lwmod *****************
  8786 ;; Defined at:
  8787 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwmod.c"
  8788 ;; Parameters:    Size  Location     Type
  8789 ;;  dividend        2    7[COMRAM] unsigned int 
  8790 ;;  divisor         2    9[COMRAM] unsigned int 
  8791 ;; Auto vars:     Size  Location     Type
  8792 ;;  counter         1   11[COMRAM] unsigned char 
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  2    7[COMRAM] unsigned int 
  8795 ;; Registers used:
  8796 ;;		wreg, status,2, status,0
  8797 ;; Tracked objects:
  8798 ;;		On entry : 0/0
  8799 ;;		On exit  : 0/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8802 ;;      Params:         4       0       0       0       0       0       0       0       0
  8803 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8804 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8805 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8806 ;;Total ram usage:        5 bytes
  8807 ;; Hardware stack levels used:    1
  8808 ;; Hardware stack levels required when called:    3
  8809 ;; This function calls:
  8810 ;;		Nothing
  8811 ;; This function is called by:
  8812 ;;		_sprintf
  8813 ;; This function uses a non-reentrant model
  8814 ;;
  8815                           
  8816                           	psect	text41
  8817  003862                     __ptext41:
  8818                           	callstack 0
  8819  003862                     ___lwmod:
  8820                           	callstack 24
  8821  003862  500A               	movf	___lwmod@divisor^0,w,c
  8822  003864  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  8823  003866  B4D8               	btfsc	status,2,c
  8824  003868  EF38  F01C         	goto	u3591
  8825  00386C  EF3A  F01C         	goto	u3590
  8826  003870                     u3591:
  8827  003870  EF5E  F01C         	goto	l1700
  8828  003874                     u3590:
  8829  003874  0E01               	movlw	1
  8830  003876  6E0C               	movwf	___lwmod@counter^0,c
  8831  003878  EF42  F01C         	goto	l4434
  8832  00387C                     l4432:
  8833  00387C  90D8               	bcf	status,0,c
  8834  00387E  360A               	rlcf	___lwmod@divisor^0,f,c
  8835  003880  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  8836  003882  2A0C               	incf	___lwmod@counter^0,f,c
  8837  003884                     l4434:
  8838  003884  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  8839  003886  EF47  F01C         	goto	u3601
  8840  00388A  EF49  F01C         	goto	u3600
  8841  00388E                     u3601:
  8842  00388E  EF3E  F01C         	goto	l4432
  8843  003892                     u3600:
  8844  003892                     l4436:
  8845  003892  500A               	movf	___lwmod@divisor^0,w,c
  8846  003894  5C08               	subwf	___lwmod@dividend^0,w,c
  8847  003896  500B               	movf	(___lwmod@divisor+1)^0,w,c
  8848  003898  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  8849  00389A  A0D8               	btfss	status,0,c
  8850  00389C  EF52  F01C         	goto	u3611
  8851  0038A0  EF54  F01C         	goto	u3610
  8852  0038A4                     u3611:
  8853  0038A4  EF58  F01C         	goto	l4440
  8854  0038A8                     u3610:
  8855  0038A8  500A               	movf	___lwmod@divisor^0,w,c
  8856  0038AA  5E08               	subwf	___lwmod@dividend^0,f,c
  8857  0038AC  500B               	movf	(___lwmod@divisor+1)^0,w,c
  8858  0038AE  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  8859  0038B0                     l4440:
  8860  0038B0  90D8               	bcf	status,0,c
  8861  0038B2  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  8862  0038B4  320A               	rrcf	___lwmod@divisor^0,f,c
  8863  0038B6  2E0C               	decfsz	___lwmod@counter^0,f,c
  8864  0038B8  EF49  F01C         	goto	l4436
  8865  0038BC                     l1700:
  8866  0038BC  C008  F008         	movff	___lwmod@dividend,?___lwmod
  8867  0038C0  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  8868  0038C4  0012               	return		;funcret
  8869  0038C6                     __end_of___lwmod:
  8870                           	callstack 0
  8871                           
  8872 ;; *************** function ___lwdiv *****************
  8873 ;; Defined at:
  8874 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\lwdiv.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;  dividend        2    0[COMRAM] unsigned int 
  8877 ;;  divisor         2    2[COMRAM] unsigned int 
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;  quotient        2    4[COMRAM] unsigned int 
  8880 ;;  counter         1    6[COMRAM] unsigned char 
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  2    0[COMRAM] unsigned int 
  8883 ;; Registers used:
  8884 ;;		wreg, status,2, status,0
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8890 ;;      Params:         4       0       0       0       0       0       0       0       0
  8891 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8892 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8893 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8894 ;;Total ram usage:        7 bytes
  8895 ;; Hardware stack levels used:    1
  8896 ;; Hardware stack levels required when called:    3
  8897 ;; This function calls:
  8898 ;;		Nothing
  8899 ;; This function is called by:
  8900 ;;		_sprintf
  8901 ;; This function uses a non-reentrant model
  8902 ;;
  8903                           
  8904                           	psect	text42
  8905  0037EE                     __ptext42:
  8906                           	callstack 0
  8907  0037EE                     ___lwdiv:
  8908                           	callstack 24
  8909  0037EE  0E00               	movlw	0
  8910  0037F0  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  8911  0037F2  0E00               	movlw	0
  8912  0037F4  6E05               	movwf	___lwdiv@quotient^0,c
  8913  0037F6  5003               	movf	___lwdiv@divisor^0,w,c
  8914  0037F8  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8915  0037FA  B4D8               	btfsc	status,2,c
  8916  0037FC  EF02  F01C         	goto	u3561
  8917  003800  EF04  F01C         	goto	u3560
  8918  003804                     u3561:
  8919  003804  EF2C  F01C         	goto	l1690
  8920  003808                     u3560:
  8921  003808  0E01               	movlw	1
  8922  00380A  6E07               	movwf	___lwdiv@counter^0,c
  8923  00380C  EF0C  F01C         	goto	l4414
  8924  003810                     l4412:
  8925  003810  90D8               	bcf	status,0,c
  8926  003812  3603               	rlcf	___lwdiv@divisor^0,f,c
  8927  003814  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8928  003816  2A07               	incf	___lwdiv@counter^0,f,c
  8929  003818                     l4414:
  8930  003818  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  8931  00381A  EF11  F01C         	goto	u3571
  8932  00381E  EF13  F01C         	goto	u3570
  8933  003822                     u3571:
  8934  003822  EF08  F01C         	goto	l4412
  8935  003826                     u3570:
  8936  003826                     l4416:
  8937  003826  90D8               	bcf	status,0,c
  8938  003828  3605               	rlcf	___lwdiv@quotient^0,f,c
  8939  00382A  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8940  00382C  5003               	movf	___lwdiv@divisor^0,w,c
  8941  00382E  5C01               	subwf	___lwdiv@dividend^0,w,c
  8942  003830  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  8943  003832  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8944  003834  A0D8               	btfss	status,0,c
  8945  003836  EF1F  F01C         	goto	u3581
  8946  00383A  EF21  F01C         	goto	u3580
  8947  00383E                     u3581:
  8948  00383E  EF26  F01C         	goto	l4424
  8949  003842                     u3580:
  8950  003842  5003               	movf	___lwdiv@divisor^0,w,c
  8951  003844  5E01               	subwf	___lwdiv@dividend^0,f,c
  8952  003846  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  8953  003848  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8954  00384A  8005               	bsf	___lwdiv@quotient^0,0,c
  8955  00384C                     l4424:
  8956  00384C  90D8               	bcf	status,0,c
  8957  00384E  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8958  003850  3203               	rrcf	___lwdiv@divisor^0,f,c
  8959  003852  2E07               	decfsz	___lwdiv@counter^0,f,c
  8960  003854  EF13  F01C         	goto	l4416
  8961  003858                     l1690:
  8962  003858  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  8963  00385C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8964  003860  0012               	return		;funcret
  8965  003862                     __end_of___lwdiv:
  8966                           	callstack 0
  8967                           
  8968 ;; *************** function _LCD_GoTo *****************
  8969 ;; Defined at:
  8970 ;;		line 147 in file "LCD.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;  iLine           1    wreg     unsigned char 
  8973 ;;  iCharPos        1    5[COMRAM] unsigned char 
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;  iLine           1   11[COMRAM] unsigned char 
  8976 ;;  iPos            1   10[COMRAM] unsigned char 
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  1    wreg      void 
  8979 ;; Registers used:
  8980 ;;		wreg, status,2, status,0, cstack
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8986 ;;      Params:         1       0       0       0       0       0       0       0       0
  8987 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8988 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8989 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8990 ;;Total ram usage:        7 bytes
  8991 ;; Hardware stack levels used:    1
  8992 ;; Hardware stack levels required when called:    5
  8993 ;; This function calls:
  8994 ;;		_LCD_WriteCmd
  8995 ;; This function is called by:
  8996 ;;		_ComputeTOD
  8997 ;;		_LCD_DisplayResults
  8998 ;; This function uses a non-reentrant model
  8999 ;;
  9000                           
  9001                           	psect	text43
  9002  003926                     __ptext43:
  9003                           	callstack 0
  9004  003926                     _LCD_GoTo:
  9005                           	callstack 23
  9006                           
  9007                           ;incstack = 0
  9008                           ;LCD_GoTo@iLine stored from wreg
  9009  003926  6E0C               	movwf	LCD_GoTo@iLine^0,c
  9010  003928                     
  9011                           ;LCD.c: 149: uint8_t iPos;;LCD.c: 150: if (iLine < 2)
  9012  003928  0E02               	movlw	2
  9013  00392A  600C               	cpfslt	LCD_GoTo@iLine^0,c
  9014  00392C  EF9A  F01C         	goto	u3901
  9015  003930  EF9C  F01C         	goto	u3900
  9016  003934                     u3901:
  9017  003934  EFB8  F01C         	goto	l4642
  9018  003938                     u3900:
  9019  003938                     
  9020                           ;LCD.c: 151: iPos = (iLine == 0) ?;LCD.c: 152: (0x80 | iCharPos) :;LCD.c: 153: (0xC0 | i
      +                          CharPos);
  9021  003938  500C               	movf	LCD_GoTo@iLine^0,w,c
  9022  00393A  B4D8               	btfsc	status,2,c
  9023  00393C  EFA2  F01C         	goto	u3911
  9024  003940  EFA4  F01C         	goto	u3910
  9025  003944                     u3911:
  9026  003944  EFAE  F01C         	goto	l4638
  9027  003948                     u3910:
  9028  003948  0EC0               	movlw	192
  9029  00394A  C006  F007         	movff	LCD_GoTo@iCharPos,??_LCD_GoTo
  9030  00394E  6A08               	clrf	(??_LCD_GoTo+1)^0,c
  9031  003950  1007               	iorwf	??_LCD_GoTo^0,w,c
  9032  003952  6E09               	movwf	_LCD_GoTo$1544^0,c
  9033  003954  5008               	movf	(??_LCD_GoTo+1)^0,w,c
  9034  003956  6E0A               	movwf	(_LCD_GoTo$1544+1)^0,c
  9035  003958  EFB6  F01C         	goto	l4640
  9036  00395C                     l4638:
  9037  00395C  0E80               	movlw	128
  9038  00395E  C006  F007         	movff	LCD_GoTo@iCharPos,??_LCD_GoTo
  9039  003962  6A08               	clrf	(??_LCD_GoTo+1)^0,c
  9040  003964  1007               	iorwf	??_LCD_GoTo^0,w,c
  9041  003966  6E09               	movwf	_LCD_GoTo$1544^0,c
  9042  003968  5008               	movf	(??_LCD_GoTo+1)^0,w,c
  9043  00396A  6E0A               	movwf	(_LCD_GoTo$1544+1)^0,c
  9044  00396C                     l4640:
  9045  00396C  C009  F00B         	movff	_LCD_GoTo$1544,LCD_GoTo@iPos
  9046  003970                     l4642:
  9047                           
  9048                           ;LCD.c: 154: LCD_WriteCmd (0x80 | iPos, 40+1);
  9049  003970  0E00               	movlw	0
  9050  003972  6E02               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  9051  003974  0E29               	movlw	41
  9052  003976  6E01               	movwf	LCD_WriteCmd@iDelay^0,c
  9053  003978  500B               	movf	LCD_GoTo@iPos^0,w,c
  9054  00397A  0980               	iorlw	128
  9055  00397C  EC18  F01D         	call	_LCD_WriteCmd
  9056  003980  0012               	return		;funcret
  9057  003982                     __end_of_LCD_GoTo:
  9058                           	callstack 0
  9059                           
  9060 ;; *************** function _LCD_WriteCmd *****************
  9061 ;; Defined at:
  9062 ;;		line 63 in file "LCD.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;  iCmd            1    wreg     unsigned char 
  9065 ;;  iDelay          2    0[COMRAM] unsigned int 
  9066 ;; Auto vars:     Size  Location     Type
  9067 ;;  iCmd            1    4[COMRAM] unsigned char 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  1    wreg      void 
  9070 ;; Registers used:
  9071 ;;		wreg, status,2, status,0, cstack
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9077 ;;      Params:         2       0       0       0       0       0       0       0       0
  9078 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9079 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9080 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9081 ;;Total ram usage:        5 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; Hardware stack levels required when called:    4
  9084 ;; This function calls:
  9085 ;;		_LCD_WaitNotBusy
  9086 ;; This function is called by:
  9087 ;;		_LCD_Init
  9088 ;;		_LCD_GoTo
  9089 ;;		_LCD_ClearScreen
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           	psect	text44
  9094  003A30                     __ptext44:
  9095                           	callstack 0
  9096  003A30                     _LCD_WriteCmd:
  9097                           	callstack 25
  9098                           
  9099                           ;incstack = 0
  9100                           ;LCD_WriteCmd@iCmd stored from wreg
  9101  003A30  6E05               	movwf	LCD_WriteCmd@iCmd^0,c
  9102  003A32  9689               	bcf	137,3,c	;volatile
  9103  003A34  9489               	bcf	137,2,c	;volatile
  9104  003A36  8289               	bsf	137,1,c	;volatile
  9105  003A38                     
  9106                           ;LCD.c: 73: LATB = iCmd;
  9107  003A38  C005  FF8A         	movff	LCD_WriteCmd@iCmd,3978	;volatile
  9108  003A3C                     
  9109                           ;LCD.c: 74: LATC6 = iCmd >> 6;
  9110  003A3C  C005  F003         	movff	LCD_WriteCmd@iCmd,??_LCD_WriteCmd
  9111  003A40  0E06               	movlw	6
  9112  003A42  6E04               	movwf	(??_LCD_WriteCmd+1)^0,c
  9113  003A44                     u3245:
  9114  003A44  90D8               	bcf	status,0,c
  9115  003A46  3203               	rrcf	??_LCD_WriteCmd^0,f,c
  9116  003A48  2E04               	decfsz	(??_LCD_WriteCmd+1)^0,f,c
  9117  003A4A  EF22  F01D         	goto	u3245
  9118  003A4E  3003               	rrcf	??_LCD_WriteCmd^0,w,c
  9119  003A50  B0D8               	btfsc	status,0,c
  9120  003A52  EF2D  F01D         	goto	u3251
  9121  003A56  EF30  F01D         	goto	u3250
  9122  003A5A                     u3251:
  9123  003A5A  8C8B               	bsf	3979,6,c	;volatile
  9124  003A5C  EF31  F01D         	goto	u3265
  9125  003A60                     u3250:
  9126  003A60  9C8B               	bcf	3979,6,c	;volatile
  9127  003A62                     u3265:
  9128  003A62                     
  9129                           ;LCD.c: 75: LATC7 = iCmd >> 7;
  9130  003A62  6A03               	clrf	??_LCD_WriteCmd^0,c
  9131  003A64  AE05               	btfss	LCD_WriteCmd@iCmd^0,7,c
  9132  003A66  D001               	bra	u3275
  9133  003A68  2A03               	incf	??_LCD_WriteCmd^0,f,c
  9134  003A6A                     u3275:
  9135  003A6A  3003               	rrcf	??_LCD_WriteCmd^0,w,c
  9136  003A6C  B0D8               	btfsc	status,0,c
  9137  003A6E  EF3B  F01D         	goto	u3281
  9138  003A72  EF3E  F01D         	goto	u3280
  9139  003A76                     u3281:
  9140  003A76  8E8B               	bsf	3979,7,c	;volatile
  9141  003A78  EF3F  F01D         	goto	u3295
  9142  003A7C                     u3280:
  9143  003A7C  9E8B               	bcf	3979,7,c	;volatile
  9144  003A7E                     u3295:
  9145  003A7E  9289               	bcf	137,1,c	;volatile
  9146  003A80                     
  9147                           ;LCD.c: 80: LCD_WaitNotBusy();
  9148  003A80  ECDE  F01D         	call	_LCD_WaitNotBusy	;wreg free
  9149  003A84  0012               	return		;funcret
  9150  003A86                     __end_of_LCD_WriteCmd:
  9151                           	callstack 0
  9152                           
  9153 ;; *************** function _LCD_WaitNotBusy *****************
  9154 ;; Defined at:
  9155 ;;		line 164 in file "LCD.c"
  9156 ;; Parameters:    Size  Location     Type
  9157 ;;		None
  9158 ;; Auto vars:     Size  Location     Type
  9159 ;;		None
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  1    wreg      void 
  9162 ;; Registers used:
  9163 ;;		None
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9169 ;;      Params:         0       0       0       0       0       0       0       0       0
  9170 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9171 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9172 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9173 ;;Total ram usage:        0 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; Hardware stack levels required when called:    3
  9176 ;; This function calls:
  9177 ;;		Nothing
  9178 ;; This function is called by:
  9179 ;;		_LCD_WriteCmd
  9180 ;;		_LCD_WriteChar
  9181 ;;		_LCD_WriteNibble
  9182 ;;		_LCD_ClearScreen
  9183 ;; This function uses a non-reentrant model
  9184 ;;
  9185                           
  9186                           	psect	text45
  9187  003BBC                     __ptext45:
  9188                           	callstack 0
  9189  003BBC                     _LCD_WaitNotBusy:
  9190                           	callstack 25
  9191  003BBC                     
  9192                           ;LCD.c: 166: TRISCbits.RC7 = 1;
  9193  003BBC  8E94               	bsf	148,7,c	;volatile
  9194  003BBE  8489               	bsf	137,2,c	;volatile
  9195  003BC0  9689               	bcf	137,3,c	;volatile
  9196  003BC2  EFE4  F01D         	goto	l857
  9197  003BC6                     l858:
  9198  003BC6  F000               	nop	
  9199  003BC8                     l857:
  9200  003BC8  BE82               	btfsc	130,7,c	;volatile
  9201  003BCA  EFE9  F01D         	goto	u2291
  9202  003BCE  EFEB  F01D         	goto	u2290
  9203  003BD2                     u2291:
  9204  003BD2  EFE3  F01D         	goto	l858
  9205  003BD6                     u2290:
  9206  003BD6  9489               	bcf	137,2,c	;volatile
  9207  003BD8                     
  9208                           ;LCD.c: 171: TRISCbits.RC7 = 0;
  9209  003BD8  9E94               	bcf	148,7,c	;volatile
  9210  003BDA  0012               	return		;funcret
  9211  003BDC                     __end_of_LCD_WaitNotBusy:
  9212                           	callstack 0
  9213                           
  9214 ;; *************** function _CCP2_Init *****************
  9215 ;; Defined at:
  9216 ;;		line 22 in file "CCP2.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;		None
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  1    wreg      void 
  9223 ;; Registers used:
  9224 ;;		wreg, status,2
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9230 ;;      Params:         0       0       0       0       0       0       0       0       0
  9231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9233 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9234 ;;Total ram usage:        0 bytes
  9235 ;; Hardware stack levels used:    1
  9236 ;; Hardware stack levels required when called:    3
  9237 ;; This function calls:
  9238 ;;		Nothing
  9239 ;; This function is called by:
  9240 ;;		_main
  9241 ;; This function uses a non-reentrant model
  9242 ;;
  9243                           
  9244                           	psect	text46
  9245  003C8E                     __ptext46:
  9246                           	callstack 0
  9247  003C8E                     _CCP2_Init:
  9248                           	callstack 27
  9249  003C8E                     
  9250                           ;CCP2.c: 25: CCP2CON = 0x0C;
  9251  003C8E  0E0C               	movlw	12
  9252  003C90  6EBA               	movwf	186,c	;volatile
  9253                           
  9254                           ;CCP2.c: 26: CCPR2L = 99>>2;
  9255  003C92  0E18               	movlw	24
  9256  003C94  6EBB               	movwf	187,c	;volatile
  9257                           
  9258                           ;CCP2.c: 27: CCP2CONbits.DC2B = 99 & 0x03;
  9259  003C96  0E30               	movlw	48
  9260  003C98  12BA               	iorwf	186,f,c	;volatile
  9261                           
  9262                           ;CCP2.c: 28: CCPR2H = 0x00;
  9263  003C9A  0E00               	movlw	0
  9264  003C9C  6EBC               	movwf	188,c	;volatile
  9265  003C9E  0012               	return		;funcret
  9266  003CA0                     __end_of_CCP2_Init:
  9267                           	callstack 0
  9268                           
  9269 ;; *************** function _CCP1_Init *****************
  9270 ;; Defined at:
  9271 ;;		line 13 in file "CCP1.c"
  9272 ;; Parameters:    Size  Location     Type
  9273 ;;		None
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;		None
  9276 ;; Return value:  Size  Location     Type
  9277 ;;                  1    wreg      void 
  9278 ;; Registers used:
  9279 ;;		wreg, status,2
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9285 ;;      Params:         0       0       0       0       0       0       0       0       0
  9286 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9287 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9288 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9289 ;;Total ram usage:        0 bytes
  9290 ;; Hardware stack levels used:    1
  9291 ;; Hardware stack levels required when called:    3
  9292 ;; This function calls:
  9293 ;;		Nothing
  9294 ;; This function is called by:
  9295 ;;		_main
  9296 ;; This function uses a non-reentrant model
  9297 ;;
  9298                           
  9299                           	psect	text47
  9300  003CA0                     __ptext47:
  9301                           	callstack 0
  9302  003CA0                     _CCP1_Init:
  9303                           	callstack 27
  9304  003CA0                     
  9305                           ;CCP1.c: 17: CCP1CON = 0x00;
  9306  003CA0  0E00               	movlw	0
  9307  003CA2  6EBD               	movwf	189,c	;volatile
  9308                           
  9309                           ;CCP1.c: 19: CCPR1H = 0x00;
  9310  003CA4  0E00               	movlw	0
  9311  003CA6  6EBF               	movwf	191,c	;volatile
  9312                           
  9313                           ;CCP1.c: 20: CCPR1L = 0x00;
  9314  003CA8  0E00               	movlw	0
  9315  003CAA  6EBE               	movwf	190,c	;volatile
  9316  003CAC                     
  9317                           ;CCP1.c: 22: PIR1bits.CCP1IF = 0;
  9318  003CAC  949E               	bcf	158,2,c	;volatile
  9319  003CAE                     
  9320                           ;CCP1.c: 23: PIE1bits.CCP1IE = 0;
  9321  003CAE  949D               	bcf	157,2,c	;volatile
  9322  003CB0  0012               	return		;funcret
  9323  003CB2                     __end_of_CCP1_Init:
  9324                           	callstack 0
  9325                           
  9326 ;; *************** function _AN0_Init *****************
  9327 ;; Defined at:
  9328 ;;		line 32 in file "TempCalc.c"
  9329 ;; Parameters:    Size  Location     Type
  9330 ;;		None
  9331 ;; Auto vars:     Size  Location     Type
  9332 ;;		None
  9333 ;; Return value:  Size  Location     Type
  9334 ;;                  1    wreg      void 
  9335 ;; Registers used:
  9336 ;;		wreg, status,2
  9337 ;; Tracked objects:
  9338 ;;		On entry : 0/0
  9339 ;;		On exit  : 0/0
  9340 ;;		Unchanged: 0/0
  9341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9342 ;;      Params:         0       0       0       0       0       0       0       0       0
  9343 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9344 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9345 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9346 ;;Total ram usage:        0 bytes
  9347 ;; Hardware stack levels used:    1
  9348 ;; Hardware stack levels required when called:    3
  9349 ;; This function calls:
  9350 ;;		Nothing
  9351 ;; This function is called by:
  9352 ;;		_main
  9353 ;; This function uses a non-reentrant model
  9354 ;;
  9355                           
  9356                           	psect	text48
  9357  003CB2                     __ptext48:
  9358                           	callstack 0
  9359  003CB2                     _AN0_Init:
  9360                           	callstack 27
  9361  003CB2                     
  9362                           ;TempCalc.c: 34: ADCON0 = 0x01;
  9363  003CB2  0E01               	movlw	1
  9364  003CB4  6EC2               	movwf	194,c	;volatile
  9365                           
  9366                           ;TempCalc.c: 35: ADCON2 = 0xA8;
  9367  003CB6  0EA8               	movlw	168
  9368  003CB8  6EC0               	movwf	192,c	;volatile
  9369  003CBA                     
  9370                           ;TempCalc.c: 36: PIR1bits.ADIF = 0;
  9371  003CBA  9C9E               	bcf	158,6,c	;volatile
  9372  003CBC                     
  9373                           ;TempCalc.c: 37: PIE1bits.ADIE = 1;
  9374  003CBC  8C9D               	bsf	157,6,c	;volatile
  9375  003CBE  0012               	return		;funcret
  9376  003CC0                     __end_of_AN0_Init:
  9377                           	callstack 0
  9378                           
  9379 ;; *************** function _INTERRUPT_InterruptManager *****************
  9380 ;; Defined at:
  9381 ;;		line 16 in file "Interrupt_Mgr.c"
  9382 ;; Parameters:    Size  Location     Type
  9383 ;;		None
  9384 ;; Auto vars:     Size  Location     Type
  9385 ;;		None
  9386 ;; Return value:  Size  Location     Type
  9387 ;;                  1    wreg      void 
  9388 ;; Registers used:
  9389 ;;		wreg, status,2, status,0, cstack
  9390 ;; Tracked objects:
  9391 ;;		On entry : 0/0
  9392 ;;		On exit  : 0/0
  9393 ;;		Unchanged: 0/0
  9394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9395 ;;      Params:         0       0       0       0       0       0       0       0       0
  9396 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9397 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9398 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9399 ;;Total ram usage:        0 bytes
  9400 ;; Hardware stack levels used:    1
  9401 ;; Hardware stack levels required when called:    2
  9402 ;; This function calls:
  9403 ;;		_AN0_ISR
  9404 ;;		_CCP1_ISR
  9405 ;;		_Timer0_ISR
  9406 ;;		_Timer2_ISR
  9407 ;;		_Timer3_ISR
  9408 ;; This function is called by:
  9409 ;;		Interrupt level 2
  9410 ;; This function uses a non-reentrant model
  9411 ;;
  9412                           
  9413                           	psect	intcode
  9414  000008                     __pintcode:
  9415                           	callstack 0
  9416  000008                     _INTERRUPT_InterruptManager:
  9417                           	callstack 22
  9418                           
  9419                           ;incstack = 0
  9420  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9421  00000A  EDBF  F018         	call	int_func,f	;refresh shadow registers
  9422                           
  9423                           	psect	intcode_body
  9424  00317E                     __pintcode_body:
  9425                           	callstack 22
  9426  00317E                     int_func:
  9427                           	callstack 22
  9428  00317E  0006               	pop		; remove dummy address from shadow register refresh
  9429  003180                     
  9430                           ;Interrupt_Mgr.c: 19: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  9431  003180  AAF2               	btfss	242,5,c	;volatile
  9432  003182  EFC5  F018         	goto	i2u437_41
  9433  003186  EFC7  F018         	goto	i2u437_40
  9434  00318A                     i2u437_41:
  9435  00318A  EFD2  F018         	goto	i2l81
  9436  00318E                     i2u437_40:
  9437  00318E  A4F2               	btfss	242,2,c	;volatile
  9438  003190  EFCC  F018         	goto	i2u438_41
  9439  003194  EFCE  F018         	goto	i2u438_40
  9440  003198                     i2u438_41:
  9441  003198  EFD2  F018         	goto	i2l81
  9442  00319C                     i2u438_40:
  9443  00319C                     
  9444                           ;Interrupt_Mgr.c: 20: {;Interrupt_Mgr.c: 21: Timer0_ISR();
  9445  00319C  EC63  F01C         	call	_Timer0_ISR	;wreg free
  9446                           
  9447                           ;Interrupt_Mgr.c: 22: }
  9448  0031A0  EF21  F019         	goto	i2l93
  9449  0031A4                     i2l81:
  9450                           
  9451                           ;Interrupt_Mgr.c: 23: else if(INTCONbits.PEIE == 1)
  9452  0031A4  ACF2               	btfss	242,6,c	;volatile
  9453  0031A6  EFD7  F018         	goto	i2u439_41
  9454  0031AA  EFD9  F018         	goto	i2u439_40
  9455  0031AE                     i2u439_41:
  9456  0031AE  EF21  F019         	goto	i2l93
  9457  0031B2                     i2u439_40:
  9458  0031B2                     
  9459                           ;Interrupt_Mgr.c: 24: {;Interrupt_Mgr.c: 25: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF 
      +                          == 1)
  9460  0031B2  A2A0               	btfss	160,1,c	;volatile
  9461  0031B4  EFDE  F018         	goto	i2u440_41
  9462  0031B8  EFE0  F018         	goto	i2u440_40
  9463  0031BC                     i2u440_41:
  9464  0031BC  EFEB  F018         	goto	i2l84
  9465  0031C0                     i2u440_40:
  9466  0031C0  A2A1               	btfss	161,1,c	;volatile
  9467  0031C2  EFE5  F018         	goto	i2u441_41
  9468  0031C6  EFE7  F018         	goto	i2u441_40
  9469  0031CA                     i2u441_41:
  9470  0031CA  EFEB  F018         	goto	i2l84
  9471  0031CE                     i2u441_40:
  9472  0031CE                     
  9473                           ;Interrupt_Mgr.c: 26: {;Interrupt_Mgr.c: 27: Timer3_ISR();
  9474  0031CE  EC60  F01E         	call	_Timer3_ISR	;wreg free
  9475                           
  9476                           ;Interrupt_Mgr.c: 28: }
  9477  0031D2  EF21  F019         	goto	i2l93
  9478  0031D6                     i2l84:
  9479                           
  9480                           ;Interrupt_Mgr.c: 29: else if(PIE1bits.CCP1IE == 1 && PIR1bits.CCP1IF == 1)
  9481  0031D6  A49D               	btfss	157,2,c	;volatile
  9482  0031D8  EFF0  F018         	goto	i2u442_41
  9483  0031DC  EFF2  F018         	goto	i2u442_40
  9484  0031E0                     i2u442_41:
  9485  0031E0  EFFD  F018         	goto	i2l86
  9486  0031E4                     i2u442_40:
  9487  0031E4  A49E               	btfss	158,2,c	;volatile
  9488  0031E6  EFF7  F018         	goto	i2u443_41
  9489  0031EA  EFF9  F018         	goto	i2u443_40
  9490  0031EE                     i2u443_41:
  9491  0031EE  EFFD  F018         	goto	i2l86
  9492  0031F2                     i2u443_40:
  9493  0031F2                     
  9494                           ;Interrupt_Mgr.c: 30: {;Interrupt_Mgr.c: 31: CCP1_ISR();
  9495  0031F2  ECCC  F01D         	call	_CCP1_ISR	;wreg free
  9496                           
  9497                           ;Interrupt_Mgr.c: 32: }
  9498  0031F6  EF21  F019         	goto	i2l93
  9499  0031FA                     i2l86:
  9500                           
  9501                           ;Interrupt_Mgr.c: 33: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  9502  0031FA  A29D               	btfss	157,1,c	;volatile
  9503  0031FC  EF02  F019         	goto	i2u444_41
  9504  003200  EF04  F019         	goto	i2u444_40
  9505  003204                     i2u444_41:
  9506  003204  EF0F  F019         	goto	i2l88
  9507  003208                     i2u444_40:
  9508  003208  A29E               	btfss	158,1,c	;volatile
  9509  00320A  EF09  F019         	goto	i2u445_41
  9510  00320E  EF0B  F019         	goto	i2u445_40
  9511  003212                     i2u445_41:
  9512  003212  EF0F  F019         	goto	i2l88
  9513  003216                     i2u445_40:
  9514  003216                     
  9515                           ;Interrupt_Mgr.c: 34: {;Interrupt_Mgr.c: 35: Timer2_ISR();
  9516  003216  EC67  F01E         	call	_Timer2_ISR	;wreg free
  9517                           
  9518                           ;Interrupt_Mgr.c: 36: }
  9519  00321A  EF21  F019         	goto	i2l93
  9520  00321E                     i2l88:
  9521                           
  9522                           ;Interrupt_Mgr.c: 37: else if (PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
  9523  00321E  AC9D               	btfss	157,6,c	;volatile
  9524  003220  EF14  F019         	goto	i2u446_41
  9525  003224  EF16  F019         	goto	i2u446_40
  9526  003228                     i2u446_41:
  9527  003228  EF21  F019         	goto	i2l87
  9528  00322C                     i2u446_40:
  9529  00322C  AC9E               	btfss	158,6,c	;volatile
  9530  00322E  EF1B  F019         	goto	i2u447_41
  9531  003232  EF1D  F019         	goto	i2u447_40
  9532  003236                     i2u447_41:
  9533  003236  EF21  F019         	goto	i2l87
  9534  00323A                     i2u447_40:
  9535  00323A                     
  9536                           ;Interrupt_Mgr.c: 38: {;Interrupt_Mgr.c: 39: AN0_ISR();
  9537  00323A  EC0C  F01E         	call	_AN0_ISR	;wreg free
  9538                           
  9539                           ;Interrupt_Mgr.c: 40: }
  9540  00323E  EF21  F019         	goto	i2l93
  9541  003242                     i2l87:
  9542  003242                     i2l93:
  9543  003242  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9544  003244  0011               	retfie		f
  9545  003246                     __end_of_INTERRUPT_InterruptManager:
  9546                           	callstack 0
  9547                           
  9548 ;; *************** function _Timer3_ISR *****************
  9549 ;; Defined at:
  9550 ;;		line 13 in file "Timer_3.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;		None
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;		None
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  1    wreg      void 
  9557 ;; Registers used:
  9558 ;;		wreg, status,2
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 0/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9564 ;;      Params:         0       0       0       0       0       0       0       0       0
  9565 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9566 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9567 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9568 ;;Total ram usage:        0 bytes
  9569 ;; Hardware stack levels used:    1
  9570 ;; This function calls:
  9571 ;;		Nothing
  9572 ;; This function is called by:
  9573 ;;		_INTERRUPT_InterruptManager
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           	psect	text50
  9578  003CC0                     __ptext50:
  9579                           	callstack 0
  9580  003CC0                     _Timer3_ISR:
  9581                           	callstack 23
  9582  003CC0                     
  9583                           ;Timer_3.c: 15: T3CONbits.TMR3ON = 0;
  9584  003CC0  90B1               	bcf	177,0,c	;volatile
  9585  003CC2                     
  9586                           ;Timer_3.c: 16: TMR3H = 0;
  9587  003CC2  0E00               	movlw	0
  9588  003CC4  6EB3               	movwf	179,c	;volatile
  9589                           
  9590                           ;Timer_3.c: 17: TMR3L = 0;
  9591  003CC6  0E00               	movlw	0
  9592  003CC8  6EB2               	movwf	178,c	;volatile
  9593  003CCA                     
  9594                           ;Timer_3.c: 19: PIR2bits.TMR3IF = 0;
  9595  003CCA  92A1               	bcf	161,1,c	;volatile
  9596  003CCC  0012               	return		;funcret
  9597  003CCE                     __end_of_Timer3_ISR:
  9598                           	callstack 0
  9599                           
  9600 ;; *************** function _Timer2_ISR *****************
  9601 ;; Defined at:
  9602 ;;		line 9 in file "Timer_2.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;		None
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;		None
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  1    wreg      void 
  9609 ;; Registers used:
  9610 ;;		wreg, status,2
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9616 ;;      Params:         0       0       0       0       0       0       0       0       0
  9617 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9618 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9619 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9620 ;;Total ram usage:        0 bytes
  9621 ;; Hardware stack levels used:    1
  9622 ;; This function calls:
  9623 ;;		Nothing
  9624 ;; This function is called by:
  9625 ;;		_INTERRUPT_InterruptManager
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           	psect	text51
  9630  003CCE                     __ptext51:
  9631                           	callstack 0
  9632  003CCE                     _Timer2_ISR:
  9633                           	callstack 23
  9634  003CCE                     
  9635                           ;Timer_2.c: 14: T2CONbits.TMR2ON = 0;
  9636  003CCE  94CA               	bcf	202,2,c	;volatile
  9637  003CD0                     
  9638                           ;Timer_2.c: 16: TMR2 = 0;
  9639  003CD0  0E00               	movlw	0
  9640  003CD2  6ECC               	movwf	204,c	;volatile
  9641  003CD4                     
  9642                           ;Timer_2.c: 17: PIE1bits.TMR2IE = 0;
  9643  003CD4  929D               	bcf	157,1,c	;volatile
  9644  003CD6                     
  9645                           ;Timer_2.c: 18: PIR1bits.TMR2IF = 0;
  9646  003CD6  929E               	bcf	158,1,c	;volatile
  9647  003CD8  0012               	return		;funcret
  9648  003CDA                     __end_of_Timer2_ISR:
  9649                           	callstack 0
  9650                           
  9651 ;; *************** function _Timer0_ISR *****************
  9652 ;; Defined at:
  9653 ;;		line 31 in file "Timer_0.c"
  9654 ;; Parameters:    Size  Location     Type
  9655 ;;		None
  9656 ;; Auto vars:     Size  Location     Type
  9657 ;;		None
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  1    wreg      void 
  9660 ;; Registers used:
  9661 ;;		wreg, status,2, status,0, cstack
  9662 ;; Tracked objects:
  9663 ;;		On entry : 0/0
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9667 ;;      Params:         0       0       0       0       0       0       0       0       0
  9668 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9670 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9671 ;;Total ram usage:        0 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; Hardware stack levels required when called:    1
  9674 ;; This function calls:
  9675 ;;		_CaptureTemp
  9676 ;; This function is called by:
  9677 ;;		_INTERRUPT_InterruptManager
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           	psect	text52
  9682  0038C6                     __ptext52:
  9683                           	callstack 0
  9684  0038C6                     _Timer0_ISR:
  9685                           	callstack 22
  9686  0038C6                     
  9687                           ;Timer_0.c: 32: TMR0H = Timer0_Reload >> 8;
  9688  0038C6  0100               	movlb	0	; () banked
  9689  0038C8  51F5               	movf	(_Timer0_Reload+1)& (0+255),w,b
  9690  0038CA  6ED7               	movwf	215,c	;volatile
  9691  0038CC                     
  9692                           ; BSR set to: 0
  9693                           ;Timer_0.c: 33: TMR0L = Timer0_Reload;
  9694  0038CC  C0F4  FFD6         	movff	_Timer0_Reload,4054	;volatile
  9695  0038D0                     
  9696                           ; BSR set to: 0
  9697                           ;Timer_0.c: 34: INTCONbits.TMR0IF = 0;
  9698  0038D0  94F2               	bcf	242,2,c	;volatile
  9699  0038D2                     
  9700                           ; BSR set to: 0
  9701                           ;Timer_0.c: 36: if (LATAbits.LATA5 == 0) LATAbits.LATA5 = 1;
  9702  0038D2  BA89               	btfsc	137,5,c	;volatile
  9703  0038D4  EF6E  F01C         	goto	i2u424_41
  9704  0038D8  EF70  F01C         	goto	i2u424_40
  9705  0038DC                     i2u424_41:
  9706  0038DC  EF71  F01C         	goto	i2l4972
  9707  0038E0                     i2u424_40:
  9708  0038E0                     
  9709                           ; BSR set to: 0
  9710  0038E0  8A89               	bsf	137,5,c	;volatile
  9711  0038E2                     i2l4972:
  9712                           
  9713                           ; BSR set to: 0
  9714                           ;Timer_0.c: 37: if (++iSampleCntr == 10)
  9715  0038E2  2BE4               	incf	_iSampleCntr& (0+255),f,b
  9716  0038E4  0E0A               	movlw	10
  9717  0038E6  19E4               	xorwf	_iSampleCntr& (0+255),w,b
  9718  0038E8  A4D8               	btfss	status,2,c
  9719  0038EA  EF79  F01C         	goto	i2u425_41
  9720  0038EE  EF7B  F01C         	goto	i2u425_40
  9721  0038F2                     i2u425_41:
  9722  0038F2  EF7F  F01C         	goto	i2l4978
  9723  0038F6                     i2u425_40:
  9724  0038F6                     
  9725                           ; BSR set to: 0
  9726                           ;Timer_0.c: 38: {;Timer_0.c: 39: iSampleCntr = 0;
  9727  0038F6  0E00               	movlw	0
  9728  0038F8  6FE4               	movwf	_iSampleCntr& (0+255),b
  9729  0038FA                     
  9730                           ; BSR set to: 0
  9731                           ;Timer_0.c: 40: CaptureTemp();
  9732  0038FA  EC7D  F01E         	call	_CaptureTemp	;wreg free
  9733  0038FE                     i2l4978:
  9734                           
  9735                           ;Timer_0.c: 41: };Timer_0.c: 43: if (++iTOD_Cntr == 200)
  9736  0038FE  0100               	movlb	0	; () banked
  9737  003900  4BCF               	infsnz	_iTOD_Cntr& (0+255),f,b
  9738  003902  2BD0               	incf	(_iTOD_Cntr+1)& (0+255),f,b
  9739  003904  0EC8               	movlw	200
  9740  003906  19CF               	xorwf	_iTOD_Cntr& (0+255),w,b
  9741  003908  11D0               	iorwf	(_iTOD_Cntr+1)& (0+255),w,b
  9742  00390A  A4D8               	btfss	status,2,c
  9743  00390C  EF8A  F01C         	goto	i2u426_41
  9744  003910  EF8C  F01C         	goto	i2u426_40
  9745  003914                     i2u426_41:
  9746  003914  EF92  F01C         	goto	i2l192
  9747  003918                     i2u426_40:
  9748  003918                     
  9749                           ; BSR set to: 0
  9750                           ;Timer_0.c: 44: {;Timer_0.c: 46: gb_UpdateTime = 1;
  9751  003918  0E01               	movlw	1
  9752  00391A  6FED               	movwf	_gb_UpdateTime& (0+255),b	;volatile
  9753                           
  9754                           ;Timer_0.c: 47: iTOD_Cntr = 0;
  9755  00391C  0E00               	movlw	0
  9756  00391E  6FD0               	movwf	(_iTOD_Cntr+1)& (0+255),b
  9757  003920  0E00               	movlw	0
  9758  003922  6FCF               	movwf	_iTOD_Cntr& (0+255),b
  9759  003924                     i2l192:
  9760                           
  9761                           ; BSR set to: 0
  9762  003924  0012               	return		;funcret
  9763  003926                     __end_of_Timer0_ISR:
  9764                           	callstack 0
  9765                           
  9766 ;; *************** function _CaptureTemp *****************
  9767 ;; Defined at:
  9768 ;;		line 48 in file "TempCalc.c"
  9769 ;; Parameters:    Size  Location     Type
  9770 ;;		None
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;		None
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  1    wreg      void 
  9775 ;; Registers used:
  9776 ;;		wreg, status,2
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/0
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9782 ;;      Params:         0       0       0       0       0       0       0       0       0
  9783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9785 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9786 ;;Total ram usage:        0 bytes
  9787 ;; Hardware stack levels used:    1
  9788 ;; This function calls:
  9789 ;;		Nothing
  9790 ;; This function is called by:
  9791 ;;		_Timer0_ISR
  9792 ;; This function uses a non-reentrant model
  9793 ;;
  9794                           
  9795                           	psect	text53
  9796  003CFA                     __ptext53:
  9797                           	callstack 0
  9798  003CFA                     _CaptureTemp:
  9799                           	callstack 22
  9800  003CFA                     
  9801                           ;TempCalc.c: 52: gb_TempCaptured = 0;
  9802  003CFA  0E00               	movlw	0
  9803  003CFC  0100               	movlb	0	; () banked
  9804  003CFE  6FE9               	movwf	_gb_TempCaptured& (0+255),b	;volatile
  9805  003D00                     
  9806                           ; BSR set to: 0
  9807                           ;TempCalc.c: 53: ADCON0bits.GO = 1;
  9808  003D00  82C2               	bsf	194,1,c	;volatile
  9809  003D02                     
  9810                           ; BSR set to: 0
  9811  003D02  0012               	return		;funcret
  9812  003D04                     __end_of_CaptureTemp:
  9813                           	callstack 0
  9814                           
  9815 ;; *************** function _CCP1_ISR *****************
  9816 ;; Defined at:
  9817 ;;		line 32 in file "CCP1.c"
  9818 ;; Parameters:    Size  Location     Type
  9819 ;;		None
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;		None
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  1    wreg      void 
  9824 ;; Registers used:
  9825 ;;		wreg, status,2, cstack
  9826 ;; Tracked objects:
  9827 ;;		On entry : 0/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9831 ;;      Params:         0       0       0       0       0       0       0       0       0
  9832 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9833 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9834 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9835 ;;Total ram usage:        0 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; Hardware stack levels required when called:    1
  9838 ;; This function calls:
  9839 ;;		_Timer1_Reset
  9840 ;; This function is called by:
  9841 ;;		_INTERRUPT_InterruptManager
  9842 ;; This function uses a non-reentrant model
  9843 ;;
  9844                           
  9845                           	psect	text54
  9846  003B98                     __ptext54:
  9847                           	callstack 0
  9848  003B98                     _CCP1_ISR:
  9849                           	callstack 22
  9850  003B98                     
  9851                           ;CCP1.c: 35: giEchoCounter.EPl = CCPR1L;
  9852  003B98  CFBE F0DF          	movff	4030,_giEchoCounter	;volatile
  9853                           
  9854                           ;CCP1.c: 36: giEchoCounter.EPh = CCPR1H;
  9855  003B9C  CFBF F0E0          	movff	4031,_giEchoCounter+1	;volatile
  9856  003BA0                     
  9857                           ;CCP1.c: 39: CCP1CON = 0x00;
  9858  003BA0  0E00               	movlw	0
  9859  003BA2  6EBD               	movwf	189,c	;volatile
  9860                           
  9861                           ;CCP1.c: 40: CCPR1H = 0;
  9862  003BA4  0E00               	movlw	0
  9863  003BA6  6EBF               	movwf	191,c	;volatile
  9864                           
  9865                           ;CCP1.c: 41: CCPR1L = 0;
  9866  003BA8  0E00               	movlw	0
  9867  003BAA  6EBE               	movwf	190,c	;volatile
  9868  003BAC                     
  9869                           ;CCP1.c: 43: PIR1bits.CCP1IF = 0;
  9870  003BAC  949E               	bcf	158,2,c	;volatile
  9871  003BAE                     
  9872                           ;CCP1.c: 44: PIE1bits.CCP1IE = 0;
  9873  003BAE  949D               	bcf	157,2,c	;volatile
  9874  003BB0                     
  9875                           ;CCP1.c: 45: Timer1_Reset();
  9876  003BB0  EC6D  F01E         	call	_Timer1_Reset	;wreg free
  9877  003BB4                     
  9878                           ;CCP1.c: 46: gb_EchoDetected = 1;
  9879  003BB4  0E01               	movlw	1
  9880  003BB6  0100               	movlb	0	; () banked
  9881  003BB8  6FEC               	movwf	_gb_EchoDetected& (0+255),b	;volatile
  9882  003BBA                     
  9883                           ; BSR set to: 0
  9884  003BBA  0012               	return		;funcret
  9885  003BBC                     __end_of_CCP1_ISR:
  9886                           	callstack 0
  9887                           
  9888 ;; *************** function _Timer1_Reset *****************
  9889 ;; Defined at:
  9890 ;;		line 26 in file "Timer_1.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;		None
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;		None
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      void 
  9897 ;; Registers used:
  9898 ;;		wreg, status,2
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9904 ;;      Params:         0       0       0       0       0       0       0       0       0
  9905 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9906 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9907 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9908 ;;Total ram usage:        0 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; This function calls:
  9911 ;;		Nothing
  9912 ;; This function is called by:
  9913 ;;		_CCP1_ISR
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           
  9917                           	psect	text55
  9918  003CDA                     __ptext55:
  9919                           	callstack 0
  9920  003CDA                     _Timer1_Reset:
  9921                           	callstack 22
  9922  003CDA                     
  9923                           ;Timer_1.c: 28: T1CONbits.TMR1ON = 0;
  9924  003CDA  90CD               	bcf	205,0,c	;volatile
  9925  003CDC                     
  9926                           ;Timer_1.c: 29: TMR1H = 0;
  9927  003CDC  0E00               	movlw	0
  9928  003CDE  6ECF               	movwf	207,c	;volatile
  9929                           
  9930                           ;Timer_1.c: 30: TMR1L = 0;
  9931  003CE0  0E00               	movlw	0
  9932  003CE2  6ECE               	movwf	206,c	;volatile
  9933  003CE4  0012               	return		;funcret
  9934  003CE6                     __end_of_Timer1_Reset:
  9935                           	callstack 0
  9936                           
  9937 ;; *************** function _AN0_ISR *****************
  9938 ;; Defined at:
  9939 ;;		line 40 in file "TempCalc.c"
  9940 ;; Parameters:    Size  Location     Type
  9941 ;;		None
  9942 ;; Auto vars:     Size  Location     Type
  9943 ;;		None
  9944 ;; Return value:  Size  Location     Type
  9945 ;;                  1    wreg      void 
  9946 ;; Registers used:
  9947 ;;		wreg, status,2, status,0
  9948 ;; Tracked objects:
  9949 ;;		On entry : 0/0
  9950 ;;		On exit  : 0/0
  9951 ;;		Unchanged: 0/0
  9952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9953 ;;      Params:         0       0       0       0       0       0       0       0       0
  9954 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9955 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9956 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9957 ;;Total ram usage:        0 bytes
  9958 ;; Hardware stack levels used:    1
  9959 ;; This function calls:
  9960 ;;		Nothing
  9961 ;; This function is called by:
  9962 ;;		_INTERRUPT_InterruptManager
  9963 ;; This function uses a non-reentrant model
  9964 ;;
  9965                           
  9966                           	psect	text56
  9967  003C18                     __ptext56:
  9968                           	callstack 0
  9969  003C18                     _AN0_ISR:
  9970                           	callstack 23
  9971  003C18                     
  9972                           ;TempCalc.c: 42: giTempCapture = (uint16_t) (ADRESH << 8);
  9973  003C18  50C4               	movf	196,w,c	;volatile
  9974  003C1A  0100               	movlb	0	; () banked
  9975  003C1C  6FF3               	movwf	(_giTempCapture+1)& (0+255),b	;volatile
  9976  003C1E  6BF2               	clrf	_giTempCapture& (0+255),b	;volatile
  9977  003C20                     
  9978                           ; BSR set to: 0
  9979                           ;TempCalc.c: 43: giTempCapture += ADRESL;
  9980  003C20  50C3               	movf	195,w,c	;volatile
  9981  003C22  27F2               	addwf	_giTempCapture& (0+255),f,b	;volatile
  9982  003C24  0E00               	movlw	0
  9983  003C26  23F3               	addwfc	(_giTempCapture+1)& (0+255),f,b	;volatile
  9984  003C28                     
  9985                           ; BSR set to: 0
  9986                           ;TempCalc.c: 44: PIR1bits.ADIF = 0;
  9987  003C28  9C9E               	bcf	158,6,c	;volatile
  9988  003C2A                     
  9989                           ; BSR set to: 0
  9990                           ;TempCalc.c: 45: gb_TempCaptured = 1;
  9991  003C2A  0E01               	movlw	1
  9992  003C2C  6FE9               	movwf	_gb_TempCaptured& (0+255),b	;volatile
  9993  003C2E                     
  9994                           ; BSR set to: 0
  9995  003C2E  0012               	return		;funcret
  9996  003C30                     __end_of_AN0_ISR:
  9997                           	callstack 0
  9998                           
  9999                           	psect	rparam
 10000  0000                     
 10001                           	psect	temp
 10002  00005F                     btemp:
 10003                           	callstack 0
 10004  00005F                     	ds	1
 10005  0000                     int$flags	set	btemp
 10006  0000                     wtemp8	set	btemp+1
 10007  0000                     ttemp5	set	btemp+1
 10008  0000                     ttemp6	set	btemp+4
 10009  0000                     ttemp7	set	btemp+8
 10010                           
 10011                           	psect	idloc
 10012                           
 10013                           ;Config register IDLOC0 @ 0x200000
 10014                           ;	unspecified, using default values
 10015  200000                     	org	2097152
 10016  200000  FF                 	db	255
 10017                           
 10018                           ;Config register IDLOC1 @ 0x200001
 10019                           ;	unspecified, using default values
 10020  200001                     	org	2097153
 10021  200001  FF                 	db	255
 10022                           
 10023                           ;Config register IDLOC2 @ 0x200002
 10024                           ;	unspecified, using default values
 10025  200002                     	org	2097154
 10026  200002  FF                 	db	255
 10027                           
 10028                           ;Config register IDLOC3 @ 0x200003
 10029                           ;	unspecified, using default values
 10030  200003                     	org	2097155
 10031  200003  FF                 	db	255
 10032                           
 10033                           ;Config register IDLOC4 @ 0x200004
 10034                           ;	unspecified, using default values
 10035  200004                     	org	2097156
 10036  200004  FF                 	db	255
 10037                           
 10038                           ;Config register IDLOC5 @ 0x200005
 10039                           ;	unspecified, using default values
 10040  200005                     	org	2097157
 10041  200005  FF                 	db	255
 10042                           
 10043                           ;Config register IDLOC6 @ 0x200006
 10044                           ;	unspecified, using default values
 10045  200006                     	org	2097158
 10046  200006  FF                 	db	255
 10047                           
 10048                           ;Config register IDLOC7 @ 0x200007
 10049                           ;	unspecified, using default values
 10050  200007                     	org	2097159
 10051  200007  FF                 	db	255
 10052                           
 10053                           	psect	config
 10054                           
 10055                           ;Config register CONFIG1L @ 0x300000
 10056                           ;	PLL Prescaler Selection bits
 10057                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
 10058                           ;	System Clock Postscaler Selection bits
 10059                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10060                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10061                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
 10062  300000                     	org	3145728
 10063  300000  21                 	db	33
 10064                           
 10065                           ;Config register CONFIG1H @ 0x300001
 10066                           ;	Oscillator Selection bits
 10067                           ;	FOSC = HS, HS oscillator (HS)
 10068                           ;	Fail-Safe Clock Monitor Enable bit
 10069                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10070                           ;	Internal/External Oscillator Switchover bit
 10071                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10072  300001                     	org	3145729
 10073  300001  0C                 	db	12
 10074                           
 10075                           ;Config register CONFIG2L @ 0x300002
 10076                           ;	Power-up Timer Enable bit
 10077                           ;	PWRT = OFF, PWRT disabled
 10078                           ;	Brown-out Reset Enable bits
 10079                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10080                           ;	Brown-out Reset Voltage bits
 10081                           ;	BORV = 2, Setting 1 2.79V
 10082                           ;	USB Voltage Regulator Enable bit
 10083                           ;	VREGEN = OFF, USB voltage regulator disabled
 10084  300002                     	org	3145730
 10085  300002  11                 	db	17
 10086                           
 10087                           ;Config register CONFIG2H @ 0x300003
 10088                           ;	Watchdog Timer Enable bit
 10089                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10090                           ;	Watchdog Timer Postscale Select bits
 10091                           ;	WDTPS = 32768, 1:32768
 10092  300003                     	org	3145731
 10093  300003  1E                 	db	30
 10094                           
 10095                           ; Padding undefined space
 10096  300004                     	org	3145732
 10097  300004  FF                 	db	255
 10098                           
 10099                           ;Config register CONFIG3H @ 0x300005
 10100                           ;	CCP2 MUX bit
 10101                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10102                           ;	PORTB A/D Enable bit
 10103                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 10104                           ;	Low-Power Timer 1 Oscillator Enable bit
 10105                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10106                           ;	MCLR Pin Enable bit
 10107                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10108  300005                     	org	3145733
 10109  300005  81                 	db	129
 10110                           
 10111                           ;Config register CONFIG4L @ 0x300006
 10112                           ;	Stack Full/Underflow Reset Enable bit
 10113                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10114                           ;	Single-Supply ICSP Enable bit
 10115                           ;	LVP = OFF, Single-Supply ICSP disabled
 10116                           ;	Extended Instruction Set Enable bit
 10117                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10118                           ;	Background Debugger Enable bit
 10119                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10120  300006                     	org	3145734
 10121  300006  81                 	db	129
 10122                           
 10123                           ; Padding undefined space
 10124  300007                     	org	3145735
 10125  300007  FF                 	db	255
 10126                           
 10127                           ;Config register CONFIG5L @ 0x300008
 10128                           ;	Code Protection bit
 10129                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10130                           ;	Code Protection bit
 10131                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10132                           ;	Code Protection bit
 10133                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10134  300008                     	org	3145736
 10135  300008  0F                 	db	15
 10136                           
 10137                           ;Config register CONFIG5H @ 0x300009
 10138                           ;	Boot Block Code Protection bit
 10139                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10140                           ;	Data EEPROM Code Protection bit
 10141                           ;	CPD = OFF, Data EEPROM is not code-protected
 10142  300009                     	org	3145737
 10143  300009  C0                 	db	192
 10144                           
 10145                           ;Config register CONFIG6L @ 0x30000A
 10146                           ;	Write Protection bit
 10147                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10148                           ;	Write Protection bit
 10149                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10150                           ;	Write Protection bit
 10151                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10152  30000A                     	org	3145738
 10153  30000A  0F                 	db	15
 10154                           
 10155                           ;Config register CONFIG6H @ 0x30000B
 10156                           ;	Configuration Register Write Protection bit
 10157                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10158                           ;	Boot Block Write Protection bit
 10159                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10160                           ;	Data EEPROM Write Protection bit
 10161                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10162  30000B                     	org	3145739
 10163  30000B  E0                 	db	224
 10164                           
 10165                           ;Config register CONFIG7L @ 0x30000C
 10166                           ;	Table Read Protection bit
 10167                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10168                           ;	Table Read Protection bit
 10169                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10170                           ;	Table Read Protection bit
 10171                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10172  30000C                     	org	3145740
 10173  30000C  0F                 	db	15
 10174                           
 10175                           ;Config register CONFIG7H @ 0x30000D
 10176                           ;	Boot Block Table Read Protection bit
 10177                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10178  30000D                     	org	3145741
 10179  30000D  40                 	db	64
 10180                           tosu	equ	0xFFF
 10181                           tosh	equ	0xFFE
 10182                           tosl	equ	0xFFD
 10183                           stkptr	equ	0xFFC
 10184                           pclatu	equ	0xFFB
 10185                           pclath	equ	0xFFA
 10186                           pcl	equ	0xFF9
 10187                           tblptru	equ	0xFF8
 10188                           tblptrh	equ	0xFF7
 10189                           tblptrl	equ	0xFF6
 10190                           tablat	equ	0xFF5
 10191                           prodh	equ	0xFF4
 10192                           prodl	equ	0xFF3
 10193                           indf0	equ	0xFEF
 10194                           postinc0	equ	0xFEE
 10195                           postdec0	equ	0xFED
 10196                           preinc0	equ	0xFEC
 10197                           plusw0	equ	0xFEB
 10198                           fsr0h	equ	0xFEA
 10199                           fsr0l	equ	0xFE9
 10200                           wreg	equ	0xFE8
 10201                           indf1	equ	0xFE7
 10202                           postinc1	equ	0xFE6
 10203                           postdec1	equ	0xFE5
 10204                           preinc1	equ	0xFE4
 10205                           plusw1	equ	0xFE3
 10206                           fsr1h	equ	0xFE2
 10207                           fsr1l	equ	0xFE1
 10208                           bsr	equ	0xFE0
 10209                           indf2	equ	0xFDF
 10210                           postinc2	equ	0xFDE
 10211                           postdec2	equ	0xFDD
 10212                           preinc2	equ	0xFDC
 10213                           plusw2	equ	0xFDB
 10214                           fsr2h	equ	0xFDA
 10215                           fsr2l	equ	0xFD9
 10216                           status	equ	0xFD8

Data Sizes:
    Strings     50
    Constant    86
    Data        40
    BSS         275
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160     81     157
    BANK1           256      0     238
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> trunc@expon(BANK0[2]), floor@expon(BANK0[2]), log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> exp@coeff(CODE[40]), log@coeff(CODE[36]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(COMRAM[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> sLine2(BANK1[100]), sLine1(BANK1[100]), gsTotalSecs(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    LCD_WriteLine@iData	PTR unsigned char  size(2) Largest target is 100
		 -> sLine2(BANK1[100]), sLine1(BANK1[100]), 

    LCD_WriteString@iData	PTR unsigned char  size(2) Largest target is 17
		 -> LCD_WriteLine@sLine(COMRAM[17]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _LCD_Init->_LCD_WriteCmd
    _InitTankVariables->___flmul
    _pow->___flmul
    _exp->___flmul
    _floor->_frexp
    _ComputeWaterVol->___flmul
    _sqrt->___fladd
    _LCD_DisplayResults->_sprintf
    _LCD_WriteLine->_LCD_WriteString
    _LCD_WriteString->_LCD_WriteChar
    _ComputeTemp->___flmul
    _round->___flmul
    _trunc->_frexp
    ___fltol->___fladd
    ___flsub->_trunc
    _log->___flmul
    _frexp->___fleq
    ___fleq->___xxtofl
    _eval_poly->___flmul
    ___flmul->_frexp
    ___fladd->___fldiv
    ___xxtofl->___fltol
    _ComputeTOD->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_GoTo->_LCD_WriteCmd

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_InitTankVariables
    _InitTankVariables->_pow
    _pow->_exp
    _exp->_ldexp
    _ldexp->_eval_poly
    _ComputeWaterVol->_round
    _ComputeTemp->_log
    _round->___flmul
    ___flsub->_trunc
    _log->_eval_poly
    _eval_poly->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  156406
                                             77 BANK0      4     4      0
                           _AN0_Init
                          _CCP1_Init
                          _CCP2_Init
                         _ComputeTOD
                        _ComputeTemp
                    _ComputeWaterVol
                  _InitTankVariables
                           _LCD_Init
                    _LCD_WriteString
                _StartDepthDetection
                            _SysInit
                        _Timer0_Init
                        _Timer1_Init
                        _Timer2_Init
                        _Timer3_Init
 ---------------------------------------------------------------------------------
 (1) _Timer3_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer2_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SysInit                                              0     0      0       0
                            _OscInit
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OscInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _StartDepthDetection                                  0     0      0       0
                      _CCP1_Activate
 ---------------------------------------------------------------------------------
 (2) _CCP1_Activate                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     690
                                              5 COMRAM     2     2      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _InitTankVariables                                    4     4      0   71382
                                             73 BANK0      4     4      0
                            ___flmul
                                _pow
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _pow                                                 21    13      8   66024
                                             52 BANK0     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _exp                                                 11     7      4   35143
                                             41 BANK0     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                8     2      6    1958
                                             33 BANK0      8     2      6
                             ___fleq
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                               10     6      4    8828
                                             85 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     273
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _ComputeWaterVol                                     36    36      0   34324
                                             25 BANK0     36    36      0
                 _LCD_DisplayResults
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                              _round
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                29    25      4    1033
                                             41 COMRAM    29    25      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_DisplayResults                                   0     0      0    4248
                           _LCD_GoTo
                      _LCD_WriteLine
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _LCD_WriteLine                                       22    20      2     824
                                              8 COMRAM    22    20      2
                    _LCD_WriteString
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      5     3      2     308
                                              3 COMRAM     5     3      2
                      _LCD_WriteChar
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteChar                                        3     3      0      66
                                              0 COMRAM     3     3      0
                    _LCD_WaitNotBusy
 ---------------------------------------------------------------------------------
 (1) _ComputeTemp                                         14    14      0   46230
                                             39 BANK0     14    14      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                                _log
                              _round
 ---------------------------------------------------------------------------------
 (2) _round                                                8     4      4   12471
                                             17 BANK0      8     4      4
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub
                              _trunc
 ---------------------------------------------------------------------------------
 (3) _trunc                                               10     6      4    4548
                                             85 COMRAM     4     0      4
                                              0 BANK0      6     6      0
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     913
                                             41 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4105
                                              6 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   21452
                                             33 BANK0      6     2      4
                            ___fladd
                             ___fleq
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                8     2      6    2238
                                             77 COMRAM     8     2      6
                            ___fladd (ARG)
                             ___fleq
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    1558
                                             65 COMRAM    12     4      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     8      8    8414
                                             17 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4302
                                             85 COMRAM     8     0      8
                                              0 BANK0     17    17      0
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3478
                                             25 COMRAM    16     8      8
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1082
                                             51 COMRAM    14    10      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    2463
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _ComputeTOD                                           2     2      0    3448
                                             39 COMRAM     2     2      0
                           _LCD_GoTo
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             31    21     10    2463
                                             12 COMRAM    27    17     10
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _LCD_GoTo                                             7     6      1     961
                                              5 COMRAM     7     6      1
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         5     3      2     598
                                              0 COMRAM     5     3      2
                    _LCD_WaitNotBusy
 ---------------------------------------------------------------------------------
 (3) _LCD_WaitNotBusy                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP2_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AN0_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0       0
                            _AN0_ISR
                           _CCP1_ISR
                         _Timer0_ISR
                         _Timer2_ISR
                         _Timer3_ISR
 ---------------------------------------------------------------------------------
 (8) _Timer3_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                           0     0      0       0
                        _CaptureTemp
 ---------------------------------------------------------------------------------
 (9) _CaptureTemp                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP1_ISR                                             0     0      0       0
                       _Timer1_Reset
 ---------------------------------------------------------------------------------
 (9) _Timer1_Reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _AN0_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AN0_Init
   _CCP1_Init
   _CCP2_Init
   _ComputeTOD
     _LCD_GoTo
       _LCD_WriteCmd
         _LCD_WaitNotBusy
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _ComputeTemp
     ___fladd
       ___fldiv (ARG)
     ___fldiv
     ___flmul
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       _frexp (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fleq (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
       _sqrt (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
     ___xxtofl
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
     _log
       ___fladd
         ___fldiv (ARG)
       ___fleq
         ___fladd (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
       ___flmul
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
         _sqrt (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       ___xxtofl
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       _eval_poly
         ___fladd
           ___fldiv (ARG)
         ___flmul
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fleq (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
       _frexp
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fleq (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
     _round
       ___fladd
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
         _sqrt (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _trunc (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
           ___xxtofl
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _frexp
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fleq (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
       _trunc (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
   _ComputeWaterVol
     _LCD_DisplayResults
       _LCD_GoTo
         _LCD_WriteCmd
           _LCD_WaitNotBusy
       _LCD_WriteLine
         _LCD_WriteString
           _LCD_WriteChar
             _LCD_WaitNotBusy
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     ___fladd
       ___fldiv (ARG)
     ___fldiv
     ___flmul
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       _frexp (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fleq (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
       _sqrt (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
     ___flsub
       ___fladd
         ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       _trunc (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
     ___fltol
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
     ___xxtofl
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
     _round
       ___fladd
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
         _sqrt (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       ___flsub (ARG)
         ___fladd
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _trunc (ARG)
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
           ___xxtofl
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _frexp
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fleq (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
       _trunc (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
     _sqrt
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
   _InitTankVariables
     ___flmul
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
       ___fltol (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
       ___xxtofl (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       _frexp (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fleq (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
       _sqrt (ARG)
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
     _pow
       ___fleq
         ___fladd (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
       ___flge
       ___flmul
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _frexp (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
         _sqrt (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       ___flneg
       ___fltol
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
       ___xxtofl
         ___fladd (ARG)
           ___fldiv (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
       _exp
         ___fldiv
         ___fleq
           ___fladd (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
         ___flge
         ___flmul
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fleq (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         ___flneg
         ___flsub
           ___fladd
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _trunc (ARG)
             ___fltol
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
             ___xxtofl
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
             _frexp
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fleq (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___fltol (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                     ___fldiv (ARG)
         ___fltol
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
         ___xxtofl
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _eval_poly
           ___fladd
             ___fldiv (ARG)
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fleq (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___fltol (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
         _floor
           ___fladd
             ___fldiv (ARG)
           ___flge
           ___fltol
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
           ___xxtofl
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _frexp
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fleq (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
         _ldexp
           ___fleq
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
           _eval_poly (ARG)
             ___fladd
               ___fldiv (ARG)
             ___flmul
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fleq (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___fltol (ARG)
                       ___fladd (ARG)
                         ___fldiv (ARG)
                       ___fldiv (ARG)
               _sqrt (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
         _log (ARG)
           ___fladd
             ___fldiv (ARG)
           ___fleq
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fleq (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___fltol (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           ___xxtofl
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _eval_poly
             ___fladd
               ___fldiv (ARG)
             ___flmul
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
               _frexp (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fleq (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___xxtofl (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                     ___fldiv (ARG)
                     ___fltol (ARG)
                       ___fladd (ARG)
                         ___fldiv (ARG)
                       ___fldiv (ARG)
               _sqrt (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
           _frexp
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fleq (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
       _log
         ___fladd
           ___fldiv (ARG)
         ___fleq
           ___fladd (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
         ___flmul
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
           ___xxtofl (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
           _frexp (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fleq (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___xxtofl (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
                 ___fltol (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
           _sqrt (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         ___xxtofl
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
         _eval_poly
           ___fladd
             ___fldiv (ARG)
           ___flmul
             ___fladd (ARG)
               ___fldiv (ARG)
             ___fldiv (ARG)
             ___fltol (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
             _frexp (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fleq (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___xxtofl (ARG)
                   ___fladd (ARG)
                     ___fldiv (ARG)
                   ___fldiv (ARG)
                   ___fltol (ARG)
                     ___fladd (ARG)
                       ___fldiv (ARG)
                     ___fldiv (ARG)
             _sqrt (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
         _frexp
           ___fladd (ARG)
             ___fldiv (ARG)
           ___fleq (ARG)
             ___fladd (ARG)
               ___fldiv (ARG)
             ___xxtofl (ARG)
               ___fladd (ARG)
                 ___fldiv (ARG)
               ___fldiv (ARG)
               ___fltol (ARG)
                 ___fladd (ARG)
                   ___fldiv (ARG)
                 ___fldiv (ARG)
     _sqrt
       ___fladd (ARG)
         ___fldiv (ARG)
       ___fldiv (ARG)
   _LCD_Init
     _LCD_WriteCmd
       _LCD_WaitNotBusy
   _LCD_WriteString
     _LCD_WriteChar
       _LCD_WaitNotBusy
   _StartDepthDetection
     _CCP1_Activate
   _SysInit
     _OscInit
     _PIN_MANAGER_Initialize
   _Timer0_Init
   _Timer1_Init
   _Timer2_Init
   _Timer3_Init

 _INTERRUPT_InterruptManager (ROOT)
   _AN0_ISR
   _CCP1_ISR
     _Timer1_Reset
   _Timer0_ISR
     _CaptureTemp
   _Timer2_ISR
   _Timer3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EE       7       93.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     51      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1E9      20        0.0%
DATA                 0      0     1E9       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Jun 02 06:14:04 2021

                       ___fldiv@aexp 0019                         ___fldiv@bexp 0018  
                 __size_of_CCP1_Init 0012                         ___fldiv@sign 0011  
                 __size_of_CCP2_Init 0012                  __end_of_CaptureTemp 3D04  
                ___wmul@multiplicand 0003                                  l104 3CEE  
                                l107 3CF8                                  l186 3C42  
                                l266 3C68                                  l338 3C16  
                                l630 3CB0                                  l703 3C9E  
                                l455 2D84                                  l800 3A34  
                                l802 3A36                                  l474 317C  
                                l811 39DE                                  l636 3C8C  
                                l813 39E0                                  l806 3A84  
                                l830 37EC                                  l559 3B06  
                      ??_ComputeTemp 0087                                  l817 3A2E  
                                l809 39DC                                  l860 3BD6  
                                l861 3BD8                                  l853 3BBE  
                                l862 3BDA                                  l855 3BC0  
                                l847 3980                                  l839 33C6  
                                l935 3C7A                                  l792 39D8  
                                l857 3BC8                                  l858 3BC6  
                                l795 36FC                                  l798 3A32  
                                _PR2 000FCB                                  _exp 1F08  
                                _log 284C                      __end_of_AN0_ISR 3C30  
                                _pow 21F0                                  wreg 000FE8  
                  ??_LCD_WriteString 0006                         ___flmul@aexp 0069  
                       ___flmul@bexp 006A                         ___flmul@sign 0064  
                       ___flmul@temp 006F                         ___flmul@prod 006B  
                       ___fltol@exp1 0033                                 l1032 3CBE  
                               l1041 2696                                 l1211 3B96  
                               l1142 3C56                                 l1208 1534  
                               l1152 1BEA                                 l1500 2E90  
                               l1156 3490                                 l1157 352E  
                               l4000 0E5A                                 l4010 0EAC  
                               l4002 0E70                                 l1179 132A  
                               l1700 38BC                                 l4020 0EF2  
                               l4012 0EBA                                 l4004 0E7C  
                               l4100 2F3C                                 l4030 0F60  
                               l4022 0F0C                                 l4014 0EC6  
                               l4006 0E94                                 l4110 2DA2  
                               l4102 2F8C                                 l4040 0FF6  
                               l4032 0F8A                                 l4024 0F1C  
                               l4016 0ED6                                 l4008 0EA0  
                               l4200 3278                                 l4120 2DF2  
                               l4104 2F92                                 l1472 2F4E  
                               l1473 2F94                                 l4050 1036  
                               l4042 1004                                 l4034 0FC0  
                               l4026 0F38                                 l4018 0EE2  
                               l1466 35D8                                 l4210 32EE  
                               l4202 3288                                 l4130 2E1C  
                               l4122 2DF6                                 l4114 2DB6  
                               l5010 3C3A                                 l1707 38C4  
                               l4300 1634                                 l4060 10A8  
                               l4052 1064                                 l1820 1006  
                               l4044 1016                                 l4036 0FCE  
                               l4028 0F44                                 l4212 32F6  
                               l4140 2E44                                 l4132 2E26  
                               l4124 2E04                                 l4116 2DE0  
                               l4108 2D8C                                 l5100 25D8  
                               l4220 377E                                 l5004 3CE6  
                               l5012 3C3C                                 l5020 3BFA  
                               l1813 0E10                                 l1477 3B3E  
                               l4230 3A62                                 l4070 111E  
                               l1830 1136                                 l4062 10D2  
                               l1822 107E                                 l4046 1024  
                               l4038 0FEC                                 l4214 32F8  
                               l4206 329C                                 l4142 2E50  
                               l4134 2E30                                 l4118 2DE2  
                               l5102 2654                                 l4222 37AE  
                               l5110 3C48                                 l5006 3C30  
                               l5014 3C58                                 l5030 3C12  
                               l5022 3C00                                 l1727 0A78  
                               l1823 106C                                 l4232 3A7E  
                               l4240 3B56                                 l4320 16B6  
                               l4312 166C                                 l4304 1648  
                               l4160 2714                                 l4152 269A  
                               l1744 0B92                                 l1736 0D48  
                               l1728 0A66                                 l4072 113A  
                               l4080 1160                                 l4056 108E  
                               l4064 10D6                                 l4048 1028  
                               l4208 32DE                                 l4144 2E60  
                               l5104 2678                                 l4224 37B0  
                               l4400 3B1E                                 l5040 39A0  
                               l5120 3C54                                 l5112 3C4A  
                               l5008 3C36                                 l5016 3C64  
                               l5032 3C14                                 l5024 3C04  
                               l1753 0C62                                 l1729 0A2C  
                               l1817 1174                                 l4234 3A80  
                               l4226 3A38                                 l4410 3808  
                               l1690 3858                                 l4250 3B8E  
                               l4242 3B66                                 l4330 16FC  
                               l4322 16BE                                 l4314 1686  
                               l4306 1658                                 l4170 276E  
                               l4154 26AA                                 l1754 0C50  
                               l4082 1164                                 l4074 114A  
                               l4066 10F0                                 l4058 109A  
                               l4146 2E70                                 l5106 2694  
                               l4218 3776                                 l1842 1F06  
                               l5130 1920                                 l5122 18D0  
                               l4402 3B2E                                 l4090 2ED0  
                               l5050 39CA                                 l5042 39A0  
                               l5034 3982                                 l5114 3C4C  
                               l5018 3C66                                 l5026 3C06  
                               l4228 3A3C                                 l4420 3842  
                               l4412 3810                                 l4244 3B6A  
                               l4236 3B42                                 l4340 1754  
                               l4332 171A                                 l4324 16CE  
                               l4316 1696                                 l4308 1658  
                               l4260 1552                                 l4180 27D2  
                               l4172 2770                                 l4164 2728  
                               l4156 26B8                                 l4076 1158  
                               l4068 1104                                 l4148 2E80  
                               l5140 1A84                                 l5132 19B0  
                               l5124 18D8                                 l4092 2EFE  
                               l4500 2A4C                                 l5060 347E  
                               l5052 39CA                                 l5044 39AE  
                               l5036 3992                                 l5116 3C4E  
                               l5108 3C44                                 l5028 3C08  
                               l1781 18CE                                 l1925 3308  
                               l1909 29E8                                 l5070 3CA0  
                               l4422 384A                                 l4414 3818  
                               l4406 37EE                                 l4430 3874  
                               l4238 3B46                                 l4510 1176  
                               l4350 1792                                 l4342 175A  
                               l4334 171C                                 l4326 16E2  
                               l4318 16A6                                 l4262 1562  
                               l4270 158C                                 l4254 1536  
                               l4190 282A                                 l4182 27F0  
                               l4174 277C                                 l4166 2730  
                               l4158 26FE                                 l4078 115A  
                               l1918 3088                                 l5150 1BB6  
                               l5142 1B50                                 l5134 1A08  
                               l5126 18DA                                 l4094 2F0E  
                               l4086 2E92                                 l4502 2A62  
                               l1950 243E                                 l5062 34A0  
                               l5054 347E                                 l5046 39AE  
                               l5038 3992                                 l5118 3C52  
                               l5230 2C78                                 l1783 172E  
                               l1919 3098                                 l5080 3CBA  
                               l5072 3CAC                                 l4424 384C  
                               l4416 3826                                 l4408 37F6  
                               l4440 38B0                                 l4432 387C  
                               l4248 3B72                                 l4600 1432  
                               l4520 11B4                                 l4512 1182  
                               l4360 17FC                                 l4352 1796  
                               l1792 1774                                 l4344 1764  
                               l4336 172C                                 l4328 16F0  
                               l4280 15B8                                 l4272 159C  
                               l4264 1572                                 l4256 1542  
                               l4192 2838                                 l4184 27F2  
                               l4176 27B8                                 l4168 273C  
                               l3800 098A                                 l5160 1BDC  
                               l5152 1BBC                                 l5144 1B74  
                               l5128 1910                                 l4096 2F1C  
                               l4088 2EC0                                 l4504 2A76  
                               l5064 34D4                                 l5048 39BC  
                               l5240 2CA4                                 l5232 2C7A  
                               l5224 2C64                                 l1697 3860  
                               l1881 2786                                 l1769 3ACC  
                               l1929 2C62                                 l1945 2264  
                               l5082 3CBC                                 l5074 3CAE  
                               l4426 3852                                 l4418 382C  
                               l4442 38B6                                 l4434 3884  
                               l4610 1474                                 l4602 143A  
                               l4530 1222                                 l4522 11D2  
                               l4514 1194                                 l5170 30BA  
                               l4370 185E                                 l4362 1808  
                               l4354 17A4                                 l1794 17EC  
                               l4346 1772                                 l4338 173E  
                               l1786 16F2                                 l4282 15C8  
                               l4290 15F2                                 l4274 15A2  
                               l4266 1582                                 l4258 1550  
                               l4194 283A                                 l4186 27F6  
                               l4178 27C4                                 l1874 26EE  
                               l3810 099E                                 l3802 098E  
                               l3730 355E                                 l5090 24E8  
                               l5162 1BE4                                 l5154 1BD4  
                               l5146 1B90                                 l5138 1A68  
                               l4098 2F2E                                 l4506 2AE2  
                               l4450 2B2C                                 l1946 244E  
                               l5066 3C6A                                 l5250 2CB8  
                               l5242 2CA8                                 l5234 2C88  
                               l5226 2C68                                 l1795 17DA  
                               l5076 3C8E                                 l4436 3892  
                               l4428 3862                                 l4620 14E4  
                               l4612 148A                                 l4604 144C  
                               l4540 127C                                 l4532 1244  
                               l4524 11DA                                 l4516 11A0  
                               l5180 30EE                                 l5172 30C2  
                               l4380 18BC                                 l4372 1874  
                               l4364 1816                                 l4356 17D2  
                               l4348 1784                                 l4292 1602  
                               l4284 15D8                                 l4276 15A8  
                               l4268 1584                                 l4188 281A  
                               l3900 0BE4                                 l3820 09B2  
                               l3812 09A2                                 l3804 0992  
                               l4444 2F96                                 l3740 35D6  
                               l3732 356E                                 l5092 251C  
                               l5084 2450                                 l5164 1BE8  
                               l5156 1BD6                                 l5148 1B9E  
                               l4452 2B5E                                 l4700 1F82  
                               l1964 21EE                                 l5068 3C6E  
                               l5260 2CC8                                 l5252 2CBC  
                               l5244 2CAC                                 l5236 2C96  
                               l5228 2C6C                                 l1877 284A  
                               l5078 3CB2                                 l3726 3BBC  
                               l4438 38A8                                 l4622 14F0  
                               l4614 1496                                 l4606 1458  
                               l4550 12BA                                 l4542 1280  
                               l4534 125A                                 l4526 11F6  
                               l4518 11A8                                 l5190 313E  
                               l5182 3100                                 l5174 30D4  
                               l5166 309A                                 l4382 18C2  
                               l4374 188E                                 l4366 1840  
                               l4294 1618                                 l4286 15E8  
                               l4278 15B6                                 l3910 0C10  
                               l3902 0BE6                                 l3830 09C6  
                               l3822 09B6                                 l3814 09A6  
                               l3806 0996                                 l4446 2FE0  
                               l3734 359C                                 l4198 3246  
                               l5094 2540                                 l5086 2458  
                               l3750 3A28                                 l5158 1BDA  
                               l4470 2C00                                 l4710 1FF0  
                               l5270 2CF8                                 l5262 2CDA  
                               l5254 2CC0                                 l5246 2CB0  
                               l5238 2CA0                                 l1983 367A  
                               l4640 396C                                 l4632 3928  
                               l4624 14F4                                 l4616 149A  
                               l4608 145C                                 l4552 12D8  
                               l4544 129E                                 l4536 1264  
                               l4528 121E                                 l4560 12F2  
                               l5192 3160                                 l5176 30D8  
                               l5184 3108                                 l5168 309E  
                               l4384 18C4                                 l4376 18AA  
                               l4368 1844                                 l4296 1628  
                               l4288 15EA                                 l1888 27E2  
                               l3920 0C48                                 l3904 0BF4  
                               l3912 0C12                                 l3840 0A24  
                               l3824 09BA                                 l3816 09AA  
                               l3808 099A                                 l3832 09CA  
                               l3760 08A6                                 l4448 3074  
                               l3736 35AC                                 l3728 3530  
                               l4392 3A86                                 l5096 2598  
                               l5088 245A                                 l3752 3A2A  
                               l3744 39E2                                 l1976 2B2A  
                               l4480 2C28                                 l4464 2BD4  
                               l4456 2B74                                 l1968 21DE  
                               l4720 2092                                 l4712 2006  
                               l4704 1FA0                                 l4800 3C8A  
                               l5280 2D1C                                 l5272 2CFC  
                               l5264 2CDE                                 l5256 2CC4  
                               l5248 2CB4                                 l1897 3B70  
                               l4634 3938                                 l4642 3970  
                               l4618 14A2                                 l4570 1362  
                               l4562 1338                                 l4554 12E0  
                               l4546 12B2                                 l4538 1270  
                               l4626 1506                                 l5194 3164  
                               l5186 3124                                 l5178 30EA  
                               l4378 18AE                                 l4298 1630  
                               l3930 0CC6                                 l3906 0BFC  
                               l3914 0C20                                 l3850 0A5A  
                               l3842 0A3A                                 l3834 09CE  
                               l3826 09BE                                 l3818 09AE  
                               l3762 08B6                                 l3770 08E0  
                               l3754 088A                                 l3738 35D0  
                               l4394 3A98                                 l5098 25BC  
                               l3746 39E6                                 l4650 3316  
                               l4810 36B8                                 l4802 367C  
                               l1978 2B1A                                 l4490 2A16  
                               l4482 2C52                                 l4466 2BEA  
                               l4458 2BB8                                 l4730 2190  
                               l4722 20AE                                 l4714 2016  
                               l4706 1FD2                                 l5290 2D6C  
                               l5282 2D2C                                 l5274 2D02  
                               l5266 2CE2                                 l5258 2CC6  
                               l4636 3948                                 l4564 1348  
                               l4572 136E                                 l4628 1528  
                               l4556 12EC                                 l4548 12B6  
                               l5196 3176                                 l5188 312E  
                               l3940 0D0C                                 l3924 0C72  
                               l3932 0CC8                                 l3916 0C24  
                               l3908 0C00                                 l3860 0AAA  
                               l3852 0A64                                 l3844 0A46  
                               l3836 09F8                                 l3828 09C2  
                               l3780 0910                                 l3772 08F0  
                               l3764 08C6                                 l3756 0896  
                               l4740 33E4                                 l4820 3656  
                               l3748 3A0C                                 l4652 3326  
                               l4660 337A                                 l4644 330A  
                               l4812 36C2                                 l4804 3686  
                               l4900 1E58                                 l4492 2A24  
                               l4476 2C14                                 l4468 2BF2  
                               l4724 20FA                                 l4716 203A  
                               l5292 2D7A                                 l5284 2D3A  
                               l5276 2D12                                 l5268 2CE6  
                               l1989 347C                                 l4638 395C  
                               l4590 13D4                                 l4582 13A0  
                               l4574 137E                                 l4566 1350  
                               l5198 317A                                 l3950 0D36  
                               l3942 0D1A                                 l3934 0CD8  
                               l3926 0C7E                                 l3918 0C32  
                               l3870 0AE6                                 l3862 0ABA  
                               l3854 0A86                                 l3846 0A4A  
                               l3838 0A14                                 l3790 0950  
                               l3782 091E                                 l3774 08F6  
                               l3766 08D6                                 l3758 08A4  
                               l4670 284C                                 l4750 3432  
                               l4742 33F4                                 l4662 338A  
                               l4654 3342                                 l4814 36FA  
                               l4806 36AA                                 l4910 1EEA  
                               l4902 1E92                                 l4830 1C08  
                               l4398 3B08                                 l4486 29EA  
                               l4734 21A6                                 l4726 214C  
                               l4718 206E                                 l5294 2D7E  
                               l5286 2D3C                                 l5278 2D16  
                               l4592 13E6                                 l4568 135E  
                               l4576 1386                                 l3952 0D38  
                               l3944 0D20                                 l3936 0CE8  
                               l3928 0C8C                                 l3880 0B2C  
                               l3872 0AF4                                 l3864 0AC8  
                               l3856 0A96                                 l3848 0A58  
                               l3792 0952                                 l3784 0920  
                               l3776 0908                                 l3768 08D8  
                               l3960 0D66                                 l4672 285C  
                               l4752 346C                                 l4816 35DA  
                               l4664 338E                                 l4656 3346  
                               l4808 36B6                                 l4912 1EF8  
                               l4904 1EA0                                 l4840 1C4C  
                               l4832 1C0E                                 l4824 1BEC  
                               l4496 2A38                                 l4488 2A06  
                               l4728 215E                                 l4760 3AE4  
                               l5288 2D4C                                 l4594 13FC  
                               l4586 13CE                                 l4578 138A  
                               l3946 0D22                                 l3938 0D08  
                               l3890 0BA8                                 l3882 0B60  
                               l3874 0AF6                                 l3866 0AD6  
                               l3786 0930                                 l3794 095A  
                               l3778 090A                                 l3970 0D9E  
                               l3962 0D68                                 l4682 28C8  
                               l4746 3408                                 l4738 33C8  
                               l4818 3622                                 l4666 33AA  
                               l4658 335A                                 l4914 1EFA  
                               l4906 1ECE                                 l4850 1C82  
                               l4834 1C26                                 l4826 1BF8  
                               l4922 21F0                                 l4770 3AF2  
                               l4762 3AE6                                 l4596 1402  
                               l3948 0D28                                 l3892 0BB8  
                               l3884 0B62                                 l3876 0B00  
                               l3868 0AE2                                 l3796 096A  
                               l3788 0940                                 l3980 0DCA  
                               l3972 0DAE                                 l3964 0D78  
                               l3956 0D4A                                 l4684 293C  
                               l4676 2878                                 l4748 341E  
                               l4668 33BA                                 l4916 1F00  
                               l4908 1EE6                                 l4852 1C92  
                               l4844 1C5C                                 l4836 1C38  
                               l4828 1C06                                 l4692 1F08  
                               l4940 22D2                                 l4932 227A  
                               l4924 21F6                                 l4780 3AFC  
                               l4772 3AF4                                 l4764 3AE8  
                               l4756 3ACE                                 ?_exp 0089  
                               ?_log 0081                                 l4598 1426  
                               l3886 0B72                                 l3878 0B06  
                               l3798 097C                                 l3990 0E20  
                               l3982 0DDA                                 l3974 0DB4  
                               l3966 0D88                                 l3958 0D58  
                               l4686 2944                                 l4678 28AA  
                               l4870 1CEE                                 l4854 1CA2  
                               l4862 1CC8                                 l4846 1C6E  
                               l4838 1C3A                                 l4694 1F3A  
                               l4942 233E                                 l4950 2388  
                               l4934 22AC                                 l4926 2228  
                               l4782 3AFE                                 l4774 3AF6  
                               l4766 3AEE                                 l4758 3AD6  
                               l3896 0BCC                                 l3888 0B82  
                               l3992 0E30                                 l3984 0DEA  
                               l3976 0DBA                                 l3968 0D98  
                               l4688 2978                                 l4880 1D56  
                               l4872 1D1C                                 l4864 1CDA  
                               l4856 1CAA                                 l4952 23AC  
                               l4928 225A                                 l4784 3B04  
                               l4776 3AF8                                 l4768 3AF0  
                               l3898 0BD6                                 l3986 0DFA  
                               l3978 0DC8                                 l4890 1DFA  
                               l4882 1D5E                                 l4874 1D2C  
                               l4858 1CB4                                 l4698 1F50  
                               l4954 23E0                                 l4946 235C  
                               l4938 22C2                                 l4786 3CF0  
                               l4778 3AFA                                 l3996 0E44  
                               l3988 0E00                                 l4892 1E04  
                               l4884 1D8C                                 l4876 1D3C  
                               l4956 2404                                 l4948 2364  
                               l4796 3C7C                                 l3998 0E50  
                               l4886 1DB0                                 l4894 1E06  
                               l4878 1D4C                                 l4958 2416  
                               l4798 3C88                                 l4896 1E16  
                               l4888 1DD0                                 l4898 1E40  
                               ?_pow 0094                                 STR_1 0879  
                               STR_2 0885                                 STR_3 0857  
                               STR_4 0868                                 u3000 2F3C  
                               u3001 2F38                                 u3010 2F8C  
                               u3011 2F88                                 u3100 26B8  
                               u2300 355E                                 u3020 2DA2  
                               u3101 26B4                                 u2301 355A  
                               u3021 2D9E                                 _LATA 000F89  
                               u3110 2714                                 u2310 359C  
                               u3030 2DD6                                 _LATB 000F8A  
                               u3111 2710                                 u2311 3598  
                               _LATC 000F8B                                 u3120 276A  
                               u2400 08B6                                 u2320 35D0  
                               u3200 32CC                                 u3040 2E04  
                               u4000 2002                                 u3121 2766  
                               u2401 08B2                                 u2321 35CC  
                               u3201 32C4                                 u3041 2E00  
                               u4001 1FFC                                 u3130 27B4  
                               u2410 08C6                                 u3050 2E18  
                               u3210 37AA                                 u4010 2004  
                               u3131 27B0                                 u2411 08C2  
                               u3051 2E14                                 u3035 2DCC  
                               u3300 3B56                                 u3140 27D2  
                               u2500 0A12                                 u2420 0908  
                               u3060 2E40                                 u2340 3A0A  
                               u3220 37DC                                 u4100 1C6E  
                               u4020 2016                                 u3301 3B52  
                               u3141 27CE                                 u2421 0904  
                               u3061 2E3C                                 u2341 3A04  
                               u4101 1C6A                                 u4021 2012  
                               u3310 3B66                                 u3150 27E2  
                               u2510 0A3A                                 u2430 091E  
                               u3070 2E60                                 u3230 37EC  
                               u4110 1C92                                 u4030 215E  
                               u3311 3B62                                 u3151 27DE  
                               u2511 0A36                                 u2431 091A  
                               u3071 2E5C                                 u2335 39EE  
                               u3231 37E8                                 u4111 1C8E  
                               u4031 215A                                 u3400 16CE  
                               u3320 1550                                 u3160 27F0  
                               u2600 0B72                                 u2520 0A58  
                               u2440 0930                                 u3208 32CE  
                               u3080 2E70                                 u4120 1CDA  
                               u4040 2190                                 u4200 22AC  
                               u3401 16CA                                 u3321 154C  
                               u3161 27EC                                 u2601 0B6E  
                               u2521 0A54                                 u2441 092C  
                               u3081 2E6C                                 u3217 37A0  
                               u4121 1CD6                                 u4041 218C  
                               u4201 22A8                                 u2290 3BD6  
                               u3250 3A60                                 u3410 16F0  
                               u3330 1562                                 u3170 282A  
                               u3090 26AA                                 u2610 0BA8  
                               u2530 0A78                                 u2450 0940  
                               u4050 33F4                                 u2370 3A26  
                               u4130 1D4C                                 u4210 22D2  
                               u2291 3BD2                                 u3251 3A5A  
                               u3411 16EC                                 u3331 155E  
                               u3171 2826                                 u3091 26A6  
                               u2611 0BA4                                 u2531 0A74  
                               u2451 093C                                 u4051 33F0  
                               u2371 3A20                                 u2355 3A0C  
                               u3227 37D2                                 u4131 1D48  
                               u4211 22CE                                 u4300 30BA  
                               u3500 17FC                                 u3420 171A  
                               u3340 1572                                 u3180 2838  
                               u2700 0C72                                 u2620 0BB8  
                               u2540 0A86                                 u2460 097C  
                               u4060 341E                                 u4140 1D8C  
                               u4220 233E                                 u3245 3A44  
                               u4301 30B6                                 u3501 17F8  
                               u3421 1716                                 u3341 156E  
                               u3181 2834                                 u2701 0C6E  
                               u2621 0BB4                                 u2541 0A82  
                               u2461 0978                                 u4061 341A  
                               u2365 3A14                                 u4141 1D88  
                               u4221 233A                                 u4310 30D4  
                               u3510 1816                                 u3430 173E  
                               u3350 15B6                                 u2710 0C8C  
                               u2630 0BE4                                 u2550 0A96  
                               u2470 098A                                 u2390 08A4  
                               u3190 3278                                 u4150 1E16  
                               u4070 1C06                                 u4230 2416  
                               u4311 30D0                                 u3511 1812  
                               u3431 173A                                 u3351 15B2  
                               u2711 0C88                                 u2631 0BE0  
                               u2551 0A92                                 u2471 0986  
                               u2391 08A0                                 u3191 3274  
                               u4151 1E12                                 u4071 1C02  
                               u4231 2412                                 u3280 3A7C  
                               u3600 3892                                 u4320 30EA  
                               u3520 185E                                 u3440 1754  
                               u3360 15C8                                 u2720 0CC6  
                               u2640 0BF4                                 u2560 0AC8  
                               u2480 09F8                                 u2800 0D88  
                               u4160 1EA0                                 u4080 1C38  
                               u3281 3A76                                 u3265 3A62  
                               u3601 388E                                 u4321 30E6  
                               u3521 185A                                 u3441 1750  
                               u3361 15C4                                 u2721 0CC2  
                               u2641 0BF0                                 u2561 0AC4  
                               u2481 09F4                                 u2801 0D84  
                               u2385 3A28                                 u4161 1E9C  
                               u4081 1C34                                 u3610 38A8  
                               u4330 3100                                 u3530 188E  
                               u3450 1772                                 u3370 15D8  
                               u2730 0CD8                                 u2650 0C10  
                               u2570 0AD6                                 u2490 0A10  
                               u2810 0DC8                                 u4170 1EF8  
                               u4090 1C4C                                 u3275 3A6A  
                               u3611 38A4                                 u4331 30FC  
                               u3531 188A                                 u3451 176E  
                               u3371 15D4                                 u2731 0CD4  
                               u2651 0C0C                                 u2571 0AD2  
                               u2491 0A0A                                 u2811 0DC4  
                               u4171 1EF4                                 u4091 1C48  
                               u4340 313E                                 u3540 18BC  
                               u3460 1792                                 u3380 1618  
                               u2740 0CE8                                 u2660 0C20  
                               u2580 0AF4                                 u2900 1064  
                               u2820 0DDA                                 u3620 3088  
                               u3700 2A62                                 u4180 2228  
                               u4500 2CF8                                 u4341 313A  
                               u3541 18B8                                 u3461 178E  
                               u3381 1614                                 u2741 0CE4  
                               u2661 0C1C                                 u2581 0AF0  
                               u2901 1060                                 u2821 0DD6  
                               u3621 3084                                 u3701 2A5E  
                               u4181 2224                                 u4501 2CF4  
                               u4350 3160                                 u3470 17A4  
                               u3390 1658                                 u2750 0D08  
                               u2670 0C32                                 u2590 0B2C  
                               u2910 107A                                 u2830 0DEA  
                               u4270 1B9E                                 u3550 3B1E  
                               u3710 2AE2                                 u3630 2B5E  
                               u4190 225A                                 u4510 2D12  
                               u3295 3A7E                                 u4351 315C  
                               u3471 17A0                                 u3391 1654  
                               u2751 0D04                                 u2671 0C2E  
                               u2591 0B28                                 u2911 1076  
                               u2831 0DE6                                 u4271 1B9A  
                               u3551 3B1A                                 u3711 2ADE  
                               u3631 2B5A                                 u4191 2256  
                               u4511 2D0E                                 u3560 3808  
                               u3800 139C                                 u3720 1194  
                               u4360 3176                                 u3480 17D2  
                               u2760 0D1A                                 u2680 0C48  
                               u2920 108E                                 u2840 0E20  
                               u4280 1BB6                                 u3640 2B9E  
                               u4520 2D2C                                 u3561 3804  
                               u3801 1398                                 u3721 1190  
                               u4361 3172                                 u3481 17CE  
                               u2761 0D16                                 u2681 0C44  
                               u2921 108A                                 u2841 0E1C  
                               u4281 1BB2                                 u3641 2B96  
                               u4521 2D28                                 u3570 3826  
                               u3810 13CA                                 u3730 11D2  
                               u3490 17E8                                 u2770 0D36  
                               u2690 0C5E                                 u2930 10A8  
                               u2850 0E30                                 u4290 1BD4  
                               u3650 2BB8                                 u4530 2D3A  
                               u3571 3822                                 u3811 13C6  
                               u3731 11CE                                 u3491 17E4  
                               u2771 0D32                                 u2691 0C5A  
                               u2931 10A4                                 u2851 0E2C  
                               u4291 1BD0                                 u3651 2BB4  
                               u4531 2D36                                 u3900 3938  
                               u3580 3842                                 u3820 13E6  
                               u3740 1240                                 u2940 10F0  
                               u2860 0FAA                                 u2780 0D66  
                               u3660 2BEA                                 u4540 2D6C  
                               u3901 3934                                 u3581 383E  
                               u3821 13E2                                 u3741 123C  
                               u2941 10EC                                 u2781 0D62  
                               u3661 2BE6                                 u4541 2D68  
                               u3910 3948                                 u3590 3874  
                               u3830 13FC                                 u3750 125A  
                               u2950 111E                                 u2870 1004  
                               u2790 0D78                                 u3670 2C00  
                               u4550 2D7A                                 u3911 3944  
                               u3591 3870                                 u3831 13F8  
                               u3751 1256                                 u2951 111A  
                               u2871 1000                                 u2791 0D74  
                               u3671 2BFC                                 u4551 2D76  
                               u3840 1426                                 u3760 129A  
                               u2960 1158                                 u2880 1024  
                               u3920 3326                                 u3680 2A16  
                               u3648 2BA2                                 u4480 2C88  
                               u3841 1422                                 u3761 1296  
                               u2961 1154                                 u2881 1020  
                               u2865 0FA0                                 u3921 3322  
                               u3681 2A12                                 u4481 2C84  
                               u3850 144C                                 u3770 12D4  
                               u2890 1036                                 u3930 3342  
                               u2970 2EC0                                 u3690 2A24  
                               u4490 2CDA                                 u3851 1448  
                               u3771 12D0                                 u2891 1032  
                               u3931 333E                                 u2971 2EBC  
                               u3691 2A20                                 u4491 2CD6  
                               u3860 1474                                 u3780 1338  
                               u3940 33AA                                 u2980 2EFE  
                               u3861 1470                                 u3781 1334  
                               u3941 33A6                                 u2981 2EFA  
                               u3870 148A                                 u3790 135E  
                               u3950 285C                                 u2990 2F1C  
                               u3871 1486                                 u3791 135A  
                               u3951 2858                                 u2991 2F18  
                               u3880 1506                                 u3960 28AA  
                               u3881 1502                                 u3961 28A6  
                               u4577 3988                                 u3890 1528  
                               u3970 1F3A                                 u3891 1524  
                               u3971 1F36                                 u3980 1F82  
                               u3981 1F7E                                 u3990 1FD2  
                               u3991 1FCE                                 i2l81 31A4  
                               i2l84 31D6                                 i2l93 3242  
                               i2l86 31FA                                 i2l87 3242  
                               _UCFG 000F6F                                 i2l88 321E  
                               _UCON 000F6D                                 _TMR2 000FCC  
                _StartDepthDetection 3C44                                 _main 2C64  
                   __end_of_CCP1_ISR 3BBC                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 indf1 000FE7  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 btemp 005F  
                               _sqrt 1BEC                                 exp@x 0089  
                               log@x 0081                     __end_of_AN0_Init 3CC0  
                               pow@x 0094                                 pow@y 0098  
                               prodh 000FF4                                 prodl 000FF3  
                               start 000E                      ___fldiv@new_exp 0012  
                      ?_LCD_WriteCmd 0001                        _LCD_WriteChar 39DA  
                      _LCD_WriteLine 330A                         ___param_bank 000000  
                    __end_of_OscInit 3CFA                                ??_exp 005E  
                              ??_log 005E                                ??_pow 005E  
                   __end_of_LCD_GoTo 3982                     __end_of_LCD_Init 39DA  
               ?_StartDepthDetection 0001                        ___fltol@sign1 0032  
                    __end_of___fladd 0D4A                                ?_main 0001  
                    __end_of___fldiv 18D0                      __end_of___flneg 3B40  
                    __end_of_SysInit 3CF0                      __end_of___flmul 1176  
                    __end_of___flsub 3ACE                      __end_of___fltol 2E92  
                              ?_sqrt 002A                                _T0CON 000FD5  
                              _T1CON 000FCD                                _T2CON 000FCA  
                              _LATC6 007C5E                                _LATC7 007C5F  
                    __end_of___lwdiv 3862                      __end_of___lwmod 38C6  
                              i2l263 3CD8                                i2l335 3CCC  
                              i2l192 3924                                i2l633 3BBA  
                              i2l938 3CE4                                _TMR0H 000FD7  
                              _TMR1H 000FCF                                _TMR0L 000FD6  
                              _TMR3H 000FB3                                _TMR1L 000FCE  
                              _TMR3L 000FB2                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                       LCD_GoTo@iPos 000B           __end_of_LCD_DisplayResults 36FE  
             __size_of_CCP1_Activate 0012                                _giDay 00F8  
                    __end_of_dpowers 080B                                _floor 29EA  
                              _ldexp 2B2C                                _frexp 3246  
                              _errno 00CD                  __end_of_ComputeTemp 2698  
                    __end_of_isdigit 3B72                    __end_of_CCP1_Init 3CB2  
                              _round 35DA                    __end_of_CCP2_Init 3CA0  
                              _trunc 33C8                           _ComputeTOD 309A  
                              tablat 000FF5                                pow@yi 00A5  
                    _LCD_WaitNotBusy 3BBC                                ttemp5 0060  
                              sqrt@a 002A                                ttemp6 0063  
                              ttemp7 0067                                sqrt@i 0033  
                              sqrt@p 0038                                status 000FD8  
                              wtemp8 0060                      __end_of_sprintf 1536  
                        _CaptureTemp 3CFA                          exp@exponent 0091  
                     ??_LCD_WriteCmd 0003                       ?_LCD_WriteChar 0001  
                     ?_LCD_WriteLine 0009                          ldexp@newexp 0085  
                    __initialization 36FE                          log@exponent 0085  
                       __end_of_main 2D8C                         __end_of_sqrt 1F08  
              ??_StartDepthDetection 0001                            ??_AN0_ISR 0001  
        ?_INTERRUPT_InterruptManager 0001                               ??_main 00AD  
                             ??_sqrt 002E                        __activetblptr 000002  
                   _ComputeTemp$2924 0089                     _ComputeTemp$2925 008D  
                   _ComputeTemp$2926 0091                 LCD_WriteString@iData 0004  
                      _gfDefault_SOS 0100                               _ADCON0 000FC2  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             ?_floor 0056                               ?_ldexp 0081  
                             ?_frexp 004E                               _ADRESH 000FC4  
                             _ADRESL 000FC3                               _CCPR1H 000FBF  
                             _CCPR2H 000FBC                               _CCPR1L 000FBE  
                             _CCPR2L 000FBB                         _gb_Temp_Done 00EA  
                             ?_round 0071                               ?_trunc 0056  
                             i2l1035 3C2E                               i2l1038 3D02  
                             i2l5000 3C28                               i2l5002 3C2A  
                             i2l5200 3180                               i2l5210 31CE  
                             i2l5202 318E                               i2l3372 3CC0  
                             i2l5220 322C                               i2l5212 31E4  
                             i2l5204 319C                               i2l3374 3CC2  
                             i2l5222 323A                               i2l5214 31F2  
                             i2l5206 31B2                               i2l3392 3CCE  
                             i2l3376 3CCA                               i2l5216 3208  
                             i2l5208 31C0                               i2l3394 3CD0  
                             i2l5218 3216                               i2l3396 3CD4  
                             i2l3398 3CD6                               i2l4790 3D00  
                             i2l4792 3CDA                               i2l4794 3CDC  
                             i2l4970 38E0                               i2l4962 38C6  
                             i2l4788 3CFA                               i2l4980 3918  
                             i2l4972 38E2                               i2l4964 38CC  
                             i2l4990 3BAE                               i2l4974 38F6  
                             i2l4966 38D0                               i2l4992 3BB0  
                             i2l4984 3B98                               i2l4976 38FA  
                             i2l4968 38D2                               i2l4994 3BB4  
                             i2l4986 3BA0                               i2l4978 38FE  
                             i2l4996 3C18                               i2l4988 3BAC  
                             i2l4998 3C20                               _OSCCON 000FD3  
                   __end_of___xxtofl 284C                        LCD_GoTo@iLine 000C  
                      ??_Timer0_Init 0001                    _InitTankVariables 347E  
                      ??_Timer1_Init 0001                        ??_Timer2_Init 0001  
                          ??_OscInit 0001                        ??_Timer3_Init 0001  
                         _Timer0_ISR 38C6                           _Timer2_ISR 3CCE  
                         _Timer3_ISR 3CC0                     LCD_WriteCmd@iCmd 0005  
                      _CCP1_Activate 3C7C                   ?_InitTankVariables 0001  
                             ___flge 2E92                               ___fleq 3530  
                             _giGals 00D9                            ??___fladd 0022  
                             ___wmul 3B72                            ??___fldiv 0009  
                          ??___flneg 0005                            ??_SysInit 0001  
                             _giMins 00E7                               _giSecs 00E8  
                          ??___flmul 0060                            ??___flsub 005A  
                          ??___fltol 002E             __size_of_ComputeWaterVol 031C  
                             _giYear 00F7                               _sLine1 016C  
                             _sLine2 0108                            ??___lwdiv 0005  
                          ??___lwmod 000C                               clear_0 3756  
                             clear_1 3762                  ??_InitTankVariables 005E  
                             floor@i 0060                               floor@x 0056  
                        _ComputeTemp 2450                            ?_CCP1_ISR 0001  
                       __pdataCOMRAM 005E                            ??_isdigit 0001  
                          ?_AN0_Init 0001                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8              __end_of_LCD_WaitNotBusy 3BDC  
                  _giBacklight_Timer 00D1                               round@f 0075  
                             round@x 0071                            ??_sprintf 0017  
                             trunc@i 0060                               trunc@x 0056  
                        ?_ComputeTOD 0001                           ___flge@ff1 0001  
                         ___flge@ff2 0005                         ___xxtofl@arg 003E  
                   __end_ofexp@coeff 0833                         ___xxtofl@exp 003D  
                       ___xxtofl@val 0034                           ___fleq@ff1 0042  
                         ___fleq@ff2 0046                     __end_oflog@coeff 0857  
                         __accesstop 0060              __end_of__initialization 3768  
                          ?_LCD_GoTo 0006                 _ComputeWaterVol$2927 008D  
                          ?_LCD_Init 0001                           ___flneg@f1 0001  
          __end_of_InitTankVariables 3530                      ??_LCD_WriteChar 0001  
                    ??_LCD_WriteLine 000B                         eval_poly@res 007D  
                      ___rparam_used 000001                           ___fltol@f1 002A  
                 ComputeTOD@bIncDays 0029                       ?_CCP1_Activate 0001  
                      _giEchoCounter 00DF                       __pcstackCOMRAM 0001  
                         _gfAirTempC 00C9                         __pidataBANK0 3D04  
                       __pidataBANK1 3BDC                      _LCD_WriteString 3776  
                      __end_of_floor 2B2C                        __end_of_ldexp 2C64  
                   _gfTankGalsPer_mm 00B5                        __end_of_frexp 330A  
                __end_of_Timer0_Init 3C44                  __end_of_Timer1_Init 3C7C  
                      __end_of_round 367C                  __end_of_Timer2_Init 3C6A  
                      __end_of_trunc 347E                  __end_of_Timer3_Init 3C18  
                         _gfLnRRatio 00EE                           _giAirTempC 00DD  
                         _giAirTempF 00DB                           ??_CCP1_ISR 0001  
                         ??_AN0_Init 0001                 __end_of_LCD_WriteCmd 3A86  
         ComputeWaterVol@d_mmPerTick 0091                              ??_floor 005A  
                            ??_ldexp 0087                              ??_frexp 0054  
                       sprintf@width 0025                           _gi_SW_Time 00E1  
                            ??_round 005E                              ??_trunc 005A  
                         __pbssBANK0 00B1                           __pbssBANK1 0100  
                 __size_of_eval_poly 0104                           ??_LCD_GoTo 0007  
                         ??_LCD_Init 0006                        ?_Timer1_Reset 0001  
                        ?_Timer0_ISR 0001                          ?_Timer2_ISR 0001  
                        ?_Timer3_ISR 0001                              ?___flge 0001  
                            ?___fleq 0042                              ?___wmul 0001  
                            _CCP1CON 000FBD                              _CCP2CON 000FBA  
                         _gsCurrDate 01E5                              _AN0_ISR 3C18  
                         _gsCurrTime 01DC                  __size_of_ComputeTOD 00E4  
                  ??_ComputeWaterVol 0079                            ?___xxtofl 0034  
                            _OSCTUNE 000F9B                     ?_LCD_WaitNotBusy 0001  
                    _gb_TempCaptured 00E9                        _gb_UpdateTime 00ED  
         __size_of_InitTankVariables 00B2                   _LCD_DisplayResults 367C  
                          _CCP1_Init 3CA0                            _CCP2_Init 3C8E  
                    ??_CCP1_Activate 0001                       ??_Timer1_Reset 0001  
                       ?_CaptureTemp 0001              __end_of_LCD_WriteString 37EE  
                            _OscInit 3CF0                              __Hparam 0000  
                        _Timer0_Init 3C30                          _Timer1_Init 3C6A  
                        _Timer2_Init 3C58                              __Lparam 0000  
                        _Timer3_Init 3BFA                  ?_LCD_DisplayResults 0001  
                    __size_of___flge 0104                      __size_of___fleq 00AA  
                            ___fladd 088A                              ___fldiv 1536  
                            ___flneg 3B08                              _SysInit 3CE6  
                            ___flmul 0D4A                              ___flsub 3A86  
                            ___fltol 2D8C               LCD_WriteLine@bInString 001C  
                    __size_of___wmul 0026                              ___lwdiv 37EE  
                            ___lwmod 3862                         __psmallconst 0800  
                            _gd_Temp 0104                              _giHours 00E6  
                            _giMonth 005E                              __pcinit 36FE  
                  __end_of_eval_poly 309A                              __ramtop 0800  
                            __ptext0 2C64                              __ptext1 3BFA  
                            __ptext2 3C58                              __ptext3 3C6A  
                            __ptext4 3C30                              __ptext5 3CE6  
                            __ptext6 3ACE                              __ptext7 3CF0  
                            __ptext8 3C44                              __ptext9 3C7C  
                          _T1CONbits 000FCD                              _dpowers 0801  
                          _T2CONbits 000FCA                         __size_of_exp 02E8  
                       __size_of_log 019E                              _isdigit 3B40  
                       __size_of_pow 0260                           ??___xxtofl 0038  
                          _T3CONbits 000FB1             ??_PIN_MANAGER_Initialize 0001  
                __size_of_Timer0_ISR 0060                  __size_of_Timer2_ISR 000C  
                __size_of_Timer3_ISR 000E                 ??_LCD_DisplayResults 0028  
                            _sprintf 1176                       __pintcode_body 317E  
               end_of_initialization 3768                              exp@sign 0093  
                      __Lmediumconst 0000                              int_func 317E  
                         ?_CCP1_Init 0001                           ?_CCP2_Init 0001  
        __end_of_StartDepthDetection 3C58                              pow@sign 00A4  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
                            sqrt@grs 0039                              sqrt@exp 003D  
              __size_of_LCD_WriteCmd 0056                            _PORTCbits 000F82  
                       ?_ComputeTemp 0001                          ___fladd@grs 0029  
                      ___xxtofl@sign 003C                            _TRISAbits 000F92  
                          _TRISCbits 000F94                    __size_of_CCP1_ISR 0024  
                        ___fldiv@grs 0014                          ___fldiv@rem 000D  
                  __size_of_AN0_Init 000E                     LCD_GoTo@iCharPos 0006  
                       ??_ComputeTOD 0028                        _giPercentFull 00D7  
     ComputeWaterVol@dWaterHeight_mm 0095                          ___flmul@grs 0065  
                  LCD_WriteString@ix 0008                          _CCP2CONbits 000FBA  
                  __size_of_LCD_GoTo 005C                     ?_LCD_WriteString 0004  
                  __size_of_LCD_Init 0058                         _LCD_WriteCmd 3A30  
                     __end_of___flge 2F96                       __end_of___fleq 35DA  
                     __end_of___wmul 3B98                        __pidataCOMRAM 3D0D  
                      _giMonthEndTbl 01D0                        _giTempCapture 00F2  
                 __end_of_ComputeTOD 317E                  ComputeWaterVol@dSOS 0089  
                         floor@expon 0064                 __end_of_Timer1_Reset 3CE6  
      ComputeWaterVol@dEmptySpace_mm 0099                  start_initialization 36FE  
                        _iSampleCntr 00E4                           eval_poly@d 0075  
                         eval_poly@n 0077                           eval_poly@x 0071  
                         ldexp@value 0081      __size_of_PIN_MANAGER_Initialize 003A  
                        __end_of_exp 21F0                          __end_of_log 29EA  
                        __end_of_pow 2450                           frexp@value 004E  
                        ??_CCP1_Init 0001                          ??_CCP2_Init 0001  
                      _Timer0_Reload 00F4                            _iTOD_Cntr 00CF  
              __end_of_LCD_WriteChar 3A30                         ??_Timer0_ISR 0001  
              __end_of_LCD_WriteLine 33C8                         ??_Timer2_ISR 0001  
                       ??_Timer3_ISR 0001                 __size_of_CaptureTemp 000A  
                    _ComputeWaterVol 18D0                             ??___flge 0009  
                           ??___fleq 004A                             ??___wmul 0005  
                        __pdataBANK0 00F4                          __pdataBANK1 01D0  
                           ?_AN0_ISR 0001                            ___fladd@a 001E  
                          ___fladd@b 001A                            ___fldiv@a 0005  
                          ___fldiv@b 0001                            ___flmul@a 005A  
                          ___flmul@b 0056                            ___flsub@a 006A  
                          ___flsub@b 0066                        __pcstackBANK0 0060  
                  __size_of___xxtofl 01B4                   __end_of_Timer0_ISR 3926  
                 __end_of_Timer2_ISR 3CDA                         _isdigit$2622 0002  
                 __end_of_Timer3_ISR 3CCE                          sprintf@flag 0022  
                        sprintf@prec 001D                             ?_OscInit 0001  
                       ?_Timer0_Init 0001                         ?_Timer1_Init 0001  
                       ?_Timer2_Init 0001                         ?_Timer3_Init 0001  
                   ___lwdiv@dividend 0001               _PIN_MANAGER_Initialize 3ACE  
                        _giTotalSecs 00D3                            __pintcode 0008  
                           ?___fladd 001A                             ?___fldiv 0001  
                           ?___flneg 0001                             ?_SysInit 0001  
                           ?___flmul 0056                             ?___flsub 0066  
                           ?___fltol 002A                             ?___lwdiv 0001  
                           ?___lwmod 0008         ??_INTERRUPT_InterruptManager 0001  
                        __smallconst 0800                             _CCP1_ISR 3B98  
                           ?_isdigit 0001                            _eval_poly 2F96  
                           _AN0_Init 3CB2                 __size_of_ComputeTemp 0248  
                   ___lwdiv@quotient 0005                             ?_sprintf 000D  
                     __size_of_floor 0142                       __size_of_ldexp 0138  
                     __size_of_frexp 00C4                       __size_of_round 00A2  
                     __size_of_trunc 00B6                             _LCD_GoTo 3926  
                           _LCD_Init 3982              __end_of_ComputeWaterVol 1BEC  
                     ___wmul@product 0005                             _LATAbits 000F89  
                           _LATBbits 000F8A                             _LATCbits 000F8B  
           __size_of_LCD_WaitNotBusy 0020                             _PIE1bits 000F9D  
                           _PIE2bits 000FA0                      _giEmptySpace_mm 00D5  
              __end_of_CCP1_Activate 3C8E  __size_of_INTERRUPT_InterruptManager 323E  
                           i2u424_40 38E0                             i2u440_40 31C0  
                           i2u424_41 38DC                             i2u440_41 31BC  
                           i2u425_40 38F6                             i2u441_40 31CE  
                           i2u425_41 38F2                             i2u441_41 31CA  
                           _PIR1bits 000F9E                             i2u426_40 3918  
                           i2u442_40 31E4                             i2u426_41 3914  
                           i2u442_41 31E0                             i2u443_40 31F2  
                           i2u443_41 31EE                             _PIR2bits 000FA1  
                           i2u444_40 3208                             i2u444_41 3204  
                           i2u445_40 3216                             i2u437_40 318E  
                           i2u445_41 3212                             i2u437_41 318A  
                           i2u446_40 322C                             i2u438_40 319C  
                           i2u446_41 3228                             i2u438_41 3198  
                           i2u447_40 323A                             i2u439_40 31B2  
                           i2u447_41 3236                             i2u439_41 31AE  
                           _UCFGbits 000F6F             ComputeWaterVol@dCurrTemp 0081  
              __size_of_Timer1_Reset 000C                          _gsTotalSecs 00F9  
                   __size_of_AN0_ISR 0018                           _ADCON0bits 000FC2  
                  ___wmul@multiplier 0001             ComputeWaterVol@dWaterVol 0085  
                  _gfSensorHeight_mm 00B9                           ?_eval_poly 0071  
        __size_of_LCD_DisplayResults 0082                          _INTCON2bits 000FF1  
                          copy_data0 3712                            copy_data1 3732  
                   _gb_Temp_Captured 00EB                      _gb_EchoDetected 00EC  
                          frexp@eptr 0052                             _bIncDays 00E5  
                           __Hrparam 0000                         _Timer1_Reset 3CDA  
                 LCD_WriteCmd@iDelay 0001                     __size_of_OscInit 000A  
                           __Lrparam 0000                       LCD_WriteLine@i 001D  
                 LCD_WriteChar@iChar 0003                     __size_of___fladd 04C0  
                   __size_of___fldiv 039A                     __size_of___flneg 0038  
                   __size_of_SysInit 000A                     __size_of___flmul 042C  
                   __size_of___flsub 0048                     __size_of___fltol 0106  
       __size_of_StartDepthDetection 0014                     __size_of___lwdiv 0074  
                   __size_of___lwmod 0064                   _gfTankSurfArea_mm2 00BD  
                           _gfRRatio 00C1                             _exp$2932 008D  
                         sprintf@len 0020                           sprintf@val 0023  
                           ___xxtofl 2698                             _gfRtherm 00C5  
                   __size_of_isdigit 0032                             _main$921 00AF  
                    ___lwdiv@divisor 0003                      ___lwdiv@counter 0007  
                           __ptext10 3982                             __ptext11 347E  
                           __ptext20 367C                             __ptext12 21F0  
                           __ptext21 330A                             __ptext13 1F08  
                           __ptext30 3246                             __ptext22 3776  
                           __ptext14 2B2C                             __ptext31 3530  
                           __ptext23 39DA                             __ptext15 29EA  
                           __ptext40 3B72                             __ptext32 2F96  
                           __ptext24 2450                             __ptext16 2E92  
                           __ptext41 3862                             __ptext33 0D4A  
                           __ptext25 35DA                             __ptext17 3B08  
                           __ptext50 3CC0                             __ptext42 37EE  
                           __ptext34 088A                             __ptext26 33C8  
                           __ptext18 18D0                             __ptext51 3CCE  
                           __ptext43 3926                             __ptext35 2698  
                           __ptext27 2D8C                             __ptext19 1BEC  
                           __ptext52 38C6                             __ptext44 3A30  
                           __ptext36 1536                             __ptext28 3A86  
                           __ptext53 3CFA                             __ptext45 3BBC  
                           __ptext37 309A                             __ptext29 284C  
                           __ptext54 3B98                             __ptext46 3C8E  
                           __ptext38 1176                             __ptext55 3CDA  
                           __ptext47 3CA0                             __ptext39 3B40  
                           __ptext56 3C18                             __ptext48 3CB2  
                           _pow$2930 009C                             _pow$2931 00A0  
                   __size_of_sprintf 03C0                           trunc@expon 0064  
                      __size_of_main 0128                     ?_ComputeWaterVol 0001  
                      __size_of_sqrt 031C                  _gfMaxWaterHeight_mm 00B1  
               __size_of_Timer0_Init 0014                 __size_of_Timer1_Init 0012  
                  ??_LCD_WaitNotBusy 0001                 __size_of_Timer2_Init 0012  
                           int$flags 005F                 __size_of_Timer3_Init 001E  
 __end_of_INTERRUPT_InterruptManager 3246           _INTERRUPT_InterruptManager 0008  
           __size_of_LCD_WriteString 0078                             exp@coeff 080B  
                           log@coeff 0833                           _INTCONbits 000FF2  
                        ??_eval_poly 0079                   LCD_WriteLine@iData 0009  
                           isdigit@c 0003                   LCD_WriteLine@sLine 000B  
                          sqrt@tfrac 0034                             intlevel2 0000  
                          sprintf@ap 001E                            sprintf@cp 001B  
                          sprintf@sp 000D                     ___lwmod@dividend 0008  
            ?_PIN_MANAGER_Initialize 0001                        ??_CaptureTemp 0001  
                     _gbBacklight_On 00E3                        _LCD_GoTo$1544 0009  
                _giBacklight_Timeout 00F6                             sqrt@frac 0043  
                           sqrt@sign 0032                             sqrt@root 003F  
                           sprintf@c 0027                             sprintf@f 000F  
                    ___lwmod@divisor 000A                      ___lwmod@counter 000C  
             __size_of_LCD_WriteChar 0056               __size_of_LCD_WriteLine 00BE  
                      ___fladd@signs 0026       __end_of_PIN_MANAGER_Initialize 3B08  
                       ___fladd@aexp 0027                         ___fladd@bexp 0028  
