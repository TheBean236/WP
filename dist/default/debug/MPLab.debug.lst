

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 27 11:01:57 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F2455
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    69                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    70                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    71  0000                     
    72                           ; Version 2.20
    73                           ; Generated 12/02/2020 GMT
    74                           ; 
    75                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC18F2455 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106  0000                     
   107                           	psect	idataCOMRAM
   108  003976                     __pidataCOMRAM:
   109                           	callstack 0
   110                           
   111                           ;initializer for _giMonth
   112  003976  04                 	db	4
   113                           
   114                           	psect	idataBANK0
   115  0038A0                     __pidataBANK0:
   116                           	callstack 0
   117                           
   118                           ;initializer for _gsCurrTime
   119  0038A0  30                 	db	48
   120  0038A1  31                 	db	49
   121  0038A2  3A                 	db	58
   122  0038A3  30                 	db	48
   123  0038A4  30                 	db	48
   124  0038A5  3A                 	db	58
   125  0038A6  30                 	db	48
   126  0038A7  30                 	db	48
   127  0038A8  00                 	db	0
   128                           
   129                           ;initializer for _gsCurrDate
   130  0038A9  30                 	db	48
   131  0038AA  31                 	db	49
   132  0038AB  2F                 	db	47
   133  0038AC  30                 	db	48
   134  0038AD  34                 	db	52
   135  0038AE  2F                 	db	47
   136  0038AF  32                 	db	50
   137  0038B0  31                 	db	49
   138  0038B1  00                 	db	0
   139                           
   140                           ;initializer for _Timer3_Reload
   141  0038B2  FB1D               	dw	64285
   142                           
   143                           ;initializer for _Timer0_Reload
   144  0038B4  D8EE               	dw	55534
   145                           
   146                           ;initializer for _giBacklight_Timeout
   147  0038B6  01                 	db	1
   148                           
   149                           ;initializer for _giYear
   150  0038B7  15                 	db	21
   151                           
   152                           ;initializer for _giDay
   153  0038B8  01                 	db	1
   154                           
   155                           ;initializer for _gsTotalSecs
   156  0038B9  2D                 	db	45
   157  0038BA  2D                 	db	45
   158  0038BB  2D                 	db	45
   159  0038BC  00                 	db	0
   160                           
   161                           	psect	idataBANK1
   162  00393E                     __pidataBANK1:
   163                           	callstack 0
   164                           
   165                           ;initializer for _giMonthEndTbl
   166  00393E  1F                 	db	31
   167  00393F  1C                 	db	28
   168  003940  1F                 	db	31
   169  003941  1E                 	db	30
   170  003942  1F                 	db	31
   171  003943  1E                 	db	30
   172  003944  1F                 	db	31
   173  003945  1F                 	db	31
   174  003946  1E                 	db	30
   175  003947  1F                 	db	31
   176  003948  1E                 	db	30
   177  003949  1F                 	db	31
   178                           
   179                           	psect	smallconst
   180  000800                     __psmallconst:
   181                           	callstack 0
   182  000800  00                 	db	0
   183  000801                     _dpowers:
   184                           	callstack 0
   185  000801  0001               	dw	1
   186  000803  000A               	dw	10
   187  000805  0064               	dw	100
   188  000807  03E8               	dw	1000
   189  000809  2710               	dw	10000
   190  00080B                     __end_of_dpowers:
   191                           	callstack 0
   192  00080B                     exp@coeff:
   193                           	callstack 0
   194  00080B  0000               	dw	0
   195  00080D  3F80               	dw	16256
   196  00080F  7218               	dw	29208
   197  000811  3F31               	dw	16177
   198  000813  FDF0               	dw	65008
   199  000815  3E75               	dw	15989
   200  000817  5847               	dw	22599
   201  000819  3D63               	dw	15715
   202  00081B  9558               	dw	38232
   203  00081D  3C1D               	dw	15389
   204  00081F  C482               	dw	50306
   205  000821  3AAE               	dw	15022
   206  000823  78A8               	dw	30888
   207  000825  3921               	dw	14625
   208  000827  93EF               	dw	37871
   209  000829  3780               	dw	14208
   210  00082B  92A0               	dw	37536
   211  00082D  35A7               	dw	13735
   212  00082F  5646               	dw	22086
   213  000831  3415               	dw	13333
   214  000833                     __end_ofexp@coeff:
   215                           	callstack 0
   216  000833                     log@coeff:
   217                           	callstack 0
   218  000833  0000               	dw	0
   219  000835  0000               	dw	0
   220  000837  FFC4               	dw	65476
   221  000839  3F7F               	dw	16255
   222  00083B  EF80               	dw	61312
   223  00083D  BEFF               	dw	48895
   224  00083F  E190               	dw	57744
   225  000841  3EA9               	dw	16041
   226  000843  82EC               	dw	33516
   227  000845  BE76               	dw	48758
   228  000847  AD82               	dw	44418
   229  000849  3E2B               	dw	15915
   230  00084B  3C0E               	dw	15374
   231  00084D  BDC3               	dw	48579
   232  00084F  D187               	dw	53639
   233  000851  3D13               	dw	15635
   234  000853  7841               	dw	30785
   235  000855  BBD3               	dw	48083
   236  000857                     __end_oflog@coeff:
   237                           	callstack 0
   238  0000                     _PORTBbits	set	3969
   239  0000                     _TRISBbits	set	3987
   240  0000                     _TRISC	set	3988
   241  0000                     _TRISB	set	3987
   242  0000                     _TRISA	set	3986
   243  0000                     _LATC	set	3979
   244  0000                     _LATB	set	3978
   245  0000                     _LATA	set	3977
   246  0000                     _PORTCbits	set	3970
   247  0000                     _LATAbits	set	3977
   248  0000                     _OSCTUNE	set	3995
   249  0000                     _LATC7	set	31839
   250  0000                     _LATC6	set	31838
   251  0000                     _TMR1L	set	4046
   252  0000                     _TMR1H	set	4047
   253  0000                     _T1CON	set	4045
   254  0000                     _CCPR2H	set	4028
   255  0000                     _CCP2CONbits	set	4026
   256  0000                     _CCPR2L	set	4027
   257  0000                     _CCP2CON	set	4026
   258  0000                     _CCPR1L	set	4030
   259  0000                     _CCPR1H	set	4031
   260  0000                     _CCP1CON	set	4029
   261  0000                     _ADCON2	set	4032
   262  0000                     _ADCON1	set	4033
   263  0000                     _T3CON	set	4017
   264  0000                     _TMR3L	set	4018
   265  0000                     _TMR3H	set	4019
   266  0000                     _T3CONbits	set	4017
   267  0000                     _T2CON	set	4042
   268  0000                     _PR2	set	4043
   269  0000                     _T1CONbits	set	4045
   270  0000                     _TMR2	set	4044
   271  0000                     _T2CONbits	set	4042
   272  0000                     _OSCCON	set	4051
   273  0000                     _PIR1bits	set	3998
   274  0000                     _PIE1bits	set	3997
   275  0000                     _PIR2bits	set	4001
   276  0000                     _PIE2bits	set	4000
   277  0000                     _T0CON	set	4053
   278  0000                     _TMR0L	set	4054
   279  0000                     _TMR0H	set	4055
   280  0000                     _INTCON2bits	set	4081
   281  0000                     _INTCONbits	set	4082
   282  000857                     STR_2:
   283  000857  47                 	db	71	;'G'
   284  000858  61                 	db	97	;'a'
   285  000859  6C                 	db	108	;'l'
   286  00085A  73                 	db	115	;'s'
   287  00085B  3A                 	db	58	;':'
   288  00085C  20                 	db	32
   289  00085D  25                 	db	37
   290  00085E  34                 	db	52	;'4'
   291  00085F  2E                 	db	46
   292  000860  30                 	db	48	;'0'
   293  000861  75                 	db	117	;'u'
   294  000862  20                 	db	32
   295  000863  25                 	db	37
   296  000864  33                 	db	51	;'3'
   297  000865  2E                 	db	46
   298  000866  31                 	db	49	;'1'
   299  000867  75                 	db	117	;'u'
   300  000868  25                 	db	37
   301  000869  25                 	db	37
   302  00086A  20                 	db	32
   303  00086B  00                 	db	0
   304  00086C                     STR_3:
   305  00086C  45                 	db	69	;'E'
   306  00086D  63                 	db	99	;'c'
   307  00086E  68                 	db	104	;'h'
   308  00086F  6F                 	db	111	;'o'
   309  000870  3A                 	db	58	;':'
   310  000871  20                 	db	32
   311  000872  25                 	db	37
   312  000873  34                 	db	52	;'4'
   313  000874  2E                 	db	46
   314  000875  30                 	db	48	;'0'
   315  000876  75                 	db	117	;'u'
   316  000877  20                 	db	32
   317  000878  00                 	db	0
   318  000879                     STR_1:
   319  000879  4C                 	db	76	;'L'
   320  00087A  6F                 	db	111	;'o'
   321  00087B  61                 	db	97	;'a'
   322  00087C  64                 	db	100	;'d'
   323  00087D  69                 	db	105	;'i'
   324  00087E  6E                 	db	110	;'n'
   325  00087F  67                 	db	103	;'g'
   326  000880  2E                 	db	46
   327  000881  2E                 	db	46
   328  000882  2E                 	db	46
   329  000883  20                 	db	32
   330  000884  00                 	db	0
   331  000885                     STR_4:
   332  000885  25                 	db	37
   333  000886  33                 	db	51	;'3'
   334  000887  69                 	db	105	;'i'
   335  000888  00                 	db	0
   336  000889  00                 	db	0	; dummy byte at the end
   337  0000                     
   338                           ; #config settings
   339                           
   340                           	psect	cinit
   341  0033DE                     __pcinit:
   342                           	callstack 0
   343  0033DE                     start_initialization:
   344                           	callstack 0
   345  0033DE                     __initialization:
   346                           	callstack 0
   347                           
   348                           ; Initialize objects allocated to BANK1 (12 bytes)
   349                           ; load TBLPTR registers with __pidataBANK1
   350  0033DE  0E3E               	movlw	low __pidataBANK1
   351  0033E0  6EF6               	movwf	tblptrl,c
   352  0033E2  0E39               	movlw	high __pidataBANK1
   353  0033E4  6EF7               	movwf	tblptrh,c
   354  0033E6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   355  0033E8  6EF8               	movwf	tblptru,c
   356  0033EA  EE01  F0C8         	lfsr	0,__pdataBANK1
   357  0033EE  EE10 F00C          	lfsr	1,12
   358  0033F2                     copy_data0:
   359  0033F2  0009               	tblrd		*+
   360  0033F4  CFF5 FFEE          	movff	tablat,postinc0
   361  0033F8  50E5               	movf	postdec1,w,c
   362  0033FA  50E1               	movf	fsr1l,w,c
   363  0033FC  E1FA               	bnz	copy_data0
   364                           
   365                           ; Initialize objects allocated to BANK0 (29 bytes)
   366                           ; load TBLPTR registers with __pidataBANK0
   367  0033FE  0EA0               	movlw	low __pidataBANK0
   368  003400  6EF6               	movwf	tblptrl,c
   369  003402  0E38               	movlw	high __pidataBANK0
   370  003404  6EF7               	movwf	tblptrh,c
   371  003406  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   372  003408  6EF8               	movwf	tblptru,c
   373  00340A  EE00  F0E1         	lfsr	0,__pdataBANK0
   374  00340E  EE10 F01D          	lfsr	1,29
   375  003412                     copy_data1:
   376  003412  0009               	tblrd		*+
   377  003414  CFF5 FFEE          	movff	tablat,postinc0
   378  003418  50E5               	movf	postdec1,w,c
   379  00341A  50E1               	movf	fsr1l,w,c
   380  00341C  E1FA               	bnz	copy_data1
   381                           
   382                           ; Initialize objects allocated to COMRAM (1 bytes)
   383                           ; load TBLPTR registers with __pidataCOMRAM
   384  00341E  0E76               	movlw	low __pidataCOMRAM
   385  003420  6EF6               	movwf	tblptrl,c
   386  003422  0E39               	movlw	high __pidataCOMRAM
   387  003424  6EF7               	movwf	tblptrh,c
   388  003426  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   389  003428  6EF8               	movwf	tblptru,c
   390  00342A  0009               	tblrd		*+	;fetch initializer
   391  00342C  CFF5 F05C          	movff	tablat,__pdataCOMRAM
   392                           
   393                           ; Clear objects allocated to BANK1 (200 bytes)
   394  003430  EE01  F000         	lfsr	0,__pbssBANK1
   395  003434  0EC8               	movlw	200
   396  003436                     clear_0:
   397  003436  6AEE               	clrf	postinc0,c
   398  003438  06E8               	decf	wreg,f,c
   399  00343A  E1FD               	bnz	clear_0
   400                           
   401                           ; Clear objects allocated to BANK0 (44 bytes)
   402  00343C  EE00  F0B5         	lfsr	0,__pbssBANK0
   403  003440  0E2C               	movlw	44
   404  003442                     clear_1:
   405  003442  6AEE               	clrf	postinc0,c
   406  003444  06E8               	decf	wreg,f,c
   407  003446  E1FD               	bnz	clear_1
   408                           
   409                           ; Clear objects allocated to COMRAM (1 bytes)
   410  003448  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   411  00344A                     end_of_initialization:
   412                           	callstack 0
   413  00344A                     __end_of__initialization:
   414                           	callstack 0
   415  00344A  905D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   416  00344C  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   417  00344E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   418  003450  6EF8               	movwf	tblptru,c
   419  003452  0100               	movlb	0
   420  003454  EFAF  F017         	goto	_main	;jump to C main() function
   421                           
   422                           	psect	bssCOMRAM
   423  00005B                     __pbssCOMRAM:
   424                           	callstack 0
   425  00005B                     _giSecs:
   426                           	callstack 0
   427  00005B                     	ds	1
   428                           
   429                           	psect	dataCOMRAM
   430  00005C                     __pdataCOMRAM:
   431                           	callstack 0
   432  00005C                     _giMonth:
   433                           	callstack 0
   434  00005C                     	ds	1
   435                           
   436                           	psect	bssBANK0
   437  0000B5                     __pbssBANK0:
   438                           	callstack 0
   439  0000B5                     _gd_Default_SOS:
   440                           	callstack 0
   441  0000B5                     	ds	4
   442  0000B9                     _gd_MaxWaterHeight_mm:
   443                           	callstack 0
   444  0000B9                     	ds	4
   445  0000BD                     _gd_TankGalsPer_mm:
   446                           	callstack 0
   447  0000BD                     	ds	4
   448  0000C1                     _gd_SensorHeight_mm:
   449                           	callstack 0
   450  0000C1                     	ds	4
   451  0000C5                     _gd_TankSurfArea_mm2:
   452                           	callstack 0
   453  0000C5                     	ds	4
   454  0000C9                     _gd_Temp:
   455                           	callstack 0
   456  0000C9                     	ds	4
   457  0000CD                     _errno:
   458                           	callstack 0
   459  0000CD                     	ds	2
   460  0000CF                     _Timer3_Cntr:
   461                           	callstack 0
   462  0000CF                     	ds	2
   463  0000D1                     _imSCntr:
   464                           	callstack 0
   465  0000D1                     	ds	2
   466  0000D3                     _giBacklight_Timer:
   467                           	callstack 0
   468  0000D3                     	ds	2
   469  0000D5                     _giTotalSecs:
   470                           	callstack 0
   471  0000D5                     	ds	2
   472  0000D7                     _giEchoCounter:
   473                           	callstack 0
   474  0000D7                     	ds	2
   475  0000D9                     _gbBacklight_On:
   476                           	callstack 0
   477  0000D9                     	ds	1
   478  0000DA                     _Timer3_Sampling:
   479                           	callstack 0
   480  0000DA                     	ds	1
   481  0000DB                     _iSampleCntr:
   482                           	callstack 0
   483  0000DB                     	ds	1
   484  0000DC                     _bIncDays:
   485                           	callstack 0
   486  0000DC                     	ds	1
   487  0000DD                     _giHours:
   488                           	callstack 0
   489  0000DD                     	ds	1
   490  0000DE                     _giMins:
   491                           	callstack 0
   492  0000DE                     	ds	1
   493  0000DF                     _gb_EchoDetected:
   494                           	callstack 0
   495  0000DF                     	ds	1
   496  0000E0                     _gb_UpdateTime:
   497                           	callstack 0
   498  0000E0                     	ds	1
   499                           
   500                           	psect	dataBANK0
   501  0000E1                     __pdataBANK0:
   502                           	callstack 0
   503  0000E1                     _gsCurrTime:
   504                           	callstack 0
   505  0000E1                     	ds	9
   506  0000EA                     _gsCurrDate:
   507                           	callstack 0
   508  0000EA                     	ds	9
   509  0000F3                     _Timer3_Reload:
   510                           	callstack 0
   511  0000F3                     	ds	2
   512  0000F5                     _Timer0_Reload:
   513                           	callstack 0
   514  0000F5                     	ds	2
   515  0000F7                     _giBacklight_Timeout:
   516                           	callstack 0
   517  0000F7                     	ds	1
   518  0000F8                     _giYear:
   519                           	callstack 0
   520  0000F8                     	ds	1
   521  0000F9                     _giDay:
   522                           	callstack 0
   523  0000F9                     	ds	1
   524  0000FA                     _gsTotalSecs:
   525                           	callstack 0
   526  0000FA                     	ds	4
   527                           
   528                           	psect	bssBANK1
   529  000100                     __pbssBANK1:
   530                           	callstack 0
   531  000100                     _sLine2:
   532                           	callstack 0
   533  000100                     	ds	100
   534  000164                     _sLine1:
   535                           	callstack 0
   536  000164                     	ds	100
   537                           
   538                           	psect	dataBANK1
   539  0001C8                     __pdataBANK1:
   540                           	callstack 0
   541  0001C8                     _giMonthEndTbl:
   542                           	callstack 0
   543  0001C8                     	ds	12
   544                           
   545                           	psect	cstackBANK0
   546  000060                     __pcstackBANK0:
   547                           	callstack 0
   548  000060                     ___flmul@sign:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x0
   552  000060                     	ds	1
   553  000061                     ___flmul@aexp:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x1
   557  000061                     	ds	1
   558  000062                     ___flmul@grs:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x2
   562  000062                     	ds	4
   563  000066                     ___flmul@bexp:
   564                           	callstack 0
   565                           
   566                           ; 1 bytes @ 0x6
   567  000066                     	ds	1
   568  000067                     ___flmul@prod:
   569                           	callstack 0
   570                           
   571                           ; 4 bytes @ 0x7
   572  000067                     	ds	4
   573  00006B                     ___flmul@temp:
   574                           	callstack 0
   575                           
   576                           ; 2 bytes @ 0xB
   577  00006B                     	ds	2
   578  00006D                     ??___fladd:
   579                           
   580                           ; 1 bytes @ 0xD
   581  00006D                     	ds	4
   582  000071                     ___fladd@signs:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x11
   586  000071                     	ds	1
   587  000072                     ___fladd@aexp:
   588                           	callstack 0
   589                           
   590                           ; 1 bytes @ 0x12
   591  000072                     	ds	1
   592  000073                     ___fladd@bexp:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x13
   596  000073                     	ds	1
   597  000074                     ___fladd@grs:
   598                           	callstack 0
   599                           
   600                           ; 1 bytes @ 0x14
   601  000074                     	ds	1
   602  000075                     ?___flsub:
   603                           	callstack 0
   604  000075                     ?_floor:
   605                           	callstack 0
   606  000075                     ?_eval_poly:
   607                           	callstack 0
   608  000075                     ___flsub@b:
   609                           	callstack 0
   610  000075                     eval_poly@x:
   611                           	callstack 0
   612  000075                     floor@x:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x15
   616  000075                     	ds	4
   617  000079                     eval_poly@d:
   618                           	callstack 0
   619  000079                     ___flsub@a:
   620                           	callstack 0
   621  000079                     floor@i:
   622                           	callstack 0
   623                           
   624                           ; 4 bytes @ 0x19
   625  000079                     	ds	2
   626  00007B                     eval_poly@n:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x1B
   630  00007B                     	ds	2
   631  00007D                     ??_ComputeWaterVol:
   632  00007D                     ??_eval_poly:
   633  00007D                     floor@expon:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x1D
   637  00007D                     	ds	4
   638  000081                     ComputeWaterVol@dCurrTemp:
   639                           	callstack 0
   640  000081                     eval_poly@res:
   641                           	callstack 0
   642                           
   643                           ; 4 bytes @ 0x21
   644  000081                     	ds	4
   645  000085                     ?_log:
   646                           	callstack 0
   647  000085                     ?_ldexp:
   648                           	callstack 0
   649  000085                     ComputeWaterVol@d_mmPerTick:
   650                           	callstack 0
   651  000085                     ldexp@value:
   652                           	callstack 0
   653  000085                     log@x:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x25
   657  000085                     	ds	4
   658  000089                     ldexp@newexp:
   659                           	callstack 0
   660  000089                     log@exponent:
   661                           	callstack 0
   662  000089                     ComputeWaterVol@dWaterVol:
   663                           	callstack 0
   664                           
   665                           ; 4 bytes @ 0x29
   666  000089                     	ds	2
   667  00008B                     ??_ldexp:
   668                           
   669                           ; 1 bytes @ 0x2B
   670  00008B                     	ds	2
   671  00008D                     ?_exp:
   672                           	callstack 0
   673  00008D                     ComputeWaterVol@iEmptySpace_mm:
   674                           	callstack 0
   675  00008D                     exp@x:
   676                           	callstack 0
   677                           
   678                           ; 4 bytes @ 0x2D
   679  00008D                     	ds	2
   680  00008F                     ComputeWaterVol@dSOS:
   681                           	callstack 0
   682                           
   683                           ; 4 bytes @ 0x2F
   684  00008F                     	ds	2
   685  000091                     _exp$2263:
   686                           	callstack 0
   687                           
   688                           ; 4 bytes @ 0x31
   689  000091                     	ds	2
   690  000093                     ComputeWaterVol@iGals:
   691                           	callstack 0
   692                           
   693                           ; 2 bytes @ 0x33
   694  000093                     	ds	2
   695  000095                     exp@exponent:
   696                           	callstack 0
   697  000095                     ComputeWaterVol@dEmptySpace_mm:
   698                           	callstack 0
   699                           
   700                           ; 4 bytes @ 0x35
   701  000095                     	ds	2
   702  000097                     exp@sign:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x37
   706  000097                     	ds	1
   707  000098                     ?_pow:
   708                           	callstack 0
   709  000098                     pow@x:
   710                           	callstack 0
   711                           
   712                           ; 4 bytes @ 0x38
   713  000098                     	ds	1
   714  000099                     ComputeWaterVol@dWaterHeight_mm:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x39
   718  000099                     	ds	3
   719  00009C                     pow@y:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x3C
   723  00009C                     	ds	1
   724  00009D                     ComputeWaterVol@iPercentFull:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x3D
   728  00009D                     	ds	3
   729  0000A0                     _pow$2261:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x40
   733  0000A0                     	ds	4
   734  0000A4                     _pow$2262:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x44
   738  0000A4                     	ds	4
   739  0000A8                     pow@sign:
   740                           	callstack 0
   741                           
   742                           ; 1 bytes @ 0x48
   743  0000A8                     	ds	1
   744  0000A9                     pow@yi:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x49
   748  0000A9                     	ds	4
   749  0000AD                     _InitTankVariables$2260:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x4D
   753  0000AD                     	ds	4
   754  0000B1                     ??_main:
   755                           
   756                           ; 1 bytes @ 0x51
   757  0000B1                     	ds	2
   758  0000B3                     _main$980:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x53
   762  0000B3                     	ds	2
   763                           
   764                           	psect	cstackCOMRAM
   765  000001                     __pcstackCOMRAM:
   766                           	callstack 0
   767  000001                     ??_Timer0_ISR:
   768  000001                     
   769                           ; 1 bytes @ 0x0
   770  000001                     	ds	1
   771  000002                     ??_isdigit:
   772  000002                     ??_LCD_WriteChar:
   773  000002                     ?___wmul:
   774                           	callstack 0
   775  000002                     ?___lwdiv:
   776                           	callstack 0
   777  000002                     ?___fldiv:
   778                           	callstack 0
   779  000002                     ?___flneg:
   780                           	callstack 0
   781  000002                     LCD_WriteCmd@iDelay:
   782                           	callstack 0
   783  000002                     ___wmul@multiplier:
   784                           	callstack 0
   785  000002                     ___lwdiv@dividend:
   786                           	callstack 0
   787  000002                     ___flge@ff1:
   788                           	callstack 0
   789  000002                     ___flneg@f1:
   790                           	callstack 0
   791  000002                     ___fldiv@b:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x1
   795  000002                     	ds	1
   796  000003                     _isdigit$1968:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x2
   800  000003                     	ds	1
   801  000004                     ??_LCD_WriteCmd:
   802  000004                     LCD_WriteChar@iChar:
   803                           	callstack 0
   804  000004                     isdigit@c:
   805                           	callstack 0
   806  000004                     ___wmul@multiplicand:
   807                           	callstack 0
   808  000004                     ___lwdiv@divisor:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x3
   812  000004                     	ds	1
   813  000005                     LCD_WriteString@iData:
   814                           	callstack 0
   815                           
   816                           ; 2 bytes @ 0x4
   817  000005                     	ds	1
   818  000006                     LCD_WriteCmd@i:
   819                           	callstack 0
   820  000006                     ___wmul@product:
   821                           	callstack 0
   822  000006                     ___lwdiv@quotient:
   823                           	callstack 0
   824  000006                     ___flge@ff2:
   825                           	callstack 0
   826  000006                     ___fldiv@a:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x5
   830  000006                     	ds	1
   831  000007                     ??_LCD_WriteString:
   832                           
   833                           ; 1 bytes @ 0x6
   834  000007                     	ds	1
   835  000008                     LCD_WriteCmd@iCmd:
   836                           	callstack 0
   837  000008                     ___lwdiv@counter:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0x7
   841  000008                     	ds	1
   842  000009                     ??_LCD_Init:
   843  000009                     ?___lwmod:
   844                           	callstack 0
   845  000009                     LCD_WriteString@ix:
   846                           	callstack 0
   847  000009                     LCD_GoTo@iCharPos:
   848                           	callstack 0
   849  000009                     ___lwmod@dividend:
   850                           	callstack 0
   851                           
   852                           ; 2 bytes @ 0x8
   853  000009                     	ds	1
   854  00000A                     ??_LCD_GoTo:
   855  00000A                     ??___fldiv:
   856  00000A                     ??___flge:
   857                           
   858                           ; 1 bytes @ 0x9
   859  00000A                     	ds	1
   860  00000B                     ___lwmod@divisor:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0xA
   864  00000B                     	ds	1
   865  00000C                     _LCD_GoTo$1343:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0xB
   869  00000C                     	ds	1
   870  00000D                     ___lwmod@counter:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0xC
   874  00000D                     	ds	1
   875  00000E                     ?_sprintf:
   876                           	callstack 0
   877  00000E                     LCD_GoTo@iPos:
   878                           	callstack 0
   879  00000E                     sprintf@sp:
   880                           	callstack 0
   881  00000E                     ___fldiv@rem:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0xD
   885  00000E                     	ds	1
   886  00000F                     LCD_GoTo@iLine:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0xE
   890  00000F                     	ds	1
   891  000010                     sprintf@f:
   892                           	callstack 0
   893                           
   894                           ; 2 bytes @ 0xF
   895  000010                     	ds	2
   896  000012                     ___fldiv@sign:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0x11
   900  000012                     	ds	1
   901  000013                     ___fldiv@new_exp:
   902                           	callstack 0
   903                           
   904                           ; 2 bytes @ 0x12
   905  000013                     	ds	2
   906  000015                     ___fldiv@grs:
   907                           	callstack 0
   908                           
   909                           ; 4 bytes @ 0x14
   910  000015                     	ds	1
   911  000016                     ??_sprintf:
   912                           
   913                           ; 1 bytes @ 0x15
   914  000016                     	ds	3
   915  000019                     ___fldiv@bexp:
   916                           	callstack 0
   917                           
   918                           ; 1 bytes @ 0x18
   919  000019                     	ds	1
   920  00001A                     ___fldiv@aexp:
   921                           	callstack 0
   922  00001A                     sprintf@cp:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x19
   926  00001A                     	ds	1
   927  00001B                     ?_sqrt:
   928                           	callstack 0
   929  00001B                     ?___fltol:
   930                           	callstack 0
   931  00001B                     ___fltol@f1:
   932                           	callstack 0
   933  00001B                     sqrt@a:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x1A
   937  00001B                     	ds	1
   938  00001C                     sprintf@ap:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x1B
   942  00001C                     	ds	2
   943  00001E                     sprintf@flag:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x1D
   947  00001E                     	ds	1
   948  00001F                     ??_sqrt:
   949  00001F                     ??___fltol:
   950  00001F                     sprintf@len:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x1E
   954  00001F                     	ds	2
   955  000021                     sprintf@val:
   956                           	callstack 0
   957                           
   958                           ; 2 bytes @ 0x20
   959  000021                     	ds	2
   960  000023                     ___fltol@sign1:
   961                           	callstack 0
   962  000023                     sqrt@sign:
   963                           	callstack 0
   964  000023                     sprintf@width:
   965                           	callstack 0
   966                           
   967                           ; 2 bytes @ 0x22
   968  000023                     	ds	1
   969  000024                     ___fltol@exp1:
   970                           	callstack 0
   971  000024                     sqrt@i:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x23
   975  000024                     	ds	1
   976  000025                     ?___xxtofl:
   977                           	callstack 0
   978  000025                     sprintf@prec:
   979                           	callstack 0
   980  000025                     sqrt@tfrac:
   981                           	callstack 0
   982  000025                     ___xxtofl@val:
   983                           	callstack 0
   984                           
   985                           ; 4 bytes @ 0x24
   986  000025                     	ds	1
   987  000026                     sprintf@c:
   988                           	callstack 0
   989                           
   990                           ; 1 bytes @ 0x25
   991  000026                     	ds	1
   992  000027                     
   993                           ; 1 bytes @ 0x26
   994  000027                     	ds	1
   995  000028                     ComputeTOD@bIncDays:
   996                           	callstack 0
   997                           
   998                           ; 1 bytes @ 0x27
   999  000028                     	ds	1
  1000  000029                     ??___xxtofl:
  1001  000029                     sqrt@p:
  1002                           	callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x28
  1005  000029                     	ds	1
  1006  00002A                     sqrt@grs:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x29
  1010  00002A                     	ds	3
  1011  00002D                     ___xxtofl@sign:
  1012                           	callstack 0
  1013                           
  1014                           ; 1 bytes @ 0x2C
  1015  00002D                     	ds	1
  1016  00002E                     ___xxtofl@exp:
  1017                           	callstack 0
  1018  00002E                     sqrt@exp:
  1019                           	callstack 0
  1020                           
  1021                           ; 2 bytes @ 0x2D
  1022  00002E                     	ds	1
  1023  00002F                     ___xxtofl@arg:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x2E
  1027  00002F                     	ds	1
  1028  000030                     sqrt@root:
  1029                           	callstack 0
  1030                           
  1031                           ; 4 bytes @ 0x2F
  1032  000030                     	ds	3
  1033  000033                     ___fleq@ff1:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x32
  1037  000033                     	ds	1
  1038  000034                     sqrt@frac:
  1039                           	callstack 0
  1040                           
  1041                           ; 4 bytes @ 0x33
  1042  000034                     	ds	3
  1043  000037                     ___fleq@ff2:
  1044                           	callstack 0
  1045                           
  1046                           ; 4 bytes @ 0x36
  1047  000037                     	ds	4
  1048  00003B                     ??___fleq:
  1049                           
  1050                           ; 1 bytes @ 0x3A
  1051  00003B                     	ds	4
  1052  00003F                     ?_frexp:
  1053                           	callstack 0
  1054  00003F                     frexp@value:
  1055                           	callstack 0
  1056                           
  1057                           ; 4 bytes @ 0x3E
  1058  00003F                     	ds	4
  1059  000043                     frexp@eptr:
  1060                           	callstack 0
  1061                           
  1062                           ; 2 bytes @ 0x42
  1063  000043                     	ds	2
  1064  000045                     ??_frexp:
  1065                           
  1066                           ; 1 bytes @ 0x44
  1067  000045                     	ds	2
  1068  000047                     ?___flmul:
  1069                           	callstack 0
  1070  000047                     ___flmul@b:
  1071                           	callstack 0
  1072                           
  1073                           ; 4 bytes @ 0x46
  1074  000047                     	ds	4
  1075  00004B                     ___flmul@a:
  1076                           	callstack 0
  1077                           
  1078                           ; 4 bytes @ 0x4A
  1079  00004B                     	ds	4
  1080  00004F                     ??___flmul:
  1081                           
  1082                           ; 1 bytes @ 0x4E
  1083  00004F                     	ds	4
  1084  000053                     ?___fladd:
  1085                           	callstack 0
  1086  000053                     ___fladd@b:
  1087                           	callstack 0
  1088                           
  1089                           ; 4 bytes @ 0x52
  1090  000053                     	ds	4
  1091  000057                     ___fladd@a:
  1092                           	callstack 0
  1093                           
  1094                           ; 4 bytes @ 0x56
  1095  000057                     	ds	4
  1096  00005B                     
  1097                           ; 1 bytes @ 0x5A
  1098 ;;
  1099 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1100 ;;
  1101 ;; *************** function _main *****************
  1102 ;; Defined at:
  1103 ;;		line 58 in file "main.c"
  1104 ;; Parameters:    Size  Location     Type
  1105 ;;		None
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;		None
  1108 ;; Return value:  Size  Location     Type
  1109 ;;                  1    wreg      void 
  1110 ;; Registers used:
  1111 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1112 ;; Tracked objects:
  1113 ;;		On entry : 0/0
  1114 ;;		On exit  : 0/0
  1115 ;;		Unchanged: 0/0
  1116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1117 ;;      Params:         0       0       0       0       0       0       0       0       0
  1118 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1119 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1120 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1121 ;;Total ram usage:        4 bytes
  1122 ;; Hardware stack levels required when called: 10
  1123 ;; This function calls:
  1124 ;;		_CCP1_Init
  1125 ;;		_CCP2_Init
  1126 ;;		_ComputeTOD
  1127 ;;		_ComputeWaterVol
  1128 ;;		_InitTankVariables
  1129 ;;		_LCD_Init
  1130 ;;		_LCD_WriteString
  1131 ;;		_SysInit
  1132 ;;		_Timer0_Init
  1133 ;;		_Timer1_Init
  1134 ;;		_Timer2_Init
  1135 ;; This function is called by:
  1136 ;;		Startup code after reset
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text0
  1141  002F5E                     __ptext0:
  1142                           	callstack 0
  1143  002F5E                     _main:
  1144                           	callstack 21
  1145  002F5E                     
  1146                           ;main.c: 63: if (1)
  1147  002F5E  ECB1  F01C         	call	_SysInit	;wreg free
  1148  002F62                     
  1149                           ;main.c: 64: {;main.c: 65: LCD_Init();
  1150  002F62  EC6C  F01B         	call	_LCD_Init	;wreg free
  1151  002F66                     
  1152                           ;main.c: 66: LCD_WriteString ((uint8_t *)"Loading... ");
  1153  002F66  0E79               	movlw	low STR_1
  1154  002F68  6E05               	movwf	LCD_WriteString@iData^0,c
  1155  002F6A  0E08               	movlw	high STR_1
  1156  002F6C  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  1157  002F6E  EC69  F01A         	call	_LCD_WriteString	;wreg free
  1158  002F72                     
  1159                           ;main.c: 67: };main.c: 70: giBacklight_Timeout = (PORTCbits.RC0) ? 180 : 2;
  1160  002F72  B082               	btfsc	130,0,c	;volatile
  1161  002F74  EFBE  F017         	goto	u5661
  1162  002F78  EFC0  F017         	goto	u5660
  1163  002F7C                     u5661:
  1164  002F7C  EFC7  F017         	goto	l5280
  1165  002F80                     u5660:
  1166  002F80  0E00               	movlw	0
  1167  002F82  0100               	movlb	0	; () banked
  1168  002F84  6FB4               	movwf	(_main$980+1)& (0+255),b
  1169  002F86  0E02               	movlw	2
  1170  002F88  6FB3               	movwf	_main$980& (0+255),b
  1171  002F8A  EFCC  F017         	goto	l5282
  1172  002F8E                     l5280:
  1173  002F8E  0E00               	movlw	0
  1174  002F90  0100               	movlb	0	; () banked
  1175  002F92  6FB4               	movwf	(_main$980+1)& (0+255),b
  1176  002F94  0EB4               	movlw	180
  1177  002F96  6FB3               	movwf	_main$980& (0+255),b
  1178  002F98                     l5282:
  1179                           
  1180                           ; BSR set to: 0
  1181  002F98  C0B3  F0F7         	movff	_main$980,_giBacklight_Timeout
  1182  002F9C                     
  1183                           ; BSR set to: 0
  1184                           ;main.c: 72: InitTankVariables();
  1185  002F9C  ECA2  F015         	call	_InitTankVariables	;wreg free
  1186  002FA0                     
  1187                           ;main.c: 73: Timer0_Init();
  1188  002FA0  EC5F  F01C         	call	_Timer0_Init	;wreg free
  1189  002FA4                     
  1190                           ;main.c: 74: Timer1_Init();
  1191  002FA4  EC72  F01C         	call	_Timer1_Init	;wreg free
  1192  002FA8                     
  1193                           ;main.c: 75: Timer2_Init();
  1194  002FA8  EC69  F01C         	call	_Timer2_Init	;wreg free
  1195  002FAC                     
  1196                           ;main.c: 77: CCP1_Init();
  1197  002FAC  EC84  F01C         	call	_CCP1_Init	;wreg free
  1198  002FB0                     
  1199                           ;main.c: 78: CCP2_Init();
  1200  002FB0  EC7B  F01C         	call	_CCP2_Init	;wreg free
  1201  002FB4                     
  1202                           ;main.c: 80: INTCONbits.GIE = 1;
  1203  002FB4  8EF2               	bsf	242,7,c	;volatile
  1204  002FB6                     
  1205                           ;main.c: 81: INTCONbits.PEIE = 1;
  1206  002FB6  8CF2               	bsf	242,6,c	;volatile
  1207  002FB8                     l5300:
  1208                           
  1209                           ;main.c: 84: {;main.c: 85: if (gb_EchoDetected)
  1210  002FB8  0100               	movlb	0	; () banked
  1211  002FBA  51DF               	movf	_gb_EchoDetected& (0+255),w,b	;volatile
  1212  002FBC  B4D8               	btfsc	status,2,c
  1213  002FBE  EFE3  F017         	goto	u5671
  1214  002FC2  EFE5  F017         	goto	u5670
  1215  002FC6                     u5671:
  1216  002FC6  EFEA  F017         	goto	l5306
  1217  002FCA                     u5670:
  1218  002FCA                     
  1219                           ; BSR set to: 0
  1220                           ;main.c: 86: {;main.c: 87: ComputeWaterVol();
  1221  002FCA  ECE5  F00C         	call	_ComputeWaterVol	;wreg free
  1222  002FCE                     
  1223                           ;main.c: 88: gb_EchoDetected = 0;
  1224  002FCE  0E00               	movlw	0
  1225  002FD0  0100               	movlb	0	; () banked
  1226  002FD2  6FDF               	movwf	_gb_EchoDetected& (0+255),b	;volatile
  1227  002FD4                     l5306:
  1228                           
  1229                           ; BSR set to: 0
  1230                           ;main.c: 89: };main.c: 90: if (gb_UpdateTime)
  1231  002FD4  51E0               	movf	_gb_UpdateTime& (0+255),w,b	;volatile
  1232  002FD6  B4D8               	btfsc	status,2,c
  1233  002FD8  EFF0  F017         	goto	u5681
  1234  002FDC  EFF2  F017         	goto	u5680
  1235  002FE0                     u5681:
  1236  002FE0  EFF7  F017         	goto	l5312
  1237  002FE4                     u5680:
  1238  002FE4                     
  1239                           ; BSR set to: 0
  1240                           ;main.c: 91: {;main.c: 92: ComputeTOD();
  1241  002FE4  EC2D  F018         	call	_ComputeTOD	;wreg free
  1242  002FE8                     
  1243                           ;main.c: 93: gb_UpdateTime = 0;
  1244  002FE8  0E00               	movlw	0
  1245  002FEA  0100               	movlb	0	; () banked
  1246  002FEC  6FE0               	movwf	_gb_UpdateTime& (0+255),b	;volatile
  1247  002FEE                     l5312:
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;main.c: 94: };main.c: 97: if (!gbBacklight_On)
  1251  002FEE  51D9               	movf	_gbBacklight_On& (0+255),w,b
  1252  002FF0  A4D8               	btfss	status,2,c
  1253  002FF2  EFFD  F017         	goto	u5691
  1254  002FF6  EFFF  F017         	goto	u5690
  1255  002FFA                     u5691:
  1256  002FFA  EF0F  F018         	goto	l5320
  1257  002FFE                     u5690:
  1258  002FFE                     
  1259                           ; BSR set to: 0
  1260                           ;main.c: 98: {;main.c: 99: if (PORTCbits.RC4)
  1261  002FFE  A882               	btfss	130,4,c	;volatile
  1262  003000  EF04  F018         	goto	u5701
  1263  003004  EF06  F018         	goto	u5700
  1264  003008                     u5701:
  1265  003008  EFDC  F017         	goto	l5300
  1266  00300C                     u5700:
  1267  00300C                     
  1268                           ; BSR set to: 0
  1269                           ;main.c: 100: {;main.c: 101: LATAbits.LA4 = 1;
  1270  00300C  8889               	bsf	137,4,c	;volatile
  1271  00300E                     
  1272                           ; BSR set to: 0
  1273                           ;main.c: 102: gbBacklight_On = 1;
  1274  00300E  0E01               	movlw	1
  1275  003010  6FD9               	movwf	_gbBacklight_On& (0+255),b
  1276                           
  1277                           ;main.c: 103: giBacklight_Timer = 0;
  1278  003012  0E00               	movlw	0
  1279  003014  6FD4               	movwf	(_giBacklight_Timer+1)& (0+255),b
  1280  003016  0E00               	movlw	0
  1281  003018  6FD3               	movwf	_giBacklight_Timer& (0+255),b
  1282  00301A  EFDC  F017         	goto	l5300
  1283  00301E                     l5320:
  1284                           
  1285                           ; BSR set to: 0
  1286                           ;main.c: 106: if (giBacklight_Timer > giBacklight_Timeout)
  1287  00301E  51F7               	movf	_giBacklight_Timeout& (0+255),w,b
  1288  003020  6FB1               	movwf	??_main& (0+255),b
  1289  003022  6BB2               	clrf	(??_main+1)& (0+255),b
  1290  003024  51D3               	movf	_giBacklight_Timer& (0+255),w,b
  1291  003026  5DB1               	subwf	??_main& (0+255),w,b
  1292  003028  51D4               	movf	(_giBacklight_Timer+1)& (0+255),w,b
  1293  00302A  59B2               	subwfb	(??_main+1)& (0+255),w,b
  1294  00302C  B0D8               	btfsc	status,0,c
  1295  00302E  EF1B  F018         	goto	u5711
  1296  003032  EF1D  F018         	goto	u5710
  1297  003036                     u5711:
  1298  003036  EFDC  F017         	goto	l5300
  1299  00303A                     u5710:
  1300  00303A                     
  1301                           ; BSR set to: 0
  1302                           ;main.c: 107: {;main.c: 108: if (!PORTCbits.RC4)
  1303  00303A  B882               	btfsc	130,4,c	;volatile
  1304  00303C  EF22  F018         	goto	u5721
  1305  003040  EF24  F018         	goto	u5720
  1306  003044                     u5721:
  1307  003044  EF29  F018         	goto	l354
  1308  003048                     u5720:
  1309  003048                     
  1310                           ; BSR set to: 0
  1311                           ;main.c: 109: {;main.c: 110: gbBacklight_On = 0;
  1312  003048  0E00               	movlw	0
  1313  00304A  6FD9               	movwf	_gbBacklight_On& (0+255),b
  1314  00304C                     
  1315                           ; BSR set to: 0
  1316                           ;main.c: 111: LATAbits.LATA4 = 0;
  1317  00304C  9889               	bcf	137,4,c	;volatile
  1318  00304E  EFDC  F017         	goto	l5300
  1319  003052                     l354:
  1320                           
  1321                           ; BSR set to: 0
  1322  003052  EFDC  F017         	goto	l5300
  1323  003056  EF07  F000         	goto	start
  1324  00305A                     __end_of_main:
  1325                           	callstack 0
  1326                           
  1327 ;; *************** function _Timer2_Init *****************
  1328 ;; Defined at:
  1329 ;;		line 35 in file "Timer_2.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;		None
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;		None
  1334 ;; Return value:  Size  Location     Type
  1335 ;;                  1    wreg      void 
  1336 ;; Registers used:
  1337 ;;		wreg, status,2
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1343 ;;      Params:         0       0       0       0       0       0       0       0       0
  1344 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1346 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1347 ;;Total ram usage:        0 bytes
  1348 ;; Hardware stack levels used: 1
  1349 ;; Hardware stack levels required when called: 4
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text1
  1358  0038D2                     __ptext1:
  1359                           	callstack 0
  1360  0038D2                     _Timer2_Init:
  1361                           	callstack 26
  1362  0038D2                     
  1363                           ;Timer_2.c: 38: PR2 = 0x31;
  1364  0038D2  0E31               	movlw	49
  1365  0038D4  6ECB               	movwf	203,c	;volatile
  1366                           
  1367                           ;Timer_2.c: 44: T2CON = (10-2)<<3 | 0 | 0;
  1368  0038D6  0E40               	movlw	64
  1369  0038D8  6ECA               	movwf	202,c	;volatile
  1370                           
  1371                           ;Timer_2.c: 46: TMR2 = 0;
  1372  0038DA  0E00               	movlw	0
  1373  0038DC  6ECC               	movwf	204,c	;volatile
  1374  0038DE                     
  1375                           ;Timer_2.c: 47: PIR1bits.TMR2IF = 0;
  1376  0038DE  929E               	bcf	158,1,c	;volatile
  1377  0038E0                     
  1378                           ;Timer_2.c: 48: PIE1bits.TMR2IE = 0;
  1379  0038E0  929D               	bcf	157,1,c	;volatile
  1380  0038E2  0012               	return		;funcret
  1381  0038E4                     __end_of_Timer2_Init:
  1382                           	callstack 0
  1383                           
  1384 ;; *************** function _Timer1_Init *****************
  1385 ;; Defined at:
  1386 ;;		line 10 in file "Timer_1.c"
  1387 ;; Parameters:    Size  Location     Type
  1388 ;;		None
  1389 ;; Auto vars:     Size  Location     Type
  1390 ;;		None
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  1    wreg      void 
  1393 ;; Registers used:
  1394 ;;		wreg, status,2
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1400 ;;      Params:         0       0       0       0       0       0       0       0       0
  1401 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1403 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1404 ;;Total ram usage:        0 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 4
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text2
  1415  0038E4                     __ptext2:
  1416                           	callstack 0
  1417  0038E4                     _Timer1_Init:
  1418                           	callstack 26
  1419  0038E4                     
  1420                           ;Timer_1.c: 12: PIR1bits.TMR1IF = 0;
  1421  0038E4  909E               	bcf	158,0,c	;volatile
  1422                           
  1423                           ;Timer_1.c: 13: PIE1bits.TMR1IE = 0;
  1424  0038E6  909D               	bcf	157,0,c	;volatile
  1425  0038E8                     
  1426                           ;Timer_1.c: 20: T1CON = 0x80;
  1427  0038E8  0E80               	movlw	128
  1428  0038EA  6ECD               	movwf	205,c	;volatile
  1429                           
  1430                           ;Timer_1.c: 22: TMR1H = 0;
  1431  0038EC  0E00               	movlw	0
  1432  0038EE  6ECF               	movwf	207,c	;volatile
  1433                           
  1434                           ;Timer_1.c: 23: TMR1L = 0;
  1435  0038F0  0E00               	movlw	0
  1436  0038F2  6ECE               	movwf	206,c	;volatile
  1437  0038F4  0012               	return		;funcret
  1438  0038F6                     __end_of_Timer1_Init:
  1439                           	callstack 0
  1440                           
  1441 ;; *************** function _Timer0_Init *****************
  1442 ;; Defined at:
  1443 ;;		line 41 in file "Timer_0.c"
  1444 ;; Parameters:    Size  Location     Type
  1445 ;;		None
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;		None
  1448 ;; Return value:  Size  Location     Type
  1449 ;;                  1    wreg      void 
  1450 ;; Registers used:
  1451 ;;		wreg, status,2
  1452 ;; Tracked objects:
  1453 ;;		On entry : 0/0
  1454 ;;		On exit  : 0/0
  1455 ;;		Unchanged: 0/0
  1456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1457 ;;      Params:         0       0       0       0       0       0       0       0       0
  1458 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1459 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1460 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1461 ;;Total ram usage:        0 bytes
  1462 ;; Hardware stack levels used: 1
  1463 ;; Hardware stack levels required when called: 4
  1464 ;; This function calls:
  1465 ;;		Nothing
  1466 ;; This function is called by:
  1467 ;;		_main
  1468 ;; This function uses a non-reentrant model
  1469 ;;
  1470                           
  1471                           	psect	text3
  1472  0038BE                     __ptext3:
  1473                           	callstack 0
  1474  0038BE                     _Timer0_Init:
  1475                           	callstack 26
  1476  0038BE                     
  1477                           ;Timer_0.c: 43: TMR0H = Timer0_Reload >> 8;
  1478  0038BE  0100               	movlb	0	; () banked
  1479  0038C0  51F6               	movf	(_Timer0_Reload+1)& (0+255),w,b
  1480  0038C2  6ED7               	movwf	215,c	;volatile
  1481  0038C4                     
  1482                           ; BSR set to: 0
  1483                           ;Timer_0.c: 44: TMR0L = Timer0_Reload;
  1484  0038C4  C0F5  FFD6         	movff	_Timer0_Reload,4054	;volatile
  1485  0038C8                     
  1486                           ; BSR set to: 0
  1487                           ;Timer_0.c: 46: INTCONbits.TMR0IF = 0;
  1488  0038C8  94F2               	bcf	242,2,c	;volatile
  1489  0038CA                     
  1490                           ; BSR set to: 0
  1491                           ;Timer_0.c: 47: INTCONbits.TMR0IE = 1;
  1492  0038CA  8AF2               	bsf	242,5,c	;volatile
  1493                           
  1494                           ;Timer_0.c: 50: T0CON = 0x98;
  1495  0038CC  0E98               	movlw	152
  1496  0038CE  6ED5               	movwf	213,c	;volatile
  1497  0038D0                     
  1498                           ; BSR set to: 0
  1499  0038D0  0012               	return		;funcret
  1500  0038D2                     __end_of_Timer0_Init:
  1501                           	callstack 0
  1502                           
  1503 ;; *************** function _SysInit *****************
  1504 ;; Defined at:
  1505 ;;		line 10 in file "SysInit.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1519 ;;      Params:         0       0       0       0       0       0       0       0       0
  1520 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1522 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1523 ;;Total ram usage:        0 bytes
  1524 ;; Hardware stack levels used: 1
  1525 ;; Hardware stack levels required when called: 5
  1526 ;; This function calls:
  1527 ;;		_OscInit
  1528 ;;		_PIN_MANAGER_Initialize
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text4
  1535  003962                     __ptext4:
  1536                           	callstack 0
  1537  003962                     _SysInit:
  1538                           	callstack 25
  1539  003962                     
  1540                           ;SysInit.c: 12: PIN_MANAGER_Initialize();
  1541  003962  EC2C  F01C         	call	_PIN_MANAGER_Initialize	;wreg free
  1542                           
  1543                           ;SysInit.c: 13: OscInit();
  1544  003966  ECB6  F01C         	call	_OscInit	;wreg free
  1545  00396A  0012               	return		;funcret
  1546  00396C                     __end_of_SysInit:
  1547                           	callstack 0
  1548                           
  1549 ;; *************** function _PIN_MANAGER_Initialize *****************
  1550 ;; Defined at:
  1551 ;;		line 25 in file "pin_manager.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg, status,2
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1565 ;;      Params:         0       0       0       0       0       0       0       0       0
  1566 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1567 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1568 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1569 ;;Total ram usage:        0 bytes
  1570 ;; Hardware stack levels used: 1
  1571 ;; Hardware stack levels required when called: 4
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_SysInit
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           	psect	text5
  1580  003858                     __ptext5:
  1581                           	callstack 0
  1582  003858                     _PIN_MANAGER_Initialize:
  1583                           	callstack 25
  1584  003858                     
  1585                           ;pin_manager.c: 34: LATA = 0x00;
  1586  003858  0E00               	movlw	0
  1587  00385A  6E89               	movwf	137,c	;volatile
  1588                           
  1589                           ;pin_manager.c: 35: LATB = 0x00;
  1590  00385C  0E00               	movlw	0
  1591  00385E  6E8A               	movwf	138,c	;volatile
  1592                           
  1593                           ;pin_manager.c: 36: LATC = 0x00;
  1594  003860  0E00               	movlw	0
  1595  003862  6E8B               	movwf	139,c	;volatile
  1596                           
  1597                           ;pin_manager.c: 45: TRISA = 0x00;
  1598  003864  0E00               	movlw	0
  1599  003866  6E92               	movwf	146,c	;volatile
  1600                           
  1601                           ;pin_manager.c: 46: TRISB = 0x00;
  1602  003868  0E00               	movlw	0
  1603  00386A  6E93               	movwf	147,c	;volatile
  1604                           
  1605                           ;pin_manager.c: 47: TRISC = 0x04;
  1606  00386C  0E04               	movlw	4
  1607  00386E  6E94               	movwf	148,c	;volatile
  1608                           
  1609                           ;pin_manager.c: 63: ADCON1 = 0x00;
  1610  003870  0E00               	movlw	0
  1611  003872  6EC1               	movwf	193,c	;volatile
  1612                           
  1613                           ;pin_manager.c: 64: ADCON2 = 0x00;
  1614  003874  0E00               	movlw	0
  1615  003876  6EC0               	movwf	192,c	;volatile
  1616  003878                     
  1617                           ;pin_manager.c: 72: INTCON2bits.nRBPU = 1;
  1618  003878  8EF1               	bsf	241,7,c	;volatile
  1619  00387A  0012               	return		;funcret
  1620  00387C                     __end_of_PIN_MANAGER_Initialize:
  1621                           	callstack 0
  1622                           
  1623 ;; *************** function _OscInit *****************
  1624 ;; Defined at:
  1625 ;;		line 16 in file "SysInit.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;		None
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;		None
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      void 
  1632 ;; Registers used:
  1633 ;;		wreg, status,2
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1639 ;;      Params:         0       0       0       0       0       0       0       0       0
  1640 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1642 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1643 ;;Total ram usage:        0 bytes
  1644 ;; Hardware stack levels used: 1
  1645 ;; Hardware stack levels required when called: 4
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_SysInit
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text6
  1654  00396C                     __ptext6:
  1655                           	callstack 0
  1656  00396C                     _OscInit:
  1657                           	callstack 25
  1658  00396C                     
  1659                           ;SysInit.c: 21: OSCCON = 0x10;
  1660  00396C  0E10               	movlw	16
  1661  00396E  6ED3               	movwf	211,c	;volatile
  1662                           
  1663                           ;SysInit.c: 31: OSCTUNE = 0x00;
  1664  003970  0E00               	movlw	0
  1665  003972  6E9B               	movwf	155,c	;volatile
  1666  003974  0012               	return		;funcret
  1667  003976                     __end_of_OscInit:
  1668                           	callstack 0
  1669                           
  1670 ;; *************** function _LCD_Init *****************
  1671 ;; Defined at:
  1672 ;;		line 11 in file "LCD.c"
  1673 ;; Parameters:    Size  Location     Type
  1674 ;;		None
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  iCmd            1    0        unsigned char 
  1677 ;; Return value:  Size  Location     Type
  1678 ;;                  1    wreg      void 
  1679 ;; Registers used:
  1680 ;;		wreg, status,2, status,0, cstack
  1681 ;; Tracked objects:
  1682 ;;		On entry : 0/0
  1683 ;;		On exit  : 0/0
  1684 ;;		Unchanged: 0/0
  1685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1686 ;;      Params:         0       0       0       0       0       0       0       0       0
  1687 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1688 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1689 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1690 ;;Total ram usage:        1 bytes
  1691 ;; Hardware stack levels used: 1
  1692 ;; Hardware stack levels required when called: 5
  1693 ;; This function calls:
  1694 ;;		_LCD_WriteCmd
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text7
  1701  0036D8                     __ptext7:
  1702                           	callstack 0
  1703  0036D8                     _LCD_Init:
  1704                           	callstack 25
  1705  0036D8                     
  1706                           ;LCD.c: 13: uint8_t iCmd;;LCD.c: 15: _delay((unsigned long)((15)*(8000000/4000.0)));
  1707  0036D8  0E27               	movlw	39
  1708  0036DA  6E09               	movwf	??_LCD_Init^0,c
  1709  0036DC  0EF5               	movlw	245
  1710  0036DE                     u5737:
  1711  0036DE  2EE8               	decfsz	wreg,f,c
  1712  0036E0  D7FE               	bra	u5737
  1713  0036E2  2E09               	decfsz	??_LCD_Init^0,f,c
  1714  0036E4  D7FC               	bra	u5737
  1715  0036E6  F000               	nop	
  1716  0036E8                     
  1717                           ;LCD.c: 17: LCD_WriteCmd (iCmd, 40+10);
  1718  0036E8  0E00               	movlw	0
  1719  0036EA  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1720  0036EC  0E32               	movlw	50
  1721  0036EE  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1722  0036F0  0E3C               	movlw	60
  1723  0036F2  EC2C  F01A         	call	_LCD_WriteCmd
  1724  0036F6                     
  1725                           ;LCD.c: 21: LCD_WriteCmd (iCmd, 40+10);
  1726  0036F6  0E00               	movlw	0
  1727  0036F8  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1728  0036FA  0E32               	movlw	50
  1729  0036FC  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1730  0036FE  0E08               	movlw	8
  1731  003700  EC2C  F01A         	call	_LCD_WriteCmd
  1732  003704                     
  1733                           ;LCD.c: 24: LCD_WriteCmd (iCmd, 40+10);
  1734  003704  0E00               	movlw	0
  1735  003706  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1736  003708  0E32               	movlw	50
  1737  00370A  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1738  00370C  0E06               	movlw	6
  1739  00370E  EC2C  F01A         	call	_LCD_WriteCmd
  1740  003712                     
  1741                           ;LCD.c: 26: LCD_WriteCmd (0x01, 2000);
  1742  003712  0E07               	movlw	7
  1743  003714  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1744  003716  0ED0               	movlw	208
  1745  003718  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1746  00371A  0E01               	movlw	1
  1747  00371C  EC2C  F01A         	call	_LCD_WriteCmd
  1748  003720                     
  1749                           ;LCD.c: 30: LCD_WriteCmd (iCmd, 40+10);
  1750  003720  0E00               	movlw	0
  1751  003722  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  1752  003724  0E32               	movlw	50
  1753  003726  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  1754  003728  0E0C               	movlw	12
  1755  00372A  EC2C  F01A         	call	_LCD_WriteCmd
  1756  00372E  0012               	return		;funcret
  1757  003730                     __end_of_LCD_Init:
  1758                           	callstack 0
  1759                           
  1760 ;; *************** function _InitTankVariables *****************
  1761 ;; Defined at:
  1762 ;;		line 176 in file "main.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;		None
  1767 ;; Return value:  Size  Location     Type
  1768 ;;                  1    wreg      void 
  1769 ;; Registers used:
  1770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1771 ;; Tracked objects:
  1772 ;;		On entry : 0/0
  1773 ;;		On exit  : 0/0
  1774 ;;		Unchanged: 0/0
  1775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1776 ;;      Params:         0       0       0       0       0       0       0       0       0
  1777 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1778 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1779 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1780 ;;Total ram usage:        4 bytes
  1781 ;; Hardware stack levels used: 1
  1782 ;; Hardware stack levels required when called: 9
  1783 ;; This function calls:
  1784 ;;		___flmul
  1785 ;;		_pow
  1786 ;;		_sqrt
  1787 ;; This function is called by:
  1788 ;;		_main
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792                           	psect	text8
  1793  002B44                     __ptext8:
  1794                           	callstack 0
  1795  002B44                     _InitTankVariables:
  1796                           	callstack 21
  1797  002B44                     
  1798                           ;main.c: 178: gd_TankSurfArea_mm2 = 3.1416926f * pow(48 * 25.4 / 2, 2);
  1799  002B44  0E00               	movlw	0
  1800  002B46  0100               	movlb	0	; () banked
  1801  002B48  6F9C               	movwf	pow@y& (0+255),b
  1802  002B4A  0E00               	movlw	0
  1803  002B4C  6F9D               	movwf	(pow@y+1)& (0+255),b
  1804  002B4E  0E00               	movlw	0
  1805  002B50  6F9E               	movwf	(pow@y+2)& (0+255),b
  1806  002B52  0E40               	movlw	64
  1807  002B54  6F9F               	movwf	(pow@y+3)& (0+255),b
  1808  002B56  0E66               	movlw	102
  1809  002B58  6F98               	movwf	pow@x& (0+255),b
  1810  002B5A  0E66               	movlw	102
  1811  002B5C  6F99               	movwf	(pow@x+1)& (0+255),b
  1812  002B5E  0E18               	movlw	24
  1813  002B60  6F9A               	movwf	(pow@x+2)& (0+255),b
  1814  002B62  0E44               	movlw	68
  1815  002B64  6F9B               	movwf	(pow@x+3)& (0+255),b
  1816  002B66  EC8C  F011         	call	_pow	;wreg free
  1817  002B6A  C098  F0AD         	movff	?_pow,_InitTankVariables$2260
  1818  002B6E  C099  F0AE         	movff	?_pow+1,_InitTankVariables$2260+1
  1819  002B72  C09A  F0AF         	movff	?_pow+2,_InitTankVariables$2260+2
  1820  002B76  C09B  F0B0         	movff	?_pow+3,_InitTankVariables$2260+3
  1821  002B7A                     
  1822                           ;main.c: 178: gd_TankSurfArea_mm2 = 3.1416926f * pow(48 * 25.4 / 2, 2);
  1823  002B7A  C0AD  F047         	movff	_InitTankVariables$2260,___flmul@b
  1824  002B7E  C0AE  F048         	movff	_InitTankVariables$2260+1,___flmul@b+1
  1825  002B82  C0AF  F049         	movff	_InitTankVariables$2260+2,___flmul@b+2
  1826  002B86  C0B0  F04A         	movff	_InitTankVariables$2260+3,___flmul@b+3
  1827  002B8A  0E7E               	movlw	126
  1828  002B8C  6E4B               	movwf	___flmul@a^0,c
  1829  002B8E  0E11               	movlw	17
  1830  002B90  6E4C               	movwf	(___flmul@a+1)^0,c
  1831  002B92  0E49               	movlw	73
  1832  002B94  6E4D               	movwf	(___flmul@a+2)^0,c
  1833  002B96  0E40               	movlw	64
  1834  002B98  6E4E               	movwf	(___flmul@a+3)^0,c
  1835  002B9A  EC02  F009         	call	___flmul	;wreg free
  1836  002B9E  C047  F0C5         	movff	?___flmul,_gd_TankSurfArea_mm2
  1837  002BA2  C048  F0C6         	movff	?___flmul+1,_gd_TankSurfArea_mm2+1
  1838  002BA6  C049  F0C7         	movff	?___flmul+2,_gd_TankSurfArea_mm2+2
  1839  002BAA  C04A  F0C8         	movff	?___flmul+3,_gd_TankSurfArea_mm2+3
  1840  002BAE                     
  1841                           ;main.c: 179: gd_SensorHeight_mm = 72 * 25.4;
  1842  002BAE  0E9A               	movlw	154
  1843  002BB0  0100               	movlb	0	; () banked
  1844  002BB2  6FC1               	movwf	_gd_SensorHeight_mm& (0+255),b
  1845  002BB4  0E99               	movlw	153
  1846  002BB6  6FC2               	movwf	(_gd_SensorHeight_mm+1)& (0+255),b
  1847  002BB8  0EE4               	movlw	228
  1848  002BBA  6FC3               	movwf	(_gd_SensorHeight_mm+2)& (0+255),b
  1849  002BBC  0E44               	movlw	68
  1850  002BBE  6FC4               	movwf	(_gd_SensorHeight_mm+3)& (0+255),b
  1851  002BC0                     
  1852                           ; BSR set to: 0
  1853                           ;main.c: 180: gd_TankGalsPer_mm = gd_TankSurfArea_mm2 * 264.172052e-9;
  1854  002BC0  C0C5  F047         	movff	_gd_TankSurfArea_mm2,___flmul@b
  1855  002BC4  C0C6  F048         	movff	_gd_TankSurfArea_mm2+1,___flmul@b+1
  1856  002BC8  C0C7  F049         	movff	_gd_TankSurfArea_mm2+2,___flmul@b+2
  1857  002BCC  C0C8  F04A         	movff	_gd_TankSurfArea_mm2+3,___flmul@b+3
  1858  002BD0  0E88               	movlw	136
  1859  002BD2  6E4B               	movwf	___flmul@a^0,c
  1860  002BD4  0ED3               	movlw	211
  1861  002BD6  6E4C               	movwf	(___flmul@a+1)^0,c
  1862  002BD8  0E8D               	movlw	141
  1863  002BDA  6E4D               	movwf	(___flmul@a+2)^0,c
  1864  002BDC  0E34               	movlw	52
  1865  002BDE  6E4E               	movwf	(___flmul@a+3)^0,c
  1866  002BE0  EC02  F009         	call	___flmul	;wreg free
  1867  002BE4  C047  F0BD         	movff	?___flmul,_gd_TankGalsPer_mm
  1868  002BE8  C048  F0BE         	movff	?___flmul+1,_gd_TankGalsPer_mm+1
  1869  002BEC  C049  F0BF         	movff	?___flmul+2,_gd_TankGalsPer_mm+2
  1870  002BF0  C04A  F0C0         	movff	?___flmul+3,_gd_TankGalsPer_mm+3
  1871  002BF4                     
  1872                           ;main.c: 181: gd_MaxWaterHeight_mm = 72 * 25.4;
  1873  002BF4  0E9A               	movlw	154
  1874  002BF6  0100               	movlb	0	; () banked
  1875  002BF8  6FB9               	movwf	_gd_MaxWaterHeight_mm& (0+255),b
  1876  002BFA  0E99               	movlw	153
  1877  002BFC  6FBA               	movwf	(_gd_MaxWaterHeight_mm+1)& (0+255),b
  1878  002BFE  0EE4               	movlw	228
  1879  002C00  6FBB               	movwf	(_gd_MaxWaterHeight_mm+2)& (0+255),b
  1880  002C02  0E44               	movlw	68
  1881  002C04  6FBC               	movwf	(_gd_MaxWaterHeight_mm+3)& (0+255),b
  1882  002C06                     
  1883                           ; BSR set to: 0
  1884                           ;main.c: 182: gd_Default_SOS = 331.3e3 * sqrt( 1 + (20.0 / 273.15));
  1885  002C06  0E45               	movlw	69
  1886  002C08  6E1B               	movwf	sqrt@a^0,c
  1887  002C0A  0E5F               	movlw	95
  1888  002C0C  6E1C               	movwf	(sqrt@a+1)^0,c
  1889  002C0E  0E89               	movlw	137
  1890  002C10  6E1D               	movwf	(sqrt@a+2)^0,c
  1891  002C12  0E3F               	movlw	63
  1892  002C14  6E1E               	movwf	(sqrt@a+3)^0,c
  1893  002C16  EC8A  F00E         	call	_sqrt	;wreg free
  1894  002C1A  C01B  F047         	movff	?_sqrt,___flmul@b
  1895  002C1E  C01C  F048         	movff	?_sqrt+1,___flmul@b+1
  1896  002C22  C01D  F049         	movff	?_sqrt+2,___flmul@b+2
  1897  002C26  C01E  F04A         	movff	?_sqrt+3,___flmul@b+3
  1898  002C2A  0E80               	movlw	128
  1899  002C2C  6E4B               	movwf	___flmul@a^0,c
  1900  002C2E  0EC4               	movlw	196
  1901  002C30  6E4C               	movwf	(___flmul@a+1)^0,c
  1902  002C32  0EA1               	movlw	161
  1903  002C34  6E4D               	movwf	(___flmul@a+2)^0,c
  1904  002C36  0E48               	movlw	72
  1905  002C38  6E4E               	movwf	(___flmul@a+3)^0,c
  1906  002C3A  EC02  F009         	call	___flmul	;wreg free
  1907  002C3E  C047  F0B5         	movff	?___flmul,_gd_Default_SOS
  1908  002C42  C048  F0B6         	movff	?___flmul+1,_gd_Default_SOS+1
  1909  002C46  C049  F0B7         	movff	?___flmul+2,_gd_Default_SOS+2
  1910  002C4A  C04A  F0B8         	movff	?___flmul+3,_gd_Default_SOS+3
  1911  002C4E  0012               	return		;funcret
  1912  002C50                     __end_of_InitTankVariables:
  1913                           	callstack 0
  1914                           
  1915 ;; *************** function _pow *****************
  1916 ;; Defined at:
  1917 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\pow.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;  x               4   56[BANK0 ] void 
  1920 ;;  y               4   60[BANK0 ] void 
  1921 ;; Auto vars:     Size  Location     Type
  1922 ;;  yi              4   73[BANK0 ] unsigned long 
  1923 ;;  sign            1   72[BANK0 ] unsigned char 
  1924 ;; Return value:  Size  Location     Type
  1925 ;;                  4   56[BANK0 ] unsigned char 
  1926 ;; Registers used:
  1927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1928 ;; Tracked objects:
  1929 ;;		On entry : 0/0
  1930 ;;		On exit  : 0/0
  1931 ;;		Unchanged: 0/0
  1932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1933 ;;      Params:         0       8       0       0       0       0       0       0       0
  1934 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1935 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1936 ;;      Totals:         0      21       0       0       0       0       0       0       0
  1937 ;;Total ram usage:       21 bytes
  1938 ;; Hardware stack levels used: 1
  1939 ;; Hardware stack levels required when called: 8
  1940 ;; This function calls:
  1941 ;;		___fleq
  1942 ;;		___flge
  1943 ;;		___flmul
  1944 ;;		___flneg
  1945 ;;		___fltol
  1946 ;;		___xxtofl
  1947 ;;		_exp
  1948 ;;		_log
  1949 ;; This function is called by:
  1950 ;;		_InitTankVariables
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text9
  1955  002318                     __ptext9:
  1956                           	callstack 0
  1957  002318                     _pow:
  1958                           	callstack 21
  1959  002318  0E00               	movlw	0
  1960  00231A  0100               	movlb	0	; () banked
  1961  00231C  6FA8               	movwf	pow@sign& (0+255),b
  1962  00231E                     
  1963                           ; BSR set to: 0
  1964  00231E  C098  F033         	movff	pow@x,___fleq@ff1
  1965  002322  C099  F034         	movff	pow@x+1,___fleq@ff1+1
  1966  002326  C09A  F035         	movff	pow@x+2,___fleq@ff1+2
  1967  00232A  C09B  F036         	movff	pow@x+3,___fleq@ff1+3
  1968  00232E  0E00               	movlw	0
  1969  002330  6E37               	movwf	___fleq@ff2^0,c
  1970  002332  0E00               	movlw	0
  1971  002334  6E38               	movwf	(___fleq@ff2+1)^0,c
  1972  002336  0E00               	movlw	0
  1973  002338  6E39               	movwf	(___fleq@ff2+2)^0,c
  1974  00233A  0E00               	movlw	0
  1975  00233C  6E3A               	movwf	(___fleq@ff2+3)^0,c
  1976  00233E  EC07  F019         	call	___fleq	;wreg free
  1977  002342  A0D8               	btfss	status,0,c
  1978  002344  EFA6  F011         	goto	u5571
  1979  002348  EFA8  F011         	goto	u5570
  1980  00234C                     u5571:
  1981  00234C  EFD1  F011         	goto	l5182
  1982  002350                     u5570:
  1983  002350  0E00               	movlw	0
  1984  002352  6E02               	movwf	___flge@ff1^0,c
  1985  002354  0E00               	movlw	0
  1986  002356  6E03               	movwf	(___flge@ff1+1)^0,c
  1987  002358  0E00               	movlw	0
  1988  00235A  6E04               	movwf	(___flge@ff1+2)^0,c
  1989  00235C  0E00               	movlw	0
  1990  00235E  6E05               	movwf	(___flge@ff1+3)^0,c
  1991  002360  C09C  F006         	movff	pow@y,___flge@ff2
  1992  002364  C09D  F007         	movff	pow@y+1,___flge@ff2+1
  1993  002368  C09E  F008         	movff	pow@y+2,___flge@ff2+2
  1994  00236C  C09F  F009         	movff	pow@y+3,___flge@ff2+3
  1995  002370  ECAB  F016         	call	___flge	;wreg free
  1996  002374  A0D8               	btfss	status,0,c
  1997  002376  EFBF  F011         	goto	u5581
  1998  00237A  EFC1  F011         	goto	u5580
  1999  00237E                     u5581:
  2000  00237E  EFC6  F011         	goto	l1419
  2001  002382                     u5580:
  2002  002382  0E00               	movlw	0
  2003  002384  0100               	movlb	0	; () banked
  2004  002386  6FCE               	movwf	(_errno+1)& (0+255),b
  2005  002388  0E21               	movlw	33
  2006  00238A  6FCD               	movwf	_errno& (0+255),b
  2007  00238C                     l1419:
  2008  00238C  0E00               	movlw	0
  2009  00238E  0100               	movlb	0	; () banked
  2010  002390  6F98               	movwf	?_pow& (0+255),b
  2011  002392  0E00               	movlw	0
  2012  002394  6F99               	movwf	(?_pow+1)& (0+255),b
  2013  002396  0E00               	movlw	0
  2014  002398  6F9A               	movwf	(?_pow+2)& (0+255),b
  2015  00239A  0E00               	movlw	0
  2016  00239C  6F9B               	movwf	(?_pow+3)& (0+255),b
  2017  00239E  EFBB  F012         	goto	l1420
  2018  0023A2                     l5182:
  2019  0023A2  C09C  F033         	movff	pow@y,___fleq@ff1
  2020  0023A6  C09D  F034         	movff	pow@y+1,___fleq@ff1+1
  2021  0023AA  C09E  F035         	movff	pow@y+2,___fleq@ff1+2
  2022  0023AE  C09F  F036         	movff	pow@y+3,___fleq@ff1+3
  2023  0023B2  0E00               	movlw	0
  2024  0023B4  6E37               	movwf	___fleq@ff2^0,c
  2025  0023B6  0E00               	movlw	0
  2026  0023B8  6E38               	movwf	(___fleq@ff2+1)^0,c
  2027  0023BA  0E00               	movlw	0
  2028  0023BC  6E39               	movwf	(___fleq@ff2+2)^0,c
  2029  0023BE  0E00               	movlw	0
  2030  0023C0  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2031  0023C2  EC07  F019         	call	___fleq	;wreg free
  2032  0023C6  A0D8               	btfss	status,0,c
  2033  0023C8  EFE8  F011         	goto	u5591
  2034  0023CC  EFEA  F011         	goto	u5590
  2035  0023D0                     u5591:
  2036  0023D0  EFF5  F011         	goto	l5188
  2037  0023D4                     u5590:
  2038  0023D4  0E00               	movlw	0
  2039  0023D6  0100               	movlb	0	; () banked
  2040  0023D8  6F98               	movwf	?_pow& (0+255),b
  2041  0023DA  0E00               	movlw	0
  2042  0023DC  6F99               	movwf	(?_pow+1)& (0+255),b
  2043  0023DE  0E80               	movlw	128
  2044  0023E0  6F9A               	movwf	(?_pow+2)& (0+255),b
  2045  0023E2  0E3F               	movlw	63
  2046  0023E4  6F9B               	movwf	(?_pow+3)& (0+255),b
  2047  0023E6  EFBB  F012         	goto	l1420
  2048  0023EA                     l5188:
  2049  0023EA  0100               	movlb	0	; () banked
  2050  0023EC  BF9B               	btfsc	(pow@x+3)& (0+255),7,b
  2051  0023EE  EFFD  F011         	goto	u5600
  2052  0023F2  EFFB  F011         	goto	u5601
  2053  0023F6                     u5601:
  2054  0023F6  EF58  F012         	goto	l5200
  2055  0023FA                     u5600:
  2056  0023FA                     
  2057                           ; BSR set to: 0
  2058  0023FA  C09C  F01B         	movff	pow@y,___fltol@f1
  2059  0023FE  C09D  F01C         	movff	pow@y+1,___fltol@f1+1
  2060  002402  C09E  F01D         	movff	pow@y+2,___fltol@f1+2
  2061  002406  C09F  F01E         	movff	pow@y+3,___fltol@f1+3
  2062  00240A  EC28  F016         	call	___fltol	;wreg free
  2063  00240E  C01B  F0A9         	movff	?___fltol,pow@yi
  2064  002412  C01C  F0AA         	movff	?___fltol+1,pow@yi+1
  2065  002416  C01D  F0AB         	movff	?___fltol+2,pow@yi+2
  2066  00241A  C01E  F0AC         	movff	?___fltol+3,pow@yi+3
  2067  00241E  C0A9  F025         	movff	pow@yi,___xxtofl@val
  2068  002422  C0AA  F026         	movff	pow@yi+1,___xxtofl@val+1
  2069  002426  C0AB  F027         	movff	pow@yi+2,___xxtofl@val+2
  2070  00242A  C0AC  F028         	movff	pow@yi+3,___xxtofl@val+3
  2071  00242E  0E00               	movlw	0
  2072  002430  ECBC  F012         	call	___xxtofl
  2073  002434  C025  F033         	movff	?___xxtofl,___fleq@ff1
  2074  002438  C026  F034         	movff	?___xxtofl+1,___fleq@ff1+1
  2075  00243C  C027  F035         	movff	?___xxtofl+2,___fleq@ff1+2
  2076  002440  C028  F036         	movff	?___xxtofl+3,___fleq@ff1+3
  2077  002444  C09C  F037         	movff	pow@y,___fleq@ff2
  2078  002448  C09D  F038         	movff	pow@y+1,___fleq@ff2+1
  2079  00244C  C09E  F039         	movff	pow@y+2,___fleq@ff2+2
  2080  002450  C09F  F03A         	movff	pow@y+3,___fleq@ff2+3
  2081  002454  EC07  F019         	call	___fleq	;wreg free
  2082  002458  B0D8               	btfsc	status,0,c
  2083  00245A  EF31  F012         	goto	u5611
  2084  00245E  EF33  F012         	goto	u5610
  2085  002462                     u5611:
  2086  002462  EF42  F012         	goto	l5196
  2087  002466                     u5610:
  2088  002466  0E00               	movlw	0
  2089  002468  0100               	movlb	0	; () banked
  2090  00246A  6FCE               	movwf	(_errno+1)& (0+255),b
  2091  00246C  0E21               	movlw	33
  2092  00246E  6FCD               	movwf	_errno& (0+255),b
  2093  002470  0E00               	movlw	0
  2094  002472  6F98               	movwf	?_pow& (0+255),b
  2095  002474  0E00               	movlw	0
  2096  002476  6F99               	movwf	(?_pow+1)& (0+255),b
  2097  002478  0E00               	movlw	0
  2098  00247A  6F9A               	movwf	(?_pow+2)& (0+255),b
  2099  00247C  0E00               	movlw	0
  2100  00247E  6F9B               	movwf	(?_pow+3)& (0+255),b
  2101  002480  EFBB  F012         	goto	l1420
  2102  002484                     l5196:
  2103  002484  0100               	movlb	0	; () banked
  2104  002486  51A9               	movf	pow@yi& (0+255),w,b
  2105  002488  0B01               	andlw	1
  2106  00248A  6FA8               	movwf	pow@sign& (0+255),b
  2107  00248C                     
  2108                           ; BSR set to: 0
  2109  00248C  C098  F002         	movff	pow@x,___flneg@f1
  2110  002490  C099  F003         	movff	pow@x+1,___flneg@f1+1
  2111  002494  C09A  F004         	movff	pow@x+2,___flneg@f1+2
  2112  002498  C09B  F005         	movff	pow@x+3,___flneg@f1+3
  2113  00249C  ECE4  F01B         	call	___flneg	;wreg free
  2114  0024A0  C002  F098         	movff	?___flneg,pow@x
  2115  0024A4  C003  F099         	movff	?___flneg+1,pow@x+1
  2116  0024A8  C004  F09A         	movff	?___flneg+2,pow@x+2
  2117  0024AC  C005  F09B         	movff	?___flneg+3,pow@x+3
  2118  0024B0                     l5200:
  2119  0024B0  C098  F085         	movff	pow@x,log@x
  2120  0024B4  C099  F086         	movff	pow@x+1,log@x+1
  2121  0024B8  C09A  F087         	movff	pow@x+2,log@x+2
  2122  0024BC  C09B  F088         	movff	pow@x+3,log@x+3
  2123  0024C0  EC96  F013         	call	_log	;wreg free
  2124  0024C4  C085  F0A0         	movff	?_log,_pow$2261
  2125  0024C8  C086  F0A1         	movff	?_log+1,_pow$2261+1
  2126  0024CC  C087  F0A2         	movff	?_log+2,_pow$2261+2
  2127  0024D0  C088  F0A3         	movff	?_log+3,_pow$2261+3
  2128  0024D4  C0A0  F047         	movff	_pow$2261,___flmul@b
  2129  0024D8  C0A1  F048         	movff	_pow$2261+1,___flmul@b+1
  2130  0024DC  C0A2  F049         	movff	_pow$2261+2,___flmul@b+2
  2131  0024E0  C0A3  F04A         	movff	_pow$2261+3,___flmul@b+3
  2132  0024E4  C09C  F04B         	movff	pow@y,___flmul@a
  2133  0024E8  C09D  F04C         	movff	pow@y+1,___flmul@a+1
  2134  0024EC  C09E  F04D         	movff	pow@y+2,___flmul@a+2
  2135  0024F0  C09F  F04E         	movff	pow@y+3,___flmul@a+3
  2136  0024F4  EC02  F009         	call	___flmul	;wreg free
  2137  0024F8  C047  F0A4         	movff	?___flmul,_pow$2262
  2138  0024FC  C048  F0A5         	movff	?___flmul+1,_pow$2262+1
  2139  002500  C049  F0A6         	movff	?___flmul+2,_pow$2262+2
  2140  002504  C04A  F0A7         	movff	?___flmul+3,_pow$2262+3
  2141  002508  C0A4  F08D         	movff	_pow$2262,exp@x
  2142  00250C  C0A5  F08E         	movff	_pow$2262+1,exp@x+1
  2143  002510  C0A6  F08F         	movff	_pow$2262+2,exp@x+2
  2144  002514  C0A7  F090         	movff	_pow$2262+3,exp@x+3
  2145  002518  EC18  F010         	call	_exp	;wreg free
  2146  00251C  C08D  F098         	movff	?_exp,pow@x
  2147  002520  C08E  F099         	movff	?_exp+1,pow@x+1
  2148  002524  C08F  F09A         	movff	?_exp+2,pow@x+2
  2149  002528  C090  F09B         	movff	?_exp+3,pow@x+3
  2150  00252C  0100               	movlb	0	; () banked
  2151  00252E  51A8               	movf	pow@sign& (0+255),w,b
  2152  002530  B4D8               	btfsc	status,2,c
  2153  002532  EF9D  F012         	goto	u5621
  2154  002536  EF9F  F012         	goto	u5620
  2155  00253A                     u5621:
  2156  00253A  EFB3  F012         	goto	l1424
  2157  00253E                     u5620:
  2158  00253E                     
  2159                           ; BSR set to: 0
  2160  00253E  C098  F002         	movff	pow@x,___flneg@f1
  2161  002542  C099  F003         	movff	pow@x+1,___flneg@f1+1
  2162  002546  C09A  F004         	movff	pow@x+2,___flneg@f1+2
  2163  00254A  C09B  F005         	movff	pow@x+3,___flneg@f1+3
  2164  00254E  ECE4  F01B         	call	___flneg	;wreg free
  2165  002552  C002  F098         	movff	?___flneg,?_pow
  2166  002556  C003  F099         	movff	?___flneg+1,?_pow+1
  2167  00255A  C004  F09A         	movff	?___flneg+2,?_pow+2
  2168  00255E  C005  F09B         	movff	?___flneg+3,?_pow+3
  2169  002562  EFBB  F012         	goto	l1420
  2170  002566                     l1424:
  2171                           
  2172                           ; BSR set to: 0
  2173  002566  C098  F098         	movff	pow@x,?_pow
  2174  00256A  C099  F099         	movff	pow@x+1,?_pow+1
  2175  00256E  C09A  F09A         	movff	pow@x+2,?_pow+2
  2176  002572  C09B  F09B         	movff	pow@x+3,?_pow+3
  2177  002576                     l1420:
  2178  002576  0012               	return		;funcret
  2179  002578                     __end_of_pow:
  2180                           	callstack 0
  2181                           
  2182 ;; *************** function _log *****************
  2183 ;; Defined at:
  2184 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\log.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  x               4   37[BANK0 ] unsigned char 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;  exponent        2   41[BANK0 ] int 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  4   37[BANK0 ] int 
  2191 ;; Registers used:
  2192 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2198 ;;      Params:         0       4       0       0       0       0       0       0       0
  2199 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2201 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2202 ;;Total ram usage:        6 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; Hardware stack levels required when called: 6
  2205 ;; This function calls:
  2206 ;;		___fladd
  2207 ;;		___fleq
  2208 ;;		___flmul
  2209 ;;		___xxtofl
  2210 ;;		_eval_poly
  2211 ;;		_frexp
  2212 ;; This function is called by:
  2213 ;;		_pow
  2214 ;; This function uses a non-reentrant model
  2215 ;;
  2216                           
  2217                           	psect	text10
  2218  00272C                     __ptext10:
  2219                           	callstack 0
  2220  00272C                     _log:
  2221                           	callstack 22
  2222  00272C  0100               	movlb	0	; () banked
  2223  00272E  BF88               	btfsc	(log@x+3)& (0+255),7,b
  2224  002730  EF9E  F013         	goto	u5470
  2225  002734  EF9C  F013         	goto	u5471
  2226  002738                     u5471:
  2227  002738  EFAC  F013         	goto	l5110
  2228  00273C                     u5470:
  2229  00273C                     
  2230                           ; BSR set to: 0
  2231  00273C  0E00               	movlw	0
  2232  00273E  6FCE               	movwf	(_errno+1)& (0+255),b
  2233  002740  0E21               	movlw	33
  2234  002742  6FCD               	movwf	_errno& (0+255),b
  2235  002744  0E00               	movlw	0
  2236  002746  6F85               	movwf	?_log& (0+255),b
  2237  002748  0E00               	movlw	0
  2238  00274A  6F86               	movwf	(?_log+1)& (0+255),b
  2239  00274C  0E00               	movlw	0
  2240  00274E  6F87               	movwf	(?_log+2)& (0+255),b
  2241  002750  0E00               	movlw	0
  2242  002752  6F88               	movwf	(?_log+3)& (0+255),b
  2243  002754  EF64  F014         	goto	l1486
  2244  002758                     l5110:
  2245                           
  2246                           ; BSR set to: 0
  2247  002758  C085  F033         	movff	log@x,___fleq@ff1
  2248  00275C  C086  F034         	movff	log@x+1,___fleq@ff1+1
  2249  002760  C087  F035         	movff	log@x+2,___fleq@ff1+2
  2250  002764  C088  F036         	movff	log@x+3,___fleq@ff1+3
  2251  002768  0E00               	movlw	0
  2252  00276A  6E37               	movwf	___fleq@ff2^0,c
  2253  00276C  0E00               	movlw	0
  2254  00276E  6E38               	movwf	(___fleq@ff2+1)^0,c
  2255  002770  0E00               	movlw	0
  2256  002772  6E39               	movwf	(___fleq@ff2+2)^0,c
  2257  002774  0E00               	movlw	0
  2258  002776  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2259  002778  EC07  F019         	call	___fleq	;wreg free
  2260  00277C  A0D8               	btfss	status,0,c
  2261  00277E  EFC3  F013         	goto	u5481
  2262  002782  EFC5  F013         	goto	u5480
  2263  002786                     u5481:
  2264  002786  EFD4  F013         	goto	l5116
  2265  00278A                     u5480:
  2266  00278A  0E00               	movlw	0
  2267  00278C  0100               	movlb	0	; () banked
  2268  00278E  6FCE               	movwf	(_errno+1)& (0+255),b
  2269  002790  0E22               	movlw	34
  2270  002792  6FCD               	movwf	_errno& (0+255),b
  2271  002794  0E00               	movlw	0
  2272  002796  6F85               	movwf	?_log& (0+255),b
  2273  002798  0E00               	movlw	0
  2274  00279A  6F86               	movwf	(?_log+1)& (0+255),b
  2275  00279C  0E00               	movlw	0
  2276  00279E  6F87               	movwf	(?_log+2)& (0+255),b
  2277  0027A0  0E00               	movlw	0
  2278  0027A2  6F88               	movwf	(?_log+3)& (0+255),b
  2279  0027A4  EF64  F014         	goto	l1486
  2280  0027A8                     l5116:
  2281  0027A8  0E00               	movlw	0
  2282  0027AA  6E4B               	movwf	___flmul@a^0,c
  2283  0027AC  0E00               	movlw	0
  2284  0027AE  6E4C               	movwf	(___flmul@a+1)^0,c
  2285  0027B0  0E00               	movlw	0
  2286  0027B2  6E4D               	movwf	(___flmul@a+2)^0,c
  2287  0027B4  0E40               	movlw	64
  2288  0027B6  6E4E               	movwf	(___flmul@a+3)^0,c
  2289  0027B8  0E89               	movlw	low log@exponent
  2290  0027BA  6E43               	movwf	frexp@eptr^0,c
  2291  0027BC  0E00               	movlw	high log@exponent
  2292  0027BE  6E44               	movwf	(frexp@eptr+1)^0,c
  2293  0027C0  C085  F03F         	movff	log@x,frexp@value
  2294  0027C4  C086  F040         	movff	log@x+1,frexp@value+1
  2295  0027C8  C087  F041         	movff	log@x+2,frexp@value+2
  2296  0027CC  C088  F042         	movff	log@x+3,frexp@value+3
  2297  0027D0  ECA5  F018         	call	_frexp	;wreg free
  2298  0027D4  C03F  F047         	movff	?_frexp,___flmul@b
  2299  0027D8  C040  F048         	movff	?_frexp+1,___flmul@b+1
  2300  0027DC  C041  F049         	movff	?_frexp+2,___flmul@b+2
  2301  0027E0  C042  F04A         	movff	?_frexp+3,___flmul@b+3
  2302  0027E4  EC02  F009         	call	___flmul	;wreg free
  2303  0027E8  C047  F053         	movff	?___flmul,___fladd@b
  2304  0027EC  C048  F054         	movff	?___flmul+1,___fladd@b+1
  2305  0027F0  C049  F055         	movff	?___flmul+2,___fladd@b+2
  2306  0027F4  C04A  F056         	movff	?___flmul+3,___fladd@b+3
  2307  0027F8  0E00               	movlw	0
  2308  0027FA  6E57               	movwf	___fladd@a^0,c
  2309  0027FC  0E00               	movlw	0
  2310  0027FE  6E58               	movwf	(___fladd@a+1)^0,c
  2311  002800  0E80               	movlw	128
  2312  002802  6E59               	movwf	(___fladd@a+2)^0,c
  2313  002804  0EBF               	movlw	191
  2314  002806  6E5A               	movwf	(___fladd@a+3)^0,c
  2315  002808  EC45  F004         	call	___fladd	;wreg free
  2316  00280C  C053  F085         	movff	?___fladd,log@x
  2317  002810  C054  F086         	movff	?___fladd+1,log@x+1
  2318  002814  C055  F087         	movff	?___fladd+2,log@x+2
  2319  002818  C056  F088         	movff	?___fladd+3,log@x+3
  2320  00281C  0100               	movlb	0	; () banked
  2321  00281E  0789               	decf	log@exponent& (0+255),f,b
  2322  002820  A0D8               	btfss	status,0,c
  2323  002822  078A               	decf	(log@exponent+1)& (0+255),f,b
  2324  002824                     
  2325                           ; BSR set to: 0
  2326  002824  C085  F075         	movff	log@x,eval_poly@x
  2327  002828  C086  F076         	movff	log@x+1,eval_poly@x+1
  2328  00282C  C087  F077         	movff	log@x+2,eval_poly@x+2
  2329  002830  C088  F078         	movff	log@x+3,eval_poly@x+3
  2330  002834  0E33               	movlw	low log@coeff
  2331  002836  6F79               	movwf	eval_poly@d& (0+255),b
  2332  002838  0E08               	movlw	high log@coeff
  2333  00283A  6F7A               	movwf	(eval_poly@d+1)& (0+255),b
  2334  00283C  0E00               	movlw	0
  2335  00283E  6F7C               	movwf	(eval_poly@n+1)& (0+255),b
  2336  002840  0E08               	movlw	8
  2337  002842  6F7B               	movwf	eval_poly@n& (0+255),b
  2338  002844  EC2D  F017         	call	_eval_poly	;wreg free
  2339  002848  C075  F085         	movff	?_eval_poly,log@x
  2340  00284C  C076  F086         	movff	?_eval_poly+1,log@x+1
  2341  002850  C077  F087         	movff	?_eval_poly+2,log@x+2
  2342  002854  C078  F088         	movff	?_eval_poly+3,log@x+3
  2343  002858  0E18               	movlw	24
  2344  00285A  6E4B               	movwf	___flmul@a^0,c
  2345  00285C  0E72               	movlw	114
  2346  00285E  6E4C               	movwf	(___flmul@a+1)^0,c
  2347  002860  0E31               	movlw	49
  2348  002862  6E4D               	movwf	(___flmul@a+2)^0,c
  2349  002864  0E3F               	movlw	63
  2350  002866  6E4E               	movwf	(___flmul@a+3)^0,c
  2351  002868  C089  F025         	movff	log@exponent,___xxtofl@val
  2352  00286C  C08A  F026         	movff	log@exponent+1,___xxtofl@val+1
  2353  002870  0E00               	movlw	0
  2354  002872  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  2355  002874  0EFF               	movlw	-1
  2356  002876  6E27               	movwf	(___xxtofl@val+2)^0,c
  2357  002878  6E28               	movwf	(___xxtofl@val+3)^0,c
  2358  00287A  0E01               	movlw	1
  2359  00287C  ECBC  F012         	call	___xxtofl
  2360  002880  C025  F047         	movff	?___xxtofl,___flmul@b
  2361  002884  C026  F048         	movff	?___xxtofl+1,___flmul@b+1
  2362  002888  C027  F049         	movff	?___xxtofl+2,___flmul@b+2
  2363  00288C  C028  F04A         	movff	?___xxtofl+3,___flmul@b+3
  2364  002890  EC02  F009         	call	___flmul	;wreg free
  2365  002894  C047  F053         	movff	?___flmul,___fladd@b
  2366  002898  C048  F054         	movff	?___flmul+1,___fladd@b+1
  2367  00289C  C049  F055         	movff	?___flmul+2,___fladd@b+2
  2368  0028A0  C04A  F056         	movff	?___flmul+3,___fladd@b+3
  2369  0028A4  C085  F057         	movff	log@x,___fladd@a
  2370  0028A8  C086  F058         	movff	log@x+1,___fladd@a+1
  2371  0028AC  C087  F059         	movff	log@x+2,___fladd@a+2
  2372  0028B0  C088  F05A         	movff	log@x+3,___fladd@a+3
  2373  0028B4  EC45  F004         	call	___fladd	;wreg free
  2374  0028B8  C053  F085         	movff	?___fladd,?_log
  2375  0028BC  C054  F086         	movff	?___fladd+1,?_log+1
  2376  0028C0  C055  F087         	movff	?___fladd+2,?_log+2
  2377  0028C4  C056  F088         	movff	?___fladd+3,?_log+3
  2378  0028C8                     l1486:
  2379  0028C8  0012               	return		;funcret
  2380  0028CA                     __end_of_log:
  2381                           	callstack 0
  2382                           
  2383 ;; *************** function _exp *****************
  2384 ;; Defined at:
  2385 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\exp.c"
  2386 ;; Parameters:    Size  Location     Type
  2387 ;;  x               4   45[BANK0 ] int 
  2388 ;; Auto vars:     Size  Location     Type
  2389 ;;  exponent        2   53[BANK0 ] int 
  2390 ;;  sign            1   55[BANK0 ] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  4   45[BANK0 ] unsigned char 
  2393 ;; Registers used:
  2394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2400 ;;      Params:         0       4       0       0       0       0       0       0       0
  2401 ;;      Locals:         0       7       0       0       0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2403 ;;      Totals:         0      11       0       0       0       0       0       0       0
  2404 ;;Total ram usage:       11 bytes
  2405 ;; Hardware stack levels used: 1
  2406 ;; Hardware stack levels required when called: 7
  2407 ;; This function calls:
  2408 ;;		___fldiv
  2409 ;;		___fleq
  2410 ;;		___flge
  2411 ;;		___flmul
  2412 ;;		___flneg
  2413 ;;		___flsub
  2414 ;;		___fltol
  2415 ;;		___xxtofl
  2416 ;;		_eval_poly
  2417 ;;		_floor
  2418 ;;		_ldexp
  2419 ;; This function is called by:
  2420 ;;		_pow
  2421 ;; This function uses a non-reentrant model
  2422 ;;
  2423                           
  2424                           	psect	text11
  2425  002030                     __ptext11:
  2426                           	callstack 0
  2427  002030                     _exp:
  2428                           	callstack 21
  2429  002030  C08D  F033         	movff	exp@x,___fleq@ff1
  2430  002034  C08E  F034         	movff	exp@x+1,___fleq@ff1+1
  2431  002038  C08F  F035         	movff	exp@x+2,___fleq@ff1+2
  2432  00203C  C090  F036         	movff	exp@x+3,___fleq@ff1+3
  2433  002040  0E00               	movlw	0
  2434  002042  6E37               	movwf	___fleq@ff2^0,c
  2435  002044  0E00               	movlw	0
  2436  002046  6E38               	movwf	(___fleq@ff2+1)^0,c
  2437  002048  0E00               	movlw	0
  2438  00204A  6E39               	movwf	(___fleq@ff2+2)^0,c
  2439  00204C  0E00               	movlw	0
  2440  00204E  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2441  002050  EC07  F019         	call	___fleq	;wreg free
  2442  002054  A0D8               	btfss	status,0,c
  2443  002056  EF2F  F010         	goto	u5491
  2444  00205A  EF31  F010         	goto	u5490
  2445  00205E                     u5491:
  2446  00205E  EF3C  F010         	goto	l5132
  2447  002062                     u5490:
  2448  002062  0E00               	movlw	0
  2449  002064  0100               	movlb	0	; () banked
  2450  002066  6F8D               	movwf	?_exp& (0+255),b
  2451  002068  0E00               	movlw	0
  2452  00206A  6F8E               	movwf	(?_exp+1)& (0+255),b
  2453  00206C  0E80               	movlw	128
  2454  00206E  6F8F               	movwf	(?_exp+2)& (0+255),b
  2455  002070  0E3F               	movlw	63
  2456  002072  6F90               	movwf	(?_exp+3)& (0+255),b
  2457  002074  EF8B  F011         	goto	l1438
  2458  002078                     l5132:
  2459  002078  0E18               	movlw	24
  2460  00207A  6E02               	movwf	___flge@ff1^0,c
  2461  00207C  0E72               	movlw	114
  2462  00207E  6E03               	movwf	(___flge@ff1+1)^0,c
  2463  002080  0E31               	movlw	49
  2464  002082  6E04               	movwf	(___flge@ff1+2)^0,c
  2465  002084  0E44               	movlw	68
  2466  002086  6E05               	movwf	(___flge@ff1+3)^0,c
  2467  002088  C08D  F006         	movff	exp@x,___flge@ff2
  2468  00208C  C08E  F007         	movff	exp@x+1,___flge@ff2+1
  2469  002090  C08F  F008         	movff	exp@x+2,___flge@ff2+2
  2470  002094  C090  F009         	movff	exp@x+3,___flge@ff2+3
  2471  002098  ECAB  F016         	call	___flge	;wreg free
  2472  00209C  B0D8               	btfsc	status,0,c
  2473  00209E  EF53  F010         	goto	u5501
  2474  0020A2  EF55  F010         	goto	u5500
  2475  0020A6                     u5501:
  2476  0020A6  EF64  F010         	goto	l5138
  2477  0020AA                     u5500:
  2478  0020AA  0E00               	movlw	0
  2479  0020AC  0100               	movlb	0	; () banked
  2480  0020AE  6FCE               	movwf	(_errno+1)& (0+255),b
  2481  0020B0  0E22               	movlw	34
  2482  0020B2  6FCD               	movwf	_errno& (0+255),b
  2483  0020B4  0EFF               	movlw	255
  2484  0020B6  6F8D               	movwf	?_exp& (0+255),b
  2485  0020B8  0EFF               	movlw	255
  2486  0020BA  6F8E               	movwf	(?_exp+1)& (0+255),b
  2487  0020BC  0E7F               	movlw	127
  2488  0020BE  6F8F               	movwf	(?_exp+2)& (0+255),b
  2489  0020C0  0E7F               	movlw	127
  2490  0020C2  6F90               	movwf	(?_exp+3)& (0+255),b
  2491  0020C4  EF8B  F011         	goto	l1438
  2492  0020C8                     l5138:
  2493  0020C8  C08D  F002         	movff	exp@x,___flge@ff1
  2494  0020CC  C08E  F003         	movff	exp@x+1,___flge@ff1+1
  2495  0020D0  C08F  F004         	movff	exp@x+2,___flge@ff1+2
  2496  0020D4  C090  F005         	movff	exp@x+3,___flge@ff1+3
  2497  0020D8  0E87               	movlw	135
  2498  0020DA  6E06               	movwf	___flge@ff2^0,c
  2499  0020DC  0E48               	movlw	72
  2500  0020DE  6E07               	movwf	(___flge@ff2+1)^0,c
  2501  0020E0  0E3A               	movlw	58
  2502  0020E2  6E08               	movwf	(___flge@ff2+2)^0,c
  2503  0020E4  0EC4               	movlw	196
  2504  0020E6  6E09               	movwf	(___flge@ff2+3)^0,c
  2505  0020E8  ECAB  F016         	call	___flge	;wreg free
  2506  0020EC  B0D8               	btfsc	status,0,c
  2507  0020EE  EF7B  F010         	goto	u5511
  2508  0020F2  EF7D  F010         	goto	u5510
  2509  0020F6                     u5511:
  2510  0020F6  EF8C  F010         	goto	l5144
  2511  0020FA                     u5510:
  2512  0020FA  0E00               	movlw	0
  2513  0020FC  0100               	movlb	0	; () banked
  2514  0020FE  6FCE               	movwf	(_errno+1)& (0+255),b
  2515  002100  0E22               	movlw	34
  2516  002102  6FCD               	movwf	_errno& (0+255),b
  2517  002104  0E00               	movlw	0
  2518  002106  6F8D               	movwf	?_exp& (0+255),b
  2519  002108  0E00               	movlw	0
  2520  00210A  6F8E               	movwf	(?_exp+1)& (0+255),b
  2521  00210C  0E00               	movlw	0
  2522  00210E  6F8F               	movwf	(?_exp+2)& (0+255),b
  2523  002110  0E00               	movlw	0
  2524  002112  6F90               	movwf	(?_exp+3)& (0+255),b
  2525  002114  EF8B  F011         	goto	l1438
  2526  002118                     l5144:
  2527  002118  0100               	movlb	0	; () banked
  2528  00211A  BF90               	btfsc	(exp@x+3)& (0+255),7,b
  2529  00211C  EF92  F010         	goto	u5521
  2530  002120  EF95  F010         	goto	u5520
  2531  002124                     u5521:
  2532  002124  0E01               	movlw	1
  2533  002126  EF96  F010         	goto	u5530
  2534  00212A                     u5520:
  2535  00212A  0E00               	movlw	0
  2536  00212C                     u5530:
  2537  00212C  6F97               	movwf	exp@sign& (0+255),b
  2538  00212E                     
  2539                           ; BSR set to: 0
  2540  00212E  5197               	movf	exp@sign& (0+255),w,b
  2541  002130  B4D8               	btfsc	status,2,c
  2542  002132  EF9D  F010         	goto	u5541
  2543  002136  EF9F  F010         	goto	u5540
  2544  00213A                     u5541:
  2545  00213A  EFB1  F010         	goto	l5150
  2546  00213E                     u5540:
  2547  00213E                     
  2548                           ; BSR set to: 0
  2549  00213E  C08D  F002         	movff	exp@x,___flneg@f1
  2550  002142  C08E  F003         	movff	exp@x+1,___flneg@f1+1
  2551  002146  C08F  F004         	movff	exp@x+2,___flneg@f1+2
  2552  00214A  C090  F005         	movff	exp@x+3,___flneg@f1+3
  2553  00214E  ECE4  F01B         	call	___flneg	;wreg free
  2554  002152  C002  F08D         	movff	?___flneg,exp@x
  2555  002156  C003  F08E         	movff	?___flneg+1,exp@x+1
  2556  00215A  C004  F08F         	movff	?___flneg+2,exp@x+2
  2557  00215E  C005  F090         	movff	?___flneg+3,exp@x+3
  2558  002162                     l5150:
  2559  002162  C08D  F047         	movff	exp@x,___flmul@b
  2560  002166  C08E  F048         	movff	exp@x+1,___flmul@b+1
  2561  00216A  C08F  F049         	movff	exp@x+2,___flmul@b+2
  2562  00216E  C090  F04A         	movff	exp@x+3,___flmul@b+3
  2563  002172  0E3B               	movlw	59
  2564  002174  6E4B               	movwf	___flmul@a^0,c
  2565  002176  0EAA               	movlw	170
  2566  002178  6E4C               	movwf	(___flmul@a+1)^0,c
  2567  00217A  0EB8               	movlw	184
  2568  00217C  6E4D               	movwf	(___flmul@a+2)^0,c
  2569  00217E  0E3F               	movlw	63
  2570  002180  6E4E               	movwf	(___flmul@a+3)^0,c
  2571  002182  EC02  F009         	call	___flmul	;wreg free
  2572  002186  C047  F08D         	movff	?___flmul,exp@x
  2573  00218A  C048  F08E         	movff	?___flmul+1,exp@x+1
  2574  00218E  C049  F08F         	movff	?___flmul+2,exp@x+2
  2575  002192  C04A  F090         	movff	?___flmul+3,exp@x+3
  2576  002196  C08D  F075         	movff	exp@x,floor@x
  2577  00219A  C08E  F076         	movff	exp@x+1,floor@x+1
  2578  00219E  C08F  F077         	movff	exp@x+2,floor@x+2
  2579  0021A2  C090  F078         	movff	exp@x+3,floor@x+3
  2580  0021A6  EC65  F014         	call	_floor	;wreg free
  2581  0021AA  C075  F091         	movff	?_floor,_exp$2263
  2582  0021AE  C076  F092         	movff	?_floor+1,_exp$2263+1
  2583  0021B2  C077  F093         	movff	?_floor+2,_exp$2263+2
  2584  0021B6  C078  F094         	movff	?_floor+3,_exp$2263+3
  2585  0021BA  C091  F01B         	movff	_exp$2263,___fltol@f1
  2586  0021BE  C092  F01C         	movff	_exp$2263+1,___fltol@f1+1
  2587  0021C2  C093  F01D         	movff	_exp$2263+2,___fltol@f1+2
  2588  0021C6  C094  F01E         	movff	_exp$2263+3,___fltol@f1+3
  2589  0021CA  EC28  F016         	call	___fltol	;wreg free
  2590  0021CE  C01B  F095         	movff	?___fltol,exp@exponent
  2591  0021D2  C01C  F096         	movff	?___fltol+1,exp@exponent+1
  2592  0021D6  C08D  F075         	movff	exp@x,___flsub@b
  2593  0021DA  C08E  F076         	movff	exp@x+1,___flsub@b+1
  2594  0021DE  C08F  F077         	movff	exp@x+2,___flsub@b+2
  2595  0021E2  C090  F078         	movff	exp@x+3,___flsub@b+3
  2596  0021E6  C095  F025         	movff	exp@exponent,___xxtofl@val
  2597  0021EA  C096  F026         	movff	exp@exponent+1,___xxtofl@val+1
  2598  0021EE  0E00               	movlw	0
  2599  0021F0  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  2600  0021F2  0EFF               	movlw	-1
  2601  0021F4  6E27               	movwf	(___xxtofl@val+2)^0,c
  2602  0021F6  6E28               	movwf	(___xxtofl@val+3)^0,c
  2603  0021F8  0E01               	movlw	1
  2604  0021FA  ECBC  F012         	call	___xxtofl
  2605  0021FE  C025  F079         	movff	?___xxtofl,___flsub@a
  2606  002202  C026  F07A         	movff	?___xxtofl+1,___flsub@a+1
  2607  002206  C027  F07B         	movff	?___xxtofl+2,___flsub@a+2
  2608  00220A  C028  F07C         	movff	?___xxtofl+3,___flsub@a+3
  2609  00220E  ECC0  F01B         	call	___flsub	;wreg free
  2610  002212  C075  F08D         	movff	?___flsub,exp@x
  2611  002216  C076  F08E         	movff	?___flsub+1,exp@x+1
  2612  00221A  C077  F08F         	movff	?___flsub+2,exp@x+2
  2613  00221E  C078  F090         	movff	?___flsub+3,exp@x+3
  2614  002222  C08D  F075         	movff	exp@x,eval_poly@x
  2615  002226  C08E  F076         	movff	exp@x+1,eval_poly@x+1
  2616  00222A  C08F  F077         	movff	exp@x+2,eval_poly@x+2
  2617  00222E  C090  F078         	movff	exp@x+3,eval_poly@x+3
  2618  002232  0E0B               	movlw	low exp@coeff
  2619  002234  0100               	movlb	0	; () banked
  2620  002236  6F79               	movwf	eval_poly@d& (0+255),b
  2621  002238  0E08               	movlw	high exp@coeff
  2622  00223A  6F7A               	movwf	(eval_poly@d+1)& (0+255),b
  2623  00223C  0E00               	movlw	0
  2624  00223E  6F7C               	movwf	(eval_poly@n+1)& (0+255),b
  2625  002240  0E09               	movlw	9
  2626  002242  6F7B               	movwf	eval_poly@n& (0+255),b
  2627  002244  EC2D  F017         	call	_eval_poly	;wreg free
  2628  002248  C075  F085         	movff	?_eval_poly,ldexp@value
  2629  00224C  C076  F086         	movff	?_eval_poly+1,ldexp@value+1
  2630  002250  C077  F087         	movff	?_eval_poly+2,ldexp@value+2
  2631  002254  C078  F088         	movff	?_eval_poly+3,ldexp@value+3
  2632  002258  C095  F089         	movff	exp@exponent,ldexp@newexp
  2633  00225C  C096  F08A         	movff	exp@exponent+1,ldexp@newexp+1
  2634  002260  EC06  F015         	call	_ldexp	;wreg free
  2635  002264  C085  F08D         	movff	?_ldexp,exp@x
  2636  002268  C086  F08E         	movff	?_ldexp+1,exp@x+1
  2637  00226C  C087  F08F         	movff	?_ldexp+2,exp@x+2
  2638  002270  C088  F090         	movff	?_ldexp+3,exp@x+3
  2639  002274  0100               	movlb	0	; () banked
  2640  002276  5197               	movf	exp@sign& (0+255),w,b
  2641  002278  B4D8               	btfsc	status,2,c
  2642  00227A  EF41  F011         	goto	u5551
  2643  00227E  EF43  F011         	goto	u5550
  2644  002282                     u5551:
  2645  002282  EF83  F011         	goto	l1442
  2646  002286                     u5550:
  2647  002286                     
  2648                           ; BSR set to: 0
  2649  002286  C08D  F033         	movff	exp@x,___fleq@ff1
  2650  00228A  C08E  F034         	movff	exp@x+1,___fleq@ff1+1
  2651  00228E  C08F  F035         	movff	exp@x+2,___fleq@ff1+2
  2652  002292  C090  F036         	movff	exp@x+3,___fleq@ff1+3
  2653  002296  0EFF               	movlw	255
  2654  002298  6E37               	movwf	___fleq@ff2^0,c
  2655  00229A  0EFF               	movlw	255
  2656  00229C  6E38               	movwf	(___fleq@ff2+1)^0,c
  2657  00229E  0E7F               	movlw	127
  2658  0022A0  6E39               	movwf	(___fleq@ff2+2)^0,c
  2659  0022A2  0E7F               	movlw	127
  2660  0022A4  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2661  0022A6  EC07  F019         	call	___fleq	;wreg free
  2662  0022AA  A0D8               	btfss	status,0,c
  2663  0022AC  EF5A  F011         	goto	u5561
  2664  0022B0  EF5C  F011         	goto	u5560
  2665  0022B4                     u5561:
  2666  0022B4  EF67  F011         	goto	l5168
  2667  0022B8                     u5560:
  2668  0022B8  0E00               	movlw	0
  2669  0022BA  0100               	movlb	0	; () banked
  2670  0022BC  6F8D               	movwf	?_exp& (0+255),b
  2671  0022BE  0E00               	movlw	0
  2672  0022C0  6F8E               	movwf	(?_exp+1)& (0+255),b
  2673  0022C2  0E00               	movlw	0
  2674  0022C4  6F8F               	movwf	(?_exp+2)& (0+255),b
  2675  0022C6  0E00               	movlw	0
  2676  0022C8  6F90               	movwf	(?_exp+3)& (0+255),b
  2677  0022CA  EF8B  F011         	goto	l1438
  2678  0022CE                     l5168:
  2679  0022CE  0E00               	movlw	0
  2680  0022D0  6E02               	movwf	___fldiv@b^0,c
  2681  0022D2  0E00               	movlw	0
  2682  0022D4  6E03               	movwf	(___fldiv@b+1)^0,c
  2683  0022D6  0E80               	movlw	128
  2684  0022D8  6E04               	movwf	(___fldiv@b+2)^0,c
  2685  0022DA  0E3F               	movlw	63
  2686  0022DC  6E05               	movwf	(___fldiv@b+3)^0,c
  2687  0022DE  C08D  F006         	movff	exp@x,___fldiv@a
  2688  0022E2  C08E  F007         	movff	exp@x+1,___fldiv@a+1
  2689  0022E6  C08F  F008         	movff	exp@x+2,___fldiv@a+2
  2690  0022EA  C090  F009         	movff	exp@x+3,___fldiv@a+3
  2691  0022EE  EC18  F00B         	call	___fldiv	;wreg free
  2692  0022F2  C002  F08D         	movff	?___fldiv,?_exp
  2693  0022F6  C003  F08E         	movff	?___fldiv+1,?_exp+1
  2694  0022FA  C004  F08F         	movff	?___fldiv+2,?_exp+2
  2695  0022FE  C005  F090         	movff	?___fldiv+3,?_exp+3
  2696  002302  EF8B  F011         	goto	l1438
  2697  002306                     l1442:
  2698                           
  2699                           ; BSR set to: 0
  2700  002306  C08D  F08D         	movff	exp@x,?_exp
  2701  00230A  C08E  F08E         	movff	exp@x+1,?_exp+1
  2702  00230E  C08F  F08F         	movff	exp@x+2,?_exp+2
  2703  002312  C090  F090         	movff	exp@x+3,?_exp+3
  2704  002316                     l1438:
  2705  002316  0012               	return		;funcret
  2706  002318                     __end_of_exp:
  2707                           	callstack 0
  2708                           
  2709 ;; *************** function _ldexp *****************
  2710 ;; Defined at:
  2711 ;;		line 277 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\frexp.c"
  2712 ;; Parameters:    Size  Location     Type
  2713 ;;  value           4   37[BANK0 ] unsigned char 
  2714 ;;  newexp          2   41[BANK0 ] int 
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  4   37[BANK0 ] int 
  2719 ;; Registers used:
  2720 ;;		wreg, status,2, status,0, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2726 ;;      Params:         0       6       0       0       0       0       0       0       0
  2727 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2728 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2729 ;;      Totals:         0       8       0       0       0       0       0       0       0
  2730 ;;Total ram usage:        8 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; Hardware stack levels required when called: 5
  2733 ;; This function calls:
  2734 ;;		___fleq
  2735 ;; This function is called by:
  2736 ;;		_exp
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text12
  2741  002A0C                     __ptext12:
  2742                           	callstack 0
  2743  002A0C                     _ldexp:
  2744                           	callstack 22
  2745  002A0C  C085  F033         	movff	ldexp@value,___fleq@ff1
  2746  002A10  C086  F034         	movff	ldexp@value+1,___fleq@ff1+1
  2747  002A14  C087  F035         	movff	ldexp@value+2,___fleq@ff1+2
  2748  002A18  C088  F036         	movff	ldexp@value+3,___fleq@ff1+3
  2749  002A1C  0E00               	movlw	0
  2750  002A1E  6E37               	movwf	___fleq@ff2^0,c
  2751  002A20  0E00               	movlw	0
  2752  002A22  6E38               	movwf	(___fleq@ff2+1)^0,c
  2753  002A24  0E00               	movlw	0
  2754  002A26  6E39               	movwf	(___fleq@ff2+2)^0,c
  2755  002A28  0E00               	movlw	0
  2756  002A2A  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2757  002A2C  EC07  F019         	call	___fleq	;wreg free
  2758  002A30  A0D8               	btfss	status,0,c
  2759  002A32  EF1D  F015         	goto	u5421
  2760  002A36  EF1F  F015         	goto	u5420
  2761  002A3A                     u5421:
  2762  002A3A  EF2A  F015         	goto	l5074
  2763  002A3E                     u5420:
  2764  002A3E  0E00               	movlw	0
  2765  002A40  0100               	movlb	0	; () banked
  2766  002A42  6F85               	movwf	?_ldexp& (0+255),b
  2767  002A44  0E00               	movlw	0
  2768  002A46  6F86               	movwf	(?_ldexp+1)& (0+255),b
  2769  002A48  0E00               	movlw	0
  2770  002A4A  6F87               	movwf	(?_ldexp+2)& (0+255),b
  2771  002A4C  0E00               	movlw	0
  2772  002A4E  6F88               	movwf	(?_ldexp+3)& (0+255),b
  2773  002A50  EFA1  F015         	goto	l1468
  2774  002A54                     l5074:
  2775  002A54  0100               	movlb	0	; () banked
  2776  002A56  5188               	movf	(ldexp@value+3)& (0+255),w,b
  2777  002A58  0B7F               	andlw	127
  2778  002A5A  6F8B               	movwf	??_ldexp& (0+255),b
  2779  002A5C  6B8C               	clrf	(??_ldexp+1)& (0+255),b
  2780  002A5E  90D8               	bcf	status,0,c
  2781  002A60  378B               	rlcf	??_ldexp& (0+255),f,b
  2782  002A62  378C               	rlcf	(??_ldexp+1)& (0+255),f,b
  2783  002A64  518B               	movf	??_ldexp& (0+255),w,b
  2784  002A66  2789               	addwf	ldexp@newexp& (0+255),f,b
  2785  002A68  518C               	movf	(??_ldexp+1)& (0+255),w,b
  2786  002A6A  238A               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  2787  002A6C  BF87               	btfsc	(ldexp@value+2)& (0+255),7,b
  2788  002A6E  EF3B  F015         	goto	u5431
  2789  002A72  EF3F  F015         	goto	u5430
  2790  002A76                     u5431:
  2791  002A76  6B8B               	clrf	??_ldexp& (0+255),b
  2792  002A78  2B8B               	incf	??_ldexp& (0+255),f,b
  2793  002A7A  EF41  F015         	goto	u5438
  2794  002A7E                     u5430:
  2795  002A7E  0100               	movlb	0	; () banked
  2796  002A80  6B8B               	clrf	??_ldexp& (0+255),b
  2797  002A82                     u5438:
  2798  002A82  518B               	movf	??_ldexp& (0+255),w,b
  2799  002A84  2789               	addwf	ldexp@newexp& (0+255),f,b
  2800  002A86  0E00               	movlw	0
  2801  002A88  238A               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  2802  002A8A  BF8A               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  2803  002A8C  EF4C  F015         	goto	u5440
  2804  002A90  EF4A  F015         	goto	u5441
  2805  002A94                     u5441:
  2806  002A94  EF5A  F015         	goto	l5082
  2807  002A98                     u5440:
  2808  002A98                     
  2809                           ; BSR set to: 0
  2810  002A98  0E00               	movlw	0
  2811  002A9A  6FCE               	movwf	(_errno+1)& (0+255),b
  2812  002A9C  0E22               	movlw	34
  2813  002A9E  6FCD               	movwf	_errno& (0+255),b
  2814  002AA0  0E00               	movlw	0
  2815  002AA2  6F85               	movwf	?_ldexp& (0+255),b
  2816  002AA4  0E00               	movlw	0
  2817  002AA6  6F86               	movwf	(?_ldexp+1)& (0+255),b
  2818  002AA8  0E00               	movlw	0
  2819  002AAA  6F87               	movwf	(?_ldexp+2)& (0+255),b
  2820  002AAC  0E00               	movlw	0
  2821  002AAE  6F88               	movwf	(?_ldexp+3)& (0+255),b
  2822  002AB0  EFA1  F015         	goto	l1468
  2823  002AB4                     l5082:
  2824                           
  2825                           ; BSR set to: 0
  2826  002AB4  BF8A               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  2827  002AB6  EF63  F015         	goto	u5451
  2828  002ABA  058A               	decf	(ldexp@newexp+1)& (0+255),w,b
  2829  002ABC  A0D8               	btfss	status,0,c
  2830  002ABE  EF63  F015         	goto	u5451
  2831  002AC2  EF65  F015         	goto	u5450
  2832  002AC6                     u5451:
  2833  002AC6  EF84  F015         	goto	l5098
  2834  002ACA                     u5450:
  2835  002ACA                     
  2836                           ; BSR set to: 0
  2837  002ACA  0E00               	movlw	0
  2838  002ACC  6FCE               	movwf	(_errno+1)& (0+255),b
  2839  002ACE  0E22               	movlw	34
  2840  002AD0  6FCD               	movwf	_errno& (0+255),b
  2841  002AD2                     
  2842                           ; BSR set to: 0
  2843  002AD2  BF88               	btfsc	(ldexp@value+3)& (0+255),7,b
  2844  002AD4  EF70  F015         	goto	u5460
  2845  002AD8  EF6E  F015         	goto	u5461
  2846  002ADC                     u5461:
  2847  002ADC  EF7A  F015         	goto	l5094
  2848  002AE0                     u5460:
  2849  002AE0                     
  2850                           ; BSR set to: 0
  2851  002AE0  0EFF               	movlw	255
  2852  002AE2  6F85               	movwf	?_ldexp& (0+255),b
  2853  002AE4  0EFF               	movlw	255
  2854  002AE6  6F86               	movwf	(?_ldexp+1)& (0+255),b
  2855  002AE8  0E7F               	movlw	127
  2856  002AEA  6F87               	movwf	(?_ldexp+2)& (0+255),b
  2857  002AEC  0EFF               	movlw	255
  2858  002AEE  6F88               	movwf	(?_ldexp+3)& (0+255),b
  2859  002AF0  EFA1  F015         	goto	l1468
  2860  002AF4                     l5094:
  2861                           
  2862                           ; BSR set to: 0
  2863  002AF4  0EFF               	movlw	255
  2864  002AF6  6F85               	movwf	?_ldexp& (0+255),b
  2865  002AF8  0EFF               	movlw	255
  2866  002AFA  6F86               	movwf	(?_ldexp+1)& (0+255),b
  2867  002AFC  0E7F               	movlw	127
  2868  002AFE  6F87               	movwf	(?_ldexp+2)& (0+255),b
  2869  002B00  0E7F               	movlw	127
  2870  002B02  6F88               	movwf	(?_ldexp+3)& (0+255),b
  2871  002B04  EFA1  F015         	goto	l1468
  2872  002B08                     l5098:
  2873                           
  2874                           ; BSR set to: 0
  2875  002B08  358A               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  2876  002B0A  318A               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  2877  002B0C  6F8C               	movwf	(??_ldexp+1)& (0+255),b
  2878  002B0E  3189               	rrcf	ldexp@newexp& (0+255),w,b
  2879  002B10  6F8B               	movwf	??_ldexp& (0+255),b
  2880  002B12  5188               	movf	(ldexp@value+3)& (0+255),w,b
  2881  002B14  198B               	xorwf	??_ldexp& (0+255),w,b
  2882  002B16  0B80               	andlw	-128
  2883  002B18  198B               	xorwf	??_ldexp& (0+255),w,b
  2884  002B1A  6F88               	movwf	(ldexp@value+3)& (0+255),b
  2885  002B1C  C089  F08B         	movff	ldexp@newexp,??_ldexp
  2886  002B20  0E01               	movlw	1
  2887  002B22  178B               	andwf	??_ldexp& (0+255),f,b
  2888  002B24  338B               	rrcf	??_ldexp& (0+255),f,b
  2889  002B26  338B               	rrcf	??_ldexp& (0+255),f,b
  2890  002B28  5187               	movf	(ldexp@value+2)& (0+255),w,b
  2891  002B2A  198B               	xorwf	??_ldexp& (0+255),w,b
  2892  002B2C  0B7F               	andlw	-129
  2893  002B2E  198B               	xorwf	??_ldexp& (0+255),w,b
  2894  002B30  6F87               	movwf	(ldexp@value+2)& (0+255),b
  2895  002B32                     
  2896                           ; BSR set to: 0
  2897  002B32  C085  F085         	movff	ldexp@value,?_ldexp
  2898  002B36  C086  F086         	movff	ldexp@value+1,?_ldexp+1
  2899  002B3A  C087  F087         	movff	ldexp@value+2,?_ldexp+2
  2900  002B3E  C088  F088         	movff	ldexp@value+3,?_ldexp+3
  2901  002B42                     l1468:
  2902                           
  2903                           ; BSR set to: 0
  2904  002B42  0012               	return		;funcret
  2905  002B44                     __end_of_ldexp:
  2906                           	callstack 0
  2907                           
  2908 ;; *************** function _floor *****************
  2909 ;; Defined at:
  2910 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\floor.c"
  2911 ;; Parameters:    Size  Location     Type
  2912 ;;  x               4   21[BANK0 ] int 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  i               4   25[BANK0 ] int 
  2915 ;;  expon           2   29[BANK0 ] int 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  4   21[BANK0 ] int 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2925 ;;      Params:         0       4       0       0       0       0       0       0       0
  2926 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2928 ;;      Totals:         0      10       0       0       0       0       0       0       0
  2929 ;;Total ram usage:       10 bytes
  2930 ;; Hardware stack levels used: 1
  2931 ;; Hardware stack levels required when called: 6
  2932 ;; This function calls:
  2933 ;;		___fladd
  2934 ;;		___flge
  2935 ;;		___fltol
  2936 ;;		___xxtofl
  2937 ;;		_frexp
  2938 ;; This function is called by:
  2939 ;;		_exp
  2940 ;; This function uses a non-reentrant model
  2941 ;;
  2942                           
  2943                           	psect	text13
  2944  0028CA                     __ptext13:
  2945                           	callstack 0
  2946  0028CA                     _floor:
  2947                           	callstack 21
  2948  0028CA  C075  F03F         	movff	floor@x,frexp@value
  2949  0028CE  C076  F040         	movff	floor@x+1,frexp@value+1
  2950  0028D2  C077  F041         	movff	floor@x+2,frexp@value+2
  2951  0028D6  C078  F042         	movff	floor@x+3,frexp@value+3
  2952  0028DA  0E7D               	movlw	low floor@expon
  2953  0028DC  6E43               	movwf	frexp@eptr^0,c
  2954  0028DE  0E00               	movlw	high floor@expon
  2955  0028E0  6E44               	movwf	(frexp@eptr+1)^0,c
  2956  0028E2  ECA5  F018         	call	_frexp	;wreg free
  2957  0028E6  0100               	movlb	0	; () banked
  2958  0028E8  BF7E               	btfsc	(floor@expon+1)& (0+255),7,b
  2959  0028EA  EF7B  F014         	goto	u5370
  2960  0028EE  EF79  F014         	goto	u5371
  2961  0028F2                     u5371:
  2962  0028F2  EF96  F014         	goto	l5052
  2963  0028F6                     u5370:
  2964  0028F6                     
  2965                           ; BSR set to: 0
  2966  0028F6  BF78               	btfsc	(floor@x+3)& (0+255),7,b
  2967  0028F8  EF82  F014         	goto	u5380
  2968  0028FC  EF80  F014         	goto	u5381
  2969  002900                     u5381:
  2970  002900  EF8C  F014         	goto	l5048
  2971  002904                     u5380:
  2972  002904                     
  2973                           ; BSR set to: 0
  2974  002904  0E00               	movlw	0
  2975  002906  6F75               	movwf	?_floor& (0+255),b
  2976  002908  0E00               	movlw	0
  2977  00290A  6F76               	movwf	(?_floor+1)& (0+255),b
  2978  00290C  0E80               	movlw	128
  2979  00290E  6F77               	movwf	(?_floor+2)& (0+255),b
  2980  002910  0EBF               	movlw	191
  2981  002912  6F78               	movwf	(?_floor+3)& (0+255),b
  2982  002914  EF05  F015         	goto	l1456
  2983  002918                     l5048:
  2984                           
  2985                           ; BSR set to: 0
  2986  002918  0E00               	movlw	0
  2987  00291A  6F75               	movwf	?_floor& (0+255),b
  2988  00291C  0E00               	movlw	0
  2989  00291E  6F76               	movwf	(?_floor+1)& (0+255),b
  2990  002920  0E00               	movlw	0
  2991  002922  6F77               	movwf	(?_floor+2)& (0+255),b
  2992  002924  0E00               	movlw	0
  2993  002926  6F78               	movwf	(?_floor+3)& (0+255),b
  2994  002928  EF05  F015         	goto	l1456
  2995  00292C                     l5052:
  2996                           
  2997                           ; BSR set to: 0
  2998  00292C  517E               	movf	(floor@expon+1)& (0+255),w,b
  2999  00292E  E109               	bnz	u5390
  3000  002930  0E1D               	movlw	29
  3001  002932  5D7D               	subwf	floor@expon& (0+255),w,b
  3002  002934  A0D8               	btfss	status,0,c
  3003  002936  EF9F  F014         	goto	u5391
  3004  00293A  EFA1  F014         	goto	u5390
  3005  00293E                     u5391:
  3006  00293E  EFAB  F014         	goto	l5056
  3007  002942                     u5390:
  3008  002942                     
  3009                           ; BSR set to: 0
  3010  002942  C075  F075         	movff	floor@x,?_floor
  3011  002946  C076  F076         	movff	floor@x+1,?_floor+1
  3012  00294A  C077  F077         	movff	floor@x+2,?_floor+2
  3013  00294E  C078  F078         	movff	floor@x+3,?_floor+3
  3014  002952  EF05  F015         	goto	l1456
  3015  002956                     l5056:
  3016                           
  3017                           ; BSR set to: 0
  3018  002956  C075  F01B         	movff	floor@x,___fltol@f1
  3019  00295A  C076  F01C         	movff	floor@x+1,___fltol@f1+1
  3020  00295E  C077  F01D         	movff	floor@x+2,___fltol@f1+2
  3021  002962  C078  F01E         	movff	floor@x+3,___fltol@f1+3
  3022  002966  EC28  F016         	call	___fltol	;wreg free
  3023  00296A  C01B  F025         	movff	?___fltol,___xxtofl@val
  3024  00296E  C01C  F026         	movff	?___fltol+1,___xxtofl@val+1
  3025  002972  C01D  F027         	movff	?___fltol+2,___xxtofl@val+2
  3026  002976  C01E  F028         	movff	?___fltol+3,___xxtofl@val+3
  3027  00297A  0E01               	movlw	1
  3028  00297C  ECBC  F012         	call	___xxtofl
  3029  002980  C025  F079         	movff	?___xxtofl,floor@i
  3030  002984  C026  F07A         	movff	?___xxtofl+1,floor@i+1
  3031  002988  C027  F07B         	movff	?___xxtofl+2,floor@i+2
  3032  00298C  C028  F07C         	movff	?___xxtofl+3,floor@i+3
  3033  002990  C075  F002         	movff	floor@x,___flge@ff1
  3034  002994  C076  F003         	movff	floor@x+1,___flge@ff1+1
  3035  002998  C077  F004         	movff	floor@x+2,___flge@ff1+2
  3036  00299C  C078  F005         	movff	floor@x+3,___flge@ff1+3
  3037  0029A0  C079  F006         	movff	floor@i,___flge@ff2
  3038  0029A4  C07A  F007         	movff	floor@i+1,___flge@ff2+1
  3039  0029A8  C07B  F008         	movff	floor@i+2,___flge@ff2+2
  3040  0029AC  C07C  F009         	movff	floor@i+3,___flge@ff2+3
  3041  0029B0  ECAB  F016         	call	___flge	;wreg free
  3042  0029B4  B0D8               	btfsc	status,0,c
  3043  0029B6  EFDF  F014         	goto	u5401
  3044  0029BA  EFE1  F014         	goto	u5400
  3045  0029BE                     u5401:
  3046  0029BE  EFFD  F014         	goto	l1458
  3047  0029C2                     u5400:
  3048  0029C2  C079  F053         	movff	floor@i,___fladd@b
  3049  0029C6  C07A  F054         	movff	floor@i+1,___fladd@b+1
  3050  0029CA  C07B  F055         	movff	floor@i+2,___fladd@b+2
  3051  0029CE  C07C  F056         	movff	floor@i+3,___fladd@b+3
  3052  0029D2  0E00               	movlw	0
  3053  0029D4  6E57               	movwf	___fladd@a^0,c
  3054  0029D6  0E00               	movlw	0
  3055  0029D8  6E58               	movwf	(___fladd@a+1)^0,c
  3056  0029DA  0E80               	movlw	128
  3057  0029DC  6E59               	movwf	(___fladd@a+2)^0,c
  3058  0029DE  0EBF               	movlw	191
  3059  0029E0  6E5A               	movwf	(___fladd@a+3)^0,c
  3060  0029E2  EC45  F004         	call	___fladd	;wreg free
  3061  0029E6  C053  F075         	movff	?___fladd,?_floor
  3062  0029EA  C054  F076         	movff	?___fladd+1,?_floor+1
  3063  0029EE  C055  F077         	movff	?___fladd+2,?_floor+2
  3064  0029F2  C056  F078         	movff	?___fladd+3,?_floor+3
  3065  0029F6  EF05  F015         	goto	l1456
  3066  0029FA                     l1458:
  3067  0029FA  C079  F075         	movff	floor@i,?_floor
  3068  0029FE  C07A  F076         	movff	floor@i+1,?_floor+1
  3069  002A02  C07B  F077         	movff	floor@i+2,?_floor+2
  3070  002A06  C07C  F078         	movff	floor@i+3,?_floor+3
  3071  002A0A                     l1456:
  3072  002A0A  0012               	return		;funcret
  3073  002A0C                     __end_of_floor:
  3074                           	callstack 0
  3075                           
  3076 ;; *************** function _frexp *****************
  3077 ;; Defined at:
  3078 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\frexp.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  value           4   62[COMRAM] int 
  3081 ;;  eptr            2   66[COMRAM] PTR int 
  3082 ;;		 -> log@exponent(2), floor@expon(2), 
  3083 ;; Auto vars:     Size  Location     Type
  3084 ;;		None
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  4   62[COMRAM] PTR int 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3094 ;;      Params:         6       0       0       0       0       0       0       0       0
  3095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3096 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3097 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3098 ;;Total ram usage:        8 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 5
  3101 ;; This function calls:
  3102 ;;		___fleq
  3103 ;; This function is called by:
  3104 ;;		_floor
  3105 ;;		_log
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text14
  3110  00314A                     __ptext14:
  3111                           	callstack 0
  3112  00314A                     _frexp:
  3113                           	callstack 22
  3114  00314A  C03F  F033         	movff	frexp@value,___fleq@ff1
  3115  00314E  C040  F034         	movff	frexp@value+1,___fleq@ff1+1
  3116  003152  C041  F035         	movff	frexp@value+2,___fleq@ff1+2
  3117  003156  C042  F036         	movff	frexp@value+3,___fleq@ff1+3
  3118  00315A  0E00               	movlw	0
  3119  00315C  6E37               	movwf	___fleq@ff2^0,c
  3120  00315E  0E00               	movlw	0
  3121  003160  6E38               	movwf	(___fleq@ff2+1)^0,c
  3122  003162  0E00               	movlw	0
  3123  003164  6E39               	movwf	(___fleq@ff2+2)^0,c
  3124  003166  0E00               	movlw	0
  3125  003168  6E3A               	movwf	(___fleq@ff2+3)^0,c
  3126  00316A  EC07  F019         	call	___fleq	;wreg free
  3127  00316E  A0D8               	btfss	status,0,c
  3128  003170  EFBC  F018         	goto	u5351
  3129  003174  EFBE  F018         	goto	u5350
  3130  003178                     u5351:
  3131  003178  EFD0  F018         	goto	l5020
  3132  00317C                     u5350:
  3133  00317C  C043  FFD9         	movff	frexp@eptr,fsr2l
  3134  003180  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3135  003184  0E00               	movlw	0
  3136  003186  6EDE               	movwf	postinc2,c
  3137  003188  0E00               	movlw	0
  3138  00318A  6EDD               	movwf	postdec2,c
  3139  00318C  0E00               	movlw	0
  3140  00318E  6E3F               	movwf	?_frexp^0,c
  3141  003190  0E00               	movlw	0
  3142  003192  6E40               	movwf	(?_frexp+1)^0,c
  3143  003194  0E00               	movlw	0
  3144  003196  6E41               	movwf	(?_frexp+2)^0,c
  3145  003198  0E00               	movlw	0
  3146  00319A  6E42               	movwf	(?_frexp+3)^0,c
  3147  00319C  EF06  F019         	goto	l1464
  3148  0031A0                     l5020:
  3149  0031A0  5042               	movf	(frexp@value+3)^0,w,c
  3150  0031A2  0B7F               	andlw	127
  3151  0031A4  6E45               	movwf	??_frexp^0,c
  3152  0031A6  6A46               	clrf	(??_frexp+1)^0,c
  3153  0031A8  90D8               	bcf	status,0,c
  3154  0031AA  3645               	rlcf	??_frexp^0,f,c
  3155  0031AC  3646               	rlcf	(??_frexp+1)^0,f,c
  3156  0031AE  C043  FFD9         	movff	frexp@eptr,fsr2l
  3157  0031B2  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3158  0031B6  C045  FFDE         	movff	??_frexp,postinc2
  3159  0031BA  C046  FFDD         	movff	??_frexp+1,postdec2
  3160  0031BE  BE41               	btfsc	(frexp@value+2)^0,7,c
  3161  0031C0  EFE4  F018         	goto	u5361
  3162  0031C4  EFE8  F018         	goto	u5360
  3163  0031C8                     u5361:
  3164  0031C8  6A45               	clrf	??_frexp^0,c
  3165  0031CA  2A45               	incf	??_frexp^0,f,c
  3166  0031CC  EFE9  F018         	goto	u5368
  3167  0031D0                     u5360:
  3168  0031D0  6A45               	clrf	??_frexp^0,c
  3169  0031D2                     u5368:
  3170  0031D2  5045               	movf	??_frexp^0,w,c
  3171  0031D4  C043  FFD9         	movff	frexp@eptr,fsr2l
  3172  0031D8  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3173  0031DC  12DE               	iorwf	postinc2,f,c
  3174  0031DE  0E00               	movlw	0
  3175  0031E0  12DD               	iorwf	postdec2,f,c
  3176  0031E2  C043  FFD9         	movff	frexp@eptr,fsr2l
  3177  0031E6  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3178  0031EA  0E82               	movlw	130
  3179  0031EC  26DE               	addwf	postinc2,f,c
  3180  0031EE  0EFF               	movlw	255
  3181  0031F0  22DD               	addwfc	postdec2,f,c
  3182  0031F2  5042               	movf	(frexp@value+3)^0,w,c
  3183  0031F4  0B80               	andlw	-128
  3184  0031F6  093F               	iorlw	63
  3185  0031F8  6E42               	movwf	(frexp@value+3)^0,c
  3186  0031FA  9E41               	bcf	(frexp@value+2)^0,7,c
  3187  0031FC  C03F  F03F         	movff	frexp@value,?_frexp
  3188  003200  C040  F040         	movff	frexp@value+1,?_frexp+1
  3189  003204  C041  F041         	movff	frexp@value+2,?_frexp+2
  3190  003208  C042  F042         	movff	frexp@value+3,?_frexp+3
  3191  00320C                     l1464:
  3192  00320C  0012               	return		;funcret
  3193  00320E                     __end_of_frexp:
  3194                           	callstack 0
  3195                           
  3196 ;; *************** function ___fleq *****************
  3197 ;; Defined at:
  3198 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
  3199 ;; Parameters:    Size  Location     Type
  3200 ;;  ff1             4   50[COMRAM] PTR int 
  3201 ;;  ff2             4   54[COMRAM] PTR int 
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;		None
  3204 ;; Return value:  Size  Location     Type
  3205 ;;		None               void
  3206 ;; Registers used:
  3207 ;;		wreg, status,2, status,0
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3213 ;;      Params:         8       0       0       0       0       0       0       0       0
  3214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3215 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3216 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3217 ;;Total ram usage:       12 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; Hardware stack levels required when called: 4
  3220 ;; This function calls:
  3221 ;;		Nothing
  3222 ;; This function is called by:
  3223 ;;		_pow
  3224 ;;		_exp
  3225 ;;		_frexp
  3226 ;;		_ldexp
  3227 ;;		_log
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text15
  3232  00320E                     __ptext15:
  3233                           	callstack 0
  3234  00320E                     ___fleq:
  3235                           	callstack 22
  3236  00320E  0E00               	movlw	0
  3237  003210  1433               	andwf	___fleq@ff1^0,w,c
  3238  003212  6E3B               	movwf	??___fleq^0,c
  3239  003214  0E00               	movlw	0
  3240  003216  1434               	andwf	(___fleq@ff1+1)^0,w,c
  3241  003218  6E3C               	movwf	(??___fleq+1)^0,c
  3242  00321A  0E80               	movlw	128
  3243  00321C  1435               	andwf	(___fleq@ff1+2)^0,w,c
  3244  00321E  6E3D               	movwf	(??___fleq+2)^0,c
  3245  003220  0E7F               	movlw	127
  3246  003222  1436               	andwf	(___fleq@ff1+3)^0,w,c
  3247  003224  6E3E               	movwf	(??___fleq+3)^0,c
  3248  003226  503B               	movf	??___fleq^0,w,c
  3249  003228  103C               	iorwf	(??___fleq+1)^0,w,c
  3250  00322A  103D               	iorwf	(??___fleq+2)^0,w,c
  3251  00322C  103E               	iorwf	(??___fleq+3)^0,w,c
  3252  00322E  A4D8               	btfss	status,2,c
  3253  003230  EF1C  F019         	goto	u4641
  3254  003234  EF1E  F019         	goto	u4640
  3255  003238                     u4641:
  3256  003238  EF26  F019         	goto	l4622
  3257  00323C                     u4640:
  3258  00323C  0E00               	movlw	0
  3259  00323E  6E33               	movwf	___fleq@ff1^0,c
  3260  003240  0E00               	movlw	0
  3261  003242  6E34               	movwf	(___fleq@ff1+1)^0,c
  3262  003244  0E00               	movlw	0
  3263  003246  6E35               	movwf	(___fleq@ff1+2)^0,c
  3264  003248  0E00               	movlw	0
  3265  00324A  6E36               	movwf	(___fleq@ff1+3)^0,c
  3266  00324C                     l4622:
  3267  00324C  0E00               	movlw	0
  3268  00324E  1437               	andwf	___fleq@ff2^0,w,c
  3269  003250  6E3B               	movwf	??___fleq^0,c
  3270  003252  0E00               	movlw	0
  3271  003254  1438               	andwf	(___fleq@ff2+1)^0,w,c
  3272  003256  6E3C               	movwf	(??___fleq+1)^0,c
  3273  003258  0E80               	movlw	128
  3274  00325A  1439               	andwf	(___fleq@ff2+2)^0,w,c
  3275  00325C  6E3D               	movwf	(??___fleq+2)^0,c
  3276  00325E  0E7F               	movlw	127
  3277  003260  143A               	andwf	(___fleq@ff2+3)^0,w,c
  3278  003262  6E3E               	movwf	(??___fleq+3)^0,c
  3279  003264  503B               	movf	??___fleq^0,w,c
  3280  003266  103C               	iorwf	(??___fleq+1)^0,w,c
  3281  003268  103D               	iorwf	(??___fleq+2)^0,w,c
  3282  00326A  103E               	iorwf	(??___fleq+3)^0,w,c
  3283  00326C  A4D8               	btfss	status,2,c
  3284  00326E  EF3B  F019         	goto	u4651
  3285  003272  EF3D  F019         	goto	u4650
  3286  003276                     u4651:
  3287  003276  EF45  F019         	goto	l4626
  3288  00327A                     u4650:
  3289  00327A  0E00               	movlw	0
  3290  00327C  6E37               	movwf	___fleq@ff2^0,c
  3291  00327E  0E00               	movlw	0
  3292  003280  6E38               	movwf	(___fleq@ff2+1)^0,c
  3293  003282  0E00               	movlw	0
  3294  003284  6E39               	movwf	(___fleq@ff2+2)^0,c
  3295  003286  0E00               	movlw	0
  3296  003288  6E3A               	movwf	(___fleq@ff2+3)^0,c
  3297  00328A                     l4626:
  3298  00328A  5037               	movf	___fleq@ff2^0,w,c
  3299  00328C  1833               	xorwf	___fleq@ff1^0,w,c
  3300  00328E  E10F               	bnz	u4660
  3301  003290  5038               	movf	(___fleq@ff2+1)^0,w,c
  3302  003292  1834               	xorwf	(___fleq@ff1+1)^0,w,c
  3303  003294  E10C               	bnz	u4660
  3304  003296  5039               	movf	(___fleq@ff2+2)^0,w,c
  3305  003298  1835               	xorwf	(___fleq@ff1+2)^0,w,c
  3306  00329A  E109               	bnz	u4660
  3307  00329C  503A               	movf	(___fleq@ff2+3)^0,w,c
  3308  00329E  1836               	xorwf	(___fleq@ff1+3)^0,w,c
  3309  0032A0  B4D8               	btfsc	status,2,c
  3310  0032A2  EF55  F019         	goto	u4661
  3311  0032A6  EF57  F019         	goto	u4660
  3312  0032AA                     u4661:
  3313  0032AA  EF5A  F019         	goto	l4630
  3314  0032AE                     u4660:
  3315  0032AE  90D8               	bcf	status,0,c
  3316  0032B0  EF5B  F019         	goto	l978
  3317  0032B4                     l4630:
  3318  0032B4  80D8               	bsf	status,0,c
  3319  0032B6                     l978:
  3320  0032B6  0012               	return		;funcret
  3321  0032B8                     __end_of___fleq:
  3322                           	callstack 0
  3323                           
  3324 ;; *************** function ___flge *****************
  3325 ;; Defined at:
  3326 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
  3327 ;; Parameters:    Size  Location     Type
  3328 ;;  ff1             4    1[COMRAM] PTR int 
  3329 ;;  ff2             4    5[COMRAM] PTR int 
  3330 ;; Auto vars:     Size  Location     Type
  3331 ;;		None
  3332 ;; Return value:  Size  Location     Type
  3333 ;;		None               void
  3334 ;; Registers used:
  3335 ;;		wreg, status,2, status,0
  3336 ;; Tracked objects:
  3337 ;;		On entry : 0/0
  3338 ;;		On exit  : 0/0
  3339 ;;		Unchanged: 0/0
  3340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3341 ;;      Params:         8       0       0       0       0       0       0       0       0
  3342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3343 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3344 ;;      Totals:        12       0       0       0       0       0       0       0       0
  3345 ;;Total ram usage:       12 bytes
  3346 ;; Hardware stack levels used: 1
  3347 ;; Hardware stack levels required when called: 4
  3348 ;; This function calls:
  3349 ;;		Nothing
  3350 ;; This function is called by:
  3351 ;;		_pow
  3352 ;;		_exp
  3353 ;;		_floor
  3354 ;; This function uses a non-reentrant model
  3355 ;;
  3356                           
  3357                           	psect	text16
  3358  002D56                     __ptext16:
  3359                           	callstack 0
  3360  002D56                     ___flge:
  3361                           	callstack 22
  3362  002D56  0E00               	movlw	0
  3363  002D58  1402               	andwf	___flge@ff1^0,w,c
  3364  002D5A  6E0A               	movwf	??___flge^0,c
  3365  002D5C  0E00               	movlw	0
  3366  002D5E  1403               	andwf	(___flge@ff1+1)^0,w,c
  3367  002D60  6E0B               	movwf	(??___flge+1)^0,c
  3368  002D62  0E80               	movlw	128
  3369  002D64  1404               	andwf	(___flge@ff1+2)^0,w,c
  3370  002D66  6E0C               	movwf	(??___flge+2)^0,c
  3371  002D68  0E7F               	movlw	127
  3372  002D6A  1405               	andwf	(___flge@ff1+3)^0,w,c
  3373  002D6C  6E0D               	movwf	(??___flge+3)^0,c
  3374  002D6E  500A               	movf	??___flge^0,w,c
  3375  002D70  100B               	iorwf	(??___flge+1)^0,w,c
  3376  002D72  100C               	iorwf	(??___flge+2)^0,w,c
  3377  002D74  100D               	iorwf	(??___flge+3)^0,w,c
  3378  002D76  A4D8               	btfss	status,2,c
  3379  002D78  EFC0  F016         	goto	u2941
  3380  002D7C  EFC2  F016         	goto	u2940
  3381  002D80                     u2941:
  3382  002D80  EFCA  F016         	goto	l3476
  3383  002D84                     u2940:
  3384  002D84  0E00               	movlw	0
  3385  002D86  6E02               	movwf	___flge@ff1^0,c
  3386  002D88  0E00               	movlw	0
  3387  002D8A  6E03               	movwf	(___flge@ff1+1)^0,c
  3388  002D8C  0E00               	movlw	0
  3389  002D8E  6E04               	movwf	(___flge@ff1+2)^0,c
  3390  002D90  0E00               	movlw	0
  3391  002D92  6E05               	movwf	(___flge@ff1+3)^0,c
  3392  002D94                     l3476:
  3393  002D94  0E00               	movlw	0
  3394  002D96  1406               	andwf	___flge@ff2^0,w,c
  3395  002D98  6E0A               	movwf	??___flge^0,c
  3396  002D9A  0E00               	movlw	0
  3397  002D9C  1407               	andwf	(___flge@ff2+1)^0,w,c
  3398  002D9E  6E0B               	movwf	(??___flge+1)^0,c
  3399  002DA0  0E80               	movlw	128
  3400  002DA2  1408               	andwf	(___flge@ff2+2)^0,w,c
  3401  002DA4  6E0C               	movwf	(??___flge+2)^0,c
  3402  002DA6  0E7F               	movlw	127
  3403  002DA8  1409               	andwf	(___flge@ff2+3)^0,w,c
  3404  002DAA  6E0D               	movwf	(??___flge+3)^0,c
  3405  002DAC  500A               	movf	??___flge^0,w,c
  3406  002DAE  100B               	iorwf	(??___flge+1)^0,w,c
  3407  002DB0  100C               	iorwf	(??___flge+2)^0,w,c
  3408  002DB2  100D               	iorwf	(??___flge+3)^0,w,c
  3409  002DB4  A4D8               	btfss	status,2,c
  3410  002DB6  EFDF  F016         	goto	u2951
  3411  002DBA  EFE1  F016         	goto	u2950
  3412  002DBE                     u2951:
  3413  002DBE  EFE9  F016         	goto	l3480
  3414  002DC2                     u2950:
  3415  002DC2  0E00               	movlw	0
  3416  002DC4  6E06               	movwf	___flge@ff2^0,c
  3417  002DC6  0E00               	movlw	0
  3418  002DC8  6E07               	movwf	(___flge@ff2+1)^0,c
  3419  002DCA  0E00               	movlw	0
  3420  002DCC  6E08               	movwf	(___flge@ff2+2)^0,c
  3421  002DCE  0E00               	movlw	0
  3422  002DD0  6E09               	movwf	(___flge@ff2+3)^0,c
  3423  002DD2                     l3480:
  3424  002DD2  AE05               	btfss	(___flge@ff1+3)^0,7,c
  3425  002DD4  EFEE  F016         	goto	u2961
  3426  002DD8  EFF0  F016         	goto	u2960
  3427  002DDC                     u2961:
  3428  002DDC  EFF9  F016         	goto	l3484
  3429  002DE0                     u2960:
  3430  002DE0  6C02               	negf	___flge@ff1^0,c
  3431  002DE2  1E03               	comf	(___flge@ff1+1)^0,f,c
  3432  002DE4  B0D8               	btfsc	status,0,c
  3433  002DE6  2A03               	incf	(___flge@ff1+1)^0,f,c
  3434  002DE8  1E04               	comf	(___flge@ff1+2)^0,f,c
  3435  002DEA  B0D8               	btfsc	status,0,c
  3436  002DEC  2A04               	incf	(___flge@ff1+2)^0,f,c
  3437  002DEE  0E80               	movlw	128
  3438  002DF0  5605               	subfwb	(___flge@ff1+3)^0,f,c
  3439  002DF2                     l3484:
  3440  002DF2  AE09               	btfss	(___flge@ff2+3)^0,7,c
  3441  002DF4  EFFE  F016         	goto	u2971
  3442  002DF8  EF00  F017         	goto	u2970
  3443  002DFC                     u2971:
  3444  002DFC  EF09  F017         	goto	l984
  3445  002E00                     u2970:
  3446  002E00  6C06               	negf	___flge@ff2^0,c
  3447  002E02  1E07               	comf	(___flge@ff2+1)^0,f,c
  3448  002E04  B0D8               	btfsc	status,0,c
  3449  002E06  2A07               	incf	(___flge@ff2+1)^0,f,c
  3450  002E08  1E08               	comf	(___flge@ff2+2)^0,f,c
  3451  002E0A  B0D8               	btfsc	status,0,c
  3452  002E0C  2A08               	incf	(___flge@ff2+2)^0,f,c
  3453  002E0E  0E80               	movlw	128
  3454  002E10  5609               	subfwb	(___flge@ff2+3)^0,f,c
  3455  002E12                     l984:
  3456  002E12  0E00               	movlw	0
  3457  002E14  1A02               	xorwf	___flge@ff1^0,f,c
  3458  002E16  0E00               	movlw	0
  3459  002E18  1A03               	xorwf	(___flge@ff1+1)^0,f,c
  3460  002E1A  0E00               	movlw	0
  3461  002E1C  1A04               	xorwf	(___flge@ff1+2)^0,f,c
  3462  002E1E  0E80               	movlw	128
  3463  002E20  1A05               	xorwf	(___flge@ff1+3)^0,f,c
  3464  002E22  0E00               	movlw	0
  3465  002E24  1A06               	xorwf	___flge@ff2^0,f,c
  3466  002E26  0E00               	movlw	0
  3467  002E28  1A07               	xorwf	(___flge@ff2+1)^0,f,c
  3468  002E2A  0E00               	movlw	0
  3469  002E2C  1A08               	xorwf	(___flge@ff2+2)^0,f,c
  3470  002E2E  0E80               	movlw	128
  3471  002E30  1A09               	xorwf	(___flge@ff2+3)^0,f,c
  3472  002E32  5006               	movf	___flge@ff2^0,w,c
  3473  002E34  5C02               	subwf	___flge@ff1^0,w,c
  3474  002E36  5007               	movf	(___flge@ff2+1)^0,w,c
  3475  002E38  5803               	subwfb	(___flge@ff1+1)^0,w,c
  3476  002E3A  5008               	movf	(___flge@ff2+2)^0,w,c
  3477  002E3C  5804               	subwfb	(___flge@ff1+2)^0,w,c
  3478  002E3E  5009               	movf	(___flge@ff2+3)^0,w,c
  3479  002E40  5805               	subwfb	(___flge@ff1+3)^0,w,c
  3480  002E42  B0D8               	btfsc	status,0,c
  3481  002E44  EF26  F017         	goto	u2981
  3482  002E48  EF28  F017         	goto	u2980
  3483  002E4C                     u2981:
  3484  002E4C  EF2B  F017         	goto	l3490
  3485  002E50                     u2980:
  3486  002E50  90D8               	bcf	status,0,c
  3487  002E52  EF2C  F017         	goto	l985
  3488  002E56                     l3490:
  3489  002E56  80D8               	bsf	status,0,c
  3490  002E58                     l985:
  3491  002E58  0012               	return		;funcret
  3492  002E5A                     __end_of___flge:
  3493                           	callstack 0
  3494                           
  3495 ;; *************** function _eval_poly *****************
  3496 ;; Defined at:
  3497 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\evalpoly.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  x               4   21[BANK0 ] PTR int 
  3500 ;;  d               2   25[BANK0 ] PTR const 
  3501 ;;		 -> log@coeff(36), exp@coeff(40), 
  3502 ;;  n               2   27[BANK0 ] int 
  3503 ;; Auto vars:     Size  Location     Type
  3504 ;;  res             4   33[BANK0 ] int 
  3505 ;; Return value:  Size  Location     Type
  3506 ;;                  4   21[BANK0 ] int 
  3507 ;; Registers used:
  3508 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3509 ;; Tracked objects:
  3510 ;;		On entry : 0/0
  3511 ;;		On exit  : 0/0
  3512 ;;		Unchanged: 0/0
  3513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3514 ;;      Params:         0       8       0       0       0       0       0       0       0
  3515 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3516 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3517 ;;      Totals:         0      16       0       0       0       0       0       0       0
  3518 ;;Total ram usage:       16 bytes
  3519 ;; Hardware stack levels used: 1
  3520 ;; Hardware stack levels required when called: 5
  3521 ;; This function calls:
  3522 ;;		___fladd
  3523 ;;		___flmul
  3524 ;; This function is called by:
  3525 ;;		_exp
  3526 ;;		_log
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text17
  3531  002E5A                     __ptext17:
  3532                           	callstack 0
  3533  002E5A                     _eval_poly:
  3534                           	callstack 22
  3535  002E5A  C07B  F07D         	movff	eval_poly@n,??_eval_poly
  3536  002E5E  C07C  F07E         	movff	eval_poly@n+1,??_eval_poly+1
  3537  002E62  0100               	movlb	0	; () banked
  3538  002E64  90D8               	bcf	status,0,c
  3539  002E66  377D               	rlcf	??_eval_poly& (0+255),f,b
  3540  002E68  377E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3541  002E6A  90D8               	bcf	status,0,c
  3542  002E6C  377D               	rlcf	??_eval_poly& (0+255),f,b
  3543  002E6E  377E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3544  002E70  C079  F07F         	movff	eval_poly@d,??_eval_poly+2
  3545  002E74  C07A  F080         	movff	eval_poly@d+1,??_eval_poly+3
  3546  002E78  517D               	movf	??_eval_poly& (0+255),w,b
  3547  002E7A  277F               	addwf	(??_eval_poly+2)& (0+255),f,b
  3548  002E7C  517E               	movf	(??_eval_poly+1)& (0+255),w,b
  3549  002E7E  2380               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3550  002E80  C07F  FFF6         	movff	??_eval_poly+2,tblptrl
  3551  002E84  C080  FFF7         	movff	??_eval_poly+3,tblptrh
  3552  002E88                     	if	0	;tblptru may be non-zero
  3553  002E88                     	endif
  3554  002E88                     	if	0	;tblptru may be non-zero
  3555  002E88                     	endif
  3556  002E88  0009               	tblrd		*+
  3557  002E8A  CFF5 F081          	movff	tablat,eval_poly@res
  3558  002E8E  0009               	tblrd		*+
  3559  002E90  CFF5 F082          	movff	tablat,eval_poly@res+1
  3560  002E94  0009               	tblrd		*+
  3561  002E96  CFF5 F083          	movff	tablat,eval_poly@res+2
  3562  002E9A  000A               	tblrd		*-
  3563  002E9C  CFF5 F084          	movff	tablat,eval_poly@res+3
  3564  002EA0  EF9C  F017         	goto	l5066
  3565  002EA4                     l5064:
  3566                           
  3567                           ; BSR set to: 0
  3568  002EA4  C081  F04B         	movff	eval_poly@res,___flmul@a
  3569  002EA8  C082  F04C         	movff	eval_poly@res+1,___flmul@a+1
  3570  002EAC  C083  F04D         	movff	eval_poly@res+2,___flmul@a+2
  3571  002EB0  C084  F04E         	movff	eval_poly@res+3,___flmul@a+3
  3572  002EB4  C075  F047         	movff	eval_poly@x,___flmul@b
  3573  002EB8  C076  F048         	movff	eval_poly@x+1,___flmul@b+1
  3574  002EBC  C077  F049         	movff	eval_poly@x+2,___flmul@b+2
  3575  002EC0  C078  F04A         	movff	eval_poly@x+3,___flmul@b+3
  3576  002EC4  EC02  F009         	call	___flmul	;wreg free
  3577  002EC8  C047  F053         	movff	?___flmul,___fladd@b
  3578  002ECC  C048  F054         	movff	?___flmul+1,___fladd@b+1
  3579  002ED0  C049  F055         	movff	?___flmul+2,___fladd@b+2
  3580  002ED4  C04A  F056         	movff	?___flmul+3,___fladd@b+3
  3581  002ED8  0100               	movlb	0	; () banked
  3582  002EDA  077B               	decf	eval_poly@n& (0+255),f,b
  3583  002EDC  A0D8               	btfss	status,0,c
  3584  002EDE  077C               	decf	(eval_poly@n+1)& (0+255),f,b
  3585  002EE0  C07B  F07D         	movff	eval_poly@n,??_eval_poly
  3586  002EE4  C07C  F07E         	movff	eval_poly@n+1,??_eval_poly+1
  3587  002EE8  90D8               	bcf	status,0,c
  3588  002EEA  377D               	rlcf	??_eval_poly& (0+255),f,b
  3589  002EEC  377E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3590  002EEE  90D8               	bcf	status,0,c
  3591  002EF0  377D               	rlcf	??_eval_poly& (0+255),f,b
  3592  002EF2  377E               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3593  002EF4  C079  F07F         	movff	eval_poly@d,??_eval_poly+2
  3594  002EF8  C07A  F080         	movff	eval_poly@d+1,??_eval_poly+3
  3595  002EFC  517D               	movf	??_eval_poly& (0+255),w,b
  3596  002EFE  277F               	addwf	(??_eval_poly+2)& (0+255),f,b
  3597  002F00  517E               	movf	(??_eval_poly+1)& (0+255),w,b
  3598  002F02  2380               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3599  002F04  C07F  FFF6         	movff	??_eval_poly+2,tblptrl
  3600  002F08  C080  FFF7         	movff	??_eval_poly+3,tblptrh
  3601  002F0C                     	if	0	;tblptru may be non-zero
  3602  002F0C                     	endif
  3603  002F0C                     	if	0	;tblptru may be non-zero
  3604  002F0C                     	endif
  3605  002F0C  0009               	tblrd		*+
  3606  002F0E  CFF5 F057          	movff	tablat,___fladd@a
  3607  002F12  0009               	tblrd		*+
  3608  002F14  CFF5 F058          	movff	tablat,___fladd@a+1
  3609  002F18  0009               	tblrd		*+
  3610  002F1A  CFF5 F059          	movff	tablat,___fladd@a+2
  3611  002F1E  000A               	tblrd		*-
  3612  002F20  CFF5 F05A          	movff	tablat,___fladd@a+3
  3613  002F24  EC45  F004         	call	___fladd	;wreg free
  3614  002F28  C053  F081         	movff	?___fladd,eval_poly@res
  3615  002F2C  C054  F082         	movff	?___fladd+1,eval_poly@res+1
  3616  002F30  C055  F083         	movff	?___fladd+2,eval_poly@res+2
  3617  002F34  C056  F084         	movff	?___fladd+3,eval_poly@res+3
  3618  002F38                     l5066:
  3619  002F38  0100               	movlb	0	; () banked
  3620  002F3A  517B               	movf	eval_poly@n& (0+255),w,b
  3621  002F3C  117C               	iorwf	(eval_poly@n+1)& (0+255),w,b
  3622  002F3E  A4D8               	btfss	status,2,c
  3623  002F40  EFA4  F017         	goto	u5411
  3624  002F44  EFA6  F017         	goto	u5410
  3625  002F48                     u5411:
  3626  002F48  EF52  F017         	goto	l5064
  3627  002F4C                     u5410:
  3628  002F4C                     
  3629                           ; BSR set to: 0
  3630  002F4C  C081  F075         	movff	eval_poly@res,?_eval_poly
  3631  002F50  C082  F076         	movff	eval_poly@res+1,?_eval_poly+1
  3632  002F54  C083  F077         	movff	eval_poly@res+2,?_eval_poly+2
  3633  002F58  C084  F078         	movff	eval_poly@res+3,?_eval_poly+3
  3634  002F5C                     
  3635                           ; BSR set to: 0
  3636  002F5C  0012               	return		;funcret
  3637  002F5E                     __end_of_eval_poly:
  3638                           	callstack 0
  3639                           
  3640 ;; *************** function ___flneg *****************
  3641 ;; Defined at:
  3642 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  f1              4    1[COMRAM] int 
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  4    1[COMRAM] int 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, status,0
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3656 ;;      Params:         4       0       0       0       0       0       0       0       0
  3657 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3658 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3659 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3660 ;;Total ram usage:        4 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; Hardware stack levels required when called: 4
  3663 ;; This function calls:
  3664 ;;		Nothing
  3665 ;; This function is called by:
  3666 ;;		_pow
  3667 ;;		_exp
  3668 ;; This function uses a non-reentrant model
  3669 ;;
  3670                           
  3671                           	psect	text18
  3672  0037C8                     __ptext18:
  3673                           	callstack 0
  3674  0037C8                     ___flneg:
  3675                           	callstack 23
  3676  0037C8  5002               	movf	___flneg@f1^0,w,c
  3677  0037CA  1003               	iorwf	(___flneg@f1+1)^0,w,c
  3678  0037CC  1004               	iorwf	(___flneg@f1+2)^0,w,c
  3679  0037CE  1005               	iorwf	(___flneg@f1+3)^0,w,c
  3680  0037D0  B4D8               	btfsc	status,2,c
  3681  0037D2  EFED  F01B         	goto	u3411
  3682  0037D6  EFEF  F01B         	goto	u3410
  3683  0037DA                     u3411:
  3684  0037DA  EFF7  F01B         	goto	l3752
  3685  0037DE                     u3410:
  3686  0037DE  0E00               	movlw	0
  3687  0037E0  1A02               	xorwf	___flneg@f1^0,f,c
  3688  0037E2  0E00               	movlw	0
  3689  0037E4  1A03               	xorwf	(___flneg@f1+1)^0,f,c
  3690  0037E6  0E00               	movlw	0
  3691  0037E8  1A04               	xorwf	(___flneg@f1+2)^0,f,c
  3692  0037EA  0E80               	movlw	128
  3693  0037EC  1A05               	xorwf	(___flneg@f1+3)^0,f,c
  3694  0037EE                     l3752:
  3695  0037EE  C002  F002         	movff	___flneg@f1,?___flneg
  3696  0037F2  C003  F003         	movff	___flneg@f1+1,?___flneg+1
  3697  0037F6  C004  F004         	movff	___flneg@f1+2,?___flneg+2
  3698  0037FA  C005  F005         	movff	___flneg@f1+3,?___flneg+3
  3699  0037FE  0012               	return		;funcret
  3700  003800                     __end_of___flneg:
  3701                           	callstack 0
  3702                           
  3703 ;; *************** function _ComputeWaterVol *****************
  3704 ;; Defined at:
  3705 ;;		line 118 in file "main.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;  dWaterHeight    4   57[BANK0 ] float 
  3710 ;;  dEmptySpace_    4   53[BANK0 ] float 
  3711 ;;  dSOS            4   47[BANK0 ] float 
  3712 ;;  dWaterVol       4   41[BANK0 ] float 
  3713 ;;  d_mmPerTick     4   37[BANK0 ] float 
  3714 ;;  dCurrTemp       4   33[BANK0 ] float 
  3715 ;;  dEchoPeriod     4    0        float 
  3716 ;;  iPercentFull    2   61[BANK0 ] unsigned int 
  3717 ;;  iGals           2   51[BANK0 ] unsigned int 
  3718 ;;  iEmptySpace_    2   45[BANK0 ] unsigned int 
  3719 ;; Return value:  Size  Location     Type
  3720 ;;                  1    wreg      void 
  3721 ;; Registers used:
  3722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3723 ;; Tracked objects:
  3724 ;;		On entry : 0/0
  3725 ;;		On exit  : 0/0
  3726 ;;		Unchanged: 0/0
  3727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3728 ;;      Params:         0       0       0       0       0       0       0       0       0
  3729 ;;      Locals:         0      30       0       0       0       0       0       0       0
  3730 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3731 ;;      Totals:         0      34       0       0       0       0       0       0       0
  3732 ;;Total ram usage:       34 bytes
  3733 ;; Hardware stack levels used: 1
  3734 ;; Hardware stack levels required when called: 6
  3735 ;; This function calls:
  3736 ;;		_LCD_GoTo
  3737 ;;		_LCD_WriteString
  3738 ;;		___fladd
  3739 ;;		___fldiv
  3740 ;;		___flmul
  3741 ;;		___flsub
  3742 ;;		___fltol
  3743 ;;		___xxtofl
  3744 ;;		_sprintf
  3745 ;;		_sqrt
  3746 ;; This function is called by:
  3747 ;;		_main
  3748 ;; This function uses a non-reentrant model
  3749 ;;
  3750                           
  3751                           	psect	text19
  3752  0019CA                     __ptext19:
  3753                           	callstack 0
  3754  0019CA                     _ComputeWaterVol:
  3755                           	callstack 24
  3756  0019CA  C0D7  F025         	movff	_giEchoCounter,___xxtofl@val	;volatile
  3757  0019CE  C0D8  F026         	movff	_giEchoCounter+1,___xxtofl@val+1	;volatile
  3758  0019D2  6A27               	clrf	(___xxtofl@val+2)^0,c
  3759  0019D4  6A28               	clrf	(___xxtofl@val+3)^0,c
  3760  0019D6  0E00               	movlw	0
  3761  0019D8  ECBC  F012         	call	___xxtofl
  3762  0019DC  C025  F047         	movff	?___xxtofl,___flmul@b
  3763  0019E0  C026  F048         	movff	?___xxtofl+1,___flmul@b+1
  3764  0019E4  C027  F049         	movff	?___xxtofl+2,___flmul@b+2
  3765  0019E8  C028  F04A         	movff	?___xxtofl+3,___flmul@b+3
  3766  0019EC  0EBD               	movlw	189
  3767  0019EE  6E4B               	movwf	___flmul@a^0,c
  3768  0019F0  0E37               	movlw	55
  3769  0019F2  6E4C               	movwf	(___flmul@a+1)^0,c
  3770  0019F4  0E06               	movlw	6
  3771  0019F6  6E4D               	movwf	(___flmul@a+2)^0,c
  3772  0019F8  0E35               	movlw	53
  3773  0019FA  6E4E               	movwf	(___flmul@a+3)^0,c
  3774  0019FC  EC02  F009         	call	___flmul	;wreg free
  3775  001A00                     
  3776                           ;main.c: 132: dCurrTemp = 20.0;
  3777  001A00  0E00               	movlw	0
  3778  001A02  0100               	movlb	0	; () banked
  3779  001A04  6F81               	movwf	ComputeWaterVol@dCurrTemp& (0+255),b
  3780  001A06  0E00               	movlw	0
  3781  001A08  6F82               	movwf	(ComputeWaterVol@dCurrTemp+1)& (0+255),b
  3782  001A0A  0EA0               	movlw	160
  3783  001A0C  6F83               	movwf	(ComputeWaterVol@dCurrTemp+2)& (0+255),b
  3784  001A0E  0E41               	movlw	65
  3785  001A10  6F84               	movwf	(ComputeWaterVol@dCurrTemp+3)& (0+255),b
  3786  001A12                     
  3787                           ; BSR set to: 0
  3788                           ;main.c: 133: dSOS = 331.3e3 * sqrt( 1 + (dCurrTemp / 273.15));
  3789  001A12  0E00               	movlw	0
  3790  001A14  6E57               	movwf	___fladd@a^0,c
  3791  001A16  0E00               	movlw	0
  3792  001A18  6E58               	movwf	(___fladd@a+1)^0,c
  3793  001A1A  0E80               	movlw	128
  3794  001A1C  6E59               	movwf	(___fladd@a+2)^0,c
  3795  001A1E  0E3F               	movlw	63
  3796  001A20  6E5A               	movwf	(___fladd@a+3)^0,c
  3797  001A22  0E33               	movlw	51
  3798  001A24  6E06               	movwf	___fldiv@a^0,c
  3799  001A26  0E93               	movlw	147
  3800  001A28  6E07               	movwf	(___fldiv@a+1)^0,c
  3801  001A2A  0E88               	movlw	136
  3802  001A2C  6E08               	movwf	(___fldiv@a+2)^0,c
  3803  001A2E  0E43               	movlw	67
  3804  001A30  6E09               	movwf	(___fldiv@a+3)^0,c
  3805  001A32  C081  F002         	movff	ComputeWaterVol@dCurrTemp,___fldiv@b
  3806  001A36  C082  F003         	movff	ComputeWaterVol@dCurrTemp+1,___fldiv@b+1
  3807  001A3A  C083  F004         	movff	ComputeWaterVol@dCurrTemp+2,___fldiv@b+2
  3808  001A3E  C084  F005         	movff	ComputeWaterVol@dCurrTemp+3,___fldiv@b+3
  3809  001A42  EC18  F00B         	call	___fldiv	;wreg free
  3810  001A46  C002  F053         	movff	?___fldiv,___fladd@b
  3811  001A4A  C003  F054         	movff	?___fldiv+1,___fladd@b+1
  3812  001A4E  C004  F055         	movff	?___fldiv+2,___fladd@b+2
  3813  001A52  C005  F056         	movff	?___fldiv+3,___fladd@b+3
  3814  001A56  EC45  F004         	call	___fladd	;wreg free
  3815  001A5A  C053  F01B         	movff	?___fladd,sqrt@a
  3816  001A5E  C054  F01C         	movff	?___fladd+1,sqrt@a+1
  3817  001A62  C055  F01D         	movff	?___fladd+2,sqrt@a+2
  3818  001A66  C056  F01E         	movff	?___fladd+3,sqrt@a+3
  3819  001A6A  EC8A  F00E         	call	_sqrt	;wreg free
  3820  001A6E  C01B  F047         	movff	?_sqrt,___flmul@b
  3821  001A72  C01C  F048         	movff	?_sqrt+1,___flmul@b+1
  3822  001A76  C01D  F049         	movff	?_sqrt+2,___flmul@b+2
  3823  001A7A  C01E  F04A         	movff	?_sqrt+3,___flmul@b+3
  3824  001A7E  0E80               	movlw	128
  3825  001A80  6E4B               	movwf	___flmul@a^0,c
  3826  001A82  0EC4               	movlw	196
  3827  001A84  6E4C               	movwf	(___flmul@a+1)^0,c
  3828  001A86  0EA1               	movlw	161
  3829  001A88  6E4D               	movwf	(___flmul@a+2)^0,c
  3830  001A8A  0E48               	movlw	72
  3831  001A8C  6E4E               	movwf	(___flmul@a+3)^0,c
  3832  001A8E  EC02  F009         	call	___flmul	;wreg free
  3833  001A92  C047  F08F         	movff	?___flmul,ComputeWaterVol@dSOS
  3834  001A96  C048  F090         	movff	?___flmul+1,ComputeWaterVol@dSOS+1
  3835  001A9A  C049  F091         	movff	?___flmul+2,ComputeWaterVol@dSOS+2
  3836  001A9E  C04A  F092         	movff	?___flmul+3,ComputeWaterVol@dSOS+3
  3837  001AA2                     
  3838                           ;main.c: 134: d_mmPerTick = dSOS * 500.0e-9 / 2;
  3839  001AA2  0EBD               	movlw	189
  3840  001AA4  6E4B               	movwf	___flmul@a^0,c
  3841  001AA6  0E37               	movlw	55
  3842  001AA8  6E4C               	movwf	(___flmul@a+1)^0,c
  3843  001AAA  0E06               	movlw	6
  3844  001AAC  6E4D               	movwf	(___flmul@a+2)^0,c
  3845  001AAE  0E35               	movlw	53
  3846  001AB0  6E4E               	movwf	(___flmul@a+3)^0,c
  3847  001AB2  C08F  F047         	movff	ComputeWaterVol@dSOS,___flmul@b
  3848  001AB6  C090  F048         	movff	ComputeWaterVol@dSOS+1,___flmul@b+1
  3849  001ABA  C091  F049         	movff	ComputeWaterVol@dSOS+2,___flmul@b+2
  3850  001ABE  C092  F04A         	movff	ComputeWaterVol@dSOS+3,___flmul@b+3
  3851  001AC2  EC02  F009         	call	___flmul	;wreg free
  3852  001AC6  C047  F002         	movff	?___flmul,___fldiv@b
  3853  001ACA  C048  F003         	movff	?___flmul+1,___fldiv@b+1
  3854  001ACE  C049  F004         	movff	?___flmul+2,___fldiv@b+2
  3855  001AD2  C04A  F005         	movff	?___flmul+3,___fldiv@b+3
  3856  001AD6  0E00               	movlw	0
  3857  001AD8  6E06               	movwf	___fldiv@a^0,c
  3858  001ADA  0E00               	movlw	0
  3859  001ADC  6E07               	movwf	(___fldiv@a+1)^0,c
  3860  001ADE  0E00               	movlw	0
  3861  001AE0  6E08               	movwf	(___fldiv@a+2)^0,c
  3862  001AE2  0E40               	movlw	64
  3863  001AE4  6E09               	movwf	(___fldiv@a+3)^0,c
  3864  001AE6  EC18  F00B         	call	___fldiv	;wreg free
  3865  001AEA  C002  F085         	movff	?___fldiv,ComputeWaterVol@d_mmPerTick
  3866  001AEE  C003  F086         	movff	?___fldiv+1,ComputeWaterVol@d_mmPerTick+1
  3867  001AF2  C004  F087         	movff	?___fldiv+2,ComputeWaterVol@d_mmPerTick+2
  3868  001AF6  C005  F088         	movff	?___fldiv+3,ComputeWaterVol@d_mmPerTick+3
  3869  001AFA                     
  3870                           ;main.c: 137: dEmptySpace_mm = (giEchoCounter.EP16 - 4400) * d_mmPerTick;
  3871  001AFA  0ED0               	movlw	208
  3872  001AFC  0100               	movlb	0	; () banked
  3873  001AFE  6F7D               	movwf	??_ComputeWaterVol& (0+255),b
  3874  001B00  0EEE               	movlw	238
  3875  001B02  6F7E               	movwf	(??_ComputeWaterVol+1)& (0+255),b
  3876  001B04  C0D7  F07F         	movff	_giEchoCounter,??_ComputeWaterVol+2	;volatile
  3877  001B08  C0D8  F080         	movff	_giEchoCounter+1,??_ComputeWaterVol+3	;volatile
  3878  001B0C  517D               	movf	??_ComputeWaterVol& (0+255),w,b
  3879  001B0E  277F               	addwf	(??_ComputeWaterVol+2)& (0+255),f,b
  3880  001B10  517E               	movf	(??_ComputeWaterVol+1)& (0+255),w,b
  3881  001B12  2380               	addwfc	(??_ComputeWaterVol+3)& (0+255),f,b
  3882  001B14  C07F  F025         	movff	??_ComputeWaterVol+2,___xxtofl@val
  3883  001B18  C080  F026         	movff	??_ComputeWaterVol+3,___xxtofl@val+1
  3884  001B1C  6A27               	clrf	(___xxtofl@val+2)^0,c
  3885  001B1E  6A28               	clrf	(___xxtofl@val+3)^0,c
  3886  001B20  0E00               	movlw	0
  3887  001B22  ECBC  F012         	call	___xxtofl
  3888  001B26  C025  F047         	movff	?___xxtofl,___flmul@b
  3889  001B2A  C026  F048         	movff	?___xxtofl+1,___flmul@b+1
  3890  001B2E  C027  F049         	movff	?___xxtofl+2,___flmul@b+2
  3891  001B32  C028  F04A         	movff	?___xxtofl+3,___flmul@b+3
  3892  001B36  C085  F04B         	movff	ComputeWaterVol@d_mmPerTick,___flmul@a
  3893  001B3A  C086  F04C         	movff	ComputeWaterVol@d_mmPerTick+1,___flmul@a+1
  3894  001B3E  C087  F04D         	movff	ComputeWaterVol@d_mmPerTick+2,___flmul@a+2
  3895  001B42  C088  F04E         	movff	ComputeWaterVol@d_mmPerTick+3,___flmul@a+3
  3896  001B46  EC02  F009         	call	___flmul	;wreg free
  3897  001B4A  C047  F095         	movff	?___flmul,ComputeWaterVol@dEmptySpace_mm
  3898  001B4E  C048  F096         	movff	?___flmul+1,ComputeWaterVol@dEmptySpace_mm+1
  3899  001B52  C049  F097         	movff	?___flmul+2,ComputeWaterVol@dEmptySpace_mm+2
  3900  001B56  C04A  F098         	movff	?___flmul+3,ComputeWaterVol@dEmptySpace_mm+3
  3901  001B5A                     
  3902                           ;main.c: 141: if (2 == 2)
  3903  001B5A  C095  F01B         	movff	ComputeWaterVol@dEmptySpace_mm,___fltol@f1
  3904  001B5E  C096  F01C         	movff	ComputeWaterVol@dEmptySpace_mm+1,___fltol@f1+1
  3905  001B62  C097  F01D         	movff	ComputeWaterVol@dEmptySpace_mm+2,___fltol@f1+2
  3906  001B66  C098  F01E         	movff	ComputeWaterVol@dEmptySpace_mm+3,___fltol@f1+3
  3907  001B6A  EC28  F016         	call	___fltol	;wreg free
  3908  001B6E  C01B  F08D         	movff	?___fltol,ComputeWaterVol@iEmptySpace_mm
  3909  001B72  C01C  F08E         	movff	?___fltol+1,ComputeWaterVol@iEmptySpace_mm+1
  3910  001B76                     
  3911                           ;main.c: 142: {;main.c: 143: dWaterHeight_mm = gd_SensorHeight_mm - dEmptySpace_mm;
  3912  001B76  C0C1  F075         	movff	_gd_SensorHeight_mm,___flsub@b
  3913  001B7A  C0C2  F076         	movff	_gd_SensorHeight_mm+1,___flsub@b+1
  3914  001B7E  C0C3  F077         	movff	_gd_SensorHeight_mm+2,___flsub@b+2
  3915  001B82  C0C4  F078         	movff	_gd_SensorHeight_mm+3,___flsub@b+3
  3916  001B86  C095  F079         	movff	ComputeWaterVol@dEmptySpace_mm,___flsub@a
  3917  001B8A  C096  F07A         	movff	ComputeWaterVol@dEmptySpace_mm+1,___flsub@a+1
  3918  001B8E  C097  F07B         	movff	ComputeWaterVol@dEmptySpace_mm+2,___flsub@a+2
  3919  001B92  C098  F07C         	movff	ComputeWaterVol@dEmptySpace_mm+3,___flsub@a+3
  3920  001B96  ECC0  F01B         	call	___flsub	;wreg free
  3921  001B9A  C075  F099         	movff	?___flsub,ComputeWaterVol@dWaterHeight_mm
  3922  001B9E  C076  F09A         	movff	?___flsub+1,ComputeWaterVol@dWaterHeight_mm+1
  3923  001BA2  C077  F09B         	movff	?___flsub+2,ComputeWaterVol@dWaterHeight_mm+2
  3924  001BA6  C078  F09C         	movff	?___flsub+3,ComputeWaterVol@dWaterHeight_mm+3
  3925  001BAA                     
  3926                           ;main.c: 144: dWaterVol = dWaterHeight_mm * gd_TankGalsPer_mm;
  3927  001BAA  C099  F047         	movff	ComputeWaterVol@dWaterHeight_mm,___flmul@b
  3928  001BAE  C09A  F048         	movff	ComputeWaterVol@dWaterHeight_mm+1,___flmul@b+1
  3929  001BB2  C09B  F049         	movff	ComputeWaterVol@dWaterHeight_mm+2,___flmul@b+2
  3930  001BB6  C09C  F04A         	movff	ComputeWaterVol@dWaterHeight_mm+3,___flmul@b+3
  3931  001BBA  C0BD  F04B         	movff	_gd_TankGalsPer_mm,___flmul@a
  3932  001BBE  C0BE  F04C         	movff	_gd_TankGalsPer_mm+1,___flmul@a+1
  3933  001BC2  C0BF  F04D         	movff	_gd_TankGalsPer_mm+2,___flmul@a+2
  3934  001BC6  C0C0  F04E         	movff	_gd_TankGalsPer_mm+3,___flmul@a+3
  3935  001BCA  EC02  F009         	call	___flmul	;wreg free
  3936  001BCE  C047  F089         	movff	?___flmul,ComputeWaterVol@dWaterVol
  3937  001BD2  C048  F08A         	movff	?___flmul+1,ComputeWaterVol@dWaterVol+1
  3938  001BD6  C049  F08B         	movff	?___flmul+2,ComputeWaterVol@dWaterVol+2
  3939  001BDA  C04A  F08C         	movff	?___flmul+3,ComputeWaterVol@dWaterVol+3
  3940  001BDE                     
  3941                           ;main.c: 145: iPercentFull = dWaterHeight_mm * 100 / gd_MaxWaterHeight_mm;
  3942  001BDE  C0B9  F006         	movff	_gd_MaxWaterHeight_mm,___fldiv@a
  3943  001BE2  C0BA  F007         	movff	_gd_MaxWaterHeight_mm+1,___fldiv@a+1
  3944  001BE6  C0BB  F008         	movff	_gd_MaxWaterHeight_mm+2,___fldiv@a+2
  3945  001BEA  C0BC  F009         	movff	_gd_MaxWaterHeight_mm+3,___fldiv@a+3
  3946  001BEE  0E00               	movlw	0
  3947  001BF0  6E4B               	movwf	___flmul@a^0,c
  3948  001BF2  0E00               	movlw	0
  3949  001BF4  6E4C               	movwf	(___flmul@a+1)^0,c
  3950  001BF6  0EC8               	movlw	200
  3951  001BF8  6E4D               	movwf	(___flmul@a+2)^0,c
  3952  001BFA  0E42               	movlw	66
  3953  001BFC  6E4E               	movwf	(___flmul@a+3)^0,c
  3954  001BFE  C099  F047         	movff	ComputeWaterVol@dWaterHeight_mm,___flmul@b
  3955  001C02  C09A  F048         	movff	ComputeWaterVol@dWaterHeight_mm+1,___flmul@b+1
  3956  001C06  C09B  F049         	movff	ComputeWaterVol@dWaterHeight_mm+2,___flmul@b+2
  3957  001C0A  C09C  F04A         	movff	ComputeWaterVol@dWaterHeight_mm+3,___flmul@b+3
  3958  001C0E  EC02  F009         	call	___flmul	;wreg free
  3959  001C12  C047  F002         	movff	?___flmul,___fldiv@b
  3960  001C16  C048  F003         	movff	?___flmul+1,___fldiv@b+1
  3961  001C1A  C049  F004         	movff	?___flmul+2,___fldiv@b+2
  3962  001C1E  C04A  F005         	movff	?___flmul+3,___fldiv@b+3
  3963  001C22  EC18  F00B         	call	___fldiv	;wreg free
  3964  001C26  C002  F01B         	movff	?___fldiv,___fltol@f1
  3965  001C2A  C003  F01C         	movff	?___fldiv+1,___fltol@f1+1
  3966  001C2E  C004  F01D         	movff	?___fldiv+2,___fltol@f1+2
  3967  001C32  C005  F01E         	movff	?___fldiv+3,___fltol@f1+3
  3968  001C36  EC28  F016         	call	___fltol	;wreg free
  3969  001C3A  C01B  F09D         	movff	?___fltol,ComputeWaterVol@iPercentFull
  3970  001C3E  C01C  F09E         	movff	?___fltol+1,ComputeWaterVol@iPercentFull+1
  3971  001C42                     
  3972                           ;main.c: 146: iGals = dWaterVol;
  3973  001C42  C089  F01B         	movff	ComputeWaterVol@dWaterVol,___fltol@f1
  3974  001C46  C08A  F01C         	movff	ComputeWaterVol@dWaterVol+1,___fltol@f1+1
  3975  001C4A  C08B  F01D         	movff	ComputeWaterVol@dWaterVol+2,___fltol@f1+2
  3976  001C4E  C08C  F01E         	movff	ComputeWaterVol@dWaterVol+3,___fltol@f1+3
  3977  001C52  EC28  F016         	call	___fltol	;wreg free
  3978  001C56  C01B  F093         	movff	?___fltol,ComputeWaterVol@iGals
  3979  001C5A  C01C  F094         	movff	?___fltol+1,ComputeWaterVol@iGals+1
  3980  001C5E                     
  3981                           ;main.c: 150: };main.c: 156: if (LATAbits.LATA0 == 1)
  3982  001C5E  A089               	btfss	137,0,c	;volatile
  3983  001C60  EF34  F00E         	goto	u5631
  3984  001C64  EF36  F00E         	goto	u5630
  3985  001C68                     u5631:
  3986  001C68  EF45  F00E         	goto	l5254
  3987  001C6C                     u5630:
  3988  001C6C                     
  3989                           ;main.c: 157: {;main.c: 158: if (iPercentFull < 20) LATAbits.LATA0 = 0;
  3990  001C6C  0100               	movlb	0	; () banked
  3991  001C6E  519E               	movf	(ComputeWaterVol@iPercentFull+1)& (0+255),w,b
  3992  001C70  E107               	bnz	u5641
  3993  001C72  0E14               	movlw	20
  3994  001C74  5D9D               	subwf	ComputeWaterVol@iPercentFull& (0+255),w,b
  3995  001C76  B0D8               	btfsc	status,0,c
  3996  001C78  EF40  F00E         	goto	u5641
  3997  001C7C  EF42  F00E         	goto	u5640
  3998  001C80                     u5641:
  3999  001C80  EF52  F00E         	goto	l5258
  4000  001C84                     u5640:
  4001  001C84                     
  4002                           ; BSR set to: 0
  4003  001C84  9089               	bcf	137,0,c	;volatile
  4004  001C86  EF52  F00E         	goto	l5258
  4005  001C8A                     l5254:
  4006                           
  4007                           ;main.c: 160: if (iPercentFull > 70) LATAbits.LATA0 = 1;
  4008  001C8A  0100               	movlb	0	; () banked
  4009  001C8C  519E               	movf	(ComputeWaterVol@iPercentFull+1)& (0+255),w,b
  4010  001C8E  E109               	bnz	u5650
  4011  001C90  0E47               	movlw	71
  4012  001C92  5D9D               	subwf	ComputeWaterVol@iPercentFull& (0+255),w,b
  4013  001C94  A0D8               	btfss	status,0,c
  4014  001C96  EF4F  F00E         	goto	u5651
  4015  001C9A  EF51  F00E         	goto	u5650
  4016  001C9E                     u5651:
  4017  001C9E  EF52  F00E         	goto	l5258
  4018  001CA2                     u5650:
  4019  001CA2                     
  4020                           ; BSR set to: 0
  4021  001CA2  8089               	bsf	137,0,c	;volatile
  4022  001CA4                     l5258:
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;main.c: 164: {;main.c: 165: LCD_GoTo (0, 0);
  4026  001CA4  0E00               	movlw	0
  4027  001CA6  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  4028  001CA8  0E00               	movlw	0
  4029  001CAA  EC11  F01B         	call	_LCD_GoTo
  4030  001CAE                     
  4031                           ;main.c: 166: sprintf(sLine1, "Gals: %4.0u %3.1u%% ", iGals, iPercentFull);
  4032  001CAE  0E64               	movlw	low _sLine1
  4033  001CB0  6E0E               	movwf	sprintf@sp^0,c
  4034  001CB2  0E01               	movlw	high _sLine1
  4035  001CB4  6E0F               	movwf	(sprintf@sp+1)^0,c
  4036  001CB6  0E57               	movlw	low STR_2
  4037  001CB8  6E10               	movwf	sprintf@f^0,c
  4038  001CBA  0E08               	movlw	high STR_2
  4039  001CBC  6E11               	movwf	(sprintf@f+1)^0,c
  4040  001CBE  C093  F012         	movff	ComputeWaterVol@iGals,?_sprintf+4
  4041  001CC2  C094  F013         	movff	ComputeWaterVol@iGals+1,?_sprintf+5
  4042  001CC6  C09D  F014         	movff	ComputeWaterVol@iPercentFull,?_sprintf+6
  4043  001CCA  C09E  F015         	movff	ComputeWaterVol@iPercentFull+1,?_sprintf+7
  4044  001CCE  ECA6  F006         	call	_sprintf	;wreg free
  4045  001CD2                     
  4046                           ;main.c: 167: LCD_WriteString (sLine1);
  4047  001CD2  0E64               	movlw	low _sLine1
  4048  001CD4  6E05               	movwf	LCD_WriteString@iData^0,c
  4049  001CD6  0E01               	movlw	high _sLine1
  4050  001CD8  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  4051  001CDA  EC69  F01A         	call	_LCD_WriteString	;wreg free
  4052  001CDE                     
  4053                           ;main.c: 169: LCD_GoTo(1, 0);
  4054  001CDE  0E00               	movlw	0
  4055  001CE0  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  4056  001CE2  0E01               	movlw	1
  4057  001CE4  EC11  F01B         	call	_LCD_GoTo
  4058  001CE8                     
  4059                           ;main.c: 170: sprintf(sLine2, "Echo: %4.0u ", iEmptySpace_mm);
  4060  001CE8  0E00               	movlw	low _sLine2
  4061  001CEA  6E0E               	movwf	sprintf@sp^0,c
  4062  001CEC  0E01               	movlw	high _sLine2
  4063  001CEE  6E0F               	movwf	(sprintf@sp+1)^0,c
  4064  001CF0  0E6C               	movlw	low STR_3
  4065  001CF2  6E10               	movwf	sprintf@f^0,c
  4066  001CF4  0E08               	movlw	high STR_3
  4067  001CF6  6E11               	movwf	(sprintf@f+1)^0,c
  4068  001CF8  C08D  F012         	movff	ComputeWaterVol@iEmptySpace_mm,?_sprintf+4
  4069  001CFC  C08E  F013         	movff	ComputeWaterVol@iEmptySpace_mm+1,?_sprintf+5
  4070  001D00  ECA6  F006         	call	_sprintf	;wreg free
  4071                           
  4072                           ;main.c: 171: LCD_WriteString (sLine2);
  4073  001D04  0E00               	movlw	low _sLine2
  4074  001D06  6E05               	movwf	LCD_WriteString@iData^0,c
  4075  001D08  0E01               	movlw	high _sLine2
  4076  001D0A  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  4077  001D0C  EC69  F01A         	call	_LCD_WriteString	;wreg free
  4078  001D10                     
  4079                           ;main.c: 172: __nop();
  4080  001D10  F000               	nop	
  4081  001D12  0012               	return		;funcret
  4082  001D14                     __end_of_ComputeWaterVol:
  4083                           	callstack 0
  4084                           
  4085 ;; *************** function _sqrt *****************
  4086 ;; Defined at:
  4087 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcsqrt.c"
  4088 ;; Parameters:    Size  Location     Type
  4089 ;;  a               4   26[COMRAM] void 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  frac            4   51[COMRAM] unsigned long 
  4092 ;;  root            4   47[COMRAM] struct .
  4093 ;;  grs             4   41[COMRAM] unsigned long 
  4094 ;;  tfrac           4   36[COMRAM] unsigned long 
  4095 ;;  exp             2   45[COMRAM] int 
  4096 ;;  p               1   40[COMRAM] unsigned char 
  4097 ;;  i               1   35[COMRAM] unsigned char 
  4098 ;;  sign            1   34[COMRAM] unsigned char 
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  4   26[COMRAM] unsigned char 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4108 ;;      Params:         4       0       0       0       0       0       0       0       0
  4109 ;;      Locals:        21       0       0       0       0       0       0       0       0
  4110 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4111 ;;      Totals:        29       0       0       0       0       0       0       0       0
  4112 ;;Total ram usage:       29 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; Hardware stack levels required when called: 4
  4115 ;; This function calls:
  4116 ;;		Nothing
  4117 ;; This function is called by:
  4118 ;;		_ComputeWaterVol
  4119 ;;		_InitTankVariables
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text20
  4124  001D14                     __ptext20:
  4125                           	callstack 0
  4126  001D14                     _sqrt:
  4127                           	callstack 25
  4128  001D14  501E               	movf	(sqrt@a+3)^0,w,c
  4129  001D16  0B80               	andlw	128
  4130  001D18  6E23               	movwf	sqrt@sign^0,c
  4131  001D1A  501E               	movf	(sqrt@a+3)^0,w,c
  4132  001D1C  241E               	addwf	(sqrt@a+3)^0,w,c
  4133  001D1E  6E29               	movwf	sqrt@p^0,c
  4134  001D20  AE1D               	btfss	(sqrt@a+2)^0,7,c
  4135  001D22  EF95  F00E         	goto	u3861
  4136  001D26  EF97  F00E         	goto	u3860
  4137  001D2A                     u3861:
  4138  001D2A  EF98  F00E         	goto	l4008
  4139  001D2E                     u3860:
  4140  001D2E  8029               	bsf	sqrt@p^0,0,c
  4141  001D30                     l4008:
  4142  001D30  C029  F02E         	movff	sqrt@p,sqrt@exp
  4143  001D34  6A2F               	clrf	(sqrt@exp+1)^0,c
  4144  001D36  0EFF               	movlw	255
  4145  001D38  141B               	andwf	sqrt@a^0,w,c
  4146  001D3A  6E34               	movwf	sqrt@frac^0,c
  4147  001D3C  0EFF               	movlw	255
  4148  001D3E  141C               	andwf	(sqrt@a+1)^0,w,c
  4149  001D40  6E35               	movwf	(sqrt@frac+1)^0,c
  4150  001D42  0E7F               	movlw	127
  4151  001D44  141D               	andwf	(sqrt@a+2)^0,w,c
  4152  001D46  6E36               	movwf	(sqrt@frac+2)^0,c
  4153  001D48  0E00               	movlw	0
  4154  001D4A  141E               	andwf	(sqrt@a+3)^0,w,c
  4155  001D4C  6E37               	movwf	(sqrt@frac+3)^0,c
  4156  001D4E  502E               	movf	sqrt@exp^0,w,c
  4157  001D50  102F               	iorwf	(sqrt@exp+1)^0,w,c
  4158  001D52  B4D8               	btfsc	status,2,c
  4159  001D54  EFAE  F00E         	goto	u3871
  4160  001D58  EFB0  F00E         	goto	u3870
  4161  001D5C                     u3871:
  4162  001D5C  EFBA  F00E         	goto	l4018
  4163  001D60                     u3870:
  4164  001D60  8E36               	bsf	(sqrt@frac+2)^0,7,c
  4165  001D62  282E               	incf	sqrt@exp^0,w,c
  4166  001D64  102F               	iorwf	(sqrt@exp+1)^0,w,c
  4167  001D66  A4D8               	btfss	status,2,c
  4168  001D68  EFB8  F00E         	goto	u3881
  4169  001D6C  EFBA  F00E         	goto	u3880
  4170  001D70                     u3881:
  4171  001D70  EFC2  F00E         	goto	l4022
  4172  001D74                     u3880:
  4173  001D74                     l4018:
  4174  001D74  0E00               	movlw	0
  4175  001D76  6E34               	movwf	sqrt@frac^0,c
  4176  001D78  0E00               	movlw	0
  4177  001D7A  6E35               	movwf	(sqrt@frac+1)^0,c
  4178  001D7C  0E00               	movlw	0
  4179  001D7E  6E36               	movwf	(sqrt@frac+2)^0,c
  4180  001D80  0E00               	movlw	0
  4181  001D82  6E37               	movwf	(sqrt@frac+3)^0,c
  4182  001D84                     l4022:
  4183  001D84  502E               	movf	sqrt@exp^0,w,c
  4184  001D86  102F               	iorwf	(sqrt@exp+1)^0,w,c
  4185  001D88  A4D8               	btfss	status,2,c
  4186  001D8A  EFC9  F00E         	goto	u3891
  4187  001D8E  EFCB  F00E         	goto	u3890
  4188  001D92                     u3891:
  4189  001D92  EFD5  F00E         	goto	l4028
  4190  001D96                     u3890:
  4191  001D96  0E00               	movlw	0
  4192  001D98  6E1B               	movwf	?_sqrt^0,c
  4193  001D9A  0E00               	movlw	0
  4194  001D9C  6E1C               	movwf	(?_sqrt+1)^0,c
  4195  001D9E  0E00               	movlw	0
  4196  001DA0  6E1D               	movwf	(?_sqrt+2)^0,c
  4197  001DA2  0E00               	movlw	0
  4198  001DA4  6E1E               	movwf	(?_sqrt+3)^0,c
  4199  001DA6  EF17  F010         	goto	l1354
  4200  001DAA                     l4028:
  4201  001DAA  5023               	movf	sqrt@sign^0,w,c
  4202  001DAC  B4D8               	btfsc	status,2,c
  4203  001DAE  EFDB  F00E         	goto	u3901
  4204  001DB2  EFDD  F00E         	goto	u3900
  4205  001DB6                     u3901:
  4206  001DB6  EFF8  F00E         	goto	l4040
  4207  001DBA                     u3900:
  4208  001DBA  0E00               	movlw	0
  4209  001DBC  6E30               	movwf	sqrt@root^0,c
  4210  001DBE  0E00               	movlw	0
  4211  001DC0  6E31               	movwf	(sqrt@root+1)^0,c
  4212  001DC2  0E40               	movlw	64
  4213  001DC4  6E32               	movwf	(sqrt@root+2)^0,c
  4214  001DC6  0E00               	movlw	0
  4215  001DC8  6E33               	movwf	(sqrt@root+3)^0,c
  4216  001DCA  0E80               	movlw	128
  4217  001DCC  1232               	iorwf	(sqrt@root+2)^0,f,c
  4218  001DCE  0EFF               	movlw	255
  4219  001DD0  1233               	iorwf	(sqrt@root+3)^0,f,c
  4220  001DD2  0E00               	movlw	0
  4221  001DD4  0100               	movlb	0	; () banked
  4222  001DD6  6FCE               	movwf	(_errno+1)& (0+255),b
  4223  001DD8  0E21               	movlw	33
  4224  001DDA  6FCD               	movwf	_errno& (0+255),b
  4225  001DDC                     l4036:
  4226  001DDC  C030  F01B         	movff	sqrt@root,?_sqrt
  4227  001DE0  C031  F01C         	movff	sqrt@root+1,?_sqrt+1
  4228  001DE4  C032  F01D         	movff	sqrt@root+2,?_sqrt+2
  4229  001DE8  C033  F01E         	movff	sqrt@root+3,?_sqrt+3
  4230  001DEC  EF17  F010         	goto	l1354
  4231  001DF0                     l4040:
  4232  001DF0  282E               	incf	sqrt@exp^0,w,c
  4233  001DF2  102F               	iorwf	(sqrt@exp+1)^0,w,c
  4234  001DF4  A4D8               	btfss	status,2,c
  4235  001DF6  EFFF  F00E         	goto	u3911
  4236  001DFA  EF01  F00F         	goto	u3910
  4237  001DFE                     u3911:
  4238  001DFE  EF0B  F00F         	goto	l4048
  4239  001E02                     u3910:
  4240  001E02  0E00               	movlw	0
  4241  001E04  6E30               	movwf	sqrt@root^0,c
  4242  001E06  0E00               	movlw	0
  4243  001E08  6E31               	movwf	(sqrt@root+1)^0,c
  4244  001E0A  0E80               	movlw	128
  4245  001E0C  6E32               	movwf	(sqrt@root+2)^0,c
  4246  001E0E  0E7F               	movlw	127
  4247  001E10  6E33               	movwf	(sqrt@root+3)^0,c
  4248  001E12  EFEE  F00E         	goto	l4036
  4249  001E16                     l4048:
  4250  001E16  0E81               	movlw	129
  4251  001E18  262E               	addwf	sqrt@exp^0,f,c
  4252  001E1A  0EFF               	movlw	255
  4253  001E1C  222F               	addwfc	(sqrt@exp+1)^0,f,c
  4254  001E1E  502E               	movf	sqrt@exp^0,w,c
  4255  001E20  0B01               	andlw	1
  4256  001E22  6E29               	movwf	sqrt@p^0,c
  4257  001E24  342F               	rlcf	(sqrt@exp+1)^0,w,c
  4258  001E26  322F               	rrcf	(sqrt@exp+1)^0,f,c
  4259  001E28  322E               	rrcf	sqrt@exp^0,f,c
  4260  001E2A  0E7F               	movlw	127
  4261  001E2C  262E               	addwf	sqrt@exp^0,f,c
  4262  001E2E  0E00               	movlw	0
  4263  001E30  222F               	addwfc	(sqrt@exp+1)^0,f,c
  4264  001E32  90D8               	bcf	status,0,c
  4265  001E34  3434               	rlcf	sqrt@frac^0,w,c
  4266  001E36  6E25               	movwf	sqrt@tfrac^0,c
  4267  001E38  3435               	rlcf	(sqrt@frac+1)^0,w,c
  4268  001E3A  6E26               	movwf	(sqrt@tfrac+1)^0,c
  4269  001E3C  3436               	rlcf	(sqrt@frac+2)^0,w,c
  4270  001E3E  6E27               	movwf	(sqrt@tfrac+2)^0,c
  4271  001E40  3437               	rlcf	(sqrt@frac+3)^0,w,c
  4272  001E42  6E28               	movwf	(sqrt@tfrac+3)^0,c
  4273  001E44  0E00               	movlw	0
  4274  001E46  6E34               	movwf	sqrt@frac^0,c
  4275  001E48  0E00               	movlw	0
  4276  001E4A  6E35               	movwf	(sqrt@frac+1)^0,c
  4277  001E4C  0E00               	movlw	0
  4278  001E4E  6E36               	movwf	(sqrt@frac+2)^0,c
  4279  001E50  0E00               	movlw	0
  4280  001E52  6E37               	movwf	(sqrt@frac+3)^0,c
  4281  001E54  0E00               	movlw	0
  4282  001E56  6E2A               	movwf	sqrt@grs^0,c
  4283  001E58  0E00               	movlw	0
  4284  001E5A  6E2B               	movwf	(sqrt@grs+1)^0,c
  4285  001E5C  0E00               	movlw	0
  4286  001E5E  6E2C               	movwf	(sqrt@grs+2)^0,c
  4287  001E60  0E01               	movlw	1
  4288  001E62  6E2D               	movwf	(sqrt@grs+3)^0,c
  4289  001E64  5029               	movf	sqrt@p^0,w,c
  4290  001E66  B4D8               	btfsc	status,2,c
  4291  001E68  EF38  F00F         	goto	u3921
  4292  001E6C  EF3A  F00F         	goto	u3920
  4293  001E70                     u3921:
  4294  001E70  EF3F  F00F         	goto	l4058
  4295  001E74                     u3920:
  4296  001E74  90D8               	bcf	status,0,c
  4297  001E76  3625               	rlcf	sqrt@tfrac^0,f,c
  4298  001E78  3626               	rlcf	(sqrt@tfrac+1)^0,f,c
  4299  001E7A  3627               	rlcf	(sqrt@tfrac+2)^0,f,c
  4300  001E7C  3628               	rlcf	(sqrt@tfrac+3)^0,f,c
  4301  001E7E                     l4058:
  4302  001E7E  0E00               	movlw	0
  4303  001E80  6E24               	movwf	sqrt@i^0,c
  4304  001E82  EF97  F00F         	goto	l4072
  4305  001E86                     l4060:
  4306  001E86  502A               	movf	sqrt@grs^0,w,c
  4307  001E88  1234               	iorwf	sqrt@frac^0,f,c
  4308  001E8A  502B               	movf	(sqrt@grs+1)^0,w,c
  4309  001E8C  1235               	iorwf	(sqrt@frac+1)^0,f,c
  4310  001E8E  502C               	movf	(sqrt@grs+2)^0,w,c
  4311  001E90  1236               	iorwf	(sqrt@frac+2)^0,f,c
  4312  001E92  502D               	movf	(sqrt@grs+3)^0,w,c
  4313  001E94  1237               	iorwf	(sqrt@frac+3)^0,f,c
  4314  001E96  5034               	movf	sqrt@frac^0,w,c
  4315  001E98  5C25               	subwf	sqrt@tfrac^0,w,c
  4316  001E9A  5035               	movf	(sqrt@frac+1)^0,w,c
  4317  001E9C  5826               	subwfb	(sqrt@tfrac+1)^0,w,c
  4318  001E9E  5036               	movf	(sqrt@frac+2)^0,w,c
  4319  001EA0  5827               	subwfb	(sqrt@tfrac+2)^0,w,c
  4320  001EA2  5037               	movf	(sqrt@frac+3)^0,w,c
  4321  001EA4  5828               	subwfb	(sqrt@tfrac+3)^0,w,c
  4322  001EA6  A0D8               	btfss	status,0,c
  4323  001EA8  EF58  F00F         	goto	u3931
  4324  001EAC  EF5A  F00F         	goto	u3930
  4325  001EB0                     u3931:
  4326  001EB0  EF6C  F00F         	goto	l4064
  4327  001EB4                     u3930:
  4328  001EB4  5034               	movf	sqrt@frac^0,w,c
  4329  001EB6  5E25               	subwf	sqrt@tfrac^0,f,c
  4330  001EB8  5035               	movf	(sqrt@frac+1)^0,w,c
  4331  001EBA  5A26               	subwfb	(sqrt@tfrac+1)^0,f,c
  4332  001EBC  5036               	movf	(sqrt@frac+2)^0,w,c
  4333  001EBE  5A27               	subwfb	(sqrt@tfrac+2)^0,f,c
  4334  001EC0  5037               	movf	(sqrt@frac+3)^0,w,c
  4335  001EC2  5A28               	subwfb	(sqrt@tfrac+3)^0,f,c
  4336  001EC4  502A               	movf	sqrt@grs^0,w,c
  4337  001EC6  2634               	addwf	sqrt@frac^0,f,c
  4338  001EC8  502B               	movf	(sqrt@grs+1)^0,w,c
  4339  001ECA  2235               	addwfc	(sqrt@frac+1)^0,f,c
  4340  001ECC  502C               	movf	(sqrt@grs+2)^0,w,c
  4341  001ECE  2236               	addwfc	(sqrt@frac+2)^0,f,c
  4342  001ED0  502D               	movf	(sqrt@grs+3)^0,w,c
  4343  001ED2  2237               	addwfc	(sqrt@frac+3)^0,f,c
  4344  001ED4  EF7C  F00F         	goto	l4066
  4345  001ED8                     l4064:
  4346  001ED8  1C2A               	comf	sqrt@grs^0,w,c
  4347  001EDA  6E1F               	movwf	??_sqrt^0,c
  4348  001EDC  1C2B               	comf	(sqrt@grs+1)^0,w,c
  4349  001EDE  6E20               	movwf	(??_sqrt+1)^0,c
  4350  001EE0  1C2C               	comf	(sqrt@grs+2)^0,w,c
  4351  001EE2  6E21               	movwf	(??_sqrt+2)^0,c
  4352  001EE4  1C2D               	comf	(sqrt@grs+3)^0,w,c
  4353  001EE6  6E22               	movwf	(??_sqrt+3)^0,c
  4354  001EE8  501F               	movf	??_sqrt^0,w,c
  4355  001EEA  1634               	andwf	sqrt@frac^0,f,c
  4356  001EEC  5020               	movf	(??_sqrt+1)^0,w,c
  4357  001EEE  1635               	andwf	(sqrt@frac+1)^0,f,c
  4358  001EF0  5021               	movf	(??_sqrt+2)^0,w,c
  4359  001EF2  1636               	andwf	(sqrt@frac+2)^0,f,c
  4360  001EF4  5022               	movf	(??_sqrt+3)^0,w,c
  4361  001EF6  1637               	andwf	(sqrt@frac+3)^0,f,c
  4362  001EF8                     l4066:
  4363  001EF8  C02A  F01F         	movff	sqrt@grs,??_sqrt
  4364  001EFC  C02B  F020         	movff	sqrt@grs+1,??_sqrt+1
  4365  001F00  C02C  F021         	movff	sqrt@grs+2,??_sqrt+2
  4366  001F04  C02D  F022         	movff	sqrt@grs+3,??_sqrt+3
  4367  001F08  90D8               	bcf	status,0,c
  4368  001F0A  3222               	rrcf	(??_sqrt+3)^0,f,c
  4369  001F0C  3221               	rrcf	(??_sqrt+2)^0,f,c
  4370  001F0E  3220               	rrcf	(??_sqrt+1)^0,f,c
  4371  001F10  321F               	rrcf	??_sqrt^0,f,c
  4372  001F12  C01F  F02A         	movff	??_sqrt,sqrt@grs
  4373  001F16  C020  F02B         	movff	??_sqrt+1,sqrt@grs+1
  4374  001F1A  C021  F02C         	movff	??_sqrt+2,sqrt@grs+2
  4375  001F1E  C022  F02D         	movff	??_sqrt+3,sqrt@grs+3
  4376  001F22  90D8               	bcf	status,0,c
  4377  001F24  3625               	rlcf	sqrt@tfrac^0,f,c
  4378  001F26  3626               	rlcf	(sqrt@tfrac+1)^0,f,c
  4379  001F28  3627               	rlcf	(sqrt@tfrac+2)^0,f,c
  4380  001F2A  3628               	rlcf	(sqrt@tfrac+3)^0,f,c
  4381  001F2C  2A24               	incf	sqrt@i^0,f,c
  4382  001F2E                     l4072:
  4383  001F2E  0E18               	movlw	24
  4384  001F30  6424               	cpfsgt	sqrt@i^0,c
  4385  001F32  EF9D  F00F         	goto	u3941
  4386  001F36  EF9F  F00F         	goto	u3940
  4387  001F3A                     u3941:
  4388  001F3A  EF43  F00F         	goto	l4060
  4389  001F3E                     u3940:
  4390  001F3E  C034  F01F         	movff	sqrt@frac,??_sqrt
  4391  001F42  C035  F020         	movff	sqrt@frac+1,??_sqrt+1
  4392  001F46  C036  F021         	movff	sqrt@frac+2,??_sqrt+2
  4393  001F4A  C037  F022         	movff	sqrt@frac+3,??_sqrt+3
  4394  001F4E  90D8               	bcf	status,0,c
  4395  001F50  3222               	rrcf	(??_sqrt+3)^0,f,c
  4396  001F52  3221               	rrcf	(??_sqrt+2)^0,f,c
  4397  001F54  3220               	rrcf	(??_sqrt+1)^0,f,c
  4398  001F56  321F               	rrcf	??_sqrt^0,f,c
  4399  001F58  C01F  F034         	movff	??_sqrt,sqrt@frac
  4400  001F5C  C020  F035         	movff	??_sqrt+1,sqrt@frac+1
  4401  001F60  C021  F036         	movff	??_sqrt+2,sqrt@frac+2
  4402  001F64  C022  F037         	movff	??_sqrt+3,sqrt@frac+3
  4403  001F68  0E01               	movlw	1
  4404  001F6A  1434               	andwf	sqrt@frac^0,w,c
  4405  001F6C  6E2A               	movwf	sqrt@grs^0,c
  4406  001F6E  0E00               	movlw	0
  4407  001F70  1435               	andwf	(sqrt@frac+1)^0,w,c
  4408  001F72  6E2B               	movwf	(sqrt@grs+1)^0,c
  4409  001F74  0E00               	movlw	0
  4410  001F76  1436               	andwf	(sqrt@frac+2)^0,w,c
  4411  001F78  6E2C               	movwf	(sqrt@grs+2)^0,c
  4412  001F7A  0E00               	movlw	0
  4413  001F7C  1437               	andwf	(sqrt@frac+3)^0,w,c
  4414  001F7E  6E2D               	movwf	(sqrt@grs+3)^0,c
  4415  001F80  C034  F01F         	movff	sqrt@frac,??_sqrt
  4416  001F84  C035  F020         	movff	sqrt@frac+1,??_sqrt+1
  4417  001F88  C036  F021         	movff	sqrt@frac+2,??_sqrt+2
  4418  001F8C  C037  F022         	movff	sqrt@frac+3,??_sqrt+3
  4419  001F90  90D8               	bcf	status,0,c
  4420  001F92  3222               	rrcf	(??_sqrt+3)^0,f,c
  4421  001F94  3221               	rrcf	(??_sqrt+2)^0,f,c
  4422  001F96  3220               	rrcf	(??_sqrt+1)^0,f,c
  4423  001F98  321F               	rrcf	??_sqrt^0,f,c
  4424  001F9A  C01F  F034         	movff	??_sqrt,sqrt@frac
  4425  001F9E  C020  F035         	movff	??_sqrt+1,sqrt@frac+1
  4426  001FA2  C021  F036         	movff	??_sqrt+2,sqrt@frac+2
  4427  001FA6  C022  F037         	movff	??_sqrt+3,sqrt@frac+3
  4428  001FAA  502A               	movf	sqrt@grs^0,w,c
  4429  001FAC  2634               	addwf	sqrt@frac^0,f,c
  4430  001FAE  502B               	movf	(sqrt@grs+1)^0,w,c
  4431  001FB0  2235               	addwfc	(sqrt@frac+1)^0,f,c
  4432  001FB2  502C               	movf	(sqrt@grs+2)^0,w,c
  4433  001FB4  2236               	addwfc	(sqrt@frac+2)^0,f,c
  4434  001FB6  502D               	movf	(sqrt@grs+3)^0,w,c
  4435  001FB8  2237               	addwfc	(sqrt@frac+3)^0,f,c
  4436  001FBA  A037               	btfss	(sqrt@frac+3)^0,0,c
  4437  001FBC  EFE2  F00F         	goto	u3951
  4438  001FC0  EFE4  F00F         	goto	u3950
  4439  001FC4                     u3951:
  4440  001FC4  EFFB  F00F         	goto	l4084
  4441  001FC8                     u3950:
  4442  001FC8  C034  F01F         	movff	sqrt@frac,??_sqrt
  4443  001FCC  C035  F020         	movff	sqrt@frac+1,??_sqrt+1
  4444  001FD0  C036  F021         	movff	sqrt@frac+2,??_sqrt+2
  4445  001FD4  C037  F022         	movff	sqrt@frac+3,??_sqrt+3
  4446  001FD8  90D8               	bcf	status,0,c
  4447  001FDA  3222               	rrcf	(??_sqrt+3)^0,f,c
  4448  001FDC  3221               	rrcf	(??_sqrt+2)^0,f,c
  4449  001FDE  3220               	rrcf	(??_sqrt+1)^0,f,c
  4450  001FE0  321F               	rrcf	??_sqrt^0,f,c
  4451  001FE2  C01F  F034         	movff	??_sqrt,sqrt@frac
  4452  001FE6  C020  F035         	movff	??_sqrt+1,sqrt@frac+1
  4453  001FEA  C021  F036         	movff	??_sqrt+2,sqrt@frac+2
  4454  001FEE  C022  F037         	movff	??_sqrt+3,sqrt@frac+3
  4455  001FF2  4A2E               	infsnz	sqrt@exp^0,f,c
  4456  001FF4  2A2F               	incf	(sqrt@exp+1)^0,f,c
  4457  001FF6                     l4084:
  4458  001FF6  0EFF               	movlw	255
  4459  001FF8  1434               	andwf	sqrt@frac^0,w,c
  4460  001FFA  6E30               	movwf	sqrt@root^0,c
  4461  001FFC  0EFF               	movlw	255
  4462  001FFE  1435               	andwf	(sqrt@frac+1)^0,w,c
  4463  002000  6E31               	movwf	(sqrt@root+1)^0,c
  4464  002002  0E7F               	movlw	127
  4465  002004  1436               	andwf	(sqrt@frac+2)^0,w,c
  4466  002006  6E32               	movwf	(sqrt@root+2)^0,c
  4467  002008  0E00               	movlw	0
  4468  00200A  1437               	andwf	(sqrt@frac+3)^0,w,c
  4469  00200C  6E33               	movwf	(sqrt@root+3)^0,c
  4470  00200E  C02E  F029         	movff	sqrt@exp,sqrt@p
  4471  002012  A029               	btfss	sqrt@p^0,0,c
  4472  002014  EF0E  F010         	goto	u3961
  4473  002018  EF10  F010         	goto	u3960
  4474  00201C                     u3961:
  4475  00201C  EF11  F010         	goto	l4092
  4476  002020                     u3960:
  4477  002020  8E32               	bsf	(sqrt@root+2)^0,7,c
  4478  002022                     l4092:
  4479  002022  90D8               	bcf	status,0,c
  4480  002024  3029               	rrcf	sqrt@p^0,w,c
  4481  002026  6E33               	movwf	(sqrt@root+3)^0,c
  4482  002028  9E33               	bcf	(sqrt@root+3)^0,7,c
  4483  00202A  EFEE  F00E         	goto	l4036
  4484  00202E                     l1354:
  4485  00202E  0012               	return		;funcret
  4486  002030                     __end_of_sqrt:
  4487                           	callstack 0
  4488                           
  4489 ;; *************** function ___xxtofl *****************
  4490 ;; Defined at:
  4491 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  4492 ;; Parameters:    Size  Location     Type
  4493 ;;  sign            1    wreg     unsigned char 
  4494 ;;  val             4   36[COMRAM] long 
  4495 ;; Auto vars:     Size  Location     Type
  4496 ;;  sign            1   44[COMRAM] unsigned char 
  4497 ;;  arg             4   46[COMRAM] unsigned long 
  4498 ;;  exp             1   45[COMRAM] unsigned char 
  4499 ;; Return value:  Size  Location     Type
  4500 ;;                  4   36[COMRAM] unsigned char 
  4501 ;; Registers used:
  4502 ;;		wreg, status,2, status,0
  4503 ;; Tracked objects:
  4504 ;;		On entry : 0/0
  4505 ;;		On exit  : 0/0
  4506 ;;		Unchanged: 0/0
  4507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4508 ;;      Params:         4       0       0       0       0       0       0       0       0
  4509 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4510 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4511 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4512 ;;Total ram usage:       14 bytes
  4513 ;; Hardware stack levels used: 1
  4514 ;; Hardware stack levels required when called: 4
  4515 ;; This function calls:
  4516 ;;		Nothing
  4517 ;; This function is called by:
  4518 ;;		_ComputeWaterVol
  4519 ;;		_pow
  4520 ;;		_exp
  4521 ;;		_floor
  4522 ;;		_log
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           	psect	text21
  4527  002578                     __ptext21:
  4528                           	callstack 0
  4529  002578                     ___xxtofl:
  4530                           	callstack 23
  4531                           
  4532                           ;incstack = 0
  4533                           ;___xxtofl@sign stored from wreg
  4534  002578  6E2D               	movwf	___xxtofl@sign^0,c
  4535  00257A  502D               	movf	___xxtofl@sign^0,w,c
  4536  00257C  B4D8               	btfsc	status,2,c
  4537  00257E  EFC3  F012         	goto	u5251
  4538  002582  EFC5  F012         	goto	u5250
  4539  002586                     u5251:
  4540  002586  EFE7  F012         	goto	l1386
  4541  00258A                     u5250:
  4542  00258A  BE28               	btfsc	(___xxtofl@val+3)^0,7,c
  4543  00258C  EFCC  F012         	goto	u5260
  4544  002590  EFCA  F012         	goto	u5261
  4545  002594                     u5261:
  4546  002594  EFE7  F012         	goto	l1386
  4547  002598                     u5260:
  4548  002598  C025  F029         	movff	___xxtofl@val,??___xxtofl
  4549  00259C  C026  F02A         	movff	___xxtofl@val+1,??___xxtofl+1
  4550  0025A0  C027  F02B         	movff	___xxtofl@val+2,??___xxtofl+2
  4551  0025A4  C028  F02C         	movff	___xxtofl@val+3,??___xxtofl+3
  4552  0025A8  1E29               	comf	??___xxtofl^0,f,c
  4553  0025AA  1E2A               	comf	(??___xxtofl+1)^0,f,c
  4554  0025AC  1E2B               	comf	(??___xxtofl+2)^0,f,c
  4555  0025AE  1E2C               	comf	(??___xxtofl+3)^0,f,c
  4556  0025B0  2A29               	incf	??___xxtofl^0,f,c
  4557  0025B2  0E00               	movlw	0
  4558  0025B4  222A               	addwfc	(??___xxtofl+1)^0,f,c
  4559  0025B6  222B               	addwfc	(??___xxtofl+2)^0,f,c
  4560  0025B8  222C               	addwfc	(??___xxtofl+3)^0,f,c
  4561  0025BA  C029  F02F         	movff	??___xxtofl,___xxtofl@arg
  4562  0025BE  C02A  F030         	movff	??___xxtofl+1,___xxtofl@arg+1
  4563  0025C2  C02B  F031         	movff	??___xxtofl+2,___xxtofl@arg+2
  4564  0025C6  C02C  F032         	movff	??___xxtofl+3,___xxtofl@arg+3
  4565  0025CA  EFEF  F012         	goto	l4972
  4566  0025CE                     l1386:
  4567  0025CE  C025  F02F         	movff	___xxtofl@val,___xxtofl@arg
  4568  0025D2  C026  F030         	movff	___xxtofl@val+1,___xxtofl@arg+1
  4569  0025D6  C027  F031         	movff	___xxtofl@val+2,___xxtofl@arg+2
  4570  0025DA  C028  F032         	movff	___xxtofl@val+3,___xxtofl@arg+3
  4571  0025DE                     l4972:
  4572  0025DE  5025               	movf	___xxtofl@val^0,w,c
  4573  0025E0  1026               	iorwf	(___xxtofl@val+1)^0,w,c
  4574  0025E2  1027               	iorwf	(___xxtofl@val+2)^0,w,c
  4575  0025E4  1028               	iorwf	(___xxtofl@val+3)^0,w,c
  4576  0025E6  A4D8               	btfss	status,2,c
  4577  0025E8  EFF8  F012         	goto	u5271
  4578  0025EC  EFFA  F012         	goto	u5270
  4579  0025F0                     u5271:
  4580  0025F0  EF04  F013         	goto	l4978
  4581  0025F4                     u5270:
  4582  0025F4  0E00               	movlw	0
  4583  0025F6  6E25               	movwf	?___xxtofl^0,c
  4584  0025F8  0E00               	movlw	0
  4585  0025FA  6E26               	movwf	(?___xxtofl+1)^0,c
  4586  0025FC  0E00               	movlw	0
  4587  0025FE  6E27               	movwf	(?___xxtofl+2)^0,c
  4588  002600  0E00               	movlw	0
  4589  002602  6E28               	movwf	(?___xxtofl+3)^0,c
  4590  002604  EF95  F013         	goto	l1389
  4591  002608                     l4978:
  4592  002608  0E96               	movlw	150
  4593  00260A  6E2E               	movwf	___xxtofl@exp^0,c
  4594  00260C  EF0E  F013         	goto	l4982
  4595  002610                     l4980:
  4596  002610  2A2E               	incf	___xxtofl@exp^0,f,c
  4597  002612  90D8               	bcf	status,0,c
  4598  002614  3232               	rrcf	(___xxtofl@arg+3)^0,f,c
  4599  002616  3231               	rrcf	(___xxtofl@arg+2)^0,f,c
  4600  002618  3230               	rrcf	(___xxtofl@arg+1)^0,f,c
  4601  00261A  322F               	rrcf	___xxtofl@arg^0,f,c
  4602  00261C                     l4982:
  4603  00261C  0E00               	movlw	0
  4604  00261E  142F               	andwf	___xxtofl@arg^0,w,c
  4605  002620  6E29               	movwf	??___xxtofl^0,c
  4606  002622  0E00               	movlw	0
  4607  002624  1430               	andwf	(___xxtofl@arg+1)^0,w,c
  4608  002626  6E2A               	movwf	(??___xxtofl+1)^0,c
  4609  002628  0E00               	movlw	0
  4610  00262A  1431               	andwf	(___xxtofl@arg+2)^0,w,c
  4611  00262C  6E2B               	movwf	(??___xxtofl+2)^0,c
  4612  00262E  0EFE               	movlw	254
  4613  002630  1432               	andwf	(___xxtofl@arg+3)^0,w,c
  4614  002632  6E2C               	movwf	(??___xxtofl+3)^0,c
  4615  002634  5029               	movf	??___xxtofl^0,w,c
  4616  002636  102A               	iorwf	(??___xxtofl+1)^0,w,c
  4617  002638  102B               	iorwf	(??___xxtofl+2)^0,w,c
  4618  00263A  102C               	iorwf	(??___xxtofl+3)^0,w,c
  4619  00263C  A4D8               	btfss	status,2,c
  4620  00263E  EF23  F013         	goto	u5281
  4621  002642  EF25  F013         	goto	u5280
  4622  002646                     u5281:
  4623  002646  EF08  F013         	goto	l4980
  4624  00264A                     u5280:
  4625  00264A  EF33  F013         	goto	l1393
  4626  00264E                     l4984:
  4627  00264E  2A2E               	incf	___xxtofl@exp^0,f,c
  4628  002650  0E01               	movlw	1
  4629  002652  262F               	addwf	___xxtofl@arg^0,f,c
  4630  002654  0E00               	movlw	0
  4631  002656  2230               	addwfc	(___xxtofl@arg+1)^0,f,c
  4632  002658  2231               	addwfc	(___xxtofl@arg+2)^0,f,c
  4633  00265A  2232               	addwfc	(___xxtofl@arg+3)^0,f,c
  4634  00265C  90D8               	bcf	status,0,c
  4635  00265E  3232               	rrcf	(___xxtofl@arg+3)^0,f,c
  4636  002660  3231               	rrcf	(___xxtofl@arg+2)^0,f,c
  4637  002662  3230               	rrcf	(___xxtofl@arg+1)^0,f,c
  4638  002664  322F               	rrcf	___xxtofl@arg^0,f,c
  4639  002666                     l1393:
  4640  002666  0E00               	movlw	0
  4641  002668  142F               	andwf	___xxtofl@arg^0,w,c
  4642  00266A  6E29               	movwf	??___xxtofl^0,c
  4643  00266C  0E00               	movlw	0
  4644  00266E  1430               	andwf	(___xxtofl@arg+1)^0,w,c
  4645  002670  6E2A               	movwf	(??___xxtofl+1)^0,c
  4646  002672  0E00               	movlw	0
  4647  002674  1431               	andwf	(___xxtofl@arg+2)^0,w,c
  4648  002676  6E2B               	movwf	(??___xxtofl+2)^0,c
  4649  002678  0EFF               	movlw	255
  4650  00267A  1432               	andwf	(___xxtofl@arg+3)^0,w,c
  4651  00267C  6E2C               	movwf	(??___xxtofl+3)^0,c
  4652  00267E  5029               	movf	??___xxtofl^0,w,c
  4653  002680  102A               	iorwf	(??___xxtofl+1)^0,w,c
  4654  002682  102B               	iorwf	(??___xxtofl+2)^0,w,c
  4655  002684  102C               	iorwf	(??___xxtofl+3)^0,w,c
  4656  002686  A4D8               	btfss	status,2,c
  4657  002688  EF48  F013         	goto	u5291
  4658  00268C  EF4A  F013         	goto	u5290
  4659  002690                     u5291:
  4660  002690  EF27  F013         	goto	l4984
  4661  002694                     u5290:
  4662  002694  EF52  F013         	goto	l4992
  4663  002698                     l4990:
  4664  002698  062E               	decf	___xxtofl@exp^0,f,c
  4665  00269A  90D8               	bcf	status,0,c
  4666  00269C  362F               	rlcf	___xxtofl@arg^0,f,c
  4667  00269E  3630               	rlcf	(___xxtofl@arg+1)^0,f,c
  4668  0026A0  3631               	rlcf	(___xxtofl@arg+2)^0,f,c
  4669  0026A2  3632               	rlcf	(___xxtofl@arg+3)^0,f,c
  4670  0026A4                     l4992:
  4671  0026A4  BE31               	btfsc	(___xxtofl@arg+2)^0,7,c
  4672  0026A6  EF57  F013         	goto	u5301
  4673  0026AA  EF59  F013         	goto	u5300
  4674  0026AE                     u5301:
  4675  0026AE  EF61  F013         	goto	l1400
  4676  0026B2                     u5300:
  4677  0026B2  0E02               	movlw	2
  4678  0026B4  602E               	cpfslt	___xxtofl@exp^0,c
  4679  0026B6  EF5F  F013         	goto	u5311
  4680  0026BA  EF61  F013         	goto	u5310
  4681  0026BE                     u5311:
  4682  0026BE  EF4C  F013         	goto	l4990
  4683  0026C2                     u5310:
  4684  0026C2                     l1400:
  4685  0026C2  B02E               	btfsc	___xxtofl@exp^0,0,c
  4686  0026C4  EF66  F013         	goto	u5321
  4687  0026C8  EF68  F013         	goto	u5320
  4688  0026CC                     u5321:
  4689  0026CC  EF69  F013         	goto	l4998
  4690  0026D0                     u5320:
  4691  0026D0  9E31               	bcf	(___xxtofl@arg+2)^0,7,c
  4692  0026D2                     l4998:
  4693  0026D2  90D8               	bcf	status,0,c
  4694  0026D4  322E               	rrcf	___xxtofl@exp^0,f,c
  4695  0026D6  C02E  F029         	movff	___xxtofl@exp,??___xxtofl
  4696  0026DA  6A2A               	clrf	(??___xxtofl+1)^0,c
  4697  0026DC  6A2B               	clrf	(??___xxtofl+2)^0,c
  4698  0026DE  6A2C               	clrf	(??___xxtofl+3)^0,c
  4699  0026E0  C029  F02C         	movff	??___xxtofl,??___xxtofl+3
  4700  0026E4  6A2B               	clrf	(??___xxtofl+2)^0,c
  4701  0026E6  6A2A               	clrf	(??___xxtofl+1)^0,c
  4702  0026E8  6A29               	clrf	??___xxtofl^0,c
  4703  0026EA  5029               	movf	??___xxtofl^0,w,c
  4704  0026EC  122F               	iorwf	___xxtofl@arg^0,f,c
  4705  0026EE  502A               	movf	(??___xxtofl+1)^0,w,c
  4706  0026F0  1230               	iorwf	(___xxtofl@arg+1)^0,f,c
  4707  0026F2  502B               	movf	(??___xxtofl+2)^0,w,c
  4708  0026F4  1231               	iorwf	(___xxtofl@arg+2)^0,f,c
  4709  0026F6  502C               	movf	(??___xxtofl+3)^0,w,c
  4710  0026F8  1232               	iorwf	(___xxtofl@arg+3)^0,f,c
  4711  0026FA  502D               	movf	___xxtofl@sign^0,w,c
  4712  0026FC  B4D8               	btfsc	status,2,c
  4713  0026FE  EF83  F013         	goto	u5331
  4714  002702  EF85  F013         	goto	u5330
  4715  002706                     u5331:
  4716  002706  EF8D  F013         	goto	l5008
  4717  00270A                     u5330:
  4718  00270A  BE28               	btfsc	(___xxtofl@val+3)^0,7,c
  4719  00270C  EF8C  F013         	goto	u5340
  4720  002710  EF8A  F013         	goto	u5341
  4721  002714                     u5341:
  4722  002714  EF8D  F013         	goto	l5008
  4723  002718                     u5340:
  4724  002718  8E32               	bsf	(___xxtofl@arg+3)^0,7,c
  4725  00271A                     l5008:
  4726  00271A  C02F  F025         	movff	___xxtofl@arg,?___xxtofl
  4727  00271E  C030  F026         	movff	___xxtofl@arg+1,?___xxtofl+1
  4728  002722  C031  F027         	movff	___xxtofl@arg+2,?___xxtofl+2
  4729  002726  C032  F028         	movff	___xxtofl@arg+3,?___xxtofl+3
  4730  00272A                     l1389:
  4731  00272A  0012               	return		;funcret
  4732  00272C                     __end_of___xxtofl:
  4733                           	callstack 0
  4734                           
  4735 ;; *************** function ___fltol *****************
  4736 ;; Defined at:
  4737 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;  f1              4   26[COMRAM] unsigned char 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;  exp1            1   35[COMRAM] unsigned char 
  4742 ;;  sign1           1   34[COMRAM] unsigned char 
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  4   26[COMRAM] long 
  4745 ;; Registers used:
  4746 ;;		wreg, status,2, status,0
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4752 ;;      Params:         4       0       0       0       0       0       0       0       0
  4753 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4754 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4755 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4756 ;;Total ram usage:       10 bytes
  4757 ;; Hardware stack levels used: 1
  4758 ;; Hardware stack levels required when called: 4
  4759 ;; This function calls:
  4760 ;;		Nothing
  4761 ;; This function is called by:
  4762 ;;		_ComputeWaterVol
  4763 ;;		_pow
  4764 ;;		_exp
  4765 ;;		_floor
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           	psect	text22
  4770  002C50                     __ptext22:
  4771                           	callstack 0
  4772  002C50                     ___fltol:
  4773                           	callstack 22
  4774  002C50  341D               	rlcf	(___fltol@f1+2)^0,w,c
  4775  002C52  341E               	rlcf	(___fltol@f1+3)^0,w,c
  4776  002C54  6E24               	movwf	___fltol@exp1^0,c
  4777  002C56  5024               	movf	___fltol@exp1^0,w,c
  4778  002C58  A4D8               	btfss	status,2,c
  4779  002C5A  EF31  F016         	goto	u2991
  4780  002C5E  EF33  F016         	goto	u2990
  4781  002C62                     u2991:
  4782  002C62  EF3D  F016         	goto	l3500
  4783  002C66                     u2990:
  4784  002C66                     l3496:
  4785  002C66  0E00               	movlw	0
  4786  002C68  6E1B               	movwf	?___fltol^0,c
  4787  002C6A  0E00               	movlw	0
  4788  002C6C  6E1C               	movwf	(?___fltol+1)^0,c
  4789  002C6E  0E00               	movlw	0
  4790  002C70  6E1D               	movwf	(?___fltol+2)^0,c
  4791  002C72  0E00               	movlw	0
  4792  002C74  6E1E               	movwf	(?___fltol+3)^0,c
  4793  002C76  EFAA  F016         	goto	l1012
  4794  002C7A                     l3500:
  4795  002C7A  C01B  F01F         	movff	___fltol@f1,??___fltol
  4796  002C7E  C01C  F020         	movff	___fltol@f1+1,??___fltol+1
  4797  002C82  C01D  F021         	movff	___fltol@f1+2,??___fltol+2
  4798  002C86  C01E  F022         	movff	___fltol@f1+3,??___fltol+3
  4799  002C8A  0E20               	movlw	32
  4800  002C8C  EF4D  F016         	goto	u3000
  4801  002C90                     u3005:
  4802  002C90  90D8               	bcf	status,0,c
  4803  002C92  3222               	rrcf	(??___fltol+3)^0,f,c
  4804  002C94  3221               	rrcf	(??___fltol+2)^0,f,c
  4805  002C96  3220               	rrcf	(??___fltol+1)^0,f,c
  4806  002C98  321F               	rrcf	??___fltol^0,f,c
  4807  002C9A                     u3000:
  4808  002C9A  2EE8               	decfsz	wreg,f,c
  4809  002C9C  EF48  F016         	goto	u3005
  4810  002CA0  501F               	movf	??___fltol^0,w,c
  4811  002CA2  6E23               	movwf	___fltol@sign1^0,c
  4812  002CA4  8E1D               	bsf	(___fltol@f1+2)^0,7,c
  4813  002CA6  0EFF               	movlw	255
  4814  002CA8  161B               	andwf	___fltol@f1^0,f,c
  4815  002CAA  0EFF               	movlw	255
  4816  002CAC  161C               	andwf	(___fltol@f1+1)^0,f,c
  4817  002CAE  0EFF               	movlw	255
  4818  002CB0  161D               	andwf	(___fltol@f1+2)^0,f,c
  4819  002CB2  0E00               	movlw	0
  4820  002CB4  161E               	andwf	(___fltol@f1+3)^0,f,c
  4821  002CB6  0E96               	movlw	150
  4822  002CB8  5E24               	subwf	___fltol@exp1^0,f,c
  4823  002CBA  BE24               	btfsc	___fltol@exp1^0,7,c
  4824  002CBC  EF64  F016         	goto	u3010
  4825  002CC0  EF62  F016         	goto	u3011
  4826  002CC4                     u3011:
  4827  002CC4  EF7A  F016         	goto	l3520
  4828  002CC8                     u3010:
  4829  002CC8  5024               	movf	___fltol@exp1^0,w,c
  4830  002CCA  0A80               	xorlw	128
  4831  002CCC  0F97               	addlw	151
  4832  002CCE  B0D8               	btfsc	status,0,c
  4833  002CD0  EF6C  F016         	goto	u3021
  4834  002CD4  EF6E  F016         	goto	u3020
  4835  002CD8                     u3021:
  4836  002CD8  EF70  F016         	goto	l3516
  4837  002CDC                     u3020:
  4838  002CDC  EF33  F016         	goto	l3496
  4839  002CE0                     l3516:
  4840  002CE0  90D8               	bcf	status,0,c
  4841  002CE2  321E               	rrcf	(___fltol@f1+3)^0,f,c
  4842  002CE4  321D               	rrcf	(___fltol@f1+2)^0,f,c
  4843  002CE6  321C               	rrcf	(___fltol@f1+1)^0,f,c
  4844  002CE8  321B               	rrcf	___fltol@f1^0,f,c
  4845  002CEA  3E24               	incfsz	___fltol@exp1^0,f,c
  4846  002CEC  EF70  F016         	goto	l3516
  4847  002CF0  EF92  F016         	goto	l3530
  4848  002CF4                     l3520:
  4849  002CF4  0E1F               	movlw	31
  4850  002CF6  6424               	cpfsgt	___fltol@exp1^0,c
  4851  002CF8  EF80  F016         	goto	u3031
  4852  002CFC  EF82  F016         	goto	u3030
  4853  002D00                     u3031:
  4854  002D00  EF8A  F016         	goto	l3528
  4855  002D04                     u3030:
  4856  002D04  EF33  F016         	goto	l3496
  4857  002D08                     l3526:
  4858  002D08  90D8               	bcf	status,0,c
  4859  002D0A  361B               	rlcf	___fltol@f1^0,f,c
  4860  002D0C  361C               	rlcf	(___fltol@f1+1)^0,f,c
  4861  002D0E  361D               	rlcf	(___fltol@f1+2)^0,f,c
  4862  002D10  361E               	rlcf	(___fltol@f1+3)^0,f,c
  4863  002D12  0624               	decf	___fltol@exp1^0,f,c
  4864  002D14                     l3528:
  4865  002D14  5024               	movf	___fltol@exp1^0,w,c
  4866  002D16  A4D8               	btfss	status,2,c
  4867  002D18  EF90  F016         	goto	u3041
  4868  002D1C  EF92  F016         	goto	u3040
  4869  002D20                     u3041:
  4870  002D20  EF84  F016         	goto	l3526
  4871  002D24                     u3040:
  4872  002D24                     l3530:
  4873  002D24  5023               	movf	___fltol@sign1^0,w,c
  4874  002D26  B4D8               	btfsc	status,2,c
  4875  002D28  EF98  F016         	goto	u3051
  4876  002D2C  EF9A  F016         	goto	u3050
  4877  002D30                     u3051:
  4878  002D30  EFA2  F016         	goto	l3534
  4879  002D34                     u3050:
  4880  002D34  1E1E               	comf	(___fltol@f1+3)^0,f,c
  4881  002D36  1E1D               	comf	(___fltol@f1+2)^0,f,c
  4882  002D38  1E1C               	comf	(___fltol@f1+1)^0,f,c
  4883  002D3A  6C1B               	negf	___fltol@f1^0,c
  4884  002D3C  0E00               	movlw	0
  4885  002D3E  221C               	addwfc	(___fltol@f1+1)^0,f,c
  4886  002D40  221D               	addwfc	(___fltol@f1+2)^0,f,c
  4887  002D42  221E               	addwfc	(___fltol@f1+3)^0,f,c
  4888  002D44                     l3534:
  4889  002D44  C01B  F01B         	movff	___fltol@f1,?___fltol
  4890  002D48  C01C  F01C         	movff	___fltol@f1+1,?___fltol+1
  4891  002D4C  C01D  F01D         	movff	___fltol@f1+2,?___fltol+2
  4892  002D50  C01E  F01E         	movff	___fltol@f1+3,?___fltol+3
  4893  002D54                     l1012:
  4894  002D54  0012               	return		;funcret
  4895  002D56                     __end_of___fltol:
  4896                           	callstack 0
  4897                           
  4898 ;; *************** function ___flsub *****************
  4899 ;; Defined at:
  4900 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  4901 ;; Parameters:    Size  Location     Type
  4902 ;;  b               4   21[BANK0 ] long 
  4903 ;;  a               4   25[BANK0 ] long 
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  4   21[BANK0 ] long 
  4908 ;; Registers used:
  4909 ;;		wreg, status,2, status,0, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4915 ;;      Params:         0       8       0       0       0       0       0       0       0
  4916 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4918 ;;      Totals:         0       8       0       0       0       0       0       0       0
  4919 ;;Total ram usage:        8 bytes
  4920 ;; Hardware stack levels used: 1
  4921 ;; Hardware stack levels required when called: 5
  4922 ;; This function calls:
  4923 ;;		___fladd
  4924 ;; This function is called by:
  4925 ;;		_ComputeWaterVol
  4926 ;;		_exp
  4927 ;; This function uses a non-reentrant model
  4928 ;;
  4929                           
  4930                           	psect	text23
  4931  003780                     __ptext23:
  4932                           	callstack 0
  4933  003780                     ___flsub:
  4934                           	callstack 22
  4935  003780  0E00               	movlw	0
  4936  003782  0100               	movlb	0	; () banked
  4937  003784  1B79               	xorwf	___flsub@a& (0+255),f,b
  4938  003786  0E00               	movlw	0
  4939  003788  1B7A               	xorwf	(___flsub@a+1)& (0+255),f,b
  4940  00378A  0E00               	movlw	0
  4941  00378C  1B7B               	xorwf	(___flsub@a+2)& (0+255),f,b
  4942  00378E  0E80               	movlw	128
  4943  003790  1B7C               	xorwf	(___flsub@a+3)& (0+255),f,b
  4944  003792                     
  4945                           ; BSR set to: 0
  4946  003792  C075  F053         	movff	___flsub@b,___fladd@b
  4947  003796  C076  F054         	movff	___flsub@b+1,___fladd@b+1
  4948  00379A  C077  F055         	movff	___flsub@b+2,___fladd@b+2
  4949  00379E  C078  F056         	movff	___flsub@b+3,___fladd@b+3
  4950  0037A2  C079  F057         	movff	___flsub@a,___fladd@a
  4951  0037A6  C07A  F058         	movff	___flsub@a+1,___fladd@a+1
  4952  0037AA  C07B  F059         	movff	___flsub@a+2,___fladd@a+2
  4953  0037AE  C07C  F05A         	movff	___flsub@a+3,___fladd@a+3
  4954  0037B2  EC45  F004         	call	___fladd	;wreg free
  4955  0037B6  C053  F075         	movff	?___fladd,?___flsub
  4956  0037BA  C054  F076         	movff	?___fladd+1,?___flsub+1
  4957  0037BE  C055  F077         	movff	?___fladd+2,?___flsub+2
  4958  0037C2  C056  F078         	movff	?___fladd+3,?___flsub+3
  4959  0037C6  0012               	return		;funcret
  4960  0037C8                     __end_of___flsub:
  4961                           	callstack 0
  4962                           
  4963 ;; *************** function ___fladd *****************
  4964 ;; Defined at:
  4965 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;  b               4   82[COMRAM] long 
  4968 ;;  a               4   86[COMRAM] long 
  4969 ;; Auto vars:     Size  Location     Type
  4970 ;;  grs             1   20[BANK0 ] unsigned char 
  4971 ;;  bexp            1   19[BANK0 ] unsigned char 
  4972 ;;  aexp            1   18[BANK0 ] unsigned char 
  4973 ;;  signs           1   17[BANK0 ] unsigned char 
  4974 ;; Return value:  Size  Location     Type
  4975 ;;                  4   82[COMRAM] unsigned char 
  4976 ;; Registers used:
  4977 ;;		wreg, status,2, status,0
  4978 ;; Tracked objects:
  4979 ;;		On entry : 0/0
  4980 ;;		On exit  : 0/0
  4981 ;;		Unchanged: 0/0
  4982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4983 ;;      Params:         8       0       0       0       0       0       0       0       0
  4984 ;;      Locals:         0       4       0       0       0       0       0       0       0
  4985 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4986 ;;      Totals:         8       8       0       0       0       0       0       0       0
  4987 ;;Total ram usage:       16 bytes
  4988 ;; Hardware stack levels used: 1
  4989 ;; Hardware stack levels required when called: 4
  4990 ;; This function calls:
  4991 ;;		Nothing
  4992 ;; This function is called by:
  4993 ;;		_ComputeWaterVol
  4994 ;;		___flsub
  4995 ;;		_eval_poly
  4996 ;;		_floor
  4997 ;;		_log
  4998 ;; This function uses a non-reentrant model
  4999 ;;
  5000                           
  5001                           	psect	text24
  5002  00088A                     __ptext24:
  5003                           	callstack 0
  5004  00088A                     ___fladd:
  5005                           	callstack 22
  5006  00088A  5056               	movf	(___fladd@b+3)^0,w,c
  5007  00088C  0B80               	andlw	128
  5008  00088E  0100               	movlb	0	; () banked
  5009  000890  6F71               	movwf	___fladd@signs& (0+255),b
  5010  000892  5056               	movf	(___fladd@b+3)^0,w,c
  5011  000894  2456               	addwf	(___fladd@b+3)^0,w,c
  5012  000896  6F73               	movwf	___fladd@bexp& (0+255),b
  5013  000898                     
  5014                           ; BSR set to: 0
  5015  000898  AE55               	btfss	(___fladd@b+2)^0,7,c
  5016  00089A  EF51  F004         	goto	u4671
  5017  00089E  EF53  F004         	goto	u4670
  5018  0008A2                     u4671:
  5019  0008A2  EF54  F004         	goto	l4640
  5020  0008A6                     u4670:
  5021  0008A6                     
  5022                           ; BSR set to: 0
  5023  0008A6  8173               	bsf	___fladd@bexp& (0+255),0,b
  5024  0008A8                     l4640:
  5025                           
  5026                           ; BSR set to: 0
  5027  0008A8  5173               	movf	___fladd@bexp& (0+255),w,b
  5028  0008AA  B4D8               	btfsc	status,2,c
  5029  0008AC  EF5A  F004         	goto	u4681
  5030  0008B0  EF5C  F004         	goto	u4680
  5031  0008B4                     u4681:
  5032  0008B4  EF71  F004         	goto	l4650
  5033  0008B8                     u4680:
  5034  0008B8                     
  5035                           ; BSR set to: 0
  5036  0008B8  2973               	incf	___fladd@bexp& (0+255),w,b
  5037  0008BA  A4D8               	btfss	status,2,c
  5038  0008BC  EF62  F004         	goto	u4691
  5039  0008C0  EF64  F004         	goto	u4690
  5040  0008C4                     u4691:
  5041  0008C4  EF6C  F004         	goto	l4646
  5042  0008C8                     u4690:
  5043  0008C8                     
  5044                           ; BSR set to: 0
  5045  0008C8  0E00               	movlw	0
  5046  0008CA  6E53               	movwf	___fladd@b^0,c
  5047  0008CC  0E00               	movlw	0
  5048  0008CE  6E54               	movwf	(___fladd@b+1)^0,c
  5049  0008D0  0E00               	movlw	0
  5050  0008D2  6E55               	movwf	(___fladd@b+2)^0,c
  5051  0008D4  0E00               	movlw	0
  5052  0008D6  6E56               	movwf	(___fladd@b+3)^0,c
  5053  0008D8                     l4646:
  5054                           
  5055                           ; BSR set to: 0
  5056  0008D8  8E55               	bsf	(___fladd@b+2)^0,7,c
  5057  0008DA                     
  5058                           ; BSR set to: 0
  5059  0008DA  0E00               	movlw	0
  5060  0008DC  6E56               	movwf	(___fladd@b+3)^0,c
  5061  0008DE  EF79  F004         	goto	l4652
  5062  0008E2                     l4650:
  5063                           
  5064                           ; BSR set to: 0
  5065  0008E2  0E00               	movlw	0
  5066  0008E4  6E53               	movwf	___fladd@b^0,c
  5067  0008E6  0E00               	movlw	0
  5068  0008E8  6E54               	movwf	(___fladd@b+1)^0,c
  5069  0008EA  0E00               	movlw	0
  5070  0008EC  6E55               	movwf	(___fladd@b+2)^0,c
  5071  0008EE  0E00               	movlw	0
  5072  0008F0  6E56               	movwf	(___fladd@b+3)^0,c
  5073  0008F2                     l4652:
  5074                           
  5075                           ; BSR set to: 0
  5076  0008F2  505A               	movf	(___fladd@a+3)^0,w,c
  5077  0008F4  0B80               	andlw	128
  5078  0008F6  6F72               	movwf	___fladd@aexp& (0+255),b
  5079  0008F8                     
  5080                           ; BSR set to: 0
  5081  0008F8  5171               	movf	___fladd@signs& (0+255),w,b
  5082  0008FA  1972               	xorwf	___fladd@aexp& (0+255),w,b
  5083  0008FC  B4D8               	btfsc	status,2,c
  5084  0008FE  EF83  F004         	goto	u4701
  5085  000902  EF85  F004         	goto	u4700
  5086  000906                     u4701:
  5087  000906  EF86  F004         	goto	l4658
  5088  00090A                     u4700:
  5089  00090A                     
  5090                           ; BSR set to: 0
  5091  00090A  8D71               	bsf	___fladd@signs& (0+255),6,b
  5092  00090C                     l4658:
  5093                           
  5094                           ; BSR set to: 0
  5095  00090C  505A               	movf	(___fladd@a+3)^0,w,c
  5096  00090E  245A               	addwf	(___fladd@a+3)^0,w,c
  5097  000910  6F72               	movwf	___fladd@aexp& (0+255),b
  5098  000912                     
  5099                           ; BSR set to: 0
  5100  000912  AE59               	btfss	(___fladd@a+2)^0,7,c
  5101  000914  EF8E  F004         	goto	u4711
  5102  000918  EF90  F004         	goto	u4710
  5103  00091C                     u4711:
  5104  00091C  EF91  F004         	goto	l4664
  5105  000920                     u4710:
  5106  000920                     
  5107                           ; BSR set to: 0
  5108  000920  8172               	bsf	___fladd@aexp& (0+255),0,b
  5109  000922                     l4664:
  5110                           
  5111                           ; BSR set to: 0
  5112  000922  5172               	movf	___fladd@aexp& (0+255),w,b
  5113  000924  B4D8               	btfsc	status,2,c
  5114  000926  EF97  F004         	goto	u4721
  5115  00092A  EF99  F004         	goto	u4720
  5116  00092E                     u4721:
  5117  00092E  EFAE  F004         	goto	l4674
  5118  000932                     u4720:
  5119  000932                     
  5120                           ; BSR set to: 0
  5121  000932  2972               	incf	___fladd@aexp& (0+255),w,b
  5122  000934  A4D8               	btfss	status,2,c
  5123  000936  EF9F  F004         	goto	u4731
  5124  00093A  EFA1  F004         	goto	u4730
  5125  00093E                     u4731:
  5126  00093E  EFA9  F004         	goto	l4670
  5127  000942                     u4730:
  5128  000942                     
  5129                           ; BSR set to: 0
  5130  000942  0E00               	movlw	0
  5131  000944  6E57               	movwf	___fladd@a^0,c
  5132  000946  0E00               	movlw	0
  5133  000948  6E58               	movwf	(___fladd@a+1)^0,c
  5134  00094A  0E00               	movlw	0
  5135  00094C  6E59               	movwf	(___fladd@a+2)^0,c
  5136  00094E  0E00               	movlw	0
  5137  000950  6E5A               	movwf	(___fladd@a+3)^0,c
  5138  000952                     l4670:
  5139                           
  5140                           ; BSR set to: 0
  5141  000952  8E59               	bsf	(___fladd@a+2)^0,7,c
  5142  000954                     
  5143                           ; BSR set to: 0
  5144  000954  0E00               	movlw	0
  5145  000956  6E5A               	movwf	(___fladd@a+3)^0,c
  5146  000958  EFB6  F004         	goto	l4676
  5147  00095C                     l4674:
  5148                           
  5149                           ; BSR set to: 0
  5150  00095C  0E00               	movlw	0
  5151  00095E  6E57               	movwf	___fladd@a^0,c
  5152  000960  0E00               	movlw	0
  5153  000962  6E58               	movwf	(___fladd@a+1)^0,c
  5154  000964  0E00               	movlw	0
  5155  000966  6E59               	movwf	(___fladd@a+2)^0,c
  5156  000968  0E00               	movlw	0
  5157  00096A  6E5A               	movwf	(___fladd@a+3)^0,c
  5158  00096C                     l4676:
  5159                           
  5160                           ; BSR set to: 0
  5161  00096C  5173               	movf	___fladd@bexp& (0+255),w,b
  5162  00096E  5D72               	subwf	___fladd@aexp& (0+255),w,b
  5163  000970  B0D8               	btfsc	status,0,c
  5164  000972  EFBD  F004         	goto	u4741
  5165  000976  EFBF  F004         	goto	u4740
  5166  00097A                     u4741:
  5167  00097A  EFE6  F004         	goto	l4712
  5168  00097E                     u4740:
  5169  00097E                     
  5170                           ; BSR set to: 0
  5171  00097E  AD71               	btfss	___fladd@signs& (0+255),6,b
  5172  000980  EFC4  F004         	goto	u4751
  5173  000984  EFC6  F004         	goto	u4750
  5174  000988                     u4751:
  5175  000988  EFC8  F004         	goto	l4682
  5176  00098C                     u4750:
  5177  00098C                     
  5178                           ; BSR set to: 0
  5179  00098C  0E80               	movlw	128
  5180  00098E  1B71               	xorwf	___fladd@signs& (0+255),f,b
  5181  000990                     l4682:
  5182                           
  5183                           ; BSR set to: 0
  5184  000990  C073  F074         	movff	___fladd@bexp,___fladd@grs
  5185  000994                     
  5186                           ; BSR set to: 0
  5187  000994  C072  F073         	movff	___fladd@aexp,___fladd@bexp
  5188  000998                     
  5189                           ; BSR set to: 0
  5190  000998  C074  F072         	movff	___fladd@grs,___fladd@aexp
  5191  00099C                     
  5192                           ; BSR set to: 0
  5193  00099C  C053  F074         	movff	___fladd@b,___fladd@grs
  5194  0009A0                     
  5195                           ; BSR set to: 0
  5196  0009A0  C057  F053         	movff	___fladd@a,___fladd@b
  5197  0009A4                     
  5198                           ; BSR set to: 0
  5199  0009A4  C074  F057         	movff	___fladd@grs,___fladd@a
  5200  0009A8                     
  5201                           ; BSR set to: 0
  5202  0009A8  C054  F074         	movff	___fladd@b+1,___fladd@grs
  5203  0009AC                     
  5204                           ; BSR set to: 0
  5205  0009AC  C058  F054         	movff	___fladd@a+1,___fladd@b+1
  5206  0009B0                     
  5207                           ; BSR set to: 0
  5208  0009B0  C074  F058         	movff	___fladd@grs,___fladd@a+1
  5209  0009B4                     
  5210                           ; BSR set to: 0
  5211  0009B4  C055  F074         	movff	___fladd@b+2,___fladd@grs
  5212  0009B8                     
  5213                           ; BSR set to: 0
  5214  0009B8  C059  F055         	movff	___fladd@a+2,___fladd@b+2
  5215  0009BC                     
  5216                           ; BSR set to: 0
  5217  0009BC  C074  F059         	movff	___fladd@grs,___fladd@a+2
  5218  0009C0                     
  5219                           ; BSR set to: 0
  5220  0009C0  C056  F074         	movff	___fladd@b+3,___fladd@grs
  5221  0009C4                     
  5222                           ; BSR set to: 0
  5223  0009C4  C05A  F056         	movff	___fladd@a+3,___fladd@b+3
  5224  0009C8                     
  5225                           ; BSR set to: 0
  5226  0009C8  C074  F05A         	movff	___fladd@grs,___fladd@a+3
  5227  0009CC                     l4712:
  5228                           
  5229                           ; BSR set to: 0
  5230  0009CC  0E00               	movlw	0
  5231  0009CE  6F74               	movwf	___fladd@grs& (0+255),b
  5232  0009D0                     
  5233                           ; BSR set to: 0
  5234  0009D0  5173               	movf	___fladd@bexp& (0+255),w,b
  5235  0009D2  C072  F06D         	movff	___fladd@aexp,??___fladd
  5236  0009D6  6B6E               	clrf	(??___fladd+1)& (0+255),b
  5237  0009D8  5F6D               	subwf	??___fladd& (0+255),f,b
  5238  0009DA  0E00               	movlw	0
  5239  0009DC  5B6E               	subwfb	(??___fladd+1)& (0+255),f,b
  5240  0009DE  BF6E               	btfsc	(??___fladd+1)& (0+255),7,b
  5241  0009E0  EFFB  F004         	goto	u4761
  5242  0009E4  516E               	movf	(??___fladd+1)& (0+255),w,b
  5243  0009E6  E109               	bnz	u4760
  5244  0009E8  0E1A               	movlw	26
  5245  0009EA  5D6D               	subwf	??___fladd& (0+255),w,b
  5246  0009EC  A0D8               	btfss	status,0,c
  5247  0009EE  EFFB  F004         	goto	u4761
  5248  0009F2  EFFD  F004         	goto	u4760
  5249  0009F6                     u4761:
  5250  0009F6  EF34  F005         	goto	l1240
  5251  0009FA                     u4760:
  5252  0009FA                     
  5253                           ; BSR set to: 0
  5254  0009FA  5053               	movf	___fladd@b^0,w,c
  5255  0009FC  1054               	iorwf	(___fladd@b+1)^0,w,c
  5256  0009FE  1055               	iorwf	(___fladd@b+2)^0,w,c
  5257  000A00  1056               	iorwf	(___fladd@b+3)^0,w,c
  5258  000A02  A4D8               	btfss	status,2,c
  5259  000A04  EF06  F005         	goto	u4771
  5260  000A08  EF09  F005         	goto	u4770
  5261  000A0C                     u4771:
  5262  000A0C  0E01               	movlw	1
  5263  000A0E  EF0A  F005         	goto	u4780
  5264  000A12                     u4770:
  5265  000A12  0E00               	movlw	0
  5266  000A14                     u4780:
  5267  000A14  6F74               	movwf	___fladd@grs& (0+255),b
  5268  000A16                     
  5269                           ; BSR set to: 0
  5270  000A16  0E00               	movlw	0
  5271  000A18  6E53               	movwf	___fladd@b^0,c
  5272  000A1A  0E00               	movlw	0
  5273  000A1C  6E54               	movwf	(___fladd@b+1)^0,c
  5274  000A1E  0E00               	movlw	0
  5275  000A20  6E55               	movwf	(___fladd@b+2)^0,c
  5276  000A22  0E00               	movlw	0
  5277  000A24  6E56               	movwf	(___fladd@b+3)^0,c
  5278  000A26                     
  5279                           ; BSR set to: 0
  5280  000A26  C072  F073         	movff	___fladd@aexp,___fladd@bexp
  5281  000A2A  EF3D  F005         	goto	l1239
  5282  000A2E                     l1241:
  5283                           
  5284                           ; BSR set to: 0
  5285  000A2E  A174               	btfss	___fladd@grs& (0+255),0,b
  5286  000A30  EF1C  F005         	goto	u4791
  5287  000A34  EF1E  F005         	goto	u4790
  5288  000A38                     u4791:
  5289  000A38  EF24  F005         	goto	l4724
  5290  000A3C                     u4790:
  5291  000A3C                     
  5292                           ; BSR set to: 0
  5293  000A3C  90D8               	bcf	status,0,c
  5294  000A3E  3174               	rrcf	___fladd@grs& (0+255),w,b
  5295  000A40  0901               	iorlw	1
  5296  000A42  6F74               	movwf	___fladd@grs& (0+255),b
  5297  000A44  EF26  F005         	goto	l4726
  5298  000A48                     l4724:
  5299                           
  5300                           ; BSR set to: 0
  5301  000A48  90D8               	bcf	status,0,c
  5302  000A4A  3374               	rrcf	___fladd@grs& (0+255),f,b
  5303  000A4C                     l4726:
  5304                           
  5305                           ; BSR set to: 0
  5306  000A4C  A053               	btfss	___fladd@b^0,0,c
  5307  000A4E  EF2B  F005         	goto	u4801
  5308  000A52  EF2D  F005         	goto	u4800
  5309  000A56                     u4801:
  5310  000A56  EF2E  F005         	goto	l4730
  5311  000A5A                     u4800:
  5312  000A5A                     
  5313                           ; BSR set to: 0
  5314  000A5A  8F74               	bsf	___fladd@grs& (0+255),7,b
  5315  000A5C                     l4730:
  5316                           
  5317                           ; BSR set to: 0
  5318  000A5C  3456               	rlcf	(___fladd@b+3)^0,w,c
  5319  000A5E  3256               	rrcf	(___fladd@b+3)^0,f,c
  5320  000A60  3255               	rrcf	(___fladd@b+2)^0,f,c
  5321  000A62  3254               	rrcf	(___fladd@b+1)^0,f,c
  5322  000A64  3253               	rrcf	___fladd@b^0,f,c
  5323  000A66                     
  5324                           ; BSR set to: 0
  5325  000A66  2B73               	incf	___fladd@bexp& (0+255),f,b
  5326  000A68                     l1240:
  5327                           
  5328                           ; BSR set to: 0
  5329  000A68  5172               	movf	___fladd@aexp& (0+255),w,b
  5330  000A6A  5D73               	subwf	___fladd@bexp& (0+255),w,b
  5331  000A6C  A0D8               	btfss	status,0,c
  5332  000A6E  EF3B  F005         	goto	u4811
  5333  000A72  EF3D  F005         	goto	u4810
  5334  000A76                     u4811:
  5335  000A76  EF17  F005         	goto	l1241
  5336  000A7A                     u4810:
  5337  000A7A                     l1239:
  5338                           
  5339                           ; BSR set to: 0
  5340  000A7A  BD71               	btfsc	___fladd@signs& (0+255),6,b
  5341  000A7C  EF42  F005         	goto	u4821
  5342  000A80  EF44  F005         	goto	u4820
  5343  000A84                     u4821:
  5344  000A84  EF84  F005         	goto	l4758
  5345  000A88                     u4820:
  5346  000A88                     
  5347                           ; BSR set to: 0
  5348  000A88  5173               	movf	___fladd@bexp& (0+255),w,b
  5349  000A8A  A4D8               	btfss	status,2,c
  5350  000A8C  EF4A  F005         	goto	u4831
  5351  000A90  EF4C  F005         	goto	u4830
  5352  000A94                     u4831:
  5353  000A94  EF56  F005         	goto	l4740
  5354  000A98                     u4830:
  5355  000A98                     
  5356                           ; BSR set to: 0
  5357  000A98  0E00               	movlw	0
  5358  000A9A  6E53               	movwf	?___fladd^0,c
  5359  000A9C  0E00               	movlw	0
  5360  000A9E  6E54               	movwf	(?___fladd+1)^0,c
  5361  000AA0  0E00               	movlw	0
  5362  000AA2  6E55               	movwf	(?___fladd+2)^0,c
  5363  000AA4  0E00               	movlw	0
  5364  000AA6  6E56               	movwf	(?___fladd+3)^0,c
  5365  000AA8  EFA5  F006         	goto	l1248
  5366  000AAC                     l4740:
  5367                           
  5368                           ; BSR set to: 0
  5369  000AAC  5057               	movf	___fladd@a^0,w,c
  5370  000AAE  2653               	addwf	___fladd@b^0,f,c
  5371  000AB0  5058               	movf	(___fladd@a+1)^0,w,c
  5372  000AB2  2254               	addwfc	(___fladd@b+1)^0,f,c
  5373  000AB4  5059               	movf	(___fladd@a+2)^0,w,c
  5374  000AB6  2255               	addwfc	(___fladd@b+2)^0,f,c
  5375  000AB8  505A               	movf	(___fladd@a+3)^0,w,c
  5376  000ABA  2256               	addwfc	(___fladd@b+3)^0,f,c
  5377  000ABC                     
  5378                           ; BSR set to: 0
  5379  000ABC  A056               	btfss	(___fladd@b+3)^0,0,c
  5380  000ABE  EF63  F005         	goto	u4841
  5381  000AC2  EF65  F005         	goto	u4840
  5382  000AC6                     u4841:
  5383  000AC6  EF11  F006         	goto	l4794
  5384  000ACA                     u4840:
  5385  000ACA                     
  5386                           ; BSR set to: 0
  5387  000ACA  A174               	btfss	___fladd@grs& (0+255),0,b
  5388  000ACC  EF6A  F005         	goto	u4851
  5389  000AD0  EF6C  F005         	goto	u4850
  5390  000AD4                     u4851:
  5391  000AD4  EF72  F005         	goto	l4748
  5392  000AD8                     u4850:
  5393  000AD8                     
  5394                           ; BSR set to: 0
  5395  000AD8  90D8               	bcf	status,0,c
  5396  000ADA  3174               	rrcf	___fladd@grs& (0+255),w,b
  5397  000ADC  0901               	iorlw	1
  5398  000ADE  6F74               	movwf	___fladd@grs& (0+255),b
  5399  000AE0  EF74  F005         	goto	l4750
  5400  000AE4                     l4748:
  5401                           
  5402                           ; BSR set to: 0
  5403  000AE4  90D8               	bcf	status,0,c
  5404  000AE6  3374               	rrcf	___fladd@grs& (0+255),f,b
  5405  000AE8                     l4750:
  5406                           
  5407                           ; BSR set to: 0
  5408  000AE8  A053               	btfss	___fladd@b^0,0,c
  5409  000AEA  EF79  F005         	goto	u4861
  5410  000AEE  EF7B  F005         	goto	u4860
  5411  000AF2                     u4861:
  5412  000AF2  EF7C  F005         	goto	l4754
  5413  000AF6                     u4860:
  5414  000AF6                     
  5415                           ; BSR set to: 0
  5416  000AF6  8F74               	bsf	___fladd@grs& (0+255),7,b
  5417  000AF8                     l4754:
  5418                           
  5419                           ; BSR set to: 0
  5420  000AF8  3456               	rlcf	(___fladd@b+3)^0,w,c
  5421  000AFA  3256               	rrcf	(___fladd@b+3)^0,f,c
  5422  000AFC  3255               	rrcf	(___fladd@b+2)^0,f,c
  5423  000AFE  3254               	rrcf	(___fladd@b+1)^0,f,c
  5424  000B00  3253               	rrcf	___fladd@b^0,f,c
  5425  000B02                     
  5426                           ; BSR set to: 0
  5427  000B02  2B73               	incf	___fladd@bexp& (0+255),f,b
  5428  000B04  EF11  F006         	goto	l4794
  5429  000B08                     l4758:
  5430                           
  5431                           ; BSR set to: 0
  5432  000B08  5057               	movf	___fladd@a^0,w,c
  5433  000B0A  5C53               	subwf	___fladd@b^0,w,c
  5434  000B0C  5058               	movf	(___fladd@a+1)^0,w,c
  5435  000B0E  5854               	subwfb	(___fladd@b+1)^0,w,c
  5436  000B10  5059               	movf	(___fladd@a+2)^0,w,c
  5437  000B12  5855               	subwfb	(___fladd@b+2)^0,w,c
  5438  000B14  5056               	movf	(___fladd@b+3)^0,w,c
  5439  000B16  0A80               	xorlw	128
  5440  000B18  6F6D               	movwf	??___fladd& (0+255),b
  5441  000B1A  505A               	movf	(___fladd@a+3)^0,w,c
  5442  000B1C  0A80               	xorlw	128
  5443  000B1E  596D               	subwfb	??___fladd& (0+255),w,b
  5444  000B20  B0D8               	btfsc	status,0,c
  5445  000B22  EF95  F005         	goto	u4871
  5446  000B26  EF97  F005         	goto	u4870
  5447  000B2A                     u4871:
  5448  000B2A  EFC2  F005         	goto	l4768
  5449  000B2E                     u4870:
  5450  000B2E                     
  5451                           ; BSR set to: 0
  5452  000B2E  5053               	movf	___fladd@b^0,w,c
  5453  000B30  5C57               	subwf	___fladd@a^0,w,c
  5454  000B32  6F6D               	movwf	??___fladd& (0+255),b
  5455  000B34  5054               	movf	(___fladd@b+1)^0,w,c
  5456  000B36  5858               	subwfb	(___fladd@a+1)^0,w,c
  5457  000B38  6F6E               	movwf	(??___fladd+1)& (0+255),b
  5458  000B3A  5055               	movf	(___fladd@b+2)^0,w,c
  5459  000B3C  5859               	subwfb	(___fladd@a+2)^0,w,c
  5460  000B3E  6F6F               	movwf	(??___fladd+2)& (0+255),b
  5461  000B40  5056               	movf	(___fladd@b+3)^0,w,c
  5462  000B42  585A               	subwfb	(___fladd@a+3)^0,w,c
  5463  000B44  6F70               	movwf	(??___fladd+3)& (0+255),b
  5464  000B46  0EFF               	movlw	255
  5465  000B48  256D               	addwf	??___fladd& (0+255),w,b
  5466  000B4A  6E53               	movwf	___fladd@b^0,c
  5467  000B4C  0EFF               	movlw	255
  5468  000B4E  216E               	addwfc	(??___fladd+1)& (0+255),w,b
  5469  000B50  6E54               	movwf	(___fladd@b+1)^0,c
  5470  000B52  0EFF               	movlw	255
  5471  000B54  216F               	addwfc	(??___fladd+2)& (0+255),w,b
  5472  000B56  6E55               	movwf	(___fladd@b+2)^0,c
  5473  000B58  0EFF               	movlw	255
  5474  000B5A  2170               	addwfc	(??___fladd+3)& (0+255),w,b
  5475  000B5C  6E56               	movwf	(___fladd@b+3)^0,c
  5476  000B5E  0E80               	movlw	128
  5477  000B60  1B71               	xorwf	___fladd@signs& (0+255),f,b
  5478  000B62                     
  5479                           ; BSR set to: 0
  5480  000B62  6D74               	negf	___fladd@grs& (0+255),b
  5481  000B64                     
  5482                           ; BSR set to: 0
  5483  000B64  5174               	movf	___fladd@grs& (0+255),w,b
  5484  000B66  A4D8               	btfss	status,2,c
  5485  000B68  EFB8  F005         	goto	u4881
  5486  000B6C  EFBA  F005         	goto	u4880
  5487  000B70                     u4881:
  5488  000B70  EFCA  F005         	goto	l1256
  5489  000B74                     u4880:
  5490  000B74                     
  5491                           ; BSR set to: 0
  5492  000B74  0E01               	movlw	1
  5493  000B76  2653               	addwf	___fladd@b^0,f,c
  5494  000B78  0E00               	movlw	0
  5495  000B7A  2254               	addwfc	(___fladd@b+1)^0,f,c
  5496  000B7C  2255               	addwfc	(___fladd@b+2)^0,f,c
  5497  000B7E  2256               	addwfc	(___fladd@b+3)^0,f,c
  5498  000B80  EFCA  F005         	goto	l1256
  5499  000B84                     l4768:
  5500                           
  5501                           ; BSR set to: 0
  5502  000B84  5057               	movf	___fladd@a^0,w,c
  5503  000B86  5E53               	subwf	___fladd@b^0,f,c
  5504  000B88  5058               	movf	(___fladd@a+1)^0,w,c
  5505  000B8A  5A54               	subwfb	(___fladd@b+1)^0,f,c
  5506  000B8C  5059               	movf	(___fladd@a+2)^0,w,c
  5507  000B8E  5A55               	subwfb	(___fladd@b+2)^0,f,c
  5508  000B90  505A               	movf	(___fladd@a+3)^0,w,c
  5509  000B92  5A56               	subwfb	(___fladd@b+3)^0,f,c
  5510  000B94                     l1256:
  5511                           
  5512                           ; BSR set to: 0
  5513  000B94  5053               	movf	___fladd@b^0,w,c
  5514  000B96  1054               	iorwf	(___fladd@b+1)^0,w,c
  5515  000B98  1055               	iorwf	(___fladd@b+2)^0,w,c
  5516  000B9A  1056               	iorwf	(___fladd@b+3)^0,w,c
  5517  000B9C  A4D8               	btfss	status,2,c
  5518  000B9E  EFD3  F005         	goto	u4891
  5519  000BA2  EFD5  F005         	goto	u4890
  5520  000BA6                     u4891:
  5521  000BA6  EF0A  F006         	goto	l4792
  5522  000BAA                     u4890:
  5523  000BAA                     
  5524                           ; BSR set to: 0
  5525  000BAA  5174               	movf	___fladd@grs& (0+255),w,b
  5526  000BAC  A4D8               	btfss	status,2,c
  5527  000BAE  EFDB  F005         	goto	u4901
  5528  000BB2  EFDD  F005         	goto	u4900
  5529  000BB6                     u4901:
  5530  000BB6  EF0A  F006         	goto	l4792
  5531  000BBA                     u4900:
  5532  000BBA                     
  5533                           ; BSR set to: 0
  5534  000BBA  0E00               	movlw	0
  5535  000BBC  6E53               	movwf	?___fladd^0,c
  5536  000BBE  0E00               	movlw	0
  5537  000BC0  6E54               	movwf	(?___fladd+1)^0,c
  5538  000BC2  0E00               	movlw	0
  5539  000BC4  6E55               	movwf	(?___fladd+2)^0,c
  5540  000BC6  0E00               	movlw	0
  5541  000BC8  6E56               	movwf	(?___fladd+3)^0,c
  5542  000BCA  EFA5  F006         	goto	l1248
  5543  000BCE                     l4776:
  5544                           
  5545                           ; BSR set to: 0
  5546  000BCE  90D8               	bcf	status,0,c
  5547  000BD0  3653               	rlcf	___fladd@b^0,f,c
  5548  000BD2  3654               	rlcf	(___fladd@b+1)^0,f,c
  5549  000BD4  3655               	rlcf	(___fladd@b+2)^0,f,c
  5550  000BD6  3656               	rlcf	(___fladd@b+3)^0,f,c
  5551  000BD8                     
  5552                           ; BSR set to: 0
  5553  000BD8  AF74               	btfss	___fladd@grs& (0+255),7,b
  5554  000BDA  EFF1  F005         	goto	u4911
  5555  000BDE  EFF3  F005         	goto	u4910
  5556  000BE2                     u4911:
  5557  000BE2  EFF4  F005         	goto	l4782
  5558  000BE6                     u4910:
  5559  000BE6                     
  5560                           ; BSR set to: 0
  5561  000BE6  8053               	bsf	___fladd@b^0,0,c
  5562  000BE8                     l4782:
  5563                           
  5564                           ; BSR set to: 0
  5565  000BE8  A174               	btfss	___fladd@grs& (0+255),0,b
  5566  000BEA  EFF9  F005         	goto	u4921
  5567  000BEE  EFFB  F005         	goto	u4920
  5568  000BF2                     u4921:
  5569  000BF2  EFFF  F005         	goto	l4786
  5570  000BF6                     u4920:
  5571  000BF6                     
  5572                           ; BSR set to: 0
  5573  000BF6  80D8               	bsf	status,0,c
  5574  000BF8  3774               	rlcf	___fladd@grs& (0+255),f,b
  5575  000BFA  EF01  F006         	goto	l4788
  5576  000BFE                     l4786:
  5577                           
  5578                           ; BSR set to: 0
  5579  000BFE  90D8               	bcf	status,0,c
  5580  000C00  3774               	rlcf	___fladd@grs& (0+255),f,b
  5581  000C02                     l4788:
  5582                           
  5583                           ; BSR set to: 0
  5584  000C02  5173               	movf	___fladd@bexp& (0+255),w,b
  5585  000C04  B4D8               	btfsc	status,2,c
  5586  000C06  EF07  F006         	goto	u4931
  5587  000C0A  EF09  F006         	goto	u4930
  5588  000C0E                     u4931:
  5589  000C0E  EF0A  F006         	goto	l4792
  5590  000C12                     u4930:
  5591  000C12                     
  5592                           ; BSR set to: 0
  5593  000C12  0773               	decf	___fladd@bexp& (0+255),f,b
  5594  000C14                     l4792:
  5595                           
  5596                           ; BSR set to: 0
  5597  000C14  AE55               	btfss	(___fladd@b+2)^0,7,c
  5598  000C16  EF0F  F006         	goto	u4941
  5599  000C1A  EF11  F006         	goto	u4940
  5600  000C1E                     u4941:
  5601  000C1E  EFE7  F005         	goto	l4776
  5602  000C22                     u4940:
  5603  000C22                     l4794:
  5604                           
  5605                           ; BSR set to: 0
  5606  000C22  0E00               	movlw	0
  5607  000C24  6F72               	movwf	___fladd@aexp& (0+255),b
  5608  000C26                     
  5609                           ; BSR set to: 0
  5610  000C26  AF74               	btfss	___fladd@grs& (0+255),7,b
  5611  000C28  EF18  F006         	goto	u4951
  5612  000C2C  EF1A  F006         	goto	u4950
  5613  000C30                     u4951:
  5614  000C30  EF32  F006         	goto	l1265
  5615  000C34                     u4950:
  5616  000C34                     
  5617                           ; BSR set to: 0
  5618  000C34  C074  F06D         	movff	___fladd@grs,??___fladd
  5619  000C38  0E7F               	movlw	127
  5620  000C3A  176D               	andwf	??___fladd& (0+255),f,b
  5621  000C3C  B4D8               	btfsc	status,2,c
  5622  000C3E  EF23  F006         	goto	u4961
  5623  000C42  EF25  F006         	goto	u4960
  5624  000C46                     u4961:
  5625  000C46  EF29  F006         	goto	l1266
  5626  000C4A                     u4960:
  5627  000C4A                     l4800:
  5628                           
  5629                           ; BSR set to: 0
  5630  000C4A  0E01               	movlw	1
  5631  000C4C  6F72               	movwf	___fladd@aexp& (0+255),b
  5632  000C4E  EF32  F006         	goto	l1265
  5633  000C52                     l1266:
  5634                           
  5635                           ; BSR set to: 0
  5636  000C52  A053               	btfss	___fladd@b^0,0,c
  5637  000C54  EF2E  F006         	goto	u4971
  5638  000C58  EF30  F006         	goto	u4970
  5639  000C5C                     u4971:
  5640  000C5C  EF32  F006         	goto	l1265
  5641  000C60                     u4970:
  5642  000C60  EF25  F006         	goto	l4800
  5643  000C64                     l1265:
  5644                           
  5645                           ; BSR set to: 0
  5646  000C64  5172               	movf	___fladd@aexp& (0+255),w,b
  5647  000C66  B4D8               	btfsc	status,2,c
  5648  000C68  EF38  F006         	goto	u4981
  5649  000C6C  EF3A  F006         	goto	u4980
  5650  000C70                     u4981:
  5651  000C70  EF65  F006         	goto	l4812
  5652  000C74                     u4980:
  5653  000C74                     
  5654                           ; BSR set to: 0
  5655  000C74  0E01               	movlw	1
  5656  000C76  2653               	addwf	___fladd@b^0,f,c
  5657  000C78  0E00               	movlw	0
  5658  000C7A  2254               	addwfc	(___fladd@b+1)^0,f,c
  5659  000C7C  2255               	addwfc	(___fladd@b+2)^0,f,c
  5660  000C7E  2256               	addwfc	(___fladd@b+3)^0,f,c
  5661  000C80                     
  5662                           ; BSR set to: 0
  5663  000C80  A056               	btfss	(___fladd@b+3)^0,0,c
  5664  000C82  EF45  F006         	goto	u4991
  5665  000C86  EF47  F006         	goto	u4990
  5666  000C8A                     u4991:
  5667  000C8A  EF65  F006         	goto	l4812
  5668  000C8E                     u4990:
  5669  000C8E                     
  5670                           ; BSR set to: 0
  5671  000C8E  C053  F06D         	movff	___fladd@b,??___fladd
  5672  000C92  C054  F06E         	movff	___fladd@b+1,??___fladd+1
  5673  000C96  C055  F06F         	movff	___fladd@b+2,??___fladd+2
  5674  000C9A  C056  F070         	movff	___fladd@b+3,??___fladd+3
  5675  000C9E  3570               	rlcf	(??___fladd+3)& (0+255),w,b
  5676  000CA0  3370               	rrcf	(??___fladd+3)& (0+255),f,b
  5677  000CA2  336F               	rrcf	(??___fladd+2)& (0+255),f,b
  5678  000CA4  336E               	rrcf	(??___fladd+1)& (0+255),f,b
  5679  000CA6  336D               	rrcf	??___fladd& (0+255),f,b
  5680  000CA8  C06D  F053         	movff	??___fladd,___fladd@b
  5681  000CAC  C06E  F054         	movff	??___fladd+1,___fladd@b+1
  5682  000CB0  C06F  F055         	movff	??___fladd+2,___fladd@b+2
  5683  000CB4  C070  F056         	movff	??___fladd+3,___fladd@b+3
  5684  000CB8  2973               	incf	___fladd@bexp& (0+255),w,b
  5685  000CBA  B4D8               	btfsc	status,2,c
  5686  000CBC  EF62  F006         	goto	u5001
  5687  000CC0  EF64  F006         	goto	u5000
  5688  000CC4                     u5001:
  5689  000CC4  EF65  F006         	goto	l4812
  5690  000CC8                     u5000:
  5691  000CC8                     
  5692                           ; BSR set to: 0
  5693  000CC8  2B73               	incf	___fladd@bexp& (0+255),f,b
  5694  000CCA                     l4812:
  5695                           
  5696                           ; BSR set to: 0
  5697  000CCA  2973               	incf	___fladd@bexp& (0+255),w,b
  5698  000CCC  B4D8               	btfsc	status,2,c
  5699  000CCE  EF6B  F006         	goto	u5011
  5700  000CD2  EF6D  F006         	goto	u5010
  5701  000CD6                     u5011:
  5702  000CD6  EF75  F006         	goto	l4816
  5703  000CDA                     u5010:
  5704  000CDA                     
  5705                           ; BSR set to: 0
  5706  000CDA  5173               	movf	___fladd@bexp& (0+255),w,b
  5707  000CDC  A4D8               	btfss	status,2,c
  5708  000CDE  EF73  F006         	goto	u5021
  5709  000CE2  EF75  F006         	goto	u5020
  5710  000CE6                     u5021:
  5711  000CE6  EF87  F006         	goto	l4820
  5712  000CEA                     u5020:
  5713  000CEA                     l4816:
  5714                           
  5715                           ; BSR set to: 0
  5716  000CEA  0E00               	movlw	0
  5717  000CEC  6E53               	movwf	___fladd@b^0,c
  5718  000CEE  0E00               	movlw	0
  5719  000CF0  6E54               	movwf	(___fladd@b+1)^0,c
  5720  000CF2  0E00               	movlw	0
  5721  000CF4  6E55               	movwf	(___fladd@b+2)^0,c
  5722  000CF6  0E00               	movlw	0
  5723  000CF8  6E56               	movwf	(___fladd@b+3)^0,c
  5724  000CFA  5173               	movf	___fladd@bexp& (0+255),w,b
  5725  000CFC  A4D8               	btfss	status,2,c
  5726  000CFE  EF83  F006         	goto	u5031
  5727  000D02  EF85  F006         	goto	u5030
  5728  000D06                     u5031:
  5729  000D06  EF87  F006         	goto	l4820
  5730  000D0A                     u5030:
  5731  000D0A                     
  5732                           ; BSR set to: 0
  5733  000D0A  0E00               	movlw	0
  5734  000D0C  6F71               	movwf	___fladd@signs& (0+255),b
  5735  000D0E                     l4820:
  5736                           
  5737                           ; BSR set to: 0
  5738  000D0E  A173               	btfss	___fladd@bexp& (0+255),0,b
  5739  000D10  EF8C  F006         	goto	u5041
  5740  000D14  EF8E  F006         	goto	u5040
  5741  000D18                     u5041:
  5742  000D18  EF91  F006         	goto	l4824
  5743  000D1C                     u5040:
  5744  000D1C                     
  5745                           ; BSR set to: 0
  5746  000D1C  8E55               	bsf	(___fladd@b+2)^0,7,c
  5747  000D1E  EF92  F006         	goto	l4826
  5748  000D22                     l4824:
  5749                           
  5750                           ; BSR set to: 0
  5751  000D22  9E55               	bcf	(___fladd@b+2)^0,7,c
  5752  000D24                     l4826:
  5753                           
  5754                           ; BSR set to: 0
  5755  000D24  90D8               	bcf	status,0,c
  5756  000D26  3173               	rrcf	___fladd@bexp& (0+255),w,b
  5757  000D28  6E56               	movwf	(___fladd@b+3)^0,c
  5758  000D2A                     
  5759                           ; BSR set to: 0
  5760  000D2A  AF71               	btfss	___fladd@signs& (0+255),7,b
  5761  000D2C  EF9A  F006         	goto	u5051
  5762  000D30  EF9C  F006         	goto	u5050
  5763  000D34                     u5051:
  5764  000D34  EF9D  F006         	goto	l4832
  5765  000D38                     u5050:
  5766  000D38                     
  5767                           ; BSR set to: 0
  5768  000D38  8E56               	bsf	(___fladd@b+3)^0,7,c
  5769  000D3A                     l4832:
  5770                           
  5771                           ; BSR set to: 0
  5772  000D3A  C053  F053         	movff	___fladd@b,?___fladd
  5773  000D3E  C054  F054         	movff	___fladd@b+1,?___fladd+1
  5774  000D42  C055  F055         	movff	___fladd@b+2,?___fladd+2
  5775  000D46  C056  F056         	movff	___fladd@b+3,?___fladd+3
  5776  000D4A                     l1248:
  5777                           
  5778                           ; BSR set to: 0
  5779  000D4A  0012               	return		;funcret
  5780  000D4C                     __end_of___fladd:
  5781                           	callstack 0
  5782                           
  5783 ;; *************** function ___flmul *****************
  5784 ;; Defined at:
  5785 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  5786 ;; Parameters:    Size  Location     Type
  5787 ;;  b               4   70[COMRAM] unsigned char 
  5788 ;;  a               4   74[COMRAM] unsigned char 
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;  prod            4    7[BANK0 ] struct .
  5791 ;;  grs             4    2[BANK0 ] unsigned long 
  5792 ;;  temp            2   11[BANK0 ] struct .
  5793 ;;  bexp            1    6[BANK0 ] unsigned char 
  5794 ;;  aexp            1    1[BANK0 ] unsigned char 
  5795 ;;  sign            1    0[BANK0 ] unsigned char 
  5796 ;; Return value:  Size  Location     Type
  5797 ;;                  4   70[COMRAM] unsigned char 
  5798 ;; Registers used:
  5799 ;;		wreg, status,2, status,0, prodl, prodh
  5800 ;; Tracked objects:
  5801 ;;		On entry : 0/0
  5802 ;;		On exit  : 0/0
  5803 ;;		Unchanged: 0/0
  5804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5805 ;;      Params:         8       0       0       0       0       0       0       0       0
  5806 ;;      Locals:         0      13       0       0       0       0       0       0       0
  5807 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5808 ;;      Totals:        12      13       0       0       0       0       0       0       0
  5809 ;;Total ram usage:       25 bytes
  5810 ;; Hardware stack levels used: 1
  5811 ;; Hardware stack levels required when called: 4
  5812 ;; This function calls:
  5813 ;;		Nothing
  5814 ;; This function is called by:
  5815 ;;		_ComputeWaterVol
  5816 ;;		_InitTankVariables
  5817 ;;		_pow
  5818 ;;		_exp
  5819 ;;		_eval_poly
  5820 ;;		_log
  5821 ;; This function uses a non-reentrant model
  5822 ;;
  5823                           
  5824                           	psect	text25
  5825  001204                     __ptext25:
  5826                           	callstack 0
  5827  001204                     ___flmul:
  5828                           	callstack 22
  5829  001204  504A               	movf	(___flmul@b+3)^0,w,c
  5830  001206  0B80               	andlw	128
  5831  001208  0100               	movlb	0	; () banked
  5832  00120A  6F60               	movwf	___flmul@sign& (0+255),b
  5833  00120C  504A               	movf	(___flmul@b+3)^0,w,c
  5834  00120E  244A               	addwf	(___flmul@b+3)^0,w,c
  5835  001210  6F66               	movwf	___flmul@bexp& (0+255),b
  5836  001212                     
  5837                           ; BSR set to: 0
  5838  001212  AE49               	btfss	(___flmul@b+2)^0,7,c
  5839  001214  EF0E  F009         	goto	u5061
  5840  001218  EF10  F009         	goto	u5060
  5841  00121C                     u5061:
  5842  00121C  EF11  F009         	goto	l4842
  5843  001220                     u5060:
  5844  001220                     
  5845                           ; BSR set to: 0
  5846  001220  8166               	bsf	___flmul@bexp& (0+255),0,b
  5847  001222                     l4842:
  5848                           
  5849                           ; BSR set to: 0
  5850  001222  5166               	movf	___flmul@bexp& (0+255),w,b
  5851  001224  B4D8               	btfsc	status,2,c
  5852  001226  EF17  F009         	goto	u5071
  5853  00122A  EF19  F009         	goto	u5070
  5854  00122E                     u5071:
  5855  00122E  EF2C  F009         	goto	l4850
  5856  001232                     u5070:
  5857  001232                     
  5858                           ; BSR set to: 0
  5859  001232  2966               	incf	___flmul@bexp& (0+255),w,b
  5860  001234  A4D8               	btfss	status,2,c
  5861  001236  EF1F  F009         	goto	u5081
  5862  00123A  EF21  F009         	goto	u5080
  5863  00123E                     u5081:
  5864  00123E  EF29  F009         	goto	l4848
  5865  001242                     u5080:
  5866  001242                     
  5867                           ; BSR set to: 0
  5868  001242  0E00               	movlw	0
  5869  001244  6E47               	movwf	___flmul@b^0,c
  5870  001246  0E00               	movlw	0
  5871  001248  6E48               	movwf	(___flmul@b+1)^0,c
  5872  00124A  0E00               	movlw	0
  5873  00124C  6E49               	movwf	(___flmul@b+2)^0,c
  5874  00124E  0E00               	movlw	0
  5875  001250  6E4A               	movwf	(___flmul@b+3)^0,c
  5876  001252                     l4848:
  5877                           
  5878                           ; BSR set to: 0
  5879  001252  8E49               	bsf	(___flmul@b+2)^0,7,c
  5880  001254  EF34  F009         	goto	l4852
  5881  001258                     l4850:
  5882                           
  5883                           ; BSR set to: 0
  5884  001258  0E00               	movlw	0
  5885  00125A  6E47               	movwf	___flmul@b^0,c
  5886  00125C  0E00               	movlw	0
  5887  00125E  6E48               	movwf	(___flmul@b+1)^0,c
  5888  001260  0E00               	movlw	0
  5889  001262  6E49               	movwf	(___flmul@b+2)^0,c
  5890  001264  0E00               	movlw	0
  5891  001266  6E4A               	movwf	(___flmul@b+3)^0,c
  5892  001268                     l4852:
  5893                           
  5894                           ; BSR set to: 0
  5895  001268  504E               	movf	(___flmul@a+3)^0,w,c
  5896  00126A  0B80               	andlw	128
  5897  00126C  1B60               	xorwf	___flmul@sign& (0+255),f,b
  5898  00126E                     
  5899                           ; BSR set to: 0
  5900  00126E  504E               	movf	(___flmul@a+3)^0,w,c
  5901  001270  244E               	addwf	(___flmul@a+3)^0,w,c
  5902  001272  6F61               	movwf	___flmul@aexp& (0+255),b
  5903  001274                     
  5904                           ; BSR set to: 0
  5905  001274  AE4D               	btfss	(___flmul@a+2)^0,7,c
  5906  001276  EF3F  F009         	goto	u5091
  5907  00127A  EF41  F009         	goto	u5090
  5908  00127E                     u5091:
  5909  00127E  EF42  F009         	goto	l4860
  5910  001282                     u5090:
  5911  001282                     
  5912                           ; BSR set to: 0
  5913  001282  8161               	bsf	___flmul@aexp& (0+255),0,b
  5914  001284                     l4860:
  5915                           
  5916                           ; BSR set to: 0
  5917  001284  5161               	movf	___flmul@aexp& (0+255),w,b
  5918  001286  B4D8               	btfsc	status,2,c
  5919  001288  EF48  F009         	goto	u5101
  5920  00128C  EF4A  F009         	goto	u5100
  5921  001290                     u5101:
  5922  001290  EF5D  F009         	goto	l4868
  5923  001294                     u5100:
  5924  001294                     
  5925                           ; BSR set to: 0
  5926  001294  2961               	incf	___flmul@aexp& (0+255),w,b
  5927  001296  A4D8               	btfss	status,2,c
  5928  001298  EF50  F009         	goto	u5111
  5929  00129C  EF52  F009         	goto	u5110
  5930  0012A0                     u5111:
  5931  0012A0  EF5A  F009         	goto	l4866
  5932  0012A4                     u5110:
  5933  0012A4                     
  5934                           ; BSR set to: 0
  5935  0012A4  0E00               	movlw	0
  5936  0012A6  6E4B               	movwf	___flmul@a^0,c
  5937  0012A8  0E00               	movlw	0
  5938  0012AA  6E4C               	movwf	(___flmul@a+1)^0,c
  5939  0012AC  0E00               	movlw	0
  5940  0012AE  6E4D               	movwf	(___flmul@a+2)^0,c
  5941  0012B0  0E00               	movlw	0
  5942  0012B2  6E4E               	movwf	(___flmul@a+3)^0,c
  5943  0012B4                     l4866:
  5944                           
  5945                           ; BSR set to: 0
  5946  0012B4  8E4D               	bsf	(___flmul@a+2)^0,7,c
  5947  0012B6  EF65  F009         	goto	l1325
  5948  0012BA                     l4868:
  5949                           
  5950                           ; BSR set to: 0
  5951  0012BA  0E00               	movlw	0
  5952  0012BC  6E4B               	movwf	___flmul@a^0,c
  5953  0012BE  0E00               	movlw	0
  5954  0012C0  6E4C               	movwf	(___flmul@a+1)^0,c
  5955  0012C2  0E00               	movlw	0
  5956  0012C4  6E4D               	movwf	(___flmul@a+2)^0,c
  5957  0012C6  0E00               	movlw	0
  5958  0012C8  6E4E               	movwf	(___flmul@a+3)^0,c
  5959  0012CA                     l1325:
  5960                           
  5961                           ; BSR set to: 0
  5962  0012CA  5161               	movf	___flmul@aexp& (0+255),w,b
  5963  0012CC  B4D8               	btfsc	status,2,c
  5964  0012CE  EF6B  F009         	goto	u5121
  5965  0012D2  EF6D  F009         	goto	u5120
  5966  0012D6                     u5121:
  5967  0012D6  EF75  F009         	goto	l4872
  5968  0012DA                     u5120:
  5969  0012DA                     
  5970                           ; BSR set to: 0
  5971  0012DA  5166               	movf	___flmul@bexp& (0+255),w,b
  5972  0012DC  A4D8               	btfss	status,2,c
  5973  0012DE  EF73  F009         	goto	u5131
  5974  0012E2  EF75  F009         	goto	u5130
  5975  0012E6                     u5131:
  5976  0012E6  EF7F  F009         	goto	l4876
  5977  0012EA                     u5130:
  5978  0012EA                     l4872:
  5979                           
  5980                           ; BSR set to: 0
  5981  0012EA  0E00               	movlw	0
  5982  0012EC  6E47               	movwf	?___flmul^0,c
  5983  0012EE  0E00               	movlw	0
  5984  0012F0  6E48               	movwf	(?___flmul+1)^0,c
  5985  0012F2  0E00               	movlw	0
  5986  0012F4  6E49               	movwf	(?___flmul+2)^0,c
  5987  0012F6  0E00               	movlw	0
  5988  0012F8  6E4A               	movwf	(?___flmul+3)^0,c
  5989  0012FA  EF17  F00B         	goto	l1329
  5990  0012FE                     l4876:
  5991                           
  5992                           ; BSR set to: 0
  5993  0012FE  504D               	movf	(___flmul@a+2)^0,w,c
  5994  001300  0247               	mulwf	___flmul@b^0,c
  5995  001302  CFF3 F06B          	movff	prodl,___flmul@temp
  5996  001306  CFF4 F06C          	movff	prodh,___flmul@temp+1
  5997  00130A                     
  5998                           ; BSR set to: 0
  5999  00130A  516B               	movf	___flmul@temp& (0+255),w,b
  6000  00130C  6F62               	movwf	___flmul@grs& (0+255),b
  6001  00130E  6B63               	clrf	(___flmul@grs+1)& (0+255),b
  6002  001310  6B64               	clrf	(___flmul@grs+2)& (0+255),b
  6003  001312  6B65               	clrf	(___flmul@grs+3)& (0+255),b
  6004  001314                     
  6005                           ; BSR set to: 0
  6006  001314  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6007  001316  6F67               	movwf	___flmul@prod& (0+255),b
  6008  001318  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  6009  00131A  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  6010  00131C  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  6011  00131E  504C               	movf	(___flmul@a+1)^0,w,c
  6012  001320  0248               	mulwf	(___flmul@b+1)^0,c
  6013  001322  CFF3 F06B          	movff	prodl,___flmul@temp
  6014  001326  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6015  00132A                     
  6016                           ; BSR set to: 0
  6017  00132A  516B               	movf	___flmul@temp& (0+255),w,b
  6018  00132C  2762               	addwf	___flmul@grs& (0+255),f,b
  6019  00132E  0E00               	movlw	0
  6020  001330  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6021  001332  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6022  001334  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6023  001336                     
  6024                           ; BSR set to: 0
  6025  001336  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6026  001338  2767               	addwf	___flmul@prod& (0+255),f,b
  6027  00133A  0E00               	movlw	0
  6028  00133C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6029  00133E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6030  001340  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6031  001342  504B               	movf	___flmul@a^0,w,c
  6032  001344  0249               	mulwf	(___flmul@b+2)^0,c
  6033  001346  CFF3 F06B          	movff	prodl,___flmul@temp
  6034  00134A  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6035  00134E                     
  6036                           ; BSR set to: 0
  6037  00134E  516B               	movf	___flmul@temp& (0+255),w,b
  6038  001350  2762               	addwf	___flmul@grs& (0+255),f,b
  6039  001352  0E00               	movlw	0
  6040  001354  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6041  001356  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6042  001358  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6043  00135A                     
  6044                           ; BSR set to: 0
  6045  00135A  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6046  00135C  2767               	addwf	___flmul@prod& (0+255),f,b
  6047  00135E  0E00               	movlw	0
  6048  001360  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6049  001362  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6050  001364  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6051  001366                     
  6052                           ; BSR set to: 0
  6053  001366  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  6054  00136A  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  6055  00136E  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  6056  001372  6B62               	clrf	___flmul@grs& (0+255),b
  6057  001374                     
  6058                           ; BSR set to: 0
  6059  001374  504B               	movf	___flmul@a^0,w,c
  6060  001376  0248               	mulwf	(___flmul@b+1)^0,c
  6061  001378  CFF3 F06B          	movff	prodl,___flmul@temp
  6062  00137C  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6063  001380                     
  6064                           ; BSR set to: 0
  6065  001380  516B               	movf	___flmul@temp& (0+255),w,b
  6066  001382  2762               	addwf	___flmul@grs& (0+255),f,b
  6067  001384  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6068  001386  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6069  001388  0E00               	movlw	0
  6070  00138A  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6071  00138C  0E00               	movlw	0
  6072  00138E  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6073  001390                     
  6074                           ; BSR set to: 0
  6075  001390  504C               	movf	(___flmul@a+1)^0,w,c
  6076  001392  0247               	mulwf	___flmul@b^0,c
  6077  001394  CFF3 F06B          	movff	prodl,___flmul@temp
  6078  001398  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6079  00139C                     
  6080                           ; BSR set to: 0
  6081  00139C  516B               	movf	___flmul@temp& (0+255),w,b
  6082  00139E  2762               	addwf	___flmul@grs& (0+255),f,b
  6083  0013A0  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6084  0013A2  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6085  0013A4  0E00               	movlw	0
  6086  0013A6  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6087  0013A8  0E00               	movlw	0
  6088  0013AA  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6089  0013AC                     
  6090                           ; BSR set to: 0
  6091  0013AC  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  6092  0013B0  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  6093  0013B4  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  6094  0013B8  6B62               	clrf	___flmul@grs& (0+255),b
  6095  0013BA  504B               	movf	___flmul@a^0,w,c
  6096  0013BC  0247               	mulwf	___flmul@b^0,c
  6097  0013BE  CFF3 F06B          	movff	prodl,___flmul@temp
  6098  0013C2  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6099  0013C6                     
  6100                           ; BSR set to: 0
  6101  0013C6  516B               	movf	___flmul@temp& (0+255),w,b
  6102  0013C8  2762               	addwf	___flmul@grs& (0+255),f,b
  6103  0013CA  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6104  0013CC  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  6105  0013CE  0E00               	movlw	0
  6106  0013D0  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  6107  0013D2  0E00               	movlw	0
  6108  0013D4  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  6109  0013D6                     
  6110                           ; BSR set to: 0
  6111  0013D6  504D               	movf	(___flmul@a+2)^0,w,c
  6112  0013D8  0248               	mulwf	(___flmul@b+1)^0,c
  6113  0013DA  CFF3 F06B          	movff	prodl,___flmul@temp
  6114  0013DE  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6115  0013E2  516B               	movf	___flmul@temp& (0+255),w,b
  6116  0013E4  2767               	addwf	___flmul@prod& (0+255),f,b
  6117  0013E6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6118  0013E8  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6119  0013EA  0E00               	movlw	0
  6120  0013EC  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6121  0013EE  0E00               	movlw	0
  6122  0013F0  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6123  0013F2                     
  6124                           ; BSR set to: 0
  6125  0013F2  504C               	movf	(___flmul@a+1)^0,w,c
  6126  0013F4  0249               	mulwf	(___flmul@b+2)^0,c
  6127  0013F6  CFF3 F06B          	movff	prodl,___flmul@temp
  6128  0013FA  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6129  0013FE                     
  6130                           ; BSR set to: 0
  6131  0013FE  516B               	movf	___flmul@temp& (0+255),w,b
  6132  001400  2767               	addwf	___flmul@prod& (0+255),f,b
  6133  001402  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6134  001404  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6135  001406  0E00               	movlw	0
  6136  001408  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6137  00140A  0E00               	movlw	0
  6138  00140C  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6139  00140E  504D               	movf	(___flmul@a+2)^0,w,c
  6140  001410  0249               	mulwf	(___flmul@b+2)^0,c
  6141  001412  CFF3 F06B          	movff	prodl,___flmul@temp
  6142  001416  CFF4 F06C          	movff	prodh,___flmul@temp+1
  6143  00141A                     
  6144                           ; BSR set to: 0
  6145  00141A  516B               	movf	___flmul@temp& (0+255),w,b
  6146  00141C  6E4F               	movwf	??___flmul^0,c
  6147  00141E  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6148  001420  6E50               	movwf	(??___flmul+1)^0,c
  6149  001422  6A51               	clrf	(??___flmul+2)^0,c
  6150  001424  6A52               	clrf	(??___flmul+3)^0,c
  6151  001426  C051  F052         	movff	??___flmul+2,??___flmul+3
  6152  00142A  C050  F051         	movff	??___flmul+1,??___flmul+2
  6153  00142E  C04F  F050         	movff	??___flmul,??___flmul+1
  6154  001432  6A4F               	clrf	??___flmul^0,c
  6155  001434  504F               	movf	??___flmul^0,w,c
  6156  001436  2767               	addwf	___flmul@prod& (0+255),f,b
  6157  001438  5050               	movf	(??___flmul+1)^0,w,c
  6158  00143A  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6159  00143C  5051               	movf	(??___flmul+2)^0,w,c
  6160  00143E  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6161  001440  5052               	movf	(??___flmul+3)^0,w,c
  6162  001442  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6163  001444                     
  6164                           ; BSR set to: 0
  6165  001444  C062  F04F         	movff	___flmul@grs,??___flmul
  6166  001448  C063  F050         	movff	___flmul@grs+1,??___flmul+1
  6167  00144C  C064  F051         	movff	___flmul@grs+2,??___flmul+2
  6168  001450  C065  F052         	movff	___flmul@grs+3,??___flmul+3
  6169  001454  0E19               	movlw	25
  6170  001456  EF32  F00A         	goto	u5140
  6171  00145A                     u5145:
  6172  00145A  90D8               	bcf	status,0,c
  6173  00145C  3252               	rrcf	(??___flmul+3)^0,f,c
  6174  00145E  3251               	rrcf	(??___flmul+2)^0,f,c
  6175  001460  3250               	rrcf	(??___flmul+1)^0,f,c
  6176  001462  324F               	rrcf	??___flmul^0,f,c
  6177  001464                     u5140:
  6178  001464  2EE8               	decfsz	wreg,f,c
  6179  001466  EF2D  F00A         	goto	u5145
  6180  00146A  504F               	movf	??___flmul^0,w,c
  6181  00146C  2767               	addwf	___flmul@prod& (0+255),f,b
  6182  00146E  5050               	movf	(??___flmul+1)^0,w,c
  6183  001470  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6184  001472  5051               	movf	(??___flmul+2)^0,w,c
  6185  001474  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6186  001476  5052               	movf	(??___flmul+3)^0,w,c
  6187  001478  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6188  00147A                     
  6189                           ; BSR set to: 0
  6190  00147A  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  6191  00147E  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  6192  001482  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  6193  001486  6B62               	clrf	___flmul@grs& (0+255),b
  6194  001488                     
  6195                           ; BSR set to: 0
  6196  001488  5161               	movf	___flmul@aexp& (0+255),w,b
  6197  00148A  C066  F04F         	movff	___flmul@bexp,??___flmul
  6198  00148E  6A50               	clrf	(??___flmul+1)^0,c
  6199  001490  264F               	addwf	??___flmul^0,f,c
  6200  001492  0E00               	movlw	0
  6201  001494  2250               	addwfc	(??___flmul+1)^0,f,c
  6202  001496  0E82               	movlw	130
  6203  001498  244F               	addwf	??___flmul^0,w,c
  6204  00149A  6F6B               	movwf	___flmul@temp& (0+255),b
  6205  00149C  0EFF               	movlw	255
  6206  00149E  2050               	addwfc	(??___flmul+1)^0,w,c
  6207  0014A0  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  6208  0014A2  EF68  F00A         	goto	l4924
  6209  0014A6                     l4918:
  6210                           
  6211                           ; BSR set to: 0
  6212  0014A6  90D8               	bcf	status,0,c
  6213  0014A8  3767               	rlcf	___flmul@prod& (0+255),f,b
  6214  0014AA  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  6215  0014AC  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  6216  0014AE  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  6217  0014B0                     
  6218                           ; BSR set to: 0
  6219  0014B0  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  6220  0014B2  EF5D  F00A         	goto	u5151
  6221  0014B6  EF5F  F00A         	goto	u5150
  6222  0014BA                     u5151:
  6223  0014BA  EF60  F00A         	goto	l1332
  6224  0014BE                     u5150:
  6225  0014BE                     
  6226                           ; BSR set to: 0
  6227  0014BE  8167               	bsf	___flmul@prod& (0+255),0,b
  6228  0014C0                     l1332:
  6229                           
  6230                           ; BSR set to: 0
  6231  0014C0  90D8               	bcf	status,0,c
  6232  0014C2  3762               	rlcf	___flmul@grs& (0+255),f,b
  6233  0014C4  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
  6234  0014C6  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
  6235  0014C8  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
  6236  0014CA  076B               	decf	___flmul@temp& (0+255),f,b
  6237  0014CC  A0D8               	btfss	status,0,c
  6238  0014CE  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  6239  0014D0                     l4924:
  6240                           
  6241                           ; BSR set to: 0
  6242  0014D0  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  6243  0014D2  EF6D  F00A         	goto	u5161
  6244  0014D6  EF6F  F00A         	goto	u5160
  6245  0014DA                     u5161:
  6246  0014DA  EF53  F00A         	goto	l4918
  6247  0014DE                     u5160:
  6248  0014DE                     
  6249                           ; BSR set to: 0
  6250  0014DE  0E00               	movlw	0
  6251  0014E0  6F61               	movwf	___flmul@aexp& (0+255),b
  6252  0014E2                     
  6253                           ; BSR set to: 0
  6254  0014E2  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  6255  0014E4  EF76  F00A         	goto	u5171
  6256  0014E8  EF78  F00A         	goto	u5170
  6257  0014EC                     u5171:
  6258  0014EC  EF9C  F00A         	goto	l1334
  6259  0014F0                     u5170:
  6260  0014F0                     
  6261                           ; BSR set to: 0
  6262  0014F0  0EFF               	movlw	255
  6263  0014F2  1562               	andwf	___flmul@grs& (0+255),w,b
  6264  0014F4  6E4F               	movwf	??___flmul^0,c
  6265  0014F6  0EFF               	movlw	255
  6266  0014F8  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
  6267  0014FA  6E50               	movwf	(??___flmul+1)^0,c
  6268  0014FC  0EFF               	movlw	255
  6269  0014FE  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
  6270  001500  6E51               	movwf	(??___flmul+2)^0,c
  6271  001502  0E7F               	movlw	127
  6272  001504  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
  6273  001506  6E52               	movwf	(??___flmul+3)^0,c
  6274  001508  504F               	movf	??___flmul^0,w,c
  6275  00150A  1050               	iorwf	(??___flmul+1)^0,w,c
  6276  00150C  1051               	iorwf	(??___flmul+2)^0,w,c
  6277  00150E  1052               	iorwf	(??___flmul+3)^0,w,c
  6278  001510  B4D8               	btfsc	status,2,c
  6279  001512  EF8D  F00A         	goto	u5181
  6280  001516  EF8F  F00A         	goto	u5180
  6281  00151A                     u5181:
  6282  00151A  EF93  F00A         	goto	l1335
  6283  00151E                     u5180:
  6284  00151E                     l4932:
  6285                           
  6286                           ; BSR set to: 0
  6287  00151E  0E01               	movlw	1
  6288  001520  6F61               	movwf	___flmul@aexp& (0+255),b
  6289  001522  EF9C  F00A         	goto	l1334
  6290  001526                     l1335:
  6291                           
  6292                           ; BSR set to: 0
  6293  001526  A167               	btfss	___flmul@prod& (0+255),0,b
  6294  001528  EF98  F00A         	goto	u5191
  6295  00152C  EF9A  F00A         	goto	u5190
  6296  001530                     u5191:
  6297  001530  EF9C  F00A         	goto	l1334
  6298  001534                     u5190:
  6299  001534  EF8F  F00A         	goto	l4932
  6300  001538                     l1334:
  6301                           
  6302                           ; BSR set to: 0
  6303  001538  5161               	movf	___flmul@aexp& (0+255),w,b
  6304  00153A  B4D8               	btfsc	status,2,c
  6305  00153C  EFA2  F00A         	goto	u5201
  6306  001540  EFA4  F00A         	goto	u5200
  6307  001544                     u5201:
  6308  001544  EFC8  F00A         	goto	l4944
  6309  001548                     u5200:
  6310  001548                     
  6311                           ; BSR set to: 0
  6312  001548  0E01               	movlw	1
  6313  00154A  2767               	addwf	___flmul@prod& (0+255),f,b
  6314  00154C  0E00               	movlw	0
  6315  00154E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  6316  001550  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  6317  001552  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  6318  001554                     
  6319                           ; BSR set to: 0
  6320  001554  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  6321  001556  EFAF  F00A         	goto	u5211
  6322  00155A  EFB1  F00A         	goto	u5210
  6323  00155E                     u5211:
  6324  00155E  EFC8  F00A         	goto	l4944
  6325  001562                     u5210:
  6326  001562                     
  6327                           ; BSR set to: 0
  6328  001562  C067  F04F         	movff	___flmul@prod,??___flmul
  6329  001566  C068  F050         	movff	___flmul@prod+1,??___flmul+1
  6330  00156A  C069  F051         	movff	___flmul@prod+2,??___flmul+2
  6331  00156E  C06A  F052         	movff	___flmul@prod+3,??___flmul+3
  6332  001572  3452               	rlcf	(??___flmul+3)^0,w,c
  6333  001574  3252               	rrcf	(??___flmul+3)^0,f,c
  6334  001576  3251               	rrcf	(??___flmul+2)^0,f,c
  6335  001578  3250               	rrcf	(??___flmul+1)^0,f,c
  6336  00157A  324F               	rrcf	??___flmul^0,f,c
  6337  00157C  C04F  F067         	movff	??___flmul,___flmul@prod
  6338  001580  C050  F068         	movff	??___flmul+1,___flmul@prod+1
  6339  001584  C051  F069         	movff	??___flmul+2,___flmul@prod+2
  6340  001588  C052  F06A         	movff	??___flmul+3,___flmul@prod+3
  6341  00158C                     
  6342                           ; BSR set to: 0
  6343  00158C  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  6344  00158E  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  6345  001590                     l4944:
  6346                           
  6347                           ; BSR set to: 0
  6348  001590  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6349  001592  EFD3  F00A         	goto	u5221
  6350  001596  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6351  001598  E108               	bnz	u5220
  6352  00159A  296B               	incf	___flmul@temp& (0+255),w,b
  6353  00159C  A0D8               	btfss	status,0,c
  6354  00159E  EFD3  F00A         	goto	u5221
  6355  0015A2  EFD5  F00A         	goto	u5220
  6356  0015A6                     u5221:
  6357  0015A6  EFDF  F00A         	goto	l4948
  6358  0015AA                     u5220:
  6359  0015AA                     
  6360                           ; BSR set to: 0
  6361  0015AA  0E00               	movlw	0
  6362  0015AC  6F67               	movwf	___flmul@prod& (0+255),b
  6363  0015AE  0E00               	movlw	0
  6364  0015B0  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  6365  0015B2  0E80               	movlw	128
  6366  0015B4  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  6367  0015B6  0E7F               	movlw	127
  6368  0015B8  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  6369  0015BA  EF0D  F00B         	goto	l4960
  6370  0015BE                     l4948:
  6371                           
  6372                           ; BSR set to: 0
  6373  0015BE  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  6374  0015C0  EFEC  F00A         	goto	u5230
  6375  0015C4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  6376  0015C6  E106               	bnz	u5231
  6377  0015C8  056B               	decf	___flmul@temp& (0+255),w,b
  6378  0015CA  B0D8               	btfsc	status,0,c
  6379  0015CC  EFEA  F00A         	goto	u5231
  6380  0015D0  EFEC  F00A         	goto	u5230
  6381  0015D4                     u5231:
  6382  0015D4  EFF8  F00A         	goto	l1342
  6383  0015D8                     u5230:
  6384  0015D8                     
  6385                           ; BSR set to: 0
  6386  0015D8  0E00               	movlw	0
  6387  0015DA  6F67               	movwf	___flmul@prod& (0+255),b
  6388  0015DC  0E00               	movlw	0
  6389  0015DE  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  6390  0015E0  0E00               	movlw	0
  6391  0015E2  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  6392  0015E4  0E00               	movlw	0
  6393  0015E6  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  6394  0015E8  0E00               	movlw	0
  6395  0015EA  6F60               	movwf	___flmul@sign& (0+255),b
  6396  0015EC  EF0D  F00B         	goto	l4960
  6397  0015F0                     l1342:
  6398                           
  6399                           ; BSR set to: 0
  6400  0015F0  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  6401  0015F4                     
  6402                           ; BSR set to: 0
  6403  0015F4  0EFF               	movlw	255
  6404  0015F6  1767               	andwf	___flmul@prod& (0+255),f,b
  6405  0015F8  0EFF               	movlw	255
  6406  0015FA  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  6407  0015FC  0E7F               	movlw	127
  6408  0015FE  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  6409  001600  0E00               	movlw	0
  6410  001602  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  6411  001604                     
  6412                           ; BSR set to: 0
  6413  001604  A166               	btfss	___flmul@bexp& (0+255),0,b
  6414  001606  EF07  F00B         	goto	u5241
  6415  00160A  EF09  F00B         	goto	u5240
  6416  00160E                     u5241:
  6417  00160E  EF0A  F00B         	goto	l4958
  6418  001612                     u5240:
  6419  001612                     
  6420                           ; BSR set to: 0
  6421  001612  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  6422  001614                     l4958:
  6423                           
  6424                           ; BSR set to: 0
  6425  001614  90D8               	bcf	status,0,c
  6426  001616  3166               	rrcf	___flmul@bexp& (0+255),w,b
  6427  001618  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  6428  00161A                     l4960:
  6429                           
  6430                           ; BSR set to: 0
  6431  00161A  5160               	movf	___flmul@sign& (0+255),w,b
  6432  00161C  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  6433  00161E                     
  6434                           ; BSR set to: 0
  6435  00161E  C067  F047         	movff	___flmul@prod,?___flmul
  6436  001622  C068  F048         	movff	___flmul@prod+1,?___flmul+1
  6437  001626  C069  F049         	movff	___flmul@prod+2,?___flmul+2
  6438  00162A  C06A  F04A         	movff	___flmul@prod+3,?___flmul+3
  6439  00162E                     l1329:
  6440                           
  6441                           ; BSR set to: 0
  6442  00162E  0012               	return		;funcret
  6443  001630                     __end_of___flmul:
  6444                           	callstack 0
  6445                           
  6446 ;; *************** function ___fldiv *****************
  6447 ;; Defined at:
  6448 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  b               4    1[COMRAM] unsigned char 
  6451 ;;  a               4    5[COMRAM] unsigned char 
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;  grs             4   20[COMRAM] unsigned long 
  6454 ;;  rem             4   13[COMRAM] unsigned long 
  6455 ;;  new_exp         2   18[COMRAM] int 
  6456 ;;  aexp            1   25[COMRAM] unsigned char 
  6457 ;;  bexp            1   24[COMRAM] unsigned char 
  6458 ;;  sign            1   17[COMRAM] unsigned char 
  6459 ;; Return value:  Size  Location     Type
  6460 ;;                  4    1[COMRAM] unsigned char 
  6461 ;; Registers used:
  6462 ;;		wreg, status,2, status,0
  6463 ;; Tracked objects:
  6464 ;;		On entry : 0/0
  6465 ;;		On exit  : 0/0
  6466 ;;		Unchanged: 0/0
  6467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6468 ;;      Params:         8       0       0       0       0       0       0       0       0
  6469 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6470 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6471 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6472 ;;Total ram usage:       25 bytes
  6473 ;; Hardware stack levels used: 1
  6474 ;; Hardware stack levels required when called: 4
  6475 ;; This function calls:
  6476 ;;		Nothing
  6477 ;; This function is called by:
  6478 ;;		_ComputeWaterVol
  6479 ;;		_exp
  6480 ;; This function uses a non-reentrant model
  6481 ;;
  6482                           
  6483                           	psect	text26
  6484  001630                     __ptext26:
  6485                           	callstack 0
  6486  001630                     ___fldiv:
  6487                           	callstack 23
  6488  001630  5005               	movf	(___fldiv@b+3)^0,w,c
  6489  001632  0B80               	andlw	128
  6490  001634  6E12               	movwf	___fldiv@sign^0,c
  6491  001636  5005               	movf	(___fldiv@b+3)^0,w,c
  6492  001638  2405               	addwf	(___fldiv@b+3)^0,w,c
  6493  00163A  6E19               	movwf	___fldiv@bexp^0,c
  6494  00163C  AE04               	btfss	(___fldiv@b+2)^0,7,c
  6495  00163E  EF23  F00B         	goto	u3181
  6496  001642  EF25  F00B         	goto	u3180
  6497  001646                     u3181:
  6498  001646  EF26  F00B         	goto	l3610
  6499  00164A                     u3180:
  6500  00164A  8019               	bsf	___fldiv@bexp^0,0,c
  6501  00164C                     l3610:
  6502  00164C  5019               	movf	___fldiv@bexp^0,w,c
  6503  00164E  B4D8               	btfsc	status,2,c
  6504  001650  EF2C  F00B         	goto	u3191
  6505  001654  EF2E  F00B         	goto	u3190
  6506  001658                     u3191:
  6507  001658  EF43  F00B         	goto	l3620
  6508  00165C                     u3190:
  6509  00165C  2819               	incf	___fldiv@bexp^0,w,c
  6510  00165E  A4D8               	btfss	status,2,c
  6511  001660  EF34  F00B         	goto	u3201
  6512  001664  EF36  F00B         	goto	u3200
  6513  001668                     u3201:
  6514  001668  EF3E  F00B         	goto	l3616
  6515  00166C                     u3200:
  6516  00166C  0E00               	movlw	0
  6517  00166E  6E02               	movwf	___fldiv@b^0,c
  6518  001670  0E00               	movlw	0
  6519  001672  6E03               	movwf	(___fldiv@b+1)^0,c
  6520  001674  0E00               	movlw	0
  6521  001676  6E04               	movwf	(___fldiv@b+2)^0,c
  6522  001678  0E00               	movlw	0
  6523  00167A  6E05               	movwf	(___fldiv@b+3)^0,c
  6524  00167C                     l3616:
  6525  00167C  8E04               	bsf	(___fldiv@b+2)^0,7,c
  6526  00167E  0E00               	movlw	0
  6527  001680  6E05               	movwf	(___fldiv@b+3)^0,c
  6528  001682  EF4B  F00B         	goto	l3622
  6529  001686                     l3620:
  6530  001686  0E00               	movlw	0
  6531  001688  6E02               	movwf	___fldiv@b^0,c
  6532  00168A  0E00               	movlw	0
  6533  00168C  6E03               	movwf	(___fldiv@b+1)^0,c
  6534  00168E  0E00               	movlw	0
  6535  001690  6E04               	movwf	(___fldiv@b+2)^0,c
  6536  001692  0E00               	movlw	0
  6537  001694  6E05               	movwf	(___fldiv@b+3)^0,c
  6538  001696                     l3622:
  6539  001696  5009               	movf	(___fldiv@a+3)^0,w,c
  6540  001698  0B80               	andlw	128
  6541  00169A  1A12               	xorwf	___fldiv@sign^0,f,c
  6542  00169C  5009               	movf	(___fldiv@a+3)^0,w,c
  6543  00169E  2409               	addwf	(___fldiv@a+3)^0,w,c
  6544  0016A0  6E1A               	movwf	___fldiv@aexp^0,c
  6545  0016A2  AE08               	btfss	(___fldiv@a+2)^0,7,c
  6546  0016A4  EF56  F00B         	goto	u3211
  6547  0016A8  EF58  F00B         	goto	u3210
  6548  0016AC                     u3211:
  6549  0016AC  EF59  F00B         	goto	l3630
  6550  0016B0                     u3210:
  6551  0016B0  801A               	bsf	___fldiv@aexp^0,0,c
  6552  0016B2                     l3630:
  6553  0016B2  501A               	movf	___fldiv@aexp^0,w,c
  6554  0016B4  B4D8               	btfsc	status,2,c
  6555  0016B6  EF5F  F00B         	goto	u3221
  6556  0016BA  EF61  F00B         	goto	u3220
  6557  0016BE                     u3221:
  6558  0016BE  EF76  F00B         	goto	l3640
  6559  0016C2                     u3220:
  6560  0016C2  281A               	incf	___fldiv@aexp^0,w,c
  6561  0016C4  A4D8               	btfss	status,2,c
  6562  0016C6  EF67  F00B         	goto	u3231
  6563  0016CA  EF69  F00B         	goto	u3230
  6564  0016CE                     u3231:
  6565  0016CE  EF71  F00B         	goto	l3636
  6566  0016D2                     u3230:
  6567  0016D2  0E00               	movlw	0
  6568  0016D4  6E06               	movwf	___fldiv@a^0,c
  6569  0016D6  0E00               	movlw	0
  6570  0016D8  6E07               	movwf	(___fldiv@a+1)^0,c
  6571  0016DA  0E00               	movlw	0
  6572  0016DC  6E08               	movwf	(___fldiv@a+2)^0,c
  6573  0016DE  0E00               	movlw	0
  6574  0016E0  6E09               	movwf	(___fldiv@a+3)^0,c
  6575  0016E2                     l3636:
  6576  0016E2  8E08               	bsf	(___fldiv@a+2)^0,7,c
  6577  0016E4  0E00               	movlw	0
  6578  0016E6  6E09               	movwf	(___fldiv@a+3)^0,c
  6579  0016E8  EF7E  F00B         	goto	l3642
  6580  0016EC                     l3640:
  6581  0016EC  0E00               	movlw	0
  6582  0016EE  6E06               	movwf	___fldiv@a^0,c
  6583  0016F0  0E00               	movlw	0
  6584  0016F2  6E07               	movwf	(___fldiv@a+1)^0,c
  6585  0016F4  0E00               	movlw	0
  6586  0016F6  6E08               	movwf	(___fldiv@a+2)^0,c
  6587  0016F8  0E00               	movlw	0
  6588  0016FA  6E09               	movwf	(___fldiv@a+3)^0,c
  6589  0016FC                     l3642:
  6590  0016FC  5006               	movf	___fldiv@a^0,w,c
  6591  0016FE  1007               	iorwf	(___fldiv@a+1)^0,w,c
  6592  001700  1008               	iorwf	(___fldiv@a+2)^0,w,c
  6593  001702  1009               	iorwf	(___fldiv@a+3)^0,w,c
  6594  001704  A4D8               	btfss	status,2,c
  6595  001706  EF87  F00B         	goto	u3241
  6596  00170A  EF89  F00B         	goto	u3240
  6597  00170E                     u3241:
  6598  00170E  EFA1  F00B         	goto	l3654
  6599  001712                     u3240:
  6600  001712  0E00               	movlw	0
  6601  001714  6E02               	movwf	___fldiv@b^0,c
  6602  001716  0E00               	movlw	0
  6603  001718  6E03               	movwf	(___fldiv@b+1)^0,c
  6604  00171A  0E00               	movlw	0
  6605  00171C  6E04               	movwf	(___fldiv@b+2)^0,c
  6606  00171E  0E00               	movlw	0
  6607  001720  6E05               	movwf	(___fldiv@b+3)^0,c
  6608  001722  0E80               	movlw	128
  6609  001724  1204               	iorwf	(___fldiv@b+2)^0,f,c
  6610  001726  0E7F               	movlw	127
  6611  001728  1205               	iorwf	(___fldiv@b+3)^0,f,c
  6612  00172A                     l3648:
  6613  00172A  5012               	movf	___fldiv@sign^0,w,c
  6614  00172C  1205               	iorwf	(___fldiv@b+3)^0,f,c
  6615  00172E  C002  F002         	movff	___fldiv@b,?___fldiv
  6616  001732  C003  F003         	movff	___fldiv@b+1,?___fldiv+1
  6617  001736  C004  F004         	movff	___fldiv@b+2,?___fldiv+2
  6618  00173A  C005  F005         	movff	___fldiv@b+3,?___fldiv+3
  6619  00173E  EFE4  F00C         	goto	l1293
  6620  001742                     l3654:
  6621  001742  5019               	movf	___fldiv@bexp^0,w,c
  6622  001744  A4D8               	btfss	status,2,c
  6623  001746  EFA7  F00B         	goto	u3251
  6624  00174A  EFA9  F00B         	goto	u3250
  6625  00174E                     u3251:
  6626  00174E  EFB3  F00B         	goto	l3662
  6627  001752                     u3250:
  6628  001752  0E00               	movlw	0
  6629  001754  6E02               	movwf	?___fldiv^0,c
  6630  001756  0E00               	movlw	0
  6631  001758  6E03               	movwf	(?___fldiv+1)^0,c
  6632  00175A  0E00               	movlw	0
  6633  00175C  6E04               	movwf	(?___fldiv+2)^0,c
  6634  00175E  0E00               	movlw	0
  6635  001760  6E05               	movwf	(?___fldiv+3)^0,c
  6636  001762  EFE4  F00C         	goto	l1293
  6637  001766                     l3662:
  6638  001766  501A               	movf	___fldiv@aexp^0,w,c
  6639  001768  C019  F00A         	movff	___fldiv@bexp,??___fldiv
  6640  00176C  6A0B               	clrf	(??___fldiv+1)^0,c
  6641  00176E  5E0A               	subwf	??___fldiv^0,f,c
  6642  001770  0E00               	movlw	0
  6643  001772  5A0B               	subwfb	(??___fldiv+1)^0,f,c
  6644  001774  0E7F               	movlw	127
  6645  001776  240A               	addwf	??___fldiv^0,w,c
  6646  001778  6E13               	movwf	___fldiv@new_exp^0,c
  6647  00177A  0E00               	movlw	0
  6648  00177C  200B               	addwfc	(??___fldiv+1)^0,w,c
  6649  00177E  6E14               	movwf	(___fldiv@new_exp+1)^0,c
  6650  001780  C002  F00E         	movff	___fldiv@b,___fldiv@rem
  6651  001784  C003  F00F         	movff	___fldiv@b+1,___fldiv@rem+1
  6652  001788  C004  F010         	movff	___fldiv@b+2,___fldiv@rem+2
  6653  00178C  C005  F011         	movff	___fldiv@b+3,___fldiv@rem+3
  6654  001790  0E00               	movlw	0
  6655  001792  6E02               	movwf	___fldiv@b^0,c
  6656  001794  0E00               	movlw	0
  6657  001796  6E03               	movwf	(___fldiv@b+1)^0,c
  6658  001798  0E00               	movlw	0
  6659  00179A  6E04               	movwf	(___fldiv@b+2)^0,c
  6660  00179C  0E00               	movlw	0
  6661  00179E  6E05               	movwf	(___fldiv@b+3)^0,c
  6662  0017A0  0E00               	movlw	0
  6663  0017A2  6E15               	movwf	___fldiv@grs^0,c
  6664  0017A4  0E00               	movlw	0
  6665  0017A6  6E16               	movwf	(___fldiv@grs+1)^0,c
  6666  0017A8  0E00               	movlw	0
  6667  0017AA  6E17               	movwf	(___fldiv@grs+2)^0,c
  6668  0017AC  0E00               	movlw	0
  6669  0017AE  6E18               	movwf	(___fldiv@grs+3)^0,c
  6670  0017B0  0E00               	movlw	0
  6671  0017B2  6E1A               	movwf	___fldiv@aexp^0,c
  6672  0017B4  EF14  F00C         	goto	l1295
  6673  0017B8                     l3672:
  6674  0017B8  501A               	movf	___fldiv@aexp^0,w,c
  6675  0017BA  B4D8               	btfsc	status,2,c
  6676  0017BC  EFE2  F00B         	goto	u3261
  6677  0017C0  EFE4  F00B         	goto	u3260
  6678  0017C4                     u3261:
  6679  0017C4  EFFB  F00B         	goto	l3680
  6680  0017C8                     u3260:
  6681  0017C8  90D8               	bcf	status,0,c
  6682  0017CA  360E               	rlcf	___fldiv@rem^0,f,c
  6683  0017CC  360F               	rlcf	(___fldiv@rem+1)^0,f,c
  6684  0017CE  3610               	rlcf	(___fldiv@rem+2)^0,f,c
  6685  0017D0  3611               	rlcf	(___fldiv@rem+3)^0,f,c
  6686  0017D2  90D8               	bcf	status,0,c
  6687  0017D4  3602               	rlcf	___fldiv@b^0,f,c
  6688  0017D6  3603               	rlcf	(___fldiv@b+1)^0,f,c
  6689  0017D8  3604               	rlcf	(___fldiv@b+2)^0,f,c
  6690  0017DA  3605               	rlcf	(___fldiv@b+3)^0,f,c
  6691  0017DC  AE18               	btfss	(___fldiv@grs+3)^0,7,c
  6692  0017DE  EFF3  F00B         	goto	u3271
  6693  0017E2  EFF5  F00B         	goto	u3270
  6694  0017E6                     u3271:
  6695  0017E6  EFF6  F00B         	goto	l1298
  6696  0017EA                     u3270:
  6697  0017EA  8002               	bsf	___fldiv@b^0,0,c
  6698  0017EC                     l1298:
  6699  0017EC  90D8               	bcf	status,0,c
  6700  0017EE  3615               	rlcf	___fldiv@grs^0,f,c
  6701  0017F0  3616               	rlcf	(___fldiv@grs+1)^0,f,c
  6702  0017F2  3617               	rlcf	(___fldiv@grs+2)^0,f,c
  6703  0017F4  3618               	rlcf	(___fldiv@grs+3)^0,f,c
  6704  0017F6                     l3680:
  6705  0017F6  5006               	movf	___fldiv@a^0,w,c
  6706  0017F8  5C0E               	subwf	___fldiv@rem^0,w,c
  6707  0017FA  5007               	movf	(___fldiv@a+1)^0,w,c
  6708  0017FC  580F               	subwfb	(___fldiv@rem+1)^0,w,c
  6709  0017FE  5008               	movf	(___fldiv@a+2)^0,w,c
  6710  001800  5810               	subwfb	(___fldiv@rem+2)^0,w,c
  6711  001802  5009               	movf	(___fldiv@a+3)^0,w,c
  6712  001804  5811               	subwfb	(___fldiv@rem+3)^0,w,c
  6713  001806  A0D8               	btfss	status,0,c
  6714  001808  EF08  F00C         	goto	u3281
  6715  00180C  EF0A  F00C         	goto	u3280
  6716  001810                     u3281:
  6717  001810  EF13  F00C         	goto	l3686
  6718  001814                     u3280:
  6719  001814  8C18               	bsf	(___fldiv@grs+3)^0,6,c
  6720  001816  5006               	movf	___fldiv@a^0,w,c
  6721  001818  5E0E               	subwf	___fldiv@rem^0,f,c
  6722  00181A  5007               	movf	(___fldiv@a+1)^0,w,c
  6723  00181C  5A0F               	subwfb	(___fldiv@rem+1)^0,f,c
  6724  00181E  5008               	movf	(___fldiv@a+2)^0,w,c
  6725  001820  5A10               	subwfb	(___fldiv@rem+2)^0,f,c
  6726  001822  5009               	movf	(___fldiv@a+3)^0,w,c
  6727  001824  5A11               	subwfb	(___fldiv@rem+3)^0,f,c
  6728  001826                     l3686:
  6729  001826  2A1A               	incf	___fldiv@aexp^0,f,c
  6730  001828                     l1295:
  6731  001828  0E19               	movlw	25
  6732  00182A  641A               	cpfsgt	___fldiv@aexp^0,c
  6733  00182C  EF1A  F00C         	goto	u3291
  6734  001830  EF1C  F00C         	goto	u3290
  6735  001834                     u3291:
  6736  001834  EFDC  F00B         	goto	l3672
  6737  001838                     u3290:
  6738  001838  500E               	movf	___fldiv@rem^0,w,c
  6739  00183A  100F               	iorwf	(___fldiv@rem+1)^0,w,c
  6740  00183C  1010               	iorwf	(___fldiv@rem+2)^0,w,c
  6741  00183E  1011               	iorwf	(___fldiv@rem+3)^0,w,c
  6742  001840  B4D8               	btfsc	status,2,c
  6743  001842  EF25  F00C         	goto	u3301
  6744  001846  EF27  F00C         	goto	u3300
  6745  00184A                     u3301:
  6746  00184A  EF3F  F00C         	goto	l3698
  6747  00184E                     u3300:
  6748  00184E  8015               	bsf	___fldiv@grs^0,0,c
  6749  001850  EF3F  F00C         	goto	l3698
  6750  001854                     l3692:
  6751  001854  90D8               	bcf	status,0,c
  6752  001856  3602               	rlcf	___fldiv@b^0,f,c
  6753  001858  3603               	rlcf	(___fldiv@b+1)^0,f,c
  6754  00185A  3604               	rlcf	(___fldiv@b+2)^0,f,c
  6755  00185C  3605               	rlcf	(___fldiv@b+3)^0,f,c
  6756  00185E  AE18               	btfss	(___fldiv@grs+3)^0,7,c
  6757  001860  EF34  F00C         	goto	u3311
  6758  001864  EF36  F00C         	goto	u3310
  6759  001868                     u3311:
  6760  001868  EF37  F00C         	goto	l1304
  6761  00186C                     u3310:
  6762  00186C  8002               	bsf	___fldiv@b^0,0,c
  6763  00186E                     l1304:
  6764  00186E  90D8               	bcf	status,0,c
  6765  001870  3615               	rlcf	___fldiv@grs^0,f,c
  6766  001872  3616               	rlcf	(___fldiv@grs+1)^0,f,c
  6767  001874  3617               	rlcf	(___fldiv@grs+2)^0,f,c
  6768  001876  3618               	rlcf	(___fldiv@grs+3)^0,f,c
  6769  001878  0613               	decf	___fldiv@new_exp^0,f,c
  6770  00187A  A0D8               	btfss	status,0,c
  6771  00187C  0614               	decf	(___fldiv@new_exp+1)^0,f,c
  6772  00187E                     l3698:
  6773  00187E  AE04               	btfss	(___fldiv@b+2)^0,7,c
  6774  001880  EF44  F00C         	goto	u3321
  6775  001884  EF46  F00C         	goto	u3320
  6776  001888                     u3321:
  6777  001888  EF2A  F00C         	goto	l3692
  6778  00188C                     u3320:
  6779  00188C  0E00               	movlw	0
  6780  00188E  6E1A               	movwf	___fldiv@aexp^0,c
  6781  001890  AE18               	btfss	(___fldiv@grs+3)^0,7,c
  6782  001892  EF4D  F00C         	goto	u3331
  6783  001896  EF4F  F00C         	goto	u3330
  6784  00189A                     u3331:
  6785  00189A  EF73  F00C         	goto	l1306
  6786  00189E                     u3330:
  6787  00189E  0EFF               	movlw	255
  6788  0018A0  1415               	andwf	___fldiv@grs^0,w,c
  6789  0018A2  6E0A               	movwf	??___fldiv^0,c
  6790  0018A4  0EFF               	movlw	255
  6791  0018A6  1416               	andwf	(___fldiv@grs+1)^0,w,c
  6792  0018A8  6E0B               	movwf	(??___fldiv+1)^0,c
  6793  0018AA  0EFF               	movlw	255
  6794  0018AC  1417               	andwf	(___fldiv@grs+2)^0,w,c
  6795  0018AE  6E0C               	movwf	(??___fldiv+2)^0,c
  6796  0018B0  0E7F               	movlw	127
  6797  0018B2  1418               	andwf	(___fldiv@grs+3)^0,w,c
  6798  0018B4  6E0D               	movwf	(??___fldiv+3)^0,c
  6799  0018B6  500A               	movf	??___fldiv^0,w,c
  6800  0018B8  100B               	iorwf	(??___fldiv+1)^0,w,c
  6801  0018BA  100C               	iorwf	(??___fldiv+2)^0,w,c
  6802  0018BC  100D               	iorwf	(??___fldiv+3)^0,w,c
  6803  0018BE  B4D8               	btfsc	status,2,c
  6804  0018C0  EF64  F00C         	goto	u3341
  6805  0018C4  EF66  F00C         	goto	u3340
  6806  0018C8                     u3341:
  6807  0018C8  EF6A  F00C         	goto	l1307
  6808  0018CC                     u3340:
  6809  0018CC                     l3706:
  6810  0018CC  0E01               	movlw	1
  6811  0018CE  6E1A               	movwf	___fldiv@aexp^0,c
  6812  0018D0  EF73  F00C         	goto	l1306
  6813  0018D4                     l1307:
  6814  0018D4  A002               	btfss	___fldiv@b^0,0,c
  6815  0018D6  EF6F  F00C         	goto	u3351
  6816  0018DA  EF71  F00C         	goto	u3350
  6817  0018DE                     u3351:
  6818  0018DE  EF73  F00C         	goto	l1306
  6819  0018E2                     u3350:
  6820  0018E2  EF66  F00C         	goto	l3706
  6821  0018E6                     l1306:
  6822  0018E6  501A               	movf	___fldiv@aexp^0,w,c
  6823  0018E8  B4D8               	btfsc	status,2,c
  6824  0018EA  EF79  F00C         	goto	u3361
  6825  0018EE  EF7B  F00C         	goto	u3360
  6826  0018F2                     u3361:
  6827  0018F2  EF9F  F00C         	goto	l3718
  6828  0018F6                     u3360:
  6829  0018F6  0E01               	movlw	1
  6830  0018F8  2602               	addwf	___fldiv@b^0,f,c
  6831  0018FA  0E00               	movlw	0
  6832  0018FC  2203               	addwfc	(___fldiv@b+1)^0,f,c
  6833  0018FE  2204               	addwfc	(___fldiv@b+2)^0,f,c
  6834  001900  2205               	addwfc	(___fldiv@b+3)^0,f,c
  6835  001902  A005               	btfss	(___fldiv@b+3)^0,0,c
  6836  001904  EF86  F00C         	goto	u3371
  6837  001908  EF88  F00C         	goto	u3370
  6838  00190C                     u3371:
  6839  00190C  EF9F  F00C         	goto	l3718
  6840  001910                     u3370:
  6841  001910  C002  F00A         	movff	___fldiv@b,??___fldiv
  6842  001914  C003  F00B         	movff	___fldiv@b+1,??___fldiv+1
  6843  001918  C004  F00C         	movff	___fldiv@b+2,??___fldiv+2
  6844  00191C  C005  F00D         	movff	___fldiv@b+3,??___fldiv+3
  6845  001920  340D               	rlcf	(??___fldiv+3)^0,w,c
  6846  001922  320D               	rrcf	(??___fldiv+3)^0,f,c
  6847  001924  320C               	rrcf	(??___fldiv+2)^0,f,c
  6848  001926  320B               	rrcf	(??___fldiv+1)^0,f,c
  6849  001928  320A               	rrcf	??___fldiv^0,f,c
  6850  00192A  C00A  F002         	movff	??___fldiv,___fldiv@b
  6851  00192E  C00B  F003         	movff	??___fldiv+1,___fldiv@b+1
  6852  001932  C00C  F004         	movff	??___fldiv+2,___fldiv@b+2
  6853  001936  C00D  F005         	movff	??___fldiv+3,___fldiv@b+3
  6854  00193A  4A13               	infsnz	___fldiv@new_exp^0,f,c
  6855  00193C  2A14               	incf	(___fldiv@new_exp+1)^0,f,c
  6856  00193E                     l3718:
  6857  00193E  BE14               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6858  001940  EFAA  F00C         	goto	u3381
  6859  001944  5014               	movf	(___fldiv@new_exp+1)^0,w,c
  6860  001946  E108               	bnz	u3380
  6861  001948  2813               	incf	___fldiv@new_exp^0,w,c
  6862  00194A  A0D8               	btfss	status,0,c
  6863  00194C  EFAA  F00C         	goto	u3381
  6864  001950  EFAC  F00C         	goto	u3380
  6865  001954                     u3381:
  6866  001954  EFB7  F00C         	goto	l3722
  6867  001958                     u3380:
  6868  001958  0E00               	movlw	0
  6869  00195A  6E14               	movwf	(___fldiv@new_exp+1)^0,c
  6870  00195C  6813               	setf	___fldiv@new_exp^0,c
  6871  00195E  0E00               	movlw	0
  6872  001960  6E02               	movwf	___fldiv@b^0,c
  6873  001962  0E00               	movlw	0
  6874  001964  6E03               	movwf	(___fldiv@b+1)^0,c
  6875  001966  0E00               	movlw	0
  6876  001968  6E04               	movwf	(___fldiv@b+2)^0,c
  6877  00196A  0E00               	movlw	0
  6878  00196C  6E05               	movwf	(___fldiv@b+3)^0,c
  6879  00196E                     l3722:
  6880  00196E  BE14               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6881  001970  EFC4  F00C         	goto	u3390
  6882  001974  5014               	movf	(___fldiv@new_exp+1)^0,w,c
  6883  001976  E106               	bnz	u3391
  6884  001978  0413               	decf	___fldiv@new_exp^0,w,c
  6885  00197A  B0D8               	btfsc	status,0,c
  6886  00197C  EFC2  F00C         	goto	u3391
  6887  001980  EFC4  F00C         	goto	u3390
  6888  001984                     u3391:
  6889  001984  EFD2  F00C         	goto	l3726
  6890  001988                     u3390:
  6891  001988  0E00               	movlw	0
  6892  00198A  6E14               	movwf	(___fldiv@new_exp+1)^0,c
  6893  00198C  0E00               	movlw	0
  6894  00198E  6E13               	movwf	___fldiv@new_exp^0,c
  6895  001990  0E00               	movlw	0
  6896  001992  6E02               	movwf	___fldiv@b^0,c
  6897  001994  0E00               	movlw	0
  6898  001996  6E03               	movwf	(___fldiv@b+1)^0,c
  6899  001998  0E00               	movlw	0
  6900  00199A  6E04               	movwf	(___fldiv@b+2)^0,c
  6901  00199C  0E00               	movlw	0
  6902  00199E  6E05               	movwf	(___fldiv@b+3)^0,c
  6903  0019A0  0E00               	movlw	0
  6904  0019A2  6E12               	movwf	___fldiv@sign^0,c
  6905  0019A4                     l3726:
  6906  0019A4  C013  F019         	movff	___fldiv@new_exp,___fldiv@bexp
  6907  0019A8  A019               	btfss	___fldiv@bexp^0,0,c
  6908  0019AA  EFD9  F00C         	goto	u3401
  6909  0019AE  EFDB  F00C         	goto	u3400
  6910  0019B2                     u3401:
  6911  0019B2  EFDE  F00C         	goto	l3732
  6912  0019B6                     u3400:
  6913  0019B6  8E04               	bsf	(___fldiv@b+2)^0,7,c
  6914  0019B8  EFDF  F00C         	goto	l3734
  6915  0019BC                     l3732:
  6916  0019BC  9E04               	bcf	(___fldiv@b+2)^0,7,c
  6917  0019BE                     l3734:
  6918  0019BE  90D8               	bcf	status,0,c
  6919  0019C0  3019               	rrcf	___fldiv@bexp^0,w,c
  6920  0019C2  6E05               	movwf	(___fldiv@b+3)^0,c
  6921  0019C4  EF95  F00B         	goto	l3648
  6922  0019C8                     l1293:
  6923  0019C8  0012               	return		;funcret
  6924  0019CA                     __end_of___fldiv:
  6925                           	callstack 0
  6926                           
  6927 ;; *************** function _ComputeTOD *****************
  6928 ;; Defined at:
  6929 ;;		line 185 in file "main.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;		None
  6932 ;; Auto vars:     Size  Location     Type
  6933 ;;  bIncDays        1   39[COMRAM] unsigned char 
  6934 ;; Return value:  Size  Location     Type
  6935 ;;                  1    wreg      void 
  6936 ;; Registers used:
  6937 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6938 ;; Tracked objects:
  6939 ;;		On entry : 0/0
  6940 ;;		On exit  : 0/0
  6941 ;;		Unchanged: 0/0
  6942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6943 ;;      Params:         0       0       0       0       0       0       0       0       0
  6944 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6945 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6946 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6947 ;;Total ram usage:        2 bytes
  6948 ;; Hardware stack levels used: 1
  6949 ;; Hardware stack levels required when called: 6
  6950 ;; This function calls:
  6951 ;;		_LCD_GoTo
  6952 ;;		_LCD_WriteString
  6953 ;;		_sprintf
  6954 ;; This function is called by:
  6955 ;;		_main
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           	psect	text27
  6960  00305A                     __ptext27:
  6961                           	callstack 0
  6962  00305A                     _ComputeTOD:
  6963                           	callstack 24
  6964  00305A                     
  6965                           ;main.c: 187: bool bIncDays = 0;
  6966  00305A  0E00               	movlw	0
  6967  00305C  6E28               	movwf	ComputeTOD@bIncDays^0,c
  6968  00305E                     
  6969                           ;main.c: 189: if (++giTotalSecs >= 999) giTotalSecs = 0;
  6970  00305E  0100               	movlb	0	; () banked
  6971  003060  4BD5               	infsnz	_giTotalSecs& (0+255),f,b
  6972  003062  2BD6               	incf	(_giTotalSecs+1)& (0+255),f,b
  6973  003064  0EE7               	movlw	231
  6974  003066  5DD5               	subwf	_giTotalSecs& (0+255),w,b
  6975  003068  0E03               	movlw	3
  6976  00306A  59D6               	subwfb	(_giTotalSecs+1)& (0+255),w,b
  6977  00306C  A0D8               	btfss	status,0,c
  6978  00306E  EF3B  F018         	goto	u4411
  6979  003072  EF3D  F018         	goto	u4410
  6980  003076                     u4411:
  6981  003076  EF41  F018         	goto	l4494
  6982  00307A                     u4410:
  6983  00307A                     
  6984                           ; BSR set to: 0
  6985  00307A  0E00               	movlw	0
  6986  00307C  6FD6               	movwf	(_giTotalSecs+1)& (0+255),b
  6987  00307E  0E00               	movlw	0
  6988  003080  6FD5               	movwf	_giTotalSecs& (0+255),b
  6989  003082                     l4494:
  6990                           
  6991                           ; BSR set to: 0
  6992                           ;main.c: 190: if (++giSecs >= 60)
  6993  003082  2A5B               	incf	_giSecs^0,f,c
  6994  003084  0E3B               	movlw	59
  6995  003086  645B               	cpfsgt	_giSecs^0,c
  6996  003088  EF48  F018         	goto	u4421
  6997  00308C  EF4A  F018         	goto	u4420
  6998  003090                     u4421:
  6999  003090  EF64  F018         	goto	l4506
  7000  003094                     u4420:
  7001  003094                     
  7002                           ; BSR set to: 0
  7003                           ;main.c: 191: {;main.c: 192: giSecs = 0;
  7004  003094  0E00               	movlw	0
  7005  003096  6E5B               	movwf	_giSecs^0,c
  7006  003098                     
  7007                           ; BSR set to: 0
  7008                           ;main.c: 193: if (++giMins >= 60)
  7009  003098  2BDE               	incf	_giMins& (0+255),f,b
  7010  00309A  0E3B               	movlw	59
  7011  00309C  65DE               	cpfsgt	_giMins& (0+255),b
  7012  00309E  EF53  F018         	goto	u4431
  7013  0030A2  EF55  F018         	goto	u4430
  7014  0030A6                     u4431:
  7015  0030A6  EF64  F018         	goto	l4506
  7016  0030AA                     u4430:
  7017  0030AA                     
  7018                           ; BSR set to: 0
  7019                           ;main.c: 194: {;main.c: 195: giMins = 0;
  7020  0030AA  0E00               	movlw	0
  7021  0030AC  6FDE               	movwf	_giMins& (0+255),b
  7022  0030AE                     
  7023                           ; BSR set to: 0
  7024                           ;main.c: 196: if (++giHours >= 24){
  7025  0030AE  2BDD               	incf	_giHours& (0+255),f,b
  7026  0030B0  0E17               	movlw	23
  7027  0030B2  65DD               	cpfsgt	_giHours& (0+255),b
  7028  0030B4  EF5E  F018         	goto	u4441
  7029  0030B8  EF60  F018         	goto	u4440
  7030  0030BC                     u4441:
  7031  0030BC  EF64  F018         	goto	l4506
  7032  0030C0                     u4440:
  7033  0030C0                     
  7034                           ; BSR set to: 0
  7035                           ;main.c: 197: giHours = 0;
  7036  0030C0  0E00               	movlw	0
  7037  0030C2  6FDD               	movwf	_giHours& (0+255),b
  7038                           
  7039                           ;main.c: 198: bIncDays = 1;
  7040  0030C4  0E01               	movlw	1
  7041  0030C6  6E28               	movwf	ComputeTOD@bIncDays^0,c
  7042  0030C8                     l4506:
  7043                           
  7044                           ; BSR set to: 0
  7045                           ;main.c: 203: {;main.c: 204: sprintf(gsTotalSecs, "%3i", giTotalSecs);
  7046  0030C8  0EFA               	movlw	low _gsTotalSecs
  7047  0030CA  6E0E               	movwf	sprintf@sp^0,c
  7048  0030CC  0E00               	movlw	high _gsTotalSecs
  7049  0030CE  6E0F               	movwf	(sprintf@sp+1)^0,c
  7050  0030D0  0E85               	movlw	low STR_4
  7051  0030D2  6E10               	movwf	sprintf@f^0,c
  7052  0030D4  0E08               	movlw	high STR_4
  7053  0030D6  6E11               	movwf	(sprintf@f+1)^0,c
  7054  0030D8  C0D5  F012         	movff	_giTotalSecs,?_sprintf+4
  7055  0030DC  C0D6  F013         	movff	_giTotalSecs+1,?_sprintf+5
  7056  0030E0  ECA6  F006         	call	_sprintf	;wreg free
  7057  0030E4                     
  7058                           ;main.c: 205: LCD_GoTo (1, 12);
  7059  0030E4  0E0C               	movlw	12
  7060  0030E6  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  7061  0030E8  0E01               	movlw	1
  7062  0030EA  EC11  F01B         	call	_LCD_GoTo
  7063  0030EE                     
  7064                           ;main.c: 206: LCD_WriteString (gsTotalSecs);
  7065  0030EE  0EFA               	movlw	low _gsTotalSecs
  7066  0030F0  6E05               	movwf	LCD_WriteString@iData^0,c
  7067  0030F2  0E00               	movlw	high _gsTotalSecs
  7068  0030F4  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  7069  0030F6  EC69  F01A         	call	_LCD_WriteString	;wreg free
  7070  0030FA                     
  7071                           ;main.c: 207: };main.c: 210: if (bIncDays)
  7072  0030FA  5028               	movf	ComputeTOD@bIncDays^0,w,c
  7073  0030FC  B4D8               	btfsc	status,2,c
  7074  0030FE  EF83  F018         	goto	u4451
  7075  003102  EF85  F018         	goto	u4450
  7076  003106                     u4451:
  7077  003106  EFA4  F018         	goto	l383
  7078  00310A                     u4450:
  7079  00310A                     
  7080                           ;main.c: 211: {;main.c: 212: if (++giDay > giMonthEndTbl[giMonth - 1])
  7081  00310A  0100               	movlb	0	; () banked
  7082  00310C  2BF9               	incf	_giDay& (0+255),f,b
  7083  00310E  0EC7               	movlw	low (_giMonthEndTbl+65535)
  7084  003110  245C               	addwf	_giMonth^0,w,c
  7085  003112  6ED9               	movwf	fsr2l,c
  7086  003114  6ADA               	clrf	fsr2h,c
  7087  003116  0E01               	movlw	high (_giMonthEndTbl+65535)
  7088  003118  22DA               	addwfc	fsr2h,f,c
  7089  00311A  51F9               	movf	_giDay& (0+255),w,b
  7090  00311C  5CDE               	subwf	postinc2,w,c
  7091  00311E  B0D8               	btfsc	status,0,c
  7092  003120  EF94  F018         	goto	u4461
  7093  003124  EF96  F018         	goto	u4460
  7094  003128                     u4461:
  7095  003128  EFA4  F018         	goto	l383
  7096  00312C                     u4460:
  7097  00312C                     
  7098                           ; BSR set to: 0
  7099                           ;main.c: 213: {;main.c: 214: giDay = 1;
  7100  00312C  0E01               	movlw	1
  7101  00312E  6FF9               	movwf	_giDay& (0+255),b
  7102  003130                     
  7103                           ; BSR set to: 0
  7104                           ;main.c: 215: if (++giMonth > 12)
  7105  003130  2A5C               	incf	_giMonth^0,f,c
  7106  003132  0E0C               	movlw	12
  7107  003134  645C               	cpfsgt	_giMonth^0,c
  7108  003136  EF9F  F018         	goto	u4471
  7109  00313A  EFA1  F018         	goto	u4470
  7110  00313E                     u4471:
  7111  00313E  EFA4  F018         	goto	l383
  7112  003142                     u4470:
  7113  003142                     
  7114                           ; BSR set to: 0
  7115                           ;main.c: 216: {;main.c: 217: giMonth = 1;
  7116  003142  0E01               	movlw	1
  7117  003144  6E5C               	movwf	_giMonth^0,c
  7118  003146                     
  7119                           ; BSR set to: 0
  7120                           ;main.c: 218: giYear ++;
  7121  003146  2BF8               	incf	_giYear& (0+255),f,b
  7122  003148                     l383:
  7123  003148  0012               	return		;funcret
  7124  00314A                     __end_of_ComputeTOD:
  7125                           	callstack 0
  7126                           
  7127 ;; *************** function _sprintf *****************
  7128 ;; Defined at:
  7129 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  7130 ;; Parameters:    Size  Location     Type
  7131 ;;  sp              2   13[COMRAM] PTR unsigned char 
  7132 ;;		 -> gsTotalSecs(4), sLine2(100), sLine1(100), 
  7133 ;;  f               2   15[COMRAM] PTR const unsigned char 
  7134 ;;		 -> STR_4(4), STR_3(13), STR_2(21), 
  7135 ;; Auto vars:     Size  Location     Type
  7136 ;;  tmpval          4    0        struct .
  7137 ;;  width           2   34[COMRAM] int 
  7138 ;;  val             2   32[COMRAM] unsigned int 
  7139 ;;  len             2   30[COMRAM] unsigned int 
  7140 ;;  ap              2   27[COMRAM] PTR void [1]
  7141 ;;		 -> ?_sprintf(2), 
  7142 ;;  cp              2   25[COMRAM] PTR const unsigned char 
  7143 ;;		 -> sprintf@c(1), 
  7144 ;;  c               1   37[COMRAM] unsigned char 
  7145 ;;  prec            1   36[COMRAM] char 
  7146 ;;  flag            1   29[COMRAM] unsigned char 
  7147 ;; Return value:  Size  Location     Type
  7148 ;;                  2   13[COMRAM] int 
  7149 ;; Registers used:
  7150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7151 ;; Tracked objects:
  7152 ;;		On entry : 0/0
  7153 ;;		On exit  : 0/0
  7154 ;;		Unchanged: 0/0
  7155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7156 ;;      Params:         8       0       0       0       0       0       0       0       0
  7157 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7158 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7159 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7160 ;;Total ram usage:       25 bytes
  7161 ;; Hardware stack levels used: 1
  7162 ;; Hardware stack levels required when called: 5
  7163 ;; This function calls:
  7164 ;;		___lwdiv
  7165 ;;		___lwmod
  7166 ;;		___wmul
  7167 ;;		_isdigit
  7168 ;; This function is called by:
  7169 ;;		_ComputeWaterVol
  7170 ;;		_ComputeTOD
  7171 ;; This function uses a non-reentrant model
  7172 ;;
  7173                           
  7174                           	psect	text28
  7175  000D4C                     __ptext28:
  7176                           	callstack 0
  7177  000D4C                     _sprintf:
  7178                           	callstack 24
  7179  000D4C                     
  7180                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  7181  000D4C  0E12               	movlw	low (?_sprintf+4)
  7182  000D4E  6E1C               	movwf	sprintf@ap^0,c
  7183  000D50  0E00               	movlw	high (?_sprintf+4)
  7184  000D52  6E1D               	movwf	(sprintf@ap+1)^0,c
  7185                           
  7186                           ;doprnt.c: 553: while((c = *f++)) {
  7187  000D54  EFEA  F008         	goto	l4268
  7188  000D58                     l4114:
  7189                           
  7190                           ;doprnt.c: 555: if(c != '%')
  7191  000D58  0E25               	movlw	37
  7192  000D5A  1826               	xorwf	sprintf@c^0,w,c
  7193  000D5C  B4D8               	btfsc	status,2,c
  7194  000D5E  EFB3  F006         	goto	u3991
  7195  000D62  EFB5  F006         	goto	u3990
  7196  000D66                     u3991:
  7197  000D66  EFBF  F006         	goto	l4120
  7198  000D6A                     u3990:
  7199  000D6A                     
  7200                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  7201  000D6A  C00E  FFD9         	movff	sprintf@sp,fsr2l
  7202  000D6E  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  7203  000D72  C026  FFDF         	movff	sprintf@c,indf2
  7204  000D76  4A0E               	infsnz	sprintf@sp^0,f,c
  7205  000D78  2A0F               	incf	(sprintf@sp+1)^0,f,c
  7206                           
  7207                           ;doprnt.c: 559: continue;
  7208  000D7A  EFEA  F008         	goto	l4268
  7209  000D7E                     l4120:
  7210                           
  7211                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  7212  000D7E  0E00               	movlw	0
  7213  000D80  6E24               	movwf	(sprintf@width+1)^0,c
  7214  000D82  0E00               	movlw	0
  7215  000D84  6E23               	movwf	sprintf@width^0,c
  7216                           
  7217                           ;doprnt.c: 565: flag = 0;
  7218  000D86  0E00               	movlw	0
  7219  000D88  6E1E               	movwf	sprintf@flag^0,c
  7220  000D8A                     
  7221                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  7222  000D8A  C010  FFF6         	movff	sprintf@f,tblptrl
  7223  000D8E  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7224  000D92                     	if	0	;tblptru may be non-zero
  7225  000D92                     	endif
  7226  000D92                     	if	0	;tblptru may be non-zero
  7227  000D92                     	endif
  7228  000D92  0008               	tblrd		*
  7229  000D94  50F5               	movf	tablat,w,c
  7230  000D96  EC00  F01C         	call	_isdigit
  7231  000D9A  A0D8               	btfss	status,0,c
  7232  000D9C  EFD2  F006         	goto	u4001
  7233  000DA0  EFD4  F006         	goto	u4000
  7234  000DA4                     u4001:
  7235  000DA4  EF0B  F007         	goto	l4134
  7236  000DA8                     u4000:
  7237  000DA8                     
  7238                           ;doprnt.c: 615: width = 0;
  7239  000DA8  0E00               	movlw	0
  7240  000DAA  6E24               	movwf	(sprintf@width+1)^0,c
  7241  000DAC  0E00               	movlw	0
  7242  000DAE  6E23               	movwf	sprintf@width^0,c
  7243  000DB0                     l4126:
  7244                           
  7245                           ;doprnt.c: 617: width *= 10;
  7246  000DB0  C023  F002         	movff	sprintf@width,___wmul@multiplier
  7247  000DB4  C024  F003         	movff	sprintf@width+1,___wmul@multiplier+1
  7248  000DB8  0E00               	movlw	0
  7249  000DBA  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  7250  000DBC  0E0A               	movlw	10
  7251  000DBE  6E04               	movwf	___wmul@multiplicand^0,c
  7252  000DC0  EC19  F01C         	call	___wmul	;wreg free
  7253  000DC4  C002  F023         	movff	?___wmul,sprintf@width
  7254  000DC8  C003  F024         	movff	?___wmul+1,sprintf@width+1
  7255  000DCC                     
  7256                           ;doprnt.c: 618: width += *f++ - '0';
  7257  000DCC  0ED0               	movlw	208
  7258  000DCE  6E16               	movwf	??_sprintf^0,c
  7259  000DD0  0EFF               	movlw	255
  7260  000DD2  6E17               	movwf	(??_sprintf+1)^0,c
  7261  000DD4  C010  FFF6         	movff	sprintf@f,tblptrl
  7262  000DD8  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7263  000DDC                     	if	0	;tblptru may be non-zero
  7264  000DDC                     	endif
  7265  000DDC                     	if	0	;tblptru may be non-zero
  7266  000DDC                     	endif
  7267  000DDC  0008               	tblrd		*
  7268  000DDE  50F5               	movf	tablat,w,c
  7269  000DE0  6E18               	movwf	(??_sprintf+2)^0,c
  7270  000DE2  6A19               	clrf	(??_sprintf+3)^0,c
  7271  000DE4  5016               	movf	??_sprintf^0,w,c
  7272  000DE6  2618               	addwf	(??_sprintf+2)^0,f,c
  7273  000DE8  5017               	movf	(??_sprintf+1)^0,w,c
  7274  000DEA  2219               	addwfc	(??_sprintf+3)^0,f,c
  7275  000DEC  5018               	movf	(??_sprintf+2)^0,w,c
  7276  000DEE  2623               	addwf	sprintf@width^0,f,c
  7277  000DF0  5019               	movf	(??_sprintf+3)^0,w,c
  7278  000DF2  2224               	addwfc	(sprintf@width+1)^0,f,c
  7279  000DF4  4A10               	infsnz	sprintf@f^0,f,c
  7280  000DF6  2A11               	incf	(sprintf@f+1)^0,f,c
  7281  000DF8                     
  7282                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  7283  000DF8  C010  FFF6         	movff	sprintf@f,tblptrl
  7284  000DFC  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7285  000E00                     	if	0	;tblptru may be non-zero
  7286  000E00                     	endif
  7287  000E00                     	if	0	;tblptru may be non-zero
  7288  000E00                     	endif
  7289  000E00  0008               	tblrd		*
  7290  000E02  50F5               	movf	tablat,w,c
  7291  000E04  EC00  F01C         	call	_isdigit
  7292  000E08  B0D8               	btfsc	status,0,c
  7293  000E0A  EF09  F007         	goto	u4011
  7294  000E0E  EF0B  F007         	goto	u4010
  7295  000E12                     u4011:
  7296  000E12  EFD8  F006         	goto	l4126
  7297  000E16                     u4010:
  7298  000E16                     l4134:
  7299                           
  7300                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  7301  000E16  C010  FFF6         	movff	sprintf@f,tblptrl
  7302  000E1A  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7303  000E1E                     	if	0	;tblptru may be non-zero
  7304  000E1E                     	endif
  7305  000E1E                     	if	0	;tblptru may be non-zero
  7306  000E1E                     	endif
  7307  000E1E  0008               	tblrd		*
  7308  000E20  50F5               	movf	tablat,w,c
  7309  000E22  0A2E               	xorlw	46
  7310  000E24  A4D8               	btfss	status,2,c
  7311  000E26  EF17  F007         	goto	u4021
  7312  000E2A  EF19  F007         	goto	u4020
  7313  000E2E                     u4021:
  7314  000E2E  EF3E  F007         	goto	l4148
  7315  000E32                     u4020:
  7316  000E32                     
  7317                           ;doprnt.c: 630: f++;
  7318  000E32  4A10               	infsnz	sprintf@f^0,f,c
  7319  000E34  2A11               	incf	(sprintf@f+1)^0,f,c
  7320  000E36                     
  7321                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  7322  000E36  0E00               	movlw	0
  7323  000E38  6E25               	movwf	sprintf@prec^0,c
  7324                           
  7325                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  7326  000E3A  EF2D  F007         	goto	l4146
  7327  000E3E                     l4140:
  7328                           
  7329                           ;doprnt.c: 647: prec *= 10;
  7330  000E3E  0E0A               	movlw	10
  7331  000E40  0225               	mulwf	sprintf@prec^0,c
  7332  000E42  50F3               	movf	prodl,w,c
  7333  000E44  6E25               	movwf	sprintf@prec^0,c
  7334  000E46                     
  7335                           ;doprnt.c: 648: prec += *f++ - '0';
  7336  000E46  C010  FFF6         	movff	sprintf@f,tblptrl
  7337  000E4A  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7338  000E4E                     	if	0	;tblptru may be non-zero
  7339  000E4E                     	endif
  7340  000E4E                     	if	0	;tblptru may be non-zero
  7341  000E4E                     	endif
  7342  000E4E  0008               	tblrd		*
  7343  000E50  50F5               	movf	tablat,w,c
  7344  000E52  0FD0               	addlw	208
  7345  000E54  2625               	addwf	sprintf@prec^0,f,c
  7346  000E56  4A10               	infsnz	sprintf@f^0,f,c
  7347  000E58  2A11               	incf	(sprintf@f+1)^0,f,c
  7348  000E5A                     l4146:
  7349  000E5A  C010  FFF6         	movff	sprintf@f,tblptrl
  7350  000E5E  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7351  000E62                     	if	0	;tblptru may be non-zero
  7352  000E62                     	endif
  7353  000E62                     	if	0	;tblptru may be non-zero
  7354  000E62                     	endif
  7355  000E62  0008               	tblrd		*
  7356  000E64  50F5               	movf	tablat,w,c
  7357  000E66  EC00  F01C         	call	_isdigit
  7358  000E6A  B0D8               	btfsc	status,0,c
  7359  000E6C  EF3A  F007         	goto	u4031
  7360  000E70  EF3C  F007         	goto	u4030
  7361  000E74                     u4031:
  7362  000E74  EF1F  F007         	goto	l4140
  7363  000E78                     u4030:
  7364  000E78  EFAF  F007         	goto	l4184
  7365  000E7C                     l4148:
  7366                           
  7367                           ;doprnt.c: 652: prec = 0;
  7368  000E7C  0E00               	movlw	0
  7369  000E7E  6E25               	movwf	sprintf@prec^0,c
  7370  000E80  EFAF  F007         	goto	l4184
  7371  000E84                     l4150:
  7372                           
  7373                           ;doprnt.c: 779: if(prec && (prec < ((int)len)))
  7374  000E84  5025               	movf	sprintf@prec^0,w,c
  7375  000E86  B4D8               	btfsc	status,2,c
  7376  000E88  EF48  F007         	goto	u4041
  7377  000E8C  EF4A  F007         	goto	u4040
  7378  000E90                     u4041:
  7379  000E90  EF57  F007         	goto	l4156
  7380  000E94                     u4040:
  7381  000E94  5025               	movf	sprintf@prec^0,w,c
  7382  000E96  0A80               	xorlw	128
  7383  000E98  0F7F               	addlw	-129
  7384  000E9A  B0D8               	btfsc	status,0,c
  7385  000E9C  EF52  F007         	goto	u4051
  7386  000EA0  EF54  F007         	goto	u4050
  7387  000EA4                     u4051:
  7388  000EA4  EF57  F007         	goto	l4156
  7389  000EA8                     u4050:
  7390  000EA8                     
  7391                           ;doprnt.c: 780: len = (unsigned char)prec;
  7392  000EA8  C025  F01F         	movff	sprintf@prec,sprintf@len
  7393  000EAC  6A20               	clrf	(sprintf@len+1)^0,c
  7394  000EAE                     l4156:
  7395                           
  7396                           ;doprnt.c: 783: if(((unsigned)width) > len)
  7397  000EAE  5023               	movf	sprintf@width^0,w,c
  7398  000EB0  5C1F               	subwf	sprintf@len^0,w,c
  7399  000EB2  5024               	movf	(sprintf@width+1)^0,w,c
  7400  000EB4  5820               	subwfb	(sprintf@len+1)^0,w,c
  7401  000EB6  B0D8               	btfsc	status,0,c
  7402  000EB8  EF60  F007         	goto	u4061
  7403  000EBC  EF62  F007         	goto	u4060
  7404  000EC0                     u4061:
  7405  000EC0  EF68  F007         	goto	l4160
  7406  000EC4                     u4060:
  7407  000EC4                     
  7408                           ;doprnt.c: 784: width -= len;
  7409  000EC4  501F               	movf	sprintf@len^0,w,c
  7410  000EC6  5E23               	subwf	sprintf@width^0,f,c
  7411  000EC8  5020               	movf	(sprintf@len+1)^0,w,c
  7412  000ECA  5A24               	subwfb	(sprintf@width+1)^0,f,c
  7413  000ECC  EF76  F007         	goto	l4166
  7414  000ED0                     l4160:
  7415                           
  7416                           ;doprnt.c: 785: else;doprnt.c: 786: width = 0;
  7417  000ED0  0E00               	movlw	0
  7418  000ED2  6E24               	movwf	(sprintf@width+1)^0,c
  7419  000ED4  0E00               	movlw	0
  7420  000ED6  6E23               	movwf	sprintf@width^0,c
  7421  000ED8  EF76  F007         	goto	l4166
  7422  000EDC                     l4162:
  7423                           
  7424                           ;doprnt.c: 791: ((*sp++ = (' ')));
  7425  000EDC  C00E  FFD9         	movff	sprintf@sp,fsr2l
  7426  000EE0  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  7427  000EE4  0E20               	movlw	32
  7428  000EE6  6EDF               	movwf	indf2,c
  7429  000EE8  4A0E               	infsnz	sprintf@sp^0,f,c
  7430  000EEA  2A0F               	incf	(sprintf@sp+1)^0,f,c
  7431  000EEC                     l4166:
  7432  000EEC  0623               	decf	sprintf@width^0,f,c
  7433  000EEE  A0D8               	btfss	status,0,c
  7434  000EF0  0624               	decf	(sprintf@width+1)^0,f,c
  7435  000EF2  2823               	incf	sprintf@width^0,w,c
  7436  000EF4  E106               	bnz	u4071
  7437  000EF6  2824               	incf	(sprintf@width+1)^0,w,c
  7438  000EF8  A4D8               	btfss	status,2,c
  7439  000EFA  EF81  F007         	goto	u4071
  7440  000EFE  EF83  F007         	goto	u4070
  7441  000F02                     u4071:
  7442  000F02  EF6E  F007         	goto	l4162
  7443  000F06                     u4070:
  7444  000F06  EF93  F007         	goto	l4174
  7445  000F0A                     l4168:
  7446                           
  7447                           ;doprnt.c: 794: ((*sp++ = (*cp++)));
  7448  000F0A  C01A  FFD9         	movff	sprintf@cp,fsr2l
  7449  000F0E  C01B  FFDA         	movff	sprintf@cp+1,fsr2h
  7450  000F12  C00E  FFE1         	movff	sprintf@sp,fsr1l
  7451  000F16  C00F  FFE2         	movff	sprintf@sp+1,fsr1h
  7452  000F1A  CFDF FFE7          	movff	indf2,indf1
  7453  000F1E  4A1A               	infsnz	sprintf@cp^0,f,c
  7454  000F20  2A1B               	incf	(sprintf@cp+1)^0,f,c
  7455  000F22  4A0E               	infsnz	sprintf@sp^0,f,c
  7456  000F24  2A0F               	incf	(sprintf@sp+1)^0,f,c
  7457  000F26                     l4174:
  7458  000F26  061F               	decf	sprintf@len^0,f,c
  7459  000F28  A0D8               	btfss	status,0,c
  7460  000F2A  0620               	decf	(sprintf@len+1)^0,f,c
  7461  000F2C  281F               	incf	sprintf@len^0,w,c
  7462  000F2E  E106               	bnz	u4081
  7463  000F30  2820               	incf	(sprintf@len+1)^0,w,c
  7464  000F32  A4D8               	btfss	status,2,c
  7465  000F34  EF9E  F007         	goto	u4081
  7466  000F38  EFA0  F007         	goto	u4080
  7467  000F3C                     u4081:
  7468  000F3C  EF85  F007         	goto	l4168
  7469  000F40                     u4080:
  7470  000F40  EFEA  F008         	goto	l4268
  7471  000F44                     l4176:
  7472                           
  7473                           ;doprnt.c: 831: cp = (char *)&c;
  7474  000F44  0E26               	movlw	low sprintf@c
  7475  000F46  6E1A               	movwf	sprintf@cp^0,c
  7476  000F48  0E00               	movlw	high sprintf@c
  7477  000F4A  6E1B               	movwf	(sprintf@cp+1)^0,c
  7478  000F4C                     
  7479                           ;doprnt.c: 832: len = 1;
  7480  000F4C  0E00               	movlw	0
  7481  000F4E  6E20               	movwf	(sprintf@len+1)^0,c
  7482  000F50  0E01               	movlw	1
  7483  000F52  6E1F               	movwf	sprintf@len^0,c
  7484                           
  7485                           ;doprnt.c: 833: goto dostring;
  7486  000F54  EF42  F007         	goto	l4150
  7487  000F58                     l4180:
  7488                           
  7489                           ;doprnt.c: 844: flag |= 0x40;
  7490  000F58  8C1E               	bsf	sprintf@flag^0,6,c
  7491                           
  7492                           ;doprnt.c: 845: break;
  7493  000F5A  EFCB  F007         	goto	l683
  7494  000F5E                     l4184:
  7495  000F5E  C010  FFF6         	movff	sprintf@f,tblptrl
  7496  000F62  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7497  000F66  4A10               	infsnz	sprintf@f^0,f,c
  7498  000F68  2A11               	incf	(sprintf@f+1)^0,f,c
  7499  000F6A                     	if	0	;tblptru may be non-zero
  7500  000F6A                     	endif
  7501  000F6A                     	if	0	;tblptru may be non-zero
  7502  000F6A                     	endif
  7503  000F6A  0008               	tblrd		*
  7504  000F6C  CFF5 F026          	movff	tablat,sprintf@c
  7505  000F70  5026               	movf	sprintf@c^0,w,c
  7506                           
  7507                           ; Switch size 1, requested type "simple"
  7508                           ; Number of cases is 4, Range of values is 0 to 117
  7509                           ; switch strategies available:
  7510                           ; Name         Instructions Cycles
  7511                           ; simple_byte           13     7 (average)
  7512                           ;	Chosen strategy is simple_byte
  7513  000F72  0A00               	xorlw	0	; case 0
  7514  000F74  B4D8               	btfsc	status,2,c
  7515  000F76  EFFB  F008         	goto	l4270
  7516  000F7A  0A64               	xorlw	100	; case 100
  7517  000F7C  B4D8               	btfsc	status,2,c
  7518  000F7E  EFCB  F007         	goto	l683
  7519  000F82  0A0D               	xorlw	13	; case 105
  7520  000F84  B4D8               	btfsc	status,2,c
  7521  000F86  EFCB  F007         	goto	l683
  7522  000F8A  0A1C               	xorlw	28	; case 117
  7523  000F8C  B4D8               	btfsc	status,2,c
  7524  000F8E  EFAC  F007         	goto	l4180
  7525  000F92  EFA2  F007         	goto	l4176
  7526  000F96                     l683:
  7527                           
  7528                           ;doprnt.c: 1277: if((flag & 0x40) == 0x00)
  7529  000F96  BC1E               	btfsc	sprintf@flag^0,6,c
  7530  000F98  EFD0  F007         	goto	u4091
  7531  000F9C  EFD2  F007         	goto	u4090
  7532  000FA0                     u4091:
  7533  000FA0  EFED  F007         	goto	l4196
  7534  000FA4                     u4090:
  7535  000FA4                     
  7536                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  7537  000FA4  C01C  FFD9         	movff	sprintf@ap,fsr2l
  7538  000FA8  C01D  FFDA         	movff	sprintf@ap+1,fsr2h
  7539  000FAC  CFDE F021          	movff	postinc2,sprintf@val
  7540  000FB0  CFDD F022          	movff	postdec2,sprintf@val+1
  7541  000FB4  0E02               	movlw	2
  7542  000FB6  261C               	addwf	sprintf@ap^0,f,c
  7543  000FB8  0E00               	movlw	0
  7544  000FBA  221D               	addwfc	(sprintf@ap+1)^0,f,c
  7545  000FBC                     
  7546                           ;doprnt.c: 1287: if((int)val < 0) {
  7547  000FBC  BE22               	btfsc	(sprintf@val+1)^0,7,c
  7548  000FBE  EFE5  F007         	goto	u4100
  7549  000FC2  EFE3  F007         	goto	u4101
  7550  000FC6                     u4101:
  7551  000FC6  EFF9  F007         	goto	l4200
  7552  000FCA                     u4100:
  7553  000FCA                     
  7554                           ;doprnt.c: 1288: flag |= 0x03;
  7555  000FCA  0E03               	movlw	3
  7556  000FCC  121E               	iorwf	sprintf@flag^0,f,c
  7557  000FCE                     
  7558                           ;doprnt.c: 1289: val = -val;
  7559  000FCE  6C21               	negf	sprintf@val^0,c
  7560  000FD0  1E22               	comf	(sprintf@val+1)^0,f,c
  7561  000FD2  B0D8               	btfsc	status,0,c
  7562  000FD4  2A22               	incf	(sprintf@val+1)^0,f,c
  7563  000FD6  EFF9  F007         	goto	l4200
  7564  000FDA                     l4196:
  7565                           
  7566                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  7567  000FDA  C01C  FFD9         	movff	sprintf@ap,fsr2l
  7568  000FDE  C01D  FFDA         	movff	sprintf@ap+1,fsr2h
  7569  000FE2  CFDE F021          	movff	postinc2,sprintf@val
  7570  000FE6  CFDD F022          	movff	postdec2,sprintf@val+1
  7571  000FEA  0E02               	movlw	2
  7572  000FEC  261C               	addwf	sprintf@ap^0,f,c
  7573  000FEE  0E00               	movlw	0
  7574  000FF0  221D               	addwfc	(sprintf@ap+1)^0,f,c
  7575  000FF2                     l4200:
  7576                           
  7577                           ;doprnt.c: 1313: };doprnt.c: 1316: if(prec == 0 && val == 0)
  7578  000FF2  5025               	movf	sprintf@prec^0,w,c
  7579  000FF4  A4D8               	btfss	status,2,c
  7580  000FF6  EFFF  F007         	goto	u4111
  7581  000FFA  EF01  F008         	goto	u4110
  7582  000FFE                     u4111:
  7583  000FFE  EF0B  F008         	goto	l4206
  7584  001002                     u4110:
  7585  001002  5021               	movf	sprintf@val^0,w,c
  7586  001004  1022               	iorwf	(sprintf@val+1)^0,w,c
  7587  001006  A4D8               	btfss	status,2,c
  7588  001008  EF08  F008         	goto	u4121
  7589  00100C  EF0A  F008         	goto	u4120
  7590  001010                     u4121:
  7591  001010  EF0B  F008         	goto	l4206
  7592  001014                     u4120:
  7593  001014                     
  7594                           ;doprnt.c: 1317: prec++;
  7595  001014  2A25               	incf	sprintf@prec^0,f,c
  7596  001016                     l4206:
  7597                           
  7598                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7599  001016  0E01               	movlw	1
  7600  001018  6E26               	movwf	sprintf@c^0,c
  7601  00101A                     l4208:
  7602  00101A  0E05               	movlw	5
  7603  00101C  1826               	xorwf	sprintf@c^0,w,c
  7604  00101E  A4D8               	btfss	status,2,c
  7605  001020  EF14  F008         	goto	u4131
  7606  001024  EF16  F008         	goto	u4130
  7607  001028                     u4131:
  7608  001028  EF18  F008         	goto	l4212
  7609  00102C                     u4130:
  7610  00102C  EF32  F008         	goto	l4220
  7611  001030                     l4212:
  7612                           
  7613                           ;doprnt.c: 1332: if(val < dpowers[c])
  7614  001030  5026               	movf	sprintf@c^0,w,c
  7615  001032  0D02               	mullw	2
  7616  001034  0E01               	movlw	low _dpowers
  7617  001036  24F3               	addwf	243,w,c
  7618  001038  6EF6               	movwf	tblptrl,c
  7619  00103A  0E08               	movlw	high _dpowers
  7620  00103C  20F4               	addwfc	244,w,c
  7621  00103E  6EF7               	movwf	tblptrh,c
  7622  001040                     	if	0	;There are less than 3 active tblptr bytes
  7623  001040                     	endif
  7624  001040  0009               	tblrd		*+
  7625  001042  50F5               	movf	tablat,w,c
  7626  001044  5C21               	subwf	sprintf@val^0,w,c
  7627  001046  0009               	tblrd		*+
  7628  001048  50F5               	movf	tablat,w,c
  7629  00104A  5822               	subwfb	(sprintf@val+1)^0,w,c
  7630  00104C  B0D8               	btfsc	status,0,c
  7631  00104E  EF2B  F008         	goto	u4141
  7632  001052  EF2D  F008         	goto	u4140
  7633  001056                     u4141:
  7634  001056  EF2F  F008         	goto	l4216
  7635  00105A                     u4140:
  7636  00105A  EF32  F008         	goto	l4220
  7637  00105E                     l4216:
  7638  00105E  2A26               	incf	sprintf@c^0,f,c
  7639  001060  EF0D  F008         	goto	l4208
  7640  001064                     l4220:
  7641                           
  7642                           ;doprnt.c: 1365: if(c < prec)
  7643  001064  5026               	movf	sprintf@c^0,w,c
  7644  001066  80D8               	bsf	status,0,c
  7645  001068  84D8               	bsf	status,2,c
  7646  00106A  AE25               	btfss	sprintf@prec^0,7,c
  7647  00106C  5C25               	subwf	sprintf@prec^0,w,c
  7648  00106E  A0D8               	btfss	status,0,c
  7649  001070  84D8               	bsf	status,2,c
  7650  001072  B4D8               	btfsc	status,2,c
  7651  001074  EF3E  F008         	goto	u4151
  7652  001078  EF40  F008         	goto	u4150
  7653  00107C                     u4151:
  7654  00107C  EF44  F008         	goto	l4224
  7655  001080                     u4150:
  7656  001080                     
  7657                           ;doprnt.c: 1366: c = (char)prec;
  7658  001080  C025  F026         	movff	sprintf@prec,sprintf@c
  7659  001084  EF53  F008         	goto	l4228
  7660  001088                     l4224:
  7661                           
  7662                           ;doprnt.c: 1367: else if(prec < c)
  7663  001088  5026               	movf	sprintf@c^0,w,c
  7664  00108A  90D8               	bcf	status,0,c
  7665  00108C  AE25               	btfss	sprintf@prec^0,7,c
  7666  00108E  5C25               	subwf	sprintf@prec^0,w,c
  7667  001090  B0D8               	btfsc	status,0,c
  7668  001092  80D8               	bsf	status,0,c
  7669  001094  B0D8               	btfsc	status,0,c
  7670  001096  EF4F  F008         	goto	u4161
  7671  00109A  EF51  F008         	goto	u4160
  7672  00109E                     u4161:
  7673  00109E  EF53  F008         	goto	l4228
  7674  0010A2                     u4160:
  7675  0010A2                     
  7676                           ;doprnt.c: 1368: prec = c;
  7677  0010A2  C026  F025         	movff	sprintf@c,sprintf@prec
  7678  0010A6                     l4228:
  7679                           
  7680                           ;doprnt.c: 1371: if(width && flag & 0x03)
  7681  0010A6  5023               	movf	sprintf@width^0,w,c
  7682  0010A8  1024               	iorwf	(sprintf@width+1)^0,w,c
  7683  0010AA  B4D8               	btfsc	status,2,c
  7684  0010AC  EF5A  F008         	goto	u4171
  7685  0010B0  EF5C  F008         	goto	u4170
  7686  0010B4                     u4171:
  7687  0010B4  EF6A  F008         	goto	l4240
  7688  0010B8                     u4170:
  7689  0010B8  C01E  F016         	movff	sprintf@flag,??_sprintf
  7690  0010BC  0E03               	movlw	3
  7691  0010BE  1616               	andwf	??_sprintf^0,f,c
  7692  0010C0  B4D8               	btfsc	status,2,c
  7693  0010C2  EF65  F008         	goto	u4181
  7694  0010C6  EF67  F008         	goto	u4180
  7695  0010CA                     u4181:
  7696  0010CA  EF6A  F008         	goto	l4240
  7697  0010CE                     u4180:
  7698  0010CE                     
  7699                           ;doprnt.c: 1372: width--;
  7700  0010CE  0623               	decf	sprintf@width^0,f,c
  7701  0010D0  A0D8               	btfss	status,0,c
  7702  0010D2  0624               	decf	(sprintf@width+1)^0,f,c
  7703  0010D4                     l4240:
  7704                           
  7705                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  7706  0010D4  5026               	movf	sprintf@c^0,w,c
  7707  0010D6  6E16               	movwf	??_sprintf^0,c
  7708  0010D8  6A17               	clrf	(??_sprintf+1)^0,c
  7709  0010DA  5023               	movf	sprintf@width^0,w,c
  7710  0010DC  5C16               	subwf	??_sprintf^0,w,c
  7711  0010DE  5017               	movf	(??_sprintf+1)^0,w,c
  7712  0010E0  0A80               	xorlw	128
  7713  0010E2  6E18               	movwf	(??_sprintf+2)^0,c
  7714  0010E4  5024               	movf	(sprintf@width+1)^0,w,c
  7715  0010E6  0A80               	xorlw	128
  7716  0010E8  5818               	subwfb	(??_sprintf+2)^0,w,c
  7717  0010EA  B0D8               	btfsc	status,0,c
  7718  0010EC  EF7A  F008         	goto	u4191
  7719  0010F0  EF7C  F008         	goto	u4190
  7720  0010F4                     u4191:
  7721  0010F4  EF82  F008         	goto	l4244
  7722  0010F8                     u4190:
  7723  0010F8                     
  7724                           ;doprnt.c: 1408: width -= c;
  7725  0010F8  5026               	movf	sprintf@c^0,w,c
  7726  0010FA  5E23               	subwf	sprintf@width^0,f,c
  7727  0010FC  0E00               	movlw	0
  7728  0010FE  5A24               	subwfb	(sprintf@width+1)^0,f,c
  7729  001100  EF86  F008         	goto	l4246
  7730  001104                     l4244:
  7731                           
  7732                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  7733  001104  0E00               	movlw	0
  7734  001106  6E24               	movwf	(sprintf@width+1)^0,c
  7735  001108  0E00               	movlw	0
  7736  00110A  6E23               	movwf	sprintf@width^0,c
  7737  00110C                     l4246:
  7738                           
  7739                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  7740  00110C  5023               	movf	sprintf@width^0,w,c
  7741  00110E  1024               	iorwf	(sprintf@width+1)^0,w,c
  7742  001110  B4D8               	btfsc	status,2,c
  7743  001112  EF8D  F008         	goto	u4201
  7744  001116  EF8F  F008         	goto	u4200
  7745  00111A                     u4201:
  7746  00111A  EFA3  F008         	goto	l4254
  7747  00111E                     u4200:
  7748  00111E                     l4248:
  7749                           
  7750                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  7751  00111E  C00E  FFD9         	movff	sprintf@sp,fsr2l
  7752  001122  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  7753  001126  0E20               	movlw	32
  7754  001128  6EDF               	movwf	indf2,c
  7755  00112A  4A0E               	infsnz	sprintf@sp^0,f,c
  7756  00112C  2A0F               	incf	(sprintf@sp+1)^0,f,c
  7757  00112E                     
  7758                           ;doprnt.c: 1457: while(--width);
  7759  00112E  0623               	decf	sprintf@width^0,f,c
  7760  001130  A0D8               	btfss	status,0,c
  7761  001132  0624               	decf	(sprintf@width+1)^0,f,c
  7762  001134  5023               	movf	sprintf@width^0,w,c
  7763  001136  1024               	iorwf	(sprintf@width+1)^0,w,c
  7764  001138  A4D8               	btfss	status,2,c
  7765  00113A  EFA1  F008         	goto	u4211
  7766  00113E  EFA3  F008         	goto	u4210
  7767  001142                     u4211:
  7768  001142  EF8F  F008         	goto	l4248
  7769  001146                     u4210:
  7770  001146                     l4254:
  7771                           
  7772                           ;doprnt.c: 1464: if(flag & 0x03)
  7773  001146  C01E  F016         	movff	sprintf@flag,??_sprintf
  7774  00114A  0E03               	movlw	3
  7775  00114C  1616               	andwf	??_sprintf^0,f,c
  7776  00114E  B4D8               	btfsc	status,2,c
  7777  001150  EFAC  F008         	goto	u4221
  7778  001154  EFAE  F008         	goto	u4220
  7779  001158                     u4221:
  7780  001158  EFE1  F008         	goto	l4266
  7781  00115C                     u4220:
  7782  00115C                     
  7783                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  7784  00115C  C00E  FFD9         	movff	sprintf@sp,fsr2l
  7785  001160  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  7786  001164  0E2D               	movlw	45
  7787  001166  6EDF               	movwf	indf2,c
  7788  001168                     l4258:
  7789  001168  4A0E               	infsnz	sprintf@sp^0,f,c
  7790  00116A  2A0F               	incf	(sprintf@sp+1)^0,f,c
  7791  00116C  EFE1  F008         	goto	l4266
  7792  001170                     l4260:
  7793                           
  7794                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  7795  001170  5025               	movf	sprintf@prec^0,w,c
  7796  001172  0D02               	mullw	2
  7797  001174  0E01               	movlw	low _dpowers
  7798  001176  24F3               	addwf	243,w,c
  7799  001178  6EF6               	movwf	tblptrl,c
  7800  00117A  0E08               	movlw	high _dpowers
  7801  00117C  20F4               	addwfc	244,w,c
  7802  00117E  6EF7               	movwf	tblptrh,c
  7803  001180                     	if	0	;There are less than 3 active tblptr bytes
  7804  001180                     	endif
  7805  001180  0009               	tblrd		*+
  7806  001182  CFF5 F004          	movff	tablat,___lwdiv@divisor
  7807  001186  000A               	tblrd		*-
  7808  001188  CFF5 F005          	movff	tablat,___lwdiv@divisor+1
  7809  00118C  C021  F002         	movff	sprintf@val,___lwdiv@dividend
  7810  001190  C022  F003         	movff	sprintf@val+1,___lwdiv@dividend+1
  7811  001194  ECA5  F01A         	call	___lwdiv	;wreg free
  7812  001198  C002  F009         	movff	?___lwdiv,___lwmod@dividend
  7813  00119C  C003  F00A         	movff	?___lwdiv+1,___lwmod@dividend+1
  7814  0011A0  0E00               	movlw	0
  7815  0011A2  6E0C               	movwf	(___lwmod@divisor+1)^0,c
  7816  0011A4  0E0A               	movlw	10
  7817  0011A6  6E0B               	movwf	___lwmod@divisor^0,c
  7818  0011A8  ECDF  F01A         	call	___lwmod	;wreg free
  7819  0011AC  5009               	movf	?___lwmod^0,w,c
  7820  0011AE  0F30               	addlw	48
  7821  0011B0  6E26               	movwf	sprintf@c^0,c
  7822  0011B2                     
  7823                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  7824  0011B2  C00E  FFD9         	movff	sprintf@sp,fsr2l
  7825  0011B6  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  7826  0011BA  C026  FFDF         	movff	sprintf@c,indf2
  7827  0011BE  EFB4  F008         	goto	l4258
  7828  0011C2                     l4266:
  7829  0011C2  0625               	decf	sprintf@prec^0,f,c
  7830  0011C4  2825               	incf	sprintf@prec^0,w,c
  7831  0011C6  A4D8               	btfss	status,2,c
  7832  0011C8  EFE8  F008         	goto	u4231
  7833  0011CC  EFEA  F008         	goto	u4230
  7834  0011D0                     u4231:
  7835  0011D0  EFB8  F008         	goto	l4260
  7836  0011D4                     u4230:
  7837  0011D4                     l4268:
  7838  0011D4  C010  FFF6         	movff	sprintf@f,tblptrl
  7839  0011D8  C011  FFF7         	movff	sprintf@f+1,tblptrh
  7840  0011DC  4A10               	infsnz	sprintf@f^0,f,c
  7841  0011DE  2A11               	incf	(sprintf@f+1)^0,f,c
  7842  0011E0                     	if	0	;tblptru may be non-zero
  7843  0011E0                     	endif
  7844  0011E0                     	if	0	;tblptru may be non-zero
  7845  0011E0                     	endif
  7846  0011E0  0008               	tblrd		*
  7847  0011E2  CFF5 F026          	movff	tablat,sprintf@c
  7848  0011E6  5026               	movf	sprintf@c^0,w,c
  7849  0011E8  A4D8               	btfss	status,2,c
  7850  0011EA  EFF9  F008         	goto	u4241
  7851  0011EE  EFFB  F008         	goto	u4240
  7852  0011F2                     u4241:
  7853  0011F2  EFAC  F006         	goto	l4114
  7854  0011F6                     u4240:
  7855  0011F6                     l4270:
  7856                           
  7857                           ;doprnt.c: 1564: *sp = 0;
  7858  0011F6  C00E  FFD9         	movff	sprintf@sp,fsr2l
  7859  0011FA  C00F  FFDA         	movff	sprintf@sp+1,fsr2h
  7860  0011FE  0E00               	movlw	0
  7861  001200  6EDF               	movwf	indf2,c
  7862  001202  0012               	return		;funcret
  7863  001204                     __end_of_sprintf:
  7864                           	callstack 0
  7865                           
  7866 ;; *************** function _isdigit *****************
  7867 ;; Defined at:
  7868 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  7869 ;; Parameters:    Size  Location     Type
  7870 ;;  c               1    wreg     unsigned char 
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;  c               1    3[COMRAM] unsigned char 
  7873 ;; Return value:  Size  Location     Type
  7874 ;;		None               void
  7875 ;; Registers used:
  7876 ;;		wreg, status,2, status,0
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/0
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7882 ;;      Params:         0       0       0       0       0       0       0       0       0
  7883 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7884 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7885 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7886 ;;Total ram usage:        3 bytes
  7887 ;; Hardware stack levels used: 1
  7888 ;; Hardware stack levels required when called: 4
  7889 ;; This function calls:
  7890 ;;		Nothing
  7891 ;; This function is called by:
  7892 ;;		_sprintf
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           	psect	text29
  7897  003800                     __ptext29:
  7898                           	callstack 0
  7899  003800                     _isdigit:
  7900                           	callstack 24
  7901                           
  7902                           ;incstack = 0
  7903                           ;isdigit@c stored from wreg
  7904  003800  6E04               	movwf	isdigit@c^0,c
  7905  003802  0E00               	movlw	0
  7906  003804  6E03               	movwf	_isdigit$1968^0,c
  7907  003806  0E3A               	movlw	58
  7908  003808  6004               	cpfslt	isdigit@c^0,c
  7909  00380A  EF09  F01C         	goto	u3651
  7910  00380E  EF0B  F01C         	goto	u3650
  7911  003812                     u3651:
  7912  003812  EF15  F01C         	goto	l3860
  7913  003816                     u3650:
  7914  003816  0E2F               	movlw	47
  7915  003818  6404               	cpfsgt	isdigit@c^0,c
  7916  00381A  EF11  F01C         	goto	u3661
  7917  00381E  EF13  F01C         	goto	u3660
  7918  003822                     u3661:
  7919  003822  EF15  F01C         	goto	l3860
  7920  003826                     u3660:
  7921  003826  0E01               	movlw	1
  7922  003828  6E03               	movwf	_isdigit$1968^0,c
  7923  00382A                     l3860:
  7924  00382A  C003  F002         	movff	_isdigit$1968,??_isdigit
  7925  00382E  3002               	rrcf	??_isdigit^0,w,c
  7926  003830  0012               	return		;funcret
  7927  003832                     __end_of_isdigit:
  7928                           	callstack 0
  7929                           
  7930 ;; *************** function ___wmul *****************
  7931 ;; Defined at:
  7932 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  7933 ;; Parameters:    Size  Location     Type
  7934 ;;  multiplier      2    1[COMRAM] unsigned int 
  7935 ;;  multiplicand    2    3[COMRAM] unsigned int 
  7936 ;; Auto vars:     Size  Location     Type
  7937 ;;  product         2    5[COMRAM] unsigned int 
  7938 ;; Return value:  Size  Location     Type
  7939 ;;                  2    1[COMRAM] unsigned int 
  7940 ;; Registers used:
  7941 ;;		wreg, status,2, status,0, prodl, prodh
  7942 ;; Tracked objects:
  7943 ;;		On entry : 0/0
  7944 ;;		On exit  : 0/0
  7945 ;;		Unchanged: 0/0
  7946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7947 ;;      Params:         4       0       0       0       0       0       0       0       0
  7948 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7949 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7950 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7951 ;;Total ram usage:        6 bytes
  7952 ;; Hardware stack levels used: 1
  7953 ;; Hardware stack levels required when called: 4
  7954 ;; This function calls:
  7955 ;;		Nothing
  7956 ;; This function is called by:
  7957 ;;		_sprintf
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text30
  7962  003832                     __ptext30:
  7963                           	callstack 0
  7964  003832                     ___wmul:
  7965                           	callstack 24
  7966  003832  5002               	movf	___wmul@multiplier^0,w,c
  7967  003834  0204               	mulwf	___wmul@multiplicand^0,c
  7968  003836  CFF3 F006          	movff	prodl,___wmul@product
  7969  00383A  CFF4 F007          	movff	prodh,___wmul@product+1
  7970  00383E  5002               	movf	___wmul@multiplier^0,w,c
  7971  003840  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  7972  003842  50F3               	movf	243,w,c
  7973  003844  2607               	addwf	(___wmul@product+1)^0,f,c
  7974  003846  5003               	movf	(___wmul@multiplier+1)^0,w,c
  7975  003848  0204               	mulwf	___wmul@multiplicand^0,c
  7976  00384A  50F3               	movf	243,w,c
  7977  00384C  2607               	addwf	(___wmul@product+1)^0,f,c
  7978  00384E  C006  F002         	movff	___wmul@product,?___wmul
  7979  003852  C007  F003         	movff	___wmul@product+1,?___wmul+1
  7980  003856  0012               	return		;funcret
  7981  003858                     __end_of___wmul:
  7982                           	callstack 0
  7983                           
  7984 ;; *************** function ___lwmod *****************
  7985 ;; Defined at:
  7986 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;  dividend        2    8[COMRAM] unsigned int 
  7989 ;;  divisor         2   10[COMRAM] unsigned int 
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;  counter         1   12[COMRAM] unsigned char 
  7992 ;; Return value:  Size  Location     Type
  7993 ;;                  2    8[COMRAM] unsigned int 
  7994 ;; Registers used:
  7995 ;;		wreg, status,2, status,0
  7996 ;; Tracked objects:
  7997 ;;		On entry : 0/0
  7998 ;;		On exit  : 0/0
  7999 ;;		Unchanged: 0/0
  8000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8001 ;;      Params:         4       0       0       0       0       0       0       0       0
  8002 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8004 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8005 ;;Total ram usage:        5 bytes
  8006 ;; Hardware stack levels used: 1
  8007 ;; Hardware stack levels required when called: 4
  8008 ;; This function calls:
  8009 ;;		Nothing
  8010 ;; This function is called by:
  8011 ;;		_sprintf
  8012 ;; This function uses a non-reentrant model
  8013 ;;
  8014                           
  8015                           	psect	text31
  8016  0035BE                     __ptext31:
  8017                           	callstack 0
  8018  0035BE                     ___lwmod:
  8019                           	callstack 24
  8020  0035BE  500B               	movf	___lwmod@divisor^0,w,c
  8021  0035C0  100C               	iorwf	(___lwmod@divisor+1)^0,w,c
  8022  0035C2  B4D8               	btfsc	status,2,c
  8023  0035C4  EFE6  F01A         	goto	u3701
  8024  0035C8  EFE8  F01A         	goto	u3700
  8025  0035CC                     u3701:
  8026  0035CC  EF0C  F01B         	goto	l1212
  8027  0035D0                     u3700:
  8028  0035D0  0E01               	movlw	1
  8029  0035D2  6E0D               	movwf	___lwmod@counter^0,c
  8030  0035D4  EFF0  F01A         	goto	l3898
  8031  0035D8                     l3896:
  8032  0035D8  90D8               	bcf	status,0,c
  8033  0035DA  360B               	rlcf	___lwmod@divisor^0,f,c
  8034  0035DC  360C               	rlcf	(___lwmod@divisor+1)^0,f,c
  8035  0035DE  2A0D               	incf	___lwmod@counter^0,f,c
  8036  0035E0                     l3898:
  8037  0035E0  AE0C               	btfss	(___lwmod@divisor+1)^0,7,c
  8038  0035E2  EFF5  F01A         	goto	u3711
  8039  0035E6  EFF7  F01A         	goto	u3710
  8040  0035EA                     u3711:
  8041  0035EA  EFEC  F01A         	goto	l3896
  8042  0035EE                     u3710:
  8043  0035EE                     l3900:
  8044  0035EE  500B               	movf	___lwmod@divisor^0,w,c
  8045  0035F0  5C09               	subwf	___lwmod@dividend^0,w,c
  8046  0035F2  500C               	movf	(___lwmod@divisor+1)^0,w,c
  8047  0035F4  580A               	subwfb	(___lwmod@dividend+1)^0,w,c
  8048  0035F6  A0D8               	btfss	status,0,c
  8049  0035F8  EF00  F01B         	goto	u3721
  8050  0035FC  EF02  F01B         	goto	u3720
  8051  003600                     u3721:
  8052  003600  EF06  F01B         	goto	l3904
  8053  003604                     u3720:
  8054  003604  500B               	movf	___lwmod@divisor^0,w,c
  8055  003606  5E09               	subwf	___lwmod@dividend^0,f,c
  8056  003608  500C               	movf	(___lwmod@divisor+1)^0,w,c
  8057  00360A  5A0A               	subwfb	(___lwmod@dividend+1)^0,f,c
  8058  00360C                     l3904:
  8059  00360C  90D8               	bcf	status,0,c
  8060  00360E  320C               	rrcf	(___lwmod@divisor+1)^0,f,c
  8061  003610  320B               	rrcf	___lwmod@divisor^0,f,c
  8062  003612  2E0D               	decfsz	___lwmod@counter^0,f,c
  8063  003614  EFF7  F01A         	goto	l3900
  8064  003618                     l1212:
  8065  003618  C009  F009         	movff	___lwmod@dividend,?___lwmod
  8066  00361C  C00A  F00A         	movff	___lwmod@dividend+1,?___lwmod+1
  8067  003620  0012               	return		;funcret
  8068  003622                     __end_of___lwmod:
  8069                           	callstack 0
  8070                           
  8071 ;; *************** function ___lwdiv *****************
  8072 ;; Defined at:
  8073 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  8074 ;; Parameters:    Size  Location     Type
  8075 ;;  dividend        2    1[COMRAM] unsigned int 
  8076 ;;  divisor         2    3[COMRAM] unsigned int 
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;  quotient        2    5[COMRAM] unsigned int 
  8079 ;;  counter         1    7[COMRAM] unsigned char 
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  2    1[COMRAM] unsigned int 
  8082 ;; Registers used:
  8083 ;;		wreg, status,2, status,0
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8089 ;;      Params:         4       0       0       0       0       0       0       0       0
  8090 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8092 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8093 ;;Total ram usage:        7 bytes
  8094 ;; Hardware stack levels used: 1
  8095 ;; Hardware stack levels required when called: 4
  8096 ;; This function calls:
  8097 ;;		Nothing
  8098 ;; This function is called by:
  8099 ;;		_sprintf
  8100 ;; This function uses a non-reentrant model
  8101 ;;
  8102                           
  8103                           	psect	text32
  8104  00354A                     __ptext32:
  8105                           	callstack 0
  8106  00354A                     ___lwdiv:
  8107                           	callstack 24
  8108  00354A  0E00               	movlw	0
  8109  00354C  6E07               	movwf	(___lwdiv@quotient+1)^0,c
  8110  00354E  0E00               	movlw	0
  8111  003550  6E06               	movwf	___lwdiv@quotient^0,c
  8112  003552  5004               	movf	___lwdiv@divisor^0,w,c
  8113  003554  1005               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8114  003556  B4D8               	btfsc	status,2,c
  8115  003558  EFB0  F01A         	goto	u3671
  8116  00355C  EFB2  F01A         	goto	u3670
  8117  003560                     u3671:
  8118  003560  EFDA  F01A         	goto	l1202
  8119  003564                     u3670:
  8120  003564  0E01               	movlw	1
  8121  003566  6E08               	movwf	___lwdiv@counter^0,c
  8122  003568  EFBA  F01A         	goto	l3878
  8123  00356C                     l3876:
  8124  00356C  90D8               	bcf	status,0,c
  8125  00356E  3604               	rlcf	___lwdiv@divisor^0,f,c
  8126  003570  3605               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8127  003572  2A08               	incf	___lwdiv@counter^0,f,c
  8128  003574                     l3878:
  8129  003574  AE05               	btfss	(___lwdiv@divisor+1)^0,7,c
  8130  003576  EFBF  F01A         	goto	u3681
  8131  00357A  EFC1  F01A         	goto	u3680
  8132  00357E                     u3681:
  8133  00357E  EFB6  F01A         	goto	l3876
  8134  003582                     u3680:
  8135  003582                     l3880:
  8136  003582  90D8               	bcf	status,0,c
  8137  003584  3606               	rlcf	___lwdiv@quotient^0,f,c
  8138  003586  3607               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8139  003588  5004               	movf	___lwdiv@divisor^0,w,c
  8140  00358A  5C02               	subwf	___lwdiv@dividend^0,w,c
  8141  00358C  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  8142  00358E  5803               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8143  003590  A0D8               	btfss	status,0,c
  8144  003592  EFCD  F01A         	goto	u3691
  8145  003596  EFCF  F01A         	goto	u3690
  8146  00359A                     u3691:
  8147  00359A  EFD4  F01A         	goto	l3888
  8148  00359E                     u3690:
  8149  00359E  5004               	movf	___lwdiv@divisor^0,w,c
  8150  0035A0  5E02               	subwf	___lwdiv@dividend^0,f,c
  8151  0035A2  5005               	movf	(___lwdiv@divisor+1)^0,w,c
  8152  0035A4  5A03               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8153  0035A6  8006               	bsf	___lwdiv@quotient^0,0,c
  8154  0035A8                     l3888:
  8155  0035A8  90D8               	bcf	status,0,c
  8156  0035AA  3205               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8157  0035AC  3204               	rrcf	___lwdiv@divisor^0,f,c
  8158  0035AE  2E08               	decfsz	___lwdiv@counter^0,f,c
  8159  0035B0  EFC1  F01A         	goto	l3880
  8160  0035B4                     l1202:
  8161  0035B4  C006  F002         	movff	___lwdiv@quotient,?___lwdiv
  8162  0035B8  C007  F003         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8163  0035BC  0012               	return		;funcret
  8164  0035BE                     __end_of___lwdiv:
  8165                           	callstack 0
  8166                           
  8167 ;; *************** function _LCD_WriteString *****************
  8168 ;; Defined at:
  8169 ;;		line 59 in file "LCD.c"
  8170 ;; Parameters:    Size  Location     Type
  8171 ;;  iData           2    4[COMRAM] PTR unsigned char 
  8172 ;;		 -> gsTotalSecs(4), sLine2(100), sLine1(100), STR_1(12), 
  8173 ;; Auto vars:     Size  Location     Type
  8174 ;;  ix              1    8[COMRAM] unsigned char 
  8175 ;; Return value:  Size  Location     Type
  8176 ;;                  1    wreg      void 
  8177 ;; Registers used:
  8178 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8179 ;; Tracked objects:
  8180 ;;		On entry : 0/0
  8181 ;;		On exit  : 0/0
  8182 ;;		Unchanged: 0/0
  8183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8184 ;;      Params:         2       0       0       0       0       0       0       0       0
  8185 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8186 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8187 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8188 ;;Total ram usage:        5 bytes
  8189 ;; Hardware stack levels used: 1
  8190 ;; Hardware stack levels required when called: 5
  8191 ;; This function calls:
  8192 ;;		_LCD_WriteChar
  8193 ;; This function is called by:
  8194 ;;		_main
  8195 ;;		_ComputeWaterVol
  8196 ;;		_ComputeTOD
  8197 ;; This function uses a non-reentrant model
  8198 ;;
  8199                           
  8200                           	psect	text33
  8201  0034D2                     __ptext33:
  8202                           	callstack 0
  8203  0034D2                     _LCD_WriteString:
  8204                           	callstack 25
  8205  0034D2                     
  8206                           ;LCD.c: 61: uint8_t ix = 0;
  8207  0034D2  0E00               	movlw	0
  8208  0034D4  6E09               	movwf	LCD_WriteString@ix^0,c
  8209                           
  8210                           ;LCD.c: 62: while (iData[ix]) {
  8211  0034D6  EF86  F01A         	goto	l4000
  8212  0034DA                     l3996:
  8213                           
  8214                           ;LCD.c: 63: LCD_WriteChar (iData[ix]);
  8215  0034DA  5009               	movf	LCD_WriteString@ix^0,w,c
  8216  0034DC  2405               	addwf	LCD_WriteString@iData^0,w,c
  8217  0034DE  6E07               	movwf	??_LCD_WriteString^0,c
  8218  0034E0  0E00               	movlw	0
  8219  0034E2  2006               	addwfc	(LCD_WriteString@iData+1)^0,w,c
  8220  0034E4  6E08               	movwf	(??_LCD_WriteString+1)^0,c
  8221  0034E6  C007  FFF6         	movff	??_LCD_WriteString,tblptrl
  8222  0034EA  C008  FFF7         	movff	??_LCD_WriteString+1,tblptrh
  8223  0034EE  6AF8               	clrf	tblptru,c
  8224  0034F0  0E07               	movlw	(high __ramtop+-1)
  8225  0034F2  64F7               	cpfsgt	tblptrh,c
  8226  0034F4  D003               	bra	u3837
  8227  0034F6  0008               	tblrd		*
  8228  0034F8  50F5               	movf	tablat,w,c
  8229  0034FA  D005               	bra	u3830
  8230  0034FC                     u3837:
  8231  0034FC  CFF6 FFE1          	movff	tblptrl,fsr1l
  8232  003500  CFF7 FFE2          	movff	tblptrh,fsr1h
  8233  003504  50E7               	movf	indf1,w,c
  8234  003506                     u3830:
  8235  003506  EC3F  F01B         	call	_LCD_WriteChar
  8236  00350A                     
  8237                           ;LCD.c: 64: ix ++;
  8238  00350A  2A09               	incf	LCD_WriteString@ix^0,f,c
  8239  00350C                     l4000:
  8240  00350C  5009               	movf	LCD_WriteString@ix^0,w,c
  8241  00350E  2405               	addwf	LCD_WriteString@iData^0,w,c
  8242  003510  6E07               	movwf	??_LCD_WriteString^0,c
  8243  003512  0E00               	movlw	0
  8244  003514  2006               	addwfc	(LCD_WriteString@iData+1)^0,w,c
  8245  003516  6E08               	movwf	(??_LCD_WriteString+1)^0,c
  8246  003518  C007  FFF6         	movff	??_LCD_WriteString,tblptrl
  8247  00351C  C008  FFF7         	movff	??_LCD_WriteString+1,tblptrh
  8248  003520  6AF8               	clrf	tblptru,c
  8249  003522  0E07               	movlw	(high __ramtop+-1)
  8250  003524  64F7               	cpfsgt	tblptrh,c
  8251  003526  D003               	bra	u3847
  8252  003528  0008               	tblrd		*
  8253  00352A  50F5               	movf	tablat,w,c
  8254  00352C  D005               	bra	u3840
  8255  00352E                     u3847:
  8256  00352E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8257  003532  CFF7 FFE2          	movff	tblptrh,fsr1h
  8258  003536  50E7               	movf	indf1,w,c
  8259  003538                     u3840:
  8260  003538  0900               	iorlw	0
  8261  00353A  A4D8               	btfss	status,2,c
  8262  00353C  EFA2  F01A         	goto	u3851
  8263  003540  EFA4  F01A         	goto	u3850
  8264  003544                     u3851:
  8265  003544  EF6D  F01A         	goto	l3996
  8266  003548                     u3850:
  8267  003548  0012               	return		;funcret
  8268  00354A                     __end_of_LCD_WriteString:
  8269                           	callstack 0
  8270                           
  8271 ;; *************** function _LCD_WriteChar *****************
  8272 ;; Defined at:
  8273 ;;		line 46 in file "LCD.c"
  8274 ;; Parameters:    Size  Location     Type
  8275 ;;  iChar           1    wreg     unsigned char 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  iChar           1    3[COMRAM] unsigned char 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      void 
  8280 ;; Registers used:
  8281 ;;		wreg, status,2, status,0
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8287 ;;      Params:         0       0       0       0       0       0       0       0       0
  8288 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8289 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8290 ;;      Totals:         3       0       0       0       0       0       0       0       0
  8291 ;;Total ram usage:        3 bytes
  8292 ;; Hardware stack levels used: 1
  8293 ;; Hardware stack levels required when called: 4
  8294 ;; This function calls:
  8295 ;;		Nothing
  8296 ;; This function is called by:
  8297 ;;		_LCD_WriteString
  8298 ;; This function uses a non-reentrant model
  8299 ;;
  8300                           
  8301                           	psect	text34
  8302  00367E                     __ptext34:
  8303                           	callstack 0
  8304  00367E                     _LCD_WriteChar:
  8305                           	callstack 25
  8306                           
  8307                           ;incstack = 0
  8308                           ;LCD_WriteChar@iChar stored from wreg
  8309  00367E  6E04               	movwf	LCD_WriteChar@iChar^0,c
  8310  003680  8689               	bsf	137,3,c	;volatile
  8311  003682  9489               	bcf	137,2,c	;volatile
  8312  003684  8289               	bsf	137,1,c	;volatile
  8313  003686                     
  8314                           ;LCD.c: 52: LATB = iChar;
  8315  003686  C004  FF8A         	movff	LCD_WriteChar@iChar,3978	;volatile
  8316  00368A                     
  8317                           ;LCD.c: 53: LATC6 = iChar>>6;
  8318  00368A  C004  F002         	movff	LCD_WriteChar@iChar,??_LCD_WriteChar
  8319  00368E  0E06               	movlw	6
  8320  003690  6E03               	movwf	(??_LCD_WriteChar+1)^0,c
  8321  003692                     u3595:
  8322  003692  90D8               	bcf	status,0,c
  8323  003694  3202               	rrcf	??_LCD_WriteChar^0,f,c
  8324  003696  2E03               	decfsz	(??_LCD_WriteChar+1)^0,f,c
  8325  003698  EF49  F01B         	goto	u3595
  8326  00369C  3002               	rrcf	??_LCD_WriteChar^0,w,c
  8327  00369E  B0D8               	btfsc	status,0,c
  8328  0036A0  EF54  F01B         	goto	u3601
  8329  0036A4  EF57  F01B         	goto	u3600
  8330  0036A8                     u3601:
  8331  0036A8  8C8B               	bsf	3979,6,c	;volatile
  8332  0036AA  EF58  F01B         	goto	u3615
  8333  0036AE                     u3600:
  8334  0036AE  9C8B               	bcf	3979,6,c	;volatile
  8335  0036B0                     u3615:
  8336  0036B0                     
  8337                           ;LCD.c: 54: LATC7 = iChar>>7;
  8338  0036B0  6A02               	clrf	??_LCD_WriteChar^0,c
  8339  0036B2  AE04               	btfss	LCD_WriteChar@iChar^0,7,c
  8340  0036B4  D001               	bra	u3625
  8341  0036B6  2A02               	incf	??_LCD_WriteChar^0,f,c
  8342  0036B8                     u3625:
  8343  0036B8  3002               	rrcf	??_LCD_WriteChar^0,w,c
  8344  0036BA  B0D8               	btfsc	status,0,c
  8345  0036BC  EF62  F01B         	goto	u3631
  8346  0036C0  EF65  F01B         	goto	u3630
  8347  0036C4                     u3631:
  8348  0036C4  8E8B               	bsf	3979,7,c	;volatile
  8349  0036C6  EF66  F01B         	goto	u3645
  8350  0036CA                     u3630:
  8351  0036CA  9E8B               	bcf	3979,7,c	;volatile
  8352  0036CC                     u3645:
  8353  0036CC  9289               	bcf	137,1,c	;volatile
  8354  0036CE                     
  8355                           ;LCD.c: 56: _delay((unsigned long)((40+10)*(8000000/4000000.0)));
  8356  0036CE  0E21               	movlw	33
  8357  0036D0                     u5747:
  8358  0036D0  2EE8               	decfsz	wreg,f,c
  8359  0036D2  D7FE               	bra	u5747
  8360  0036D4  F000               	nop	
  8361  0036D6  0012               	return		;funcret
  8362  0036D8                     __end_of_LCD_WriteChar:
  8363                           	callstack 0
  8364                           
  8365 ;; *************** function _LCD_GoTo *****************
  8366 ;; Defined at:
  8367 ;;		line 68 in file "LCD.c"
  8368 ;; Parameters:    Size  Location     Type
  8369 ;;  iLine           1    wreg     unsigned char 
  8370 ;;  iCharPos        1    8[COMRAM] unsigned char 
  8371 ;; Auto vars:     Size  Location     Type
  8372 ;;  iLine           1   14[COMRAM] unsigned char 
  8373 ;;  iPos            1   13[COMRAM] unsigned char 
  8374 ;; Return value:  Size  Location     Type
  8375 ;;                  1    wreg      void 
  8376 ;; Registers used:
  8377 ;;		wreg, status,2, status,0, cstack
  8378 ;; Tracked objects:
  8379 ;;		On entry : 0/0
  8380 ;;		On exit  : 0/0
  8381 ;;		Unchanged: 0/0
  8382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8383 ;;      Params:         1       0       0       0       0       0       0       0       0
  8384 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8385 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8386 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8387 ;;Total ram usage:        7 bytes
  8388 ;; Hardware stack levels used: 1
  8389 ;; Hardware stack levels required when called: 5
  8390 ;; This function calls:
  8391 ;;		_LCD_WriteCmd
  8392 ;; This function is called by:
  8393 ;;		_ComputeWaterVol
  8394 ;;		_ComputeTOD
  8395 ;; This function uses a non-reentrant model
  8396 ;;
  8397                           
  8398                           	psect	text35
  8399  003622                     __ptext35:
  8400                           	callstack 0
  8401  003622                     _LCD_GoTo:
  8402                           	callstack 24
  8403                           
  8404                           ;incstack = 0
  8405                           ;LCD_GoTo@iLine stored from wreg
  8406  003622  6E0F               	movwf	LCD_GoTo@iLine^0,c
  8407  003624                     
  8408                           ;LCD.c: 70: uint8_t iPos;;LCD.c: 71: if (iLine < 2)
  8409  003624  0E02               	movlw	2
  8410  003626  600F               	cpfslt	LCD_GoTo@iLine^0,c
  8411  003628  EF18  F01B         	goto	u3971
  8412  00362C  EF1A  F01B         	goto	u3970
  8413  003630                     u3971:
  8414  003630  EF36  F01B         	goto	l4110
  8415  003634                     u3970:
  8416  003634                     
  8417                           ;LCD.c: 72: iPos = (iLine == 0) ?;LCD.c: 73: (0x80 | iCharPos) :;LCD.c: 74: (0xC0 | iCha
      +                          rPos);
  8418  003634  500F               	movf	LCD_GoTo@iLine^0,w,c
  8419  003636  B4D8               	btfsc	status,2,c
  8420  003638  EF20  F01B         	goto	u3981
  8421  00363C  EF22  F01B         	goto	u3980
  8422  003640                     u3981:
  8423  003640  EF2C  F01B         	goto	l4106
  8424  003644                     u3980:
  8425  003644  0EC0               	movlw	192
  8426  003646  C009  F00A         	movff	LCD_GoTo@iCharPos,??_LCD_GoTo
  8427  00364A  6A0B               	clrf	(??_LCD_GoTo+1)^0,c
  8428  00364C  100A               	iorwf	??_LCD_GoTo^0,w,c
  8429  00364E  6E0C               	movwf	_LCD_GoTo$1343^0,c
  8430  003650  500B               	movf	(??_LCD_GoTo+1)^0,w,c
  8431  003652  6E0D               	movwf	(_LCD_GoTo$1343+1)^0,c
  8432  003654  EF34  F01B         	goto	l4108
  8433  003658                     l4106:
  8434  003658  0E80               	movlw	128
  8435  00365A  C009  F00A         	movff	LCD_GoTo@iCharPos,??_LCD_GoTo
  8436  00365E  6A0B               	clrf	(??_LCD_GoTo+1)^0,c
  8437  003660  100A               	iorwf	??_LCD_GoTo^0,w,c
  8438  003662  6E0C               	movwf	_LCD_GoTo$1343^0,c
  8439  003664  500B               	movf	(??_LCD_GoTo+1)^0,w,c
  8440  003666  6E0D               	movwf	(_LCD_GoTo$1343+1)^0,c
  8441  003668                     l4108:
  8442  003668  C00C  F00E         	movff	_LCD_GoTo$1343,LCD_GoTo@iPos
  8443  00366C                     l4110:
  8444                           
  8445                           ;LCD.c: 75: LCD_WriteCmd (0x80 | iPos, 40+10);
  8446  00366C  0E00               	movlw	0
  8447  00366E  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  8448  003670  0E32               	movlw	50
  8449  003672  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  8450  003674  500E               	movf	LCD_GoTo@iPos^0,w,c
  8451  003676  0980               	iorlw	128
  8452  003678  EC2C  F01A         	call	_LCD_WriteCmd
  8453  00367C  0012               	return		;funcret
  8454  00367E                     __end_of_LCD_GoTo:
  8455                           	callstack 0
  8456                           
  8457 ;; *************** function _LCD_WriteCmd *****************
  8458 ;; Defined at:
  8459 ;;		line 33 in file "LCD.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;  iCmd            1    wreg     unsigned char 
  8462 ;;  iDelay          2    1[COMRAM] unsigned int 
  8463 ;; Auto vars:     Size  Location     Type
  8464 ;;  iCmd            1    7[COMRAM] unsigned char 
  8465 ;;  i               2    5[COMRAM] int 
  8466 ;; Return value:  Size  Location     Type
  8467 ;;                  1    wreg      void 
  8468 ;; Registers used:
  8469 ;;		wreg, status,2, status,0
  8470 ;; Tracked objects:
  8471 ;;		On entry : 0/0
  8472 ;;		On exit  : 0/0
  8473 ;;		Unchanged: 0/0
  8474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8475 ;;      Params:         2       0       0       0       0       0       0       0       0
  8476 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8477 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8478 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8479 ;;Total ram usage:        7 bytes
  8480 ;; Hardware stack levels used: 1
  8481 ;; Hardware stack levels required when called: 4
  8482 ;; This function calls:
  8483 ;;		Nothing
  8484 ;; This function is called by:
  8485 ;;		_LCD_Init
  8486 ;;		_LCD_GoTo
  8487 ;;		_LCD_ClearScreen
  8488 ;; This function uses a non-reentrant model
  8489 ;;
  8490                           
  8491                           	psect	text36
  8492  003458                     __ptext36:
  8493                           	callstack 0
  8494  003458                     _LCD_WriteCmd:
  8495                           	callstack 25
  8496                           
  8497                           ;incstack = 0
  8498                           ;LCD_WriteCmd@iCmd stored from wreg
  8499  003458  6E08               	movwf	LCD_WriteCmd@iCmd^0,c
  8500  00345A  9689               	bcf	137,3,c	;volatile
  8501  00345C  9489               	bcf	137,2,c	;volatile
  8502  00345E                     
  8503                           ;LCD.c: 37: LATB = iCmd;
  8504  00345E  C008  FF8A         	movff	LCD_WriteCmd@iCmd,3978	;volatile
  8505  003462                     
  8506                           ;LCD.c: 38: LATC6 = iCmd>>6;
  8507  003462  C008  F004         	movff	LCD_WriteCmd@iCmd,??_LCD_WriteCmd
  8508  003466  0E06               	movlw	6
  8509  003468  6E05               	movwf	(??_LCD_WriteCmd+1)^0,c
  8510  00346A                     u3525:
  8511  00346A  90D8               	bcf	status,0,c
  8512  00346C  3204               	rrcf	??_LCD_WriteCmd^0,f,c
  8513  00346E  2E05               	decfsz	(??_LCD_WriteCmd+1)^0,f,c
  8514  003470  EF35  F01A         	goto	u3525
  8515  003474  3004               	rrcf	??_LCD_WriteCmd^0,w,c
  8516  003476  B0D8               	btfsc	status,0,c
  8517  003478  EF40  F01A         	goto	u3531
  8518  00347C  EF43  F01A         	goto	u3530
  8519  003480                     u3531:
  8520  003480  8C8B               	bsf	3979,6,c	;volatile
  8521  003482  EF44  F01A         	goto	u3545
  8522  003486                     u3530:
  8523  003486  9C8B               	bcf	3979,6,c	;volatile
  8524  003488                     u3545:
  8525  003488                     
  8526                           ;LCD.c: 39: LATC7 = iCmd>>7;
  8527  003488  6A04               	clrf	??_LCD_WriteCmd^0,c
  8528  00348A  AE08               	btfss	LCD_WriteCmd@iCmd^0,7,c
  8529  00348C  D001               	bra	u3555
  8530  00348E  2A04               	incf	??_LCD_WriteCmd^0,f,c
  8531  003490                     u3555:
  8532  003490  3004               	rrcf	??_LCD_WriteCmd^0,w,c
  8533  003492  B0D8               	btfsc	status,0,c
  8534  003494  EF4E  F01A         	goto	u3561
  8535  003498  EF51  F01A         	goto	u3560
  8536  00349C                     u3561:
  8537  00349C  8E8B               	bsf	3979,7,c	;volatile
  8538  00349E  EF52  F01A         	goto	u3575
  8539  0034A2                     u3560:
  8540  0034A2  9E8B               	bcf	3979,7,c	;volatile
  8541  0034A4                     u3575:
  8542  0034A4  8289               	bsf	137,1,c	;volatile
  8543  0034A6  9289               	bcf	137,1,c	;volatile
  8544  0034A8                     
  8545                           ;LCD.c: 42: for (int i = 0; i<iDelay; i++)
  8546  0034A8  0E00               	movlw	0
  8547  0034AA  6E07               	movwf	(LCD_WriteCmd@i+1)^0,c
  8548  0034AC  0E00               	movlw	0
  8549  0034AE  6E06               	movwf	LCD_WriteCmd@i^0,c
  8550  0034B0  EF5D  F01A         	goto	l3842
  8551  0034B4                     l557:
  8552                           
  8553                           ;LCD.c: 43: _delay((unsigned long)((1)*(8000000/4000000.0)));
  8554  0034B4  D000               	nop2		;2 cycle nop
  8555  0034B6  4A06               	infsnz	LCD_WriteCmd@i^0,f,c
  8556  0034B8  2A07               	incf	(LCD_WriteCmd@i+1)^0,f,c
  8557  0034BA                     l3842:
  8558  0034BA  5002               	movf	LCD_WriteCmd@iDelay^0,w,c
  8559  0034BC  5C06               	subwf	LCD_WriteCmd@i^0,w,c
  8560  0034BE  5003               	movf	(LCD_WriteCmd@iDelay+1)^0,w,c
  8561  0034C0  5807               	subwfb	(LCD_WriteCmd@i+1)^0,w,c
  8562  0034C2  A0D8               	btfss	status,0,c
  8563  0034C4  EF66  F01A         	goto	u3581
  8564  0034C8  EF68  F01A         	goto	u3580
  8565  0034CC                     u3581:
  8566  0034CC  EF5A  F01A         	goto	l557
  8567  0034D0                     u3580:
  8568  0034D0  0012               	return		;funcret
  8569  0034D2                     __end_of_LCD_WriteCmd:
  8570                           	callstack 0
  8571                           
  8572 ;; *************** function _CCP2_Init *****************
  8573 ;; Defined at:
  8574 ;;		line 22 in file "CCP2.c"
  8575 ;; Parameters:    Size  Location     Type
  8576 ;;		None
  8577 ;; Auto vars:     Size  Location     Type
  8578 ;;		None
  8579 ;; Return value:  Size  Location     Type
  8580 ;;                  1    wreg      void 
  8581 ;; Registers used:
  8582 ;;		wreg, status,2
  8583 ;; Tracked objects:
  8584 ;;		On entry : 0/0
  8585 ;;		On exit  : 0/0
  8586 ;;		Unchanged: 0/0
  8587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8588 ;;      Params:         0       0       0       0       0       0       0       0       0
  8589 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8591 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8592 ;;Total ram usage:        0 bytes
  8593 ;; Hardware stack levels used: 1
  8594 ;; Hardware stack levels required when called: 4
  8595 ;; This function calls:
  8596 ;;		Nothing
  8597 ;; This function is called by:
  8598 ;;		_main
  8599 ;; This function uses a non-reentrant model
  8600 ;;
  8601                           
  8602                           	psect	text37
  8603  0038F6                     __ptext37:
  8604                           	callstack 0
  8605  0038F6                     _CCP2_Init:
  8606                           	callstack 26
  8607  0038F6                     
  8608                           ;CCP2.c: 25: CCP2CON = 0x0C;
  8609  0038F6  0E0C               	movlw	12
  8610  0038F8  6EBA               	movwf	186,c	;volatile
  8611                           
  8612                           ;CCP2.c: 26: CCPR2L = 99>>2;
  8613  0038FA  0E18               	movlw	24
  8614  0038FC  6EBB               	movwf	187,c	;volatile
  8615                           
  8616                           ;CCP2.c: 27: CCP2CONbits.DC2B = 99 & 0x03;
  8617  0038FE  0E30               	movlw	48
  8618  003900  12BA               	iorwf	186,f,c	;volatile
  8619                           
  8620                           ;CCP2.c: 28: CCPR2H = 0x00;
  8621  003902  0E00               	movlw	0
  8622  003904  6EBC               	movwf	188,c	;volatile
  8623  003906  0012               	return		;funcret
  8624  003908                     __end_of_CCP2_Init:
  8625                           	callstack 0
  8626                           
  8627 ;; *************** function _CCP1_Init *****************
  8628 ;; Defined at:
  8629 ;;		line 13 in file "CCP1.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;		None
  8632 ;; Auto vars:     Size  Location     Type
  8633 ;;		None
  8634 ;; Return value:  Size  Location     Type
  8635 ;;                  1    wreg      void 
  8636 ;; Registers used:
  8637 ;;		wreg, status,2
  8638 ;; Tracked objects:
  8639 ;;		On entry : 0/0
  8640 ;;		On exit  : 0/0
  8641 ;;		Unchanged: 0/0
  8642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8643 ;;      Params:         0       0       0       0       0       0       0       0       0
  8644 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8646 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8647 ;;Total ram usage:        0 bytes
  8648 ;; Hardware stack levels used: 1
  8649 ;; Hardware stack levels required when called: 4
  8650 ;; This function calls:
  8651 ;;		Nothing
  8652 ;; This function is called by:
  8653 ;;		_main
  8654 ;; This function uses a non-reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text38
  8658  003908                     __ptext38:
  8659                           	callstack 0
  8660  003908                     _CCP1_Init:
  8661                           	callstack 26
  8662  003908                     
  8663                           ;CCP1.c: 17: CCP1CON = 0x00;
  8664  003908  0E00               	movlw	0
  8665  00390A  6EBD               	movwf	189,c	;volatile
  8666                           
  8667                           ;CCP1.c: 19: CCPR1H = 0x00;
  8668  00390C  0E00               	movlw	0
  8669  00390E  6EBF               	movwf	191,c	;volatile
  8670                           
  8671                           ;CCP1.c: 20: CCPR1L = 0x00;
  8672  003910  0E00               	movlw	0
  8673  003912  6EBE               	movwf	190,c	;volatile
  8674  003914                     
  8675                           ;CCP1.c: 22: PIR1bits.CCP1IF = 0;
  8676  003914  949E               	bcf	158,2,c	;volatile
  8677  003916                     
  8678                           ;CCP1.c: 23: PIE1bits.CCP1IE = 0;
  8679  003916  949D               	bcf	157,2,c	;volatile
  8680  003918  0012               	return		;funcret
  8681  00391A                     __end_of_CCP1_Init:
  8682                           	callstack 0
  8683                           
  8684 ;; *************** function _INTERRUPT_InterruptManager *****************
  8685 ;; Defined at:
  8686 ;;		line 15 in file "Interrupt_Mgr.c"
  8687 ;; Parameters:    Size  Location     Type
  8688 ;;		None
  8689 ;; Auto vars:     Size  Location     Type
  8690 ;;		None
  8691 ;; Return value:  Size  Location     Type
  8692 ;;                  1    wreg      void 
  8693 ;; Registers used:
  8694 ;;		wreg, status,2, status,0, cstack
  8695 ;; Tracked objects:
  8696 ;;		On entry : 0/0
  8697 ;;		On exit  : 0/0
  8698 ;;		Unchanged: 0/0
  8699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8700 ;;      Params:         0       0       0       0       0       0       0       0       0
  8701 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8702 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8703 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8704 ;;Total ram usage:        0 bytes
  8705 ;; Hardware stack levels used: 1
  8706 ;; Hardware stack levels required when called: 3
  8707 ;; This function calls:
  8708 ;;		_CCP1_ISR
  8709 ;;		_Timer0_ISR
  8710 ;;		_Timer2_ISR
  8711 ;;		_Timer3_ISR
  8712 ;; This function is called by:
  8713 ;;		Interrupt level 2
  8714 ;; This function uses a non-reentrant model
  8715 ;;
  8716                           
  8717                           	psect	intcode
  8718  000008                     __pintcode:
  8719                           	callstack 0
  8720  000008                     _INTERRUPT_InterruptManager:
  8721                           	callstack 21
  8722                           
  8723                           ;incstack = 0
  8724  000008  825D               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8725  00000A  ED5C  F019         	call	int_func,f	;refresh shadow registers
  8726                           
  8727                           	psect	intcode_body
  8728  0032B8                     __pintcode_body:
  8729                           	callstack 21
  8730  0032B8                     int_func:
  8731                           	callstack 21
  8732  0032B8  0006               	pop		; remove dummy address from shadow register refresh
  8733  0032BA                     
  8734                           ;Interrupt_Mgr.c: 18: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
  8735  0032BA  AAF2               	btfss	242,5,c	;volatile
  8736  0032BC  EF62  F019         	goto	i2u448_41
  8737  0032C0  EF64  F019         	goto	i2u448_40
  8738  0032C4                     i2u448_41:
  8739  0032C4  EF6F  F019         	goto	i2l53
  8740  0032C8                     i2u448_40:
  8741  0032C8  A4F2               	btfss	242,2,c	;volatile
  8742  0032CA  EF69  F019         	goto	i2u449_41
  8743  0032CE  EF6B  F019         	goto	i2u449_40
  8744  0032D2                     i2u449_41:
  8745  0032D2  EF6F  F019         	goto	i2l53
  8746  0032D6                     i2u449_40:
  8747  0032D6                     
  8748                           ;Interrupt_Mgr.c: 19: {;Interrupt_Mgr.c: 20: Timer0_ISR();
  8749  0032D6  ECAE  F019         	call	_Timer0_ISR	;wreg free
  8750                           
  8751                           ;Interrupt_Mgr.c: 21: }
  8752  0032DA  EFAC  F019         	goto	i2l63
  8753  0032DE                     i2l53:
  8754                           
  8755                           ;Interrupt_Mgr.c: 22: else if(INTCONbits.PEIE == 1)
  8756  0032DE  ACF2               	btfss	242,6,c	;volatile
  8757  0032E0  EF74  F019         	goto	i2u450_41
  8758  0032E4  EF76  F019         	goto	i2u450_40
  8759  0032E8                     i2u450_41:
  8760  0032E8  EFAC  F019         	goto	i2l63
  8761  0032EC                     i2u450_40:
  8762  0032EC                     
  8763                           ;Interrupt_Mgr.c: 23: {;Interrupt_Mgr.c: 24: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF 
      +                          == 1)
  8764  0032EC  A2A0               	btfss	160,1,c	;volatile
  8765  0032EE  EF7B  F019         	goto	i2u451_41
  8766  0032F2  EF7D  F019         	goto	i2u451_40
  8767  0032F6                     i2u451_41:
  8768  0032F6  EF88  F019         	goto	i2l56
  8769  0032FA                     i2u451_40:
  8770  0032FA  A2A1               	btfss	161,1,c	;volatile
  8771  0032FC  EF82  F019         	goto	i2u452_41
  8772  003300  EF84  F019         	goto	i2u452_40
  8773  003304                     i2u452_41:
  8774  003304  EF88  F019         	goto	i2l56
  8775  003308                     i2u452_40:
  8776  003308                     
  8777                           ;Interrupt_Mgr.c: 25: {;Interrupt_Mgr.c: 26: Timer3_ISR();
  8778  003308  EC98  F01B         	call	_Timer3_ISR	;wreg free
  8779                           
  8780                           ;Interrupt_Mgr.c: 27: }
  8781  00330C  EFAC  F019         	goto	i2l63
  8782  003310                     i2l56:
  8783                           
  8784                           ;Interrupt_Mgr.c: 28: else if(PIE1bits.CCP1IE == 1 && PIR1bits.CCP1IF == 1)
  8785  003310  A49D               	btfss	157,2,c	;volatile
  8786  003312  EF8D  F019         	goto	i2u453_41
  8787  003316  EF8F  F019         	goto	i2u453_40
  8788  00331A                     i2u453_41:
  8789  00331A  EF9A  F019         	goto	i2l58
  8790  00331E                     i2u453_40:
  8791  00331E  A49E               	btfss	158,2,c	;volatile
  8792  003320  EF94  F019         	goto	i2u454_41
  8793  003324  EF96  F019         	goto	i2u454_40
  8794  003328                     i2u454_41:
  8795  003328  EF9A  F019         	goto	i2l58
  8796  00332C                     i2u454_40:
  8797  00332C                     
  8798                           ;Interrupt_Mgr.c: 29: {;Interrupt_Mgr.c: 30: CCP1_ISR();
  8799  00332C  EC3E  F01C         	call	_CCP1_ISR	;wreg free
  8800                           
  8801                           ;Interrupt_Mgr.c: 31: }
  8802  003330  EFAC  F019         	goto	i2l63
  8803  003334                     i2l58:
  8804                           
  8805                           ;Interrupt_Mgr.c: 32: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  8806  003334  A29D               	btfss	157,1,c	;volatile
  8807  003336  EF9F  F019         	goto	i2u455_41
  8808  00333A  EFA1  F019         	goto	i2u455_40
  8809  00333E                     i2u455_41:
  8810  00333E  EFAC  F019         	goto	i2l57
  8811  003342                     i2u455_40:
  8812  003342  A29E               	btfss	158,1,c	;volatile
  8813  003344  EFA6  F019         	goto	i2u456_41
  8814  003348  EFA8  F019         	goto	i2u456_40
  8815  00334C                     i2u456_41:
  8816  00334C  EFAC  F019         	goto	i2l57
  8817  003350                     i2u456_40:
  8818  003350                     
  8819                           ;Interrupt_Mgr.c: 33: {;Interrupt_Mgr.c: 34: Timer2_ISR();
  8820  003350  ECA5  F01C         	call	_Timer2_ISR	;wreg free
  8821                           
  8822                           ;Interrupt_Mgr.c: 35: }
  8823  003354  EFAC  F019         	goto	i2l63
  8824  003358                     i2l57:
  8825  003358                     i2l63:
  8826  003358  925D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8827  00335A  0011               	retfie		f
  8828  00335C                     __end_of_INTERRUPT_InterruptManager:
  8829                           	callstack 0
  8830                           
  8831 ;; *************** function _Timer3_ISR *****************
  8832 ;; Defined at:
  8833 ;;		line 20 in file "Timer_3.c"
  8834 ;; Parameters:    Size  Location     Type
  8835 ;;		None
  8836 ;; Auto vars:     Size  Location     Type
  8837 ;;		None
  8838 ;; Return value:  Size  Location     Type
  8839 ;;                  1    wreg      void 
  8840 ;; Registers used:
  8841 ;;		wreg, status,2, status,0
  8842 ;; Tracked objects:
  8843 ;;		On entry : 0/0
  8844 ;;		On exit  : 0/0
  8845 ;;		Unchanged: 0/0
  8846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8847 ;;      Params:         0       0       0       0       0       0       0       0       0
  8848 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8850 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8851 ;;Total ram usage:        0 bytes
  8852 ;; Hardware stack levels used: 1
  8853 ;; This function calls:
  8854 ;;		Nothing
  8855 ;; This function is called by:
  8856 ;;		_INTERRUPT_InterruptManager
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           	psect	text40
  8861  003730                     __ptext40:
  8862                           	callstack 0
  8863  003730                     _Timer3_ISR:
  8864                           	callstack 23
  8865  003730                     
  8866                           ;Timer_3.c: 22: T3CONbits.TMR3ON = 0;
  8867  003730  90B1               	bcf	177,0,c	;volatile
  8868  003732                     
  8869                           ;Timer_3.c: 23: TMR3H = (uint8_t)(Timer3_Reload>>8);
  8870  003732  0100               	movlb	0	; () banked
  8871  003734  51F4               	movf	(_Timer3_Reload+1)& (0+255),w,b
  8872  003736  6EB3               	movwf	179,c	;volatile
  8873  003738                     
  8874                           ; BSR set to: 0
  8875                           ;Timer_3.c: 24: TMR3L = (uint8_t) Timer3_Reload;
  8876  003738  C0F3  FFB2         	movff	_Timer3_Reload,4018	;volatile
  8877  00373C                     
  8878                           ; BSR set to: 0
  8879                           ;Timer_3.c: 26: PIR2bits.TMR3IF = 0;
  8880  00373C  92A1               	bcf	161,1,c	;volatile
  8881  00373E                     
  8882                           ; BSR set to: 0
  8883                           ;Timer_3.c: 27: T3CONbits.TMR3ON = 1;
  8884  00373E  80B1               	bsf	177,0,c	;volatile
  8885  003740                     
  8886                           ; BSR set to: 0
  8887                           ;Timer_3.c: 29: Timer3_Cntr ++;
  8888  003740  4BCF               	infsnz	_Timer3_Cntr& (0+255),f,b
  8889  003742  2BD0               	incf	(_Timer3_Cntr+1)& (0+255),f,b
  8890  003744                     
  8891                           ; BSR set to: 0
  8892                           ;Timer_3.c: 30: if (Timer3_Sampling)
  8893  003744  51DA               	movf	_Timer3_Sampling& (0+255),w,b
  8894  003746  B4D8               	btfsc	status,2,c
  8895  003748  EFA8  F01B         	goto	i2u436_41
  8896  00374C  EFAA  F01B         	goto	i2u436_40
  8897  003750                     i2u436_41:
  8898  003750  EFB1  F01B         	goto	i2l4364
  8899  003754                     i2u436_40:
  8900  003754                     
  8901                           ; BSR set to: 0
  8902                           ;Timer_3.c: 31: {;Timer_3.c: 32: Timer3_Sampling = 0;
  8903  003754  0E00               	movlw	0
  8904  003756  6FDA               	movwf	_Timer3_Sampling& (0+255),b
  8905  003758                     
  8906                           ; BSR set to: 0
  8907                           ;Timer_3.c: 33: LATAbits.LATA5 = 1;
  8908  003758  8A89               	bsf	137,5,c	;volatile
  8909                           
  8910                           ;Timer_3.c: 34: Timer3_Cntr = 0;
  8911  00375A  0E00               	movlw	0
  8912  00375C  6FD0               	movwf	(_Timer3_Cntr+1)& (0+255),b
  8913  00375E  0E00               	movlw	0
  8914  003760  6FCF               	movwf	_Timer3_Cntr& (0+255),b
  8915  003762                     i2l4364:
  8916                           
  8917                           ; BSR set to: 0
  8918                           ;Timer_3.c: 36: };Timer_3.c: 37: if (Timer3_Cntr >= 10)
  8919  003762  51D0               	movf	(_Timer3_Cntr+1)& (0+255),w,b
  8920  003764  E109               	bnz	i2u437_40
  8921  003766  0E0A               	movlw	10
  8922  003768  5DCF               	subwf	_Timer3_Cntr& (0+255),w,b
  8923  00376A  A0D8               	btfss	status,0,c
  8924  00376C  EFBA  F01B         	goto	i2u437_41
  8925  003770  EFBC  F01B         	goto	i2u437_40
  8926  003774                     i2u437_41:
  8927  003774  EFBF  F01B         	goto	i2l248
  8928  003778                     i2u437_40:
  8929  003778                     
  8930                           ; BSR set to: 0
  8931                           ;Timer_3.c: 38: {;Timer_3.c: 39: Timer3_Sampling = 1;
  8932  003778  0E01               	movlw	1
  8933  00377A  6FDA               	movwf	_Timer3_Sampling& (0+255),b
  8934  00377C                     
  8935                           ; BSR set to: 0
  8936                           ;Timer_3.c: 40: LATAbits.LATA5 = 0;
  8937  00377C  9A89               	bcf	137,5,c	;volatile
  8938  00377E                     i2l248:
  8939                           
  8940                           ; BSR set to: 0
  8941  00377E  0012               	return		;funcret
  8942  003780                     __end_of_Timer3_ISR:
  8943                           	callstack 0
  8944                           
  8945 ;; *************** function _Timer2_ISR *****************
  8946 ;; Defined at:
  8947 ;;		line 9 in file "Timer_2.c"
  8948 ;; Parameters:    Size  Location     Type
  8949 ;;		None
  8950 ;; Auto vars:     Size  Location     Type
  8951 ;;		None
  8952 ;; Return value:  Size  Location     Type
  8953 ;;                  1    wreg      void 
  8954 ;; Registers used:
  8955 ;;		wreg, status,2
  8956 ;; Tracked objects:
  8957 ;;		On entry : 0/0
  8958 ;;		On exit  : 0/0
  8959 ;;		Unchanged: 0/0
  8960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8961 ;;      Params:         0       0       0       0       0       0       0       0       0
  8962 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8963 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8964 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8965 ;;Total ram usage:        0 bytes
  8966 ;; Hardware stack levels used: 1
  8967 ;; This function calls:
  8968 ;;		Nothing
  8969 ;; This function is called by:
  8970 ;;		_INTERRUPT_InterruptManager
  8971 ;; This function uses a non-reentrant model
  8972 ;;
  8973                           
  8974                           	psect	text41
  8975  00394A                     __ptext41:
  8976                           	callstack 0
  8977  00394A                     _Timer2_ISR:
  8978                           	callstack 23
  8979  00394A                     
  8980                           ;Timer_2.c: 14: T2CONbits.TMR2ON = 0;
  8981  00394A  94CA               	bcf	202,2,c	;volatile
  8982  00394C                     
  8983                           ;Timer_2.c: 16: TMR2 = 0;
  8984  00394C  0E00               	movlw	0
  8985  00394E  6ECC               	movwf	204,c	;volatile
  8986  003950                     
  8987                           ;Timer_2.c: 17: PIE1bits.TMR2IE = 0;
  8988  003950  929D               	bcf	157,1,c	;volatile
  8989  003952                     
  8990                           ;Timer_2.c: 18: PIR1bits.TMR2IF = 0;
  8991  003952  929E               	bcf	158,1,c	;volatile
  8992  003954  0012               	return		;funcret
  8993  003956                     __end_of_Timer2_ISR:
  8994                           	callstack 0
  8995                           
  8996 ;; *************** function _Timer0_ISR *****************
  8997 ;; Defined at:
  8998 ;;		line 19 in file "Timer_0.c"
  8999 ;; Parameters:    Size  Location     Type
  9000 ;;		None
  9001 ;; Auto vars:     Size  Location     Type
  9002 ;;		None
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  1    wreg      void 
  9005 ;; Registers used:
  9006 ;;		wreg, status,2, status,0, cstack
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9012 ;;      Params:         0       0       0       0       0       0       0       0       0
  9013 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9014 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9015 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9016 ;;Total ram usage:        1 bytes
  9017 ;; Hardware stack levels used: 1
  9018 ;; Hardware stack levels required when called: 2
  9019 ;; This function calls:
  9020 ;;		_StartDepthDetection
  9021 ;; This function is called by:
  9022 ;;		_INTERRUPT_InterruptManager
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	text42
  9027  00335C                     __ptext42:
  9028                           	callstack 0
  9029  00335C                     _Timer0_ISR:
  9030                           	callstack 21
  9031  00335C                     
  9032                           ;Timer_0.c: 20: TMR0H = Timer0_Reload >> 8;
  9033  00335C  0100               	movlb	0	; () banked
  9034  00335E  51F6               	movf	(_Timer0_Reload+1)& (0+255),w,b
  9035  003360  6ED7               	movwf	215,c	;volatile
  9036  003362                     
  9037                           ; BSR set to: 0
  9038                           ;Timer_0.c: 21: TMR0L = Timer0_Reload;
  9039  003362  C0F5  FFD6         	movff	_Timer0_Reload,4054	;volatile
  9040  003366                     
  9041                           ; BSR set to: 0
  9042                           ;Timer_0.c: 22: INTCONbits.TMR0IF = 0;
  9043  003366  94F2               	bcf	242,2,c	;volatile
  9044  003368                     
  9045                           ; BSR set to: 0
  9046                           ;Timer_0.c: 24: if (LATAbits.LATA5 == 0) LATAbits.LATA5 = 1;
  9047  003368  BA89               	btfsc	137,5,c	;volatile
  9048  00336A  EFB9  F019         	goto	i2u431_41
  9049  00336E  EFBB  F019         	goto	i2u431_40
  9050  003372                     i2u431_41:
  9051  003372  EFBC  F019         	goto	i2l4328
  9052  003376                     i2u431_40:
  9053  003376                     
  9054                           ; BSR set to: 0
  9055  003376  8A89               	bsf	137,5,c	;volatile
  9056  003378                     i2l4328:
  9057                           
  9058                           ; BSR set to: 0
  9059                           ;Timer_0.c: 25: if (++iSampleCntr == 10)
  9060  003378  2BDB               	incf	_iSampleCntr& (0+255),f,b
  9061  00337A  0E0A               	movlw	10
  9062  00337C  19DB               	xorwf	_iSampleCntr& (0+255),w,b
  9063  00337E  A4D8               	btfss	status,2,c
  9064  003380  EFC4  F019         	goto	i2u432_41
  9065  003384  EFC6  F019         	goto	i2u432_40
  9066  003388                     i2u432_41:
  9067  003388  EFCB  F019         	goto	i2l4336
  9068  00338C                     i2u432_40:
  9069  00338C                     
  9070                           ; BSR set to: 0
  9071                           ;Timer_0.c: 26: {;Timer_0.c: 27: LATAbits.LATA5 = 0;
  9072  00338C  9A89               	bcf	137,5,c	;volatile
  9073  00338E                     
  9074                           ; BSR set to: 0
  9075                           ;Timer_0.c: 28: iSampleCntr = 0;
  9076  00338E  0E00               	movlw	0
  9077  003390  6FDB               	movwf	_iSampleCntr& (0+255),b
  9078  003392                     
  9079                           ; BSR set to: 0
  9080                           ;Timer_0.c: 29: StartDepthDetection();
  9081  003392  EC8D  F01C         	call	_StartDepthDetection	;wreg free
  9082  003396                     i2l4336:
  9083                           
  9084                           ;Timer_0.c: 30: };Timer_0.c: 32: if (++imSCntr == 200)
  9085  003396  0100               	movlb	0	; () banked
  9086  003398  4BD1               	infsnz	_imSCntr& (0+255),f,b
  9087  00339A  2BD2               	incf	(_imSCntr+1)& (0+255),f,b
  9088  00339C  0EC8               	movlw	200
  9089  00339E  19D1               	xorwf	_imSCntr& (0+255),w,b
  9090  0033A0  11D2               	iorwf	(_imSCntr+1)& (0+255),w,b
  9091  0033A2  A4D8               	btfss	status,2,c
  9092  0033A4  EFD6  F019         	goto	i2u433_41
  9093  0033A8  EFD8  F019         	goto	i2u433_40
  9094  0033AC                     i2u433_41:
  9095  0033AC  EFEE  F019         	goto	i2l135
  9096  0033B0                     i2u433_40:
  9097  0033B0                     
  9098                           ; BSR set to: 0
  9099                           ;Timer_0.c: 33: {;Timer_0.c: 34: PORTCbits.RC0 = !PORTCbits.RC0;
  9100  0033B0  A082               	btfss	130,0,c	;volatile
  9101  0033B2  EFDD  F019         	goto	i2u434_41
  9102  0033B6  EFE1  F019         	goto	i2u434_40
  9103  0033BA                     i2u434_41:
  9104  0033BA  6A01               	clrf	??_Timer0_ISR^0,c
  9105  0033BC  2A01               	incf	??_Timer0_ISR^0,f,c
  9106  0033BE  EFE2  F019         	goto	i2u435_48
  9107  0033C2                     i2u434_40:
  9108  0033C2  6A01               	clrf	??_Timer0_ISR^0,c
  9109  0033C4                     i2u435_48:
  9110  0033C4  5082               	movf	130,w,c	;volatile
  9111  0033C6  1801               	xorwf	??_Timer0_ISR^0,w,c
  9112  0033C8  0BFE               	andlw	-2
  9113  0033CA  1801               	xorwf	??_Timer0_ISR^0,w,c
  9114  0033CC  6E82               	movwf	130,c	;volatile
  9115  0033CE                     
  9116                           ;Timer_0.c: 35: gb_UpdateTime = 1;
  9117  0033CE  0E01               	movlw	1
  9118  0033D0  0100               	movlb	0	; () banked
  9119  0033D2  6FE0               	movwf	_gb_UpdateTime& (0+255),b	;volatile
  9120  0033D4                     
  9121                           ; BSR set to: 0
  9122                           ;Timer_0.c: 36: imSCntr = 0;
  9123  0033D4  0E00               	movlw	0
  9124  0033D6  6FD2               	movwf	(_imSCntr+1)& (0+255),b
  9125  0033D8  0E00               	movlw	0
  9126  0033DA  6FD1               	movwf	_imSCntr& (0+255),b
  9127  0033DC                     i2l135:
  9128                           
  9129                           ; BSR set to: 0
  9130  0033DC  0012               	return		;funcret
  9131  0033DE                     __end_of_Timer0_ISR:
  9132                           	callstack 0
  9133                           
  9134 ;; *************** function _StartDepthDetection *****************
  9135 ;; Defined at:
  9136 ;;		line 21 in file "Timer_2.c"
  9137 ;; Parameters:    Size  Location     Type
  9138 ;;		None
  9139 ;; Auto vars:     Size  Location     Type
  9140 ;;		None
  9141 ;; Return value:  Size  Location     Type
  9142 ;;                  1    wreg      void 
  9143 ;; Registers used:
  9144 ;;		wreg, status,2, cstack
  9145 ;; Tracked objects:
  9146 ;;		On entry : 0/0
  9147 ;;		On exit  : 0/0
  9148 ;;		Unchanged: 0/0
  9149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9150 ;;      Params:         0       0       0       0       0       0       0       0       0
  9151 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9153 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9154 ;;Total ram usage:        0 bytes
  9155 ;; Hardware stack levels used: 1
  9156 ;; Hardware stack levels required when called: 1
  9157 ;; This function calls:
  9158 ;;		_CCP1_Activate
  9159 ;; This function is called by:
  9160 ;;		_Timer0_ISR
  9161 ;; This function uses a non-reentrant model
  9162 ;;
  9163                           
  9164                           	psect	text43
  9165  00391A                     __ptext43:
  9166                           	callstack 0
  9167  00391A                     _StartDepthDetection:
  9168                           	callstack 21
  9169  00391A                     
  9170                           ;Timer_2.c: 27: TMR2 = 0;
  9171  00391A  0E00               	movlw	0
  9172  00391C  6ECC               	movwf	204,c	;volatile
  9173  00391E                     
  9174                           ;Timer_2.c: 28: PIR1bits.TMR2IF = 0;
  9175  00391E  929E               	bcf	158,1,c	;volatile
  9176  003920                     
  9177                           ;Timer_2.c: 29: PIE1bits.TMR2IE = 1;
  9178  003920  829D               	bsf	157,1,c	;volatile
  9179  003922                     
  9180                           ;Timer_2.c: 30: T2CONbits.TMR2ON = 1;
  9181  003922  84CA               	bsf	202,2,c	;volatile
  9182  003924                     
  9183                           ;Timer_2.c: 31: CCP1_Activate();
  9184  003924  EC96  F01C         	call	_CCP1_Activate	;wreg free
  9185  003928                     
  9186                           ;Timer_2.c: 32: T1CONbits.TMR1ON = 1;
  9187  003928  80CD               	bsf	205,0,c	;volatile
  9188  00392A  0012               	return		;funcret
  9189  00392C                     __end_of_StartDepthDetection:
  9190                           	callstack 0
  9191                           
  9192 ;; *************** function _CCP1_Activate *****************
  9193 ;; Defined at:
  9194 ;;		line 49 in file "CCP1.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;		None
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;		None
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  1    wreg      void 
  9201 ;; Registers used:
  9202 ;;		wreg, status,2
  9203 ;; Tracked objects:
  9204 ;;		On entry : 0/0
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9208 ;;      Params:         0       0       0       0       0       0       0       0       0
  9209 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9210 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9211 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9212 ;;Total ram usage:        0 bytes
  9213 ;; Hardware stack levels used: 1
  9214 ;; This function calls:
  9215 ;;		Nothing
  9216 ;; This function is called by:
  9217 ;;		_StartDepthDetection
  9218 ;; This function uses a non-reentrant model
  9219 ;;
  9220                           
  9221                           	psect	text44
  9222  00392C                     __ptext44:
  9223                           	callstack 0
  9224  00392C                     _CCP1_Activate:
  9225                           	callstack 21
  9226  00392C                     
  9227                           ;CCP1.c: 51: CCPR1H = 0;
  9228  00392C  0E00               	movlw	0
  9229  00392E  6EBF               	movwf	191,c	;volatile
  9230                           
  9231                           ;CCP1.c: 52: CCPR1L = 0;
  9232  003930  0E00               	movlw	0
  9233  003932  6EBE               	movwf	190,c	;volatile
  9234                           
  9235                           ;CCP1.c: 53: CCP1CON = 0x04;
  9236  003934  0E04               	movlw	4
  9237  003936  6EBD               	movwf	189,c	;volatile
  9238  003938                     
  9239                           ;CCP1.c: 54: PIR1bits.CCP1IF = 0;
  9240  003938  949E               	bcf	158,2,c	;volatile
  9241  00393A                     
  9242                           ;CCP1.c: 55: PIE1bits.CCP1IE = 1;
  9243  00393A  849D               	bsf	157,2,c	;volatile
  9244  00393C  0012               	return		;funcret
  9245  00393E                     __end_of_CCP1_Activate:
  9246                           	callstack 0
  9247                           
  9248 ;; *************** function _CCP1_ISR *****************
  9249 ;; Defined at:
  9250 ;;		line 32 in file "CCP1.c"
  9251 ;; Parameters:    Size  Location     Type
  9252 ;;		None
  9253 ;; Auto vars:     Size  Location     Type
  9254 ;;		None
  9255 ;; Return value:  Size  Location     Type
  9256 ;;                  1    wreg      void 
  9257 ;; Registers used:
  9258 ;;		wreg, status,2, cstack
  9259 ;; Tracked objects:
  9260 ;;		On entry : 0/0
  9261 ;;		On exit  : 0/0
  9262 ;;		Unchanged: 0/0
  9263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9264 ;;      Params:         0       0       0       0       0       0       0       0       0
  9265 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9266 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9267 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9268 ;;Total ram usage:        0 bytes
  9269 ;; Hardware stack levels used: 1
  9270 ;; Hardware stack levels required when called: 1
  9271 ;; This function calls:
  9272 ;;		_Timer1_Reset
  9273 ;; This function is called by:
  9274 ;;		_INTERRUPT_InterruptManager
  9275 ;; This function uses a non-reentrant model
  9276 ;;
  9277                           
  9278                           	psect	text45
  9279  00387C                     __ptext45:
  9280                           	callstack 0
  9281  00387C                     _CCP1_ISR:
  9282                           	callstack 22
  9283  00387C                     
  9284                           ;CCP1.c: 35: giEchoCounter.EPl = CCPR1L;
  9285  00387C  CFBE F0D7          	movff	4030,_giEchoCounter	;volatile
  9286                           
  9287                           ;CCP1.c: 36: giEchoCounter.EPh = CCPR1H;
  9288  003880  CFBF F0D8          	movff	4031,_giEchoCounter+1	;volatile
  9289  003884                     
  9290                           ;CCP1.c: 39: CCP1CON = 0x00;
  9291  003884  0E00               	movlw	0
  9292  003886  6EBD               	movwf	189,c	;volatile
  9293                           
  9294                           ;CCP1.c: 40: CCPR1H = 0;
  9295  003888  0E00               	movlw	0
  9296  00388A  6EBF               	movwf	191,c	;volatile
  9297                           
  9298                           ;CCP1.c: 41: CCPR1L = 0;
  9299  00388C  0E00               	movlw	0
  9300  00388E  6EBE               	movwf	190,c	;volatile
  9301  003890                     
  9302                           ;CCP1.c: 43: PIR1bits.CCP1IF = 0;
  9303  003890  949E               	bcf	158,2,c	;volatile
  9304  003892                     
  9305                           ;CCP1.c: 44: PIE1bits.CCP1IE = 0;
  9306  003892  949D               	bcf	157,2,c	;volatile
  9307  003894                     
  9308                           ;CCP1.c: 45: Timer1_Reset();
  9309  003894  ECAB  F01C         	call	_Timer1_Reset	;wreg free
  9310  003898                     
  9311                           ;CCP1.c: 46: gb_EchoDetected = 1;
  9312  003898  0E01               	movlw	1
  9313  00389A  0100               	movlb	0	; () banked
  9314  00389C  6FDF               	movwf	_gb_EchoDetected& (0+255),b	;volatile
  9315  00389E                     
  9316                           ; BSR set to: 0
  9317  00389E  0012               	return		;funcret
  9318  0038A0                     __end_of_CCP1_ISR:
  9319                           	callstack 0
  9320                           
  9321 ;; *************** function _Timer1_Reset *****************
  9322 ;; Defined at:
  9323 ;;		line 26 in file "Timer_1.c"
  9324 ;; Parameters:    Size  Location     Type
  9325 ;;		None
  9326 ;; Auto vars:     Size  Location     Type
  9327 ;;		None
  9328 ;; Return value:  Size  Location     Type
  9329 ;;                  1    wreg      void 
  9330 ;; Registers used:
  9331 ;;		wreg, status,2
  9332 ;; Tracked objects:
  9333 ;;		On entry : 0/0
  9334 ;;		On exit  : 0/0
  9335 ;;		Unchanged: 0/0
  9336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9337 ;;      Params:         0       0       0       0       0       0       0       0       0
  9338 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9340 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9341 ;;Total ram usage:        0 bytes
  9342 ;; Hardware stack levels used: 1
  9343 ;; This function calls:
  9344 ;;		Nothing
  9345 ;; This function is called by:
  9346 ;;		_CCP1_ISR
  9347 ;; This function uses a non-reentrant model
  9348 ;;
  9349                           
  9350                           	psect	text46
  9351  003956                     __ptext46:
  9352                           	callstack 0
  9353  003956                     _Timer1_Reset:
  9354                           	callstack 22
  9355  003956                     
  9356                           ;Timer_1.c: 28: T1CONbits.TMR1ON = 0;
  9357  003956  90CD               	bcf	205,0,c	;volatile
  9358  003958                     
  9359                           ;Timer_1.c: 29: TMR1H = 0;
  9360  003958  0E00               	movlw	0
  9361  00395A  6ECF               	movwf	207,c	;volatile
  9362                           
  9363                           ;Timer_1.c: 30: TMR1L = 0;
  9364  00395C  0E00               	movlw	0
  9365  00395E  6ECE               	movwf	206,c	;volatile
  9366  003960  0012               	return		;funcret
  9367  003962                     __end_of_Timer1_Reset:
  9368                           	callstack 0
  9369                           
  9370                           	psect	rparam
  9371  0000                     
  9372                           	psect	temp
  9373  00005D                     btemp:
  9374                           	callstack 0
  9375  00005D                     	ds	1
  9376  0000                     int$flags	set	btemp
  9377  0000                     wtemp8	set	btemp+1
  9378  0000                     ttemp5	set	btemp+1
  9379  0000                     ttemp6	set	btemp+4
  9380  0000                     ttemp7	set	btemp+8
  9381                           
  9382                           	psect	idloc
  9383                           
  9384                           ;Config register IDLOC0 @ 0x200000
  9385                           ;	unspecified, using default values
  9386  200000                     	org	2097152
  9387  200000  FF                 	db	255
  9388                           
  9389                           ;Config register IDLOC1 @ 0x200001
  9390                           ;	unspecified, using default values
  9391  200001                     	org	2097153
  9392  200001  FF                 	db	255
  9393                           
  9394                           ;Config register IDLOC2 @ 0x200002
  9395                           ;	unspecified, using default values
  9396  200002                     	org	2097154
  9397  200002  FF                 	db	255
  9398                           
  9399                           ;Config register IDLOC3 @ 0x200003
  9400                           ;	unspecified, using default values
  9401  200003                     	org	2097155
  9402  200003  FF                 	db	255
  9403                           
  9404                           ;Config register IDLOC4 @ 0x200004
  9405                           ;	unspecified, using default values
  9406  200004                     	org	2097156
  9407  200004  FF                 	db	255
  9408                           
  9409                           ;Config register IDLOC5 @ 0x200005
  9410                           ;	unspecified, using default values
  9411  200005                     	org	2097157
  9412  200005  FF                 	db	255
  9413                           
  9414                           ;Config register IDLOC6 @ 0x200006
  9415                           ;	unspecified, using default values
  9416  200006                     	org	2097158
  9417  200006  FF                 	db	255
  9418                           
  9419                           ;Config register IDLOC7 @ 0x200007
  9420                           ;	unspecified, using default values
  9421  200007                     	org	2097159
  9422  200007  FF                 	db	255
  9423                           
  9424                           	psect	config
  9425                           
  9426                           ;Config register CONFIG1L @ 0x300000
  9427                           ;	PLL Prescaler Selection bits
  9428                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  9429                           ;	System Clock Postscaler Selection bits
  9430                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  9431                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  9432                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  9433  300000                     	org	3145728
  9434  300000  21                 	db	33
  9435                           
  9436                           ;Config register CONFIG1H @ 0x300001
  9437                           ;	Oscillator Selection bits
  9438                           ;	FOSC = HS, HS oscillator (HS)
  9439                           ;	Fail-Safe Clock Monitor Enable bit
  9440                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9441                           ;	Internal/External Oscillator Switchover bit
  9442                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9443  300001                     	org	3145729
  9444  300001  0C                 	db	12
  9445                           
  9446                           ;Config register CONFIG2L @ 0x300002
  9447                           ;	Power-up Timer Enable bit
  9448                           ;	PWRT = OFF, PWRT disabled
  9449                           ;	Brown-out Reset Enable bits
  9450                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  9451                           ;	Brown-out Reset Voltage bits
  9452                           ;	BORV = 2, Setting 1 2.79V
  9453                           ;	USB Voltage Regulator Enable bit
  9454                           ;	VREGEN = OFF, USB voltage regulator disabled
  9455  300002                     	org	3145730
  9456  300002  11                 	db	17
  9457                           
  9458                           ;Config register CONFIG2H @ 0x300003
  9459                           ;	Watchdog Timer Enable bit
  9460                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9461                           ;	Watchdog Timer Postscale Select bits
  9462                           ;	WDTPS = 32768, 1:32768
  9463  300003                     	org	3145731
  9464  300003  1E                 	db	30
  9465                           
  9466                           ; Padding undefined space
  9467  300004                     	org	3145732
  9468  300004  FF                 	db	255
  9469                           
  9470                           ;Config register CONFIG3H @ 0x300005
  9471                           ;	CCP2 MUX bit
  9472                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  9473                           ;	PORTB A/D Enable bit
  9474                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9475                           ;	Low-Power Timer 1 Oscillator Enable bit
  9476                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9477                           ;	MCLR Pin Enable bit
  9478                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9479  300005                     	org	3145733
  9480  300005  81                 	db	129
  9481                           
  9482                           ;Config register CONFIG4L @ 0x300006
  9483                           ;	Stack Full/Underflow Reset Enable bit
  9484                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9485                           ;	Single-Supply ICSP Enable bit
  9486                           ;	LVP = OFF, Single-Supply ICSP disabled
  9487                           ;	Extended Instruction Set Enable bit
  9488                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9489                           ;	Background Debugger Enable bit
  9490                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  9491  300006                     	org	3145734
  9492  300006  81                 	db	129
  9493                           
  9494                           ; Padding undefined space
  9495  300007                     	org	3145735
  9496  300007  FF                 	db	255
  9497                           
  9498                           ;Config register CONFIG5L @ 0x300008
  9499                           ;	Code Protection bit
  9500                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  9501                           ;	Code Protection bit
  9502                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  9503                           ;	Code Protection bit
  9504                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  9505  300008                     	org	3145736
  9506  300008  0F                 	db	15
  9507                           
  9508                           ;Config register CONFIG5H @ 0x300009
  9509                           ;	Boot Block Code Protection bit
  9510                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  9511                           ;	Data EEPROM Code Protection bit
  9512                           ;	CPD = OFF, Data EEPROM is not code-protected
  9513  300009                     	org	3145737
  9514  300009  C0                 	db	192
  9515                           
  9516                           ;Config register CONFIG6L @ 0x30000A
  9517                           ;	Write Protection bit
  9518                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  9519                           ;	Write Protection bit
  9520                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  9521                           ;	Write Protection bit
  9522                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  9523  30000A                     	org	3145738
  9524  30000A  0F                 	db	15
  9525                           
  9526                           ;Config register CONFIG6H @ 0x30000B
  9527                           ;	Configuration Register Write Protection bit
  9528                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  9529                           ;	Boot Block Write Protection bit
  9530                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  9531                           ;	Data EEPROM Write Protection bit
  9532                           ;	WRTD = OFF, Data EEPROM is not write-protected
  9533  30000B                     	org	3145739
  9534  30000B  E0                 	db	224
  9535                           
  9536                           ;Config register CONFIG7L @ 0x30000C
  9537                           ;	Table Read Protection bit
  9538                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9539                           ;	Table Read Protection bit
  9540                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9541                           ;	Table Read Protection bit
  9542                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  9543  30000C                     	org	3145740
  9544  30000C  0F                 	db	15
  9545                           
  9546                           ;Config register CONFIG7H @ 0x30000D
  9547                           ;	Boot Block Table Read Protection bit
  9548                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  9549  30000D                     	org	3145741
  9550  30000D  40                 	db	64
  9551                           tosu	equ	0xFFF
  9552                           tosh	equ	0xFFE
  9553                           tosl	equ	0xFFD
  9554                           stkptr	equ	0xFFC
  9555                           pclatu	equ	0xFFB
  9556                           pclath	equ	0xFFA
  9557                           pcl	equ	0xFF9
  9558                           tblptru	equ	0xFF8
  9559                           tblptrh	equ	0xFF7
  9560                           tblptrl	equ	0xFF6
  9561                           tablat	equ	0xFF5
  9562                           prodh	equ	0xFF4
  9563                           prodl	equ	0xFF3
  9564                           indf0	equ	0xFEF
  9565                           postinc0	equ	0xFEE
  9566                           postdec0	equ	0xFED
  9567                           preinc0	equ	0xFEC
  9568                           plusw0	equ	0xFEB
  9569                           fsr0h	equ	0xFEA
  9570                           fsr0l	equ	0xFE9
  9571                           wreg	equ	0xFE8
  9572                           indf1	equ	0xFE7
  9573                           postinc1	equ	0xFE6
  9574                           postdec1	equ	0xFE5
  9575                           preinc1	equ	0xFE4
  9576                           plusw1	equ	0xFE3
  9577                           fsr1h	equ	0xFE2
  9578                           fsr1l	equ	0xFE1
  9579                           bsr	equ	0xFE0
  9580                           indf2	equ	0xFDF
  9581                           postinc2	equ	0xFDE
  9582                           postdec2	equ	0xFDD
  9583                           preinc2	equ	0xFDC
  9584                           plusw2	equ	0xFDB
  9585                           fsr2h	equ	0xFDA
  9586                           fsr2l	equ	0xFD9
  9587                           status	equ	0xFD8

Data Sizes:
    Strings     50
    Constant    86
    Data        42
    BSS         245
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     90      92
    BANK0           160     85     158
    BANK1           256      0     212
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> sprintf@c(COMRAM[1]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_4(CODE[4]), STR_3(CODE[13]), STR_2(CODE[21]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 100
		 -> gsTotalSecs(BANK0[4]), sLine2(BANK1[100]), sLine1(BANK1[100]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    LCD_WriteString@iData	PTR unsigned char  size(2) Largest target is 100
		 -> gsTotalSecs(BANK0[4]), sLine2(BANK1[100]), sLine1(BANK1[100]), STR_1(CODE[12]), 


Critical Paths under _main in COMRAM

    _LCD_Init->_LCD_WriteCmd
    _log->___fladd
    _floor->___fladd
    _frexp->___fleq
    ___fleq->___xxtofl
    _eval_poly->___fladd
    _ComputeWaterVol->___fladd
    _sqrt->___fldiv
    ___xxtofl->___fltol
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->_frexp
    _ComputeTOD->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCD_WriteString->_LCD_WriteChar
    _LCD_GoTo->_LCD_WriteCmd

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_Timer0_ISR

Critical Paths under _main in BANK0

    _main->_InitTankVariables
    _InitTankVariables->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___fladd
    _eval_poly->___fladd
    _ComputeWaterVol->___flsub
    ___flsub->___fladd
    ___fladd->___flmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0  108884
                                             81 BANK0      4     4      0
                          _CCP1_Init
                          _CCP2_Init
                         _ComputeTOD
                    _ComputeWaterVol
                  _InitTankVariables
                           _LCD_Init
                    _LCD_WriteString
                            _SysInit
                        _Timer0_Init
                        _Timer1_Init
                        _Timer2_Init
 ---------------------------------------------------------------------------------
 (1) _Timer2_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SysInit                                              0     0      0       0
                            _OscInit
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OscInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     736
                                              8 COMRAM     1     1      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _InitTankVariables                                    4     4      0   80084
                                             77 BANK0      4     4      0
                            ___flmul
                                _pow
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _pow                                                 21    13      8   74024
                                             56 BANK0     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   24912
                                             37 BANK0      6     2      4
                            ___fladd
                             ___fleq
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                 11     7      4   38808
                                             45 BANK0     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                8     2      6    2389
                                             37 BANK0      8     2      6
                             ___fleq
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                               10     6      4    9643
                                             21 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                8     2      6    2532
                                             62 COMRAM     8     2      6
                             ___fleq
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    1850
                                             50 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     8      8    9949
                                             21 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     273
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _ComputeWaterVol                                     38    38      0   23228
                                             29 BANK0     34    34      0
                           _LCD_GoTo
                    _LCD_WriteString
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                29    25      4    1033
                                             26 COMRAM    29    25      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1016
                                             36 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     685
                                             26 COMRAM    10     6      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4727
                                             21 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    4162
                                             82 COMRAM     8     0      8
                                             13 BANK0      8     8      0
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4993
                                             70 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___fldiv (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1855
                                              1 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _ComputeTOD                                           2     2      0    4339
                                             38 COMRAM     2     2      0
                           _LCD_GoTo
                    _LCD_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             29    21      8    2848
                                             13 COMRAM    25    17      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              8 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      5     3      2     460
                                              4 COMRAM     5     3      2
                      _LCD_WriteChar
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteChar                                        3     3      0      66
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_GoTo                                             7     6      1    1007
                                              8 COMRAM     7     6      1
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         7     5      2     644
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _CCP2_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CCP1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0       0
                           _CCP1_ISR
                         _Timer0_ISR
                         _Timer2_ISR
                         _Timer3_ISR
 ---------------------------------------------------------------------------------
 (8) _Timer3_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                           1     1      0       0
                                              0 COMRAM     1     1      0
                _StartDepthDetection
 ---------------------------------------------------------------------------------
 (9) _StartDepthDetection                                  0     0      0       0
                      _CCP1_Activate
 ---------------------------------------------------------------------------------
 (10) _CCP1_Activate                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _CCP1_ISR                                             0     0      0       0
                       _Timer1_Reset
 ---------------------------------------------------------------------------------
 (9) _Timer1_Reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP1_Init
   _CCP2_Init
   _ComputeTOD
     _LCD_GoTo
       _LCD_WriteCmd
     _LCD_WriteString
       _LCD_WriteChar
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _ComputeWaterVol
     _LCD_GoTo
     _LCD_WriteString
     ___fladd
       ___fldiv (ARG)
       ___flmul (ARG)
         ___fldiv (ARG)
         ___fltol (ARG)
           ___fldiv (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
         _frexp (ARG)
           ___fleq
             ___xxtofl (ARG)
         _sqrt (ARG)
           ___fldiv (ARG)
       ___xxtofl (ARG)
       _frexp (ARG)
       _sqrt (ARG)
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
     _sprintf
     _sqrt
   _InitTankVariables
     ___flmul
     _pow
       ___fleq
       ___flge
       ___flmul
       ___flneg
       ___fltol
       ___xxtofl
       _exp
         ___fldiv
         ___fleq
         ___flge
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _eval_poly
           ___fladd
           ___flmul
         _floor
           ___fladd
           ___flge
           ___fltol
           ___xxtofl
           _frexp
         _ldexp
           ___fleq
           _eval_poly (ARG)
         _log (ARG)
           ___fladd
           ___fleq
           ___flmul
           ___xxtofl
           _eval_poly
           _frexp
       _log
     _sqrt
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
   _SysInit
     _OscInit
     _PIN_MANAGER_Initialize
   _Timer0_Init
   _Timer1_Init
   _Timer2_Init

 _INTERRUPT_InterruptManager (ROOT)
   _CCP1_ISR
     _Timer1_Reset
   _Timer0_ISR
     _StartDepthDetection
       _CCP1_Activate
   _Timer2_ISR
   _Timer3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D4       7       82.8%
BITBANK3            EF      0       0      12        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     55      9E       5       98.8%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5A      5C       1       97.9%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1CE      11        0.0%
DATA                 0      0     1CE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 27 11:01:57 2021

                       ___fldiv@aexp 001A                         ___fldiv@bexp 0019  
                 __size_of_CCP1_Init 0012                         ___fldiv@sign 0012  
                 __size_of_CCP2_Init 0012                                   l74 396A  
                                 l77 3974                  ___wmul@multiplicand 0004  
                                l138 38D0                                  l404 387A  
                                l193 38E2                                  l354 3052  
                                l372 2C4E                                  l550 345C  
                                l383 3148                                  l720 1202  
                                l449 3918                                  l369 1D12  
                                l545 372E                                  l570 36D6  
                                l562 3680                                  l650 38F4  
                                l723 3856                                  l548 345A  
                                l564 3682                                  l557 34B4  
                                l566 3684                                  l559 34D0  
                                l496 3906                                  l584 367C  
                                l576 3548                                  l569 36CE  
                                l683 0F96                                  l984 2E12  
                                l985 2E58                                  l978 32B6  
                                l989 37FE                                  _PR2 000FCB  
                                _exp 2030                                  _log 272C  
                                _pow 2318                                  wreg 000FE8  
                  ??_LCD_WriteString 0007                         ___flmul@aexp 0061  
                       ___flmul@bexp 0066                         ___flmul@sign 0060  
                       ___flmul@temp 006B                         ___flmul@prod 0067  
                       ___fltol@exp1 0024                                 l1012 2D54  
                               l1202 35B4                                 l1212 3618  
                               l1304 186E                                 l1240 0A68  
                               l1400 26C2                                 l1209 35BC  
                               l1241 0A2E                                 l1306 18E6  
                               l1219 3620                                 l1307 18D4  
                               l1332 14C0                                 l1420 2576  
                               l1325 12CA                                 l1342 15F0  
                               l1334 1538                                 l1335 1526  
                               l1239 0A7A                                 l4000 350C  
                               l1256 0B94                                 l1248 0D4A  
                               l1424 2566                                 l1409 3830  
                               l1329 162E                                 l1265 0C64  
                               l1281 37C6                                 l1266 0C52  
                               l1354 202E                                 l4010 1D36  
                               l4002 1D14                                 l1442 2306  
                               l1419 238C                                 l4100 3624  
                               l4012 1D4E                                 l4004 1D20  
                               l1293 19C8                                 l4102 3634  
                               l4110 366C                                 l4030 1DBA  
                               l4022 1D84                                 l4014 1D60  
                               l4006 1D2E                                 l1438 2316  
                               l1295 1828                                 l4104 3644  
                               l4200 0FF2                                 l4120 0D7E  
                               l4112 0D4C                                 l5000 26D6  
                               l4032 1DCA                                 l4040 1DF0  
                               l4024 1D96                                 l4016 1D62  
                               l4008 1D30                                 l1448 2F4C  
                               l1464 320C                                 l1456 2A0A  
                               l1393 2666                                 l1449 2F5C  
                               l4106 3658                                 l4202 1002  
                               l4130 0DF4                                 l4122 0D8A  
                               l4114 0D58                                 l1298 17EC  
                               l5002 26FA                                 l1386 25CE  
                               l4050 1E44                                 l4042 1E02  
                               l4034 1DD2                                 l4018 1D74  
                               l1458 29FA                                 l4108 3668  
                               l4220 1064                                 l4212 1030  
                               l4204 1014                                 l4140 0E3E  
                               l4132 0DF8                                 l4124 0DA8  
                               l4116 0D6A                                 l3500 2C7A  
                               l5004 270A                                 l4060 1E86  
                               l4052 1E54                                 l4036 1DDC  
                               l4028 1DAA                                 l5020 31A0  
                               l5012 314A                                 l5100 2B32  
                               l1468 2B42                                 l1389 272A  
                               l4230 10B8                                 l4222 1080  
                               l4206 1016                                 l4150 0E84  
                               l4142 0E46                                 l4126 0DB0  
                               l4134 0E16                                 l4118 0D76  
                               l3510 2CC8                                 l3502 2CA4  
                               l5006 2718                                 l4070 1F2C  
                               l4062 1EB4                                 l4054 1E64  
                               l5022 31E2                                 l5014 317C  
                               l1486 28C8                                 l5110 2758  
                               l4232 10CE                                 l4240 10D4  
                               l4224 1088                                 l4216 105E  
                               l4208 101A                                 l4160 0ED0  
                               l4152 0E94                                 l4144 0E56  
                               l4136 0E32                                 l4128 0DCC  
                               l5032 3780                                 l3520 2CF4  
                               l3504 2CA6                                 l5008 271A  
                               l4080 1FBA                                 l4064 1ED8  
                               l4072 1F2E                                 l4056 1E74  
                               l4048 1E16                                 l5024 31F2  
                               l5016 318C                                 l5040 28E6  
                               l5120 2824                                 l5112 278A  
                               l5104 272C                                 l5200 24B0  
                               l4400 36E8                                 l4250 112A  
                               l4242 10F8                                 l4226 10A2  
                               l4170 0F1E                                 l4162 0EDC  
                               l4154 0EA8                                 l4146 0E5A  
                               l4138 0E36                                 l3610 164C  
                               l5034 3792                                 l3530 2D24  
                               l3506 2CB6                                 l4090 2020  
                               l4082 1FC8                                 l4074 1F3E  
                               l4066 1EF8                                 l4058 1E7E  
                               l5026 31FA                                 l5042 28F6  
                               l5122 2858                                 l5106 273C  
                               l5202 24D4                                 l4410 3704  
                               l4402 36E8                                 l4260 1170  
                               l4252 112E                                 l4244 1104  
                               l4228 10A6                                 l4180 0F58  
                               l4172 0F22                                 l4164 0EE8  
                               l4156 0EAE                                 l4148 0E7C  
                               l4500 30AA                                 l3700 188C  
                               l3612 165C                                 l3620 1686  
                               l3604 1630                                 l3532 2D34  
                               l3516 2CE0                                 l3508 2CBA  
                               l4092 2022                                 l4084 1FF6  
                               l4076 1F68                                 l4068 1F22  
                               l5028 31FC                                 l5044 2904  
                               l5052 292C                                 l5140 20FA  
                               l5132 2078                                 l5116 27A8  
                               l5204 2508                                 l5220 2BF4  
                               l5212 2B44                                 l4412 3712  
                               l4404 36F6                                 l5300 2FB8  
                               l4262 11B2                                 l4254 1146  
                               l4246 110C                                 l4190 0FBC  
                               l4270 11F6                                 l4174 0F26  
                               l4166 0EEC                                 l4158 0EC4  
                               l4510 30EE                                 l4502 30AE  
                               l3710 18F6                                 l3702 1890  
                               l3630 16B2                                 l3622 1696  
                               l3614 166C                                 l3606 163C  
                               l3534 2D44                                 l3526 2D08  
                               l3518 2CEA                                 l4094 2028  
                               l4086 200E                                 l4078 1F80  
                               l5230 1A12                                 l5062 2E5A  
                               l5054 2942                                 l5038 28CA  
                               l5070 2A3E                                 l5150 2162  
                               l5134 20AA                                 l5126 2030  
                               l5118 281C                                 l5206 252C  
                               l5222 2C06                                 l5214 2B7A  
                               l4414 3720                                 l4406 36F6  
                               l4430 38E4                                 l5310 2FE8  
                               l5302 2FCA                                 l4440 38F6  
                               l4256 115C                                 l4248 111E  
                               l4192 0FCA                                 l4176 0F44  
                               l4168 0F0A                                 l4184 0F5E  
                               l4520 3142                                 l4512 30FA  
                               l4504 30C0                                 l3720 1958  
                               l3712 1902                                 l3704 189E  
                               l3632 16C2                                 l3640 16EC  
                               l3624 169C                                 l3616 167C  
                               l3608 164A                                 l3528 2D14  
                               l4088 2012                                 l5240 1BAA  
                               l5232 1AA2                                 l5224 19CA  
                               l5064 2EA4                                 l3480 2DD2  
                               l3472 2D56                                 l5056 2956  
                               l5048 2918                                 l5160 2274  
                               l5152 2196                                 l5144 2118  
                               l5128 2062                                 l5208 253E  
                               l5216 2BAE                                 l4416 3720  
                               l4408 3704                                 l4432 38E8  
                               l5320 301E                                 l5312 2FEE  
                               l5304 2FCE                                 l4434 3908  
                               l4258 1168                                 l4266 11C2  
                               l4194 0FCE                                 l4186 0FA4  
                               l4178 0F4C                                 l4522 3146  
                               l4514 310A                                 l4506 30C8  
                               l3730 19B6                                 l3722 196E  
                               l3714 1910                                 l3706 18CC  
                               l3650 172E                                 l3642 16FC  
                               l3634 16D2                                 l3626 16A2  
                               l3618 167E                                 l5250 1C6C  
                               l5242 1BDE                                 l5234 1AFA  
                               l5226 19CA                                 l5066 2F38  
                               l3490 2E56                                 l3482 2DE0  
                               l3474 2D84                                 l5058 29C2  
                               l5082 2AB4                                 l5074 2A54  
                               l5162 2286                                 l5154 21BA  
                               l5146 212E                                 l5138 20C8  
                               l5218 2BC0                                 l5322 303A  
                               l5314 2FFE                                 l5306 2FD4  
                               l4436 3914                                 l3900 35EE  
                               l4188 0FB4                                 l4196 0FDA  
                               l4268 11D4                                 l4516 312C  
                               l4508 30E4                                 l3732 19BC  
                               l3724 1988                                 l3716 193A  
                               l3644 1712                                 l3636 16E2  
                               l3628 16B0                                 l4700 09B4  
                               l5260 1CAE                                 l5252 1C84  
                               l5244 1C42                                 l5236 1B5A  
                               l5228 1A00                                 l3484 2DF2  
                               l3476 2D94                                 l4620 323C  
                               l5084 2ACA                                 l5076 2A98  
                               l5068 2A0C                                 l5164 22B8  
                               l5156 21D6                                 l5148 213E  
                               l5172 2318                                 l5324 3048  
                               l5316 300C                                 l5308 2FE4  
                               l4438 3916                                 l3830 3462  
                               l3902 3604                                 l4198 0FEA  
                               l4518 3130                                 l3734 19BE  
                               l3726 19A4                                 l3718 193E  
                               l3670 17B0                                 l3662 1766  
                               l3646 1722                                 l3654 1742  
                               l3638 16E4                                 l4710 09C8  
                               l4702 09B8                                 l3494 2C50  
                               l5262 1CD2                                 l5254 1C8A  
                               l5238 1B76                                 l3750 37DE  
                               l3486 2E00                                 l3478 2DC2  
                               l4630 32B4                                 l4622 324C  
                               l5094 2AF4                                 l5086 2AD2  
                               l5158 2222                                 l5190 23FA  
                               l5182 23A2                                 l5174 231E  
                               l4382 3962                                 l4390 38CA  
                               l5326 304C                                 l5318 300E  
                               l5270 2F5E                                 l3840 34B6  
                               l3832 3488                                 l3904 360C  
                               l3728 19A8                                 l3680 17F6  
                               l3672 17B8                                 l3664 1780  
                               l3656 1752                                 l3648 172A  
                               l4800 0C4A                                 l4720 0A26  
                               l4704 09BC                                 l4712 09CC  
                               l4640 08A8                                 l3496 2C66  
                               l5264 1CDE                                 l5256 1CA2  
                               l5248 1C5E                                 l3752 37EE  
                               l3488 2E50                                 l4624 327A  
                               l5088 2AE0                                 l5168 22CE  
                               l5192 2466                                 l5184 23D4  
                               l5176 2350                                 l4384 38BE  
                               l4392 38D2                                 l5280 2F8E  
                               l5272 2F62                                 l3842 34BA  
                               l3834 34A4                                 l3850 36CC  
                               l3906 3612                                 l4490 305E  
                               l3690 184E                                 l3682 1814  
                               l3674 17C8                                 l3666 1790  
                               l3658 1752                                 l4810 0CC8  
                               l4730 0A5C                                 l4722 0A3C  
                               l4714 09D0                                 l4706 09C0  
                               l4642 08B8                                 l4650 08E2  
                               l4634 088A                                 l5266 1CE8  
                               l5258 1CA4                                 l4626 328A  
                               l4618 320E                                 l5098 2B08  
                               l5178 2382                                 l4386 38C4  
                               l4394 38DE                                 l5290 2FA8  
                               l5282 2F98                                 l5274 2F66  
                               l3836 34A6                                 l3828 345E  
                               l3844 3686                                 l3860 382A  
                               l3852 3802                                 l4492 307A  
                               l3692 1854                                 l3684 1816  
                               l3676 17DC                                 l3668 17A0  
                               l4900 13AC                                 l4820 0D0E  
                               l4804 0C74                                 l4812 0CCA  
                               l4740 0AAC                                 l4732 0A66  
                               l4724 0A48                                 l4716 09FA  
                               l4708 09C4                                 l4660 0912  
                               l4652 08F2                                 l4644 08C8  
                               l4636 0898                                 l5268 1D10  
                               l3748 37C8                                 l4628 32AE  
                               l5196 2484                                 l5188 23EA  
                               l4388 38C8                                 l4396 38E0  
                               l5292 2FAC                                 l5284 2F9C  
                               l5276 2F72                                 l3838 34A8  
                               l3846 368A                                 l3870 354A  
                               l3854 3806                                 l4494 3082  
                               l3694 185E                                 l3686 1826  
                               l3678 17EA                                 l4910 141A  
                               l4902 13C6                                 l4830 0D38  
                               l4822 0D1C                                 l4814 0CDA  
                               l4806 0C80                                 l4750 0AE8  
                               l4742 0ABC                                 l4734 0A88  
                               l4726 0A4C                                 l4718 0A16  
                               l4670 0952                                 l4662 0920  
                               l4654 08F8                                 l4646 08D8  
                               l4638 08A6                                 l5198 248C  
                               l4398 36D8                                 l5294 2FB0  
                               l5286 2FA0                                 l5278 2F80  
                               l3848 36B0                                 l3880 3582  
                               l3872 3552                                 l3864 3832  
                               l3856 3816                                 l4496 3094  
                               l4488 305A                                 l3696 186C  
                               l3688 1838                                 l4920 14B0  
                               l4912 1444                                 l4904 13D6  
                               l4840 1220                                 l4832 0D3A  
                               l4824 0D22                                 l4816 0CEA  
                               l4808 0C8E                                 l4760 0B2E  
                               l4752 0AF6                                 l4744 0ACA  
                               l4736 0A98                                 l4728 0A5A  
                               l4680 098C                                 l4672 0954  
                               l4664 0922                                 l4656 090A  
                               l4648 08DA                                 l5296 2FB4  
                               l5288 2FA4                                 l3890 35AE  
                               l3882 3588                                 l3874 3564  
                               l3866 384E                                 l3858 3826  
                               l4498 3098                                 l3698 187E  
                               l4930 14F0                                 l4922 14BE  
                               l4914 147A                                 l4906 13F2  
                               l4850 1258                                 l4842 1222  
                               l4826 0D24                                 l4818 0D0A  
                               l4770 0BAA                                 l4762 0B62  
                               l4754 0AF8                                 l4746 0AD8  
                               l4690 09A0                                 l4682 0990  
                               l4666 0932                                 l4674 095C  
                               l4658 090C                                 l5298 2FB6  
                               l3884 359E                                 l3876 356C  
                               l3892 35BE                                 l4940 1562  
                               l4932 151E                                 l4924 14D0  
                               l4916 1488                                 l4908 13FE  
                               l4860 1284                                 l4852 1268  
                               l4844 1232                                 l4836 1204  
                               l4828 0D2A                                 l4780 0BE6  
                               l4772 0BBA                                 l4764 0B64  
                               l4756 0B02                                 l4748 0AE4  
                               l4692 09A4                                 l4684 0994  
                               l4676 096C                                 l4668 0942  
                               l3980 396C                                 ?_exp 008D  
                               ?_log 0085                                 l3886 35A6  
                               l3878 3574                                 l3894 35D0  
                               l4950 15D8                                 l4942 158C  
                               l4926 14DE                                 l4918 14A6  
                               l4870 12DA                                 l4862 1294  
                               l4854 126E                                 l4846 1242  
                               l4838 1212                                 l4790 0C12  
                               l4782 0BE8                                 l4766 0B74  
                               l4758 0B08                                 l4694 09A8  
                               l4686 0998                                 l4678 097E  
                               l3888 35A8                                 l3896 35D8  
                               l4952 15F4                                 l4960 161A  
                               l4936 1548                                 l4944 1590  
                               l4928 14E2                                 l4880 1314  
                               l4872 12EA                                 l4864 12A4  
                               l4856 1274                                 l4848 1252  
                               l4784 0BF6                                 l4776 0BCE  
                               l4792 0C14                                 l4768 0B84  
                               l4696 09AC                                 l4688 099C  
                               l3976 3858                                 l3994 34D2  
                               l3898 35E0                                 l4962 161E  
                               l4954 1604                                 l4946 15AA  
                               l4938 1554                                 l4890 1366  
                               l4882 132A                                 l4866 12B4  
                               l4858 1282                                 l4786 0BFE  
                               l4778 0BD8                                 l4794 0C22  
                               l4698 09B0                                 l4970 2598  
                               l3978 3878                                 l3996 34DA  
                               l4956 1612                                 l4948 15BE  
                               l4892 1374                                 l4884 1336  
                               l4876 12FE                                 l4868 12BA  
                               l4796 0C26                                 l4788 0C02  
                               l4980 2610                                 l4972 25DE  
                               l3998 350A                                 l4958 1614  
                               l4894 1380                                 l4886 134E  
                               l4878 130A                                 l4798 0C34  
                               l4990 2698                                 l4982 261C  
                               l4974 25F4                                 l4966 257A  
                               l4896 1390                                 l4888 135A  
                               l4992 26A4                                 l4984 264E  
                               l4968 258A                                 l4898 139C  
                               l4994 26B2                                 l4986 2650  
                               l4978 2608                                 l4996 26D0  
                               l4988 265C                                 l4998 26D2  
                               ?_pow 0098                                 STR_1 0879  
                               STR_2 0857                                 STR_3 086C  
                               STR_4 0885                                 u3000 2C9A  
                               u3010 2CC8                                 u3011 2CC4  
                               u3020 2CDC                                 u3021 2CD8  
                               u3005 2C90                                 _LATA 000F89  
                               u3030 2D04                                 _LATB 000F8A  
                               u3031 2D00                                 _LATC 000F8B  
                               u4000 0DA8                                 u3200 166C  
                               u3040 2D24                                 u4001 0DA4  
                               u3201 1668                                 u3041 2D20  
                               u4010 0E16                                 u3210 16B0  
                               u3050 2D34                                 u4011 0E12  
                               u3211 16AC                                 u3051 2D30  
                               u4100 0FCA                                 u4020 0E32  
                               u3300 184E                                 u3220 16C2  
                               u4101 0FC6                                 u4021 0E2E  
                               u3301 184A                                 u3221 16BE  
                               u4110 1002                                 u4030 0E78  
                               u3310 186C                                 u3230 16D2  
                               u4111 0FFE                                 u4031 0E74  
                               u3311 1868                                 u3231 16CE  
                               u4200 111E                                 u4120 1014  
                               u4040 0E94                                 u3400 19B6  
                               u3320 188C                                 u3240 1712  
                               u5000 0CC8                                 u4201 111A  
                               u4121 1010                                 u4041 0E90  
                               u3401 19B2                                 u3321 1888  
                               u3241 170E                                 u5001 0CC4  
                               u4210 1146                                 u4130 102C  
                               u4050 0EA8                                 u3330 189E  
                               u3250 1752                                 u5010 0CDA  
                               u3410 37DE                                 u4211 1142  
                               u4131 1028                                 u4051 0EA4  
                               u3331 189A                                 u3251 174E  
                               u5011 0CD6                                 u3411 37DA  
                               u4220 115C                                 u4140 105A  
                               u4060 0EC4                                 u3340 18CC  
                               u3260 17C8                                 u3180 164A  
                               u5100 1294                                 u5020 0CEA  
                               u4221 1158                                 u4141 1056  
                               u4061 0EC0                                 u3341 18C8  
                               u3261 17C4                                 u3181 1646  
                               u5101 1290                                 u5021 0CE6  
                               u4230 11D4                                 u4150 1080  
                               u4070 0F06                                 u3350 18E2  
                               u3270 17EA                                 u3190 165C  
                               u5110 12A4                                 u5030 0D0A  
                               u4231 11D0                                 u4151 107C  
                               u4071 0F02                                 u3351 18DE  
                               u3271 17E6                                 u3191 1658  
                               u5111 12A0                                 u5031 0D06  
                               u3600 36AE                                 u4240 11F6  
                               u4160 10A2                                 u4080 0F40  
                               u3360 18F6                                 u3280 1814  
                               u5200 1548                                 u5120 12DA  
                               u5040 0D1C                                 u3601 36A8  
                               u4241 11F2                                 u4161 109E  
                               u4081 0F3C                                 u3361 18F2  
                               u3281 1810                                 u5201 1544  
                               u5121 12D6                                 u5041 0D18  
                               u3530 3486                                 u4170 10B8  
                               u4090 0FA4                                 u4410 307A  
                               u3370 1910                                 u3290 1838  
                               u5210 1562                                 u5130 12EA  
                               u5050 0D38                                 u3531 3480  
                               u4171 10B4                                 u4091 0FA0  
                               u4411 3076                                 u3371 190C  
                               u3291 1834                                 u5211 155E  
                               u5131 12E6                                 u5051 0D34  
                               u3700 35D0                                 u4180 10CE  
                               u4420 3094                                 u3380 1958  
                               u5220 15AA                                 u5140 1464  
                               u5060 1220                                 u5300 26B2  
                               u3525 346A                                 u3701 35CC  
                               u4181 10CA                                 u4421 3090  
                               u3381 1954                                 u5221 15A6  
                               u5061 121C                                 u5301 26AE  
                               u3630 36CA                                 u3710 35EE  
                               u4190 10F8                                 u4430 30AA  
                               u3390 1988                                 u5230 15D8  
                               u5150 14BE                                 u5070 1232  
                               u5310 26C2                                 u3631 36C4  
                               u3615 36B0                                 u3711 35EA  
                               u4191 10F4                                 u4431 30A6  
                               u3391 1984                                 u5231 15D4  
                               u5151 14BA                                 u5071 122E  
                               u5311 26BE                                 u3560 34A2  
                               u3720 3604                                 u4440 30C0  
                               u5240 1612                                 u5160 14DE  
                               u5080 1242                                 u5320 26D0  
                               u5400 29C2                                 u3561 349C  
                               u3545 3488                                 u3625 36B8  
                               u3721 3600                                 u4441 30BC  
                               u5241 160E                                 u5161 14DA  
                               u5145 145A                                 u5081 123E  
                               u5321 26CC                                 u5401 29BE  
                               u3650 3816                                 u4450 310A  
                               u5170 14F0                                 u5090 1282  
                               u5330 270A                                 u5250 258A  
                               u5410 2F4C                                 u3555 3490  
                               u3651 3812                                 u4451 3106  
                               u5171 14EC                                 u5091 127E  
                               u5331 2706                                 u5251 2586  
                               u5411 2F48                                 u3580 34D0  
                               u3660 3826                                 u4460 312C  
                               u5180 151E                                 u4700 090A  
                               u5340 2718                                 u5260 2598  
                               u3900 1DBA                                 u2940 2D84  
                               u5420 2A3E                                 u5500 20AA  
                               u3581 34CC                                 u3645 36CC  
                               u3661 3822                                 u4461 3128  
                               u5181 151A                                 u4701 0906  
                               u5341 2714                                 u5261 2594  
                               u3901 1DB6                                 u2941 2D80  
                               u5421 2A3A                                 u5501 20A6  
                               u3830 3506                                 u3670 3564  
                               u4470 3142                                 u5190 1534  
                               u4710 0920                                 u5270 25F4  
                               u3910 1E02                                 u2950 2DC2  
                               u5350 317C                                 u5430 2A7E  
                               u5510 20FA                                 u3575 34A4  
                               u3671 3560                                 u4471 313E  
                               u5191 1530                                 u4711 091C  
                               u5271 25F0                                 u3911 1DFE  
                               u2951 2DBE                                 u5351 3178  
                               u5431 2A76                                 u5511 20F6  
                               u3840 3538                                 u3680 3582  
                               u4800 0A5A                                 u4720 0932  
                               u5280 264A                                 u3920 1E74  
                               u2960 2DE0                                 u4640 323C  
                               u5360 31D0                                 u5440 2A98  
                               u5520 212A                                 u5600 23FA  
                               u3681 357E                                 u4801 0A56  
                               u4721 092E                                 u5281 2646  
                               u3921 1E70                                 u2961 2DDC  
                               u4641 3238                                 u5361 31C8  
                               u5441 2A94                                 u5521 2124  
                               u5601 23F6                                 u3850 3548  
                               u3690 359E                                 u4810 0A7A  
                               u4730 0942                                 u5290 2694  
                               u3930 1EB4                                 u2970 2E00  
                               u4650 327A                                 u5370 28F6  
                               u5450 2ACA                                 u5530 212C  
                               u5610 2466                                 u3595 3692  
                               u3851 3544                                 u3691 359A  
                               u4811 0A76                                 u4731 093E  
                               u5291 2690                                 u3931 1EB0  
                               u2971 2DFC                                 u4651 3276  
                               u5371 28F2                                 u5451 2AC6  
                               u5611 2462                                 u4900 0BBA  
                               u4820 0A88                                 u4740 097E  
                               u3940 1F3E                                 u3860 1D2E  
                               u2980 2E50                                 u4660 32AE  
                               u5380 2904                                 u5460 2AE0  
                               u5540 213E                                 u5620 253E  
                               u5700 300C                                 u3837 34FC  
                               u4901 0BB6                                 u4821 0A84  
                               u4741 097A                                 u3941 1F3A  
                               u3861 1D2A                                 u2981 2E4C  
                               u4661 32AA                                 u5381 2900  
                               u5461 2ADC                                 u5541 213A  
                               u5621 253A                                 u5701 3008  
                               u4910 0BE6                                 u4830 0A98  
                               u4750 098C                                 u4670 08A6  
                               u2990 2C66                                 u3950 1FC8  
                               u3870 1D60                                 u5630 1C6C  
                               u5390 2942                                 u5438 2A82  
                               u5550 2286                                 u5470 273C  
                               u5710 303A                                 u3847 352E  
                               u4911 0BE2                                 u4831 0A94  
                               u4751 0988                                 u4671 08A2  
                               u2991 2C62                                 u3951 1FC4  
                               u3871 1D5C                                 u5631 1C68  
                               u5391 293E                                 u5551 2282  
                               u5471 2738                                 u5711 3036  
                               u4920 0BF6                                 u4840 0ACA  
                               u4760 09FA                                 u4680 08B8  
                               u3960 2020                                 u3880 1D74  
                               u5640 1C84                                 u5368 31D2  
                               u5560 22B8                                 u5480 278A  
                               u5720 3048                                 u4921 0BF2  
                               u4841 0AC6                                 u4761 09F6  
                               u4681 08B4                                 u3961 201C  
                               u3881 1D70                                 u5641 1C80  
                               u5561 22B4                                 u5481 2786  
                               u5721 3044                                 u3970 3634  
                               u4930 0C12                                 u4850 0AD8  
                               u4770 0A12                                 u4690 08C8  
                               u3890 1D96                                 u5650 1CA2  
                               u5490 2062                                 u5570 2350  
                               u3971 3630                                 u4931 0C0E  
                               u4851 0AD4                                 u4771 0A0C  
                               u4691 08C4                                 u3891 1D92  
                               u5651 1C9E                                 u5491 205E  
                               u5571 234C                                 u3980 3644  
                               u4940 0C22                                 u4860 0AF6  
                               u4780 0A14                                 u5580 2382  
                               u5660 2F80                                 i2l53 32DE  
                               u3981 3640                                 u4941 0C1E  
                               u4861 0AF2                                 u5581 237E  
                               u5661 2F7C                                 u3990 0D6A  
                               u4950 0C34                                 u4870 0B2E  
                               u4790 0A3C                                 u5590 23D4  
                               u5670 2FCA                                 i2l63 3358  
                               u3991 0D66                                 u4951 0C30  
                               u4871 0B2A                                 u4791 0A38  
                               u5591 23D0                                 u5671 2FC6  
                               i2l56 3310                                 u4960 0C4A  
                               u4880 0B74                                 u5680 2FE4  
                               i2l57 3358                                 u4961 0C46  
                               u4881 0B70                                 u5737 36DE  
                               u5681 2FE0                                 i2l58 3334  
                               u4970 0C60                                 u4890 0BAA  
                               u5690 2FFE                                 u5747 36D0  
                               u4971 0C5C                                 u4891 0BA6  
                               u5691 2FFA                                 u4980 0C74  
                               u4981 0C70                                 u4990 0C8E  
                               u4991 0C8A                                 _TMR2 000FCC  
                _StartDepthDetection 391A                                 _main 2F5E  
                   __end_of_CCP1_ISR 38A0                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 indf1 000FE7  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 btemp 005D  
                               _sqrt 1D14                                 exp@x 008D  
                               log@x 0085                                 pow@x 0098  
                               pow@y 009C                                 prodh 000FF4  
                               prodl 000FF3                                 start 000E  
                    ___fldiv@new_exp 0013                        ?_LCD_WriteCmd 0002  
                      _LCD_WriteChar 367E                         ___param_bank 000000  
                    __end_of_OscInit 3976                                ??_exp 005B  
                              ??_log 005B                                ??_pow 005B  
                   __end_of_LCD_GoTo 367E                     __end_of_LCD_Init 3730  
               ?_StartDepthDetection 0001                        ___fltol@sign1 0023  
                    __end_of___fladd 0D4C                                ?_main 0001  
                    __end_of___fldiv 19CA                      __end_of___flneg 3800  
                    __end_of_SysInit 396C                      __end_of___flmul 1630  
                    __end_of___flsub 37C8                      __end_of___fltol 2D56  
                              ?_sqrt 001B                                _T0CON 000FD5  
                              _T1CON 000FCD                                _T2CON 000FCA  
                              _T3CON 000FB1                                _LATC6 007C5E  
                              _LATC7 007C5F                      __end_of___lwdiv 35BE  
                    __end_of___lwmod 3622                                i2l135 33DC  
                              i2l190 392A                                i2l248 377E  
                              i2l187 3954                                i2l452 389E  
                              i2l455 393C                                i2l653 3960  
                              _TMR0H 000FD7                                _TMR1H 000FCF  
                              _TMR0L 000FD6                                _TMR3H 000FB3  
                              _TMR1L 000FCE                                _TMR3L 000FB2  
                              _TRISA 000F92                                _TRISB 000F93  
                              _TRISC 000F94                         LCD_GoTo@iPos 000E  
        ComputeWaterVol@iPercentFull 009D               __size_of_CCP1_Activate 0012  
                              _giDay 00F9                      __end_of_dpowers 080B  
                              _floor 28CA                                _ldexp 2A0C  
                              _frexp 314A                                _errno 00CD  
                    __end_of_isdigit 3832                 ComputeWaterVol@iGals 0093  
                  __end_of_CCP1_Init 391A                    __end_of_CCP2_Init 3908  
                         _ComputeTOD 305A                                tablat 000FF5  
                              pow@yi 00A9                                ttemp5 005E  
                              sqrt@a 001B                                ttemp6 0061  
                              ttemp7 0065                                sqrt@i 0024  
                              sqrt@p 0029                                status 000FD8  
                              wtemp8 005E                      __end_of_sprintf 1204  
                        exp@exponent 0095                       ??_LCD_WriteCmd 0004  
                     ?_LCD_WriteChar 0001                          ldexp@newexp 0089  
                    __initialization 33DE                          log@exponent 0089  
                       __end_of_main 305A                         __end_of_sqrt 2030  
              ??_StartDepthDetection 0001          ?_INTERRUPT_InterruptManager 0001  
                             ??_main 00B1                               ??_sqrt 001F  
                      __activetblptr 000002                 LCD_WriteString@iData 0005  
                             _ADCON1 000FC1                               _ADCON2 000FC0  
                             ?_floor 0075                               ?_ldexp 0085  
                             ?_frexp 003F                               _CCPR1H 000FBF  
                             _CCPR2H 000FBC                               _CCPR1L 000FBE  
                             _CCPR2L 000FBB                               i2l4320 3362  
                             i2l4314 3956                               i2l4330 338C  
                             i2l4322 3366                               i2l4316 3958  
                             i2l4340 33CE                               i2l4332 338E  
                             i2l4324 3368                               i2l4342 33D4  
                             i2l4334 3392                               i2l4326 3376  
                             i2l4318 335C                               i2l4350 3738  
                             i2l4336 3396                               i2l4328 3378  
                             i2l4360 3754                               i2l4352 373C  
                             i2l4370 387C                               i2l4338 33B0  
                             i2l4362 3758                               i2l4354 373E  
                             i2l4346 3730                               i2l4530 32EC  
                             i2l4380 3898                               i2l4372 3884  
                             i2l4364 3762                               i2l4356 3740  
                             i2l4348 3732                               i2l4540 3342  
                             i2l4532 32FA                               i2l4524 32BA  
                             i2l4374 3890                               i2l3822 392C  
                             i2l4366 3778                               i2l4358 3744  
                             i2l4542 3350                               i2l4534 3308  
                             i2l4526 32C8                               i2l4376 3892  
                             i2l3824 3938                               i2l2872 394A  
                             i2l4368 377C                               i2l4536 331E  
                             i2l4528 32D6                               i2l4378 3894  
                             i2l3826 393A                               i2l2874 394C  
                             i2l4538 332C                               i2l2876 3950  
                             i2l2878 3952                               i2l3990 3924  
                             i2l3982 391A                               i2l3992 3928  
                             i2l3984 391E                               i2l3986 3920  
                             i2l3988 3922                               _OSCCON 000FD3  
                   __end_of___xxtofl 272C                        LCD_GoTo@iLine 000F  
             _InitTankVariables$2260 00AD                        ??_Timer0_Init 0002  
                  _InitTankVariables 2B44                        ??_Timer1_Init 0002  
                      ??_Timer2_Init 0002                            ??_OscInit 0002  
                         _Timer0_ISR 335C                           _Timer2_ISR 394A  
                         _Timer3_ISR 3730                     LCD_WriteCmd@iCmd 0008  
                      _CCP1_Activate 392C                   ?_InitTankVariables 0001  
                             ___flge 2D56                               ___fleq 320E  
                          ??___fladd 006D                               ___wmul 3832  
                          ??___fldiv 000A                            ??___flneg 0006  
                          ??_SysInit 0002                               _giMins 00DE  
                             _giSecs 005B                            ??___flmul 004F  
                          ??___flsub 005B                            ??___fltol 001F  
           __size_of_ComputeWaterVol 034A                               _giYear 00F8  
                             _sLine1 0164                               _sLine2 0100  
                          ??___lwdiv 0006                            ??___lwmod 000D  
                             clear_0 3436                               clear_1 3442  
                             isa$std 000001                  ??_InitTankVariables 005B  
                             floor@i 0079                               floor@x 0075  
                          ?_CCP1_ISR 0001                         __pdataCOMRAM 005C  
                          ??_isdigit 0002                         __mediumconst 0000  
                             tblptrh 000FF7                               tblptrl 000FF6  
                             tblptru 000FF8                    _giBacklight_Timer 00D3  
      ComputeWaterVol@iEmptySpace_mm 008D                            ??_sprintf 0016  
                        ?_ComputeTOD 0001                           ___flge@ff1 0002  
                         ___flge@ff2 0006                         ___xxtofl@arg 002F  
                   __end_ofexp@coeff 0833                         ___xxtofl@exp 002E  
                       ___xxtofl@val 0025                           ___fleq@ff1 0033  
                         ___fleq@ff2 0037                     __end_oflog@coeff 0857  
                         __accesstop 0060              __end_of__initialization 344A  
                          ?_LCD_GoTo 0009                            ?_LCD_Init 0001  
                         ___flneg@f1 0002            __end_of_InitTankVariables 2C50  
                    ??_LCD_WriteChar 0002                         eval_poly@res 0081  
                      ___rparam_used 000001                           ___fltol@f1 001B  
                 ComputeTOD@bIncDays 0028                    _gd_TankGalsPer_mm 00BD  
                     ?_CCP1_Activate 0001                        _giEchoCounter 00D7  
                     __pcstackCOMRAM 0001                         __pidataBANK0 38A0  
                       __pidataBANK1 393E                      _LCD_WriteString 34D2  
                      __end_of_floor 2A0C                        __end_of_ldexp 2B44  
                      __end_of_frexp 320E                  __end_of_Timer0_Init 38D2  
                __end_of_Timer1_Init 38F6                  __end_of_Timer2_Init 38E4  
                         ??_CCP1_ISR 0001                 __end_of_LCD_WriteCmd 34D2  
         ComputeWaterVol@d_mmPerTick 0085                              ??_floor 005B  
                            ??_ldexp 008B                              ??_frexp 0045  
                       sprintf@width 0023                           __pbssBANK0 00B5  
                         __pbssBANK1 0100                   __size_of_eval_poly 0104  
                         ??_LCD_GoTo 000A                           ??_LCD_Init 0009  
                      ?_Timer1_Reset 0001                          ?_Timer0_ISR 0001  
                        ?_Timer2_ISR 0001                          ?_Timer3_ISR 0001  
                            ?___flge 0002                              ?___fleq 0033  
                            ?___wmul 0002                              _CCP1CON 000FBD  
                            _CCP2CON 000FBA                           _gsCurrDate 00EA  
                         _gsCurrTime 00E1                  __size_of_ComputeTOD 00F0  
                  ??_ComputeWaterVol 007D                            ?___xxtofl 0025  
                            _OSCTUNE 000F9B                        _gb_UpdateTime 00E0  
         __size_of_InitTankVariables 010C                      _Timer3_Sampling 00DA  
                          _CCP1_Init 3908                            _CCP2_Init 38F6  
                    ??_CCP1_Activate 0001                       ??_Timer1_Reset 0001  
            __end_of_LCD_WriteString 354A                              _OscInit 396C  
                            __Hparam 0000                          _Timer0_Init 38BE  
                        _Timer1_Init 38E4                          _Timer2_Init 38D2  
                        _Timer3_Cntr 00CF                              __Lparam 0000  
                      LCD_WriteCmd@i 0006                      __size_of___flge 0104  
                    __size_of___fleq 00AA                              ___fladd 088A  
                            ___fldiv 1630                              ___flneg 37C8  
                            _SysInit 3962                              ___flmul 1204  
                            ___flsub 3780                              ___fltol 2C50  
                    __size_of___wmul 0026                              ___lwdiv 354A  
                            ___lwmod 35BE                         __psmallconst 0800  
                            _gd_Temp 00C9                              _giHours 00DD  
                            _giMonth 005C                              __pcinit 33DE  
                            _imSCntr 00D1                    __end_of_eval_poly 2F5E  
                            __ramtop 0800                              __ptext0 2F5E  
                            __ptext1 38D2                              __ptext2 38E4  
                            __ptext3 38BE                              __ptext4 3962  
                            __ptext5 3858                              __ptext6 396C  
                            __ptext7 36D8                              __ptext8 2B44  
                            __ptext9 2318                            _T1CONbits 000FCD  
                            _dpowers 0801                            _T2CONbits 000FCA  
                       __size_of_exp 02E8                         __size_of_log 019E  
                            _isdigit 3800                         __size_of_pow 0260  
                         ??___xxtofl 0029                            _T3CONbits 000FB1  
           ??_PIN_MANAGER_Initialize 0002                  __size_of_Timer0_ISR 0082  
                __size_of_Timer2_ISR 000C                  __size_of_Timer3_ISR 0050  
                            _sprintf 0D4C                       __pintcode_body 32B8  
               end_of_initialization 344A                              exp@sign 0097  
                      __Lmediumconst 0000                              int_func 32B8  
                         ?_CCP1_Init 0001                           ?_CCP2_Init 0001  
        __end_of_StartDepthDetection 392C                              pow@sign 00A8  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
                            sqrt@grs 002A                              sqrt@exp 002E  
              __size_of_LCD_WriteCmd 007A                            _PORTBbits 000F81  
                          _PORTCbits 000F82                          ___fladd@grs 0074  
                      ___xxtofl@sign 002D                            _TRISBbits 000F93  
                  __size_of_CCP1_ISR 0024                          ___fldiv@grs 0015  
                        ___fldiv@rem 000E                     LCD_GoTo@iCharPos 0009  
                       ??_ComputeTOD 0027       ComputeWaterVol@dWaterHeight_mm 0099  
                        ___flmul@grs 0062                    LCD_WriteString@ix 0009  
                        _CCP2CONbits 000FBA                    __size_of_LCD_GoTo 005C  
                   ?_LCD_WriteString 0005                    __size_of_LCD_Init 0058  
                       _LCD_WriteCmd 3458                       __end_of___flge 2E5A  
                     __end_of___fleq 32B8                       _gd_Default_SOS 00B5  
                     __end_of___wmul 3858                        __pidataCOMRAM 3976  
                      _giMonthEndTbl 01C8                   __end_of_ComputeTOD 314A  
                ComputeWaterVol@dSOS 008F                           floor@expon 007D  
               __end_of_Timer1_Reset 3962        ComputeWaterVol@dEmptySpace_mm 0095  
                start_initialization 33DE                          _iSampleCntr 00DB  
                         eval_poly@d 0079                           eval_poly@n 007B  
                         eval_poly@x 0075                           ldexp@value 0085  
    __size_of_PIN_MANAGER_Initialize 0024                          __end_of_exp 2318  
                        __end_of_log 28CA                          __end_of_pow 2578  
                         frexp@value 003F                          ??_CCP1_Init 0002  
                        ??_CCP2_Init 0002                        _Timer0_Reload 00F5  
              __end_of_LCD_WriteChar 36D8                         ??_Timer0_ISR 0001  
                       ??_Timer2_ISR 0001                        _Timer3_Reload 00F3  
                       ??_Timer3_ISR 0001                      _ComputeWaterVol 19CA  
                           ??___flge 000A                             ??___fleq 003B  
                           ??___wmul 0006                          __pdataBANK0 00E1  
                        __pdataBANK1 01C8                            ___fladd@a 0057  
                          ___fladd@b 0053                            ___fldiv@a 0006  
                          ___fldiv@b 0002                            ___flmul@a 004B  
                          ___flmul@b 0047                          __pbssCOMRAM 005B  
                          ___flsub@a 0079                            ___flsub@b 0075  
                      __pcstackBANK0 0060                    __size_of___xxtofl 01B4  
                 __end_of_Timer0_ISR 33DE                   __end_of_Timer2_ISR 3956  
                 __end_of_Timer3_ISR 3780                         _isdigit$1968 0003  
                        sprintf@flag 001E                          sprintf@prec 0025  
                           ?_OscInit 0001                         ?_Timer0_Init 0001  
                       ?_Timer1_Init 0001                         ?_Timer2_Init 0001  
                   ___lwdiv@dividend 0002               _PIN_MANAGER_Initialize 3858  
                        _giTotalSecs 00D5                            __pintcode 0008  
                           ?___fladd 0053                             ?___fldiv 0002  
                           ?___flneg 0002                             ?_SysInit 0001  
                           ?___flmul 0047                             ?___flsub 0075  
                           ?___fltol 001B                             ?___lwdiv 0002  
                           ?___lwmod 0009         ??_INTERRUPT_InterruptManager 0002  
                        __smallconst 0800                             _CCP1_ISR 387C  
                           ?_isdigit 0001                            _eval_poly 2E5A  
                   ___lwdiv@quotient 0006                             ?_sprintf 000E  
                     __size_of_floor 0142                       __size_of_ldexp 0138  
                     __size_of_frexp 00C4                             _LCD_GoTo 3622  
                           _LCD_Init 36D8              __end_of_ComputeWaterVol 1D14  
                     ___wmul@product 0006                             _LATAbits 000F89  
                           _PIE1bits 000F9D                             _PIE2bits 000FA0  
              __end_of_CCP1_Activate 393E  __size_of_INTERRUPT_InterruptManager 3354  
                 _gd_SensorHeight_mm 00C1                             i2u431_40 3376  
                           i2u431_41 3372                             i2u432_40 338C  
                           i2u432_41 3388                             i2u433_40 33B0  
                           i2u433_41 33AC                             _PIR1bits 000F9E  
                           i2u434_40 33C2                             i2u450_40 32EC  
                           i2u434_41 33BA                             i2u450_41 32E8  
                           i2u451_40 32FA                             i2u451_41 32F6  
                           _PIR2bits 000FA1                             i2u435_48 33C4  
                           i2u436_40 3754                             i2u452_40 3308  
                           i2u436_41 3750                             i2u452_41 3304  
                           i2u437_40 3778                             i2u453_40 331E  
                           i2u437_41 3774                             i2u453_41 331A  
                           i2u454_40 332C                             i2u454_41 3328  
                           i2u455_40 3342                             i2u455_41 333E  
                           i2u456_40 3350                             i2u448_40 32C8  
                           i2u456_41 334C                             i2u448_41 32C4  
                           i2u449_40 32D6                             i2u449_41 32D2  
           ComputeWaterVol@dCurrTemp 0081                __size_of_Timer1_Reset 000C  
               _gd_MaxWaterHeight_mm 00B9                          _gsTotalSecs 00FA  
                  ___wmul@multiplier 0002             ComputeWaterVol@dWaterVol 0089  
                _gd_TankSurfArea_mm2 00C5                           ?_eval_poly 0075  
                        _INTCON2bits 000FF1                            copy_data0 33F2  
                          copy_data1 3412                      _gb_EchoDetected 00DF  
                          frexp@eptr 0043                             _bIncDays 00DC  
                           __Hrparam 0000                         _Timer1_Reset 3956  
                 LCD_WriteCmd@iDelay 0002                     __size_of_OscInit 000A  
                           __Lrparam 0000                   LCD_WriteChar@iChar 0004  
                   __size_of___fladd 04C2                     __size_of___fldiv 039A  
                   __size_of___flneg 0038                     __size_of_SysInit 000A  
                   __size_of___flmul 042C                     __size_of___flsub 0048  
                   __size_of___fltol 0106         __size_of_StartDepthDetection 0012  
                   __size_of___lwdiv 0074                     __size_of___lwmod 0064  
                           _exp$2263 0091                           sprintf@len 001F  
                         sprintf@val 0021                             ___xxtofl 2578  
                   __size_of_isdigit 0032                             _main$980 00B3  
                    ___lwdiv@divisor 0004                      ___lwdiv@counter 0008  
                           __ptext10 272C                             __ptext11 2030  
                           __ptext20 1D14                             __ptext12 2A0C  
                           __ptext21 2578                             __ptext13 28CA  
                           __ptext30 3832                             __ptext22 2C50  
                           __ptext14 314A                             __ptext31 35BE  
                           __ptext23 3780                             __ptext15 320E  
                           __ptext40 3730                             __ptext32 354A  
                           __ptext24 088A                             __ptext16 2D56  
                           __ptext41 394A                             __ptext33 34D2  
                           __ptext25 1204                             __ptext17 2E5A  
                           __ptext42 335C                             __ptext34 367E  
                           __ptext26 1630                             __ptext18 37C8  
                           __ptext43 391A                             __ptext35 3622  
                           __ptext27 305A                             __ptext19 19CA  
                           __ptext44 392C                             __ptext36 3458  
                           __ptext28 0D4C                             __ptext45 387C  
                           __ptext37 38F6                             __ptext29 3800  
                           __ptext46 3956                             __ptext38 3908  
                           _pow$2261 00A0                             _pow$2262 00A4  
                   __size_of_sprintf 04B8                        __size_of_main 00FC  
                   ?_ComputeWaterVol 0001                        __size_of_sqrt 031C  
                           isa$xinst 000000                 __size_of_Timer0_Init 0014  
               __size_of_Timer1_Init 0012                 __size_of_Timer2_Init 0012  
                           int$flags 005D   __end_of_INTERRUPT_InterruptManager 335C  
         _INTERRUPT_InterruptManager 0008             __size_of_LCD_WriteString 0078  
                           exp@coeff 080B                             log@coeff 0833  
                         _INTCONbits 000FF2                          ??_eval_poly 007D  
                           isdigit@c 0004                            sqrt@tfrac 0025  
                           intlevel2 0000                            sprintf@ap 001C  
                          sprintf@cp 001A                            sprintf@sp 000E  
                   ___lwmod@dividend 0009              ?_PIN_MANAGER_Initialize 0001  
                     _gbBacklight_On 00D9                        _LCD_GoTo$1343 000C  
                _giBacklight_Timeout 00F7                             sqrt@frac 0034  
                           sqrt@sign 0023                             sqrt@root 0030  
                           sprintf@c 0026                             sprintf@f 0010  
                    ___lwmod@divisor 000B                      ___lwmod@counter 000D  
             __size_of_LCD_WriteChar 005A                        ___fladd@signs 0071  
     __end_of_PIN_MANAGER_Initialize 387C                         ___fladd@aexp 0072  
                       ___fladd@bexp 0073  
