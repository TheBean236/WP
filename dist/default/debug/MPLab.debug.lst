

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Apr 22 12:39:24 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    75                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    76                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 05/05/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC18F45K50 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     
   114                           	psect	idataCOMRAM
   115  004475                     __pidataCOMRAM:
   116                           	callstack 0
   117                           
   118                           ;initializer for _giDay
   119  004475  01                 	db	1
   120                           
   121                           	psect	idataBANK0
   122  004472                     __pidataBANK0:
   123                           	callstack 0
   124                           
   125                           ;initializer for _Timer3_Reload
   126  004472  FB1D               	dw	64285
   127                           
   128                           ;initializer for _giMonth
   129  004474  04                 	db	4
   130                           
   131                           	psect	idataBANK1
   132  003F72                     __pidataBANK1:
   133                           	callstack 0
   134                           
   135                           ;initializer for _LCD_TestString1
   136  003F72  41                 	db	65
   137  003F73  42                 	db	66
   138  003F74  43                 	db	67
   139  003F75  44                 	db	68
   140  003F76  45                 	db	69
   141  003F77  46                 	db	70
   142  003F78  49                 	db	73
   143  003F79  4A                 	db	74
   144  003F7A  4B                 	db	75
   145  003F7B  4C                 	db	76
   146  003F7C  4D                 	db	77
   147  003F7D  4E                 	db	78
   148  003F7E  4F                 	db	79
   149  003F7F  50                 	db	80
   150  003F80  51                 	db	81
   151  003F81  52                 	db	82
   152  003F82  53                 	db	83
   153  003F83  00                 	db	0
   154                           
   155                           ;initializer for _LCD_TestString2
   156  003F84  31                 	db	49
   157  003F85  32                 	db	50
   158  003F86  33                 	db	51
   159  003F87  34                 	db	52
   160  003F88  35                 	db	53
   161  003F89  36                 	db	54
   162  003F8A  37                 	db	55
   163  003F8B  38                 	db	56
   164  003F8C  39                 	db	57
   165  003F8D  30                 	db	48
   166  003F8E  31                 	db	49
   167  003F8F  32                 	db	50
   168  003F90  33                 	db	51
   169  003F91  34                 	db	52
   170  003F92  35                 	db	53
   171  003F93  36                 	db	54
   172  003F94  00                 	db	0
   173                           
   174                           ;initializer for ComputeWaterVol@F5010
   175  003F95  2D                 	db	45
   176  003F96  2D                 	db	45
   177  003F97  2D                 	db	45
   178  003F98  2D                 	db	45
   179  003F99  20                 	db	32
   180  003F9A  20                 	db	32
   181  003F9B  20                 	db	32
   182  003F9C  20                 	db	32
   183  003F9D  20                 	db	32
   184  003F9E  20                 	db	32
   185  003F9F  20                 	db	32
   186  003FA0  20                 	db	32
   187  003FA1  20                 	db	32
   188  003FA2  20                 	db	32
   189  003FA3  00                 	db	0
   190                           
   191                           ;initializer for ComputeWaterVol@F5012
   192  003FA4  2D                 	db	45
   193  003FA5  2D                 	db	45
   194  003FA6  2D                 	db	45
   195  003FA7  20                 	db	32
   196  003FA8  20                 	db	32
   197  003FA9  20                 	db	32
   198  003FAA  20                 	db	32
   199  003FAB  20                 	db	32
   200  003FAC  20                 	db	32
   201  003FAD  20                 	db	32
   202  003FAE  20                 	db	32
   203  003FAF  20                 	db	32
   204  003FB0  20                 	db	32
   205  003FB1  00                 	db	0
   206                           
   207                           ;initializer for _giMonthEndTbl
   208  003FB2  1F                 	db	31
   209  003FB3  1C                 	db	28
   210  003FB4  1F                 	db	31
   211  003FB5  1E                 	db	30
   212  003FB6  1F                 	db	31
   213  003FB7  1E                 	db	30
   214  003FB8  1F                 	db	31
   215  003FB9  1F                 	db	31
   216  003FBA  1E                 	db	30
   217  003FBB  1F                 	db	31
   218  003FBC  1E                 	db	30
   219  003FBD  1F                 	db	31
   220                           
   221                           ;initializer for ComputeWaterVol@F5014
   222  003FBE  78                 	db	120
   223  003FBF  78                 	db	120
   224  003FC0  78                 	db	120
   225  003FC1  78                 	db	120
   226  003FC2  20                 	db	32
   227  003FC3  20                 	db	32
   228  003FC4  20                 	db	32
   229  003FC5  20                 	db	32
   230  003FC6  20                 	db	32
   231  003FC7  20                 	db	32
   232  003FC8  00                 	db	0
   233                           
   234                           ;initializer for _gsCurrTime
   235  003FC9  30                 	db	48
   236  003FCA  31                 	db	49
   237  003FCB  3A                 	db	58
   238  003FCC  30                 	db	48
   239  003FCD  30                 	db	48
   240  003FCE  3A                 	db	58
   241  003FCF  30                 	db	48
   242  003FD0  30                 	db	48
   243  003FD1  00                 	db	0
   244                           
   245                           ;initializer for _gsCurrDate
   246  003FD2  30                 	db	48
   247  003FD3  31                 	db	49
   248  003FD4  2F                 	db	47
   249  003FD5  30                 	db	48
   250  003FD6  34                 	db	52
   251  003FD7  2F                 	db	47
   252  003FD8  32                 	db	50
   253  003FD9  31                 	db	49
   254  003FDA  00                 	db	0
   255                           
   256                           ;initializer for _LCD_TestString3
   257  003FDB  80                 	db	128
   258  003FDC  81                 	db	129
   259  003FDD  82                 	db	130
   260  003FDE  83                 	db	131
   261  003FDF  84                 	db	132
   262                           
   263                           ;initializer for _Timer3_Sampling
   264  003FE0  01                 	db	1
   265                           
   266                           ;initializer for _giYear
   267  003FE1  15                 	db	21
   268                           
   269                           ;initializer for _gsTotalSecs
   270  003FE2  2D                 	db	45
   271  003FE3  2D                 	db	45
   272  003FE4  2D                 	db	45
   273  003FE5  00                 	db	0
   274                           
   275                           	psect	mediumconst
   276  007EF2                     __pmediumconst:
   277                           	callstack 0
   278  007EF2  00                 	db	0
   279  007EF3                     __powers_:
   280                           	callstack 0
   281  007EF3  0000               	dw	0
   282  007EF5  3F80               	dw	16256
   283  007EF7  0000               	dw	0
   284  007EF9  4120               	dw	16672
   285  007EFB  0000               	dw	0
   286  007EFD  42C8               	dw	17096
   287  007EFF  0000               	dw	0
   288  007F01  447A               	dw	17530
   289  007F03  4000               	dw	16384
   290  007F05  461C               	dw	17948
   291  007F07  5000               	dw	20480
   292  007F09  47C3               	dw	18371
   293  007F0B  2400               	dw	9216
   294  007F0D  4974               	dw	18804
   295  007F0F  9680               	dw	38528
   296  007F11  4B18               	dw	19224
   297  007F13  BC20               	dw	48160
   298  007F15  4CBE               	dw	19646
   299  007F17  6B28               	dw	27432
   300  007F19  4E6E               	dw	20078
   301  007F1B  02F9               	dw	761
   302  007F1D  5015               	dw	20501
   303  007F1F  78EC               	dw	30956
   304  007F21  60AD               	dw	24749
   305  007F23  F2CA               	dw	62154
   306  007F25  7149               	dw	29001
   307  007F27                     __end_of__powers_:
   308                           	callstack 0
   309  007F27                     __npowers_:
   310                           	callstack 0
   311  007F27  0000               	dw	0
   312  007F29  3F80               	dw	16256
   313  007F2B  CCCD               	dw	52429
   314  007F2D  3DCC               	dw	15820
   315  007F2F  D70A               	dw	55050
   316  007F31  3C23               	dw	15395
   317  007F33  126F               	dw	4719
   318  007F35  3A83               	dw	14979
   319  007F37  B717               	dw	46871
   320  007F39  38D1               	dw	14545
   321  007F3B  C5AC               	dw	50604
   322  007F3D  3727               	dw	14119
   323  007F3F  37BD               	dw	14269
   324  007F41  3586               	dw	13702
   325  007F43  BF95               	dw	49045
   326  007F45  33D6               	dw	13270
   327  007F47  CC77               	dw	52343
   328  007F49  322B               	dw	12843
   329  007F4B  705F               	dw	28767
   330  007F4D  3089               	dw	12425
   331  007F4F  E6FF               	dw	59135
   332  007F51  2EDB               	dw	11995
   333  007F53  E508               	dw	58632
   334  007F55  1E3C               	dw	7740
   335  007F57  4260               	dw	16992
   336  007F59  0DA2               	dw	3490
   337  007F5B                     __end_of__npowers_:
   338                           	callstack 0
   339  007F5B                     exp@coeff:
   340                           	callstack 0
   341  007F5B  0000               	dw	0
   342  007F5D  3F80               	dw	16256
   343  007F5F  7218               	dw	29208
   344  007F61  3F31               	dw	16177
   345  007F63  FDF0               	dw	65008
   346  007F65  3E75               	dw	15989
   347  007F67  5847               	dw	22599
   348  007F69  3D63               	dw	15715
   349  007F6B  9558               	dw	38232
   350  007F6D  3C1D               	dw	15389
   351  007F6F  C482               	dw	50306
   352  007F71  3AAE               	dw	15022
   353  007F73  78A8               	dw	30888
   354  007F75  3921               	dw	14625
   355  007F77  93EF               	dw	37871
   356  007F79  3780               	dw	14208
   357  007F7B  92A0               	dw	37536
   358  007F7D  35A7               	dw	13735
   359  007F7F  5646               	dw	22086
   360  007F81  3415               	dw	13333
   361  007F83                     __end_ofexp@coeff:
   362                           	callstack 0
   363  007F83                     _dpowers:
   364                           	callstack 0
   365  007F83  0001               	dw	1
   366  007F85  0000               	dw	0
   367  007F87  000A               	dw	10
   368  007F89  0000               	dw	0
   369  007F8B  0064               	dw	100
   370  007F8D  0000               	dw	0
   371  007F8F  03E8               	dw	1000
   372  007F91  0000               	dw	0
   373  007F93  2710               	dw	10000
   374  007F95  0000               	dw	0
   375  007F97  86A0               	dw	34464
   376  007F99  0001               	dw	1
   377  007F9B  4240               	dw	16960
   378  007F9D  000F               	dw	15
   379  007F9F  9680               	dw	38528
   380  007FA1  0098               	dw	152
   381  007FA3  E100               	dw	57600
   382  007FA5  05F5               	dw	1525
   383  007FA7  CA00               	dw	51712
   384  007FA9  3B9A               	dw	15258
   385  007FAB                     __end_of_dpowers:
   386                           	callstack 0
   387  007FAB                     log@coeff:
   388                           	callstack 0
   389  007FAB  0000               	dw	0
   390  007FAD  0000               	dw	0
   391  007FAF  FFC4               	dw	65476
   392  007FB1  3F7F               	dw	16255
   393  007FB3  EF80               	dw	61312
   394  007FB5  BEFF               	dw	48895
   395  007FB7  E190               	dw	57744
   396  007FB9  3EA9               	dw	16041
   397  007FBB  82EC               	dw	33516
   398  007FBD  BE76               	dw	48758
   399  007FBF  AD82               	dw	44418
   400  007FC1  3E2B               	dw	15915
   401  007FC3  3C0E               	dw	15374
   402  007FC5  BDC3               	dw	48579
   403  007FC7  D187               	dw	53639
   404  007FC9  3D13               	dw	15635
   405  007FCB  7841               	dw	30785
   406  007FCD  BBD3               	dw	48083
   407  007FCF                     __end_oflog@coeff:
   408                           	callstack 0
   409  007FCF  E17B               	dw	57723
   410  007FD1                     __end_of_Timer0_Reload_Val:
   411                           	callstack 0
   412  0000                     _CCPTMRSbits	set	3929
   413  0000                     _ANSELA	set	3931
   414  0000                     _ANSELE	set	3935
   415  0000                     _ANSELB	set	3932
   416  0000                     _ANSELC	set	3933
   417  0000                     _ANSELD	set	3934
   418  0000                     _TMR0	set	4054
   419  0000                     _TMR1L	set	4046
   420  0000                     _TMR1H	set	4047
   421  0000                     _T1GCON	set	4044
   422  0000                     _T1CON	set	4045
   423  0000                     _PORTBbits	set	3969
   424  0000                     _TRISBbits	set	3987
   425  0000                     _CCPR2H	set	3985
   426  0000                     _CCP2CONbits	set	3991
   427  0000                     _CCPR2L	set	3984
   428  0000                     _CCP2CON	set	3991
   429  0000                     _CCPR1L	set	4030
   430  0000                     _CCPR1H	set	4031
   431  0000                     _CCP1CON	set	4029
   432  0000                     _INTCON2bits	set	4081
   433  0000                     _WPUB	set	3973
   434  0000                     _TRISCbits	set	3988
   435  0000                     _TRISD	set	3989
   436  0000                     _TRISC	set	3988
   437  0000                     _TRISB	set	3987
   438  0000                     _TRISA	set	3986
   439  0000                     _TRISE	set	3990
   440  0000                     _LATC	set	3979
   441  0000                     _LATB	set	3978
   442  0000                     _LATA	set	3977
   443  0000                     _LATD	set	3980
   444  0000                     _LATE	set	3981
   445  0000                     _T3CON	set	4017
   446  0000                     _TMR3L	set	4018
   447  0000                     _TMR3H	set	4019
   448  0000                     _T3CONbits	set	4017
   449  0000                     _T2CON	set	4026
   450  0000                     _PR2	set	4027
   451  0000                     _T1CONbits	set	4045
   452  0000                     _LATAbits	set	3977
   453  0000                     _TMR2	set	4028
   454  0000                     _T2CONbits	set	4026
   455  0000                     _T0CON	set	4053
   456  0000                     _LATCbits	set	3979
   457  0000                     _ACTCON	set	4021
   458  0000                     _OSCTUNE	set	3995
   459  0000                     _OSCCON2	set	4050
   460  0000                     _OSCCON	set	4051
   461  0000                     _PIR1bits	set	3998
   462  0000                     _PIE1bits	set	3997
   463  0000                     _PIR2bits	set	4001
   464  0000                     _PIE2bits	set	4000
   465  0000                     _INTCONbits	set	4082
   466  0000                     _LATC7	set	31839
   467  0000                     _LATC6	set	31838
   468  007FD1                     STR_2:
   469  007FD1  45                 	db	69	;'E'
   470  007FD2  63                 	db	99	;'c'
   471  007FD3  68                 	db	104	;'h'
   472  007FD4  6F                 	db	111	;'o'
   473  007FD5  3A                 	db	58	;':'
   474  007FD6  2D                 	db	45
   475  007FD7  2D                 	db	45
   476  007FD8  2D                 	db	45
   477  007FD9  2D                 	db	45
   478  007FDA  6D                 	db	109	;'m'
   479  007FDB  6D                 	db	109	;'m'
   480  007FDC  20                 	db	32
   481  007FDD  2D                 	db	45
   482  007FDE  2D                 	db	45
   483  007FDF  2D                 	db	45
   484  007FE0  53                 	db	83	;'S'
   485  007FE1  00                 	db	0
   486  007FE2                     STR_1:
   487  007FE2  47                 	db	71	;'G'
   488  007FE3  61                 	db	97	;'a'
   489  007FE4  6C                 	db	108	;'l'
   490  007FE5  73                 	db	115	;'s'
   491  007FE6  3A                 	db	58	;':'
   492  007FE7  2D                 	db	45
   493  007FE8  2D                 	db	45
   494  007FE9  2D                 	db	45
   495  007FEA  2D                 	db	45
   496  007FEB  20                 	db	32
   497  007FEC  2D                 	db	45
   498  007FED  2D                 	db	45
   499  007FEE  2D                 	db	45
   500  007FEF  25                 	db	37
   501  007FF0  00                 	db	0
   502  007FF1                     STR_5:
   503  007FF1  25                 	db	37
   504  007FF2  34                 	db	52	;'4'
   505  007FF3  2E                 	db	46
   506  007FF4  30                 	db	48	;'0'
   507  007FF5  66                 	db	102	;'f'
   508  007FF6  00                 	db	0
   509  007FF7                     STR_4:
   510  007FF7  25                 	db	37
   511  007FF8  33                 	db	51	;'3'
   512  007FF9  69                 	db	105	;'i'
   513  007FFA  00                 	db	0
   514  007FFB                     STR_3:
   515  007FFB  25                 	db	37
   516  007FFC  34                 	db	52	;'4'
   517  007FFD  69                 	db	105	;'i'
   518  007FFE  00                 	db	0
   519  007FFF  00                 	db	0	; dummy byte at the end
   520  0000                     
   521                           ; #config settings
   522                           
   523                           	psect	cinit
   524  003EFC                     __pcinit:
   525                           	callstack 0
   526  003EFC                     start_initialization:
   527                           	callstack 0
   528  003EFC                     __initialization:
   529                           	callstack 0
   530                           
   531                           ; Initialize objects allocated to BANK1 (116 bytes)
   532                           ; load TBLPTR registers with __pidataBANK1
   533  003EFC  0E72               	movlw	low __pidataBANK1
   534  003EFE  6EF6               	movwf	tblptrl,c
   535  003F00  0E3F               	movlw	high __pidataBANK1
   536  003F02  6EF7               	movwf	tblptrh,c
   537  003F04  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   538  003F06  6EF8               	movwf	tblptru,c
   539  003F08  EE01  F000         	lfsr	0,__pdataBANK1
   540  003F0C  EE10 F074          	lfsr	1,116
   541  003F10                     copy_data0:
   542  003F10  0009               	tblrd		*+
   543  003F12  CFF5 FFEE          	movff	tablat,postinc0
   544  003F16  50E5               	movf	postdec1,w,c
   545  003F18  50E1               	movf	fsr1l,w,c
   546  003F1A  E1FA               	bnz	copy_data0
   547                           
   548                           ; Initialize objects allocated to BANK0 (3 bytes)
   549                           ; load TBLPTR registers with __pidataBANK0
   550  003F1C  0E72               	movlw	low __pidataBANK0
   551  003F1E  6EF6               	movwf	tblptrl,c
   552  003F20  0E44               	movlw	high __pidataBANK0
   553  003F22  6EF7               	movwf	tblptrh,c
   554  003F24  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   555  003F26  6EF8               	movwf	tblptru,c
   556  003F28  0009               	tblrd		*+	;fetch initializer
   557  003F2A  CFF5 F0FD          	movff	tablat,__pdataBANK0
   558  003F2E  0009               	tblrd		*+	;fetch initializer
   559  003F30  CFF5 F0FE          	movff	tablat,__pdataBANK0+1
   560  003F34  0009               	tblrd		*+	;fetch initializer
   561  003F36  CFF5 F0FF          	movff	tablat,__pdataBANK0+2
   562                           
   563                           ; Initialize objects allocated to COMRAM (1 bytes)
   564                           ; load TBLPTR registers with __pidataCOMRAM
   565  003F3A  0E75               	movlw	low __pidataCOMRAM
   566  003F3C  6EF6               	movwf	tblptrl,c
   567  003F3E  0E44               	movlw	high __pidataCOMRAM
   568  003F40  6EF7               	movwf	tblptrh,c
   569  003F42  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   570  003F44  6EF8               	movwf	tblptru,c
   571  003F46  0009               	tblrd		*+	;fetch initializer
   572  003F48  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   573                           
   574                           ; Clear objects allocated to BANK1 (29 bytes)
   575  003F4C  EE01  F074         	lfsr	0,__pbssBANK1
   576  003F50  0E1D               	movlw	29
   577  003F52                     clear_0:
   578  003F52  6AEE               	clrf	postinc0,c
   579  003F54  06E8               	decf	wreg,f,c
   580  003F56  E1FD               	bnz	clear_0
   581                           
   582                           ; Clear objects allocated to BANK0 (5 bytes)
   583  003F58  0100               	movlb	0
   584  003F5A  6BFC               	clrf	(__pbssBANK0+4)& (0+255),b
   585  003F5C  6BFB               	clrf	(__pbssBANK0+3)& (0+255),b
   586  003F5E  6BFA               	clrf	(__pbssBANK0+2)& (0+255),b
   587  003F60  6BF9               	clrf	(__pbssBANK0+1)& (0+255),b
   588  003F62  6BF8               	clrf	__pbssBANK0& (0+255),b
   589  003F64                     end_of_initialization:
   590                           	callstack 0
   591  003F64                     __end_of__initialization:
   592                           	callstack 0
   593  003F64  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   594  003F66  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   595  003F68  0E00               	movlw	low (__Lmediumconst shr (0+16))
   596  003F6A  6EF8               	movwf	tblptru,c
   597  003F6C  0100               	movlb	0
   598  003F6E  EF7D  F01E         	goto	_main	;jump to C main() function
   599                           
   600                           	psect	dataCOMRAM
   601  00005D                     __pdataCOMRAM:
   602                           	callstack 0
   603  00005D                     _giDay:
   604                           	callstack 0
   605  00005D                     	ds	1
   606                           
   607                           	psect	bssBANK0
   608  0000F8                     __pbssBANK0:
   609                           	callstack 0
   610  0000F8                     _giHours:
   611                           	callstack 0
   612  0000F8                     	ds	1
   613  0000F9                     _giMins:
   614                           	callstack 0
   615  0000F9                     	ds	1
   616  0000FA                     _giSecs:
   617                           	callstack 0
   618  0000FA                     	ds	1
   619  0000FB                     _gb_EchoDetected:
   620                           	callstack 0
   621  0000FB                     	ds	1
   622  0000FC                     _gb_UpdateTime:
   623                           	callstack 0
   624  0000FC                     	ds	1
   625                           
   626                           	psect	dataBANK0
   627  0000FD                     __pdataBANK0:
   628                           	callstack 0
   629  0000FD                     _Timer3_Reload:
   630                           	callstack 0
   631  0000FD                     	ds	2
   632  0000FF                     _giMonth:
   633                           	callstack 0
   634  0000FF                     	ds	1
   635                           
   636                           	psect	bssBANK1
   637  000174                     __pbssBANK1:
   638                           	callstack 0
   639  000174                     _gd_MaxWaterHeight_mm:
   640                           	callstack 0
   641  000174                     	ds	4
   642  000178                     _gd_TankGalsPer_mm:
   643                           	callstack 0
   644  000178                     	ds	4
   645  00017C                     _gd_SensorHeight_mm:
   646                           	callstack 0
   647  00017C                     	ds	4
   648  000180                     _gd_TankSurfArea_mm2:
   649                           	callstack 0
   650  000180                     	ds	4
   651  000184                     _gd_Temp:
   652                           	callstack 0
   653  000184                     	ds	4
   654  000188                     _errno:
   655                           	callstack 0
   656  000188                     	ds	2
   657  00018A                     _Timer3_Cntr:
   658                           	callstack 0
   659  00018A                     	ds	2
   660  00018C                     _giTotalSecs:
   661                           	callstack 0
   662  00018C                     	ds	2
   663  00018E                     _giEchoCounter:
   664                           	callstack 0
   665  00018E                     	ds	2
   666  000190                     _bIncDays:
   667                           	callstack 0
   668  000190                     	ds	1
   669                           
   670                           	psect	dataBANK1
   671  000100                     __pdataBANK1:
   672                           	callstack 0
   673  000100                     _LCD_TestString1:
   674                           	callstack 0
   675  000100                     	ds	18
   676  000112                     _LCD_TestString2:
   677                           	callstack 0
   678  000112                     	ds	17
   679  000123                     ComputeWaterVol@F5010:
   680                           	callstack 0
   681  000123                     	ds	15
   682  000132                     ComputeWaterVol@F5012:
   683                           	callstack 0
   684  000132                     	ds	14
   685  000140                     _giMonthEndTbl:
   686                           	callstack 0
   687  000140                     	ds	12
   688  00014C                     ComputeWaterVol@F5014:
   689                           	callstack 0
   690  00014C                     	ds	11
   691  000157                     _gsCurrTime:
   692                           	callstack 0
   693  000157                     	ds	9
   694  000160                     _gsCurrDate:
   695                           	callstack 0
   696  000160                     	ds	9
   697  000169                     _LCD_TestString3:
   698                           	callstack 0
   699  000169                     	ds	5
   700  00016E                     _Timer3_Sampling:
   701                           	callstack 0
   702  00016E                     	ds	1
   703  00016F                     _giYear:
   704                           	callstack 0
   705  00016F                     	ds	1
   706  000170                     _gsTotalSecs:
   707                           	callstack 0
   708  000170                     	ds	4
   709                           
   710                           	psect	cstackBANK0
   711  000060                     __pcstackBANK0:
   712                           	callstack 0
   713  000060                     ___flmul@sign:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x0
   717  000060                     	ds	1
   718  000061                     ___flmul@aexp:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x1
   722  000061                     	ds	1
   723  000062                     ___flmul@grs:
   724                           	callstack 0
   725                           
   726                           ; 4 bytes @ 0x2
   727  000062                     	ds	4
   728  000066                     ___flmul@bexp:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x6
   732  000066                     	ds	1
   733  000067                     ___flmul@prod:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x7
   737  000067                     	ds	4
   738  00006B                     ___flmul@temp:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0xB
   742  00006B                     	ds	2
   743  00006D                     _fround$2443:
   744                           	callstack 0
   745                           
   746                           ; 4 bytes @ 0xD
   747  00006D                     	ds	4
   748  000071                     _fround$2442:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x11
   752  000071                     	ds	4
   753  000075                     fround@prec:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x15
   757  000075                     	ds	1
   758  000076                     ?___fladd:
   759                           	callstack 0
   760  000076                     ___fladd@b:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x16
   764  000076                     	ds	4
   765  00007A                     ___fladd@a:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x1A
   769  00007A                     	ds	4
   770  00007E                     ___fladd@signs:
   771                           	callstack 0
   772                           
   773                           ; 1 bytes @ 0x1E
   774  00007E                     	ds	1
   775  00007F                     ___fladd@aexp:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x1F
   779  00007F                     	ds	1
   780  000080                     ___fladd@bexp:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0x20
   784  000080                     	ds	1
   785  000081                     ___fladd@grs:
   786                           	callstack 0
   787                           
   788                           ; 1 bytes @ 0x21
   789  000081                     	ds	1
   790  000082                     ?_sqrt:
   791                           	callstack 0
   792  000082                     ?___flsub:
   793                           	callstack 0
   794  000082                     ?_floor:
   795                           	callstack 0
   796  000082                     ?_eval_poly:
   797                           	callstack 0
   798  000082                     ___flsub@b:
   799                           	callstack 0
   800  000082                     sqrt@a:
   801                           	callstack 0
   802  000082                     eval_poly@x:
   803                           	callstack 0
   804  000082                     floor@x:
   805                           	callstack 0
   806                           
   807                           ; 4 bytes @ 0x22
   808  000082                     	ds	4
   809  000086                     ??_sqrt:
   810  000086                     eval_poly@d:
   811                           	callstack 0
   812  000086                     ___flsub@a:
   813                           	callstack 0
   814  000086                     floor@i:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x26
   818  000086                     	ds	2
   819  000088                     eval_poly@n:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x28
   823  000088                     	ds	2
   824  00008A                     ??_eval_poly:
   825  00008A                     ?_sprintf:
   826                           	callstack 0
   827  00008A                     sqrt@sign:
   828                           	callstack 0
   829  00008A                     sprintf@sp:
   830                           	callstack 0
   831  00008A                     floor@expon:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x2A
   835  00008A                     	ds	1
   836  00008B                     sqrt@i:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x2B
   840  00008B                     	ds	1
   841  00008C                     sprintf@f:
   842                           	callstack 0
   843  00008C                     sqrt@tfrac:
   844                           	callstack 0
   845                           
   846                           ; 4 bytes @ 0x2C
   847  00008C                     	ds	2
   848  00008E                     eval_poly@res:
   849                           	callstack 0
   850                           
   851                           ; 4 bytes @ 0x2E
   852  00008E                     	ds	2
   853  000090                     sqrt@p:
   854                           	callstack 0
   855                           
   856                           ; 1 bytes @ 0x30
   857  000090                     	ds	1
   858  000091                     sqrt@grs:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x31
   862  000091                     	ds	1
   863  000092                     ??_sprintf:
   864  000092                     ?_log:
   865                           	callstack 0
   866  000092                     ?_ldexp:
   867                           	callstack 0
   868  000092                     ldexp@value:
   869                           	callstack 0
   870  000092                     log@x:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x32
   874  000092                     	ds	3
   875  000095                     sqrt@exp:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x35
   879  000095                     	ds	1
   880  000096                     ldexp@newexp:
   881                           	callstack 0
   882  000096                     _sprintf$2445:
   883                           	callstack 0
   884                           
   885                           ; 4 bytes @ 0x36
   886  000096                     	ds	1
   887  000097                     sqrt@root:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x37
   891  000097                     	ds	1
   892  000098                     ?_exp:
   893                           	callstack 0
   894  000098                     exp@x:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x38
   898  000098                     	ds	2
   899  00009A                     sprintf@ap:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x3A
   903  00009A                     	ds	1
   904  00009B                     sqrt@frac:
   905                           	callstack 0
   906                           
   907                           ; 4 bytes @ 0x3B
   908  00009B                     	ds	1
   909  00009C                     sprintf@flag:
   910                           	callstack 0
   911  00009C                     _exp$2448:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0x3C
   915  00009C                     	ds	2
   916  00009E                     sprintf@width:
   917                           	callstack 0
   918                           
   919                           ; 2 bytes @ 0x3E
   920  00009E                     	ds	2
   921  0000A0                     exp@exponent:
   922                           	callstack 0
   923  0000A0                     sprintf@tmpval:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x40
   927  0000A0                     	ds	2
   928  0000A2                     exp@sign:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x42
   932  0000A2                     	ds	1
   933  0000A3                     ?_pow:
   934                           	callstack 0
   935  0000A3                     pow@x:
   936                           	callstack 0
   937                           
   938                           ; 4 bytes @ 0x43
   939  0000A3                     	ds	1
   940  0000A4                     sprintf@val:
   941                           	callstack 0
   942                           
   943                           ; 4 bytes @ 0x44
   944  0000A4                     	ds	3
   945  0000A7                     pow@y:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x47
   949  0000A7                     	ds	1
   950  0000A8                     sprintf@eexp:
   951                           	callstack 0
   952                           
   953                           ; 2 bytes @ 0x48
   954  0000A8                     	ds	2
   955  0000AA                     sprintf@fval:
   956                           	callstack 0
   957                           
   958                           ; 4 bytes @ 0x4A
   959  0000AA                     	ds	1
   960  0000AB                     _pow$2446:
   961                           	callstack 0
   962                           
   963                           ; 4 bytes @ 0x4B
   964  0000AB                     	ds	3
   965  0000AE                     sprintf@prec:
   966                           	callstack 0
   967                           
   968                           ; 2 bytes @ 0x4E
   969  0000AE                     	ds	1
   970  0000AF                     _pow$2447:
   971                           	callstack 0
   972                           
   973                           ; 4 bytes @ 0x4F
   974  0000AF                     	ds	1
   975  0000B0                     sprintf@c:
   976                           	callstack 0
   977                           
   978                           ; 1 bytes @ 0x50
   979  0000B0                     	ds	1
   980  0000B1                     ??_ComputeWaterVol:
   981  0000B1                     ??_ComputeTOD:
   982                           
   983                           ; 1 bytes @ 0x51
   984  0000B1                     	ds	2
   985  0000B3                     pow@sign:
   986                           	callstack 0
   987                           
   988                           ; 1 bytes @ 0x53
   989  0000B3                     	ds	1
   990  0000B4                     pow@yi:
   991                           	callstack 0
   992                           
   993                           ; 4 bytes @ 0x54
   994  0000B4                     	ds	1
   995  0000B5                     ComputeWaterVol@sGals:
   996                           	callstack 0
   997                           
   998                           ; 15 bytes @ 0x55
   999  0000B5                     	ds	3
  1000  0000B8                     _InitTankVariables$2441:
  1001                           	callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x58
  1004  0000B8                     	ds	12
  1005  0000C4                     ComputeWaterVol@sFill:
  1006                           	callstack 0
  1007                           
  1008                           ; 14 bytes @ 0x64
  1009  0000C4                     	ds	14
  1010  0000D2                     ComputeWaterVol@sEchoMM:
  1011                           	callstack 0
  1012                           
  1013                           ; 11 bytes @ 0x72
  1014  0000D2                     	ds	11
  1015  0000DD                     ComputeWaterVol@d_CurrTemp:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x7D
  1019  0000DD                     	ds	4
  1020  0000E1                     ComputeWaterVol@d_SOS:
  1021                           	callstack 0
  1022                           
  1023                           ; 4 bytes @ 0x81
  1024  0000E1                     	ds	4
  1025  0000E5                     ComputeWaterVol@d_mmPerTick:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0x85
  1029  0000E5                     	ds	4
  1030  0000E9                     ComputeWaterVol@d_WaterVol:
  1031                           	callstack 0
  1032                           
  1033                           ; 4 bytes @ 0x89
  1034  0000E9                     	ds	4
  1035  0000ED                     ComputeWaterVol@i_Gals:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x8D
  1039  0000ED                     	ds	2
  1040  0000EF                     ComputeWaterVol@i_PercentFull:
  1041                           	callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x8F
  1044  0000EF                     	ds	1
  1045  0000F0                     ComputeWaterVol@d_EmptySpace_mm:
  1046                           	callstack 0
  1047                           
  1048                           ; 4 bytes @ 0x90
  1049  0000F0                     	ds	4
  1050  0000F4                     ComputeWaterVol@d_WaterHeight_mm:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x94
  1054  0000F4                     	ds	4
  1055                           
  1056                           	psect	cstackCOMRAM
  1057  000001                     __pcstackCOMRAM:
  1058                           	callstack 0
  1059  000001                     ??_Timer0_ISR:
  1060  000001                     
  1061                           ; 1 bytes @ 0x0
  1062  000001                     	ds	1
  1063  000002                     ??_isdigit:
  1064  000002                     ??_LCD_WriteChar:
  1065  000002                     ?___wmul:
  1066                           	callstack 0
  1067  000002                     ?___awmod:
  1068                           	callstack 0
  1069  000002                     ?___lwmod:
  1070                           	callstack 0
  1071  000002                     ?__tdiv_to_l_:
  1072                           	callstack 0
  1073  000002                     ?__div_to_l_:
  1074                           	callstack 0
  1075  000002                     ?___fldiv:
  1076                           	callstack 0
  1077  000002                     ?___lldiv:
  1078                           	callstack 0
  1079  000002                     ?___flneg:
  1080                           	callstack 0
  1081  000002                     _CCP2_Init$1297:
  1082                           	callstack 0
  1083  000002                     LCD_WriteCmd@iDelay:
  1084                           	callstack 0
  1085  000002                     ___wmul@multiplier:
  1086                           	callstack 0
  1087  000002                     ___awmod@dividend:
  1088                           	callstack 0
  1089  000002                     ___lwmod@dividend:
  1090                           	callstack 0
  1091  000002                     ___lldiv@dividend:
  1092                           	callstack 0
  1093  000002                     __div_to_l_@f1:
  1094                           	callstack 0
  1095  000002                     ___flge@ff1:
  1096                           	callstack 0
  1097  000002                     ___flneg@f1:
  1098                           	callstack 0
  1099  000002                     __tdiv_to_l_@f1:
  1100                           	callstack 0
  1101  000002                     ___fldiv@b:
  1102                           	callstack 0
  1103                           
  1104                           ; 4 bytes @ 0x1
  1105  000002                     	ds	1
  1106  000003                     _isdigit$2139:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x2
  1110  000003                     	ds	1
  1111  000004                     ??_LCD_WriteCmd:
  1112  000004                     LCD_WriteChar@iChar:
  1113                           	callstack 0
  1114  000004                     isdigit@c:
  1115                           	callstack 0
  1116  000004                     ___wmul@multiplicand:
  1117                           	callstack 0
  1118  000004                     ___awmod@divisor:
  1119                           	callstack 0
  1120  000004                     ___lwmod@divisor:
  1121                           	callstack 0
  1122                           
  1123                           ; 2 bytes @ 0x3
  1124  000004                     	ds	1
  1125  000005                     LCD_WriteString@iData:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x4
  1129  000005                     	ds	1
  1130  000006                     ___awmod@counter:
  1131                           	callstack 0
  1132  000006                     ___lwmod@counter:
  1133                           	callstack 0
  1134  000006                     LCD_WriteCmd@i:
  1135                           	callstack 0
  1136  000006                     ___wmul@product:
  1137                           	callstack 0
  1138  000006                     ___lldiv@divisor:
  1139                           	callstack 0
  1140  000006                     __div_to_l_@f2:
  1141                           	callstack 0
  1142  000006                     ___flge@ff2:
  1143                           	callstack 0
  1144  000006                     __tdiv_to_l_@f2:
  1145                           	callstack 0
  1146  000006                     ___fldiv@a:
  1147                           	callstack 0
  1148                           
  1149                           ; 4 bytes @ 0x5
  1150  000006                     	ds	1
  1151  000007                     ??_LCD_WriteString:
  1152  000007                     ?___lwdiv:
  1153                           	callstack 0
  1154  000007                     ___awmod@sign:
  1155                           	callstack 0
  1156  000007                     ___lwdiv@dividend:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x6
  1160  000007                     	ds	1
  1161  000008                     ?___awdiv:
  1162                           	callstack 0
  1163  000008                     LCD_WriteCmd@iCmd:
  1164                           	callstack 0
  1165  000008                     ___awdiv@dividend:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x7
  1169  000008                     	ds	1
  1170  000009                     ??_LCD_Init:
  1171  000009                     LCD_WriteString@ix:
  1172                           	callstack 0
  1173  000009                     LCD_GoTo@iCharPos:
  1174                           	callstack 0
  1175  000009                     ___lwdiv@divisor:
  1176                           	callstack 0
  1177                           
  1178                           ; 2 bytes @ 0x8
  1179  000009                     	ds	1
  1180  00000A                     ??_LCD_GoTo:
  1181  00000A                     ??__tdiv_to_l_:
  1182  00000A                     ??___fldiv:
  1183  00000A                     ??___flge:
  1184  00000A                     ___awdiv@divisor:
  1185                           	callstack 0
  1186  00000A                     ___lldiv@quotient:
  1187                           	callstack 0
  1188  00000A                     __div_to_l_@quot:
  1189                           	callstack 0
  1190                           
  1191                           ; 4 bytes @ 0x9
  1192  00000A                     	ds	1
  1193  00000B                     ___lwdiv@counter:
  1194                           	callstack 0
  1195                           
  1196                           ; 1 bytes @ 0xA
  1197  00000B                     	ds	1
  1198  00000C                     LCD_GoTo@iPos:
  1199                           	callstack 0
  1200  00000C                     ___awdiv@counter:
  1201                           	callstack 0
  1202  00000C                     ___lwdiv@quotient:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0xB
  1206  00000C                     	ds	1
  1207  00000D                     ___awdiv@sign:
  1208                           	callstack 0
  1209  00000D                     _LCD_GoTo$1458:
  1210                           	callstack 0
  1211  00000D                     __tdiv_to_l_@quot:
  1212                           	callstack 0
  1213                           
  1214                           ; 4 bytes @ 0xC
  1215  00000D                     	ds	1
  1216  00000E                     ___lldiv@counter:
  1217                           	callstack 0
  1218  00000E                     __div_to_l_@cntr:
  1219                           	callstack 0
  1220  00000E                     ___awdiv@quotient:
  1221                           	callstack 0
  1222  00000E                     ___fldiv@rem:
  1223                           	callstack 0
  1224                           
  1225                           ; 4 bytes @ 0xD
  1226  00000E                     	ds	1
  1227  00000F                     ?___llmod:
  1228                           	callstack 0
  1229  00000F                     LCD_GoTo@iLine:
  1230                           	callstack 0
  1231  00000F                     __div_to_l_@exp1:
  1232                           	callstack 0
  1233  00000F                     ___llmod@dividend:
  1234                           	callstack 0
  1235                           
  1236                           ; 4 bytes @ 0xE
  1237  00000F                     	ds	2
  1238  000011                     __tdiv_to_l_@cntr:
  1239                           	callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x10
  1242  000011                     	ds	1
  1243  000012                     __tdiv_to_l_@exp1:
  1244                           	callstack 0
  1245  000012                     ___fldiv@sign:
  1246                           	callstack 0
  1247                           
  1248                           ; 1 bytes @ 0x11
  1249  000012                     	ds	1
  1250  000013                     ___fldiv@new_exp:
  1251                           	callstack 0
  1252  000013                     ___llmod@divisor:
  1253                           	callstack 0
  1254                           
  1255                           ; 4 bytes @ 0x12
  1256  000013                     	ds	2
  1257  000015                     ___fldiv@grs:
  1258                           	callstack 0
  1259                           
  1260                           ; 4 bytes @ 0x14
  1261  000015                     	ds	2
  1262  000017                     ___llmod@counter:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x16
  1266  000017                     	ds	2
  1267  000019                     ___fldiv@bexp:
  1268                           	callstack 0
  1269                           
  1270                           ; 1 bytes @ 0x18
  1271  000019                     	ds	1
  1272  00001A                     ___fldiv@aexp:
  1273                           	callstack 0
  1274                           
  1275                           ; 1 bytes @ 0x19
  1276  00001A                     	ds	1
  1277  00001B                     ?___fltol:
  1278                           	callstack 0
  1279  00001B                     ___fltol@f1:
  1280                           	callstack 0
  1281                           
  1282                           ; 4 bytes @ 0x1A
  1283  00001B                     	ds	4
  1284  00001F                     ??___fltol:
  1285                           
  1286                           ; 1 bytes @ 0x1E
  1287  00001F                     	ds	4
  1288  000023                     ___fltol@sign1:
  1289                           	callstack 0
  1290                           
  1291                           ; 1 bytes @ 0x22
  1292  000023                     	ds	1
  1293  000024                     ___fltol@exp1:
  1294                           	callstack 0
  1295                           
  1296                           ; 1 bytes @ 0x23
  1297  000024                     	ds	1
  1298  000025                     ?___xxtofl:
  1299                           	callstack 0
  1300  000025                     ___xxtofl@val:
  1301                           	callstack 0
  1302                           
  1303                           ; 4 bytes @ 0x24
  1304  000025                     	ds	4
  1305  000029                     ??___xxtofl:
  1306                           
  1307                           ; 1 bytes @ 0x28
  1308  000029                     	ds	4
  1309  00002D                     ___xxtofl@sign:
  1310                           	callstack 0
  1311                           
  1312                           ; 1 bytes @ 0x2C
  1313  00002D                     	ds	1
  1314  00002E                     ___xxtofl@exp:
  1315                           	callstack 0
  1316                           
  1317                           ; 1 bytes @ 0x2D
  1318  00002E                     	ds	1
  1319  00002F                     ___xxtofl@arg:
  1320                           	callstack 0
  1321                           
  1322                           ; 4 bytes @ 0x2E
  1323  00002F                     	ds	4
  1324  000033                     ___fleq@ff1:
  1325                           	callstack 0
  1326                           
  1327                           ; 4 bytes @ 0x32
  1328  000033                     	ds	4
  1329  000037                     ___fleq@ff2:
  1330                           	callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x36
  1333  000037                     	ds	4
  1334  00003B                     ??___fleq:
  1335                           
  1336                           ; 1 bytes @ 0x3A
  1337  00003B                     	ds	4
  1338  00003F                     ?_frexp:
  1339                           	callstack 0
  1340  00003F                     frexp@value:
  1341                           	callstack 0
  1342                           
  1343                           ; 4 bytes @ 0x3E
  1344  00003F                     	ds	4
  1345  000043                     frexp@eptr:
  1346                           	callstack 0
  1347                           
  1348                           ; 2 bytes @ 0x42
  1349  000043                     	ds	2
  1350  000045                     ??_frexp:
  1351                           
  1352                           ; 1 bytes @ 0x44
  1353  000045                     	ds	2
  1354  000047                     ?___flmul:
  1355                           	callstack 0
  1356  000047                     ___flmul@b:
  1357                           	callstack 0
  1358                           
  1359                           ; 4 bytes @ 0x46
  1360  000047                     	ds	4
  1361  00004B                     ___flmul@a:
  1362                           	callstack 0
  1363                           
  1364                           ; 4 bytes @ 0x4A
  1365  00004B                     	ds	4
  1366  00004F                     ??___flmul:
  1367                           
  1368                           ; 1 bytes @ 0x4E
  1369  00004F                     	ds	4
  1370  000053                     ?_fround:
  1371                           	callstack 0
  1372  000053                     ?_scale:
  1373                           	callstack 0
  1374                           
  1375                           ; 4 bytes @ 0x52
  1376  000053                     	ds	4
  1377  000057                     ??___fladd:
  1378  000057                     _scale$2444:
  1379                           	callstack 0
  1380                           
  1381                           ; 4 bytes @ 0x56
  1382  000057                     	ds	4
  1383  00005B                     ??_ldexp:
  1384  00005B                     scale@scl:
  1385                           	callstack 0
  1386  00005B                     log@exponent:
  1387                           	callstack 0
  1388                           
  1389                           ; 2 bytes @ 0x5A
  1390  00005B                     	ds	1
  1391  00005C                     ComputeTOD@bIncDays:
  1392                           	callstack 0
  1393                           
  1394                           ; 1 bytes @ 0x5B
  1395  00005C                     	ds	1
  1396  00005D                     
  1397                           ; 1 bytes @ 0x5C
  1398 ;;
  1399 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1400 ;;
  1401 ;; *************** function _main *****************
  1402 ;; Defined at:
  1403 ;;		line 46 in file "main.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;		None
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;  iLine           1    0        unsigned char 
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      void 
  1410 ;; Registers used:
  1411 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1417 ;;      Params:         0       0       0       0       0       0       0       0       0
  1418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1420 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1421 ;;Total ram usage:        0 bytes
  1422 ;; Hardware stack levels required when called: 9
  1423 ;; This function calls:
  1424 ;;		_CCP1_Init
  1425 ;;		_CCP2_Init
  1426 ;;		_ComputeTOD
  1427 ;;		_ComputeWaterVol
  1428 ;;		_InitTankVariables
  1429 ;;		_LCD_GoTo
  1430 ;;		_LCD_Init
  1431 ;;		_LCD_WriteString
  1432 ;;		_SysInit
  1433 ;;		_Timer0_Init
  1434 ;;		_Timer1_Init
  1435 ;;		_Timer2_Init
  1436 ;;		_Timer3_Init
  1437 ;; This function is called by:
  1438 ;;		Startup code after reset
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text0
  1443  003CFA                     __ptext0:
  1444                           	callstack 0
  1445  003CFA                     _main:
  1446                           	callstack 22
  1447  003CFA                     
  1448                           ;main.c: 53: if (1)
  1449  003CFA  EC32  F022         	call	_SysInit	;wreg free
  1450  003CFE                     
  1451                           ;main.c: 54: {;main.c: 55: LCD_Init();
  1452  003CFE  ECF0  F020         	call	_LCD_Init	;wreg free
  1453  003D02                     
  1454                           ;main.c: 56: LCD_WriteString ("Gals:---- ---%");
  1455  003D02  0EE2               	movlw	low STR_1
  1456  003D04  6E05               	movwf	LCD_WriteString@iData^0,c
  1457  003D06  0E7F               	movlw	high STR_1
  1458  003D08  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  1459  003D0A  EC42  F01F         	call	_LCD_WriteString	;wreg free
  1460  003D0E                     
  1461                           ;main.c: 57: LCD_GoTo(1, 0);
  1462  003D0E  0E00               	movlw	0
  1463  003D10  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  1464  003D12  0E01               	movlw	1
  1465  003D14  EC95  F020         	call	_LCD_GoTo
  1466  003D18                     
  1467                           ;main.c: 58: LCD_WriteString ("Echo:----mm ---S");
  1468  003D18  0ED1               	movlw	low STR_2
  1469  003D1A  6E05               	movwf	LCD_WriteString@iData^0,c
  1470  003D1C  0E7F               	movlw	high STR_2
  1471  003D1E  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  1472  003D20  EC42  F01F         	call	_LCD_WriteString	;wreg free
  1473  003D24                     
  1474                           ;main.c: 59: };main.c: 61: InitTankVariables();
  1475  003D24  EC58  F01C         	call	_InitTankVariables	;wreg free
  1476  003D28                     
  1477                           ;main.c: 62: Timer0_Init();
  1478  003D28  EC0E  F022         	call	_Timer0_Init	;wreg free
  1479  003D2C                     
  1480                           ;main.c: 63: Timer1_Init();
  1481  003D2C  ECE5  F021         	call	_Timer1_Init	;wreg free
  1482  003D30                     
  1483                           ;main.c: 64: Timer2_Init();
  1484  003D30  EC05  F022         	call	_Timer2_Init	;wreg free
  1485  003D34                     
  1486                           ;main.c: 65: Timer3_Init();
  1487  003D34  ECFB  F021         	call	_Timer3_Init	;wreg free
  1488  003D38                     
  1489                           ;main.c: 66: CCP1_Init();
  1490  003D38  ECF0  F021         	call	_CCP1_Init	;wreg free
  1491  003D3C                     
  1492                           ;main.c: 67: CCP2_Init();
  1493  003D3C  ECC7  F021         	call	_CCP2_Init	;wreg free
  1494  003D40                     
  1495                           ;main.c: 69: INTCONbits.GIE = 1;
  1496  003D40  8EF2               	bsf	242,7,c	;volatile
  1497  003D42                     
  1498                           ;main.c: 70: INTCONbits.PEIE = 1;
  1499  003D42  8CF2               	bsf	242,6,c	;volatile
  1500  003D44                     l6949:
  1501                           
  1502                           ;main.c: 73: {;main.c: 74: if (gb_EchoDetected)
  1503  003D44  0100               	movlb	0	; () banked
  1504  003D46  51FB               	movf	_gb_EchoDetected& (0+255),w,b	;volatile
  1505  003D48  B4D8               	btfsc	status,2,c
  1506  003D4A  EFA9  F01E         	goto	u8081
  1507  003D4E  EFAB  F01E         	goto	u8080
  1508  003D52                     u8081:
  1509  003D52  EFB0  F01E         	goto	l6955
  1510  003D56                     u8080:
  1511  003D56                     
  1512                           ; BSR set to: 0
  1513                           ;main.c: 75: {;main.c: 76: ComputeWaterVol();
  1514  003D56  ECDC  F00E         	call	_ComputeWaterVol	;wreg free
  1515  003D5A                     
  1516                           ;main.c: 77: gb_EchoDetected = 0;
  1517  003D5A  0E00               	movlw	0
  1518  003D5C  0100               	movlb	0	; () banked
  1519  003D5E  6FFB               	movwf	_gb_EchoDetected& (0+255),b	;volatile
  1520  003D60                     l6955:
  1521                           
  1522                           ; BSR set to: 0
  1523                           ;main.c: 78: };main.c: 79: if (gb_UpdateTime)
  1524  003D60  51FC               	movf	_gb_UpdateTime& (0+255),w,b	;volatile
  1525  003D62  B4D8               	btfsc	status,2,c
  1526  003D64  EFB6  F01E         	goto	u8091
  1527  003D68  EFB8  F01E         	goto	u8090
  1528  003D6C                     u8091:
  1529  003D6C  EFA2  F01E         	goto	l6949
  1530  003D70                     u8090:
  1531  003D70                     
  1532                           ; BSR set to: 0
  1533                           ;main.c: 80: {;main.c: 81: ComputeTOD();
  1534  003D70  EC4D  F01A         	call	_ComputeTOD	;wreg free
  1535  003D74                     
  1536                           ;main.c: 82: gb_UpdateTime = 0;
  1537  003D74  0E00               	movlw	0
  1538  003D76  0100               	movlb	0	; () banked
  1539  003D78  6FFC               	movwf	_gb_UpdateTime& (0+255),b	;volatile
  1540  003D7A  EFA2  F01E         	goto	l6949
  1541  003D7E  EF56  F000         	goto	start
  1542  003D82                     __end_of_main:
  1543                           	callstack 0
  1544                           
  1545 ;; *************** function _Timer3_Init *****************
  1546 ;; Defined at:
  1547 ;;		line 46 in file "Timer_3.c"
  1548 ;; Parameters:    Size  Location     Type
  1549 ;;		None
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;		None
  1552 ;; Return value:  Size  Location     Type
  1553 ;;                  1    wreg      void 
  1554 ;; Registers used:
  1555 ;;		wreg, status,2
  1556 ;; Tracked objects:
  1557 ;;		On entry : 0/0
  1558 ;;		On exit  : 0/0
  1559 ;;		Unchanged: 0/0
  1560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1561 ;;      Params:         0       0       0       0       0       0       0       0       0
  1562 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1563 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1564 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1565 ;;Total ram usage:        0 bytes
  1566 ;; Hardware stack levels used: 1
  1567 ;; Hardware stack levels required when called: 3
  1568 ;; This function calls:
  1569 ;;		Nothing
  1570 ;; This function is called by:
  1571 ;;		_main
  1572 ;; This function uses a non-reentrant model
  1573 ;;
  1574                           
  1575                           	psect	text1
  1576  0043F6                     __ptext1:
  1577                           	callstack 0
  1578  0043F6                     _Timer3_Init:
  1579                           	callstack 27
  1580  0043F6                     
  1581                           ;Timer_3.c: 50: TMR3H = (uint8_t) (Timer3_Reload >> 8);
  1582  0043F6  0100               	movlb	0	; () banked
  1583  0043F8  51FE               	movf	(_Timer3_Reload+1)& (0+255),w,b
  1584  0043FA  6EB3               	movwf	179,c	;volatile
  1585  0043FC                     
  1586                           ; BSR set to: 0
  1587                           ;Timer_3.c: 51: TMR3L = (uint8_t) Timer3_Reload;
  1588  0043FC  C0FD  FFB2         	movff	_Timer3_Reload,4018	;volatile
  1589  004400                     
  1590                           ; BSR set to: 0
  1591                           ;Timer_3.c: 53: PIR2bits.TMR3IF = 0;
  1592  004400  92A1               	bcf	161,1,c	;volatile
  1593                           
  1594                           ;Timer_3.c: 56: T3CON = 0x33;
  1595  004402  0E33               	movlw	51
  1596  004404  6EB1               	movwf	177,c	;volatile
  1597  004406                     
  1598                           ; BSR set to: 0
  1599                           ;Timer_3.c: 57: PIE2bits.TMR3IE = 1;
  1600  004406  82A0               	bsf	160,1,c	;volatile
  1601  004408                     
  1602                           ; BSR set to: 0
  1603  004408  0012               	return		;funcret
  1604  00440A                     __end_of_Timer3_Init:
  1605                           	callstack 0
  1606                           
  1607 ;; *************** function _Timer2_Init *****************
  1608 ;; Defined at:
  1609 ;;		line 37 in file "Timer_2.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1623 ;;      Params:         0       0       0       0       0       0       0       0       0
  1624 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1626 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1627 ;;Total ram usage:        0 bytes
  1628 ;; Hardware stack levels used: 1
  1629 ;; Hardware stack levels required when called: 3
  1630 ;; This function calls:
  1631 ;;		Nothing
  1632 ;; This function is called by:
  1633 ;;		_main
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           	psect	text2
  1638  00440A                     __ptext2:
  1639                           	callstack 0
  1640  00440A                     _Timer2_Init:
  1641                           	callstack 27
  1642  00440A                     
  1643                           ;Timer_2.c: 40: PR2 = 0x31;
  1644  00440A  0E31               	movlw	49
  1645  00440C  6EBB               	movwf	187,c	;volatile
  1646                           
  1647                           ;Timer_2.c: 43: TMR2 = 0x00;
  1648  00440E  0E00               	movlw	0
  1649  004410  6EBC               	movwf	188,c	;volatile
  1650  004412                     
  1651                           ;Timer_2.c: 44: PIR1bits.TMR2IF = 0;
  1652  004412  929E               	bcf	158,1,c	;volatile
  1653  004414                     
  1654                           ;Timer_2.c: 45: PIE1bits.TMR2IE = 0;
  1655  004414  929D               	bcf	157,1,c	;volatile
  1656                           
  1657                           ;Timer_2.c: 46: T2CON = (10-2)<<3 | 0 | 0;
  1658  004416  0E40               	movlw	64
  1659  004418  6EBA               	movwf	186,c	;volatile
  1660  00441A  0012               	return		;funcret
  1661  00441C                     __end_of_Timer2_Init:
  1662                           	callstack 0
  1663                           
  1664 ;; *************** function _Timer1_Init *****************
  1665 ;; Defined at:
  1666 ;;		line 14 in file "Timer_1.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;		None
  1669 ;; Auto vars:     Size  Location     Type
  1670 ;;		None
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, status,2
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1680 ;;      Params:         0       0       0       0       0       0       0       0       0
  1681 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1683 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1684 ;;Total ram usage:        0 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; Hardware stack levels required when called: 3
  1687 ;; This function calls:
  1688 ;;		Nothing
  1689 ;; This function is called by:
  1690 ;;		_main
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           
  1694                           	psect	text3
  1695  0043CA                     __ptext3:
  1696                           	callstack 0
  1697  0043CA                     _Timer1_Init:
  1698                           	callstack 27
  1699  0043CA                     
  1700                           ;Timer_1.c: 16: PIR1bits.TMR1IF = 0;
  1701  0043CA  909E               	bcf	158,0,c	;volatile
  1702                           
  1703                           ;Timer_1.c: 17: PIE1bits.TMR1IE = 0;
  1704  0043CC  909D               	bcf	157,0,c	;volatile
  1705  0043CE                     
  1706                           ;Timer_1.c: 18: T1CON = 0x02;
  1707  0043CE  0E02               	movlw	2
  1708  0043D0  6ECD               	movwf	205,c	;volatile
  1709                           
  1710                           ;Timer_1.c: 20: T1GCON = 0;
  1711  0043D2  0E00               	movlw	0
  1712  0043D4  6ECC               	movwf	204,c	;volatile
  1713                           
  1714                           ;Timer_1.c: 22: TMR1H = 0;
  1715  0043D6  0E00               	movlw	0
  1716  0043D8  6ECF               	movwf	207,c	;volatile
  1717                           
  1718                           ;Timer_1.c: 23: TMR1L = 0;
  1719  0043DA  0E00               	movlw	0
  1720  0043DC  6ECE               	movwf	206,c	;volatile
  1721  0043DE  0012               	return		;funcret
  1722  0043E0                     __end_of_Timer1_Init:
  1723                           	callstack 0
  1724                           
  1725 ;; *************** function _Timer0_Init *****************
  1726 ;; Defined at:
  1727 ;;		line 23 in file "Timer_0.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;		None
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;		None
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg, status,2
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1741 ;;      Params:         0       0       0       0       0       0       0       0       0
  1742 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1743 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1744 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1745 ;;Total ram usage:        0 bytes
  1746 ;; Hardware stack levels used: 1
  1747 ;; Hardware stack levels required when called: 3
  1748 ;; This function calls:
  1749 ;;		Nothing
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text4
  1756  00441C                     __ptext4:
  1757                           	callstack 0
  1758  00441C                     _Timer0_Init:
  1759                           	callstack 27
  1760  00441C  0EE1               	movlw	225
  1761  00441E  6ED7               	movwf	215,c	;volatile
  1762  004420  0E7B               	movlw	123
  1763  004422  6ED6               	movwf	214,c	;volatile
  1764  004424                     
  1765                           ;Timer_0.c: 28: INTCONbits.TMR0IF = 0;
  1766  004424  94F2               	bcf	242,2,c	;volatile
  1767  004426                     
  1768                           ;Timer_0.c: 31: INTCONbits.TMR0IE = 1;
  1769  004426  8AF2               	bsf	242,5,c	;volatile
  1770                           
  1771                           ;Timer_0.c: 34: T0CON = 0x97;
  1772  004428  0E97               	movlw	151
  1773  00442A  6ED5               	movwf	213,c	;volatile
  1774  00442C  0012               	return		;funcret
  1775  00442E                     __end_of_Timer0_Init:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _SysInit *****************
  1779 ;; Defined at:
  1780 ;;		line 10 in file "SysInit.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1794 ;;      Params:         0       0       0       0       0       0       0       0       0
  1795 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1797 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1798 ;;Total ram usage:        0 bytes
  1799 ;; Hardware stack levels used: 1
  1800 ;; Hardware stack levels required when called: 5
  1801 ;; This function calls:
  1802 ;;		_OscInit
  1803 ;;		_PIN_MANAGER_Initialize
  1804 ;; This function is called by:
  1805 ;;		_main
  1806 ;; This function uses a non-reentrant model
  1807 ;;
  1808                           
  1809                           	psect	text5
  1810  004464                     __ptext5:
  1811                           	callstack 0
  1812  004464                     _SysInit:
  1813                           	callstack 25
  1814  004464                     
  1815                           ;SysInit.c: 13: PIN_MANAGER_Initialize();
  1816  004464  EC1C  F021         	call	_PIN_MANAGER_Initialize	;wreg free
  1817                           
  1818                           ;SysInit.c: 14: OscInit();
  1819  004468  EC17  F022         	call	_OscInit	;wreg free
  1820  00446C  0012               	return		;funcret
  1821  00446E                     __end_of_SysInit:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _PIN_MANAGER_Initialize *****************
  1825 ;; Defined at:
  1826 ;;		line 25 in file "pin_manager.c"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;		None
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;		None
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1840 ;;      Params:         0       0       0       0       0       0       0       0       0
  1841 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1842 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1843 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1844 ;;Total ram usage:        0 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 4
  1847 ;; This function calls:
  1848 ;;		_PIN_MANAGER_IOC
  1849 ;; This function is called by:
  1850 ;;		_SysInit
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854                           	psect	text6
  1855  004238                     __ptext6:
  1856                           	callstack 0
  1857  004238                     _PIN_MANAGER_Initialize:
  1858                           	callstack 25
  1859  004238                     
  1860                           ;pin_manager.c: 30: LATE = 0x00;
  1861  004238  0E00               	movlw	0
  1862  00423A  6E8D               	movwf	141,c	;volatile
  1863                           
  1864                           ;pin_manager.c: 31: LATD = 0x00;
  1865  00423C  0E00               	movlw	0
  1866  00423E  6E8C               	movwf	140,c	;volatile
  1867                           
  1868                           ;pin_manager.c: 32: LATA = 0x00;
  1869  004240  0E00               	movlw	0
  1870  004242  6E89               	movwf	137,c	;volatile
  1871                           
  1872                           ;pin_manager.c: 33: LATB = 0x00;
  1873  004244  0E00               	movlw	0
  1874  004246  6E8A               	movwf	138,c	;volatile
  1875                           
  1876                           ;pin_manager.c: 34: LATC = 0x00;
  1877  004248  0E00               	movlw	0
  1878  00424A  6E8B               	movwf	139,c	;volatile
  1879                           
  1880                           ;pin_manager.c: 39: TRISE = 0x07;
  1881  00424C  0E07               	movlw	7
  1882  00424E  6E96               	movwf	150,c	;volatile
  1883                           
  1884                           ;pin_manager.c: 40: TRISA = 0xD0;
  1885  004250  0ED0               	movlw	208
  1886  004252  6E92               	movwf	146,c	;volatile
  1887                           
  1888                           ;pin_manager.c: 41: TRISB = 0x00;
  1889  004254  0E00               	movlw	0
  1890  004256  6E93               	movwf	147,c	;volatile
  1891                           
  1892                           ;pin_manager.c: 42: TRISC = 0x84;
  1893  004258  0E84               	movlw	132
  1894  00425A  6E94               	movwf	148,c	;volatile
  1895  00425C                     
  1896                           ;pin_manager.c: 43: TRISD = 0xFF;
  1897  00425C  6895               	setf	149,c	;volatile
  1898  00425E                     
  1899                           ;pin_manager.c: 44: TRISCbits.RC0 = 0;
  1900  00425E  9094               	bcf	148,0,c	;volatile
  1901  004260                     
  1902                           ;pin_manager.c: 45: TRISCbits.RC6 = 0;
  1903  004260  9C94               	bcf	148,6,c	;volatile
  1904  004262                     
  1905                           ;pin_manager.c: 46: TRISCbits.RC7 = 0;
  1906  004262  9E94               	bcf	148,7,c	;volatile
  1907  004264                     
  1908                           ;pin_manager.c: 51: ANSELD = 0xFF;
  1909  004264  010F               	movlb	15	; () banked
  1910  004266  695E               	setf	94,b	;volatile
  1911                           
  1912                           ;pin_manager.c: 52: ANSELC = 0x00;
  1913  004268  0E00               	movlw	0
  1914  00426A  6F5D               	movwf	93,b	;volatile
  1915                           
  1916                           ;pin_manager.c: 53: ANSELB = 0x00;
  1917  00426C  0E00               	movlw	0
  1918  00426E  6F5C               	movwf	92,b	;volatile
  1919                           
  1920                           ;pin_manager.c: 54: ANSELE = 0x07;
  1921  004270  0E07               	movlw	7
  1922  004272  6F5F               	movwf	95,b	;volatile
  1923                           
  1924                           ;pin_manager.c: 55: ANSELA = 0x00;
  1925  004274  0E00               	movlw	0
  1926  004276  6F5B               	movwf	91,b	;volatile
  1927                           
  1928                           ;pin_manager.c: 60: WPUB = 0x00;
  1929  004278  0E00               	movlw	0
  1930  00427A  6E85               	movwf	133,c	;volatile
  1931  00427C                     
  1932                           ; BSR set to: 15
  1933                           ;pin_manager.c: 61: INTCON2bits.nRBPU = 1;
  1934  00427C  8EF1               	bsf	241,7,c	;volatile
  1935  00427E                     
  1936                           ; BSR set to: 15
  1937                           ;pin_manager.c: 62: PIN_MANAGER_IOC();
  1938  00427E  EC37  F022         	call	_PIN_MANAGER_IOC	;wreg free
  1939  004282  0012               	return		;funcret
  1940  004284                     __end_of_PIN_MANAGER_Initialize:
  1941                           	callstack 0
  1942                           
  1943 ;; *************** function _PIN_MANAGER_IOC *****************
  1944 ;; Defined at:
  1945 ;;		line 65 in file "pin_manager.c"
  1946 ;; Parameters:    Size  Location     Type
  1947 ;;		None
  1948 ;; Auto vars:     Size  Location     Type
  1949 ;;		None
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      void 
  1952 ;; Registers used:
  1953 ;;		None
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1959 ;;      Params:         0       0       0       0       0       0       0       0       0
  1960 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1961 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1962 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1963 ;;Total ram usage:        0 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 3
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_PIN_MANAGER_Initialize
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text7
  1974  00446E                     __ptext7:
  1975                           	callstack 0
  1976  00446E                     _PIN_MANAGER_IOC:
  1977                           	callstack 25
  1978  00446E                     
  1979                           ;pin_manager.c: 68: INTCONbits.IOCIF = 0;
  1980  00446E  90F2               	bcf	242,0,c	;volatile
  1981  004470  0012               	return		;funcret
  1982  004472                     __end_of_PIN_MANAGER_IOC:
  1983                           	callstack 0
  1984                           
  1985 ;; *************** function _OscInit *****************
  1986 ;; Defined at:
  1987 ;;		line 17 in file "SysInit.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2001 ;;      Params:         0       0       0       0       0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2004 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2005 ;;Total ram usage:        0 bytes
  2006 ;; Hardware stack levels used: 1
  2007 ;; Hardware stack levels required when called: 3
  2008 ;; This function calls:
  2009 ;;		Nothing
  2010 ;; This function is called by:
  2011 ;;		_SysInit
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           	psect	text8
  2016  00442E                     __ptext8:
  2017                           	callstack 0
  2018  00442E                     _OscInit:
  2019                           	callstack 26
  2020  00442E                     
  2021                           ;SysInit.c: 20: OSCCON = 0x10;
  2022  00442E  0E10               	movlw	16
  2023  004430  6ED3               	movwf	211,c	;volatile
  2024                           
  2025                           ;SysInit.c: 22: OSCCON2 = 0x00;
  2026  004432  0E00               	movlw	0
  2027  004434  6ED2               	movwf	210,c	;volatile
  2028                           
  2029                           ;SysInit.c: 24: OSCTUNE = 0x00;
  2030  004436  0E00               	movlw	0
  2031  004438  6E9B               	movwf	155,c	;volatile
  2032                           
  2033                           ;SysInit.c: 26: ACTCON = 0x00;
  2034  00443A  0E00               	movlw	0
  2035  00443C  6EB5               	movwf	181,c	;volatile
  2036  00443E  0012               	return		;funcret
  2037  004440                     __end_of_OscInit:
  2038                           	callstack 0
  2039                           
  2040 ;; *************** function _LCD_Init *****************
  2041 ;; Defined at:
  2042 ;;		line 11 in file "LCD.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;		None
  2045 ;; Auto vars:     Size  Location     Type
  2046 ;;  iCmd            1    0        unsigned char 
  2047 ;; Return value:  Size  Location     Type
  2048 ;;                  1    wreg      void 
  2049 ;; Registers used:
  2050 ;;		wreg, status,2, status,0, cstack
  2051 ;; Tracked objects:
  2052 ;;		On entry : 0/0
  2053 ;;		On exit  : 0/0
  2054 ;;		Unchanged: 0/0
  2055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2056 ;;      Params:         0       0       0       0       0       0       0       0       0
  2057 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2058 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2059 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2060 ;;Total ram usage:        1 bytes
  2061 ;; Hardware stack levels used: 1
  2062 ;; Hardware stack levels required when called: 4
  2063 ;; This function calls:
  2064 ;;		_LCD_WriteCmd
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           	psect	text9
  2071  0041E0                     __ptext9:
  2072                           	callstack 0
  2073  0041E0                     _LCD_Init:
  2074                           	callstack 26
  2075  0041E0                     
  2076                           ;LCD.c: 13: uint8_t iCmd;;LCD.c: 15: _delay((unsigned long)((15)*(8000000/4000.0)));
  2077  0041E0  0E27               	movlw	39
  2078  0041E2  6E09               	movwf	??_LCD_Init^0,c
  2079  0041E4  0EF5               	movlw	245
  2080  0041E6                     u8107:
  2081  0041E6  2EE8               	decfsz	wreg,f,c
  2082  0041E8  D7FE               	bra	u8107
  2083  0041EA  2E09               	decfsz	??_LCD_Init^0,f,c
  2084  0041EC  D7FC               	bra	u8107
  2085  0041EE  F000               	nop	
  2086  0041F0                     
  2087                           ;LCD.c: 17: LCD_WriteCmd (iCmd, 40+10);
  2088  0041F0  0E00               	movlw	0
  2089  0041F2  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  2090  0041F4  0E32               	movlw	50
  2091  0041F6  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  2092  0041F8  0E3C               	movlw	60
  2093  0041FA  EC05  F01F         	call	_LCD_WriteCmd
  2094  0041FE                     
  2095                           ;LCD.c: 21: LCD_WriteCmd (iCmd, 40+10);
  2096  0041FE  0E00               	movlw	0
  2097  004200  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  2098  004202  0E32               	movlw	50
  2099  004204  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  2100  004206  0E08               	movlw	8
  2101  004208  EC05  F01F         	call	_LCD_WriteCmd
  2102  00420C                     
  2103                           ;LCD.c: 24: LCD_WriteCmd (iCmd, 40+10);
  2104  00420C  0E00               	movlw	0
  2105  00420E  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  2106  004210  0E32               	movlw	50
  2107  004212  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  2108  004214  0E06               	movlw	6
  2109  004216  EC05  F01F         	call	_LCD_WriteCmd
  2110  00421A                     
  2111                           ;LCD.c: 26: LCD_WriteCmd (0x01, 2000);
  2112  00421A  0E07               	movlw	7
  2113  00421C  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  2114  00421E  0ED0               	movlw	208
  2115  004220  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  2116  004222  0E01               	movlw	1
  2117  004224  EC05  F01F         	call	_LCD_WriteCmd
  2118  004228                     
  2119                           ;LCD.c: 30: LCD_WriteCmd (iCmd, 40+10);
  2120  004228  0E00               	movlw	0
  2121  00422A  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
  2122  00422C  0E32               	movlw	50
  2123  00422E  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
  2124  004230  0E0C               	movlw	12
  2125  004232  EC05  F01F         	call	_LCD_WriteCmd
  2126  004236  0012               	return		;funcret
  2127  004238                     __end_of_LCD_Init:
  2128                           	callstack 0
  2129                           
  2130 ;; *************** function _InitTankVariables *****************
  2131 ;; Defined at:
  2132 ;;		line 126 in file "main.c"
  2133 ;; Parameters:    Size  Location     Type
  2134 ;;		None
  2135 ;; Auto vars:     Size  Location     Type
  2136 ;;		None
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  1    wreg      void 
  2139 ;; Registers used:
  2140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2146 ;;      Params:         0       0       0       0       0       0       0       0       0
  2147 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2148 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2149 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2150 ;;Total ram usage:        4 bytes
  2151 ;; Hardware stack levels used: 1
  2152 ;; Hardware stack levels required when called: 8
  2153 ;; This function calls:
  2154 ;;		___flmul
  2155 ;;		_pow
  2156 ;; This function is called by:
  2157 ;;		_main
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text10
  2162  0038B0                     __ptext10:
  2163                           	callstack 0
  2164  0038B0                     _InitTankVariables:
  2165                           	callstack 22
  2166  0038B0                     
  2167                           ;main.c: 128: gd_TankSurfArea_mm2 = 3.1416926f * pow(48 * 25.4 / 2, 2);
  2168  0038B0  0E00               	movlw	0
  2169  0038B2  0100               	movlb	0	; () banked
  2170  0038B4  6FA7               	movwf	pow@y& (0+255),b
  2171  0038B6  0E00               	movlw	0
  2172  0038B8  6FA8               	movwf	(pow@y+1)& (0+255),b
  2173  0038BA  0E00               	movlw	0
  2174  0038BC  6FA9               	movwf	(pow@y+2)& (0+255),b
  2175  0038BE  0E40               	movlw	64
  2176  0038C0  6FAA               	movwf	(pow@y+3)& (0+255),b
  2177  0038C2  0E66               	movlw	102
  2178  0038C4  6FA3               	movwf	pow@x& (0+255),b
  2179  0038C6  0E66               	movlw	102
  2180  0038C8  6FA4               	movwf	(pow@x+1)& (0+255),b
  2181  0038CA  0E18               	movlw	24
  2182  0038CC  6FA5               	movwf	(pow@x+2)& (0+255),b
  2183  0038CE  0E44               	movlw	68
  2184  0038D0  6FA6               	movwf	(pow@x+3)& (0+255),b
  2185  0038D2  ECDC  F014         	call	_pow	;wreg free
  2186  0038D6  C0A3  F0B8         	movff	?_pow,_InitTankVariables$2441
  2187  0038DA  C0A4  F0B9         	movff	?_pow+1,_InitTankVariables$2441+1
  2188  0038DE  C0A5  F0BA         	movff	?_pow+2,_InitTankVariables$2441+2
  2189  0038E2  C0A6  F0BB         	movff	?_pow+3,_InitTankVariables$2441+3
  2190  0038E6                     
  2191                           ;main.c: 128: gd_TankSurfArea_mm2 = 3.1416926f * pow(48 * 25.4 / 2, 2);
  2192  0038E6  C0B8  F047         	movff	_InitTankVariables$2441,___flmul@b
  2193  0038EA  C0B9  F048         	movff	_InitTankVariables$2441+1,___flmul@b+1
  2194  0038EE  C0BA  F049         	movff	_InitTankVariables$2441+2,___flmul@b+2
  2195  0038F2  C0BB  F04A         	movff	_InitTankVariables$2441+3,___flmul@b+3
  2196  0038F6  0E7E               	movlw	126
  2197  0038F8  6E4B               	movwf	___flmul@a^0,c
  2198  0038FA  0E11               	movlw	17
  2199  0038FC  6E4C               	movwf	(___flmul@a+1)^0,c
  2200  0038FE  0E49               	movlw	73
  2201  003900  6E4D               	movwf	(___flmul@a+2)^0,c
  2202  003902  0E40               	movlw	64
  2203  003904  6E4E               	movwf	(___flmul@a+3)^0,c
  2204  003906  ECF3  F008         	call	___flmul	;wreg free
  2205  00390A  C047  F180         	movff	?___flmul,_gd_TankSurfArea_mm2
  2206  00390E  C048  F181         	movff	?___flmul+1,_gd_TankSurfArea_mm2+1
  2207  003912  C049  F182         	movff	?___flmul+2,_gd_TankSurfArea_mm2+2
  2208  003916  C04A  F183         	movff	?___flmul+3,_gd_TankSurfArea_mm2+3
  2209  00391A                     
  2210                           ;main.c: 129: gd_SensorHeight_mm = 72 * 25.4;
  2211  00391A  0E9A               	movlw	154
  2212  00391C  0101               	movlb	1	; () banked
  2213  00391E  6F7C               	movwf	_gd_SensorHeight_mm& (0+255),b
  2214  003920  0E99               	movlw	153
  2215  003922  6F7D               	movwf	(_gd_SensorHeight_mm+1)& (0+255),b
  2216  003924  0EE4               	movlw	228
  2217  003926  6F7E               	movwf	(_gd_SensorHeight_mm+2)& (0+255),b
  2218  003928  0E44               	movlw	68
  2219  00392A  6F7F               	movwf	(_gd_SensorHeight_mm+3)& (0+255),b
  2220  00392C                     
  2221                           ; BSR set to: 1
  2222                           ;main.c: 130: gd_TankGalsPer_mm = gd_TankSurfArea_mm2 * 264.172052e-9;
  2223  00392C  C180  F047         	movff	_gd_TankSurfArea_mm2,___flmul@b
  2224  003930  C181  F048         	movff	_gd_TankSurfArea_mm2+1,___flmul@b+1
  2225  003934  C182  F049         	movff	_gd_TankSurfArea_mm2+2,___flmul@b+2
  2226  003938  C183  F04A         	movff	_gd_TankSurfArea_mm2+3,___flmul@b+3
  2227  00393C  0E88               	movlw	136
  2228  00393E  6E4B               	movwf	___flmul@a^0,c
  2229  003940  0ED3               	movlw	211
  2230  003942  6E4C               	movwf	(___flmul@a+1)^0,c
  2231  003944  0E8D               	movlw	141
  2232  003946  6E4D               	movwf	(___flmul@a+2)^0,c
  2233  003948  0E34               	movlw	52
  2234  00394A  6E4E               	movwf	(___flmul@a+3)^0,c
  2235  00394C  ECF3  F008         	call	___flmul	;wreg free
  2236  003950  C047  F178         	movff	?___flmul,_gd_TankGalsPer_mm
  2237  003954  C048  F179         	movff	?___flmul+1,_gd_TankGalsPer_mm+1
  2238  003958  C049  F17A         	movff	?___flmul+2,_gd_TankGalsPer_mm+2
  2239  00395C  C04A  F17B         	movff	?___flmul+3,_gd_TankGalsPer_mm+3
  2240  003960                     
  2241                           ;main.c: 131: gd_MaxWaterHeight_mm = 68 * 25.4;
  2242  003960  0E66               	movlw	102
  2243  003962  0101               	movlb	1	; () banked
  2244  003964  6F74               	movwf	_gd_MaxWaterHeight_mm& (0+255),b
  2245  003966  0EE6               	movlw	230
  2246  003968  6F75               	movwf	(_gd_MaxWaterHeight_mm+1)& (0+255),b
  2247  00396A  0ED7               	movlw	215
  2248  00396C  6F76               	movwf	(_gd_MaxWaterHeight_mm+2)& (0+255),b
  2249  00396E  0E44               	movlw	68
  2250  003970  6F77               	movwf	(_gd_MaxWaterHeight_mm+3)& (0+255),b
  2251  003972                     
  2252                           ; BSR set to: 1
  2253  003972  0012               	return		;funcret
  2254  003974                     __end_of_InitTankVariables:
  2255                           	callstack 0
  2256                           
  2257 ;; *************** function _pow *****************
  2258 ;; Defined at:
  2259 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\pow.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  x               4   67[BANK0 ] void 
  2262 ;;  y               4   71[BANK0 ] void 
  2263 ;; Auto vars:     Size  Location     Type
  2264 ;;  yi              4   84[BANK0 ] unsigned long 
  2265 ;;  sign            1   83[BANK0 ] unsigned char 
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  4   67[BANK0 ] unsigned char 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2275 ;;      Params:         0       8       0       0       0       0       0       0       0
  2276 ;;      Locals:         0      13       0       0       0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2278 ;;      Totals:         0      21       0       0       0       0       0       0       0
  2279 ;;Total ram usage:       21 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 7
  2282 ;; This function calls:
  2283 ;;		___fleq
  2284 ;;		___flge
  2285 ;;		___flmul
  2286 ;;		___flneg
  2287 ;;		___fltol
  2288 ;;		___xxtofl
  2289 ;;		_exp
  2290 ;;		_log
  2291 ;; This function is called by:
  2292 ;;		_InitTankVariables
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           
  2296                           	psect	text11
  2297  0029B8                     __ptext11:
  2298                           	callstack 0
  2299  0029B8                     _pow:
  2300                           	callstack 22
  2301  0029B8  0E00               	movlw	0
  2302  0029BA  0100               	movlb	0	; () banked
  2303  0029BC  6FB3               	movwf	pow@sign& (0+255),b
  2304  0029BE                     
  2305                           ; BSR set to: 0
  2306  0029BE  C0A3  F033         	movff	pow@x,___fleq@ff1
  2307  0029C2  C0A4  F034         	movff	pow@x+1,___fleq@ff1+1
  2308  0029C6  C0A5  F035         	movff	pow@x+2,___fleq@ff1+2
  2309  0029CA  C0A6  F036         	movff	pow@x+3,___fleq@ff1+3
  2310  0029CE  0E00               	movlw	0
  2311  0029D0  6E37               	movwf	___fleq@ff2^0,c
  2312  0029D2  0E00               	movlw	0
  2313  0029D4  6E38               	movwf	(___fleq@ff2+1)^0,c
  2314  0029D6  0E00               	movlw	0
  2315  0029D8  6E39               	movwf	(___fleq@ff2+2)^0,c
  2316  0029DA  0E00               	movlw	0
  2317  0029DC  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2318  0029DE  ECD6  F01D         	call	___fleq	;wreg free
  2319  0029E2  A0D8               	btfss	status,0,c
  2320  0029E4  EFF6  F014         	goto	u7921
  2321  0029E8  EFF8  F014         	goto	u7920
  2322  0029EC                     u7921:
  2323  0029EC  EF21  F015         	goto	l6785
  2324  0029F0                     u7920:
  2325  0029F0  0E00               	movlw	0
  2326  0029F2  6E02               	movwf	___flge@ff1^0,c
  2327  0029F4  0E00               	movlw	0
  2328  0029F6  6E03               	movwf	(___flge@ff1+1)^0,c
  2329  0029F8  0E00               	movlw	0
  2330  0029FA  6E04               	movwf	(___flge@ff1+2)^0,c
  2331  0029FC  0E00               	movlw	0
  2332  0029FE  6E05               	movwf	(___flge@ff1+3)^0,c
  2333  002A00  C0A7  F006         	movff	pow@y,___flge@ff2
  2334  002A04  C0A8  F007         	movff	pow@y+1,___flge@ff2+1
  2335  002A08  C0A9  F008         	movff	pow@y+2,___flge@ff2+2
  2336  002A0C  C0AA  F009         	movff	pow@y+3,___flge@ff2+3
  2337  002A10  ECD6  F01B         	call	___flge	;wreg free
  2338  002A14  A0D8               	btfss	status,0,c
  2339  002A16  EF0F  F015         	goto	u7931
  2340  002A1A  EF11  F015         	goto	u7930
  2341  002A1E                     u7931:
  2342  002A1E  EF16  F015         	goto	l1496
  2343  002A22                     u7930:
  2344  002A22  0E00               	movlw	0
  2345  002A24  0101               	movlb	1	; () banked
  2346  002A26  6F89               	movwf	(_errno+1)& (0+255),b
  2347  002A28  0E21               	movlw	33
  2348  002A2A  6F88               	movwf	_errno& (0+255),b
  2349  002A2C                     l1496:
  2350  002A2C  0E00               	movlw	0
  2351  002A2E  0100               	movlb	0	; () banked
  2352  002A30  6FA3               	movwf	?_pow& (0+255),b
  2353  002A32  0E00               	movlw	0
  2354  002A34  6FA4               	movwf	(?_pow+1)& (0+255),b
  2355  002A36  0E00               	movlw	0
  2356  002A38  6FA5               	movwf	(?_pow+2)& (0+255),b
  2357  002A3A  0E00               	movlw	0
  2358  002A3C  6FA6               	movwf	(?_pow+3)& (0+255),b
  2359  002A3E  EF0C  F016         	goto	l1497
  2360  002A42                     l6785:
  2361  002A42  C0A7  F033         	movff	pow@y,___fleq@ff1
  2362  002A46  C0A8  F034         	movff	pow@y+1,___fleq@ff1+1
  2363  002A4A  C0A9  F035         	movff	pow@y+2,___fleq@ff1+2
  2364  002A4E  C0AA  F036         	movff	pow@y+3,___fleq@ff1+3
  2365  002A52  0E00               	movlw	0
  2366  002A54  6E37               	movwf	___fleq@ff2^0,c
  2367  002A56  0E00               	movlw	0
  2368  002A58  6E38               	movwf	(___fleq@ff2+1)^0,c
  2369  002A5A  0E00               	movlw	0
  2370  002A5C  6E39               	movwf	(___fleq@ff2+2)^0,c
  2371  002A5E  0E00               	movlw	0
  2372  002A60  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2373  002A62  ECD6  F01D         	call	___fleq	;wreg free
  2374  002A66  A0D8               	btfss	status,0,c
  2375  002A68  EF38  F015         	goto	u7941
  2376  002A6C  EF3A  F015         	goto	u7940
  2377  002A70                     u7941:
  2378  002A70  EF45  F015         	goto	l6791
  2379  002A74                     u7940:
  2380  002A74  0E00               	movlw	0
  2381  002A76  0100               	movlb	0	; () banked
  2382  002A78  6FA3               	movwf	?_pow& (0+255),b
  2383  002A7A  0E00               	movlw	0
  2384  002A7C  6FA4               	movwf	(?_pow+1)& (0+255),b
  2385  002A7E  0E80               	movlw	128
  2386  002A80  6FA5               	movwf	(?_pow+2)& (0+255),b
  2387  002A82  0E3F               	movlw	63
  2388  002A84  6FA6               	movwf	(?_pow+3)& (0+255),b
  2389  002A86  EF0C  F016         	goto	l1497
  2390  002A8A                     l6791:
  2391  002A8A  0100               	movlb	0	; () banked
  2392  002A8C  BFA6               	btfsc	(pow@x+3)& (0+255),7,b
  2393  002A8E  EF4D  F015         	goto	u7950
  2394  002A92  EF4B  F015         	goto	u7951
  2395  002A96                     u7951:
  2396  002A96  EFA9  F015         	goto	l6803
  2397  002A9A                     u7950:
  2398  002A9A                     
  2399                           ; BSR set to: 0
  2400  002A9A  C0A7  F01B         	movff	pow@y,___fltol@f1
  2401  002A9E  C0A8  F01C         	movff	pow@y+1,___fltol@f1+1
  2402  002AA2  C0A9  F01D         	movff	pow@y+2,___fltol@f1+2
  2403  002AA6  C0AA  F01E         	movff	pow@y+3,___fltol@f1+3
  2404  002AAA  ECD1  F01A         	call	___fltol	;wreg free
  2405  002AAE  C01B  F0B4         	movff	?___fltol,pow@yi
  2406  002AB2  C01C  F0B5         	movff	?___fltol+1,pow@yi+1
  2407  002AB6  C01D  F0B6         	movff	?___fltol+2,pow@yi+2
  2408  002ABA  C01E  F0B7         	movff	?___fltol+3,pow@yi+3
  2409  002ABE  C0B4  F025         	movff	pow@yi,___xxtofl@val
  2410  002AC2  C0B5  F026         	movff	pow@yi+1,___xxtofl@val+1
  2411  002AC6  C0B6  F027         	movff	pow@yi+2,___xxtofl@val+2
  2412  002ACA  C0B7  F028         	movff	pow@yi+3,___xxtofl@val+3
  2413  002ACE  0E00               	movlw	0
  2414  002AD0  EC0D  F016         	call	___xxtofl
  2415  002AD4  C025  F033         	movff	?___xxtofl,___fleq@ff1
  2416  002AD8  C026  F034         	movff	?___xxtofl+1,___fleq@ff1+1
  2417  002ADC  C027  F035         	movff	?___xxtofl+2,___fleq@ff1+2
  2418  002AE0  C028  F036         	movff	?___xxtofl+3,___fleq@ff1+3
  2419  002AE4  C0A7  F037         	movff	pow@y,___fleq@ff2
  2420  002AE8  C0A8  F038         	movff	pow@y+1,___fleq@ff2+1
  2421  002AEC  C0A9  F039         	movff	pow@y+2,___fleq@ff2+2
  2422  002AF0  C0AA  F03A         	movff	pow@y+3,___fleq@ff2+3
  2423  002AF4  ECD6  F01D         	call	___fleq	;wreg free
  2424  002AF8  B0D8               	btfsc	status,0,c
  2425  002AFA  EF81  F015         	goto	u7961
  2426  002AFE  EF83  F015         	goto	u7960
  2427  002B02                     u7961:
  2428  002B02  EF93  F015         	goto	l6799
  2429  002B06                     u7960:
  2430  002B06  0E00               	movlw	0
  2431  002B08  0101               	movlb	1	; () banked
  2432  002B0A  6F89               	movwf	(_errno+1)& (0+255),b
  2433  002B0C  0E21               	movlw	33
  2434  002B0E  6F88               	movwf	_errno& (0+255),b
  2435  002B10  0E00               	movlw	0
  2436  002B12  0100               	movlb	0	; () banked
  2437  002B14  6FA3               	movwf	?_pow& (0+255),b
  2438  002B16  0E00               	movlw	0
  2439  002B18  6FA4               	movwf	(?_pow+1)& (0+255),b
  2440  002B1A  0E00               	movlw	0
  2441  002B1C  6FA5               	movwf	(?_pow+2)& (0+255),b
  2442  002B1E  0E00               	movlw	0
  2443  002B20  6FA6               	movwf	(?_pow+3)& (0+255),b
  2444  002B22  EF0C  F016         	goto	l1497
  2445  002B26                     l6799:
  2446  002B26  0100               	movlb	0	; () banked
  2447  002B28  51B4               	movf	pow@yi& (0+255),w,b
  2448  002B2A  0B01               	andlw	1
  2449  002B2C  6FB3               	movwf	pow@sign& (0+255),b
  2450  002B2E                     
  2451                           ; BSR set to: 0
  2452  002B2E  C0A3  F002         	movff	pow@x,___flneg@f1
  2453  002B32  C0A4  F003         	movff	pow@x+1,___flneg@f1+1
  2454  002B36  C0A5  F004         	movff	pow@x+2,___flneg@f1+2
  2455  002B3A  C0A6  F005         	movff	pow@x+3,___flneg@f1+3
  2456  002B3E  EC66  F021         	call	___flneg	;wreg free
  2457  002B42  C002  F0A3         	movff	?___flneg,pow@x
  2458  002B46  C003  F0A4         	movff	?___flneg+1,pow@x+1
  2459  002B4A  C004  F0A5         	movff	?___flneg+2,pow@x+2
  2460  002B4E  C005  F0A6         	movff	?___flneg+3,pow@x+3
  2461  002B52                     l6803:
  2462  002B52  C0A3  F092         	movff	pow@x,log@x
  2463  002B56  C0A4  F093         	movff	pow@x+1,log@x+1
  2464  002B5A  C0A5  F094         	movff	pow@x+2,log@x+2
  2465  002B5E  C0A6  F095         	movff	pow@x+3,log@x+3
  2466  002B62  ECE7  F016         	call	_log	;wreg free
  2467  002B66  C092  F0AB         	movff	?_log,_pow$2446
  2468  002B6A  C093  F0AC         	movff	?_log+1,_pow$2446+1
  2469  002B6E  C094  F0AD         	movff	?_log+2,_pow$2446+2
  2470  002B72  C095  F0AE         	movff	?_log+3,_pow$2446+3
  2471  002B76  C0AB  F047         	movff	_pow$2446,___flmul@b
  2472  002B7A  C0AC  F048         	movff	_pow$2446+1,___flmul@b+1
  2473  002B7E  C0AD  F049         	movff	_pow$2446+2,___flmul@b+2
  2474  002B82  C0AE  F04A         	movff	_pow$2446+3,___flmul@b+3
  2475  002B86  C0A7  F04B         	movff	pow@y,___flmul@a
  2476  002B8A  C0A8  F04C         	movff	pow@y+1,___flmul@a+1
  2477  002B8E  C0A9  F04D         	movff	pow@y+2,___flmul@a+2
  2478  002B92  C0AA  F04E         	movff	pow@y+3,___flmul@a+3
  2479  002B96  ECF3  F008         	call	___flmul	;wreg free
  2480  002B9A  C047  F0AF         	movff	?___flmul,_pow$2447
  2481  002B9E  C048  F0B0         	movff	?___flmul+1,_pow$2447+1
  2482  002BA2  C049  F0B1         	movff	?___flmul+2,_pow$2447+2
  2483  002BA6  C04A  F0B2         	movff	?___flmul+3,_pow$2447+3
  2484  002BAA  C0AF  F098         	movff	_pow$2447,exp@x
  2485  002BAE  C0B0  F099         	movff	_pow$2447+1,exp@x+1
  2486  002BB2  C0B1  F09A         	movff	_pow$2447+2,exp@x+2
  2487  002BB6  C0B2  F09B         	movff	_pow$2447+3,exp@x+3
  2488  002BBA  EC13  F012         	call	_exp	;wreg free
  2489  002BBE  C098  F0A3         	movff	?_exp,pow@x
  2490  002BC2  C099  F0A4         	movff	?_exp+1,pow@x+1
  2491  002BC6  C09A  F0A5         	movff	?_exp+2,pow@x+2
  2492  002BCA  C09B  F0A6         	movff	?_exp+3,pow@x+3
  2493  002BCE  0100               	movlb	0	; () banked
  2494  002BD0  51B3               	movf	pow@sign& (0+255),w,b
  2495  002BD2  B4D8               	btfsc	status,2,c
  2496  002BD4  EFEE  F015         	goto	u7971
  2497  002BD8  EFF0  F015         	goto	u7970
  2498  002BDC                     u7971:
  2499  002BDC  EF04  F016         	goto	l1501
  2500  002BE0                     u7970:
  2501  002BE0                     
  2502                           ; BSR set to: 0
  2503  002BE0  C0A3  F002         	movff	pow@x,___flneg@f1
  2504  002BE4  C0A4  F003         	movff	pow@x+1,___flneg@f1+1
  2505  002BE8  C0A5  F004         	movff	pow@x+2,___flneg@f1+2
  2506  002BEC  C0A6  F005         	movff	pow@x+3,___flneg@f1+3
  2507  002BF0  EC66  F021         	call	___flneg	;wreg free
  2508  002BF4  C002  F0A3         	movff	?___flneg,?_pow
  2509  002BF8  C003  F0A4         	movff	?___flneg+1,?_pow+1
  2510  002BFC  C004  F0A5         	movff	?___flneg+2,?_pow+2
  2511  002C00  C005  F0A6         	movff	?___flneg+3,?_pow+3
  2512  002C04  EF0C  F016         	goto	l1497
  2513  002C08                     l1501:
  2514                           
  2515                           ; BSR set to: 0
  2516  002C08  C0A3  F0A3         	movff	pow@x,?_pow
  2517  002C0C  C0A4  F0A4         	movff	pow@x+1,?_pow+1
  2518  002C10  C0A5  F0A5         	movff	pow@x+2,?_pow+2
  2519  002C14  C0A6  F0A6         	movff	pow@x+3,?_pow+3
  2520  002C18                     l1497:
  2521  002C18  0012               	return		;funcret
  2522  002C1A                     __end_of_pow:
  2523                           	callstack 0
  2524                           
  2525 ;; *************** function _log *****************
  2526 ;; Defined at:
  2527 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\log.c"
  2528 ;; Parameters:    Size  Location     Type
  2529 ;;  x               4   50[BANK0 ] unsigned char 
  2530 ;; Auto vars:     Size  Location     Type
  2531 ;;  exponent        2   90[COMRAM] int 
  2532 ;; Return value:  Size  Location     Type
  2533 ;;                  4   50[BANK0 ] int 
  2534 ;; Registers used:
  2535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2536 ;; Tracked objects:
  2537 ;;		On entry : 0/0
  2538 ;;		On exit  : 0/0
  2539 ;;		Unchanged: 0/0
  2540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2541 ;;      Params:         0       4       0       0       0       0       0       0       0
  2542 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2544 ;;      Totals:         2       4       0       0       0       0       0       0       0
  2545 ;;Total ram usage:        6 bytes
  2546 ;; Hardware stack levels used: 1
  2547 ;; Hardware stack levels required when called: 5
  2548 ;; This function calls:
  2549 ;;		___fladd
  2550 ;;		___fleq
  2551 ;;		___flmul
  2552 ;;		___xxtofl
  2553 ;;		_eval_poly
  2554 ;;		_frexp
  2555 ;; This function is called by:
  2556 ;;		_pow
  2557 ;; This function uses a non-reentrant model
  2558 ;;
  2559                           
  2560                           	psect	text12
  2561  002DCE                     __ptext12:
  2562                           	callstack 0
  2563  002DCE                     _log:
  2564                           	callstack 23
  2565  002DCE  0100               	movlb	0	; () banked
  2566  002DD0  BF95               	btfsc	(log@x+3)& (0+255),7,b
  2567  002DD2  EFEF  F016         	goto	u7300
  2568  002DD6  EFED  F016         	goto	u7301
  2569  002DDA                     u7301:
  2570  002DDA  EFFF  F016         	goto	l6397
  2571  002DDE                     u7300:
  2572  002DDE                     
  2573                           ; BSR set to: 0
  2574  002DDE  0E00               	movlw	0
  2575  002DE0  0101               	movlb	1	; () banked
  2576  002DE2  6F89               	movwf	(_errno+1)& (0+255),b
  2577  002DE4  0E21               	movlw	33
  2578  002DE6  6F88               	movwf	_errno& (0+255),b
  2579  002DE8  0E00               	movlw	0
  2580  002DEA  0100               	movlb	0	; () banked
  2581  002DEC  6F92               	movwf	?_log& (0+255),b
  2582  002DEE  0E00               	movlw	0
  2583  002DF0  6F93               	movwf	(?_log+1)& (0+255),b
  2584  002DF2  0E00               	movlw	0
  2585  002DF4  6F94               	movwf	(?_log+2)& (0+255),b
  2586  002DF6  0E00               	movlw	0
  2587  002DF8  6F95               	movwf	(?_log+3)& (0+255),b
  2588  002DFA  EFB9  F017         	goto	l1563
  2589  002DFE                     l6397:
  2590                           
  2591                           ; BSR set to: 0
  2592  002DFE  C092  F033         	movff	log@x,___fleq@ff1
  2593  002E02  C093  F034         	movff	log@x+1,___fleq@ff1+1
  2594  002E06  C094  F035         	movff	log@x+2,___fleq@ff1+2
  2595  002E0A  C095  F036         	movff	log@x+3,___fleq@ff1+3
  2596  002E0E  0E00               	movlw	0
  2597  002E10  6E37               	movwf	___fleq@ff2^0,c
  2598  002E12  0E00               	movlw	0
  2599  002E14  6E38               	movwf	(___fleq@ff2+1)^0,c
  2600  002E16  0E00               	movlw	0
  2601  002E18  6E39               	movwf	(___fleq@ff2+2)^0,c
  2602  002E1A  0E00               	movlw	0
  2603  002E1C  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2604  002E1E  ECD6  F01D         	call	___fleq	;wreg free
  2605  002E22  A0D8               	btfss	status,0,c
  2606  002E24  EF16  F017         	goto	u7311
  2607  002E28  EF18  F017         	goto	u7310
  2608  002E2C                     u7311:
  2609  002E2C  EF28  F017         	goto	l6403
  2610  002E30                     u7310:
  2611  002E30  0E00               	movlw	0
  2612  002E32  0101               	movlb	1	; () banked
  2613  002E34  6F89               	movwf	(_errno+1)& (0+255),b
  2614  002E36  0E22               	movlw	34
  2615  002E38  6F88               	movwf	_errno& (0+255),b
  2616  002E3A  0E00               	movlw	0
  2617  002E3C  0100               	movlb	0	; () banked
  2618  002E3E  6F92               	movwf	?_log& (0+255),b
  2619  002E40  0E00               	movlw	0
  2620  002E42  6F93               	movwf	(?_log+1)& (0+255),b
  2621  002E44  0E00               	movlw	0
  2622  002E46  6F94               	movwf	(?_log+2)& (0+255),b
  2623  002E48  0E00               	movlw	0
  2624  002E4A  6F95               	movwf	(?_log+3)& (0+255),b
  2625  002E4C  EFB9  F017         	goto	l1563
  2626  002E50                     l6403:
  2627  002E50  0E00               	movlw	0
  2628  002E52  6E4B               	movwf	___flmul@a^0,c
  2629  002E54  0E00               	movlw	0
  2630  002E56  6E4C               	movwf	(___flmul@a+1)^0,c
  2631  002E58  0E00               	movlw	0
  2632  002E5A  6E4D               	movwf	(___flmul@a+2)^0,c
  2633  002E5C  0E40               	movlw	64
  2634  002E5E  6E4E               	movwf	(___flmul@a+3)^0,c
  2635  002E60  0E5B               	movlw	low log@exponent
  2636  002E62  6E43               	movwf	frexp@eptr^0,c
  2637  002E64  0E00               	movlw	high log@exponent
  2638  002E66  6E44               	movwf	(frexp@eptr+1)^0,c
  2639  002E68  C092  F03F         	movff	log@x,frexp@value
  2640  002E6C  C093  F040         	movff	log@x+1,frexp@value+1
  2641  002E70  C094  F041         	movff	log@x+2,frexp@value+2
  2642  002E74  C095  F042         	movff	log@x+3,frexp@value+3
  2643  002E78  ECBA  F01C         	call	_frexp	;wreg free
  2644  002E7C  C03F  F047         	movff	?_frexp,___flmul@b
  2645  002E80  C040  F048         	movff	?_frexp+1,___flmul@b+1
  2646  002E84  C041  F049         	movff	?_frexp+2,___flmul@b+2
  2647  002E88  C042  F04A         	movff	?_frexp+3,___flmul@b+3
  2648  002E8C  ECF3  F008         	call	___flmul	;wreg free
  2649  002E90  C047  F076         	movff	?___flmul,___fladd@b
  2650  002E94  C048  F077         	movff	?___flmul+1,___fladd@b+1
  2651  002E98  C049  F078         	movff	?___flmul+2,___fladd@b+2
  2652  002E9C  C04A  F079         	movff	?___flmul+3,___fladd@b+3
  2653  002EA0  0E00               	movlw	0
  2654  002EA2  0100               	movlb	0	; () banked
  2655  002EA4  6F7A               	movwf	___fladd@a& (0+255),b
  2656  002EA6  0E00               	movlw	0
  2657  002EA8  6F7B               	movwf	(___fladd@a+1)& (0+255),b
  2658  002EAA  0E80               	movlw	128
  2659  002EAC  6F7C               	movwf	(___fladd@a+2)& (0+255),b
  2660  002EAE  0EBF               	movlw	191
  2661  002EB0  6F7D               	movwf	(___fladd@a+3)& (0+255),b
  2662  002EB2  EC92  F006         	call	___fladd	;wreg free
  2663  002EB6  C076  F092         	movff	?___fladd,log@x
  2664  002EBA  C077  F093         	movff	?___fladd+1,log@x+1
  2665  002EBE  C078  F094         	movff	?___fladd+2,log@x+2
  2666  002EC2  C079  F095         	movff	?___fladd+3,log@x+3
  2667  002EC6  065B               	decf	log@exponent^0,f,c
  2668  002EC8  A0D8               	btfss	status,0,c
  2669  002ECA  065C               	decf	(log@exponent+1)^0,f,c
  2670  002ECC  C092  F082         	movff	log@x,eval_poly@x
  2671  002ED0  C093  F083         	movff	log@x+1,eval_poly@x+1
  2672  002ED4  C094  F084         	movff	log@x+2,eval_poly@x+2
  2673  002ED8  C095  F085         	movff	log@x+3,eval_poly@x+3
  2674  002EDC  0EAB               	movlw	low log@coeff
  2675  002EDE  0100               	movlb	0	; () banked
  2676  002EE0  6F86               	movwf	eval_poly@d& (0+255),b
  2677  002EE2  0E7F               	movlw	high log@coeff
  2678  002EE4  6F87               	movwf	(eval_poly@d+1)& (0+255),b
  2679  002EE6  0E00               	movlw	0
  2680  002EE8  6F89               	movwf	(eval_poly@n+1)& (0+255),b
  2681  002EEA  0E08               	movlw	8
  2682  002EEC  6F88               	movwf	eval_poly@n& (0+255),b
  2683  002EEE  EC54  F01B         	call	_eval_poly	;wreg free
  2684  002EF2  C082  F092         	movff	?_eval_poly,log@x
  2685  002EF6  C083  F093         	movff	?_eval_poly+1,log@x+1
  2686  002EFA  C084  F094         	movff	?_eval_poly+2,log@x+2
  2687  002EFE  C085  F095         	movff	?_eval_poly+3,log@x+3
  2688  002F02  0E18               	movlw	24
  2689  002F04  6E4B               	movwf	___flmul@a^0,c
  2690  002F06  0E72               	movlw	114
  2691  002F08  6E4C               	movwf	(___flmul@a+1)^0,c
  2692  002F0A  0E31               	movlw	49
  2693  002F0C  6E4D               	movwf	(___flmul@a+2)^0,c
  2694  002F0E  0E3F               	movlw	63
  2695  002F10  6E4E               	movwf	(___flmul@a+3)^0,c
  2696  002F12  C05B  F025         	movff	log@exponent,___xxtofl@val
  2697  002F16  C05C  F026         	movff	log@exponent+1,___xxtofl@val+1
  2698  002F1A  0E00               	movlw	0
  2699  002F1C  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  2700  002F1E  0EFF               	movlw	-1
  2701  002F20  6E27               	movwf	(___xxtofl@val+2)^0,c
  2702  002F22  6E28               	movwf	(___xxtofl@val+3)^0,c
  2703  002F24  0E01               	movlw	1
  2704  002F26  EC0D  F016         	call	___xxtofl
  2705  002F2A  C025  F047         	movff	?___xxtofl,___flmul@b
  2706  002F2E  C026  F048         	movff	?___xxtofl+1,___flmul@b+1
  2707  002F32  C027  F049         	movff	?___xxtofl+2,___flmul@b+2
  2708  002F36  C028  F04A         	movff	?___xxtofl+3,___flmul@b+3
  2709  002F3A  ECF3  F008         	call	___flmul	;wreg free
  2710  002F3E  C047  F076         	movff	?___flmul,___fladd@b
  2711  002F42  C048  F077         	movff	?___flmul+1,___fladd@b+1
  2712  002F46  C049  F078         	movff	?___flmul+2,___fladd@b+2
  2713  002F4A  C04A  F079         	movff	?___flmul+3,___fladd@b+3
  2714  002F4E  C092  F07A         	movff	log@x,___fladd@a
  2715  002F52  C093  F07B         	movff	log@x+1,___fladd@a+1
  2716  002F56  C094  F07C         	movff	log@x+2,___fladd@a+2
  2717  002F5A  C095  F07D         	movff	log@x+3,___fladd@a+3
  2718  002F5E  EC92  F006         	call	___fladd	;wreg free
  2719  002F62  C076  F092         	movff	?___fladd,?_log
  2720  002F66  C077  F093         	movff	?___fladd+1,?_log+1
  2721  002F6A  C078  F094         	movff	?___fladd+2,?_log+2
  2722  002F6E  C079  F095         	movff	?___fladd+3,?_log+3
  2723  002F72                     l1563:
  2724  002F72  0012               	return		;funcret
  2725  002F74                     __end_of_log:
  2726                           	callstack 0
  2727                           
  2728 ;; *************** function _exp *****************
  2729 ;; Defined at:
  2730 ;;		line 12 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\exp.c"
  2731 ;; Parameters:    Size  Location     Type
  2732 ;;  x               4   56[BANK0 ] int 
  2733 ;; Auto vars:     Size  Location     Type
  2734 ;;  exponent        2   64[BANK0 ] int 
  2735 ;;  sign            1   66[BANK0 ] unsigned char 
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  4   56[BANK0 ] unsigned char 
  2738 ;; Registers used:
  2739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2745 ;;      Params:         0       4       0       0       0       0       0       0       0
  2746 ;;      Locals:         0       7       0       0       0       0       0       0       0
  2747 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2748 ;;      Totals:         0      11       0       0       0       0       0       0       0
  2749 ;;Total ram usage:       11 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 6
  2752 ;; This function calls:
  2753 ;;		___fldiv
  2754 ;;		___fleq
  2755 ;;		___flge
  2756 ;;		___flmul
  2757 ;;		___flneg
  2758 ;;		___flsub
  2759 ;;		___fltol
  2760 ;;		___xxtofl
  2761 ;;		_eval_poly
  2762 ;;		_floor
  2763 ;;		_ldexp
  2764 ;; This function is called by:
  2765 ;;		_pow
  2766 ;; This function uses a non-reentrant model
  2767 ;;
  2768                           
  2769                           	psect	text13
  2770  002426                     __ptext13:
  2771                           	callstack 0
  2772  002426                     _exp:
  2773                           	callstack 22
  2774  002426  C098  F033         	movff	exp@x,___fleq@ff1
  2775  00242A  C099  F034         	movff	exp@x+1,___fleq@ff1+1
  2776  00242E  C09A  F035         	movff	exp@x+2,___fleq@ff1+2
  2777  002432  C09B  F036         	movff	exp@x+3,___fleq@ff1+3
  2778  002436  0E00               	movlw	0
  2779  002438  6E37               	movwf	___fleq@ff2^0,c
  2780  00243A  0E00               	movlw	0
  2781  00243C  6E38               	movwf	(___fleq@ff2+1)^0,c
  2782  00243E  0E00               	movlw	0
  2783  002440  6E39               	movwf	(___fleq@ff2+2)^0,c
  2784  002442  0E00               	movlw	0
  2785  002444  6E3A               	movwf	(___fleq@ff2+3)^0,c
  2786  002446  ECD6  F01D         	call	___fleq	;wreg free
  2787  00244A  A0D8               	btfss	status,0,c
  2788  00244C  EF2A  F012         	goto	u7321
  2789  002450  EF2C  F012         	goto	u7320
  2790  002454                     u7321:
  2791  002454  EF37  F012         	goto	l6419
  2792  002458                     u7320:
  2793  002458  0E00               	movlw	0
  2794  00245A  0100               	movlb	0	; () banked
  2795  00245C  6F98               	movwf	?_exp& (0+255),b
  2796  00245E  0E00               	movlw	0
  2797  002460  6F99               	movwf	(?_exp+1)& (0+255),b
  2798  002462  0E80               	movlw	128
  2799  002464  6F9A               	movwf	(?_exp+2)& (0+255),b
  2800  002466  0E3F               	movlw	63
  2801  002468  6F9B               	movwf	(?_exp+3)& (0+255),b
  2802  00246A  EF88  F013         	goto	l1515
  2803  00246E                     l6419:
  2804  00246E  0E18               	movlw	24
  2805  002470  6E02               	movwf	___flge@ff1^0,c
  2806  002472  0E72               	movlw	114
  2807  002474  6E03               	movwf	(___flge@ff1+1)^0,c
  2808  002476  0E31               	movlw	49
  2809  002478  6E04               	movwf	(___flge@ff1+2)^0,c
  2810  00247A  0E44               	movlw	68
  2811  00247C  6E05               	movwf	(___flge@ff1+3)^0,c
  2812  00247E  C098  F006         	movff	exp@x,___flge@ff2
  2813  002482  C099  F007         	movff	exp@x+1,___flge@ff2+1
  2814  002486  C09A  F008         	movff	exp@x+2,___flge@ff2+2
  2815  00248A  C09B  F009         	movff	exp@x+3,___flge@ff2+3
  2816  00248E  ECD6  F01B         	call	___flge	;wreg free
  2817  002492  B0D8               	btfsc	status,0,c
  2818  002494  EF4E  F012         	goto	u7331
  2819  002498  EF50  F012         	goto	u7330
  2820  00249C                     u7331:
  2821  00249C  EF60  F012         	goto	l6425
  2822  0024A0                     u7330:
  2823  0024A0  0E00               	movlw	0
  2824  0024A2  0101               	movlb	1	; () banked
  2825  0024A4  6F89               	movwf	(_errno+1)& (0+255),b
  2826  0024A6  0E22               	movlw	34
  2827  0024A8  6F88               	movwf	_errno& (0+255),b
  2828  0024AA  0EFF               	movlw	255
  2829  0024AC  0100               	movlb	0	; () banked
  2830  0024AE  6F98               	movwf	?_exp& (0+255),b
  2831  0024B0  0EFF               	movlw	255
  2832  0024B2  6F99               	movwf	(?_exp+1)& (0+255),b
  2833  0024B4  0E7F               	movlw	127
  2834  0024B6  6F9A               	movwf	(?_exp+2)& (0+255),b
  2835  0024B8  0E7F               	movlw	127
  2836  0024BA  6F9B               	movwf	(?_exp+3)& (0+255),b
  2837  0024BC  EF88  F013         	goto	l1515
  2838  0024C0                     l6425:
  2839  0024C0  C098  F002         	movff	exp@x,___flge@ff1
  2840  0024C4  C099  F003         	movff	exp@x+1,___flge@ff1+1
  2841  0024C8  C09A  F004         	movff	exp@x+2,___flge@ff1+2
  2842  0024CC  C09B  F005         	movff	exp@x+3,___flge@ff1+3
  2843  0024D0  0E87               	movlw	135
  2844  0024D2  6E06               	movwf	___flge@ff2^0,c
  2845  0024D4  0E48               	movlw	72
  2846  0024D6  6E07               	movwf	(___flge@ff2+1)^0,c
  2847  0024D8  0E3A               	movlw	58
  2848  0024DA  6E08               	movwf	(___flge@ff2+2)^0,c
  2849  0024DC  0EC4               	movlw	196
  2850  0024DE  6E09               	movwf	(___flge@ff2+3)^0,c
  2851  0024E0  ECD6  F01B         	call	___flge	;wreg free
  2852  0024E4  B0D8               	btfsc	status,0,c
  2853  0024E6  EF77  F012         	goto	u7341
  2854  0024EA  EF79  F012         	goto	u7340
  2855  0024EE                     u7341:
  2856  0024EE  EF89  F012         	goto	l6431
  2857  0024F2                     u7340:
  2858  0024F2  0E00               	movlw	0
  2859  0024F4  0101               	movlb	1	; () banked
  2860  0024F6  6F89               	movwf	(_errno+1)& (0+255),b
  2861  0024F8  0E22               	movlw	34
  2862  0024FA  6F88               	movwf	_errno& (0+255),b
  2863  0024FC  0E00               	movlw	0
  2864  0024FE  0100               	movlb	0	; () banked
  2865  002500  6F98               	movwf	?_exp& (0+255),b
  2866  002502  0E00               	movlw	0
  2867  002504  6F99               	movwf	(?_exp+1)& (0+255),b
  2868  002506  0E00               	movlw	0
  2869  002508  6F9A               	movwf	(?_exp+2)& (0+255),b
  2870  00250A  0E00               	movlw	0
  2871  00250C  6F9B               	movwf	(?_exp+3)& (0+255),b
  2872  00250E  EF88  F013         	goto	l1515
  2873  002512                     l6431:
  2874  002512  0100               	movlb	0	; () banked
  2875  002514  BF9B               	btfsc	(exp@x+3)& (0+255),7,b
  2876  002516  EF8F  F012         	goto	u7351
  2877  00251A  EF92  F012         	goto	u7350
  2878  00251E                     u7351:
  2879  00251E  0E01               	movlw	1
  2880  002520  EF93  F012         	goto	u7360
  2881  002524                     u7350:
  2882  002524  0E00               	movlw	0
  2883  002526                     u7360:
  2884  002526  6FA2               	movwf	exp@sign& (0+255),b
  2885  002528                     
  2886                           ; BSR set to: 0
  2887  002528  51A2               	movf	exp@sign& (0+255),w,b
  2888  00252A  B4D8               	btfsc	status,2,c
  2889  00252C  EF9A  F012         	goto	u7371
  2890  002530  EF9C  F012         	goto	u7370
  2891  002534                     u7371:
  2892  002534  EFAE  F012         	goto	l6437
  2893  002538                     u7370:
  2894  002538                     
  2895                           ; BSR set to: 0
  2896  002538  C098  F002         	movff	exp@x,___flneg@f1
  2897  00253C  C099  F003         	movff	exp@x+1,___flneg@f1+1
  2898  002540  C09A  F004         	movff	exp@x+2,___flneg@f1+2
  2899  002544  C09B  F005         	movff	exp@x+3,___flneg@f1+3
  2900  002548  EC66  F021         	call	___flneg	;wreg free
  2901  00254C  C002  F098         	movff	?___flneg,exp@x
  2902  002550  C003  F099         	movff	?___flneg+1,exp@x+1
  2903  002554  C004  F09A         	movff	?___flneg+2,exp@x+2
  2904  002558  C005  F09B         	movff	?___flneg+3,exp@x+3
  2905  00255C                     l6437:
  2906  00255C  C098  F047         	movff	exp@x,___flmul@b
  2907  002560  C099  F048         	movff	exp@x+1,___flmul@b+1
  2908  002564  C09A  F049         	movff	exp@x+2,___flmul@b+2
  2909  002568  C09B  F04A         	movff	exp@x+3,___flmul@b+3
  2910  00256C  0E3B               	movlw	59
  2911  00256E  6E4B               	movwf	___flmul@a^0,c
  2912  002570  0EAA               	movlw	170
  2913  002572  6E4C               	movwf	(___flmul@a+1)^0,c
  2914  002574  0EB8               	movlw	184
  2915  002576  6E4D               	movwf	(___flmul@a+2)^0,c
  2916  002578  0E3F               	movlw	63
  2917  00257A  6E4E               	movwf	(___flmul@a+3)^0,c
  2918  00257C  ECF3  F008         	call	___flmul	;wreg free
  2919  002580  C047  F098         	movff	?___flmul,exp@x
  2920  002584  C048  F099         	movff	?___flmul+1,exp@x+1
  2921  002588  C049  F09A         	movff	?___flmul+2,exp@x+2
  2922  00258C  C04A  F09B         	movff	?___flmul+3,exp@x+3
  2923  002590  C098  F082         	movff	exp@x,floor@x
  2924  002594  C099  F083         	movff	exp@x+1,floor@x+1
  2925  002598  C09A  F084         	movff	exp@x+2,floor@x+2
  2926  00259C  C09B  F085         	movff	exp@x+3,floor@x+3
  2927  0025A0  EC0B  F019         	call	_floor	;wreg free
  2928  0025A4  C082  F09C         	movff	?_floor,_exp$2448
  2929  0025A8  C083  F09D         	movff	?_floor+1,_exp$2448+1
  2930  0025AC  C084  F09E         	movff	?_floor+2,_exp$2448+2
  2931  0025B0  C085  F09F         	movff	?_floor+3,_exp$2448+3
  2932  0025B4  C09C  F01B         	movff	_exp$2448,___fltol@f1
  2933  0025B8  C09D  F01C         	movff	_exp$2448+1,___fltol@f1+1
  2934  0025BC  C09E  F01D         	movff	_exp$2448+2,___fltol@f1+2
  2935  0025C0  C09F  F01E         	movff	_exp$2448+3,___fltol@f1+3
  2936  0025C4  ECD1  F01A         	call	___fltol	;wreg free
  2937  0025C8  C01B  F0A0         	movff	?___fltol,exp@exponent
  2938  0025CC  C01C  F0A1         	movff	?___fltol+1,exp@exponent+1
  2939  0025D0  C098  F082         	movff	exp@x,___flsub@b
  2940  0025D4  C099  F083         	movff	exp@x+1,___flsub@b+1
  2941  0025D8  C09A  F084         	movff	exp@x+2,___flsub@b+2
  2942  0025DC  C09B  F085         	movff	exp@x+3,___flsub@b+3
  2943  0025E0  C0A0  F025         	movff	exp@exponent,___xxtofl@val
  2944  0025E4  C0A1  F026         	movff	exp@exponent+1,___xxtofl@val+1
  2945  0025E8  0E00               	movlw	0
  2946  0025EA  BE26               	btfsc	(___xxtofl@val+1)^0,7,c
  2947  0025EC  0EFF               	movlw	-1
  2948  0025EE  6E27               	movwf	(___xxtofl@val+2)^0,c
  2949  0025F0  6E28               	movwf	(___xxtofl@val+3)^0,c
  2950  0025F2  0E01               	movlw	1
  2951  0025F4  EC0D  F016         	call	___xxtofl
  2952  0025F8  C025  F086         	movff	?___xxtofl,___flsub@a
  2953  0025FC  C026  F087         	movff	?___xxtofl+1,___flsub@a+1
  2954  002600  C027  F088         	movff	?___xxtofl+2,___flsub@a+2
  2955  002604  C028  F089         	movff	?___xxtofl+3,___flsub@a+3
  2956  002608  EC42  F021         	call	___flsub	;wreg free
  2957  00260C  C082  F098         	movff	?___flsub,exp@x
  2958  002610  C083  F099         	movff	?___flsub+1,exp@x+1
  2959  002614  C084  F09A         	movff	?___flsub+2,exp@x+2
  2960  002618  C085  F09B         	movff	?___flsub+3,exp@x+3
  2961  00261C  C098  F082         	movff	exp@x,eval_poly@x
  2962  002620  C099  F083         	movff	exp@x+1,eval_poly@x+1
  2963  002624  C09A  F084         	movff	exp@x+2,eval_poly@x+2
  2964  002628  C09B  F085         	movff	exp@x+3,eval_poly@x+3
  2965  00262C  0E5B               	movlw	low exp@coeff
  2966  00262E  0100               	movlb	0	; () banked
  2967  002630  6F86               	movwf	eval_poly@d& (0+255),b
  2968  002632  0E7F               	movlw	high exp@coeff
  2969  002634  6F87               	movwf	(eval_poly@d+1)& (0+255),b
  2970  002636  0E00               	movlw	0
  2971  002638  6F89               	movwf	(eval_poly@n+1)& (0+255),b
  2972  00263A  0E09               	movlw	9
  2973  00263C  6F88               	movwf	eval_poly@n& (0+255),b
  2974  00263E  EC54  F01B         	call	_eval_poly	;wreg free
  2975  002642  C082  F092         	movff	?_eval_poly,ldexp@value
  2976  002646  C083  F093         	movff	?_eval_poly+1,ldexp@value+1
  2977  00264A  C084  F094         	movff	?_eval_poly+2,ldexp@value+2
  2978  00264E  C085  F095         	movff	?_eval_poly+3,ldexp@value+3
  2979  002652  C0A0  F096         	movff	exp@exponent,ldexp@newexp
  2980  002656  C0A1  F097         	movff	exp@exponent+1,ldexp@newexp+1
  2981  00265A  ECAD  F019         	call	_ldexp	;wreg free
  2982  00265E  C092  F098         	movff	?_ldexp,exp@x
  2983  002662  C093  F099         	movff	?_ldexp+1,exp@x+1
  2984  002666  C094  F09A         	movff	?_ldexp+2,exp@x+2
  2985  00266A  C095  F09B         	movff	?_ldexp+3,exp@x+3
  2986  00266E  0100               	movlb	0	; () banked
  2987  002670  51A2               	movf	exp@sign& (0+255),w,b
  2988  002672  B4D8               	btfsc	status,2,c
  2989  002674  EF3E  F013         	goto	u7381
  2990  002678  EF40  F013         	goto	u7380
  2991  00267C                     u7381:
  2992  00267C  EF80  F013         	goto	l1519
  2993  002680                     u7380:
  2994  002680                     
  2995                           ; BSR set to: 0
  2996  002680  C098  F033         	movff	exp@x,___fleq@ff1
  2997  002684  C099  F034         	movff	exp@x+1,___fleq@ff1+1
  2998  002688  C09A  F035         	movff	exp@x+2,___fleq@ff1+2
  2999  00268C  C09B  F036         	movff	exp@x+3,___fleq@ff1+3
  3000  002690  0EFF               	movlw	255
  3001  002692  6E37               	movwf	___fleq@ff2^0,c
  3002  002694  0EFF               	movlw	255
  3003  002696  6E38               	movwf	(___fleq@ff2+1)^0,c
  3004  002698  0E7F               	movlw	127
  3005  00269A  6E39               	movwf	(___fleq@ff2+2)^0,c
  3006  00269C  0E7F               	movlw	127
  3007  00269E  6E3A               	movwf	(___fleq@ff2+3)^0,c
  3008  0026A0  ECD6  F01D         	call	___fleq	;wreg free
  3009  0026A4  A0D8               	btfss	status,0,c
  3010  0026A6  EF57  F013         	goto	u7391
  3011  0026AA  EF59  F013         	goto	u7390
  3012  0026AE                     u7391:
  3013  0026AE  EF64  F013         	goto	l6455
  3014  0026B2                     u7390:
  3015  0026B2  0E00               	movlw	0
  3016  0026B4  0100               	movlb	0	; () banked
  3017  0026B6  6F98               	movwf	?_exp& (0+255),b
  3018  0026B8  0E00               	movlw	0
  3019  0026BA  6F99               	movwf	(?_exp+1)& (0+255),b
  3020  0026BC  0E00               	movlw	0
  3021  0026BE  6F9A               	movwf	(?_exp+2)& (0+255),b
  3022  0026C0  0E00               	movlw	0
  3023  0026C2  6F9B               	movwf	(?_exp+3)& (0+255),b
  3024  0026C4  EF88  F013         	goto	l1515
  3025  0026C8                     l6455:
  3026  0026C8  0E00               	movlw	0
  3027  0026CA  6E02               	movwf	___fldiv@b^0,c
  3028  0026CC  0E00               	movlw	0
  3029  0026CE  6E03               	movwf	(___fldiv@b+1)^0,c
  3030  0026D0  0E80               	movlw	128
  3031  0026D2  6E04               	movwf	(___fldiv@b+2)^0,c
  3032  0026D4  0E3F               	movlw	63
  3033  0026D6  6E05               	movwf	(___fldiv@b+3)^0,c
  3034  0026D8  C098  F006         	movff	exp@x,___fldiv@a
  3035  0026DC  C099  F007         	movff	exp@x+1,___fldiv@a+1
  3036  0026E0  C09A  F008         	movff	exp@x+2,___fldiv@a+2
  3037  0026E4  C09B  F009         	movff	exp@x+3,___fldiv@a+3
  3038  0026E8  EC0F  F00D         	call	___fldiv	;wreg free
  3039  0026EC  C002  F098         	movff	?___fldiv,?_exp
  3040  0026F0  C003  F099         	movff	?___fldiv+1,?_exp+1
  3041  0026F4  C004  F09A         	movff	?___fldiv+2,?_exp+2
  3042  0026F8  C005  F09B         	movff	?___fldiv+3,?_exp+3
  3043  0026FC  EF88  F013         	goto	l1515
  3044  002700                     l1519:
  3045                           
  3046                           ; BSR set to: 0
  3047  002700  C098  F098         	movff	exp@x,?_exp
  3048  002704  C099  F099         	movff	exp@x+1,?_exp+1
  3049  002708  C09A  F09A         	movff	exp@x+2,?_exp+2
  3050  00270C  C09B  F09B         	movff	exp@x+3,?_exp+3
  3051  002710                     l1515:
  3052  002710  0012               	return		;funcret
  3053  002712                     __end_of_exp:
  3054                           	callstack 0
  3055                           
  3056 ;; *************** function _ldexp *****************
  3057 ;; Defined at:
  3058 ;;		line 277 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\frexp.c"
  3059 ;; Parameters:    Size  Location     Type
  3060 ;;  value           4   50[BANK0 ] unsigned char 
  3061 ;;  newexp          2   54[BANK0 ] int 
  3062 ;; Auto vars:     Size  Location     Type
  3063 ;;		None
  3064 ;; Return value:  Size  Location     Type
  3065 ;;                  4   50[BANK0 ] int 
  3066 ;; Registers used:
  3067 ;;		wreg, status,2, status,0, cstack
  3068 ;; Tracked objects:
  3069 ;;		On entry : 0/0
  3070 ;;		On exit  : 0/0
  3071 ;;		Unchanged: 0/0
  3072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3073 ;;      Params:         0       6       0       0       0       0       0       0       0
  3074 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3075 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3076 ;;      Totals:         2       6       0       0       0       0       0       0       0
  3077 ;;Total ram usage:        8 bytes
  3078 ;; Hardware stack levels used: 1
  3079 ;; Hardware stack levels required when called: 4
  3080 ;; This function calls:
  3081 ;;		___fleq
  3082 ;; This function is called by:
  3083 ;;		_exp
  3084 ;; This function uses a non-reentrant model
  3085 ;;
  3086                           
  3087                           	psect	text14
  3088  00335A                     __ptext14:
  3089                           	callstack 0
  3090  00335A                     _ldexp:
  3091                           	callstack 23
  3092  00335A  C092  F033         	movff	ldexp@value,___fleq@ff1
  3093  00335E  C093  F034         	movff	ldexp@value+1,___fleq@ff1+1
  3094  003362  C094  F035         	movff	ldexp@value+2,___fleq@ff1+2
  3095  003366  C095  F036         	movff	ldexp@value+3,___fleq@ff1+3
  3096  00336A  0E00               	movlw	0
  3097  00336C  6E37               	movwf	___fleq@ff2^0,c
  3098  00336E  0E00               	movlw	0
  3099  003370  6E38               	movwf	(___fleq@ff2+1)^0,c
  3100  003372  0E00               	movlw	0
  3101  003374  6E39               	movwf	(___fleq@ff2+2)^0,c
  3102  003376  0E00               	movlw	0
  3103  003378  6E3A               	movwf	(___fleq@ff2+3)^0,c
  3104  00337A  ECD6  F01D         	call	___fleq	;wreg free
  3105  00337E  A0D8               	btfss	status,0,c
  3106  003380  EFC4  F019         	goto	u6811
  3107  003384  EFC6  F019         	goto	u6810
  3108  003388                     u6811:
  3109  003388  EFD1  F019         	goto	l6109
  3110  00338C                     u6810:
  3111  00338C  0E00               	movlw	0
  3112  00338E  0100               	movlb	0	; () banked
  3113  003390  6F92               	movwf	?_ldexp& (0+255),b
  3114  003392  0E00               	movlw	0
  3115  003394  6F93               	movwf	(?_ldexp+1)& (0+255),b
  3116  003396  0E00               	movlw	0
  3117  003398  6F94               	movwf	(?_ldexp+2)& (0+255),b
  3118  00339A  0E00               	movlw	0
  3119  00339C  6F95               	movwf	(?_ldexp+3)& (0+255),b
  3120  00339E  EF4C  F01A         	goto	l1545
  3121  0033A2                     l6109:
  3122  0033A2  0100               	movlb	0	; () banked
  3123  0033A4  5195               	movf	(ldexp@value+3)& (0+255),w,b
  3124  0033A6  0B7F               	andlw	127
  3125  0033A8  6E5B               	movwf	??_ldexp^0,c
  3126  0033AA  6A5C               	clrf	(??_ldexp+1)^0,c
  3127  0033AC  90D8               	bcf	status,0,c
  3128  0033AE  365B               	rlcf	??_ldexp^0,f,c
  3129  0033B0  365C               	rlcf	(??_ldexp+1)^0,f,c
  3130  0033B2  505B               	movf	??_ldexp^0,w,c
  3131  0033B4  2796               	addwf	ldexp@newexp& (0+255),f,b
  3132  0033B6  505C               	movf	(??_ldexp+1)^0,w,c
  3133  0033B8  2397               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  3134  0033BA  BF94               	btfsc	(ldexp@value+2)& (0+255),7,b
  3135  0033BC  EFE2  F019         	goto	u6821
  3136  0033C0  EFE6  F019         	goto	u6820
  3137  0033C4                     u6821:
  3138  0033C4  6A5B               	clrf	??_ldexp^0,c
  3139  0033C6  2A5B               	incf	??_ldexp^0,f,c
  3140  0033C8  EFE7  F019         	goto	u6828
  3141  0033CC                     u6820:
  3142  0033CC  6A5B               	clrf	??_ldexp^0,c
  3143  0033CE                     u6828:
  3144  0033CE  505B               	movf	??_ldexp^0,w,c
  3145  0033D0  0100               	movlb	0	; () banked
  3146  0033D2  2796               	addwf	ldexp@newexp& (0+255),f,b
  3147  0033D4  0E00               	movlw	0
  3148  0033D6  2397               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  3149  0033D8  BF97               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  3150  0033DA  EFF3  F019         	goto	u6830
  3151  0033DE  EFF1  F019         	goto	u6831
  3152  0033E2                     u6831:
  3153  0033E2  EF03  F01A         	goto	l6117
  3154  0033E6                     u6830:
  3155  0033E6                     
  3156                           ; BSR set to: 0
  3157  0033E6  0E00               	movlw	0
  3158  0033E8  0101               	movlb	1	; () banked
  3159  0033EA  6F89               	movwf	(_errno+1)& (0+255),b
  3160  0033EC  0E22               	movlw	34
  3161  0033EE  6F88               	movwf	_errno& (0+255),b
  3162  0033F0  0E00               	movlw	0
  3163  0033F2  0100               	movlb	0	; () banked
  3164  0033F4  6F92               	movwf	?_ldexp& (0+255),b
  3165  0033F6  0E00               	movlw	0
  3166  0033F8  6F93               	movwf	(?_ldexp+1)& (0+255),b
  3167  0033FA  0E00               	movlw	0
  3168  0033FC  6F94               	movwf	(?_ldexp+2)& (0+255),b
  3169  0033FE  0E00               	movlw	0
  3170  003400  6F95               	movwf	(?_ldexp+3)& (0+255),b
  3171  003402  EF4C  F01A         	goto	l1545
  3172  003406                     l6117:
  3173                           
  3174                           ; BSR set to: 0
  3175  003406  BF97               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  3176  003408  EF0C  F01A         	goto	u6841
  3177  00340C  0597               	decf	(ldexp@newexp+1)& (0+255),w,b
  3178  00340E  A0D8               	btfss	status,0,c
  3179  003410  EF0C  F01A         	goto	u6841
  3180  003414  EF0E  F01A         	goto	u6840
  3181  003418                     u6841:
  3182  003418  EF2F  F01A         	goto	l6133
  3183  00341C                     u6840:
  3184  00341C                     
  3185                           ; BSR set to: 0
  3186  00341C  0E00               	movlw	0
  3187  00341E  0101               	movlb	1	; () banked
  3188  003420  6F89               	movwf	(_errno+1)& (0+255),b
  3189  003422  0E22               	movlw	34
  3190  003424  6F88               	movwf	_errno& (0+255),b
  3191  003426                     
  3192                           ; BSR set to: 1
  3193  003426  0100               	movlb	0	; () banked
  3194  003428  BF95               	btfsc	(ldexp@value+3)& (0+255),7,b
  3195  00342A  EF1B  F01A         	goto	u6850
  3196  00342E  EF19  F01A         	goto	u6851
  3197  003432                     u6851:
  3198  003432  EF25  F01A         	goto	l6129
  3199  003436                     u6850:
  3200  003436                     
  3201                           ; BSR set to: 0
  3202  003436  0EFF               	movlw	255
  3203  003438  6F92               	movwf	?_ldexp& (0+255),b
  3204  00343A  0EFF               	movlw	255
  3205  00343C  6F93               	movwf	(?_ldexp+1)& (0+255),b
  3206  00343E  0E7F               	movlw	127
  3207  003440  6F94               	movwf	(?_ldexp+2)& (0+255),b
  3208  003442  0EFF               	movlw	255
  3209  003444  6F95               	movwf	(?_ldexp+3)& (0+255),b
  3210  003446  EF4C  F01A         	goto	l1545
  3211  00344A                     l6129:
  3212                           
  3213                           ; BSR set to: 0
  3214  00344A  0EFF               	movlw	255
  3215  00344C  6F92               	movwf	?_ldexp& (0+255),b
  3216  00344E  0EFF               	movlw	255
  3217  003450  6F93               	movwf	(?_ldexp+1)& (0+255),b
  3218  003452  0E7F               	movlw	127
  3219  003454  6F94               	movwf	(?_ldexp+2)& (0+255),b
  3220  003456  0E7F               	movlw	127
  3221  003458  6F95               	movwf	(?_ldexp+3)& (0+255),b
  3222  00345A  EF4C  F01A         	goto	l1545
  3223  00345E                     l6133:
  3224                           
  3225                           ; BSR set to: 0
  3226  00345E  3597               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  3227  003460  3197               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  3228  003462  6E5C               	movwf	(??_ldexp+1)^0,c
  3229  003464  3196               	rrcf	ldexp@newexp& (0+255),w,b
  3230  003466  6E5B               	movwf	??_ldexp^0,c
  3231  003468  5195               	movf	(ldexp@value+3)& (0+255),w,b
  3232  00346A  185B               	xorwf	??_ldexp^0,w,c
  3233  00346C  0B80               	andlw	-128
  3234  00346E  185B               	xorwf	??_ldexp^0,w,c
  3235  003470  6F95               	movwf	(ldexp@value+3)& (0+255),b
  3236  003472  C096  F05B         	movff	ldexp@newexp,??_ldexp
  3237  003476  0E01               	movlw	1
  3238  003478  165B               	andwf	??_ldexp^0,f,c
  3239  00347A  325B               	rrcf	??_ldexp^0,f,c
  3240  00347C  325B               	rrcf	??_ldexp^0,f,c
  3241  00347E  5194               	movf	(ldexp@value+2)& (0+255),w,b
  3242  003480  185B               	xorwf	??_ldexp^0,w,c
  3243  003482  0B7F               	andlw	-129
  3244  003484  185B               	xorwf	??_ldexp^0,w,c
  3245  003486  6F94               	movwf	(ldexp@value+2)& (0+255),b
  3246  003488                     
  3247                           ; BSR set to: 0
  3248  003488  C092  F092         	movff	ldexp@value,?_ldexp
  3249  00348C  C093  F093         	movff	ldexp@value+1,?_ldexp+1
  3250  003490  C094  F094         	movff	ldexp@value+2,?_ldexp+2
  3251  003494  C095  F095         	movff	ldexp@value+3,?_ldexp+3
  3252  003498                     l1545:
  3253                           
  3254                           ; BSR set to: 0
  3255  003498  0012               	return		;funcret
  3256  00349A                     __end_of_ldexp:
  3257                           	callstack 0
  3258                           
  3259 ;; *************** function _floor *****************
  3260 ;; Defined at:
  3261 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\floor.c"
  3262 ;; Parameters:    Size  Location     Type
  3263 ;;  x               4   34[BANK0 ] int 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  i               4   38[BANK0 ] int 
  3266 ;;  expon           2   42[BANK0 ] int 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  4   34[BANK0 ] int 
  3269 ;; Registers used:
  3270 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3276 ;;      Params:         0       4       0       0       0       0       0       0       0
  3277 ;;      Locals:         0       6       0       0       0       0       0       0       0
  3278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3279 ;;      Totals:         0      10       0       0       0       0       0       0       0
  3280 ;;Total ram usage:       10 bytes
  3281 ;; Hardware stack levels used: 1
  3282 ;; Hardware stack levels required when called: 5
  3283 ;; This function calls:
  3284 ;;		___fladd
  3285 ;;		___flge
  3286 ;;		___fltol
  3287 ;;		___xxtofl
  3288 ;;		_frexp
  3289 ;; This function is called by:
  3290 ;;		_exp
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text15
  3295  003216                     __ptext15:
  3296                           	callstack 0
  3297  003216                     _floor:
  3298                           	callstack 22
  3299  003216  C082  F03F         	movff	floor@x,frexp@value
  3300  00321A  C083  F040         	movff	floor@x+1,frexp@value+1
  3301  00321E  C084  F041         	movff	floor@x+2,frexp@value+2
  3302  003222  C085  F042         	movff	floor@x+3,frexp@value+3
  3303  003226  0E8A               	movlw	low floor@expon
  3304  003228  6E43               	movwf	frexp@eptr^0,c
  3305  00322A  0E00               	movlw	high floor@expon
  3306  00322C  6E44               	movwf	(frexp@eptr+1)^0,c
  3307  00322E  ECBA  F01C         	call	_frexp	;wreg free
  3308  003232  0100               	movlb	0	; () banked
  3309  003234  BF8B               	btfsc	(floor@expon+1)& (0+255),7,b
  3310  003236  EF21  F019         	goto	u6760
  3311  00323A  EF1F  F019         	goto	u6761
  3312  00323E                     u6761:
  3313  00323E  EF3C  F019         	goto	l6087
  3314  003242                     u6760:
  3315  003242                     
  3316                           ; BSR set to: 0
  3317  003242  BF85               	btfsc	(floor@x+3)& (0+255),7,b
  3318  003244  EF28  F019         	goto	u6770
  3319  003248  EF26  F019         	goto	u6771
  3320  00324C                     u6771:
  3321  00324C  EF32  F019         	goto	l6083
  3322  003250                     u6770:
  3323  003250                     
  3324                           ; BSR set to: 0
  3325  003250  0E00               	movlw	0
  3326  003252  6F82               	movwf	?_floor& (0+255),b
  3327  003254  0E00               	movlw	0
  3328  003256  6F83               	movwf	(?_floor+1)& (0+255),b
  3329  003258  0E80               	movlw	128
  3330  00325A  6F84               	movwf	(?_floor+2)& (0+255),b
  3331  00325C  0EBF               	movlw	191
  3332  00325E  6F85               	movwf	(?_floor+3)& (0+255),b
  3333  003260  EFAC  F019         	goto	l1533
  3334  003264                     l6083:
  3335                           
  3336                           ; BSR set to: 0
  3337  003264  0E00               	movlw	0
  3338  003266  6F82               	movwf	?_floor& (0+255),b
  3339  003268  0E00               	movlw	0
  3340  00326A  6F83               	movwf	(?_floor+1)& (0+255),b
  3341  00326C  0E00               	movlw	0
  3342  00326E  6F84               	movwf	(?_floor+2)& (0+255),b
  3343  003270  0E00               	movlw	0
  3344  003272  6F85               	movwf	(?_floor+3)& (0+255),b
  3345  003274  EFAC  F019         	goto	l1533
  3346  003278                     l6087:
  3347                           
  3348                           ; BSR set to: 0
  3349  003278  518B               	movf	(floor@expon+1)& (0+255),w,b
  3350  00327A  E109               	bnz	u6780
  3351  00327C  0E1D               	movlw	29
  3352  00327E  5D8A               	subwf	floor@expon& (0+255),w,b
  3353  003280  A0D8               	btfss	status,0,c
  3354  003282  EF45  F019         	goto	u6781
  3355  003286  EF47  F019         	goto	u6780
  3356  00328A                     u6781:
  3357  00328A  EF51  F019         	goto	l6091
  3358  00328E                     u6780:
  3359  00328E                     
  3360                           ; BSR set to: 0
  3361  00328E  C082  F082         	movff	floor@x,?_floor
  3362  003292  C083  F083         	movff	floor@x+1,?_floor+1
  3363  003296  C084  F084         	movff	floor@x+2,?_floor+2
  3364  00329A  C085  F085         	movff	floor@x+3,?_floor+3
  3365  00329E  EFAC  F019         	goto	l1533
  3366  0032A2                     l6091:
  3367                           
  3368                           ; BSR set to: 0
  3369  0032A2  C082  F01B         	movff	floor@x,___fltol@f1
  3370  0032A6  C083  F01C         	movff	floor@x+1,___fltol@f1+1
  3371  0032AA  C084  F01D         	movff	floor@x+2,___fltol@f1+2
  3372  0032AE  C085  F01E         	movff	floor@x+3,___fltol@f1+3
  3373  0032B2  ECD1  F01A         	call	___fltol	;wreg free
  3374  0032B6  C01B  F025         	movff	?___fltol,___xxtofl@val
  3375  0032BA  C01C  F026         	movff	?___fltol+1,___xxtofl@val+1
  3376  0032BE  C01D  F027         	movff	?___fltol+2,___xxtofl@val+2
  3377  0032C2  C01E  F028         	movff	?___fltol+3,___xxtofl@val+3
  3378  0032C6  0E01               	movlw	1
  3379  0032C8  EC0D  F016         	call	___xxtofl
  3380  0032CC  C025  F086         	movff	?___xxtofl,floor@i
  3381  0032D0  C026  F087         	movff	?___xxtofl+1,floor@i+1
  3382  0032D4  C027  F088         	movff	?___xxtofl+2,floor@i+2
  3383  0032D8  C028  F089         	movff	?___xxtofl+3,floor@i+3
  3384  0032DC  C082  F002         	movff	floor@x,___flge@ff1
  3385  0032E0  C083  F003         	movff	floor@x+1,___flge@ff1+1
  3386  0032E4  C084  F004         	movff	floor@x+2,___flge@ff1+2
  3387  0032E8  C085  F005         	movff	floor@x+3,___flge@ff1+3
  3388  0032EC  C086  F006         	movff	floor@i,___flge@ff2
  3389  0032F0  C087  F007         	movff	floor@i+1,___flge@ff2+1
  3390  0032F4  C088  F008         	movff	floor@i+2,___flge@ff2+2
  3391  0032F8  C089  F009         	movff	floor@i+3,___flge@ff2+3
  3392  0032FC  ECD6  F01B         	call	___flge	;wreg free
  3393  003300  B0D8               	btfsc	status,0,c
  3394  003302  EF85  F019         	goto	u6791
  3395  003306  EF87  F019         	goto	u6790
  3396  00330A                     u6791:
  3397  00330A  EFA4  F019         	goto	l1535
  3398  00330E                     u6790:
  3399  00330E  C086  F076         	movff	floor@i,___fladd@b
  3400  003312  C087  F077         	movff	floor@i+1,___fladd@b+1
  3401  003316  C088  F078         	movff	floor@i+2,___fladd@b+2
  3402  00331A  C089  F079         	movff	floor@i+3,___fladd@b+3
  3403  00331E  0E00               	movlw	0
  3404  003320  0100               	movlb	0	; () banked
  3405  003322  6F7A               	movwf	___fladd@a& (0+255),b
  3406  003324  0E00               	movlw	0
  3407  003326  6F7B               	movwf	(___fladd@a+1)& (0+255),b
  3408  003328  0E80               	movlw	128
  3409  00332A  6F7C               	movwf	(___fladd@a+2)& (0+255),b
  3410  00332C  0EBF               	movlw	191
  3411  00332E  6F7D               	movwf	(___fladd@a+3)& (0+255),b
  3412  003330  EC92  F006         	call	___fladd	;wreg free
  3413  003334  C076  F082         	movff	?___fladd,?_floor
  3414  003338  C077  F083         	movff	?___fladd+1,?_floor+1
  3415  00333C  C078  F084         	movff	?___fladd+2,?_floor+2
  3416  003340  C079  F085         	movff	?___fladd+3,?_floor+3
  3417  003344  EFAC  F019         	goto	l1533
  3418  003348                     l1535:
  3419  003348  C086  F082         	movff	floor@i,?_floor
  3420  00334C  C087  F083         	movff	floor@i+1,?_floor+1
  3421  003350  C088  F084         	movff	floor@i+2,?_floor+2
  3422  003354  C089  F085         	movff	floor@i+3,?_floor+3
  3423  003358                     l1533:
  3424  003358  0012               	return		;funcret
  3425  00335A                     __end_of_floor:
  3426                           	callstack 0
  3427                           
  3428 ;; *************** function _frexp *****************
  3429 ;; Defined at:
  3430 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\frexp.c"
  3431 ;; Parameters:    Size  Location     Type
  3432 ;;  value           4   62[COMRAM] int 
  3433 ;;  eptr            2   66[COMRAM] PTR int 
  3434 ;;		 -> log@exponent(2), floor@expon(2), 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;		None
  3437 ;; Return value:  Size  Location     Type
  3438 ;;                  4   62[COMRAM] PTR int 
  3439 ;; Registers used:
  3440 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3441 ;; Tracked objects:
  3442 ;;		On entry : 0/0
  3443 ;;		On exit  : 0/0
  3444 ;;		Unchanged: 0/0
  3445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3446 ;;      Params:         6       0       0       0       0       0       0       0       0
  3447 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3448 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3449 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3450 ;;Total ram usage:        8 bytes
  3451 ;; Hardware stack levels used: 1
  3452 ;; Hardware stack levels required when called: 4
  3453 ;; This function calls:
  3454 ;;		___fleq
  3455 ;; This function is called by:
  3456 ;;		_floor
  3457 ;;		_log
  3458 ;; This function uses a non-reentrant model
  3459 ;;
  3460                           
  3461                           	psect	text16
  3462  003974                     __ptext16:
  3463                           	callstack 0
  3464  003974                     _frexp:
  3465                           	callstack 23
  3466  003974  C03F  F033         	movff	frexp@value,___fleq@ff1
  3467  003978  C040  F034         	movff	frexp@value+1,___fleq@ff1+1
  3468  00397C  C041  F035         	movff	frexp@value+2,___fleq@ff1+2
  3469  003980  C042  F036         	movff	frexp@value+3,___fleq@ff1+3
  3470  003984  0E00               	movlw	0
  3471  003986  6E37               	movwf	___fleq@ff2^0,c
  3472  003988  0E00               	movlw	0
  3473  00398A  6E38               	movwf	(___fleq@ff2+1)^0,c
  3474  00398C  0E00               	movlw	0
  3475  00398E  6E39               	movwf	(___fleq@ff2+2)^0,c
  3476  003990  0E00               	movlw	0
  3477  003992  6E3A               	movwf	(___fleq@ff2+3)^0,c
  3478  003994  ECD6  F01D         	call	___fleq	;wreg free
  3479  003998  A0D8               	btfss	status,0,c
  3480  00399A  EFD1  F01C         	goto	u6551
  3481  00399E  EFD3  F01C         	goto	u6550
  3482  0039A2                     u6551:
  3483  0039A2  EFE5  F01C         	goto	l5929
  3484  0039A6                     u6550:
  3485  0039A6  C043  FFD9         	movff	frexp@eptr,fsr2l
  3486  0039AA  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3487  0039AE  0E00               	movlw	0
  3488  0039B0  6EDE               	movwf	postinc2,c
  3489  0039B2  0E00               	movlw	0
  3490  0039B4  6EDD               	movwf	postdec2,c
  3491  0039B6  0E00               	movlw	0
  3492  0039B8  6E3F               	movwf	?_frexp^0,c
  3493  0039BA  0E00               	movlw	0
  3494  0039BC  6E40               	movwf	(?_frexp+1)^0,c
  3495  0039BE  0E00               	movlw	0
  3496  0039C0  6E41               	movwf	(?_frexp+2)^0,c
  3497  0039C2  0E00               	movlw	0
  3498  0039C4  6E42               	movwf	(?_frexp+3)^0,c
  3499  0039C6  EF1B  F01D         	goto	l1541
  3500  0039CA                     l5929:
  3501  0039CA  5042               	movf	(frexp@value+3)^0,w,c
  3502  0039CC  0B7F               	andlw	127
  3503  0039CE  6E45               	movwf	??_frexp^0,c
  3504  0039D0  6A46               	clrf	(??_frexp+1)^0,c
  3505  0039D2  90D8               	bcf	status,0,c
  3506  0039D4  3645               	rlcf	??_frexp^0,f,c
  3507  0039D6  3646               	rlcf	(??_frexp+1)^0,f,c
  3508  0039D8  C043  FFD9         	movff	frexp@eptr,fsr2l
  3509  0039DC  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3510  0039E0  C045  FFDE         	movff	??_frexp,postinc2
  3511  0039E4  C046  FFDD         	movff	??_frexp+1,postdec2
  3512  0039E8  BE41               	btfsc	(frexp@value+2)^0,7,c
  3513  0039EA  EFF9  F01C         	goto	u6561
  3514  0039EE  EFFD  F01C         	goto	u6560
  3515  0039F2                     u6561:
  3516  0039F2  6A45               	clrf	??_frexp^0,c
  3517  0039F4  2A45               	incf	??_frexp^0,f,c
  3518  0039F6  EFFE  F01C         	goto	u6568
  3519  0039FA                     u6560:
  3520  0039FA  6A45               	clrf	??_frexp^0,c
  3521  0039FC                     u6568:
  3522  0039FC  5045               	movf	??_frexp^0,w,c
  3523  0039FE  C043  FFD9         	movff	frexp@eptr,fsr2l
  3524  003A02  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3525  003A06  12DE               	iorwf	postinc2,f,c
  3526  003A08  0E00               	movlw	0
  3527  003A0A  12DD               	iorwf	postdec2,f,c
  3528  003A0C  C043  FFD9         	movff	frexp@eptr,fsr2l
  3529  003A10  C044  FFDA         	movff	frexp@eptr+1,fsr2h
  3530  003A14  0E82               	movlw	130
  3531  003A16  26DE               	addwf	postinc2,f,c
  3532  003A18  0EFF               	movlw	255
  3533  003A1A  22DD               	addwfc	postdec2,f,c
  3534  003A1C  5042               	movf	(frexp@value+3)^0,w,c
  3535  003A1E  0B80               	andlw	-128
  3536  003A20  093F               	iorlw	63
  3537  003A22  6E42               	movwf	(frexp@value+3)^0,c
  3538  003A24  9E41               	bcf	(frexp@value+2)^0,7,c
  3539  003A26  C03F  F03F         	movff	frexp@value,?_frexp
  3540  003A2A  C040  F040         	movff	frexp@value+1,?_frexp+1
  3541  003A2E  C041  F041         	movff	frexp@value+2,?_frexp+2
  3542  003A32  C042  F042         	movff	frexp@value+3,?_frexp+3
  3543  003A36                     l1541:
  3544  003A36  0012               	return		;funcret
  3545  003A38                     __end_of_frexp:
  3546                           	callstack 0
  3547                           
  3548 ;; *************** function _eval_poly *****************
  3549 ;; Defined at:
  3550 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\evalpoly.c"
  3551 ;; Parameters:    Size  Location     Type
  3552 ;;  x               4   34[BANK0 ] PTR int 
  3553 ;;  d               2   38[BANK0 ] PTR const 
  3554 ;;		 -> log@coeff(36), exp@coeff(40), 
  3555 ;;  n               2   40[BANK0 ] int 
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;  res             4   46[BANK0 ] int 
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  4   34[BANK0 ] int 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3567 ;;      Params:         0       8       0       0       0       0       0       0       0
  3568 ;;      Locals:         0       4       0       0       0       0       0       0       0
  3569 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3570 ;;      Totals:         0      16       0       0       0       0       0       0       0
  3571 ;;Total ram usage:       16 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; Hardware stack levels required when called: 4
  3574 ;; This function calls:
  3575 ;;		___fladd
  3576 ;;		___flmul
  3577 ;; This function is called by:
  3578 ;;		_exp
  3579 ;;		_log
  3580 ;; This function uses a non-reentrant model
  3581 ;;
  3582                           
  3583                           	psect	text17
  3584  0036A8                     __ptext17:
  3585                           	callstack 0
  3586  0036A8                     _eval_poly:
  3587                           	callstack 23
  3588  0036A8  C088  F08A         	movff	eval_poly@n,??_eval_poly
  3589  0036AC  C089  F08B         	movff	eval_poly@n+1,??_eval_poly+1
  3590  0036B0  0100               	movlb	0	; () banked
  3591  0036B2  90D8               	bcf	status,0,c
  3592  0036B4  378A               	rlcf	??_eval_poly& (0+255),f,b
  3593  0036B6  378B               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3594  0036B8  90D8               	bcf	status,0,c
  3595  0036BA  378A               	rlcf	??_eval_poly& (0+255),f,b
  3596  0036BC  378B               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3597  0036BE  C086  F08C         	movff	eval_poly@d,??_eval_poly+2
  3598  0036C2  C087  F08D         	movff	eval_poly@d+1,??_eval_poly+3
  3599  0036C6  518A               	movf	??_eval_poly& (0+255),w,b
  3600  0036C8  278C               	addwf	(??_eval_poly+2)& (0+255),f,b
  3601  0036CA  518B               	movf	(??_eval_poly+1)& (0+255),w,b
  3602  0036CC  238D               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3603  0036CE  C08C  FFF6         	movff	??_eval_poly+2,tblptrl
  3604  0036D2  C08D  FFF7         	movff	??_eval_poly+3,tblptrh
  3605  0036D6                     	if	0	;tblptru may be non-zero
  3606  0036D6                     	endif
  3607  0036D6                     	if	0	;tblptru may be non-zero
  3608  0036D6                     	endif
  3609  0036D6  0009               	tblrd		*+
  3610  0036D8  CFF5 F08E          	movff	tablat,eval_poly@res
  3611  0036DC  0009               	tblrd		*+
  3612  0036DE  CFF5 F08F          	movff	tablat,eval_poly@res+1
  3613  0036E2  0009               	tblrd		*+
  3614  0036E4  CFF5 F090          	movff	tablat,eval_poly@res+2
  3615  0036E8  000A               	tblrd		*-
  3616  0036EA  CFF5 F091          	movff	tablat,eval_poly@res+3
  3617  0036EE  EFC3  F01B         	goto	l6101
  3618  0036F2                     l6099:
  3619                           
  3620                           ; BSR set to: 0
  3621  0036F2  C08E  F04B         	movff	eval_poly@res,___flmul@a
  3622  0036F6  C08F  F04C         	movff	eval_poly@res+1,___flmul@a+1
  3623  0036FA  C090  F04D         	movff	eval_poly@res+2,___flmul@a+2
  3624  0036FE  C091  F04E         	movff	eval_poly@res+3,___flmul@a+3
  3625  003702  C082  F047         	movff	eval_poly@x,___flmul@b
  3626  003706  C083  F048         	movff	eval_poly@x+1,___flmul@b+1
  3627  00370A  C084  F049         	movff	eval_poly@x+2,___flmul@b+2
  3628  00370E  C085  F04A         	movff	eval_poly@x+3,___flmul@b+3
  3629  003712  ECF3  F008         	call	___flmul	;wreg free
  3630  003716  C047  F076         	movff	?___flmul,___fladd@b
  3631  00371A  C048  F077         	movff	?___flmul+1,___fladd@b+1
  3632  00371E  C049  F078         	movff	?___flmul+2,___fladd@b+2
  3633  003722  C04A  F079         	movff	?___flmul+3,___fladd@b+3
  3634  003726  0100               	movlb	0	; () banked
  3635  003728  0788               	decf	eval_poly@n& (0+255),f,b
  3636  00372A  A0D8               	btfss	status,0,c
  3637  00372C  0789               	decf	(eval_poly@n+1)& (0+255),f,b
  3638  00372E  C088  F08A         	movff	eval_poly@n,??_eval_poly
  3639  003732  C089  F08B         	movff	eval_poly@n+1,??_eval_poly+1
  3640  003736  90D8               	bcf	status,0,c
  3641  003738  378A               	rlcf	??_eval_poly& (0+255),f,b
  3642  00373A  378B               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3643  00373C  90D8               	bcf	status,0,c
  3644  00373E  378A               	rlcf	??_eval_poly& (0+255),f,b
  3645  003740  378B               	rlcf	(??_eval_poly+1)& (0+255),f,b
  3646  003742  C086  F08C         	movff	eval_poly@d,??_eval_poly+2
  3647  003746  C087  F08D         	movff	eval_poly@d+1,??_eval_poly+3
  3648  00374A  518A               	movf	??_eval_poly& (0+255),w,b
  3649  00374C  278C               	addwf	(??_eval_poly+2)& (0+255),f,b
  3650  00374E  518B               	movf	(??_eval_poly+1)& (0+255),w,b
  3651  003750  238D               	addwfc	(??_eval_poly+3)& (0+255),f,b
  3652  003752  C08C  FFF6         	movff	??_eval_poly+2,tblptrl
  3653  003756  C08D  FFF7         	movff	??_eval_poly+3,tblptrh
  3654  00375A                     	if	0	;tblptru may be non-zero
  3655  00375A                     	endif
  3656  00375A                     	if	0	;tblptru may be non-zero
  3657  00375A                     	endif
  3658  00375A  0009               	tblrd		*+
  3659  00375C  CFF5 F07A          	movff	tablat,___fladd@a
  3660  003760  0009               	tblrd		*+
  3661  003762  CFF5 F07B          	movff	tablat,___fladd@a+1
  3662  003766  0009               	tblrd		*+
  3663  003768  CFF5 F07C          	movff	tablat,___fladd@a+2
  3664  00376C  000A               	tblrd		*-
  3665  00376E  CFF5 F07D          	movff	tablat,___fladd@a+3
  3666  003772  EC92  F006         	call	___fladd	;wreg free
  3667  003776  C076  F08E         	movff	?___fladd,eval_poly@res
  3668  00377A  C077  F08F         	movff	?___fladd+1,eval_poly@res+1
  3669  00377E  C078  F090         	movff	?___fladd+2,eval_poly@res+2
  3670  003782  C079  F091         	movff	?___fladd+3,eval_poly@res+3
  3671  003786                     l6101:
  3672  003786  0100               	movlb	0	; () banked
  3673  003788  5188               	movf	eval_poly@n& (0+255),w,b
  3674  00378A  1189               	iorwf	(eval_poly@n+1)& (0+255),w,b
  3675  00378C  A4D8               	btfss	status,2,c
  3676  00378E  EFCB  F01B         	goto	u6801
  3677  003792  EFCD  F01B         	goto	u6800
  3678  003796                     u6801:
  3679  003796  EF79  F01B         	goto	l6099
  3680  00379A                     u6800:
  3681  00379A                     
  3682                           ; BSR set to: 0
  3683  00379A  C08E  F082         	movff	eval_poly@res,?_eval_poly
  3684  00379E  C08F  F083         	movff	eval_poly@res+1,?_eval_poly+1
  3685  0037A2  C090  F084         	movff	eval_poly@res+2,?_eval_poly+2
  3686  0037A6  C091  F085         	movff	eval_poly@res+3,?_eval_poly+3
  3687  0037AA                     
  3688                           ; BSR set to: 0
  3689  0037AA  0012               	return		;funcret
  3690  0037AC                     __end_of_eval_poly:
  3691                           	callstack 0
  3692                           
  3693 ;; *************** function _ComputeWaterVol *****************
  3694 ;; Defined at:
  3695 ;;		line 87 in file "main.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;  sGals          15   85[BANK0 ] unsigned char [15]
  3700 ;;  sFill          14  100[BANK0 ] unsigned char [14]
  3701 ;;  sEchoMM        11  114[BANK0 ] unsigned char [11]
  3702 ;;  d_WaterHeigh    4  148[BANK0 ] float 
  3703 ;;  d_EmptySpace    4  144[BANK0 ] float 
  3704 ;;  d_WaterVol      4  137[BANK0 ] float 
  3705 ;;  d_mmPerTick     4  133[BANK0 ] float 
  3706 ;;  d_SOS           4  129[BANK0 ] float 
  3707 ;;  d_CurrTemp      4  125[BANK0 ] float 
  3708 ;;  d_EchoPeriod    4    0        float 
  3709 ;;  i_Gals          2  141[BANK0 ] unsigned int 
  3710 ;;  i_PercentFul    1  143[BANK0 ] unsigned char 
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      void 
  3713 ;; Registers used:
  3714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3720 ;;      Params:         0       0       0       0       0       0       0       0       0
  3721 ;;      Locals:         0      67       0       0       0       0       0       0       0
  3722 ;;      Temps:          0       4       0       0       0       0       0       0       0
  3723 ;;      Totals:         0      71       0       0       0       0       0       0       0
  3724 ;;Total ram usage:       71 bytes
  3725 ;; Hardware stack levels used: 1
  3726 ;; Hardware stack levels required when called: 6
  3727 ;; This function calls:
  3728 ;;		_LCD_GoTo
  3729 ;;		_LCD_WriteString
  3730 ;;		___fladd
  3731 ;;		___fldiv
  3732 ;;		___flmul
  3733 ;;		___flsub
  3734 ;;		___fltol
  3735 ;;		___xxtofl
  3736 ;;		_sprintf
  3737 ;;		_sqrt
  3738 ;; This function is called by:
  3739 ;;		_main
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           	psect	text18
  3744  001DB8                     __ptext18:
  3745                           	callstack 0
  3746  001DB8                     _ComputeWaterVol:
  3747                           	callstack 24
  3748  001DB8                     
  3749                           ;main.c: 89: float d_CurrTemp;;main.c: 90: float d_SOS;;main.c: 91: float d_mmPerTick;;m
      +                          ain.c: 92: float d_EmptySpace_mm;;main.c: 93: float d_WaterHeight_mm;;main.c: 94: float 
      +                          d_WaterVol;;main.c: 95: float d_EchoPeriod;;main.c: 96: uint8_t i_PercentFull;;main.c: 9
      +                          7: uint16_t i_Gals;;main.c: 98: uint8_t sGals[] = "----          ";
  3750  001DB8  EE21  F023         	lfsr	2,ComputeWaterVol@F5010
  3751  001DBC  EE10  F0B5         	lfsr	1,ComputeWaterVol@sGals
  3752  001DC0  0E0E               	movlw	14
  3753  001DC2                     u7981:
  3754  001DC2  CFDB FFE3          	movff	plusw2,plusw1
  3755  001DC6  06E8               	decf	wreg,f,c
  3756  001DC8  E2FC               	bc	u7981
  3757                           
  3758                           ;main.c: 99: uint8_t sFill[] = "---          ";
  3759  001DCA  EE21  F032         	lfsr	2,ComputeWaterVol@F5012
  3760  001DCE  EE10  F0C4         	lfsr	1,ComputeWaterVol@sFill
  3761  001DD2  0E0D               	movlw	13
  3762  001DD4                     u7991:
  3763  001DD4  CFDB FFE3          	movff	plusw2,plusw1
  3764  001DD8  06E8               	decf	wreg,f,c
  3765  001DDA  E2FC               	bc	u7991
  3766                           
  3767                           ;main.c: 100: uint8_t sEchoMM[] = "xxxx      ";
  3768  001DDC  EE21  F04C         	lfsr	2,ComputeWaterVol@F5014
  3769  001DE0  EE10  F0D2         	lfsr	1,ComputeWaterVol@sEchoMM
  3770  001DE4  0E0A               	movlw	10
  3771  001DE6                     u8001:
  3772  001DE6  CFDB FFE3          	movff	plusw2,plusw1
  3773  001DEA  06E8               	decf	wreg,f,c
  3774  001DEC  E2FC               	bc	u8001
  3775  001DEE  C18E  F025         	movff	_giEchoCounter,___xxtofl@val
  3776  001DF2  C18F  F026         	movff	_giEchoCounter+1,___xxtofl@val+1
  3777  001DF6  6A27               	clrf	(___xxtofl@val+2)^0,c
  3778  001DF8  6A28               	clrf	(___xxtofl@val+3)^0,c
  3779  001DFA  0E00               	movlw	0
  3780  001DFC  EC0D  F016         	call	___xxtofl
  3781  001E00  C025  F047         	movff	?___xxtofl,___flmul@b
  3782  001E04  C026  F048         	movff	?___xxtofl+1,___flmul@b+1
  3783  001E08  C027  F049         	movff	?___xxtofl+2,___flmul@b+2
  3784  001E0C  C028  F04A         	movff	?___xxtofl+3,___flmul@b+3
  3785  001E10  0EBD               	movlw	189
  3786  001E12  6E4B               	movwf	___flmul@a^0,c
  3787  001E14  0E37               	movlw	55
  3788  001E16  6E4C               	movwf	(___flmul@a+1)^0,c
  3789  001E18  0E06               	movlw	6
  3790  001E1A  6E4D               	movwf	(___flmul@a+2)^0,c
  3791  001E1C  0E35               	movlw	53
  3792  001E1E  6E4E               	movwf	(___flmul@a+3)^0,c
  3793  001E20  ECF3  F008         	call	___flmul	;wreg free
  3794  001E24                     
  3795                           ;main.c: 103: d_CurrTemp = 20.0;
  3796  001E24  0E00               	movlw	0
  3797  001E26  0100               	movlb	0	; () banked
  3798  001E28  6FDD               	movwf	ComputeWaterVol@d_CurrTemp& (0+255),b
  3799  001E2A  0E00               	movlw	0
  3800  001E2C  6FDE               	movwf	(ComputeWaterVol@d_CurrTemp+1)& (0+255),b
  3801  001E2E  0EA0               	movlw	160
  3802  001E30  6FDF               	movwf	(ComputeWaterVol@d_CurrTemp+2)& (0+255),b
  3803  001E32  0E41               	movlw	65
  3804  001E34  6FE0               	movwf	(ComputeWaterVol@d_CurrTemp+3)& (0+255),b
  3805  001E36                     
  3806                           ; BSR set to: 0
  3807                           ;main.c: 104: d_SOS = 331.3e3 * sqrt( 1 + (d_CurrTemp / 273.15));
  3808  001E36  0E00               	movlw	0
  3809  001E38  6F7A               	movwf	___fladd@a& (0+255),b
  3810  001E3A  0E00               	movlw	0
  3811  001E3C  6F7B               	movwf	(___fladd@a+1)& (0+255),b
  3812  001E3E  0E80               	movlw	128
  3813  001E40  6F7C               	movwf	(___fladd@a+2)& (0+255),b
  3814  001E42  0E3F               	movlw	63
  3815  001E44  6F7D               	movwf	(___fladd@a+3)& (0+255),b
  3816  001E46  0E33               	movlw	51
  3817  001E48  6E06               	movwf	___fldiv@a^0,c
  3818  001E4A  0E93               	movlw	147
  3819  001E4C  6E07               	movwf	(___fldiv@a+1)^0,c
  3820  001E4E  0E88               	movlw	136
  3821  001E50  6E08               	movwf	(___fldiv@a+2)^0,c
  3822  001E52  0E43               	movlw	67
  3823  001E54  6E09               	movwf	(___fldiv@a+3)^0,c
  3824  001E56  C0DD  F002         	movff	ComputeWaterVol@d_CurrTemp,___fldiv@b
  3825  001E5A  C0DE  F003         	movff	ComputeWaterVol@d_CurrTemp+1,___fldiv@b+1
  3826  001E5E  C0DF  F004         	movff	ComputeWaterVol@d_CurrTemp+2,___fldiv@b+2
  3827  001E62  C0E0  F005         	movff	ComputeWaterVol@d_CurrTemp+3,___fldiv@b+3
  3828  001E66  EC0F  F00D         	call	___fldiv	;wreg free
  3829  001E6A  C002  F076         	movff	?___fldiv,___fladd@b
  3830  001E6E  C003  F077         	movff	?___fldiv+1,___fladd@b+1
  3831  001E72  C004  F078         	movff	?___fldiv+2,___fladd@b+2
  3832  001E76  C005  F079         	movff	?___fldiv+3,___fladd@b+3
  3833  001E7A  EC92  F006         	call	___fladd	;wreg free
  3834  001E7E  C076  F082         	movff	?___fladd,sqrt@a
  3835  001E82  C077  F083         	movff	?___fladd+1,sqrt@a+1
  3836  001E86  C078  F084         	movff	?___fladd+2,sqrt@a+2
  3837  001E8A  C079  F085         	movff	?___fladd+3,sqrt@a+3
  3838  001E8E  EC84  F010         	call	_sqrt	;wreg free
  3839  001E92  C082  F047         	movff	?_sqrt,___flmul@b
  3840  001E96  C083  F048         	movff	?_sqrt+1,___flmul@b+1
  3841  001E9A  C084  F049         	movff	?_sqrt+2,___flmul@b+2
  3842  001E9E  C085  F04A         	movff	?_sqrt+3,___flmul@b+3
  3843  001EA2  0E80               	movlw	128
  3844  001EA4  6E4B               	movwf	___flmul@a^0,c
  3845  001EA6  0EC4               	movlw	196
  3846  001EA8  6E4C               	movwf	(___flmul@a+1)^0,c
  3847  001EAA  0EA1               	movlw	161
  3848  001EAC  6E4D               	movwf	(___flmul@a+2)^0,c
  3849  001EAE  0E48               	movlw	72
  3850  001EB0  6E4E               	movwf	(___flmul@a+3)^0,c
  3851  001EB2  ECF3  F008         	call	___flmul	;wreg free
  3852  001EB6  C047  F0E1         	movff	?___flmul,ComputeWaterVol@d_SOS
  3853  001EBA  C048  F0E2         	movff	?___flmul+1,ComputeWaterVol@d_SOS+1
  3854  001EBE  C049  F0E3         	movff	?___flmul+2,ComputeWaterVol@d_SOS+2
  3855  001EC2  C04A  F0E4         	movff	?___flmul+3,ComputeWaterVol@d_SOS+3
  3856  001EC6                     
  3857                           ;main.c: 105: d_mmPerTick = d_SOS * 500.0e-9 / 2;
  3858  001EC6  0EBD               	movlw	189
  3859  001EC8  6E4B               	movwf	___flmul@a^0,c
  3860  001ECA  0E37               	movlw	55
  3861  001ECC  6E4C               	movwf	(___flmul@a+1)^0,c
  3862  001ECE  0E06               	movlw	6
  3863  001ED0  6E4D               	movwf	(___flmul@a+2)^0,c
  3864  001ED2  0E35               	movlw	53
  3865  001ED4  6E4E               	movwf	(___flmul@a+3)^0,c
  3866  001ED6  C0E1  F047         	movff	ComputeWaterVol@d_SOS,___flmul@b
  3867  001EDA  C0E2  F048         	movff	ComputeWaterVol@d_SOS+1,___flmul@b+1
  3868  001EDE  C0E3  F049         	movff	ComputeWaterVol@d_SOS+2,___flmul@b+2
  3869  001EE2  C0E4  F04A         	movff	ComputeWaterVol@d_SOS+3,___flmul@b+3
  3870  001EE6  ECF3  F008         	call	___flmul	;wreg free
  3871  001EEA  C047  F002         	movff	?___flmul,___fldiv@b
  3872  001EEE  C048  F003         	movff	?___flmul+1,___fldiv@b+1
  3873  001EF2  C049  F004         	movff	?___flmul+2,___fldiv@b+2
  3874  001EF6  C04A  F005         	movff	?___flmul+3,___fldiv@b+3
  3875  001EFA  0E00               	movlw	0
  3876  001EFC  6E06               	movwf	___fldiv@a^0,c
  3877  001EFE  0E00               	movlw	0
  3878  001F00  6E07               	movwf	(___fldiv@a+1)^0,c
  3879  001F02  0E00               	movlw	0
  3880  001F04  6E08               	movwf	(___fldiv@a+2)^0,c
  3881  001F06  0E40               	movlw	64
  3882  001F08  6E09               	movwf	(___fldiv@a+3)^0,c
  3883  001F0A  EC0F  F00D         	call	___fldiv	;wreg free
  3884  001F0E  C002  F0E5         	movff	?___fldiv,ComputeWaterVol@d_mmPerTick
  3885  001F12  C003  F0E6         	movff	?___fldiv+1,ComputeWaterVol@d_mmPerTick+1
  3886  001F16  C004  F0E7         	movff	?___fldiv+2,ComputeWaterVol@d_mmPerTick+2
  3887  001F1A  C005  F0E8         	movff	?___fldiv+3,ComputeWaterVol@d_mmPerTick+3
  3888  001F1E                     
  3889                           ;main.c: 106: d_EmptySpace_mm = (giEchoCounter.EP16 - 4400) * d_mmPerTick;
  3890  001F1E  0ED0               	movlw	208
  3891  001F20  0100               	movlb	0	; () banked
  3892  001F22  6FB1               	movwf	??_ComputeWaterVol& (0+255),b
  3893  001F24  0EEE               	movlw	238
  3894  001F26  6FB2               	movwf	(??_ComputeWaterVol+1)& (0+255),b
  3895  001F28  C18E  F0B3         	movff	_giEchoCounter,??_ComputeWaterVol+2
  3896  001F2C  C18F  F0B4         	movff	_giEchoCounter+1,??_ComputeWaterVol+3
  3897  001F30  51B1               	movf	??_ComputeWaterVol& (0+255),w,b
  3898  001F32  27B3               	addwf	(??_ComputeWaterVol+2)& (0+255),f,b
  3899  001F34  51B2               	movf	(??_ComputeWaterVol+1)& (0+255),w,b
  3900  001F36  23B4               	addwfc	(??_ComputeWaterVol+3)& (0+255),f,b
  3901  001F38  C0B3  F025         	movff	??_ComputeWaterVol+2,___xxtofl@val
  3902  001F3C  C0B4  F026         	movff	??_ComputeWaterVol+3,___xxtofl@val+1
  3903  001F40  6A27               	clrf	(___xxtofl@val+2)^0,c
  3904  001F42  6A28               	clrf	(___xxtofl@val+3)^0,c
  3905  001F44  0E00               	movlw	0
  3906  001F46  EC0D  F016         	call	___xxtofl
  3907  001F4A  C025  F047         	movff	?___xxtofl,___flmul@b
  3908  001F4E  C026  F048         	movff	?___xxtofl+1,___flmul@b+1
  3909  001F52  C027  F049         	movff	?___xxtofl+2,___flmul@b+2
  3910  001F56  C028  F04A         	movff	?___xxtofl+3,___flmul@b+3
  3911  001F5A  C0E5  F04B         	movff	ComputeWaterVol@d_mmPerTick,___flmul@a
  3912  001F5E  C0E6  F04C         	movff	ComputeWaterVol@d_mmPerTick+1,___flmul@a+1
  3913  001F62  C0E7  F04D         	movff	ComputeWaterVol@d_mmPerTick+2,___flmul@a+2
  3914  001F66  C0E8  F04E         	movff	ComputeWaterVol@d_mmPerTick+3,___flmul@a+3
  3915  001F6A  ECF3  F008         	call	___flmul	;wreg free
  3916  001F6E  C047  F0F0         	movff	?___flmul,ComputeWaterVol@d_EmptySpace_mm
  3917  001F72  C048  F0F1         	movff	?___flmul+1,ComputeWaterVol@d_EmptySpace_mm+1
  3918  001F76  C049  F0F2         	movff	?___flmul+2,ComputeWaterVol@d_EmptySpace_mm+2
  3919  001F7A  C04A  F0F3         	movff	?___flmul+3,ComputeWaterVol@d_EmptySpace_mm+3
  3920  001F7E                     
  3921                           ;main.c: 107: d_WaterHeight_mm = gd_SensorHeight_mm - d_EmptySpace_mm;
  3922  001F7E  C17C  F082         	movff	_gd_SensorHeight_mm,___flsub@b
  3923  001F82  C17D  F083         	movff	_gd_SensorHeight_mm+1,___flsub@b+1
  3924  001F86  C17E  F084         	movff	_gd_SensorHeight_mm+2,___flsub@b+2
  3925  001F8A  C17F  F085         	movff	_gd_SensorHeight_mm+3,___flsub@b+3
  3926  001F8E  C0F0  F086         	movff	ComputeWaterVol@d_EmptySpace_mm,___flsub@a
  3927  001F92  C0F1  F087         	movff	ComputeWaterVol@d_EmptySpace_mm+1,___flsub@a+1
  3928  001F96  C0F2  F088         	movff	ComputeWaterVol@d_EmptySpace_mm+2,___flsub@a+2
  3929  001F9A  C0F3  F089         	movff	ComputeWaterVol@d_EmptySpace_mm+3,___flsub@a+3
  3930  001F9E  EC42  F021         	call	___flsub	;wreg free
  3931  001FA2  C082  F0F4         	movff	?___flsub,ComputeWaterVol@d_WaterHeight_mm
  3932  001FA6  C083  F0F5         	movff	?___flsub+1,ComputeWaterVol@d_WaterHeight_mm+1
  3933  001FAA  C084  F0F6         	movff	?___flsub+2,ComputeWaterVol@d_WaterHeight_mm+2
  3934  001FAE  C085  F0F7         	movff	?___flsub+3,ComputeWaterVol@d_WaterHeight_mm+3
  3935  001FB2                     
  3936                           ;main.c: 108: d_WaterVol = d_WaterHeight_mm * gd_TankGalsPer_mm;
  3937  001FB2  C0F4  F047         	movff	ComputeWaterVol@d_WaterHeight_mm,___flmul@b
  3938  001FB6  C0F5  F048         	movff	ComputeWaterVol@d_WaterHeight_mm+1,___flmul@b+1
  3939  001FBA  C0F6  F049         	movff	ComputeWaterVol@d_WaterHeight_mm+2,___flmul@b+2
  3940  001FBE  C0F7  F04A         	movff	ComputeWaterVol@d_WaterHeight_mm+3,___flmul@b+3
  3941  001FC2  C178  F04B         	movff	_gd_TankGalsPer_mm,___flmul@a
  3942  001FC6  C179  F04C         	movff	_gd_TankGalsPer_mm+1,___flmul@a+1
  3943  001FCA  C17A  F04D         	movff	_gd_TankGalsPer_mm+2,___flmul@a+2
  3944  001FCE  C17B  F04E         	movff	_gd_TankGalsPer_mm+3,___flmul@a+3
  3945  001FD2  ECF3  F008         	call	___flmul	;wreg free
  3946  001FD6  C047  F0E9         	movff	?___flmul,ComputeWaterVol@d_WaterVol
  3947  001FDA  C048  F0EA         	movff	?___flmul+1,ComputeWaterVol@d_WaterVol+1
  3948  001FDE  C049  F0EB         	movff	?___flmul+2,ComputeWaterVol@d_WaterVol+2
  3949  001FE2  C04A  F0EC         	movff	?___flmul+3,ComputeWaterVol@d_WaterVol+3
  3950  001FE6                     
  3951                           ;main.c: 109: i_PercentFull = d_WaterHeight_mm * 100 / gd_MaxWaterHeight_mm;
  3952  001FE6  C174  F006         	movff	_gd_MaxWaterHeight_mm,___fldiv@a
  3953  001FEA  C175  F007         	movff	_gd_MaxWaterHeight_mm+1,___fldiv@a+1
  3954  001FEE  C176  F008         	movff	_gd_MaxWaterHeight_mm+2,___fldiv@a+2
  3955  001FF2  C177  F009         	movff	_gd_MaxWaterHeight_mm+3,___fldiv@a+3
  3956  001FF6  0E00               	movlw	0
  3957  001FF8  6E4B               	movwf	___flmul@a^0,c
  3958  001FFA  0E00               	movlw	0
  3959  001FFC  6E4C               	movwf	(___flmul@a+1)^0,c
  3960  001FFE  0EC8               	movlw	200
  3961  002000  6E4D               	movwf	(___flmul@a+2)^0,c
  3962  002002  0E42               	movlw	66
  3963  002004  6E4E               	movwf	(___flmul@a+3)^0,c
  3964  002006  C0F4  F047         	movff	ComputeWaterVol@d_WaterHeight_mm,___flmul@b
  3965  00200A  C0F5  F048         	movff	ComputeWaterVol@d_WaterHeight_mm+1,___flmul@b+1
  3966  00200E  C0F6  F049         	movff	ComputeWaterVol@d_WaterHeight_mm+2,___flmul@b+2
  3967  002012  C0F7  F04A         	movff	ComputeWaterVol@d_WaterHeight_mm+3,___flmul@b+3
  3968  002016  ECF3  F008         	call	___flmul	;wreg free
  3969  00201A  C047  F002         	movff	?___flmul,___fldiv@b
  3970  00201E  C048  F003         	movff	?___flmul+1,___fldiv@b+1
  3971  002022  C049  F004         	movff	?___flmul+2,___fldiv@b+2
  3972  002026  C04A  F005         	movff	?___flmul+3,___fldiv@b+3
  3973  00202A  EC0F  F00D         	call	___fldiv	;wreg free
  3974  00202E  C002  F01B         	movff	?___fldiv,___fltol@f1
  3975  002032  C003  F01C         	movff	?___fldiv+1,___fltol@f1+1
  3976  002036  C004  F01D         	movff	?___fldiv+2,___fltol@f1+2
  3977  00203A  C005  F01E         	movff	?___fldiv+3,___fltol@f1+3
  3978  00203E  ECD1  F01A         	call	___fltol	;wreg free
  3979  002042  501B               	movf	?___fltol^0,w,c
  3980  002044  0100               	movlb	0	; () banked
  3981  002046  6FEF               	movwf	ComputeWaterVol@i_PercentFull& (0+255),b
  3982  002048                     
  3983                           ; BSR set to: 0
  3984                           ;main.c: 110: i_Gals = d_WaterVol;
  3985  002048  C0E9  F01B         	movff	ComputeWaterVol@d_WaterVol,___fltol@f1
  3986  00204C  C0EA  F01C         	movff	ComputeWaterVol@d_WaterVol+1,___fltol@f1+1
  3987  002050  C0EB  F01D         	movff	ComputeWaterVol@d_WaterVol+2,___fltol@f1+2
  3988  002054  C0EC  F01E         	movff	ComputeWaterVol@d_WaterVol+3,___fltol@f1+3
  3989  002058  ECD1  F01A         	call	___fltol	;wreg free
  3990  00205C  C01B  F0ED         	movff	?___fltol,ComputeWaterVol@i_Gals
  3991  002060  C01C  F0EE         	movff	?___fltol+1,ComputeWaterVol@i_Gals+1
  3992  002064                     
  3993                           ;main.c: 113: sprintf(sGals, "%4i", i_Gals);
  3994  002064  0EB5               	movlw	low ComputeWaterVol@sGals
  3995  002066  0100               	movlb	0	; () banked
  3996  002068  6F8A               	movwf	sprintf@sp& (0+255),b
  3997  00206A  0E00               	movlw	high ComputeWaterVol@sGals
  3998  00206C  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
  3999  00206E  0EFB               	movlw	low STR_3
  4000  002070  6F8C               	movwf	sprintf@f& (0+255),b
  4001  002072  0E7F               	movlw	high STR_3
  4002  002074  6F8D               	movwf	(sprintf@f+1)& (0+255),b
  4003  002076  C0ED  F08E         	movff	ComputeWaterVol@i_Gals,?_sprintf+4
  4004  00207A  C0EE  F08F         	movff	ComputeWaterVol@i_Gals+1,?_sprintf+5
  4005  00207E  EC58  F000         	call	_sprintf	;wreg free
  4006  002082                     
  4007                           ;main.c: 114: LCD_GoTo (0, 5);
  4008  002082  0E05               	movlw	5
  4009  002084  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  4010  002086  0E00               	movlw	0
  4011  002088  EC95  F020         	call	_LCD_GoTo
  4012  00208C                     
  4013                           ;main.c: 115: LCD_WriteString (sGals);
  4014  00208C  0EB5               	movlw	low ComputeWaterVol@sGals
  4015  00208E  6E05               	movwf	LCD_WriteString@iData^0,c
  4016  002090  0E00               	movlw	high ComputeWaterVol@sGals
  4017  002092  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  4018  002094  EC42  F01F         	call	_LCD_WriteString	;wreg free
  4019  002098                     
  4020                           ;main.c: 117: sprintf (sFill, "%3i", i_PercentFull);
  4021  002098  0EC4               	movlw	low ComputeWaterVol@sFill
  4022  00209A  0100               	movlb	0	; () banked
  4023  00209C  6F8A               	movwf	sprintf@sp& (0+255),b
  4024  00209E  0E00               	movlw	high ComputeWaterVol@sFill
  4025  0020A0  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
  4026  0020A2  0EF7               	movlw	low STR_4
  4027  0020A4  6F8C               	movwf	sprintf@f& (0+255),b
  4028  0020A6  0E7F               	movlw	high STR_4
  4029  0020A8  6F8D               	movwf	(sprintf@f+1)& (0+255),b
  4030  0020AA  C0EF  F08E         	movff	ComputeWaterVol@i_PercentFull,?_sprintf+4
  4031  0020AE  6B8F               	clrf	(?_sprintf+5)& (0+255),b
  4032  0020B0  EC58  F000         	call	_sprintf	;wreg free
  4033  0020B4                     
  4034                           ;main.c: 118: LCD_GoTo (0, 10);
  4035  0020B4  0E0A               	movlw	10
  4036  0020B6  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  4037  0020B8  0E00               	movlw	0
  4038  0020BA  EC95  F020         	call	_LCD_GoTo
  4039  0020BE                     
  4040                           ;main.c: 119: LCD_WriteString (sFill);
  4041  0020BE  0EC4               	movlw	low ComputeWaterVol@sFill
  4042  0020C0  6E05               	movwf	LCD_WriteString@iData^0,c
  4043  0020C2  0E00               	movlw	high ComputeWaterVol@sFill
  4044  0020C4  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  4045  0020C6  EC42  F01F         	call	_LCD_WriteString	;wreg free
  4046  0020CA                     
  4047                           ;main.c: 121: sprintf( sEchoMM, "%4.0f", d_EmptySpace_mm);
  4048  0020CA  0ED2               	movlw	low ComputeWaterVol@sEchoMM
  4049  0020CC  0100               	movlb	0	; () banked
  4050  0020CE  6F8A               	movwf	sprintf@sp& (0+255),b
  4051  0020D0  0E00               	movlw	high ComputeWaterVol@sEchoMM
  4052  0020D2  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
  4053  0020D4  0EF1               	movlw	low STR_5
  4054  0020D6  6F8C               	movwf	sprintf@f& (0+255),b
  4055  0020D8  0E7F               	movlw	high STR_5
  4056  0020DA  6F8D               	movwf	(sprintf@f+1)& (0+255),b
  4057  0020DC  C0F0  F08E         	movff	ComputeWaterVol@d_EmptySpace_mm,?_sprintf+4
  4058  0020E0  C0F1  F08F         	movff	ComputeWaterVol@d_EmptySpace_mm+1,?_sprintf+5
  4059  0020E4  C0F2  F090         	movff	ComputeWaterVol@d_EmptySpace_mm+2,?_sprintf+6
  4060  0020E8  C0F3  F091         	movff	ComputeWaterVol@d_EmptySpace_mm+3,?_sprintf+7
  4061  0020EC  EC58  F000         	call	_sprintf	;wreg free
  4062  0020F0                     
  4063                           ;main.c: 122: LCD_GoTo (1,5);
  4064  0020F0  0E05               	movlw	5
  4065  0020F2  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  4066  0020F4  0E01               	movlw	1
  4067  0020F6  EC95  F020         	call	_LCD_GoTo
  4068  0020FA                     
  4069                           ;main.c: 123: LCD_WriteString (sEchoMM);
  4070  0020FA  0ED2               	movlw	low ComputeWaterVol@sEchoMM
  4071  0020FC  6E05               	movwf	LCD_WriteString@iData^0,c
  4072  0020FE  0E00               	movlw	high ComputeWaterVol@sEchoMM
  4073  002100  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  4074  002102  EC42  F01F         	call	_LCD_WriteString	;wreg free
  4075  002106  0012               	return		;funcret
  4076  002108                     __end_of_ComputeWaterVol:
  4077                           	callstack 0
  4078                           
  4079 ;; *************** function _sqrt *****************
  4080 ;; Defined at:
  4081 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcsqrt.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  a               4   34[BANK0 ] void 
  4084 ;; Auto vars:     Size  Location     Type
  4085 ;;  frac            4   59[BANK0 ] unsigned long 
  4086 ;;  root            4   55[BANK0 ] struct .
  4087 ;;  grs             4   49[BANK0 ] unsigned long 
  4088 ;;  tfrac           4   44[BANK0 ] unsigned long 
  4089 ;;  exp             2   53[BANK0 ] int 
  4090 ;;  p               1   48[BANK0 ] unsigned char 
  4091 ;;  i               1   43[BANK0 ] unsigned char 
  4092 ;;  sign            1   42[BANK0 ] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  4   34[BANK0 ] unsigned char 
  4095 ;; Registers used:
  4096 ;;		wreg, status,2, status,0
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4102 ;;      Params:         0       4       0       0       0       0       0       0       0
  4103 ;;      Locals:         0      21       0       0       0       0       0       0       0
  4104 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4105 ;;      Totals:         0      29       0       0       0       0       0       0       0
  4106 ;;Total ram usage:       29 bytes
  4107 ;; Hardware stack levels used: 1
  4108 ;; Hardware stack levels required when called: 3
  4109 ;; This function calls:
  4110 ;;		Nothing
  4111 ;; This function is called by:
  4112 ;;		_ComputeWaterVol
  4113 ;; This function uses a non-reentrant model
  4114 ;;
  4115                           
  4116                           	psect	text19
  4117  002108                     __ptext19:
  4118                           	callstack 0
  4119  002108                     _sqrt:
  4120                           	callstack 26
  4121  002108  0100               	movlb	0	; () banked
  4122  00210A  5185               	movf	(sqrt@a+3)& (0+255),w,b
  4123  00210C  0B80               	andlw	128
  4124  00210E  6F8A               	movwf	sqrt@sign& (0+255),b
  4125  002110  5185               	movf	(sqrt@a+3)& (0+255),w,b
  4126  002112  2585               	addwf	(sqrt@a+3)& (0+255),w,b
  4127  002114  6F90               	movwf	sqrt@p& (0+255),b
  4128  002116                     
  4129                           ; BSR set to: 0
  4130  002116  AF84               	btfss	(sqrt@a+2)& (0+255),7,b
  4131  002118  EF90  F010         	goto	u4831
  4132  00211C  EF92  F010         	goto	u4830
  4133  002120                     u4831:
  4134  002120  EF93  F010         	goto	l4767
  4135  002124                     u4830:
  4136  002124                     
  4137                           ; BSR set to: 0
  4138  002124  8190               	bsf	sqrt@p& (0+255),0,b
  4139  002126                     l4767:
  4140                           
  4141                           ; BSR set to: 0
  4142  002126  C090  F095         	movff	sqrt@p,sqrt@exp
  4143  00212A  6B96               	clrf	(sqrt@exp+1)& (0+255),b
  4144  00212C                     
  4145                           ; BSR set to: 0
  4146  00212C  0EFF               	movlw	255
  4147  00212E  1582               	andwf	sqrt@a& (0+255),w,b
  4148  002130  6F9B               	movwf	sqrt@frac& (0+255),b
  4149  002132  0EFF               	movlw	255
  4150  002134  1583               	andwf	(sqrt@a+1)& (0+255),w,b
  4151  002136  6F9C               	movwf	(sqrt@frac+1)& (0+255),b
  4152  002138  0E7F               	movlw	127
  4153  00213A  1584               	andwf	(sqrt@a+2)& (0+255),w,b
  4154  00213C  6F9D               	movwf	(sqrt@frac+2)& (0+255),b
  4155  00213E  0E00               	movlw	0
  4156  002140  1585               	andwf	(sqrt@a+3)& (0+255),w,b
  4157  002142  6F9E               	movwf	(sqrt@frac+3)& (0+255),b
  4158  002144                     
  4159                           ; BSR set to: 0
  4160  002144  5195               	movf	sqrt@exp& (0+255),w,b
  4161  002146  1196               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4162  002148  B4D8               	btfsc	status,2,c
  4163  00214A  EFA9  F010         	goto	u4841
  4164  00214E  EFAB  F010         	goto	u4840
  4165  002152                     u4841:
  4166  002152  EFB5  F010         	goto	l4777
  4167  002156                     u4840:
  4168  002156                     
  4169                           ; BSR set to: 0
  4170  002156  8F9D               	bsf	(sqrt@frac+2)& (0+255),7,b
  4171  002158                     
  4172                           ; BSR set to: 0
  4173  002158  2995               	incf	sqrt@exp& (0+255),w,b
  4174  00215A  1196               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4175  00215C  A4D8               	btfss	status,2,c
  4176  00215E  EFB3  F010         	goto	u4851
  4177  002162  EFB5  F010         	goto	u4850
  4178  002166                     u4851:
  4179  002166  EFBD  F010         	goto	l4781
  4180  00216A                     u4850:
  4181  00216A                     l4777:
  4182                           
  4183                           ; BSR set to: 0
  4184  00216A  0E00               	movlw	0
  4185  00216C  6F9B               	movwf	sqrt@frac& (0+255),b
  4186  00216E  0E00               	movlw	0
  4187  002170  6F9C               	movwf	(sqrt@frac+1)& (0+255),b
  4188  002172  0E00               	movlw	0
  4189  002174  6F9D               	movwf	(sqrt@frac+2)& (0+255),b
  4190  002176  0E00               	movlw	0
  4191  002178  6F9E               	movwf	(sqrt@frac+3)& (0+255),b
  4192  00217A                     l4781:
  4193                           
  4194                           ; BSR set to: 0
  4195  00217A  5195               	movf	sqrt@exp& (0+255),w,b
  4196  00217C  1196               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4197  00217E  A4D8               	btfss	status,2,c
  4198  002180  EFC4  F010         	goto	u4861
  4199  002184  EFC6  F010         	goto	u4860
  4200  002188                     u4861:
  4201  002188  EFD0  F010         	goto	l4787
  4202  00218C                     u4860:
  4203  00218C                     
  4204                           ; BSR set to: 0
  4205  00218C  0E00               	movlw	0
  4206  00218E  6F82               	movwf	?_sqrt& (0+255),b
  4207  002190  0E00               	movlw	0
  4208  002192  6F83               	movwf	(?_sqrt+1)& (0+255),b
  4209  002194  0E00               	movlw	0
  4210  002196  6F84               	movwf	(?_sqrt+2)& (0+255),b
  4211  002198  0E00               	movlw	0
  4212  00219A  6F85               	movwf	(?_sqrt+3)& (0+255),b
  4213  00219C  EF12  F012         	goto	l1431
  4214  0021A0                     l4787:
  4215                           
  4216                           ; BSR set to: 0
  4217  0021A0  518A               	movf	sqrt@sign& (0+255),w,b
  4218  0021A2  B4D8               	btfsc	status,2,c
  4219  0021A4  EFD6  F010         	goto	u4871
  4220  0021A8  EFD8  F010         	goto	u4870
  4221  0021AC                     u4871:
  4222  0021AC  EFF3  F010         	goto	l4799
  4223  0021B0                     u4870:
  4224  0021B0                     
  4225                           ; BSR set to: 0
  4226  0021B0  0E00               	movlw	0
  4227  0021B2  6F97               	movwf	sqrt@root& (0+255),b
  4228  0021B4  0E00               	movlw	0
  4229  0021B6  6F98               	movwf	(sqrt@root+1)& (0+255),b
  4230  0021B8  0E40               	movlw	64
  4231  0021BA  6F99               	movwf	(sqrt@root+2)& (0+255),b
  4232  0021BC  0E00               	movlw	0
  4233  0021BE  6F9A               	movwf	(sqrt@root+3)& (0+255),b
  4234  0021C0                     
  4235                           ; BSR set to: 0
  4236  0021C0  0E80               	movlw	128
  4237  0021C2  1399               	iorwf	(sqrt@root+2)& (0+255),f,b
  4238  0021C4  0EFF               	movlw	255
  4239  0021C6  139A               	iorwf	(sqrt@root+3)& (0+255),f,b
  4240  0021C8                     
  4241                           ; BSR set to: 0
  4242  0021C8  0E00               	movlw	0
  4243  0021CA  0101               	movlb	1	; () banked
  4244  0021CC  6F89               	movwf	(_errno+1)& (0+255),b
  4245  0021CE  0E21               	movlw	33
  4246  0021D0  6F88               	movwf	_errno& (0+255),b
  4247  0021D2                     l4795:
  4248  0021D2  C097  F082         	movff	sqrt@root,?_sqrt
  4249  0021D6  C098  F083         	movff	sqrt@root+1,?_sqrt+1
  4250  0021DA  C099  F084         	movff	sqrt@root+2,?_sqrt+2
  4251  0021DE  C09A  F085         	movff	sqrt@root+3,?_sqrt+3
  4252  0021E2  EF12  F012         	goto	l1431
  4253  0021E6                     l4799:
  4254                           
  4255                           ; BSR set to: 0
  4256  0021E6  2995               	incf	sqrt@exp& (0+255),w,b
  4257  0021E8  1196               	iorwf	(sqrt@exp+1)& (0+255),w,b
  4258  0021EA  A4D8               	btfss	status,2,c
  4259  0021EC  EFFA  F010         	goto	u4881
  4260  0021F0  EFFC  F010         	goto	u4880
  4261  0021F4                     u4881:
  4262  0021F4  EF06  F011         	goto	l4807
  4263  0021F8                     u4880:
  4264  0021F8                     
  4265                           ; BSR set to: 0
  4266  0021F8  0E00               	movlw	0
  4267  0021FA  6F97               	movwf	sqrt@root& (0+255),b
  4268  0021FC  0E00               	movlw	0
  4269  0021FE  6F98               	movwf	(sqrt@root+1)& (0+255),b
  4270  002200  0E80               	movlw	128
  4271  002202  6F99               	movwf	(sqrt@root+2)& (0+255),b
  4272  002204  0E7F               	movlw	127
  4273  002206  6F9A               	movwf	(sqrt@root+3)& (0+255),b
  4274  002208  EFE9  F010         	goto	l4795
  4275  00220C                     l4807:
  4276                           
  4277                           ; BSR set to: 0
  4278  00220C  0E81               	movlw	129
  4279  00220E  2795               	addwf	sqrt@exp& (0+255),f,b
  4280  002210  0EFF               	movlw	255
  4281  002212  2396               	addwfc	(sqrt@exp+1)& (0+255),f,b
  4282  002214  5195               	movf	sqrt@exp& (0+255),w,b
  4283  002216  0B01               	andlw	1
  4284  002218  6F90               	movwf	sqrt@p& (0+255),b
  4285  00221A  3596               	rlcf	(sqrt@exp+1)& (0+255),w,b
  4286  00221C  3396               	rrcf	(sqrt@exp+1)& (0+255),f,b
  4287  00221E  3395               	rrcf	sqrt@exp& (0+255),f,b
  4288  002220  0E7F               	movlw	127
  4289  002222  2795               	addwf	sqrt@exp& (0+255),f,b
  4290  002224  0E00               	movlw	0
  4291  002226  2396               	addwfc	(sqrt@exp+1)& (0+255),f,b
  4292  002228  90D8               	bcf	status,0,c
  4293  00222A  359B               	rlcf	sqrt@frac& (0+255),w,b
  4294  00222C  6F8C               	movwf	sqrt@tfrac& (0+255),b
  4295  00222E  359C               	rlcf	(sqrt@frac+1)& (0+255),w,b
  4296  002230  6F8D               	movwf	(sqrt@tfrac+1)& (0+255),b
  4297  002232  359D               	rlcf	(sqrt@frac+2)& (0+255),w,b
  4298  002234  6F8E               	movwf	(sqrt@tfrac+2)& (0+255),b
  4299  002236  359E               	rlcf	(sqrt@frac+3)& (0+255),w,b
  4300  002238  6F8F               	movwf	(sqrt@tfrac+3)& (0+255),b
  4301  00223A                     
  4302                           ; BSR set to: 0
  4303  00223A  0E00               	movlw	0
  4304  00223C  6F9B               	movwf	sqrt@frac& (0+255),b
  4305  00223E  0E00               	movlw	0
  4306  002240  6F9C               	movwf	(sqrt@frac+1)& (0+255),b
  4307  002242  0E00               	movlw	0
  4308  002244  6F9D               	movwf	(sqrt@frac+2)& (0+255),b
  4309  002246  0E00               	movlw	0
  4310  002248  6F9E               	movwf	(sqrt@frac+3)& (0+255),b
  4311  00224A                     
  4312                           ; BSR set to: 0
  4313  00224A  0E00               	movlw	0
  4314  00224C  6F91               	movwf	sqrt@grs& (0+255),b
  4315  00224E  0E00               	movlw	0
  4316  002250  6F92               	movwf	(sqrt@grs+1)& (0+255),b
  4317  002252  0E00               	movlw	0
  4318  002254  6F93               	movwf	(sqrt@grs+2)& (0+255),b
  4319  002256  0E01               	movlw	1
  4320  002258  6F94               	movwf	(sqrt@grs+3)& (0+255),b
  4321  00225A                     
  4322                           ; BSR set to: 0
  4323  00225A  5190               	movf	sqrt@p& (0+255),w,b
  4324  00225C  B4D8               	btfsc	status,2,c
  4325  00225E  EF33  F011         	goto	u4891
  4326  002262  EF35  F011         	goto	u4890
  4327  002266                     u4891:
  4328  002266  EF3A  F011         	goto	l4817
  4329  00226A                     u4890:
  4330  00226A                     
  4331                           ; BSR set to: 0
  4332  00226A  90D8               	bcf	status,0,c
  4333  00226C  378C               	rlcf	sqrt@tfrac& (0+255),f,b
  4334  00226E  378D               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  4335  002270  378E               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  4336  002272  378F               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  4337  002274                     l4817:
  4338                           
  4339                           ; BSR set to: 0
  4340  002274  0E00               	movlw	0
  4341  002276  6F8B               	movwf	sqrt@i& (0+255),b
  4342  002278  EF92  F011         	goto	l4831
  4343  00227C                     l4819:
  4344                           
  4345                           ; BSR set to: 0
  4346  00227C  5191               	movf	sqrt@grs& (0+255),w,b
  4347  00227E  139B               	iorwf	sqrt@frac& (0+255),f,b
  4348  002280  5192               	movf	(sqrt@grs+1)& (0+255),w,b
  4349  002282  139C               	iorwf	(sqrt@frac+1)& (0+255),f,b
  4350  002284  5193               	movf	(sqrt@grs+2)& (0+255),w,b
  4351  002286  139D               	iorwf	(sqrt@frac+2)& (0+255),f,b
  4352  002288  5194               	movf	(sqrt@grs+3)& (0+255),w,b
  4353  00228A  139E               	iorwf	(sqrt@frac+3)& (0+255),f,b
  4354  00228C  519B               	movf	sqrt@frac& (0+255),w,b
  4355  00228E  5D8C               	subwf	sqrt@tfrac& (0+255),w,b
  4356  002290  519C               	movf	(sqrt@frac+1)& (0+255),w,b
  4357  002292  598D               	subwfb	(sqrt@tfrac+1)& (0+255),w,b
  4358  002294  519D               	movf	(sqrt@frac+2)& (0+255),w,b
  4359  002296  598E               	subwfb	(sqrt@tfrac+2)& (0+255),w,b
  4360  002298  519E               	movf	(sqrt@frac+3)& (0+255),w,b
  4361  00229A  598F               	subwfb	(sqrt@tfrac+3)& (0+255),w,b
  4362  00229C  A0D8               	btfss	status,0,c
  4363  00229E  EF53  F011         	goto	u4901
  4364  0022A2  EF55  F011         	goto	u4900
  4365  0022A6                     u4901:
  4366  0022A6  EF67  F011         	goto	l4823
  4367  0022AA                     u4900:
  4368  0022AA                     
  4369                           ; BSR set to: 0
  4370  0022AA  519B               	movf	sqrt@frac& (0+255),w,b
  4371  0022AC  5F8C               	subwf	sqrt@tfrac& (0+255),f,b
  4372  0022AE  519C               	movf	(sqrt@frac+1)& (0+255),w,b
  4373  0022B0  5B8D               	subwfb	(sqrt@tfrac+1)& (0+255),f,b
  4374  0022B2  519D               	movf	(sqrt@frac+2)& (0+255),w,b
  4375  0022B4  5B8E               	subwfb	(sqrt@tfrac+2)& (0+255),f,b
  4376  0022B6  519E               	movf	(sqrt@frac+3)& (0+255),w,b
  4377  0022B8  5B8F               	subwfb	(sqrt@tfrac+3)& (0+255),f,b
  4378  0022BA  5191               	movf	sqrt@grs& (0+255),w,b
  4379  0022BC  279B               	addwf	sqrt@frac& (0+255),f,b
  4380  0022BE  5192               	movf	(sqrt@grs+1)& (0+255),w,b
  4381  0022C0  239C               	addwfc	(sqrt@frac+1)& (0+255),f,b
  4382  0022C2  5193               	movf	(sqrt@grs+2)& (0+255),w,b
  4383  0022C4  239D               	addwfc	(sqrt@frac+2)& (0+255),f,b
  4384  0022C6  5194               	movf	(sqrt@grs+3)& (0+255),w,b
  4385  0022C8  239E               	addwfc	(sqrt@frac+3)& (0+255),f,b
  4386  0022CA  EF77  F011         	goto	l4825
  4387  0022CE                     l4823:
  4388                           
  4389                           ; BSR set to: 0
  4390  0022CE  1D91               	comf	sqrt@grs& (0+255),w,b
  4391  0022D0  6F86               	movwf	??_sqrt& (0+255),b
  4392  0022D2  1D92               	comf	(sqrt@grs+1)& (0+255),w,b
  4393  0022D4  6F87               	movwf	(??_sqrt+1)& (0+255),b
  4394  0022D6  1D93               	comf	(sqrt@grs+2)& (0+255),w,b
  4395  0022D8  6F88               	movwf	(??_sqrt+2)& (0+255),b
  4396  0022DA  1D94               	comf	(sqrt@grs+3)& (0+255),w,b
  4397  0022DC  6F89               	movwf	(??_sqrt+3)& (0+255),b
  4398  0022DE  5186               	movf	??_sqrt& (0+255),w,b
  4399  0022E0  179B               	andwf	sqrt@frac& (0+255),f,b
  4400  0022E2  5187               	movf	(??_sqrt+1)& (0+255),w,b
  4401  0022E4  179C               	andwf	(sqrt@frac+1)& (0+255),f,b
  4402  0022E6  5188               	movf	(??_sqrt+2)& (0+255),w,b
  4403  0022E8  179D               	andwf	(sqrt@frac+2)& (0+255),f,b
  4404  0022EA  5189               	movf	(??_sqrt+3)& (0+255),w,b
  4405  0022EC  179E               	andwf	(sqrt@frac+3)& (0+255),f,b
  4406  0022EE                     l4825:
  4407                           
  4408                           ; BSR set to: 0
  4409  0022EE  C091  F086         	movff	sqrt@grs,??_sqrt
  4410  0022F2  C092  F087         	movff	sqrt@grs+1,??_sqrt+1
  4411  0022F6  C093  F088         	movff	sqrt@grs+2,??_sqrt+2
  4412  0022FA  C094  F089         	movff	sqrt@grs+3,??_sqrt+3
  4413  0022FE  90D8               	bcf	status,0,c
  4414  002300  3389               	rrcf	(??_sqrt+3)& (0+255),f,b
  4415  002302  3388               	rrcf	(??_sqrt+2)& (0+255),f,b
  4416  002304  3387               	rrcf	(??_sqrt+1)& (0+255),f,b
  4417  002306  3386               	rrcf	??_sqrt& (0+255),f,b
  4418  002308  C086  F091         	movff	??_sqrt,sqrt@grs
  4419  00230C  C087  F092         	movff	??_sqrt+1,sqrt@grs+1
  4420  002310  C088  F093         	movff	??_sqrt+2,sqrt@grs+2
  4421  002314  C089  F094         	movff	??_sqrt+3,sqrt@grs+3
  4422  002318                     
  4423                           ; BSR set to: 0
  4424  002318  90D8               	bcf	status,0,c
  4425  00231A  378C               	rlcf	sqrt@tfrac& (0+255),f,b
  4426  00231C  378D               	rlcf	(sqrt@tfrac+1)& (0+255),f,b
  4427  00231E  378E               	rlcf	(sqrt@tfrac+2)& (0+255),f,b
  4428  002320  378F               	rlcf	(sqrt@tfrac+3)& (0+255),f,b
  4429  002322                     
  4430                           ; BSR set to: 0
  4431  002322  2B8B               	incf	sqrt@i& (0+255),f,b
  4432  002324                     l4831:
  4433                           
  4434                           ; BSR set to: 0
  4435  002324  0E18               	movlw	24
  4436  002326  658B               	cpfsgt	sqrt@i& (0+255),b
  4437  002328  EF98  F011         	goto	u4911
  4438  00232C  EF9A  F011         	goto	u4910
  4439  002330                     u4911:
  4440  002330  EF3E  F011         	goto	l4819
  4441  002334                     u4910:
  4442  002334                     
  4443                           ; BSR set to: 0
  4444  002334  C09B  F086         	movff	sqrt@frac,??_sqrt
  4445  002338  C09C  F087         	movff	sqrt@frac+1,??_sqrt+1
  4446  00233C  C09D  F088         	movff	sqrt@frac+2,??_sqrt+2
  4447  002340  C09E  F089         	movff	sqrt@frac+3,??_sqrt+3
  4448  002344  90D8               	bcf	status,0,c
  4449  002346  3389               	rrcf	(??_sqrt+3)& (0+255),f,b
  4450  002348  3388               	rrcf	(??_sqrt+2)& (0+255),f,b
  4451  00234A  3387               	rrcf	(??_sqrt+1)& (0+255),f,b
  4452  00234C  3386               	rrcf	??_sqrt& (0+255),f,b
  4453  00234E  C086  F09B         	movff	??_sqrt,sqrt@frac
  4454  002352  C087  F09C         	movff	??_sqrt+1,sqrt@frac+1
  4455  002356  C088  F09D         	movff	??_sqrt+2,sqrt@frac+2
  4456  00235A  C089  F09E         	movff	??_sqrt+3,sqrt@frac+3
  4457  00235E                     
  4458                           ; BSR set to: 0
  4459  00235E  0E01               	movlw	1
  4460  002360  159B               	andwf	sqrt@frac& (0+255),w,b
  4461  002362  6F91               	movwf	sqrt@grs& (0+255),b
  4462  002364  0E00               	movlw	0
  4463  002366  159C               	andwf	(sqrt@frac+1)& (0+255),w,b
  4464  002368  6F92               	movwf	(sqrt@grs+1)& (0+255),b
  4465  00236A  0E00               	movlw	0
  4466  00236C  159D               	andwf	(sqrt@frac+2)& (0+255),w,b
  4467  00236E  6F93               	movwf	(sqrt@grs+2)& (0+255),b
  4468  002370  0E00               	movlw	0
  4469  002372  159E               	andwf	(sqrt@frac+3)& (0+255),w,b
  4470  002374  6F94               	movwf	(sqrt@grs+3)& (0+255),b
  4471  002376                     
  4472                           ; BSR set to: 0
  4473  002376  C09B  F086         	movff	sqrt@frac,??_sqrt
  4474  00237A  C09C  F087         	movff	sqrt@frac+1,??_sqrt+1
  4475  00237E  C09D  F088         	movff	sqrt@frac+2,??_sqrt+2
  4476  002382  C09E  F089         	movff	sqrt@frac+3,??_sqrt+3
  4477  002386  90D8               	bcf	status,0,c
  4478  002388  3389               	rrcf	(??_sqrt+3)& (0+255),f,b
  4479  00238A  3388               	rrcf	(??_sqrt+2)& (0+255),f,b
  4480  00238C  3387               	rrcf	(??_sqrt+1)& (0+255),f,b
  4481  00238E  3386               	rrcf	??_sqrt& (0+255),f,b
  4482  002390  C086  F09B         	movff	??_sqrt,sqrt@frac
  4483  002394  C087  F09C         	movff	??_sqrt+1,sqrt@frac+1
  4484  002398  C088  F09D         	movff	??_sqrt+2,sqrt@frac+2
  4485  00239C  C089  F09E         	movff	??_sqrt+3,sqrt@frac+3
  4486  0023A0  5191               	movf	sqrt@grs& (0+255),w,b
  4487  0023A2  279B               	addwf	sqrt@frac& (0+255),f,b
  4488  0023A4  5192               	movf	(sqrt@grs+1)& (0+255),w,b
  4489  0023A6  239C               	addwfc	(sqrt@frac+1)& (0+255),f,b
  4490  0023A8  5193               	movf	(sqrt@grs+2)& (0+255),w,b
  4491  0023AA  239D               	addwfc	(sqrt@frac+2)& (0+255),f,b
  4492  0023AC  5194               	movf	(sqrt@grs+3)& (0+255),w,b
  4493  0023AE  239E               	addwfc	(sqrt@frac+3)& (0+255),f,b
  4494  0023B0                     
  4495                           ; BSR set to: 0
  4496  0023B0  A19E               	btfss	(sqrt@frac+3)& (0+255),0,b
  4497  0023B2  EFDD  F011         	goto	u4921
  4498  0023B6  EFDF  F011         	goto	u4920
  4499  0023BA                     u4921:
  4500  0023BA  EFF6  F011         	goto	l4843
  4501  0023BE                     u4920:
  4502  0023BE                     
  4503                           ; BSR set to: 0
  4504  0023BE  C09B  F086         	movff	sqrt@frac,??_sqrt
  4505  0023C2  C09C  F087         	movff	sqrt@frac+1,??_sqrt+1
  4506  0023C6  C09D  F088         	movff	sqrt@frac+2,??_sqrt+2
  4507  0023CA  C09E  F089         	movff	sqrt@frac+3,??_sqrt+3
  4508  0023CE  90D8               	bcf	status,0,c
  4509  0023D0  3389               	rrcf	(??_sqrt+3)& (0+255),f,b
  4510  0023D2  3388               	rrcf	(??_sqrt+2)& (0+255),f,b
  4511  0023D4  3387               	rrcf	(??_sqrt+1)& (0+255),f,b
  4512  0023D6  3386               	rrcf	??_sqrt& (0+255),f,b
  4513  0023D8  C086  F09B         	movff	??_sqrt,sqrt@frac
  4514  0023DC  C087  F09C         	movff	??_sqrt+1,sqrt@frac+1
  4515  0023E0  C088  F09D         	movff	??_sqrt+2,sqrt@frac+2
  4516  0023E4  C089  F09E         	movff	??_sqrt+3,sqrt@frac+3
  4517  0023E8  4B95               	infsnz	sqrt@exp& (0+255),f,b
  4518  0023EA  2B96               	incf	(sqrt@exp+1)& (0+255),f,b
  4519  0023EC                     l4843:
  4520                           
  4521                           ; BSR set to: 0
  4522  0023EC  0EFF               	movlw	255
  4523  0023EE  159B               	andwf	sqrt@frac& (0+255),w,b
  4524  0023F0  6F97               	movwf	sqrt@root& (0+255),b
  4525  0023F2  0EFF               	movlw	255
  4526  0023F4  159C               	andwf	(sqrt@frac+1)& (0+255),w,b
  4527  0023F6  6F98               	movwf	(sqrt@root+1)& (0+255),b
  4528  0023F8  0E7F               	movlw	127
  4529  0023FA  159D               	andwf	(sqrt@frac+2)& (0+255),w,b
  4530  0023FC  6F99               	movwf	(sqrt@root+2)& (0+255),b
  4531  0023FE  0E00               	movlw	0
  4532  002400  159E               	andwf	(sqrt@frac+3)& (0+255),w,b
  4533  002402  6F9A               	movwf	(sqrt@root+3)& (0+255),b
  4534  002404                     
  4535                           ; BSR set to: 0
  4536  002404  C095  F090         	movff	sqrt@exp,sqrt@p
  4537  002408                     
  4538                           ; BSR set to: 0
  4539  002408  A190               	btfss	sqrt@p& (0+255),0,b
  4540  00240A  EF09  F012         	goto	u4931
  4541  00240E  EF0B  F012         	goto	u4930
  4542  002412                     u4931:
  4543  002412  EF0C  F012         	goto	l4851
  4544  002416                     u4930:
  4545  002416                     
  4546                           ; BSR set to: 0
  4547  002416  8F99               	bsf	(sqrt@root+2)& (0+255),7,b
  4548  002418                     l4851:
  4549                           
  4550                           ; BSR set to: 0
  4551  002418  90D8               	bcf	status,0,c
  4552  00241A  3190               	rrcf	sqrt@p& (0+255),w,b
  4553  00241C  6F9A               	movwf	(sqrt@root+3)& (0+255),b
  4554  00241E                     
  4555                           ; BSR set to: 0
  4556  00241E  9F9A               	bcf	(sqrt@root+3)& (0+255),7,b
  4557  002420  EFE9  F010         	goto	l4795
  4558  002424                     l1431:
  4559  002424  0012               	return		;funcret
  4560  002426                     __end_of_sqrt:
  4561                           	callstack 0
  4562                           
  4563 ;; *************** function ___fldiv *****************
  4564 ;; Defined at:
  4565 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcdiv.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  b               4    1[COMRAM] unsigned char 
  4568 ;;  a               4    5[COMRAM] unsigned char 
  4569 ;; Auto vars:     Size  Location     Type
  4570 ;;  grs             4   20[COMRAM] unsigned long 
  4571 ;;  rem             4   13[COMRAM] unsigned long 
  4572 ;;  new_exp         2   18[COMRAM] int 
  4573 ;;  aexp            1   25[COMRAM] unsigned char 
  4574 ;;  bexp            1   24[COMRAM] unsigned char 
  4575 ;;  sign            1   17[COMRAM] unsigned char 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  4    1[COMRAM] unsigned char 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4585 ;;      Params:         8       0       0       0       0       0       0       0       0
  4586 ;;      Locals:        13       0       0       0       0       0       0       0       0
  4587 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4588 ;;      Totals:        25       0       0       0       0       0       0       0       0
  4589 ;;Total ram usage:       25 bytes
  4590 ;; Hardware stack levels used: 1
  4591 ;; Hardware stack levels required when called: 3
  4592 ;; This function calls:
  4593 ;;		Nothing
  4594 ;; This function is called by:
  4595 ;;		_ComputeWaterVol
  4596 ;;		_exp
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text20
  4601  001A1E                     __ptext20:
  4602                           	callstack 0
  4603  001A1E                     ___fldiv:
  4604                           	callstack 24
  4605  001A1E  5005               	movf	(___fldiv@b+3)^0,w,c
  4606  001A20  0B80               	andlw	128
  4607  001A22  6E12               	movwf	___fldiv@sign^0,c
  4608  001A24  5005               	movf	(___fldiv@b+3)^0,w,c
  4609  001A26  2405               	addwf	(___fldiv@b+3)^0,w,c
  4610  001A28  6E19               	movwf	___fldiv@bexp^0,c
  4611  001A2A  AE04               	btfss	(___fldiv@b+2)^0,7,c
  4612  001A2C  EF1A  F00D         	goto	u3721
  4613  001A30  EF1C  F00D         	goto	u3720
  4614  001A34                     u3721:
  4615  001A34  EF1D  F00D         	goto	l4069
  4616  001A38                     u3720:
  4617  001A38  8019               	bsf	___fldiv@bexp^0,0,c
  4618  001A3A                     l4069:
  4619  001A3A  5019               	movf	___fldiv@bexp^0,w,c
  4620  001A3C  B4D8               	btfsc	status,2,c
  4621  001A3E  EF23  F00D         	goto	u3731
  4622  001A42  EF25  F00D         	goto	u3730
  4623  001A46                     u3731:
  4624  001A46  EF3A  F00D         	goto	l4079
  4625  001A4A                     u3730:
  4626  001A4A  2819               	incf	___fldiv@bexp^0,w,c
  4627  001A4C  A4D8               	btfss	status,2,c
  4628  001A4E  EF2B  F00D         	goto	u3741
  4629  001A52  EF2D  F00D         	goto	u3740
  4630  001A56                     u3741:
  4631  001A56  EF35  F00D         	goto	l4075
  4632  001A5A                     u3740:
  4633  001A5A  0E00               	movlw	0
  4634  001A5C  6E02               	movwf	___fldiv@b^0,c
  4635  001A5E  0E00               	movlw	0
  4636  001A60  6E03               	movwf	(___fldiv@b+1)^0,c
  4637  001A62  0E00               	movlw	0
  4638  001A64  6E04               	movwf	(___fldiv@b+2)^0,c
  4639  001A66  0E00               	movlw	0
  4640  001A68  6E05               	movwf	(___fldiv@b+3)^0,c
  4641  001A6A                     l4075:
  4642  001A6A  8E04               	bsf	(___fldiv@b+2)^0,7,c
  4643  001A6C  0E00               	movlw	0
  4644  001A6E  6E05               	movwf	(___fldiv@b+3)^0,c
  4645  001A70  EF42  F00D         	goto	l4081
  4646  001A74                     l4079:
  4647  001A74  0E00               	movlw	0
  4648  001A76  6E02               	movwf	___fldiv@b^0,c
  4649  001A78  0E00               	movlw	0
  4650  001A7A  6E03               	movwf	(___fldiv@b+1)^0,c
  4651  001A7C  0E00               	movlw	0
  4652  001A7E  6E04               	movwf	(___fldiv@b+2)^0,c
  4653  001A80  0E00               	movlw	0
  4654  001A82  6E05               	movwf	(___fldiv@b+3)^0,c
  4655  001A84                     l4081:
  4656  001A84  5009               	movf	(___fldiv@a+3)^0,w,c
  4657  001A86  0B80               	andlw	128
  4658  001A88  1A12               	xorwf	___fldiv@sign^0,f,c
  4659  001A8A  5009               	movf	(___fldiv@a+3)^0,w,c
  4660  001A8C  2409               	addwf	(___fldiv@a+3)^0,w,c
  4661  001A8E  6E1A               	movwf	___fldiv@aexp^0,c
  4662  001A90  AE08               	btfss	(___fldiv@a+2)^0,7,c
  4663  001A92  EF4D  F00D         	goto	u3751
  4664  001A96  EF4F  F00D         	goto	u3750
  4665  001A9A                     u3751:
  4666  001A9A  EF50  F00D         	goto	l4089
  4667  001A9E                     u3750:
  4668  001A9E  801A               	bsf	___fldiv@aexp^0,0,c
  4669  001AA0                     l4089:
  4670  001AA0  501A               	movf	___fldiv@aexp^0,w,c
  4671  001AA2  B4D8               	btfsc	status,2,c
  4672  001AA4  EF56  F00D         	goto	u3761
  4673  001AA8  EF58  F00D         	goto	u3760
  4674  001AAC                     u3761:
  4675  001AAC  EF6D  F00D         	goto	l4099
  4676  001AB0                     u3760:
  4677  001AB0  281A               	incf	___fldiv@aexp^0,w,c
  4678  001AB2  A4D8               	btfss	status,2,c
  4679  001AB4  EF5E  F00D         	goto	u3771
  4680  001AB8  EF60  F00D         	goto	u3770
  4681  001ABC                     u3771:
  4682  001ABC  EF68  F00D         	goto	l4095
  4683  001AC0                     u3770:
  4684  001AC0  0E00               	movlw	0
  4685  001AC2  6E06               	movwf	___fldiv@a^0,c
  4686  001AC4  0E00               	movlw	0
  4687  001AC6  6E07               	movwf	(___fldiv@a+1)^0,c
  4688  001AC8  0E00               	movlw	0
  4689  001ACA  6E08               	movwf	(___fldiv@a+2)^0,c
  4690  001ACC  0E00               	movlw	0
  4691  001ACE  6E09               	movwf	(___fldiv@a+3)^0,c
  4692  001AD0                     l4095:
  4693  001AD0  8E08               	bsf	(___fldiv@a+2)^0,7,c
  4694  001AD2  0E00               	movlw	0
  4695  001AD4  6E09               	movwf	(___fldiv@a+3)^0,c
  4696  001AD6  EF75  F00D         	goto	l4101
  4697  001ADA                     l4099:
  4698  001ADA  0E00               	movlw	0
  4699  001ADC  6E06               	movwf	___fldiv@a^0,c
  4700  001ADE  0E00               	movlw	0
  4701  001AE0  6E07               	movwf	(___fldiv@a+1)^0,c
  4702  001AE2  0E00               	movlw	0
  4703  001AE4  6E08               	movwf	(___fldiv@a+2)^0,c
  4704  001AE6  0E00               	movlw	0
  4705  001AE8  6E09               	movwf	(___fldiv@a+3)^0,c
  4706  001AEA                     l4101:
  4707  001AEA  5006               	movf	___fldiv@a^0,w,c
  4708  001AEC  1007               	iorwf	(___fldiv@a+1)^0,w,c
  4709  001AEE  1008               	iorwf	(___fldiv@a+2)^0,w,c
  4710  001AF0  1009               	iorwf	(___fldiv@a+3)^0,w,c
  4711  001AF2  A4D8               	btfss	status,2,c
  4712  001AF4  EF7E  F00D         	goto	u3781
  4713  001AF8  EF80  F00D         	goto	u3780
  4714  001AFC                     u3781:
  4715  001AFC  EF98  F00D         	goto	l4113
  4716  001B00                     u3780:
  4717  001B00  0E00               	movlw	0
  4718  001B02  6E02               	movwf	___fldiv@b^0,c
  4719  001B04  0E00               	movlw	0
  4720  001B06  6E03               	movwf	(___fldiv@b+1)^0,c
  4721  001B08  0E00               	movlw	0
  4722  001B0A  6E04               	movwf	(___fldiv@b+2)^0,c
  4723  001B0C  0E00               	movlw	0
  4724  001B0E  6E05               	movwf	(___fldiv@b+3)^0,c
  4725  001B10  0E80               	movlw	128
  4726  001B12  1204               	iorwf	(___fldiv@b+2)^0,f,c
  4727  001B14  0E7F               	movlw	127
  4728  001B16  1205               	iorwf	(___fldiv@b+3)^0,f,c
  4729  001B18                     l4107:
  4730  001B18  5012               	movf	___fldiv@sign^0,w,c
  4731  001B1A  1205               	iorwf	(___fldiv@b+3)^0,f,c
  4732  001B1C  C002  F002         	movff	___fldiv@b,?___fldiv
  4733  001B20  C003  F003         	movff	___fldiv@b+1,?___fldiv+1
  4734  001B24  C004  F004         	movff	___fldiv@b+2,?___fldiv+2
  4735  001B28  C005  F005         	movff	___fldiv@b+3,?___fldiv+3
  4736  001B2C  EFDB  F00E         	goto	l1370
  4737  001B30                     l4113:
  4738  001B30  5019               	movf	___fldiv@bexp^0,w,c
  4739  001B32  A4D8               	btfss	status,2,c
  4740  001B34  EF9E  F00D         	goto	u3791
  4741  001B38  EFA0  F00D         	goto	u3790
  4742  001B3C                     u3791:
  4743  001B3C  EFAA  F00D         	goto	l4121
  4744  001B40                     u3790:
  4745  001B40  0E00               	movlw	0
  4746  001B42  6E02               	movwf	?___fldiv^0,c
  4747  001B44  0E00               	movlw	0
  4748  001B46  6E03               	movwf	(?___fldiv+1)^0,c
  4749  001B48  0E00               	movlw	0
  4750  001B4A  6E04               	movwf	(?___fldiv+2)^0,c
  4751  001B4C  0E00               	movlw	0
  4752  001B4E  6E05               	movwf	(?___fldiv+3)^0,c
  4753  001B50  EFDB  F00E         	goto	l1370
  4754  001B54                     l4121:
  4755  001B54  501A               	movf	___fldiv@aexp^0,w,c
  4756  001B56  C019  F00A         	movff	___fldiv@bexp,??___fldiv
  4757  001B5A  6A0B               	clrf	(??___fldiv+1)^0,c
  4758  001B5C  5E0A               	subwf	??___fldiv^0,f,c
  4759  001B5E  0E00               	movlw	0
  4760  001B60  5A0B               	subwfb	(??___fldiv+1)^0,f,c
  4761  001B62  0E7F               	movlw	127
  4762  001B64  240A               	addwf	??___fldiv^0,w,c
  4763  001B66  6E13               	movwf	___fldiv@new_exp^0,c
  4764  001B68  0E00               	movlw	0
  4765  001B6A  200B               	addwfc	(??___fldiv+1)^0,w,c
  4766  001B6C  6E14               	movwf	(___fldiv@new_exp+1)^0,c
  4767  001B6E  C002  F00E         	movff	___fldiv@b,___fldiv@rem
  4768  001B72  C003  F00F         	movff	___fldiv@b+1,___fldiv@rem+1
  4769  001B76  C004  F010         	movff	___fldiv@b+2,___fldiv@rem+2
  4770  001B7A  C005  F011         	movff	___fldiv@b+3,___fldiv@rem+3
  4771  001B7E  0E00               	movlw	0
  4772  001B80  6E02               	movwf	___fldiv@b^0,c
  4773  001B82  0E00               	movlw	0
  4774  001B84  6E03               	movwf	(___fldiv@b+1)^0,c
  4775  001B86  0E00               	movlw	0
  4776  001B88  6E04               	movwf	(___fldiv@b+2)^0,c
  4777  001B8A  0E00               	movlw	0
  4778  001B8C  6E05               	movwf	(___fldiv@b+3)^0,c
  4779  001B8E  0E00               	movlw	0
  4780  001B90  6E15               	movwf	___fldiv@grs^0,c
  4781  001B92  0E00               	movlw	0
  4782  001B94  6E16               	movwf	(___fldiv@grs+1)^0,c
  4783  001B96  0E00               	movlw	0
  4784  001B98  6E17               	movwf	(___fldiv@grs+2)^0,c
  4785  001B9A  0E00               	movlw	0
  4786  001B9C  6E18               	movwf	(___fldiv@grs+3)^0,c
  4787  001B9E  0E00               	movlw	0
  4788  001BA0  6E1A               	movwf	___fldiv@aexp^0,c
  4789  001BA2  EF0B  F00E         	goto	l1372
  4790  001BA6                     l4131:
  4791  001BA6  501A               	movf	___fldiv@aexp^0,w,c
  4792  001BA8  B4D8               	btfsc	status,2,c
  4793  001BAA  EFD9  F00D         	goto	u3801
  4794  001BAE  EFDB  F00D         	goto	u3800
  4795  001BB2                     u3801:
  4796  001BB2  EFF2  F00D         	goto	l4139
  4797  001BB6                     u3800:
  4798  001BB6  90D8               	bcf	status,0,c
  4799  001BB8  360E               	rlcf	___fldiv@rem^0,f,c
  4800  001BBA  360F               	rlcf	(___fldiv@rem+1)^0,f,c
  4801  001BBC  3610               	rlcf	(___fldiv@rem+2)^0,f,c
  4802  001BBE  3611               	rlcf	(___fldiv@rem+3)^0,f,c
  4803  001BC0  90D8               	bcf	status,0,c
  4804  001BC2  3602               	rlcf	___fldiv@b^0,f,c
  4805  001BC4  3603               	rlcf	(___fldiv@b+1)^0,f,c
  4806  001BC6  3604               	rlcf	(___fldiv@b+2)^0,f,c
  4807  001BC8  3605               	rlcf	(___fldiv@b+3)^0,f,c
  4808  001BCA  AE18               	btfss	(___fldiv@grs+3)^0,7,c
  4809  001BCC  EFEA  F00D         	goto	u3811
  4810  001BD0  EFEC  F00D         	goto	u3810
  4811  001BD4                     u3811:
  4812  001BD4  EFED  F00D         	goto	l1375
  4813  001BD8                     u3810:
  4814  001BD8  8002               	bsf	___fldiv@b^0,0,c
  4815  001BDA                     l1375:
  4816  001BDA  90D8               	bcf	status,0,c
  4817  001BDC  3615               	rlcf	___fldiv@grs^0,f,c
  4818  001BDE  3616               	rlcf	(___fldiv@grs+1)^0,f,c
  4819  001BE0  3617               	rlcf	(___fldiv@grs+2)^0,f,c
  4820  001BE2  3618               	rlcf	(___fldiv@grs+3)^0,f,c
  4821  001BE4                     l4139:
  4822  001BE4  5006               	movf	___fldiv@a^0,w,c
  4823  001BE6  5C0E               	subwf	___fldiv@rem^0,w,c
  4824  001BE8  5007               	movf	(___fldiv@a+1)^0,w,c
  4825  001BEA  580F               	subwfb	(___fldiv@rem+1)^0,w,c
  4826  001BEC  5008               	movf	(___fldiv@a+2)^0,w,c
  4827  001BEE  5810               	subwfb	(___fldiv@rem+2)^0,w,c
  4828  001BF0  5009               	movf	(___fldiv@a+3)^0,w,c
  4829  001BF2  5811               	subwfb	(___fldiv@rem+3)^0,w,c
  4830  001BF4  A0D8               	btfss	status,0,c
  4831  001BF6  EFFF  F00D         	goto	u3821
  4832  001BFA  EF01  F00E         	goto	u3820
  4833  001BFE                     u3821:
  4834  001BFE  EF0A  F00E         	goto	l4145
  4835  001C02                     u3820:
  4836  001C02  8C18               	bsf	(___fldiv@grs+3)^0,6,c
  4837  001C04  5006               	movf	___fldiv@a^0,w,c
  4838  001C06  5E0E               	subwf	___fldiv@rem^0,f,c
  4839  001C08  5007               	movf	(___fldiv@a+1)^0,w,c
  4840  001C0A  5A0F               	subwfb	(___fldiv@rem+1)^0,f,c
  4841  001C0C  5008               	movf	(___fldiv@a+2)^0,w,c
  4842  001C0E  5A10               	subwfb	(___fldiv@rem+2)^0,f,c
  4843  001C10  5009               	movf	(___fldiv@a+3)^0,w,c
  4844  001C12  5A11               	subwfb	(___fldiv@rem+3)^0,f,c
  4845  001C14                     l4145:
  4846  001C14  2A1A               	incf	___fldiv@aexp^0,f,c
  4847  001C16                     l1372:
  4848  001C16  0E19               	movlw	25
  4849  001C18  641A               	cpfsgt	___fldiv@aexp^0,c
  4850  001C1A  EF11  F00E         	goto	u3831
  4851  001C1E  EF13  F00E         	goto	u3830
  4852  001C22                     u3831:
  4853  001C22  EFD3  F00D         	goto	l4131
  4854  001C26                     u3830:
  4855  001C26  500E               	movf	___fldiv@rem^0,w,c
  4856  001C28  100F               	iorwf	(___fldiv@rem+1)^0,w,c
  4857  001C2A  1010               	iorwf	(___fldiv@rem+2)^0,w,c
  4858  001C2C  1011               	iorwf	(___fldiv@rem+3)^0,w,c
  4859  001C2E  B4D8               	btfsc	status,2,c
  4860  001C30  EF1C  F00E         	goto	u3841
  4861  001C34  EF1E  F00E         	goto	u3840
  4862  001C38                     u3841:
  4863  001C38  EF36  F00E         	goto	l4157
  4864  001C3C                     u3840:
  4865  001C3C  8015               	bsf	___fldiv@grs^0,0,c
  4866  001C3E  EF36  F00E         	goto	l4157
  4867  001C42                     l4151:
  4868  001C42  90D8               	bcf	status,0,c
  4869  001C44  3602               	rlcf	___fldiv@b^0,f,c
  4870  001C46  3603               	rlcf	(___fldiv@b+1)^0,f,c
  4871  001C48  3604               	rlcf	(___fldiv@b+2)^0,f,c
  4872  001C4A  3605               	rlcf	(___fldiv@b+3)^0,f,c
  4873  001C4C  AE18               	btfss	(___fldiv@grs+3)^0,7,c
  4874  001C4E  EF2B  F00E         	goto	u3851
  4875  001C52  EF2D  F00E         	goto	u3850
  4876  001C56                     u3851:
  4877  001C56  EF2E  F00E         	goto	l1381
  4878  001C5A                     u3850:
  4879  001C5A  8002               	bsf	___fldiv@b^0,0,c
  4880  001C5C                     l1381:
  4881  001C5C  90D8               	bcf	status,0,c
  4882  001C5E  3615               	rlcf	___fldiv@grs^0,f,c
  4883  001C60  3616               	rlcf	(___fldiv@grs+1)^0,f,c
  4884  001C62  3617               	rlcf	(___fldiv@grs+2)^0,f,c
  4885  001C64  3618               	rlcf	(___fldiv@grs+3)^0,f,c
  4886  001C66  0613               	decf	___fldiv@new_exp^0,f,c
  4887  001C68  A0D8               	btfss	status,0,c
  4888  001C6A  0614               	decf	(___fldiv@new_exp+1)^0,f,c
  4889  001C6C                     l4157:
  4890  001C6C  AE04               	btfss	(___fldiv@b+2)^0,7,c
  4891  001C6E  EF3B  F00E         	goto	u3861
  4892  001C72  EF3D  F00E         	goto	u3860
  4893  001C76                     u3861:
  4894  001C76  EF21  F00E         	goto	l4151
  4895  001C7A                     u3860:
  4896  001C7A  0E00               	movlw	0
  4897  001C7C  6E1A               	movwf	___fldiv@aexp^0,c
  4898  001C7E  AE18               	btfss	(___fldiv@grs+3)^0,7,c
  4899  001C80  EF44  F00E         	goto	u3871
  4900  001C84  EF46  F00E         	goto	u3870
  4901  001C88                     u3871:
  4902  001C88  EF6A  F00E         	goto	l1383
  4903  001C8C                     u3870:
  4904  001C8C  0EFF               	movlw	255
  4905  001C8E  1415               	andwf	___fldiv@grs^0,w,c
  4906  001C90  6E0A               	movwf	??___fldiv^0,c
  4907  001C92  0EFF               	movlw	255
  4908  001C94  1416               	andwf	(___fldiv@grs+1)^0,w,c
  4909  001C96  6E0B               	movwf	(??___fldiv+1)^0,c
  4910  001C98  0EFF               	movlw	255
  4911  001C9A  1417               	andwf	(___fldiv@grs+2)^0,w,c
  4912  001C9C  6E0C               	movwf	(??___fldiv+2)^0,c
  4913  001C9E  0E7F               	movlw	127
  4914  001CA0  1418               	andwf	(___fldiv@grs+3)^0,w,c
  4915  001CA2  6E0D               	movwf	(??___fldiv+3)^0,c
  4916  001CA4  500A               	movf	??___fldiv^0,w,c
  4917  001CA6  100B               	iorwf	(??___fldiv+1)^0,w,c
  4918  001CA8  100C               	iorwf	(??___fldiv+2)^0,w,c
  4919  001CAA  100D               	iorwf	(??___fldiv+3)^0,w,c
  4920  001CAC  B4D8               	btfsc	status,2,c
  4921  001CAE  EF5B  F00E         	goto	u3881
  4922  001CB2  EF5D  F00E         	goto	u3880
  4923  001CB6                     u3881:
  4924  001CB6  EF61  F00E         	goto	l1384
  4925  001CBA                     u3880:
  4926  001CBA                     l4165:
  4927  001CBA  0E01               	movlw	1
  4928  001CBC  6E1A               	movwf	___fldiv@aexp^0,c
  4929  001CBE  EF6A  F00E         	goto	l1383
  4930  001CC2                     l1384:
  4931  001CC2  A002               	btfss	___fldiv@b^0,0,c
  4932  001CC4  EF66  F00E         	goto	u3891
  4933  001CC8  EF68  F00E         	goto	u3890
  4934  001CCC                     u3891:
  4935  001CCC  EF6A  F00E         	goto	l1383
  4936  001CD0                     u3890:
  4937  001CD0  EF5D  F00E         	goto	l4165
  4938  001CD4                     l1383:
  4939  001CD4  501A               	movf	___fldiv@aexp^0,w,c
  4940  001CD6  B4D8               	btfsc	status,2,c
  4941  001CD8  EF70  F00E         	goto	u3901
  4942  001CDC  EF72  F00E         	goto	u3900
  4943  001CE0                     u3901:
  4944  001CE0  EF96  F00E         	goto	l4177
  4945  001CE4                     u3900:
  4946  001CE4  0E01               	movlw	1
  4947  001CE6  2602               	addwf	___fldiv@b^0,f,c
  4948  001CE8  0E00               	movlw	0
  4949  001CEA  2203               	addwfc	(___fldiv@b+1)^0,f,c
  4950  001CEC  2204               	addwfc	(___fldiv@b+2)^0,f,c
  4951  001CEE  2205               	addwfc	(___fldiv@b+3)^0,f,c
  4952  001CF0  A005               	btfss	(___fldiv@b+3)^0,0,c
  4953  001CF2  EF7D  F00E         	goto	u3911
  4954  001CF6  EF7F  F00E         	goto	u3910
  4955  001CFA                     u3911:
  4956  001CFA  EF96  F00E         	goto	l4177
  4957  001CFE                     u3910:
  4958  001CFE  C002  F00A         	movff	___fldiv@b,??___fldiv
  4959  001D02  C003  F00B         	movff	___fldiv@b+1,??___fldiv+1
  4960  001D06  C004  F00C         	movff	___fldiv@b+2,??___fldiv+2
  4961  001D0A  C005  F00D         	movff	___fldiv@b+3,??___fldiv+3
  4962  001D0E  340D               	rlcf	(??___fldiv+3)^0,w,c
  4963  001D10  320D               	rrcf	(??___fldiv+3)^0,f,c
  4964  001D12  320C               	rrcf	(??___fldiv+2)^0,f,c
  4965  001D14  320B               	rrcf	(??___fldiv+1)^0,f,c
  4966  001D16  320A               	rrcf	??___fldiv^0,f,c
  4967  001D18  C00A  F002         	movff	??___fldiv,___fldiv@b
  4968  001D1C  C00B  F003         	movff	??___fldiv+1,___fldiv@b+1
  4969  001D20  C00C  F004         	movff	??___fldiv+2,___fldiv@b+2
  4970  001D24  C00D  F005         	movff	??___fldiv+3,___fldiv@b+3
  4971  001D28  4A13               	infsnz	___fldiv@new_exp^0,f,c
  4972  001D2A  2A14               	incf	(___fldiv@new_exp+1)^0,f,c
  4973  001D2C                     l4177:
  4974  001D2C  BE14               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4975  001D2E  EFA1  F00E         	goto	u3921
  4976  001D32  5014               	movf	(___fldiv@new_exp+1)^0,w,c
  4977  001D34  E108               	bnz	u3920
  4978  001D36  2813               	incf	___fldiv@new_exp^0,w,c
  4979  001D38  A0D8               	btfss	status,0,c
  4980  001D3A  EFA1  F00E         	goto	u3921
  4981  001D3E  EFA3  F00E         	goto	u3920
  4982  001D42                     u3921:
  4983  001D42  EFAE  F00E         	goto	l4181
  4984  001D46                     u3920:
  4985  001D46  0E00               	movlw	0
  4986  001D48  6E14               	movwf	(___fldiv@new_exp+1)^0,c
  4987  001D4A  6813               	setf	___fldiv@new_exp^0,c
  4988  001D4C  0E00               	movlw	0
  4989  001D4E  6E02               	movwf	___fldiv@b^0,c
  4990  001D50  0E00               	movlw	0
  4991  001D52  6E03               	movwf	(___fldiv@b+1)^0,c
  4992  001D54  0E00               	movlw	0
  4993  001D56  6E04               	movwf	(___fldiv@b+2)^0,c
  4994  001D58  0E00               	movlw	0
  4995  001D5A  6E05               	movwf	(___fldiv@b+3)^0,c
  4996  001D5C                     l4181:
  4997  001D5C  BE14               	btfsc	(___fldiv@new_exp+1)^0,7,c
  4998  001D5E  EFBB  F00E         	goto	u3930
  4999  001D62  5014               	movf	(___fldiv@new_exp+1)^0,w,c
  5000  001D64  E106               	bnz	u3931
  5001  001D66  0413               	decf	___fldiv@new_exp^0,w,c
  5002  001D68  B0D8               	btfsc	status,0,c
  5003  001D6A  EFB9  F00E         	goto	u3931
  5004  001D6E  EFBB  F00E         	goto	u3930
  5005  001D72                     u3931:
  5006  001D72  EFC9  F00E         	goto	l4185
  5007  001D76                     u3930:
  5008  001D76  0E00               	movlw	0
  5009  001D78  6E14               	movwf	(___fldiv@new_exp+1)^0,c
  5010  001D7A  0E00               	movlw	0
  5011  001D7C  6E13               	movwf	___fldiv@new_exp^0,c
  5012  001D7E  0E00               	movlw	0
  5013  001D80  6E02               	movwf	___fldiv@b^0,c
  5014  001D82  0E00               	movlw	0
  5015  001D84  6E03               	movwf	(___fldiv@b+1)^0,c
  5016  001D86  0E00               	movlw	0
  5017  001D88  6E04               	movwf	(___fldiv@b+2)^0,c
  5018  001D8A  0E00               	movlw	0
  5019  001D8C  6E05               	movwf	(___fldiv@b+3)^0,c
  5020  001D8E  0E00               	movlw	0
  5021  001D90  6E12               	movwf	___fldiv@sign^0,c
  5022  001D92                     l4185:
  5023  001D92  C013  F019         	movff	___fldiv@new_exp,___fldiv@bexp
  5024  001D96  A019               	btfss	___fldiv@bexp^0,0,c
  5025  001D98  EFD0  F00E         	goto	u3941
  5026  001D9C  EFD2  F00E         	goto	u3940
  5027  001DA0                     u3941:
  5028  001DA0  EFD5  F00E         	goto	l4191
  5029  001DA4                     u3940:
  5030  001DA4  8E04               	bsf	(___fldiv@b+2)^0,7,c
  5031  001DA6  EFD6  F00E         	goto	l4193
  5032  001DAA                     l4191:
  5033  001DAA  9E04               	bcf	(___fldiv@b+2)^0,7,c
  5034  001DAC                     l4193:
  5035  001DAC  90D8               	bcf	status,0,c
  5036  001DAE  3019               	rrcf	___fldiv@bexp^0,w,c
  5037  001DB0  6E05               	movwf	(___fldiv@b+3)^0,c
  5038  001DB2  EF8C  F00D         	goto	l4107
  5039  001DB6                     l1370:
  5040  001DB6  0012               	return		;funcret
  5041  001DB8                     __end_of___fldiv:
  5042                           	callstack 0
  5043                           
  5044 ;; *************** function _ComputeTOD *****************
  5045 ;; Defined at:
  5046 ;;		line 134 in file "main.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;		None
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;  bIncDays        1   91[COMRAM] unsigned char 
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  1    wreg      void 
  5053 ;; Registers used:
  5054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5060 ;;      Params:         0       0       0       0       0       0       0       0       0
  5061 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5062 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5063 ;;      Totals:         1       2       0       0       0       0       0       0       0
  5064 ;;Total ram usage:        3 bytes
  5065 ;; Hardware stack levels used: 1
  5066 ;; Hardware stack levels required when called: 6
  5067 ;; This function calls:
  5068 ;;		_LCD_GoTo
  5069 ;;		_LCD_WriteString
  5070 ;;		_sprintf
  5071 ;; This function is called by:
  5072 ;;		_main
  5073 ;; This function uses a non-reentrant model
  5074 ;;
  5075                           
  5076                           	psect	text21
  5077  00349A                     __ptext21:
  5078                           	callstack 0
  5079  00349A                     _ComputeTOD:
  5080                           	callstack 24
  5081  00349A                     
  5082                           ;main.c: 136: bool bIncDays = 0;
  5083  00349A  0E00               	movlw	0
  5084  00349C  6E5C               	movwf	ComputeTOD@bIncDays^0,c
  5085  00349E                     
  5086                           ;main.c: 138: if (giTotalSecs++ >= 999) giTotalSecs = 0;
  5087  00349E  0101               	movlb	1	; () banked
  5088  0034A0  518C               	movf	_giTotalSecs& (0+255),w,b
  5089  0034A2  0100               	movlb	0	; () banked
  5090  0034A4  6FB1               	movwf	??_ComputeTOD& (0+255),b
  5091  0034A6  0101               	movlb	1	; () banked
  5092  0034A8  518D               	movf	(_giTotalSecs+1)& (0+255),w,b
  5093  0034AA  0100               	movlb	0	; () banked
  5094  0034AC  6FB2               	movwf	(??_ComputeTOD+1)& (0+255),b
  5095  0034AE  0101               	movlb	1	; () banked
  5096  0034B0  4B8C               	infsnz	_giTotalSecs& (0+255),f,b
  5097  0034B2  2B8D               	incf	(_giTotalSecs+1)& (0+255),f,b
  5098  0034B4  0EE7               	movlw	231
  5099  0034B6  0100               	movlb	0	; () banked
  5100  0034B8  5DB1               	subwf	??_ComputeTOD& (0+255),w,b
  5101  0034BA  0E03               	movlw	3
  5102  0034BC  59B2               	subwfb	(??_ComputeTOD+1)& (0+255),w,b
  5103  0034BE  A0D8               	btfss	status,0,c
  5104  0034C0  EF64  F01A         	goto	u8011
  5105  0034C4  EF66  F01A         	goto	u8010
  5106  0034C8                     u8011:
  5107  0034C8  EF6B  F01A         	goto	l6889
  5108  0034CC                     u8010:
  5109  0034CC                     
  5110                           ; BSR set to: 0
  5111  0034CC  0E00               	movlw	0
  5112  0034CE  0101               	movlb	1	; () banked
  5113  0034D0  6F8D               	movwf	(_giTotalSecs+1)& (0+255),b
  5114  0034D2  0E00               	movlw	0
  5115  0034D4  6F8C               	movwf	_giTotalSecs& (0+255),b
  5116  0034D6                     l6889:
  5117                           
  5118                           ;main.c: 139: if (++giSecs >= 60)
  5119  0034D6  0100               	movlb	0	; () banked
  5120  0034D8  2BFA               	incf	_giSecs& (0+255),f,b
  5121  0034DA  0E3B               	movlw	59
  5122  0034DC  65FA               	cpfsgt	_giSecs& (0+255),b
  5123  0034DE  EF73  F01A         	goto	u8021
  5124  0034E2  EF75  F01A         	goto	u8020
  5125  0034E6                     u8021:
  5126  0034E6  EF8F  F01A         	goto	l6901
  5127  0034EA                     u8020:
  5128  0034EA                     
  5129                           ; BSR set to: 0
  5130                           ;main.c: 140: {;main.c: 141: giSecs = 0;
  5131  0034EA  0E00               	movlw	0
  5132  0034EC  6FFA               	movwf	_giSecs& (0+255),b
  5133  0034EE                     
  5134                           ; BSR set to: 0
  5135                           ;main.c: 142: if (++giMins >= 60)
  5136  0034EE  2BF9               	incf	_giMins& (0+255),f,b
  5137  0034F0  0E3B               	movlw	59
  5138  0034F2  65F9               	cpfsgt	_giMins& (0+255),b
  5139  0034F4  EF7E  F01A         	goto	u8031
  5140  0034F8  EF80  F01A         	goto	u8030
  5141  0034FC                     u8031:
  5142  0034FC  EF8F  F01A         	goto	l6901
  5143  003500                     u8030:
  5144  003500                     
  5145                           ; BSR set to: 0
  5146                           ;main.c: 143: {;main.c: 144: giMins = 0;
  5147  003500  0E00               	movlw	0
  5148  003502  6FF9               	movwf	_giMins& (0+255),b
  5149  003504                     
  5150                           ; BSR set to: 0
  5151                           ;main.c: 145: if (++giHours >= 24){
  5152  003504  2BF8               	incf	_giHours& (0+255),f,b
  5153  003506  0E17               	movlw	23
  5154  003508  65F8               	cpfsgt	_giHours& (0+255),b
  5155  00350A  EF89  F01A         	goto	u8041
  5156  00350E  EF8B  F01A         	goto	u8040
  5157  003512                     u8041:
  5158  003512  EF8F  F01A         	goto	l6901
  5159  003516                     u8040:
  5160  003516                     
  5161                           ; BSR set to: 0
  5162                           ;main.c: 146: giHours = 0;
  5163  003516  0E00               	movlw	0
  5164  003518  6FF8               	movwf	_giHours& (0+255),b
  5165                           
  5166                           ;main.c: 147: bIncDays = 1;
  5167  00351A  0E01               	movlw	1
  5168  00351C  6E5C               	movwf	ComputeTOD@bIncDays^0,c
  5169  00351E                     l6901:
  5170                           
  5171                           ; BSR set to: 0
  5172                           ;main.c: 148: };main.c: 149: };main.c: 150: };main.c: 151: sprintf(gsTotalSecs, "%3i", g
      +                          iTotalSecs);
  5173  00351E  0E70               	movlw	low _gsTotalSecs
  5174  003520  6F8A               	movwf	sprintf@sp& (0+255),b
  5175  003522  0E01               	movlw	high _gsTotalSecs
  5176  003524  6F8B               	movwf	(sprintf@sp+1)& (0+255),b
  5177  003526  0EF7               	movlw	low STR_4
  5178  003528  6F8C               	movwf	sprintf@f& (0+255),b
  5179  00352A  0E7F               	movlw	high STR_4
  5180  00352C  6F8D               	movwf	(sprintf@f+1)& (0+255),b
  5181  00352E  C18C  F08E         	movff	_giTotalSecs,?_sprintf+4
  5182  003532  C18D  F08F         	movff	_giTotalSecs+1,?_sprintf+5
  5183  003536  EC58  F000         	call	_sprintf	;wreg free
  5184  00353A                     
  5185                           ;main.c: 152: LCD_GoTo (1, 12);
  5186  00353A  0E0C               	movlw	12
  5187  00353C  6E09               	movwf	LCD_GoTo@iCharPos^0,c
  5188  00353E  0E01               	movlw	1
  5189  003540  EC95  F020         	call	_LCD_GoTo
  5190  003544                     
  5191                           ;main.c: 153: LCD_WriteString (gsTotalSecs);
  5192  003544  0E70               	movlw	low _gsTotalSecs
  5193  003546  6E05               	movwf	LCD_WriteString@iData^0,c
  5194  003548  0E01               	movlw	high _gsTotalSecs
  5195  00354A  6E06               	movwf	(LCD_WriteString@iData+1)^0,c
  5196  00354C  EC42  F01F         	call	_LCD_WriteString	;wreg free
  5197  003550                     
  5198                           ;main.c: 157: if (bIncDays)
  5199  003550  505C               	movf	ComputeTOD@bIncDays^0,w,c
  5200  003552  B4D8               	btfsc	status,2,c
  5201  003554  EFAE  F01A         	goto	u8051
  5202  003558  EFB0  F01A         	goto	u8050
  5203  00355C                     u8051:
  5204  00355C  EFD0  F01A         	goto	l353
  5205  003560                     u8050:
  5206  003560                     
  5207                           ;main.c: 158: {;main.c: 159: if (++giDay > giMonthEndTbl[giMonth - 1])
  5208  003560  2A5D               	incf	_giDay^0,f,c
  5209  003562  0E3F               	movlw	low (_giMonthEndTbl+65535)
  5210  003564  0100               	movlb	0	; () banked
  5211  003566  25FF               	addwf	_giMonth& (0+255),w,b
  5212  003568  6ED9               	movwf	fsr2l,c
  5213  00356A  6ADA               	clrf	fsr2h,c
  5214  00356C  0E01               	movlw	high (_giMonthEndTbl+65535)
  5215  00356E  22DA               	addwfc	fsr2h,f,c
  5216  003570  505D               	movf	_giDay^0,w,c
  5217  003572  5CDE               	subwf	postinc2,w,c
  5218  003574  B0D8               	btfsc	status,0,c
  5219  003576  EFBF  F01A         	goto	u8061
  5220  00357A  EFC1  F01A         	goto	u8060
  5221  00357E                     u8061:
  5222  00357E  EFD0  F01A         	goto	l353
  5223  003582                     u8060:
  5224  003582                     
  5225                           ; BSR set to: 0
  5226                           ;main.c: 160: {;main.c: 161: giDay = 1;
  5227  003582  0E01               	movlw	1
  5228  003584  6E5D               	movwf	_giDay^0,c
  5229  003586                     
  5230                           ; BSR set to: 0
  5231                           ;main.c: 162: if (++giMonth > 12)
  5232  003586  2BFF               	incf	_giMonth& (0+255),f,b
  5233  003588  0E0C               	movlw	12
  5234  00358A  65FF               	cpfsgt	_giMonth& (0+255),b
  5235  00358C  EFCA  F01A         	goto	u8071
  5236  003590  EFCC  F01A         	goto	u8070
  5237  003594                     u8071:
  5238  003594  EFD0  F01A         	goto	l353
  5239  003598                     u8070:
  5240  003598                     
  5241                           ; BSR set to: 0
  5242                           ;main.c: 163: {;main.c: 164: giMonth = 1;
  5243  003598  0E01               	movlw	1
  5244  00359A  6FFF               	movwf	_giMonth& (0+255),b
  5245  00359C                     
  5246                           ; BSR set to: 0
  5247                           ;main.c: 165: giYear ++;
  5248  00359C  0101               	movlb	1	; () banked
  5249  00359E  2B6F               	incf	_giYear& (0+255),f,b
  5250  0035A0                     l353:
  5251  0035A0  0012               	return		;funcret
  5252  0035A2                     __end_of_ComputeTOD:
  5253                           	callstack 0
  5254                           
  5255 ;; *************** function _sprintf *****************
  5256 ;; Defined at:
  5257 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;  sp              2   42[BANK0 ] PTR unsigned char 
  5260 ;;		 -> gsTotalSecs(4), ComputeWaterVol@sEchoMM(11), ComputeWaterVol@sFill(14), ComputeWaterVol@sGals(15), 
  5261 ;;  f               2   44[BANK0 ] PTR const unsigned char 
  5262 ;;		 -> STR_6(4), STR_5(6), STR_4(4), STR_3(4), 
  5263 ;; Auto vars:     Size  Location     Type
  5264 ;;  fval            4   74[BANK0 ] PTR const unsigned char 
  5265 ;;  val             4   68[BANK0 ] unsigned long 
  5266 ;;  tmpval          4   64[BANK0 ] struct .
  5267 ;;  cp              3    0        PTR const unsigned char 
  5268 ;;  prec            2   78[BANK0 ] int 
  5269 ;;  eexp            2   72[BANK0 ] int 
  5270 ;;  width           2   62[BANK0 ] int 
  5271 ;;  flag            2   60[BANK0 ] unsigned short 
  5272 ;;  ap              2   58[BANK0 ] PTR void [1]
  5273 ;;		 -> ?_sprintf(2), 
  5274 ;;  len             2    0        unsigned int 
  5275 ;;  c               1   80[BANK0 ] unsigned char 
  5276 ;;  d               1    0        unsigned char 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  2   42[BANK0 ] int 
  5279 ;; Registers used:
  5280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5286 ;;      Params:         0       8       0       0       0       0       0       0       0
  5287 ;;      Locals:         0      27       0       0       0       0       0       0       0
  5288 ;;      Temps:          0       4       0       0       0       0       0       0       0
  5289 ;;      Totals:         0      39       0       0       0       0       0       0       0
  5290 ;;Total ram usage:       39 bytes
  5291 ;; Hardware stack levels used: 1
  5292 ;; Hardware stack levels required when called: 5
  5293 ;; This function calls:
  5294 ;;		___awdiv
  5295 ;;		___fladd
  5296 ;;		___fleq
  5297 ;;		___flge
  5298 ;;		___flmul
  5299 ;;		___flneg
  5300 ;;		___flsub
  5301 ;;		___fltol
  5302 ;;		___lldiv
  5303 ;;		___llmod
  5304 ;;		___wmul
  5305 ;;		___xxtofl
  5306 ;;		__div_to_l_
  5307 ;;		__tdiv_to_l_
  5308 ;;		_fround
  5309 ;;		_isdigit
  5310 ;;		_scale
  5311 ;; This function is called by:
  5312 ;;		_ComputeWaterVol
  5313 ;;		_ComputeTOD
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text22
  5318  0000B0                     __ptext22:
  5319                           	callstack 0
  5320  0000B0                     _sprintf:
  5321                           	callstack 24
  5322  0000B0                     
  5323                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          17: int prec;;doprnt.c: 525: unsigned short flag;;doprnt.c: 532: char d;;doprnt.c: 533: 
      +                          double fval;;doprnt.c: 534: int eexp;;doprnt.c: 540: union {;doprnt.c: 541: unsigned lon
      +                          g vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c: 545: unsigned long
      +                           val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;doprnt.c: 550: *ap = 
      +                          __va_start();
  5324  0000B0  0E8E               	movlw	low (?_sprintf+4)
  5325  0000B2  0100               	movlb	0	; () banked
  5326  0000B4  6F9A               	movwf	sprintf@ap& (0+255),b
  5327  0000B6  0E00               	movlw	high (?_sprintf+4)
  5328  0000B8  6F9B               	movwf	(sprintf@ap+1)& (0+255),b
  5329                           
  5330                           ;doprnt.c: 553: while((c = *f++)) {
  5331  0000BA  EF7A  F006         	goto	l6769
  5332  0000BE                     l6481:
  5333                           
  5334                           ; BSR set to: 0
  5335                           ;doprnt.c: 555: if(c != '%')
  5336  0000BE  0E25               	movlw	37
  5337  0000C0  19B0               	xorwf	sprintf@c& (0+255),w,b
  5338  0000C2  B4D8               	btfsc	status,2,c
  5339  0000C4  EF66  F000         	goto	u7451
  5340  0000C8  EF68  F000         	goto	u7450
  5341  0000CC                     u7451:
  5342  0000CC  EF72  F000         	goto	l6487
  5343  0000D0                     u7450:
  5344  0000D0                     
  5345                           ; BSR set to: 0
  5346                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  5347  0000D0  C08A  FFD9         	movff	sprintf@sp,fsr2l
  5348  0000D4  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  5349  0000D8  C0B0  FFDF         	movff	sprintf@c,indf2
  5350  0000DC                     
  5351                           ; BSR set to: 0
  5352  0000DC  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  5353  0000DE  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  5354                           
  5355                           ;doprnt.c: 559: continue;
  5356  0000E0  EF7A  F006         	goto	l6769
  5357  0000E4                     l6487:
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  5361  0000E4  0E00               	movlw	0
  5362  0000E6  6F9F               	movwf	(sprintf@width+1)& (0+255),b
  5363  0000E8  0E00               	movlw	0
  5364  0000EA  6F9E               	movwf	sprintf@width& (0+255),b
  5365                           
  5366                           ;doprnt.c: 565: flag = 0;
  5367  0000EC  0E00               	movlw	0
  5368  0000EE  6F9D               	movwf	(sprintf@flag+1)& (0+255),b
  5369  0000F0  0E00               	movlw	0
  5370  0000F2  6F9C               	movwf	sprintf@flag& (0+255),b
  5371  0000F4                     
  5372                           ; BSR set to: 0
  5373                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  5374  0000F4  C08C  FFF6         	movff	sprintf@f,tblptrl
  5375  0000F8  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  5376  0000FC                     	if	0	;tblptru may be non-zero
  5377  0000FC                     	endif
  5378  0000FC                     	if	0	;tblptru may be non-zero
  5379  0000FC                     	endif
  5380  0000FC  0008               	tblrd		*
  5381  0000FE  50F5               	movf	tablat,w,c
  5382  000100  EC82  F021         	call	_isdigit
  5383  000104  A0D8               	btfss	status,0,c
  5384  000106  EF87  F000         	goto	u7461
  5385  00010A  EF89  F000         	goto	u7460
  5386  00010E                     u7461:
  5387  00010E  EFC2  F000         	goto	l6501
  5388  000112                     u7460:
  5389  000112                     
  5390                           ;doprnt.c: 615: width = 0;
  5391  000112  0E00               	movlw	0
  5392  000114  0100               	movlb	0	; () banked
  5393  000116  6F9F               	movwf	(sprintf@width+1)& (0+255),b
  5394  000118  0E00               	movlw	0
  5395  00011A  6F9E               	movwf	sprintf@width& (0+255),b
  5396  00011C                     l6493:
  5397                           
  5398                           ;doprnt.c: 617: width *= 10;
  5399  00011C  C09E  F002         	movff	sprintf@width,___wmul@multiplier
  5400  000120  C09F  F003         	movff	sprintf@width+1,___wmul@multiplier+1
  5401  000124  0E00               	movlw	0
  5402  000126  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5403  000128  0E0A               	movlw	10
  5404  00012A  6E04               	movwf	___wmul@multiplicand^0,c
  5405  00012C  ECB4  F021         	call	___wmul	;wreg free
  5406  000130  C002  F09E         	movff	?___wmul,sprintf@width
  5407  000134  C003  F09F         	movff	?___wmul+1,sprintf@width+1
  5408  000138                     
  5409                           ;doprnt.c: 618: width += *f++ - '0';
  5410  000138  0ED0               	movlw	208
  5411  00013A  0100               	movlb	0	; () banked
  5412  00013C  6F92               	movwf	??_sprintf& (0+255),b
  5413  00013E  0EFF               	movlw	255
  5414  000140  6F93               	movwf	(??_sprintf+1)& (0+255),b
  5415  000142  C08C  FFF6         	movff	sprintf@f,tblptrl
  5416  000146  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  5417  00014A                     	if	0	;tblptru may be non-zero
  5418  00014A                     	endif
  5419  00014A                     	if	0	;tblptru may be non-zero
  5420  00014A                     	endif
  5421  00014A  0008               	tblrd		*
  5422  00014C  50F5               	movf	tablat,w,c
  5423  00014E  6F94               	movwf	(??_sprintf+2)& (0+255),b
  5424  000150  6B95               	clrf	(??_sprintf+3)& (0+255),b
  5425  000152  5192               	movf	??_sprintf& (0+255),w,b
  5426  000154  2794               	addwf	(??_sprintf+2)& (0+255),f,b
  5427  000156  5193               	movf	(??_sprintf+1)& (0+255),w,b
  5428  000158  2395               	addwfc	(??_sprintf+3)& (0+255),f,b
  5429  00015A  5194               	movf	(??_sprintf+2)& (0+255),w,b
  5430  00015C  279E               	addwf	sprintf@width& (0+255),f,b
  5431  00015E  5195               	movf	(??_sprintf+3)& (0+255),w,b
  5432  000160  239F               	addwfc	(sprintf@width+1)& (0+255),f,b
  5433  000162                     
  5434                           ; BSR set to: 0
  5435  000162  4B8C               	infsnz	sprintf@f& (0+255),f,b
  5436  000164  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
  5437  000166                     
  5438                           ; BSR set to: 0
  5439                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  5440  000166  C08C  FFF6         	movff	sprintf@f,tblptrl
  5441  00016A  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  5442  00016E                     	if	0	;tblptru may be non-zero
  5443  00016E                     	endif
  5444  00016E                     	if	0	;tblptru may be non-zero
  5445  00016E                     	endif
  5446  00016E  0008               	tblrd		*
  5447  000170  50F5               	movf	tablat,w,c
  5448  000172  EC82  F021         	call	_isdigit
  5449  000176  B0D8               	btfsc	status,0,c
  5450  000178  EFC0  F000         	goto	u7471
  5451  00017C  EFC2  F000         	goto	u7470
  5452  000180                     u7471:
  5453  000180  EF8E  F000         	goto	l6493
  5454  000184                     u7470:
  5455  000184                     l6501:
  5456                           
  5457                           ;doprnt.c: 625: };doprnt.c: 628: if(*f == '.') {
  5458  000184  C08C  FFF6         	movff	sprintf@f,tblptrl
  5459  000188  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  5460  00018C                     	if	0	;tblptru may be non-zero
  5461  00018C                     	endif
  5462  00018C                     	if	0	;tblptru may be non-zero
  5463  00018C                     	endif
  5464  00018C  0008               	tblrd		*
  5465  00018E  50F5               	movf	tablat,w,c
  5466  000190  0A2E               	xorlw	46
  5467  000192  A4D8               	btfss	status,2,c
  5468  000194  EFCE  F000         	goto	u7481
  5469  000198  EFD0  F000         	goto	u7480
  5470  00019C                     u7481:
  5471  00019C  EF10  F001         	goto	l6515
  5472  0001A0                     u7480:
  5473  0001A0                     
  5474                           ;doprnt.c: 629: flag |= 0x4000;
  5475  0001A0  0100               	movlb	0	; () banked
  5476  0001A2  8D9D               	bsf	(sprintf@flag+1)& (0+255),6,b
  5477                           
  5478                           ;doprnt.c: 630: f++;
  5479  0001A4  4B8C               	infsnz	sprintf@f& (0+255),f,b
  5480  0001A6  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
  5481  0001A8                     
  5482                           ; BSR set to: 0
  5483                           ;doprnt.c: 644: {;doprnt.c: 645: prec = 0;
  5484  0001A8  0E00               	movlw	0
  5485  0001AA  6FAF               	movwf	(sprintf@prec+1)& (0+255),b
  5486  0001AC  0E00               	movlw	0
  5487  0001AE  6FAE               	movwf	sprintf@prec& (0+255),b
  5488                           
  5489                           ;doprnt.c: 646: while(isdigit((unsigned)*f)) {
  5490  0001B0  EFFF  F000         	goto	l6513
  5491  0001B4                     l6507:
  5492                           
  5493                           ;doprnt.c: 647: prec *= 10;
  5494  0001B4  C0AE  F002         	movff	sprintf@prec,___wmul@multiplier
  5495  0001B8  C0AF  F003         	movff	sprintf@prec+1,___wmul@multiplier+1
  5496  0001BC  0E00               	movlw	0
  5497  0001BE  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5498  0001C0  0E0A               	movlw	10
  5499  0001C2  6E04               	movwf	___wmul@multiplicand^0,c
  5500  0001C4  ECB4  F021         	call	___wmul	;wreg free
  5501  0001C8  C002  F0AE         	movff	?___wmul,sprintf@prec
  5502  0001CC  C003  F0AF         	movff	?___wmul+1,sprintf@prec+1
  5503  0001D0                     
  5504                           ;doprnt.c: 648: prec += *f++ - '0';
  5505  0001D0  0ED0               	movlw	208
  5506  0001D2  0100               	movlb	0	; () banked
  5507  0001D4  6F92               	movwf	??_sprintf& (0+255),b
  5508  0001D6  0EFF               	movlw	255
  5509  0001D8  6F93               	movwf	(??_sprintf+1)& (0+255),b
  5510  0001DA  C08C  FFF6         	movff	sprintf@f,tblptrl
  5511  0001DE  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  5512  0001E2                     	if	0	;tblptru may be non-zero
  5513  0001E2                     	endif
  5514  0001E2                     	if	0	;tblptru may be non-zero
  5515  0001E2                     	endif
  5516  0001E2  0008               	tblrd		*
  5517  0001E4  50F5               	movf	tablat,w,c
  5518  0001E6  6F94               	movwf	(??_sprintf+2)& (0+255),b
  5519  0001E8  6B95               	clrf	(??_sprintf+3)& (0+255),b
  5520  0001EA  5192               	movf	??_sprintf& (0+255),w,b
  5521  0001EC  2794               	addwf	(??_sprintf+2)& (0+255),f,b
  5522  0001EE  5193               	movf	(??_sprintf+1)& (0+255),w,b
  5523  0001F0  2395               	addwfc	(??_sprintf+3)& (0+255),f,b
  5524  0001F2  5194               	movf	(??_sprintf+2)& (0+255),w,b
  5525  0001F4  27AE               	addwf	sprintf@prec& (0+255),f,b
  5526  0001F6  5195               	movf	(??_sprintf+3)& (0+255),w,b
  5527  0001F8  23AF               	addwfc	(sprintf@prec+1)& (0+255),f,b
  5528  0001FA                     
  5529                           ; BSR set to: 0
  5530  0001FA  4B8C               	infsnz	sprintf@f& (0+255),f,b
  5531  0001FC  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
  5532  0001FE                     l6513:
  5533                           
  5534                           ; BSR set to: 0
  5535  0001FE  C08C  FFF6         	movff	sprintf@f,tblptrl
  5536  000202  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  5537  000206                     	if	0	;tblptru may be non-zero
  5538  000206                     	endif
  5539  000206                     	if	0	;tblptru may be non-zero
  5540  000206                     	endif
  5541  000206  0008               	tblrd		*
  5542  000208  50F5               	movf	tablat,w,c
  5543  00020A  EC82  F021         	call	_isdigit
  5544  00020E  B0D8               	btfsc	status,0,c
  5545  000210  EF0C  F001         	goto	u7491
  5546  000214  EF0E  F001         	goto	u7490
  5547  000218                     u7491:
  5548  000218  EFDA  F000         	goto	l6507
  5549  00021C                     u7490:
  5550  00021C  EF1B  F001         	goto	l6523
  5551  000220                     l6515:
  5552                           
  5553                           ;doprnt.c: 652: prec = 0;
  5554  000220  0E00               	movlw	0
  5555  000222  0100               	movlb	0	; () banked
  5556  000224  6FAF               	movwf	(sprintf@prec+1)& (0+255),b
  5557  000226  0E00               	movlw	0
  5558  000228  6FAE               	movwf	sprintf@prec& (0+255),b
  5559  00022A                     
  5560                           ; BSR set to: 0
  5561                           ;doprnt.c: 654: flag |= 0x1000;
  5562  00022A  899D               	bsf	(sprintf@flag+1)& (0+255),4,b
  5563  00022C  EF1B  F001         	goto	l6523
  5564  000230                     l6519:
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;doprnt.c: 689: flag |= 0x400;
  5568  000230  859D               	bsf	(sprintf@flag+1)& (0+255),2,b
  5569                           
  5570                           ;doprnt.c: 690: break;
  5571  000232  EF38  F001         	goto	l6525
  5572  000236                     l6523:
  5573  000236  C08C  FFF6         	movff	sprintf@f,tblptrl
  5574  00023A  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  5575  00023E  0100               	movlb	0	; () banked
  5576  000240  4B8C               	infsnz	sprintf@f& (0+255),f,b
  5577  000242  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
  5578  000244                     	if	0	;tblptru may be non-zero
  5579  000244                     	endif
  5580  000244                     	if	0	;tblptru may be non-zero
  5581  000244                     	endif
  5582  000244  0008               	tblrd		*
  5583  000246  CFF5 F0B0          	movff	tablat,sprintf@c
  5584  00024A  51B0               	movf	sprintf@c& (0+255),w,b
  5585                           
  5586                           ; Switch size 1, requested type "simple"
  5587                           ; Number of cases is 4, Range of values is 0 to 105
  5588                           ; switch strategies available:
  5589                           ; Name         Instructions Cycles
  5590                           ; simple_byte           13     7 (average)
  5591                           ;	Chosen strategy is simple_byte
  5592  00024C  0A00               	xorlw	0	; case 0
  5593  00024E  B4D8               	btfsc	status,2,c
  5594  000250  EF8B  F006         	goto	l6771
  5595  000254  0A64               	xorlw	100	; case 100
  5596  000256  B4D8               	btfsc	status,2,c
  5597  000258  EF38  F001         	goto	l6525
  5598  00025C  0A02               	xorlw	2	; case 102
  5599  00025E  B4D8               	btfsc	status,2,c
  5600  000260  EF18  F001         	goto	l6519
  5601  000264  0A0F               	xorlw	15	; case 105
  5602  000266  B4D8               	btfsc	status,2,c
  5603  000268  EF38  F001         	goto	l6525
  5604  00026C  EF7A  F006         	goto	l6769
  5605  000270                     l6525:
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;doprnt.c: 851: if(flag & (0x700)) {
  5609  000270  0E07               	movlw	7
  5610  000272  159D               	andwf	(sprintf@flag+1)& (0+255),w,b
  5611  000274  B4D8               	btfsc	status,2,c
  5612  000276  EF3F  F001         	goto	u7501
  5613  00027A  EF41  F001         	goto	u7500
  5614  00027E                     u7501:
  5615  00027E  EF10  F005         	goto	l6689
  5616  000282                     u7500:
  5617  000282                     
  5618                           ; BSR set to: 0
  5619                           ;doprnt.c: 853: if(flag & 0x1000)
  5620  000282  A99D               	btfss	(sprintf@flag+1)& (0+255),4,b
  5621  000284  EF46  F001         	goto	u7511
  5622  000288  EF48  F001         	goto	u7510
  5623  00028C                     u7511:
  5624  00028C  EF4C  F001         	goto	l6531
  5625  000290                     u7510:
  5626  000290                     
  5627                           ; BSR set to: 0
  5628                           ;doprnt.c: 855: prec = 6;
  5629  000290  0E00               	movlw	0
  5630  000292  6FAF               	movwf	(sprintf@prec+1)& (0+255),b
  5631  000294  0E06               	movlw	6
  5632  000296  6FAE               	movwf	sprintf@prec& (0+255),b
  5633  000298                     l6531:
  5634                           
  5635                           ; BSR set to: 0
  5636                           ;doprnt.c: 856: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5637  000298  C09A  FFD9         	movff	sprintf@ap,fsr2l
  5638  00029C  C09B  FFDA         	movff	sprintf@ap+1,fsr2h
  5639  0002A0  CFDE F0AA          	movff	postinc2,sprintf@fval
  5640  0002A4  CFDE F0AB          	movff	postinc2,sprintf@fval+1
  5641  0002A8  CFDE F0AC          	movff	postinc2,sprintf@fval+2
  5642  0002AC  CFDE F0AD          	movff	postinc2,sprintf@fval+3
  5643  0002B0                     
  5644                           ; BSR set to: 0
  5645  0002B0  0E04               	movlw	4
  5646  0002B2  279A               	addwf	sprintf@ap& (0+255),f,b
  5647  0002B4  0E00               	movlw	0
  5648  0002B6  239B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  5649  0002B8                     
  5650                           ; BSR set to: 0
  5651                           ;doprnt.c: 857: if(fval < 0.0) {
  5652  0002B8  BFAD               	btfsc	(sprintf@fval+3)& (0+255),7,b
  5653  0002BA  EF63  F001         	goto	u7520
  5654  0002BE  EF61  F001         	goto	u7521
  5655  0002C2                     u7521:
  5656  0002C2  EF78  F001         	goto	l6541
  5657  0002C6                     u7520:
  5658  0002C6                     
  5659                           ; BSR set to: 0
  5660                           ;doprnt.c: 858: fval = -fval;
  5661  0002C6  C0AA  F002         	movff	sprintf@fval,___flneg@f1
  5662  0002CA  C0AB  F003         	movff	sprintf@fval+1,___flneg@f1+1
  5663  0002CE  C0AC  F004         	movff	sprintf@fval+2,___flneg@f1+2
  5664  0002D2  C0AD  F005         	movff	sprintf@fval+3,___flneg@f1+3
  5665  0002D6  EC66  F021         	call	___flneg	;wreg free
  5666  0002DA  C002  F0AA         	movff	?___flneg,sprintf@fval
  5667  0002DE  C003  F0AB         	movff	?___flneg+1,sprintf@fval+1
  5668  0002E2  C004  F0AC         	movff	?___flneg+2,sprintf@fval+2
  5669  0002E6  C005  F0AD         	movff	?___flneg+3,sprintf@fval+3
  5670  0002EA                     
  5671                           ;doprnt.c: 859: flag |= 0x03;
  5672  0002EA  0E03               	movlw	3
  5673  0002EC  0100               	movlb	0	; () banked
  5674  0002EE  139C               	iorwf	sprintf@flag& (0+255),f,b
  5675  0002F0                     l6541:
  5676                           
  5677                           ; BSR set to: 0
  5678                           ;doprnt.c: 860: };doprnt.c: 861: eexp = 0;
  5679  0002F0  0E00               	movlw	0
  5680  0002F2  6FA9               	movwf	(sprintf@eexp+1)& (0+255),b
  5681  0002F4  0E00               	movlw	0
  5682  0002F6  6FA8               	movwf	sprintf@eexp& (0+255),b
  5683  0002F8                     
  5684                           ; BSR set to: 0
  5685                           ;doprnt.c: 862: if( fval!=0) {
  5686  0002F8  C0AA  F033         	movff	sprintf@fval,___fleq@ff1
  5687  0002FC  C0AB  F034         	movff	sprintf@fval+1,___fleq@ff1+1
  5688  000300  C0AC  F035         	movff	sprintf@fval+2,___fleq@ff1+2
  5689  000304  C0AD  F036         	movff	sprintf@fval+3,___fleq@ff1+3
  5690  000308  0E00               	movlw	0
  5691  00030A  6E37               	movwf	___fleq@ff2^0,c
  5692  00030C  0E00               	movlw	0
  5693  00030E  6E38               	movwf	(___fleq@ff2+1)^0,c
  5694  000310  0E00               	movlw	0
  5695  000312  6E39               	movwf	(___fleq@ff2+2)^0,c
  5696  000314  0E00               	movlw	0
  5697  000316  6E3A               	movwf	(___fleq@ff2+3)^0,c
  5698  000318  ECD6  F01D         	call	___fleq	;wreg free
  5699  00031C  B0D8               	btfsc	status,0,c
  5700  00031E  EF93  F001         	goto	u7531
  5701  000322  EF95  F001         	goto	u7530
  5702  000326                     u7531:
  5703  000326  EF28  F002         	goto	l6569
  5704  00032A                     u7530:
  5705  00032A                     
  5706                           ;doprnt.c: 863: (void)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255)
      +                           - 126);
  5707  00032A  0100               	movlb	0	; () banked
  5708  00032C  35AC               	rlcf	(sprintf@fval+2)& (0+255),w,b
  5709  00032E  35AD               	rlcf	(sprintf@fval+3)& (0+255),w,b
  5710  000330  0F82               	addlw	130
  5711  000332  6FA8               	movwf	sprintf@eexp& (0+255),b
  5712  000334  6BA9               	clrf	(sprintf@eexp+1)& (0+255),b
  5713  000336  0EFF               	movlw	255
  5714  000338  23A9               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  5715  00033A                     
  5716                           ; BSR set to: 0
  5717                           ;doprnt.c: 864: eexp--;
  5718  00033A  07A8               	decf	sprintf@eexp& (0+255),f,b
  5719  00033C  A0D8               	btfss	status,0,c
  5720  00033E  07A9               	decf	(sprintf@eexp+1)& (0+255),f,b
  5721  000340                     
  5722                           ; BSR set to: 0
  5723                           ;doprnt.c: 865: eexp *= 3;
  5724  000340  C0A8  F002         	movff	sprintf@eexp,___wmul@multiplier
  5725  000344  C0A9  F003         	movff	sprintf@eexp+1,___wmul@multiplier+1
  5726  000348  0E00               	movlw	0
  5727  00034A  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5728  00034C  0E03               	movlw	3
  5729  00034E  6E04               	movwf	___wmul@multiplicand^0,c
  5730  000350  ECB4  F021         	call	___wmul	;wreg free
  5731  000354  C002  F0A8         	movff	?___wmul,sprintf@eexp
  5732  000358  C003  F0A9         	movff	?___wmul+1,sprintf@eexp+1
  5733  00035C                     
  5734                           ;doprnt.c: 866: eexp /= 10;
  5735  00035C  C0A8  F008         	movff	sprintf@eexp,___awdiv@dividend
  5736  000360  C0A9  F009         	movff	sprintf@eexp+1,___awdiv@dividend+1
  5737  000364  0E00               	movlw	0
  5738  000366  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  5739  000368  0E0A               	movlw	10
  5740  00036A  6E0A               	movwf	___awdiv@divisor^0,c
  5741  00036C  EC1C  F01D         	call	___awdiv	;wreg free
  5742  000370  C008  F0A8         	movff	?___awdiv,sprintf@eexp
  5743  000374  C009  F0A9         	movff	?___awdiv+1,sprintf@eexp+1
  5744  000378                     
  5745                           ;doprnt.c: 867: if(eexp < 0)
  5746  000378  0100               	movlb	0	; () banked
  5747  00037A  BFA9               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  5748  00037C  EFC4  F001         	goto	u7540
  5749  000380  EFC2  F001         	goto	u7541
  5750  000384                     u7541:
  5751  000384  EFC7  F001         	goto	l6557
  5752  000388                     u7540:
  5753  000388                     
  5754                           ; BSR set to: 0
  5755                           ;doprnt.c: 868: eexp--;
  5756  000388  07A8               	decf	sprintf@eexp& (0+255),f,b
  5757  00038A  A0D8               	btfss	status,0,c
  5758  00038C  07A9               	decf	(sprintf@eexp+1)& (0+255),f,b
  5759  00038E                     l6557:
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;doprnt.c: 872: tmpval.integ = scale(-eexp);
  5763  00038E  51A8               	movf	sprintf@eexp& (0+255),w,b
  5764  000390  0800               	sublw	0
  5765  000392  EC09  F00B         	call	_scale
  5766  000396  C053  F0A0         	movff	?_scale,sprintf@tmpval
  5767  00039A  C054  F0A1         	movff	?_scale+1,sprintf@tmpval+1
  5768  00039E  C055  F0A2         	movff	?_scale+2,sprintf@tmpval+2
  5769  0003A2  C056  F0A3         	movff	?_scale+3,sprintf@tmpval+3
  5770  0003A6                     
  5771                           ;doprnt.c: 873: tmpval.integ *= fval;
  5772  0003A6  C0A0  F047         	movff	sprintf@tmpval,___flmul@b
  5773  0003AA  C0A1  F048         	movff	sprintf@tmpval+1,___flmul@b+1
  5774  0003AE  C0A2  F049         	movff	sprintf@tmpval+2,___flmul@b+2
  5775  0003B2  C0A3  F04A         	movff	sprintf@tmpval+3,___flmul@b+3
  5776  0003B6  C0AA  F04B         	movff	sprintf@fval,___flmul@a
  5777  0003BA  C0AB  F04C         	movff	sprintf@fval+1,___flmul@a+1
  5778  0003BE  C0AC  F04D         	movff	sprintf@fval+2,___flmul@a+2
  5779  0003C2  C0AD  F04E         	movff	sprintf@fval+3,___flmul@a+3
  5780  0003C6  ECF3  F008         	call	___flmul	;wreg free
  5781  0003CA  C047  F0A0         	movff	?___flmul,sprintf@tmpval
  5782  0003CE  C048  F0A1         	movff	?___flmul+1,sprintf@tmpval+1
  5783  0003D2  C049  F0A2         	movff	?___flmul+2,sprintf@tmpval+2
  5784  0003D6  C04A  F0A3         	movff	?___flmul+3,sprintf@tmpval+3
  5785  0003DA                     
  5786                           ;doprnt.c: 874: if(tmpval.integ < 1.0)
  5787  0003DA  C0A0  F002         	movff	sprintf@tmpval,___flge@ff1
  5788  0003DE  C0A1  F003         	movff	sprintf@tmpval+1,___flge@ff1+1
  5789  0003E2  C0A2  F004         	movff	sprintf@tmpval+2,___flge@ff1+2
  5790  0003E6  C0A3  F005         	movff	sprintf@tmpval+3,___flge@ff1+3
  5791  0003EA  0E00               	movlw	0
  5792  0003EC  6E06               	movwf	___flge@ff2^0,c
  5793  0003EE  0E00               	movlw	0
  5794  0003F0  6E07               	movwf	(___flge@ff2+1)^0,c
  5795  0003F2  0E80               	movlw	128
  5796  0003F4  6E08               	movwf	(___flge@ff2+2)^0,c
  5797  0003F6  0E3F               	movlw	63
  5798  0003F8  6E09               	movwf	(___flge@ff2+3)^0,c
  5799  0003FA  ECD6  F01B         	call	___flge	;wreg free
  5800  0003FE  B0D8               	btfsc	status,0,c
  5801  000400  EF04  F002         	goto	u7551
  5802  000404  EF06  F002         	goto	u7550
  5803  000408                     u7551:
  5804  000408  EF0C  F002         	goto	l6565
  5805  00040C                     u7550:
  5806  00040C                     
  5807                           ;doprnt.c: 875: eexp--;
  5808  00040C  0100               	movlb	0	; () banked
  5809  00040E  07A8               	decf	sprintf@eexp& (0+255),f,b
  5810  000410  A0D8               	btfss	status,0,c
  5811  000412  07A9               	decf	(sprintf@eexp+1)& (0+255),f,b
  5812  000414  EF28  F002         	goto	l6569
  5813  000418                     l6565:
  5814                           
  5815                           ;doprnt.c: 876: else if(tmpval.integ >= 10.0)
  5816  000418  C0A0  F002         	movff	sprintf@tmpval,___flge@ff1
  5817  00041C  C0A1  F003         	movff	sprintf@tmpval+1,___flge@ff1+1
  5818  000420  C0A2  F004         	movff	sprintf@tmpval+2,___flge@ff1+2
  5819  000424  C0A3  F005         	movff	sprintf@tmpval+3,___flge@ff1+3
  5820  000428  0E00               	movlw	0
  5821  00042A  6E06               	movwf	___flge@ff2^0,c
  5822  00042C  0E00               	movlw	0
  5823  00042E  6E07               	movwf	(___flge@ff2+1)^0,c
  5824  000430  0E20               	movlw	32
  5825  000432  6E08               	movwf	(___flge@ff2+2)^0,c
  5826  000434  0E41               	movlw	65
  5827  000436  6E09               	movwf	(___flge@ff2+3)^0,c
  5828  000438  ECD6  F01B         	call	___flge	;wreg free
  5829  00043C  A0D8               	btfss	status,0,c
  5830  00043E  EF23  F002         	goto	u7561
  5831  000442  EF25  F002         	goto	u7560
  5832  000446                     u7561:
  5833  000446  EF28  F002         	goto	l6569
  5834  00044A                     u7560:
  5835  00044A                     
  5836                           ;doprnt.c: 877: eexp++;
  5837  00044A  0100               	movlb	0	; () banked
  5838  00044C  4BA8               	infsnz	sprintf@eexp& (0+255),f,b
  5839  00044E  2BA9               	incf	(sprintf@eexp+1)& (0+255),f,b
  5840  000450                     l6569:
  5841                           
  5842                           ;doprnt.c: 878: };doprnt.c: 1138: if(prec <= 12)
  5843  000450  0100               	movlb	0	; () banked
  5844  000452  BFAF               	btfsc	(sprintf@prec+1)& (0+255),7,b
  5845  000454  EF37  F002         	goto	u7570
  5846  000458  51AF               	movf	(sprintf@prec+1)& (0+255),w,b
  5847  00045A  E107               	bnz	u7571
  5848  00045C  0E0D               	movlw	13
  5849  00045E  5DAE               	subwf	sprintf@prec& (0+255),w,b
  5850  000460  B0D8               	btfsc	status,0,c
  5851  000462  EF35  F002         	goto	u7571
  5852  000466  EF37  F002         	goto	u7570
  5853  00046A                     u7571:
  5854  00046A  EF54  F002         	goto	l6573
  5855  00046E                     u7570:
  5856  00046E                     
  5857                           ; BSR set to: 0
  5858                           ;doprnt.c: 1139: fval += fround((unsigned int)prec);
  5859  00046E  C0AA  F076         	movff	sprintf@fval,___fladd@b
  5860  000472  C0AB  F077         	movff	sprintf@fval+1,___fladd@b+1
  5861  000476  C0AC  F078         	movff	sprintf@fval+2,___fladd@b+2
  5862  00047A  C0AD  F079         	movff	sprintf@fval+3,___fladd@b+3
  5863  00047E  51AE               	movf	sprintf@prec& (0+255),w,b
  5864  000480  EC89  F013         	call	_fround
  5865  000484  C053  F07A         	movff	?_fround,___fladd@a
  5866  000488  C054  F07B         	movff	?_fround+1,___fladd@a+1
  5867  00048C  C055  F07C         	movff	?_fround+2,___fladd@a+2
  5868  000490  C056  F07D         	movff	?_fround+3,___fladd@a+3
  5869  000494  EC92  F006         	call	___fladd	;wreg free
  5870  000498  C076  F0AA         	movff	?___fladd,sprintf@fval
  5871  00049C  C077  F0AB         	movff	?___fladd+1,sprintf@fval+1
  5872  0004A0  C078  F0AC         	movff	?___fladd+2,sprintf@fval+2
  5873  0004A4  C079  F0AD         	movff	?___fladd+3,sprintf@fval+3
  5874  0004A8                     l6573:
  5875                           
  5876                           ;doprnt.c: 1142: if((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  5877  0004A8  0100               	movlb	0	; () banked
  5878  0004AA  BFA9               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  5879  0004AC  EF63  F002         	goto	u7580
  5880  0004B0  51A9               	movf	(sprintf@eexp+1)& (0+255),w,b
  5881  0004B2  E107               	bnz	u7581
  5882  0004B4  0E0A               	movlw	10
  5883  0004B6  5DA8               	subwf	sprintf@eexp& (0+255),w,b
  5884  0004B8  B0D8               	btfsc	status,0,c
  5885  0004BA  EF61  F002         	goto	u7581
  5886  0004BE  EF63  F002         	goto	u7580
  5887  0004C2                     u7581:
  5888  0004C2  EFA0  F002         	goto	l6581
  5889  0004C6                     u7580:
  5890  0004C6                     
  5891                           ; BSR set to: 0
  5892  0004C6  C0AA  F033         	movff	sprintf@fval,___fleq@ff1
  5893  0004CA  C0AB  F034         	movff	sprintf@fval+1,___fleq@ff1+1
  5894  0004CE  C0AC  F035         	movff	sprintf@fval+2,___fleq@ff1+2
  5895  0004D2  C0AD  F036         	movff	sprintf@fval+3,___fleq@ff1+3
  5896  0004D6  0E00               	movlw	0
  5897  0004D8  6E37               	movwf	___fleq@ff2^0,c
  5898  0004DA  0E00               	movlw	0
  5899  0004DC  6E38               	movwf	(___fleq@ff2+1)^0,c
  5900  0004DE  0E00               	movlw	0
  5901  0004E0  6E39               	movwf	(___fleq@ff2+2)^0,c
  5902  0004E2  0E00               	movlw	0
  5903  0004E4  6E3A               	movwf	(___fleq@ff2+3)^0,c
  5904  0004E6  ECD6  F01D         	call	___fleq	;wreg free
  5905  0004EA  B0D8               	btfsc	status,0,c
  5906  0004EC  EF7A  F002         	goto	u7591
  5907  0004F0  EF7C  F002         	goto	u7590
  5908  0004F4                     u7591:
  5909  0004F4  EFF5  F002         	goto	l6595
  5910  0004F8                     u7590:
  5911  0004F8  C0AA  F01B         	movff	sprintf@fval,___fltol@f1
  5912  0004FC  C0AB  F01C         	movff	sprintf@fval+1,___fltol@f1+1
  5913  000500  C0AC  F01D         	movff	sprintf@fval+2,___fltol@f1+2
  5914  000504  C0AD  F01E         	movff	sprintf@fval+3,___fltol@f1+3
  5915  000508  ECD1  F01A         	call	___fltol	;wreg free
  5916  00050C  501B               	movf	?___fltol^0,w,c
  5917  00050E  101C               	iorwf	(?___fltol+1)^0,w,c
  5918  000510  101D               	iorwf	(?___fltol+2)^0,w,c
  5919  000512  101E               	iorwf	(?___fltol+3)^0,w,c
  5920  000514  A4D8               	btfss	status,2,c
  5921  000516  EF8F  F002         	goto	u7601
  5922  00051A  EF91  F002         	goto	u7600
  5923  00051E                     u7601:
  5924  00051E  EFF5  F002         	goto	l6595
  5925  000522                     u7600:
  5926  000522  0100               	movlb	0	; () banked
  5927  000524  BFA9               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  5928  000526  EF9E  F002         	goto	u7611
  5929  00052A  51A9               	movf	(sprintf@eexp+1)& (0+255),w,b
  5930  00052C  E109               	bnz	u7610
  5931  00052E  0E02               	movlw	2
  5932  000530  5DA8               	subwf	sprintf@eexp& (0+255),w,b
  5933  000532  A0D8               	btfss	status,0,c
  5934  000534  EF9E  F002         	goto	u7611
  5935  000538  EFA0  F002         	goto	u7610
  5936  00053C                     u7611:
  5937  00053C  EFF5  F002         	goto	l6595
  5938  000540                     u7610:
  5939  000540                     l6581:
  5940                           
  5941                           ; BSR set to: 0
  5942                           ;doprnt.c: 1146: if(tmpval.integ < 4.294967296){
  5943  000540  C0A0  F002         	movff	sprintf@tmpval,___flge@ff1
  5944  000544  C0A1  F003         	movff	sprintf@tmpval+1,___flge@ff1+1
  5945  000548  C0A2  F004         	movff	sprintf@tmpval+2,___flge@ff1+2
  5946  00054C  C0A3  F005         	movff	sprintf@tmpval+3,___flge@ff1+3
  5947  000550  0E5F               	movlw	95
  5948  000552  6E06               	movwf	___flge@ff2^0,c
  5949  000554  0E70               	movlw	112
  5950  000556  6E07               	movwf	(___flge@ff2+1)^0,c
  5951  000558  0E89               	movlw	137
  5952  00055A  6E08               	movwf	(___flge@ff2+2)^0,c
  5953  00055C  0E40               	movlw	64
  5954  00055E  6E09               	movwf	(___flge@ff2+3)^0,c
  5955  000560  ECD6  F01B         	call	___flge	;wreg free
  5956  000564  B0D8               	btfsc	status,0,c
  5957  000566  EFB7  F002         	goto	u7621
  5958  00056A  EFB9  F002         	goto	u7620
  5959  00056E                     u7621:
  5960  00056E  EFC0  F002         	goto	l6585
  5961  000572                     u7620:
  5962  000572                     
  5963                           ;doprnt.c: 1147: eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5964  000572  0100               	movlb	0	; () banked
  5965  000574  0EF7               	movlw	247
  5966  000576  27A8               	addwf	sprintf@eexp& (0+255),f,b
  5967  000578  0EFF               	movlw	255
  5968  00057A  23A9               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  5969                           
  5970                           ;doprnt.c: 1148: }else{
  5971  00057C  EFC5  F002         	goto	l6587
  5972  000580                     l6585:
  5973                           
  5974                           ;doprnt.c: 1149: eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5975  000580  0100               	movlb	0	; () banked
  5976  000582  0EF8               	movlw	248
  5977  000584  27A8               	addwf	sprintf@eexp& (0+255),f,b
  5978  000586  0EFF               	movlw	255
  5979  000588  23A9               	addwfc	(sprintf@eexp+1)& (0+255),f,b
  5980  00058A                     l6587:
  5981                           
  5982                           ; BSR set to: 0
  5983                           ;doprnt.c: 1152: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5984  00058A  51A8               	movf	sprintf@eexp& (0+255),w,b
  5985  00058C  EC09  F00B         	call	_scale
  5986  000590  C053  F0A0         	movff	?_scale,sprintf@tmpval
  5987  000594  C054  F0A1         	movff	?_scale+1,sprintf@tmpval+1
  5988  000598  C055  F0A2         	movff	?_scale+2,sprintf@tmpval+2
  5989  00059C  C056  F0A3         	movff	?_scale+3,sprintf@tmpval+3
  5990  0005A0  C0AA  F002         	movff	sprintf@fval,__div_to_l_@f1
  5991  0005A4  C0AB  F003         	movff	sprintf@fval+1,__div_to_l_@f1+1
  5992  0005A8  C0AC  F004         	movff	sprintf@fval+2,__div_to_l_@f1+2
  5993  0005AC  C0AD  F005         	movff	sprintf@fval+3,__div_to_l_@f1+3
  5994  0005B0  C0A0  F006         	movff	sprintf@tmpval,__div_to_l_@f2
  5995  0005B4  C0A1  F007         	movff	sprintf@tmpval+1,__div_to_l_@f2+1
  5996  0005B8  C0A2  F008         	movff	sprintf@tmpval+2,__div_to_l_@f2+2
  5997  0005BC  C0A3  F009         	movff	sprintf@tmpval+3,__div_to_l_@f2+3
  5998  0005C0  EC65  F018         	call	__div_to_l_	;wreg free
  5999  0005C4  C002  F0A4         	movff	?__div_to_l_,sprintf@val
  6000  0005C8  C003  F0A5         	movff	?__div_to_l_+1,sprintf@val+1
  6001  0005CC  C004  F0A6         	movff	?__div_to_l_+2,sprintf@val+2
  6002  0005D0  C005  F0A7         	movff	?__div_to_l_+3,sprintf@val+3
  6003  0005D4                     
  6004                           ;doprnt.c: 1155: fval = 0.0;
  6005  0005D4  0E00               	movlw	0
  6006  0005D6  0100               	movlb	0	; () banked
  6007  0005D8  6FAA               	movwf	sprintf@fval& (0+255),b
  6008  0005DA  0E00               	movlw	0
  6009  0005DC  6FAB               	movwf	(sprintf@fval+1)& (0+255),b
  6010  0005DE  0E00               	movlw	0
  6011  0005E0  6FAC               	movwf	(sprintf@fval+2)& (0+255),b
  6012  0005E2  0E00               	movlw	0
  6013  0005E4  6FAD               	movwf	(sprintf@fval+3)& (0+255),b
  6014                           
  6015                           ;doprnt.c: 1156: } else {
  6016  0005E6  EF31  F003         	goto	l6599
  6017  0005EA                     l6595:
  6018                           
  6019                           ;doprnt.c: 1157: val = (unsigned long)fval;
  6020  0005EA  C0AA  F01B         	movff	sprintf@fval,___fltol@f1
  6021  0005EE  C0AB  F01C         	movff	sprintf@fval+1,___fltol@f1+1
  6022  0005F2  C0AC  F01D         	movff	sprintf@fval+2,___fltol@f1+2
  6023  0005F6  C0AD  F01E         	movff	sprintf@fval+3,___fltol@f1+3
  6024  0005FA  ECD1  F01A         	call	___fltol	;wreg free
  6025  0005FE  C01B  F0A4         	movff	?___fltol,sprintf@val
  6026  000602  C01C  F0A5         	movff	?___fltol+1,sprintf@val+1
  6027  000606  C01D  F0A6         	movff	?___fltol+2,sprintf@val+2
  6028  00060A  C01E  F0A7         	movff	?___fltol+3,sprintf@val+3
  6029                           
  6030                           ;doprnt.c: 1158: fval -= (double)val;
  6031  00060E  C0AA  F082         	movff	sprintf@fval,___flsub@b
  6032  000612  C0AB  F083         	movff	sprintf@fval+1,___flsub@b+1
  6033  000616  C0AC  F084         	movff	sprintf@fval+2,___flsub@b+2
  6034  00061A  C0AD  F085         	movff	sprintf@fval+3,___flsub@b+3
  6035  00061E  C0A4  F025         	movff	sprintf@val,___xxtofl@val
  6036  000622  C0A5  F026         	movff	sprintf@val+1,___xxtofl@val+1
  6037  000626  C0A6  F027         	movff	sprintf@val+2,___xxtofl@val+2
  6038  00062A  C0A7  F028         	movff	sprintf@val+3,___xxtofl@val+3
  6039  00062E  0E00               	movlw	0
  6040  000630  EC0D  F016         	call	___xxtofl
  6041  000634  C025  F086         	movff	?___xxtofl,___flsub@a
  6042  000638  C026  F087         	movff	?___xxtofl+1,___flsub@a+1
  6043  00063C  C027  F088         	movff	?___xxtofl+2,___flsub@a+2
  6044  000640  C028  F089         	movff	?___xxtofl+3,___flsub@a+3
  6045  000644  EC42  F021         	call	___flsub	;wreg free
  6046  000648  C082  F0AA         	movff	?___flsub,sprintf@fval
  6047  00064C  C083  F0AB         	movff	?___flsub+1,sprintf@fval+1
  6048  000650  C084  F0AC         	movff	?___flsub+2,sprintf@fval+2
  6049  000654  C085  F0AD         	movff	?___flsub+3,sprintf@fval+3
  6050  000658                     
  6051                           ;doprnt.c: 1159: eexp = 0;
  6052  000658  0E00               	movlw	0
  6053  00065A  0100               	movlb	0	; () banked
  6054  00065C  6FA9               	movwf	(sprintf@eexp+1)& (0+255),b
  6055  00065E  0E00               	movlw	0
  6056  000660  6FA8               	movwf	sprintf@eexp& (0+255),b
  6057  000662                     l6599:
  6058                           
  6059                           ; BSR set to: 0
  6060                           ;doprnt.c: 1160: };doprnt.c: 1162: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ;
      +                           c++)
  6061  000662  0E01               	movlw	1
  6062  000664  6FB0               	movwf	sprintf@c& (0+255),b
  6063  000666                     l6605:
  6064                           
  6065                           ; BSR set to: 0
  6066                           ;doprnt.c: 1163: if(val < dpowers[c])
  6067  000666  51B0               	movf	sprintf@c& (0+255),w,b
  6068  000668  0D04               	mullw	4
  6069  00066A  0E83               	movlw	low _dpowers
  6070  00066C  24F3               	addwf	243,w,c
  6071  00066E  6EF6               	movwf	tblptrl,c
  6072  000670  0E7F               	movlw	high _dpowers
  6073  000672  20F4               	addwfc	244,w,c
  6074  000674  6EF7               	movwf	tblptrh,c
  6075  000676                     	if	0	;There are less than 3 active tblptr bytes
  6076  000676                     	endif
  6077  000676  0009               	tblrd		*+
  6078  000678  50F5               	movf	tablat,w,c
  6079  00067A  5DA4               	subwf	sprintf@val& (0+255),w,b
  6080  00067C  0009               	tblrd		*+
  6081  00067E  50F5               	movf	tablat,w,c
  6082  000680  59A5               	subwfb	(sprintf@val+1)& (0+255),w,b
  6083  000682  0009               	tblrd		*+
  6084  000684  50F5               	movf	tablat,w,c
  6085  000686  59A6               	subwfb	(sprintf@val+2)& (0+255),w,b
  6086  000688  0009               	tblrd		*+
  6087  00068A  50F5               	movf	tablat,w,c
  6088  00068C  59A7               	subwfb	(sprintf@val+3)& (0+255),w,b
  6089  00068E  B0D8               	btfsc	status,0,c
  6090  000690  EF4C  F003         	goto	u7631
  6091  000694  EF4E  F003         	goto	u7630
  6092  000698                     u7631:
  6093  000698  EF50  F003         	goto	l6609
  6094  00069C                     u7630:
  6095  00069C  EF5A  F003         	goto	l6613
  6096  0006A0                     l6609:
  6097                           
  6098                           ; BSR set to: 0
  6099  0006A0  2BB0               	incf	sprintf@c& (0+255),f,b
  6100  0006A2                     
  6101                           ; BSR set to: 0
  6102  0006A2  0E0A               	movlw	10
  6103  0006A4  19B0               	xorwf	sprintf@c& (0+255),w,b
  6104  0006A6  A4D8               	btfss	status,2,c
  6105  0006A8  EF58  F003         	goto	u7641
  6106  0006AC  EF5A  F003         	goto	u7640
  6107  0006B0                     u7641:
  6108  0006B0  EF33  F003         	goto	l6605
  6109  0006B4                     u7640:
  6110  0006B4                     l6613:
  6111                           
  6112                           ; BSR set to: 0
  6113                           ;doprnt.c: 1168: width -= prec + c + eexp;
  6114  0006B4  51B0               	movf	sprintf@c& (0+255),w,b
  6115  0006B6  25AE               	addwf	sprintf@prec& (0+255),w,b
  6116  0006B8  6F92               	movwf	??_sprintf& (0+255),b
  6117  0006BA  0E00               	movlw	0
  6118  0006BC  21AF               	addwfc	(sprintf@prec+1)& (0+255),w,b
  6119  0006BE  6F93               	movwf	(??_sprintf+1)& (0+255),b
  6120  0006C0  51A8               	movf	sprintf@eexp& (0+255),w,b
  6121  0006C2  2792               	addwf	??_sprintf& (0+255),f,b
  6122  0006C4  51A9               	movf	(sprintf@eexp+1)& (0+255),w,b
  6123  0006C6  2393               	addwfc	(??_sprintf+1)& (0+255),f,b
  6124  0006C8  5192               	movf	??_sprintf& (0+255),w,b
  6125  0006CA  5F9E               	subwf	sprintf@width& (0+255),f,b
  6126  0006CC  5193               	movf	(??_sprintf+1)& (0+255),w,b
  6127  0006CE  5B9F               	subwfb	(sprintf@width+1)& (0+255),f,b
  6128                           
  6129                           ;doprnt.c: 1169: if(;doprnt.c: 1173: prec)
  6130  0006D0  51AE               	movf	sprintf@prec& (0+255),w,b
  6131  0006D2  11AF               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6132  0006D4  B4D8               	btfsc	status,2,c
  6133  0006D6  EF6F  F003         	goto	u7651
  6134  0006DA  EF71  F003         	goto	u7650
  6135  0006DE                     u7651:
  6136  0006DE  EF74  F003         	goto	l6617
  6137  0006E2                     u7650:
  6138  0006E2                     
  6139                           ; BSR set to: 0
  6140                           ;doprnt.c: 1174: width--;
  6141  0006E2  079E               	decf	sprintf@width& (0+255),f,b
  6142  0006E4  A0D8               	btfss	status,0,c
  6143  0006E6  079F               	decf	(sprintf@width+1)& (0+255),f,b
  6144  0006E8                     l6617:
  6145                           
  6146                           ; BSR set to: 0
  6147                           ;doprnt.c: 1175: if(flag & 0x03)
  6148  0006E8  0E03               	movlw	3
  6149  0006EA  159C               	andwf	sprintf@flag& (0+255),w,b
  6150  0006EC  6F92               	movwf	??_sprintf& (0+255),b
  6151  0006EE  0E00               	movlw	0
  6152  0006F0  159D               	andwf	(sprintf@flag+1)& (0+255),w,b
  6153  0006F2  6F93               	movwf	(??_sprintf+1)& (0+255),b
  6154  0006F4  5192               	movf	??_sprintf& (0+255),w,b
  6155  0006F6  1193               	iorwf	(??_sprintf+1)& (0+255),w,b
  6156  0006F8  B4D8               	btfsc	status,2,c
  6157  0006FA  EF81  F003         	goto	u7661
  6158  0006FE  EF83  F003         	goto	u7660
  6159  000702                     u7661:
  6160  000702  EF92  F003         	goto	l6627
  6161  000706                     u7660:
  6162  000706                     l6619:
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;doprnt.c: 1176: width--;
  6166  000706  079E               	decf	sprintf@width& (0+255),f,b
  6167  000708  A0D8               	btfss	status,0,c
  6168  00070A  079F               	decf	(sprintf@width+1)& (0+255),f,b
  6169  00070C  EF92  F003         	goto	l6627
  6170  000710                     l6621:
  6171                           
  6172                           ; BSR set to: 0
  6173                           ;doprnt.c: 1207: ((*sp++ = (' ')));
  6174  000710  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6175  000714  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6176  000718  0E20               	movlw	32
  6177  00071A  6EDF               	movwf	indf2,c
  6178  00071C                     
  6179                           ; BSR set to: 0
  6180  00071C  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6181  00071E  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6182  000720  EF83  F003         	goto	l6619
  6183  000724                     l6627:
  6184                           
  6185                           ; BSR set to: 0
  6186  000724  BF9F               	btfsc	(sprintf@width+1)& (0+255),7,b
  6187  000726  EF9F  F003         	goto	u7670
  6188  00072A  519F               	movf	(sprintf@width+1)& (0+255),w,b
  6189  00072C  E106               	bnz	u7671
  6190  00072E  059E               	decf	sprintf@width& (0+255),w,b
  6191  000730  B0D8               	btfsc	status,0,c
  6192  000732  EF9D  F003         	goto	u7671
  6193  000736  EF9F  F003         	goto	u7670
  6194  00073A                     u7671:
  6195  00073A  EF88  F003         	goto	l6621
  6196  00073E                     u7670:
  6197  00073E                     
  6198                           ; BSR set to: 0
  6199                           ;doprnt.c: 1209: };doprnt.c: 1214: if(flag & 0x03)
  6200  00073E  0E03               	movlw	3
  6201  000740  159C               	andwf	sprintf@flag& (0+255),w,b
  6202  000742  6F92               	movwf	??_sprintf& (0+255),b
  6203  000744  0E00               	movlw	0
  6204  000746  159D               	andwf	(sprintf@flag+1)& (0+255),w,b
  6205  000748  6F93               	movwf	(??_sprintf+1)& (0+255),b
  6206  00074A  5192               	movf	??_sprintf& (0+255),w,b
  6207  00074C  1193               	iorwf	(??_sprintf+1)& (0+255),w,b
  6208  00074E  B4D8               	btfsc	status,2,c
  6209  000750  EFAC  F003         	goto	u7681
  6210  000754  EFAE  F003         	goto	u7680
  6211  000758                     u7681:
  6212  000758  EF02  F004         	goto	l6643
  6213  00075C                     u7680:
  6214  00075C                     
  6215                           ; BSR set to: 0
  6216                           ;doprnt.c: 1216: ((*sp++ = ('-')));
  6217  00075C  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6218  000760  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6219  000764  0E2D               	movlw	45
  6220  000766  6EDF               	movwf	indf2,c
  6221  000768                     l6633:
  6222                           
  6223                           ; BSR set to: 0
  6224  000768  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6225  00076A  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6226  00076C  EF02  F004         	goto	l6643
  6227  000770                     l6635:
  6228                           
  6229                           ; BSR set to: 0
  6230                           ;doprnt.c: 1226: {;doprnt.c: 1227: tmpval.vd = val/dpowers[c];
  6231  000770  C0A4  F002         	movff	sprintf@val,___lldiv@dividend
  6232  000774  C0A5  F003         	movff	sprintf@val+1,___lldiv@dividend+1
  6233  000778  C0A6  F004         	movff	sprintf@val+2,___lldiv@dividend+2
  6234  00077C  C0A7  F005         	movff	sprintf@val+3,___lldiv@dividend+3
  6235  000780  51B0               	movf	sprintf@c& (0+255),w,b
  6236  000782  0D04               	mullw	4
  6237  000784  0E83               	movlw	low _dpowers
  6238  000786  24F3               	addwf	243,w,c
  6239  000788  6EF6               	movwf	tblptrl,c
  6240  00078A  0E7F               	movlw	high _dpowers
  6241  00078C  20F4               	addwfc	244,w,c
  6242  00078E  6EF7               	movwf	tblptrh,c
  6243  000790                     	if	0	;There are less than 3 active tblptr bytes
  6244  000790                     	endif
  6245  000790  0009               	tblrd		*+
  6246  000792  CFF5 F006          	movff	tablat,___lldiv@divisor
  6247  000796  0009               	tblrd		*+
  6248  000798  CFF5 F007          	movff	tablat,___lldiv@divisor+1
  6249  00079C  0009               	tblrd		*+
  6250  00079E  CFF5 F008          	movff	tablat,___lldiv@divisor+2
  6251  0007A2  000A               	tblrd		*-
  6252  0007A4  CFF5 F009          	movff	tablat,___lldiv@divisor+3
  6253  0007A8  EC2B  F01E         	call	___lldiv	;wreg free
  6254  0007AC  C002  F0A0         	movff	?___lldiv,sprintf@tmpval
  6255  0007B0  C003  F0A1         	movff	?___lldiv+1,sprintf@tmpval+1
  6256  0007B4  C004  F0A2         	movff	?___lldiv+2,sprintf@tmpval+2
  6257  0007B8  C005  F0A3         	movff	?___lldiv+3,sprintf@tmpval+3
  6258  0007BC                     
  6259                           ;doprnt.c: 1228: tmpval.vd %= 10;
  6260  0007BC  C0A0  F00F         	movff	sprintf@tmpval,___llmod@dividend
  6261  0007C0  C0A1  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6262  0007C4  C0A2  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6263  0007C8  C0A3  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6264  0007CC  0E0A               	movlw	10
  6265  0007CE  6E13               	movwf	___llmod@divisor^0,c
  6266  0007D0  0E00               	movlw	0
  6267  0007D2  6E14               	movwf	(___llmod@divisor+1)^0,c
  6268  0007D4  0E00               	movlw	0
  6269  0007D6  6E15               	movwf	(___llmod@divisor+2)^0,c
  6270  0007D8  0E00               	movlw	0
  6271  0007DA  6E16               	movwf	(___llmod@divisor+3)^0,c
  6272  0007DC  ECC1  F01E         	call	___llmod	;wreg free
  6273  0007E0  C00F  F0A0         	movff	?___llmod,sprintf@tmpval
  6274  0007E4  C010  F0A1         	movff	?___llmod+1,sprintf@tmpval+1
  6275  0007E8  C011  F0A2         	movff	?___llmod+2,sprintf@tmpval+2
  6276  0007EC  C012  F0A3         	movff	?___llmod+3,sprintf@tmpval+3
  6277  0007F0                     
  6278                           ;doprnt.c: 1229: ((*sp++ = ('0' + tmpval.vd)));
  6279  0007F0  0100               	movlb	0	; () banked
  6280  0007F2  51A0               	movf	sprintf@tmpval& (0+255),w,b
  6281  0007F4  0F30               	addlw	48
  6282  0007F6  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6283  0007FA  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6284  0007FE  6EDF               	movwf	indf2,c
  6285  000800  EFB4  F003         	goto	l6633
  6286  000804                     l6643:
  6287                           
  6288                           ; BSR set to: 0
  6289  000804  07B0               	decf	sprintf@c& (0+255),f,b
  6290  000806  29B0               	incf	sprintf@c& (0+255),w,b
  6291  000808  A4D8               	btfss	status,2,c
  6292  00080A  EF09  F004         	goto	u7691
  6293  00080E  EF0B  F004         	goto	u7690
  6294  000812                     u7691:
  6295  000812  EFB8  F003         	goto	l6635
  6296  000816                     u7690:
  6297  000816  EF18  F004         	goto	l6651
  6298  00081A                     l6645:
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;doprnt.c: 1234: ((*sp++ = ('0')));
  6302  00081A  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6303  00081E  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6304  000822  0E30               	movlw	48
  6305  000824  6EDF               	movwf	indf2,c
  6306  000826                     
  6307                           ; BSR set to: 0
  6308  000826  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6309  000828  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6310  00082A                     
  6311                           ; BSR set to: 0
  6312                           ;doprnt.c: 1235: eexp--;
  6313  00082A  07A8               	decf	sprintf@eexp& (0+255),f,b
  6314  00082C  A0D8               	btfss	status,0,c
  6315  00082E  07A9               	decf	(sprintf@eexp+1)& (0+255),f,b
  6316  000830                     l6651:
  6317                           
  6318                           ; BSR set to: 0
  6319  000830  BFA9               	btfsc	(sprintf@eexp+1)& (0+255),7,b
  6320  000832  EF25  F004         	goto	u7700
  6321  000836  51A9               	movf	(sprintf@eexp+1)& (0+255),w,b
  6322  000838  E106               	bnz	u7701
  6323  00083A  05A8               	decf	sprintf@eexp& (0+255),w,b
  6324  00083C  B0D8               	btfsc	status,0,c
  6325  00083E  EF23  F004         	goto	u7701
  6326  000842  EF25  F004         	goto	u7700
  6327  000846                     u7701:
  6328  000846  EF0D  F004         	goto	l6645
  6329  00084A                     u7700:
  6330  00084A                     
  6331                           ; BSR set to: 0
  6332                           ;doprnt.c: 1236: };doprnt.c: 1237: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2)
      +                          )
  6333  00084A  BFAF               	btfsc	(sprintf@prec+1)& (0+255),7,b
  6334  00084C  EF31  F004         	goto	u7711
  6335  000850  51AF               	movf	(sprintf@prec+1)& (0+255),w,b
  6336  000852  E109               	bnz	u7710
  6337  000854  0E09               	movlw	9
  6338  000856  5DAE               	subwf	sprintf@prec& (0+255),w,b
  6339  000858  A0D8               	btfss	status,0,c
  6340  00085A  EF31  F004         	goto	u7711
  6341  00085E  EF33  F004         	goto	u7710
  6342  000862                     u7711:
  6343  000862  EF37  F004         	goto	l732
  6344  000866                     u7710:
  6345  000866                     
  6346                           ; BSR set to: 0
  6347                           ;doprnt.c: 1238: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6348  000866  0E08               	movlw	8
  6349  000868  6FB0               	movwf	sprintf@c& (0+255),b
  6350  00086A  EF39  F004         	goto	l6657
  6351  00086E                     l732:
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;doprnt.c: 1239: else;doprnt.c: 1240: c = (char)prec;
  6355  00086E  C0AE  F0B0         	movff	sprintf@prec,sprintf@c
  6356  000872                     l6657:
  6357                           
  6358                           ; BSR set to: 0
  6359                           ;doprnt.c: 1241: prec -= (int)c;
  6360  000872  51B0               	movf	sprintf@c& (0+255),w,b
  6361  000874  5FAE               	subwf	sprintf@prec& (0+255),f,b
  6362  000876  0E00               	movlw	0
  6363  000878  5BAF               	subwfb	(sprintf@prec+1)& (0+255),f,b
  6364  00087A                     
  6365                           ; BSR set to: 0
  6366                           ;doprnt.c: 1245: if(c)
  6367  00087A  51B0               	movf	sprintf@c& (0+255),w,b
  6368  00087C  B4D8               	btfsc	status,2,c
  6369  00087E  EF43  F004         	goto	u7721
  6370  000882  EF45  F004         	goto	u7720
  6371  000886                     u7721:
  6372  000886  EF4D  F004         	goto	l6665
  6373  00088A                     u7720:
  6374  00088A                     
  6375                           ; BSR set to: 0
  6376                           ;doprnt.c: 1247: ((*sp++ = ('.')));
  6377  00088A  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6378  00088E  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6379  000892  0E2E               	movlw	46
  6380  000894  6EDF               	movwf	indf2,c
  6381  000896                     
  6382                           ; BSR set to: 0
  6383  000896  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6384  000898  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6385  00089A                     l6665:
  6386                           
  6387                           ; BSR set to: 0
  6388                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  6389  00089A  51B0               	movf	sprintf@c& (0+255),w,b
  6390  00089C  EC09  F00B         	call	_scale
  6391  0008A0  C053  F096         	movff	?_scale,_sprintf$2445
  6392  0008A4  C054  F097         	movff	?_scale+1,_sprintf$2445+1
  6393  0008A8  C055  F098         	movff	?_scale+2,_sprintf$2445+2
  6394  0008AC  C056  F099         	movff	?_scale+3,_sprintf$2445+3
  6395  0008B0                     
  6396                           ;doprnt.c: 1253: val = (unsigned long)(fval * scale((signed char)c));
  6397  0008B0  C0AA  F04B         	movff	sprintf@fval,___flmul@a
  6398  0008B4  C0AB  F04C         	movff	sprintf@fval+1,___flmul@a+1
  6399  0008B8  C0AC  F04D         	movff	sprintf@fval+2,___flmul@a+2
  6400  0008BC  C0AD  F04E         	movff	sprintf@fval+3,___flmul@a+3
  6401  0008C0  C096  F047         	movff	_sprintf$2445,___flmul@b
  6402  0008C4  C097  F048         	movff	_sprintf$2445+1,___flmul@b+1
  6403  0008C8  C098  F049         	movff	_sprintf$2445+2,___flmul@b+2
  6404  0008CC  C099  F04A         	movff	_sprintf$2445+3,___flmul@b+3
  6405  0008D0  ECF3  F008         	call	___flmul	;wreg free
  6406  0008D4  C047  F01B         	movff	?___flmul,___fltol@f1
  6407  0008D8  C048  F01C         	movff	?___flmul+1,___fltol@f1+1
  6408  0008DC  C049  F01D         	movff	?___flmul+2,___fltol@f1+2
  6409  0008E0  C04A  F01E         	movff	?___flmul+3,___fltol@f1+3
  6410  0008E4  ECD1  F01A         	call	___fltol	;wreg free
  6411  0008E8  C01B  F0A4         	movff	?___fltol,sprintf@val
  6412  0008EC  C01C  F0A5         	movff	?___fltol+1,sprintf@val+1
  6413  0008F0  C01D  F0A6         	movff	?___fltol+2,sprintf@val+2
  6414  0008F4  C01E  F0A7         	movff	?___fltol+3,sprintf@val+3
  6415                           
  6416                           ;doprnt.c: 1254: while(c--) {
  6417  0008F8  EFEE  F004         	goto	l6679
  6418  0008FC                     l6669:
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;doprnt.c: 1255: tmpval.vd = val/dpowers[c];
  6422  0008FC  C0A4  F002         	movff	sprintf@val,___lldiv@dividend
  6423  000900  C0A5  F003         	movff	sprintf@val+1,___lldiv@dividend+1
  6424  000904  C0A6  F004         	movff	sprintf@val+2,___lldiv@dividend+2
  6425  000908  C0A7  F005         	movff	sprintf@val+3,___lldiv@dividend+3
  6426  00090C  51B0               	movf	sprintf@c& (0+255),w,b
  6427  00090E  0D04               	mullw	4
  6428  000910  0E83               	movlw	low _dpowers
  6429  000912  24F3               	addwf	243,w,c
  6430  000914  6EF6               	movwf	tblptrl,c
  6431  000916  0E7F               	movlw	high _dpowers
  6432  000918  20F4               	addwfc	244,w,c
  6433  00091A  6EF7               	movwf	tblptrh,c
  6434  00091C                     	if	0	;There are less than 3 active tblptr bytes
  6435  00091C                     	endif
  6436  00091C  0009               	tblrd		*+
  6437  00091E  CFF5 F006          	movff	tablat,___lldiv@divisor
  6438  000922  0009               	tblrd		*+
  6439  000924  CFF5 F007          	movff	tablat,___lldiv@divisor+1
  6440  000928  0009               	tblrd		*+
  6441  00092A  CFF5 F008          	movff	tablat,___lldiv@divisor+2
  6442  00092E  000A               	tblrd		*-
  6443  000930  CFF5 F009          	movff	tablat,___lldiv@divisor+3
  6444  000934  EC2B  F01E         	call	___lldiv	;wreg free
  6445  000938  C002  F0A0         	movff	?___lldiv,sprintf@tmpval
  6446  00093C  C003  F0A1         	movff	?___lldiv+1,sprintf@tmpval+1
  6447  000940  C004  F0A2         	movff	?___lldiv+2,sprintf@tmpval+2
  6448  000944  C005  F0A3         	movff	?___lldiv+3,sprintf@tmpval+3
  6449  000948                     
  6450                           ;doprnt.c: 1256: tmpval.vd %= 10;
  6451  000948  C0A0  F00F         	movff	sprintf@tmpval,___llmod@dividend
  6452  00094C  C0A1  F010         	movff	sprintf@tmpval+1,___llmod@dividend+1
  6453  000950  C0A2  F011         	movff	sprintf@tmpval+2,___llmod@dividend+2
  6454  000954  C0A3  F012         	movff	sprintf@tmpval+3,___llmod@dividend+3
  6455  000958  0E0A               	movlw	10
  6456  00095A  6E13               	movwf	___llmod@divisor^0,c
  6457  00095C  0E00               	movlw	0
  6458  00095E  6E14               	movwf	(___llmod@divisor+1)^0,c
  6459  000960  0E00               	movlw	0
  6460  000962  6E15               	movwf	(___llmod@divisor+2)^0,c
  6461  000964  0E00               	movlw	0
  6462  000966  6E16               	movwf	(___llmod@divisor+3)^0,c
  6463  000968  ECC1  F01E         	call	___llmod	;wreg free
  6464  00096C  C00F  F0A0         	movff	?___llmod,sprintf@tmpval
  6465  000970  C010  F0A1         	movff	?___llmod+1,sprintf@tmpval+1
  6466  000974  C011  F0A2         	movff	?___llmod+2,sprintf@tmpval+2
  6467  000978  C012  F0A3         	movff	?___llmod+3,sprintf@tmpval+3
  6468  00097C                     
  6469                           ;doprnt.c: 1257: ((*sp++ = ('0' + tmpval.vd)));
  6470  00097C  0100               	movlb	0	; () banked
  6471  00097E  51A0               	movf	sprintf@tmpval& (0+255),w,b
  6472  000980  0F30               	addlw	48
  6473  000982  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6474  000986  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6475  00098A  6EDF               	movwf	indf2,c
  6476  00098C                     
  6477                           ; BSR set to: 0
  6478  00098C  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6479  00098E  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6480  000990                     
  6481                           ; BSR set to: 0
  6482                           ;doprnt.c: 1258: val %= dpowers[c];
  6483  000990  C0A4  F00F         	movff	sprintf@val,___llmod@dividend
  6484  000994  C0A5  F010         	movff	sprintf@val+1,___llmod@dividend+1
  6485  000998  C0A6  F011         	movff	sprintf@val+2,___llmod@dividend+2
  6486  00099C  C0A7  F012         	movff	sprintf@val+3,___llmod@dividend+3
  6487  0009A0  51B0               	movf	sprintf@c& (0+255),w,b
  6488  0009A2  0D04               	mullw	4
  6489  0009A4  0E83               	movlw	low _dpowers
  6490  0009A6  24F3               	addwf	243,w,c
  6491  0009A8  6EF6               	movwf	tblptrl,c
  6492  0009AA  0E7F               	movlw	high _dpowers
  6493  0009AC  20F4               	addwfc	244,w,c
  6494  0009AE  6EF7               	movwf	tblptrh,c
  6495  0009B0                     	if	0	;There are less than 3 active tblptr bytes
  6496  0009B0                     	endif
  6497  0009B0  0009               	tblrd		*+
  6498  0009B2  CFF5 F013          	movff	tablat,___llmod@divisor
  6499  0009B6  0009               	tblrd		*+
  6500  0009B8  CFF5 F014          	movff	tablat,___llmod@divisor+1
  6501  0009BC  0009               	tblrd		*+
  6502  0009BE  CFF5 F015          	movff	tablat,___llmod@divisor+2
  6503  0009C2  000A               	tblrd		*-
  6504  0009C4  CFF5 F016          	movff	tablat,___llmod@divisor+3
  6505  0009C8  ECC1  F01E         	call	___llmod	;wreg free
  6506  0009CC  C00F  F0A4         	movff	?___llmod,sprintf@val
  6507  0009D0  C010  F0A5         	movff	?___llmod+1,sprintf@val+1
  6508  0009D4  C011  F0A6         	movff	?___llmod+2,sprintf@val+2
  6509  0009D8  C012  F0A7         	movff	?___llmod+3,sprintf@val+3
  6510  0009DC                     l6679:
  6511  0009DC  0100               	movlb	0	; () banked
  6512  0009DE  07B0               	decf	sprintf@c& (0+255),f,b
  6513  0009E0  29B0               	incf	sprintf@c& (0+255),w,b
  6514  0009E2  A4D8               	btfss	status,2,c
  6515  0009E4  EFF6  F004         	goto	u7731
  6516  0009E8  EFF8  F004         	goto	u7730
  6517  0009EC                     u7731:
  6518  0009EC  EF7E  F004         	goto	l6669
  6519  0009F0                     u7730:
  6520  0009F0  EF05  F005         	goto	l6687
  6521  0009F4                     l6681:
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;doprnt.c: 1262: ((*sp++ = ('0')));
  6525  0009F4  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6526  0009F8  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6527  0009FC  0E30               	movlw	48
  6528  0009FE  6EDF               	movwf	indf2,c
  6529  000A00                     
  6530                           ; BSR set to: 0
  6531  000A00  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6532  000A02  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6533  000A04                     
  6534                           ; BSR set to: 0
  6535                           ;doprnt.c: 1263: prec--;
  6536  000A04  07AE               	decf	sprintf@prec& (0+255),f,b
  6537  000A06  A0D8               	btfss	status,0,c
  6538  000A08  07AF               	decf	(sprintf@prec+1)& (0+255),f,b
  6539  000A0A                     l6687:
  6540                           
  6541                           ; BSR set to: 0
  6542  000A0A  51AE               	movf	sprintf@prec& (0+255),w,b
  6543  000A0C  11AF               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6544  000A0E  A4D8               	btfss	status,2,c
  6545  000A10  EF0C  F005         	goto	u7741
  6546  000A14  EF0E  F005         	goto	u7740
  6547  000A18                     u7741:
  6548  000A18  EFFA  F004         	goto	l6681
  6549  000A1C                     u7740:
  6550  000A1C  EF7A  F006         	goto	l6769
  6551  000A20                     l6689:
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;doprnt.c: 1272: };doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned long)(*(int *)__va_
      +                          arg((*(int **)ap), (int)0));
  6555  000A20  C09A  FFD9         	movff	sprintf@ap,fsr2l
  6556  000A24  C09B  FFDA         	movff	sprintf@ap+1,fsr2h
  6557  000A28  CFDE F0A4          	movff	postinc2,sprintf@val
  6558  000A2C  CFDD F0A5          	movff	postdec2,sprintf@val+1
  6559  000A30  0E00               	movlw	0
  6560  000A32  BFA5               	btfsc	(sprintf@val+1)& (0+255),7,b
  6561  000A34  0EFF               	movlw	-1
  6562  000A36  6FA6               	movwf	(sprintf@val+2)& (0+255),b
  6563  000A38  6FA7               	movwf	(sprintf@val+3)& (0+255),b
  6564  000A3A                     
  6565                           ; BSR set to: 0
  6566  000A3A  0E02               	movlw	2
  6567  000A3C  279A               	addwf	sprintf@ap& (0+255),f,b
  6568  000A3E  0E00               	movlw	0
  6569  000A40  239B               	addwfc	(sprintf@ap+1)& (0+255),f,b
  6570  000A42                     
  6571                           ; BSR set to: 0
  6572                           ;doprnt.c: 1287: if((long)val < 0) {
  6573  000A42  BFA7               	btfsc	(sprintf@val+3)& (0+255),7,b
  6574  000A44  EF28  F005         	goto	u7750
  6575  000A48  EF26  F005         	goto	u7751
  6576  000A4C                     u7751:
  6577  000A4C  EF32  F005         	goto	l6699
  6578  000A50                     u7750:
  6579  000A50                     
  6580                           ; BSR set to: 0
  6581                           ;doprnt.c: 1288: flag |= 0x03;
  6582  000A50  0E03               	movlw	3
  6583  000A52  139C               	iorwf	sprintf@flag& (0+255),f,b
  6584  000A54                     
  6585                           ; BSR set to: 0
  6586                           ;doprnt.c: 1289: val = -val;
  6587  000A54  1FA7               	comf	(sprintf@val+3)& (0+255),f,b
  6588  000A56  1FA6               	comf	(sprintf@val+2)& (0+255),f,b
  6589  000A58  1FA5               	comf	(sprintf@val+1)& (0+255),f,b
  6590  000A5A  6DA4               	negf	sprintf@val& (0+255),b
  6591  000A5C  0E00               	movlw	0
  6592  000A5E  23A5               	addwfc	(sprintf@val+1)& (0+255),f,b
  6593  000A60  23A6               	addwfc	(sprintf@val+2)& (0+255),f,b
  6594  000A62  23A7               	addwfc	(sprintf@val+3)& (0+255),f,b
  6595  000A64                     l6699:
  6596                           
  6597                           ; BSR set to: 0
  6598                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1316: if(prec == 0 && val == 0)
  6599  000A64  51AE               	movf	sprintf@prec& (0+255),w,b
  6600  000A66  11AF               	iorwf	(sprintf@prec+1)& (0+255),w,b
  6601  000A68  A4D8               	btfss	status,2,c
  6602  000A6A  EF39  F005         	goto	u7761
  6603  000A6E  EF3B  F005         	goto	u7760
  6604  000A72                     u7761:
  6605  000A72  EF48  F005         	goto	l6705
  6606  000A76                     u7760:
  6607  000A76                     
  6608                           ; BSR set to: 0
  6609  000A76  51A4               	movf	sprintf@val& (0+255),w,b
  6610  000A78  11A5               	iorwf	(sprintf@val+1)& (0+255),w,b
  6611  000A7A  11A6               	iorwf	(sprintf@val+2)& (0+255),w,b
  6612  000A7C  11A7               	iorwf	(sprintf@val+3)& (0+255),w,b
  6613  000A7E  A4D8               	btfss	status,2,c
  6614  000A80  EF44  F005         	goto	u7771
  6615  000A84  EF46  F005         	goto	u7770
  6616  000A88                     u7771:
  6617  000A88  EF48  F005         	goto	l6705
  6618  000A8C                     u7770:
  6619  000A8C                     
  6620                           ; BSR set to: 0
  6621                           ;doprnt.c: 1317: prec++;
  6622  000A8C  4BAE               	infsnz	sprintf@prec& (0+255),f,b
  6623  000A8E  2BAF               	incf	(sprintf@prec+1)& (0+255),f,b
  6624  000A90                     l6705:
  6625                           
  6626                           ; BSR set to: 0
  6627                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6628  000A90  0E01               	movlw	1
  6629  000A92  6FB0               	movwf	sprintf@c& (0+255),b
  6630  000A94                     l6711:
  6631                           
  6632                           ; BSR set to: 0
  6633                           ;doprnt.c: 1332: if(val < dpowers[c])
  6634  000A94  51B0               	movf	sprintf@c& (0+255),w,b
  6635  000A96  0D04               	mullw	4
  6636  000A98  0E83               	movlw	low _dpowers
  6637  000A9A  24F3               	addwf	243,w,c
  6638  000A9C  6EF6               	movwf	tblptrl,c
  6639  000A9E  0E7F               	movlw	high _dpowers
  6640  000AA0  20F4               	addwfc	244,w,c
  6641  000AA2  6EF7               	movwf	tblptrh,c
  6642  000AA4                     	if	0	;There are less than 3 active tblptr bytes
  6643  000AA4                     	endif
  6644  000AA4  0009               	tblrd		*+
  6645  000AA6  50F5               	movf	tablat,w,c
  6646  000AA8  5DA4               	subwf	sprintf@val& (0+255),w,b
  6647  000AAA  0009               	tblrd		*+
  6648  000AAC  50F5               	movf	tablat,w,c
  6649  000AAE  59A5               	subwfb	(sprintf@val+1)& (0+255),w,b
  6650  000AB0  0009               	tblrd		*+
  6651  000AB2  50F5               	movf	tablat,w,c
  6652  000AB4  59A6               	subwfb	(sprintf@val+2)& (0+255),w,b
  6653  000AB6  0009               	tblrd		*+
  6654  000AB8  50F5               	movf	tablat,w,c
  6655  000ABA  59A7               	subwfb	(sprintf@val+3)& (0+255),w,b
  6656  000ABC  B0D8               	btfsc	status,0,c
  6657  000ABE  EF63  F005         	goto	u7781
  6658  000AC2  EF65  F005         	goto	u7780
  6659  000AC6                     u7781:
  6660  000AC6  EF67  F005         	goto	l6715
  6661  000ACA                     u7780:
  6662  000ACA  EF71  F005         	goto	l6719
  6663  000ACE                     l6715:
  6664                           
  6665                           ; BSR set to: 0
  6666  000ACE  2BB0               	incf	sprintf@c& (0+255),f,b
  6667  000AD0                     
  6668                           ; BSR set to: 0
  6669  000AD0  0E0A               	movlw	10
  6670  000AD2  19B0               	xorwf	sprintf@c& (0+255),w,b
  6671  000AD4  A4D8               	btfss	status,2,c
  6672  000AD6  EF6F  F005         	goto	u7791
  6673  000ADA  EF71  F005         	goto	u7790
  6674  000ADE                     u7791:
  6675  000ADE  EF4A  F005         	goto	l6711
  6676  000AE2                     u7790:
  6677  000AE2                     l6719:
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;doprnt.c: 1365: if(c < prec)
  6681  000AE2  51B0               	movf	sprintf@c& (0+255),w,b
  6682  000AE4  6F92               	movwf	??_sprintf& (0+255),b
  6683  000AE6  6B93               	clrf	(??_sprintf+1)& (0+255),b
  6684  000AE8  51AE               	movf	sprintf@prec& (0+255),w,b
  6685  000AEA  5D92               	subwf	??_sprintf& (0+255),w,b
  6686  000AEC  5193               	movf	(??_sprintf+1)& (0+255),w,b
  6687  000AEE  0A80               	xorlw	128
  6688  000AF0  6F94               	movwf	(??_sprintf+2)& (0+255),b
  6689  000AF2  51AF               	movf	(sprintf@prec+1)& (0+255),w,b
  6690  000AF4  0A80               	xorlw	128
  6691  000AF6  5994               	subwfb	(??_sprintf+2)& (0+255),w,b
  6692  000AF8  B0D8               	btfsc	status,0,c
  6693  000AFA  EF81  F005         	goto	u7801
  6694  000AFE  EF83  F005         	goto	u7800
  6695  000B02                     u7801:
  6696  000B02  EF87  F005         	goto	l6723
  6697  000B06                     u7800:
  6698  000B06                     
  6699                           ; BSR set to: 0
  6700                           ;doprnt.c: 1366: c = (char)prec;
  6701  000B06  C0AE  F0B0         	movff	sprintf@prec,sprintf@c
  6702  000B0A  EF9C  F005         	goto	l6727
  6703  000B0E                     l6723:
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;doprnt.c: 1367: else if(prec < c)
  6707  000B0E  51B0               	movf	sprintf@c& (0+255),w,b
  6708  000B10  6F92               	movwf	??_sprintf& (0+255),b
  6709  000B12  6B93               	clrf	(??_sprintf+1)& (0+255),b
  6710  000B14  5192               	movf	??_sprintf& (0+255),w,b
  6711  000B16  5DAE               	subwf	sprintf@prec& (0+255),w,b
  6712  000B18  51AF               	movf	(sprintf@prec+1)& (0+255),w,b
  6713  000B1A  0A80               	xorlw	128
  6714  000B1C  6F94               	movwf	(??_sprintf+2)& (0+255),b
  6715  000B1E  5193               	movf	(??_sprintf+1)& (0+255),w,b
  6716  000B20  0A80               	xorlw	128
  6717  000B22  5994               	subwfb	(??_sprintf+2)& (0+255),w,b
  6718  000B24  B0D8               	btfsc	status,0,c
  6719  000B26  EF97  F005         	goto	u7811
  6720  000B2A  EF99  F005         	goto	u7810
  6721  000B2E                     u7811:
  6722  000B2E  EF9C  F005         	goto	l6727
  6723  000B32                     u7810:
  6724  000B32                     
  6725                           ; BSR set to: 0
  6726                           ;doprnt.c: 1368: prec = c;
  6727  000B32  C0B0  F0AE         	movff	sprintf@c,sprintf@prec
  6728  000B36  6BAF               	clrf	(sprintf@prec+1)& (0+255),b
  6729  000B38                     l6727:
  6730                           
  6731                           ; BSR set to: 0
  6732                           ;doprnt.c: 1371: if(width && flag & 0x03)
  6733  000B38  519E               	movf	sprintf@width& (0+255),w,b
  6734  000B3A  119F               	iorwf	(sprintf@width+1)& (0+255),w,b
  6735  000B3C  B4D8               	btfsc	status,2,c
  6736  000B3E  EFA3  F005         	goto	u7821
  6737  000B42  EFA5  F005         	goto	u7820
  6738  000B46                     u7821:
  6739  000B46  EFB7  F005         	goto	l6733
  6740  000B4A                     u7820:
  6741  000B4A                     
  6742                           ; BSR set to: 0
  6743  000B4A  0E03               	movlw	3
  6744  000B4C  159C               	andwf	sprintf@flag& (0+255),w,b
  6745  000B4E  6F92               	movwf	??_sprintf& (0+255),b
  6746  000B50  0E00               	movlw	0
  6747  000B52  159D               	andwf	(sprintf@flag+1)& (0+255),w,b
  6748  000B54  6F93               	movwf	(??_sprintf+1)& (0+255),b
  6749  000B56  5192               	movf	??_sprintf& (0+255),w,b
  6750  000B58  1193               	iorwf	(??_sprintf+1)& (0+255),w,b
  6751  000B5A  B4D8               	btfsc	status,2,c
  6752  000B5C  EFB2  F005         	goto	u7831
  6753  000B60  EFB4  F005         	goto	u7830
  6754  000B64                     u7831:
  6755  000B64  EFB7  F005         	goto	l6733
  6756  000B68                     u7830:
  6757  000B68                     
  6758                           ; BSR set to: 0
  6759                           ;doprnt.c: 1372: width--;
  6760  000B68  079E               	decf	sprintf@width& (0+255),f,b
  6761  000B6A  A0D8               	btfss	status,0,c
  6762  000B6C  079F               	decf	(sprintf@width+1)& (0+255),f,b
  6763  000B6E                     l6733:
  6764                           
  6765                           ; BSR set to: 0
  6766                           ;doprnt.c: 1374: if(flag & 0x4000) {
  6767  000B6E  AD9D               	btfss	(sprintf@flag+1)& (0+255),6,b
  6768  000B70  EFBC  F005         	goto	u7841
  6769  000B74  EFBE  F005         	goto	u7840
  6770  000B78                     u7841:
  6771  000B78  EFD7  F005         	goto	l6741
  6772  000B7C                     u7840:
  6773  000B7C                     
  6774                           ; BSR set to: 0
  6775                           ;doprnt.c: 1375: if(width > prec)
  6776  000B7C  519E               	movf	sprintf@width& (0+255),w,b
  6777  000B7E  5DAE               	subwf	sprintf@prec& (0+255),w,b
  6778  000B80  51AF               	movf	(sprintf@prec+1)& (0+255),w,b
  6779  000B82  0A80               	xorlw	128
  6780  000B84  6F92               	movwf	??_sprintf& (0+255),b
  6781  000B86  519F               	movf	(sprintf@width+1)& (0+255),w,b
  6782  000B88  0A80               	xorlw	128
  6783  000B8A  5992               	subwfb	??_sprintf& (0+255),w,b
  6784  000B8C  B0D8               	btfsc	status,0,c
  6785  000B8E  EFCB  F005         	goto	u7851
  6786  000B92  EFCD  F005         	goto	u7850
  6787  000B96                     u7851:
  6788  000B96  EFD3  F005         	goto	l6739
  6789  000B9A                     u7850:
  6790  000B9A                     
  6791                           ; BSR set to: 0
  6792                           ;doprnt.c: 1376: width -= prec;
  6793  000B9A  51AE               	movf	sprintf@prec& (0+255),w,b
  6794  000B9C  5F9E               	subwf	sprintf@width& (0+255),f,b
  6795  000B9E  51AF               	movf	(sprintf@prec+1)& (0+255),w,b
  6796  000BA0  5B9F               	subwfb	(sprintf@width+1)& (0+255),f,b
  6797  000BA2  EFD7  F005         	goto	l6741
  6798  000BA6                     l6739:
  6799                           
  6800                           ; BSR set to: 0
  6801                           ;doprnt.c: 1377: else;doprnt.c: 1378: width = 0;
  6802  000BA6  0E00               	movlw	0
  6803  000BA8  6F9F               	movwf	(sprintf@width+1)& (0+255),b
  6804  000BAA  0E00               	movlw	0
  6805  000BAC  6F9E               	movwf	sprintf@width& (0+255),b
  6806  000BAE                     l6741:
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;doprnt.c: 1379: };doprnt.c: 1407: if(width > c)
  6810  000BAE  51B0               	movf	sprintf@c& (0+255),w,b
  6811  000BB0  6F92               	movwf	??_sprintf& (0+255),b
  6812  000BB2  6B93               	clrf	(??_sprintf+1)& (0+255),b
  6813  000BB4  519E               	movf	sprintf@width& (0+255),w,b
  6814  000BB6  5D92               	subwf	??_sprintf& (0+255),w,b
  6815  000BB8  5193               	movf	(??_sprintf+1)& (0+255),w,b
  6816  000BBA  0A80               	xorlw	128
  6817  000BBC  6F94               	movwf	(??_sprintf+2)& (0+255),b
  6818  000BBE  519F               	movf	(sprintf@width+1)& (0+255),w,b
  6819  000BC0  0A80               	xorlw	128
  6820  000BC2  5994               	subwfb	(??_sprintf+2)& (0+255),w,b
  6821  000BC4  B0D8               	btfsc	status,0,c
  6822  000BC6  EFE7  F005         	goto	u7861
  6823  000BCA  EFE9  F005         	goto	u7860
  6824  000BCE                     u7861:
  6825  000BCE  EFEF  F005         	goto	l6745
  6826  000BD2                     u7860:
  6827  000BD2                     
  6828                           ; BSR set to: 0
  6829                           ;doprnt.c: 1408: width -= c;
  6830  000BD2  51B0               	movf	sprintf@c& (0+255),w,b
  6831  000BD4  5F9E               	subwf	sprintf@width& (0+255),f,b
  6832  000BD6  0E00               	movlw	0
  6833  000BD8  5B9F               	subwfb	(sprintf@width+1)& (0+255),f,b
  6834  000BDA  EFF3  F005         	goto	l6747
  6835  000BDE                     l6745:
  6836                           
  6837                           ; BSR set to: 0
  6838                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  6839  000BDE  0E00               	movlw	0
  6840  000BE0  6F9F               	movwf	(sprintf@width+1)& (0+255),b
  6841  000BE2  0E00               	movlw	0
  6842  000BE4  6F9E               	movwf	sprintf@width& (0+255),b
  6843  000BE6                     l6747:
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  6847  000BE6  519E               	movf	sprintf@width& (0+255),w,b
  6848  000BE8  119F               	iorwf	(sprintf@width+1)& (0+255),w,b
  6849  000BEA  B4D8               	btfsc	status,2,c
  6850  000BEC  EFFA  F005         	goto	u7871
  6851  000BF0  EFFC  F005         	goto	u7870
  6852  000BF4                     u7871:
  6853  000BF4  EF10  F006         	goto	l6755
  6854  000BF8                     u7870:
  6855  000BF8                     l6749:
  6856                           
  6857                           ; BSR set to: 0
  6858                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  6859  000BF8  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6860  000BFC  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6861  000C00  0E20               	movlw	32
  6862  000C02  6EDF               	movwf	indf2,c
  6863  000C04                     
  6864                           ; BSR set to: 0
  6865  000C04  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6866  000C06  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6867  000C08                     
  6868                           ; BSR set to: 0
  6869                           ;doprnt.c: 1457: while(--width);
  6870  000C08  079E               	decf	sprintf@width& (0+255),f,b
  6871  000C0A  A0D8               	btfss	status,0,c
  6872  000C0C  079F               	decf	(sprintf@width+1)& (0+255),f,b
  6873  000C0E  519E               	movf	sprintf@width& (0+255),w,b
  6874  000C10  119F               	iorwf	(sprintf@width+1)& (0+255),w,b
  6875  000C12  A4D8               	btfss	status,2,c
  6876  000C14  EF0E  F006         	goto	u7881
  6877  000C18  EF10  F006         	goto	u7880
  6878  000C1C                     u7881:
  6879  000C1C  EFFC  F005         	goto	l6749
  6880  000C20                     u7880:
  6881  000C20                     l6755:
  6882                           
  6883                           ; BSR set to: 0
  6884                           ;doprnt.c: 1464: if(flag & 0x03)
  6885  000C20  0E03               	movlw	3
  6886  000C22  159C               	andwf	sprintf@flag& (0+255),w,b
  6887  000C24  6F92               	movwf	??_sprintf& (0+255),b
  6888  000C26  0E00               	movlw	0
  6889  000C28  159D               	andwf	(sprintf@flag+1)& (0+255),w,b
  6890  000C2A  6F93               	movwf	(??_sprintf+1)& (0+255),b
  6891  000C2C  5192               	movf	??_sprintf& (0+255),w,b
  6892  000C2E  1193               	iorwf	(??_sprintf+1)& (0+255),w,b
  6893  000C30  B4D8               	btfsc	status,2,c
  6894  000C32  EF1D  F006         	goto	u7891
  6895  000C36  EF1F  F006         	goto	u7890
  6896  000C3A                     u7891:
  6897  000C3A  EF6D  F006         	goto	l6767
  6898  000C3E                     u7890:
  6899  000C3E                     
  6900                           ; BSR set to: 0
  6901                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  6902  000C3E  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6903  000C42  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6904  000C46  0E2D               	movlw	45
  6905  000C48  6EDF               	movwf	indf2,c
  6906  000C4A                     l6759:
  6907                           
  6908                           ; BSR set to: 0
  6909  000C4A  4B8A               	infsnz	sprintf@sp& (0+255),f,b
  6910  000C4C  2B8B               	incf	(sprintf@sp+1)& (0+255),f,b
  6911  000C4E  EF6D  F006         	goto	l6767
  6912  000C52                     l6761:
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned int)prec]) % 10 + '0';
  6916  000C52  C0AE  F092         	movff	sprintf@prec,??_sprintf
  6917  000C56  C0AF  F093         	movff	sprintf@prec+1,??_sprintf+1
  6918  000C5A  90D8               	bcf	status,0,c
  6919  000C5C  3792               	rlcf	??_sprintf& (0+255),f,b
  6920  000C5E  3793               	rlcf	(??_sprintf+1)& (0+255),f,b
  6921  000C60  90D8               	bcf	status,0,c
  6922  000C62  3792               	rlcf	??_sprintf& (0+255),f,b
  6923  000C64  3793               	rlcf	(??_sprintf+1)& (0+255),f,b
  6924  000C66  0E83               	movlw	low _dpowers
  6925  000C68  2592               	addwf	??_sprintf& (0+255),w,b
  6926  000C6A  6EF6               	movwf	tblptrl,c
  6927  000C6C  0E7F               	movlw	high _dpowers
  6928  000C6E  2193               	addwfc	(??_sprintf+1)& (0+255),w,b
  6929  000C70  6EF7               	movwf	tblptrh,c
  6930  000C72                     	if	0	;There are less than 3 active tblptr bytes
  6931  000C72                     	endif
  6932  000C72  0009               	tblrd		*+
  6933  000C74  CFF5 F006          	movff	tablat,___lldiv@divisor
  6934  000C78  0009               	tblrd		*+
  6935  000C7A  CFF5 F007          	movff	tablat,___lldiv@divisor+1
  6936  000C7E  0009               	tblrd		*+
  6937  000C80  CFF5 F008          	movff	tablat,___lldiv@divisor+2
  6938  000C84  000A               	tblrd		*-
  6939  000C86  CFF5 F009          	movff	tablat,___lldiv@divisor+3
  6940  000C8A  C0A4  F002         	movff	sprintf@val,___lldiv@dividend
  6941  000C8E  C0A5  F003         	movff	sprintf@val+1,___lldiv@dividend+1
  6942  000C92  C0A6  F004         	movff	sprintf@val+2,___lldiv@dividend+2
  6943  000C96  C0A7  F005         	movff	sprintf@val+3,___lldiv@dividend+3
  6944  000C9A  EC2B  F01E         	call	___lldiv	;wreg free
  6945  000C9E  C002  F00F         	movff	?___lldiv,___llmod@dividend
  6946  000CA2  C003  F010         	movff	?___lldiv+1,___llmod@dividend+1
  6947  000CA6  C004  F011         	movff	?___lldiv+2,___llmod@dividend+2
  6948  000CAA  C005  F012         	movff	?___lldiv+3,___llmod@dividend+3
  6949  000CAE  0E0A               	movlw	10
  6950  000CB0  6E13               	movwf	___llmod@divisor^0,c
  6951  000CB2  0E00               	movlw	0
  6952  000CB4  6E14               	movwf	(___llmod@divisor+1)^0,c
  6953  000CB6  0E00               	movlw	0
  6954  000CB8  6E15               	movwf	(___llmod@divisor+2)^0,c
  6955  000CBA  0E00               	movlw	0
  6956  000CBC  6E16               	movwf	(___llmod@divisor+3)^0,c
  6957  000CBE  ECC1  F01E         	call	___llmod	;wreg free
  6958  000CC2  500F               	movf	?___llmod^0,w,c
  6959  000CC4  0F30               	addlw	48
  6960  000CC6  0100               	movlb	0	; () banked
  6961  000CC8  6FB0               	movwf	sprintf@c& (0+255),b
  6962  000CCA                     
  6963                           ; BSR set to: 0
  6964                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
  6965  000CCA  C08A  FFD9         	movff	sprintf@sp,fsr2l
  6966  000CCE  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  6967  000CD2  C0B0  FFDF         	movff	sprintf@c,indf2
  6968  000CD6  EF25  F006         	goto	l6759
  6969  000CDA                     l6767:
  6970                           
  6971                           ; BSR set to: 0
  6972  000CDA  07AE               	decf	sprintf@prec& (0+255),f,b
  6973  000CDC  A0D8               	btfss	status,0,c
  6974  000CDE  07AF               	decf	(sprintf@prec+1)& (0+255),f,b
  6975  000CE0  29AE               	incf	sprintf@prec& (0+255),w,b
  6976  000CE2  E106               	bnz	u7901
  6977  000CE4  29AF               	incf	(sprintf@prec+1)& (0+255),w,b
  6978  000CE6  A4D8               	btfss	status,2,c
  6979  000CE8  EF78  F006         	goto	u7901
  6980  000CEC  EF7A  F006         	goto	u7900
  6981  000CF0                     u7901:
  6982  000CF0  EF29  F006         	goto	l6761
  6983  000CF4                     u7900:
  6984  000CF4                     l6769:
  6985                           
  6986                           ; BSR set to: 0
  6987  000CF4  C08C  FFF6         	movff	sprintf@f,tblptrl
  6988  000CF8  C08D  FFF7         	movff	sprintf@f+1,tblptrh
  6989  000CFC  4B8C               	infsnz	sprintf@f& (0+255),f,b
  6990  000CFE  2B8D               	incf	(sprintf@f+1)& (0+255),f,b
  6991  000D00                     	if	0	;tblptru may be non-zero
  6992  000D00                     	endif
  6993  000D00                     	if	0	;tblptru may be non-zero
  6994  000D00                     	endif
  6995  000D00  0008               	tblrd		*
  6996  000D02  CFF5 F0B0          	movff	tablat,sprintf@c
  6997  000D06  51B0               	movf	sprintf@c& (0+255),w,b
  6998  000D08  A4D8               	btfss	status,2,c
  6999  000D0A  EF89  F006         	goto	u7911
  7000  000D0E  EF8B  F006         	goto	u7910
  7001  000D12                     u7911:
  7002  000D12  EF5F  F000         	goto	l6481
  7003  000D16                     u7910:
  7004  000D16                     l6771:
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;doprnt.c: 1564: *sp = 0;
  7008  000D16  C08A  FFD9         	movff	sprintf@sp,fsr2l
  7009  000D1A  C08B  FFDA         	movff	sprintf@sp+1,fsr2h
  7010  000D1E  0E00               	movlw	0
  7011  000D20  6EDF               	movwf	indf2,c
  7012  000D22                     
  7013                           ; BSR set to: 0
  7014  000D22  0012               	return		;funcret
  7015  000D24                     __end_of_sprintf:
  7016                           	callstack 0
  7017                           
  7018 ;; *************** function _scale *****************
  7019 ;; Defined at:
  7020 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  7021 ;; Parameters:    Size  Location     Type
  7022 ;;  scl             1    wreg     char 
  7023 ;; Auto vars:     Size  Location     Type
  7024 ;;  scl             1   90[COMRAM] char 
  7025 ;; Return value:  Size  Location     Type
  7026 ;;                  4   82[COMRAM] char 
  7027 ;; Registers used:
  7028 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7029 ;; Tracked objects:
  7030 ;;		On entry : 0/0
  7031 ;;		On exit  : 0/0
  7032 ;;		Unchanged: 0/0
  7033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7034 ;;      Params:         4       0       0       0       0       0       0       0       0
  7035 ;;      Locals:         5       0       0       0       0       0       0       0       0
  7036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7037 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7038 ;;Total ram usage:        9 bytes
  7039 ;; Hardware stack levels used: 1
  7040 ;; Hardware stack levels required when called: 4
  7041 ;; This function calls:
  7042 ;;		___awdiv
  7043 ;;		___awmod
  7044 ;;		___flmul
  7045 ;; This function is called by:
  7046 ;;		_sprintf
  7047 ;; This function uses a non-reentrant model
  7048 ;;
  7049                           
  7050                           	psect	text23
  7051  001612                     __ptext23:
  7052                           	callstack 0
  7053  001612                     _scale:
  7054                           	callstack 24
  7055                           
  7056                           ; BSR set to: 0
  7057                           ;incstack = 0
  7058                           ;scale@scl stored from wreg
  7059  001612  6E5B               	movwf	scale@scl^0,c
  7060  001614                     
  7061                           ;doprnt.c: 436: if(scl < 0) {
  7062  001614  BE5B               	btfsc	scale@scl^0,7,c
  7063  001616  EF11  F00B         	goto	u7010
  7064  00161A  EF0F  F00B         	goto	u7011
  7065  00161E                     u7011:
  7066  00161E  EF11  F00C         	goto	l6201
  7067  001622                     u7010:
  7068  001622                     
  7069                           ;doprnt.c: 437: scl = -scl;
  7070  001622  6C5B               	negf	scale@scl^0,c
  7071                           
  7072                           ;doprnt.c: 438: if(scl>=110)
  7073  001624  505B               	movf	scale@scl^0,w,c
  7074  001626  0A80               	xorlw	128
  7075  001628  0F12               	addlw	-238
  7076  00162A  A0D8               	btfss	status,0,c
  7077  00162C  EF1A  F00B         	goto	u7021
  7078  001630  EF1C  F00B         	goto	u7020
  7079  001634                     u7021:
  7080  001634  EFA5  F00B         	goto	l6191
  7081  001638                     u7020:
  7082  001638                     
  7083                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  7084  001638  0E00               	movlw	0
  7085  00163A  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7086  00163C  0E0A               	movlw	10
  7087  00163E  6E0A               	movwf	___awdiv@divisor^0,c
  7088  001640  0E00               	movlw	0
  7089  001642  6E05               	movwf	(___awmod@divisor+1)^0,c
  7090  001644  0E64               	movlw	100
  7091  001646  6E04               	movwf	___awmod@divisor^0,c
  7092  001648  505B               	movf	scale@scl^0,w,c
  7093  00164A  6E02               	movwf	___awmod@dividend^0,c
  7094  00164C  6A03               	clrf	(___awmod@dividend+1)^0,c
  7095  00164E  BE02               	btfsc	___awmod@dividend^0,7,c
  7096  001650  0603               	decf	(___awmod@dividend+1)^0,f,c
  7097  001652  EC7E  F01D         	call	___awmod	;wreg free
  7098  001656  C002  F008         	movff	?___awmod,___awdiv@dividend
  7099  00165A  C003  F009         	movff	?___awmod+1,___awdiv@dividend+1
  7100  00165E  EC1C  F01D         	call	___awdiv	;wreg free
  7101  001662  0E09               	movlw	9
  7102  001664  2608               	addwf	?___awdiv^0,f,c
  7103  001666  5008               	movf	?___awdiv^0,w,c
  7104  001668  0D04               	mullw	4
  7105  00166A  0E27               	movlw	low __npowers_
  7106  00166C  24F3               	addwf	243,w,c
  7107  00166E  6EF6               	movwf	tblptrl,c
  7108  001670  0E7F               	movlw	high __npowers_
  7109  001672  20F4               	addwfc	244,w,c
  7110  001674  6EF7               	movwf	tblptrh,c
  7111  001676                     	if	0	;There are less than 3 active tblptr bytes
  7112  001676                     	endif
  7113  001676  0009               	tblrd		*+
  7114  001678  CFF5 F04B          	movff	tablat,___flmul@a
  7115  00167C  0009               	tblrd		*+
  7116  00167E  CFF5 F04C          	movff	tablat,___flmul@a+1
  7117  001682  0009               	tblrd		*+
  7118  001684  CFF5 F04D          	movff	tablat,___flmul@a+2
  7119  001688  000A               	tblrd		*-
  7120  00168A  CFF5 F04E          	movff	tablat,___flmul@a+3
  7121  00168E  0E00               	movlw	0
  7122  001690  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7123  001692  0E64               	movlw	100
  7124  001694  6E0A               	movwf	___awdiv@divisor^0,c
  7125  001696  505B               	movf	scale@scl^0,w,c
  7126  001698  6E08               	movwf	___awdiv@dividend^0,c
  7127  00169A  6A09               	clrf	(___awdiv@dividend+1)^0,c
  7128  00169C  BE08               	btfsc	___awdiv@dividend^0,7,c
  7129  00169E  0609               	decf	(___awdiv@dividend+1)^0,f,c
  7130  0016A0  EC1C  F01D         	call	___awdiv	;wreg free
  7131  0016A4  0E12               	movlw	18
  7132  0016A6  2608               	addwf	?___awdiv^0,f,c
  7133  0016A8  5008               	movf	?___awdiv^0,w,c
  7134  0016AA  0D04               	mullw	4
  7135  0016AC  0E27               	movlw	low __npowers_
  7136  0016AE  24F3               	addwf	243,w,c
  7137  0016B0  6EF6               	movwf	tblptrl,c
  7138  0016B2  0E7F               	movlw	high __npowers_
  7139  0016B4  20F4               	addwfc	244,w,c
  7140  0016B6  6EF7               	movwf	tblptrh,c
  7141  0016B8                     	if	0	;There are less than 3 active tblptr bytes
  7142  0016B8                     	endif
  7143  0016B8  0009               	tblrd		*+
  7144  0016BA  CFF5 F047          	movff	tablat,___flmul@b
  7145  0016BE  0009               	tblrd		*+
  7146  0016C0  CFF5 F048          	movff	tablat,___flmul@b+1
  7147  0016C4  0009               	tblrd		*+
  7148  0016C6  CFF5 F049          	movff	tablat,___flmul@b+2
  7149  0016CA  000A               	tblrd		*-
  7150  0016CC  CFF5 F04A          	movff	tablat,___flmul@b+3
  7151  0016D0  ECF3  F008         	call	___flmul	;wreg free
  7152  0016D4  C047  F057         	movff	?___flmul,_scale$2444
  7153  0016D8  C048  F058         	movff	?___flmul+1,_scale$2444+1
  7154  0016DC  C049  F059         	movff	?___flmul+2,_scale$2444+2
  7155  0016E0  C04A  F05A         	movff	?___flmul+3,_scale$2444+3
  7156                           
  7157                           ;doprnt.c: 439: return _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char
      +                          )((scl%100)/10+9)] * _npowers_[(unsigned char)(scl%10)];
  7158  0016E4  C057  F047         	movff	_scale$2444,___flmul@b
  7159  0016E8  C058  F048         	movff	_scale$2444+1,___flmul@b+1
  7160  0016EC  C059  F049         	movff	_scale$2444+2,___flmul@b+2
  7161  0016F0  C05A  F04A         	movff	_scale$2444+3,___flmul@b+3
  7162  0016F4  0E00               	movlw	0
  7163  0016F6  6E05               	movwf	(___awmod@divisor+1)^0,c
  7164  0016F8  0E0A               	movlw	10
  7165  0016FA  6E04               	movwf	___awmod@divisor^0,c
  7166  0016FC  505B               	movf	scale@scl^0,w,c
  7167  0016FE  6E02               	movwf	___awmod@dividend^0,c
  7168  001700  6A03               	clrf	(___awmod@dividend+1)^0,c
  7169  001702  BE02               	btfsc	___awmod@dividend^0,7,c
  7170  001704  0603               	decf	(___awmod@dividend+1)^0,f,c
  7171  001706  EC7E  F01D         	call	___awmod	;wreg free
  7172  00170A  5002               	movf	?___awmod^0,w,c
  7173  00170C  0D04               	mullw	4
  7174  00170E  0E27               	movlw	low __npowers_
  7175  001710  24F3               	addwf	243,w,c
  7176  001712  6EF6               	movwf	tblptrl,c
  7177  001714  0E7F               	movlw	high __npowers_
  7178  001716  20F4               	addwfc	244,w,c
  7179  001718  6EF7               	movwf	tblptrh,c
  7180  00171A                     	if	0	;There are less than 3 active tblptr bytes
  7181  00171A                     	endif
  7182  00171A  0009               	tblrd		*+
  7183  00171C  CFF5 F04B          	movff	tablat,___flmul@a
  7184  001720  0009               	tblrd		*+
  7185  001722  CFF5 F04C          	movff	tablat,___flmul@a+1
  7186  001726  0009               	tblrd		*+
  7187  001728  CFF5 F04D          	movff	tablat,___flmul@a+2
  7188  00172C  000A               	tblrd		*-
  7189  00172E  CFF5 F04E          	movff	tablat,___flmul@a+3
  7190  001732  ECF3  F008         	call	___flmul	;wreg free
  7191  001736  C047  F053         	movff	?___flmul,?_scale
  7192  00173A  C048  F054         	movff	?___flmul+1,?_scale+1
  7193  00173E  C049  F055         	movff	?___flmul+2,?_scale+2
  7194  001742  C04A  F056         	movff	?___flmul+3,?_scale+3
  7195  001746  EF0E  F00D         	goto	l671
  7196  00174A                     l6191:
  7197                           
  7198                           ;doprnt.c: 440: else if(scl > 10)
  7199  00174A  505B               	movf	scale@scl^0,w,c
  7200  00174C  0A80               	xorlw	128
  7201  00174E  0F75               	addlw	-139
  7202  001750  A0D8               	btfss	status,0,c
  7203  001752  EFAD  F00B         	goto	u7031
  7204  001756  EFAF  F00B         	goto	u7030
  7205  00175A                     u7031:
  7206  00175A  EFFB  F00B         	goto	l6197
  7207  00175E                     u7030:
  7208  00175E                     
  7209                           ;doprnt.c: 441: return _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(
      +                          scl%10)];
  7210  00175E  0E00               	movlw	0
  7211  001760  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7212  001762  0E0A               	movlw	10
  7213  001764  6E0A               	movwf	___awdiv@divisor^0,c
  7214  001766  505B               	movf	scale@scl^0,w,c
  7215  001768  6E08               	movwf	___awdiv@dividend^0,c
  7216  00176A  6A09               	clrf	(___awdiv@dividend+1)^0,c
  7217  00176C  BE08               	btfsc	___awdiv@dividend^0,7,c
  7218  00176E  0609               	decf	(___awdiv@dividend+1)^0,f,c
  7219  001770  EC1C  F01D         	call	___awdiv	;wreg free
  7220  001774  0E09               	movlw	9
  7221  001776  2608               	addwf	?___awdiv^0,f,c
  7222  001778  5008               	movf	?___awdiv^0,w,c
  7223  00177A  0D04               	mullw	4
  7224  00177C  0E27               	movlw	low __npowers_
  7225  00177E  24F3               	addwf	243,w,c
  7226  001780  6EF6               	movwf	tblptrl,c
  7227  001782  0E7F               	movlw	high __npowers_
  7228  001784  20F4               	addwfc	244,w,c
  7229  001786  6EF7               	movwf	tblptrh,c
  7230  001788                     	if	0	;There are less than 3 active tblptr bytes
  7231  001788                     	endif
  7232  001788  0009               	tblrd		*+
  7233  00178A  CFF5 F047          	movff	tablat,___flmul@b
  7234  00178E  0009               	tblrd		*+
  7235  001790  CFF5 F048          	movff	tablat,___flmul@b+1
  7236  001794  0009               	tblrd		*+
  7237  001796  CFF5 F049          	movff	tablat,___flmul@b+2
  7238  00179A  000A               	tblrd		*-
  7239  00179C  CFF5 F04A          	movff	tablat,___flmul@b+3
  7240  0017A0  0E00               	movlw	0
  7241  0017A2  6E05               	movwf	(___awmod@divisor+1)^0,c
  7242  0017A4  0E0A               	movlw	10
  7243  0017A6  6E04               	movwf	___awmod@divisor^0,c
  7244  0017A8  505B               	movf	scale@scl^0,w,c
  7245  0017AA  6E02               	movwf	___awmod@dividend^0,c
  7246  0017AC  6A03               	clrf	(___awmod@dividend+1)^0,c
  7247  0017AE  BE02               	btfsc	___awmod@dividend^0,7,c
  7248  0017B0  0603               	decf	(___awmod@dividend+1)^0,f,c
  7249  0017B2  EC7E  F01D         	call	___awmod	;wreg free
  7250  0017B6  5002               	movf	?___awmod^0,w,c
  7251  0017B8  0D04               	mullw	4
  7252  0017BA  0E27               	movlw	low __npowers_
  7253  0017BC  24F3               	addwf	243,w,c
  7254  0017BE  6EF6               	movwf	tblptrl,c
  7255  0017C0  0E7F               	movlw	high __npowers_
  7256  0017C2  20F4               	addwfc	244,w,c
  7257  0017C4  6EF7               	movwf	tblptrh,c
  7258  0017C6                     	if	0	;There are less than 3 active tblptr bytes
  7259  0017C6                     	endif
  7260  0017C6  0009               	tblrd		*+
  7261  0017C8  CFF5 F04B          	movff	tablat,___flmul@a
  7262  0017CC  0009               	tblrd		*+
  7263  0017CE  CFF5 F04C          	movff	tablat,___flmul@a+1
  7264  0017D2  0009               	tblrd		*+
  7265  0017D4  CFF5 F04D          	movff	tablat,___flmul@a+2
  7266  0017D8  000A               	tblrd		*-
  7267  0017DA  CFF5 F04E          	movff	tablat,___flmul@a+3
  7268  0017DE  ECF3  F008         	call	___flmul	;wreg free
  7269  0017E2  C047  F053         	movff	?___flmul,?_scale
  7270  0017E6  C048  F054         	movff	?___flmul+1,?_scale+1
  7271  0017EA  C049  F055         	movff	?___flmul+2,?_scale+2
  7272  0017EE  C04A  F056         	movff	?___flmul+3,?_scale+3
  7273  0017F2  EF0E  F00D         	goto	l671
  7274  0017F6                     l6197:
  7275                           
  7276                           ;doprnt.c: 442: return _npowers_[(unsigned char)scl];
  7277  0017F6  505B               	movf	scale@scl^0,w,c
  7278  0017F8  0D04               	mullw	4
  7279  0017FA  0E27               	movlw	low __npowers_
  7280  0017FC  24F3               	addwf	243,w,c
  7281  0017FE  6EF6               	movwf	tblptrl,c
  7282  001800  0E7F               	movlw	high __npowers_
  7283  001802  20F4               	addwfc	244,w,c
  7284  001804  6EF7               	movwf	tblptrh,c
  7285  001806                     	if	0	;There are less than 3 active tblptr bytes
  7286  001806                     	endif
  7287  001806  0009               	tblrd		*+
  7288  001808  CFF5 F053          	movff	tablat,?_scale
  7289  00180C  0009               	tblrd		*+
  7290  00180E  CFF5 F054          	movff	tablat,?_scale+1
  7291  001812  0009               	tblrd		*+
  7292  001814  CFF5 F055          	movff	tablat,?_scale+2
  7293  001818  000A               	tblrd		*-
  7294  00181A  CFF5 F056          	movff	tablat,?_scale+3
  7295  00181E  EF0E  F00D         	goto	l671
  7296  001822                     l6201:
  7297                           
  7298                           ;doprnt.c: 443: };doprnt.c: 444: if(scl>=110)
  7299  001822  505B               	movf	scale@scl^0,w,c
  7300  001824  0A80               	xorlw	128
  7301  001826  0F12               	addlw	-238
  7302  001828  A0D8               	btfss	status,0,c
  7303  00182A  EF19  F00C         	goto	u7041
  7304  00182E  EF1B  F00C         	goto	u7040
  7305  001832                     u7041:
  7306  001832  EFA4  F00C         	goto	l6209
  7307  001836                     u7040:
  7308  001836                     
  7309                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  7310  001836  0E00               	movlw	0
  7311  001838  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7312  00183A  0E0A               	movlw	10
  7313  00183C  6E0A               	movwf	___awdiv@divisor^0,c
  7314  00183E  0E00               	movlw	0
  7315  001840  6E05               	movwf	(___awmod@divisor+1)^0,c
  7316  001842  0E64               	movlw	100
  7317  001844  6E04               	movwf	___awmod@divisor^0,c
  7318  001846  505B               	movf	scale@scl^0,w,c
  7319  001848  6E02               	movwf	___awmod@dividend^0,c
  7320  00184A  6A03               	clrf	(___awmod@dividend+1)^0,c
  7321  00184C  BE02               	btfsc	___awmod@dividend^0,7,c
  7322  00184E  0603               	decf	(___awmod@dividend+1)^0,f,c
  7323  001850  EC7E  F01D         	call	___awmod	;wreg free
  7324  001854  C002  F008         	movff	?___awmod,___awdiv@dividend
  7325  001858  C003  F009         	movff	?___awmod+1,___awdiv@dividend+1
  7326  00185C  EC1C  F01D         	call	___awdiv	;wreg free
  7327  001860  0E09               	movlw	9
  7328  001862  2608               	addwf	?___awdiv^0,f,c
  7329  001864  5008               	movf	?___awdiv^0,w,c
  7330  001866  0D04               	mullw	4
  7331  001868  0EF3               	movlw	low __powers_
  7332  00186A  24F3               	addwf	243,w,c
  7333  00186C  6EF6               	movwf	tblptrl,c
  7334  00186E  0E7E               	movlw	high __powers_
  7335  001870  20F4               	addwfc	244,w,c
  7336  001872  6EF7               	movwf	tblptrh,c
  7337  001874                     	if	0	;There are less than 3 active tblptr bytes
  7338  001874                     	endif
  7339  001874  0009               	tblrd		*+
  7340  001876  CFF5 F04B          	movff	tablat,___flmul@a
  7341  00187A  0009               	tblrd		*+
  7342  00187C  CFF5 F04C          	movff	tablat,___flmul@a+1
  7343  001880  0009               	tblrd		*+
  7344  001882  CFF5 F04D          	movff	tablat,___flmul@a+2
  7345  001886  000A               	tblrd		*-
  7346  001888  CFF5 F04E          	movff	tablat,___flmul@a+3
  7347  00188C  0E00               	movlw	0
  7348  00188E  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7349  001890  0E64               	movlw	100
  7350  001892  6E0A               	movwf	___awdiv@divisor^0,c
  7351  001894  505B               	movf	scale@scl^0,w,c
  7352  001896  6E08               	movwf	___awdiv@dividend^0,c
  7353  001898  6A09               	clrf	(___awdiv@dividend+1)^0,c
  7354  00189A  BE08               	btfsc	___awdiv@dividend^0,7,c
  7355  00189C  0609               	decf	(___awdiv@dividend+1)^0,f,c
  7356  00189E  EC1C  F01D         	call	___awdiv	;wreg free
  7357  0018A2  0E12               	movlw	18
  7358  0018A4  2608               	addwf	?___awdiv^0,f,c
  7359  0018A6  5008               	movf	?___awdiv^0,w,c
  7360  0018A8  0D04               	mullw	4
  7361  0018AA  0EF3               	movlw	low __powers_
  7362  0018AC  24F3               	addwf	243,w,c
  7363  0018AE  6EF6               	movwf	tblptrl,c
  7364  0018B0  0E7E               	movlw	high __powers_
  7365  0018B2  20F4               	addwfc	244,w,c
  7366  0018B4  6EF7               	movwf	tblptrh,c
  7367  0018B6                     	if	0	;There are less than 3 active tblptr bytes
  7368  0018B6                     	endif
  7369  0018B6  0009               	tblrd		*+
  7370  0018B8  CFF5 F047          	movff	tablat,___flmul@b
  7371  0018BC  0009               	tblrd		*+
  7372  0018BE  CFF5 F048          	movff	tablat,___flmul@b+1
  7373  0018C2  0009               	tblrd		*+
  7374  0018C4  CFF5 F049          	movff	tablat,___flmul@b+2
  7375  0018C8  000A               	tblrd		*-
  7376  0018CA  CFF5 F04A          	movff	tablat,___flmul@b+3
  7377  0018CE  ECF3  F008         	call	___flmul	;wreg free
  7378  0018D2  C047  F057         	movff	?___flmul,_scale$2444
  7379  0018D6  C048  F058         	movff	?___flmul+1,_scale$2444+1
  7380  0018DA  C049  F059         	movff	?___flmul+2,_scale$2444+2
  7381  0018DE  C04A  F05A         	movff	?___flmul+3,_scale$2444+3
  7382                           
  7383                           ;doprnt.c: 445: return _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)(
      +                          (scl%100)/10+9)] * _powers_[(unsigned char)(scl%10)];
  7384  0018E2  C057  F047         	movff	_scale$2444,___flmul@b
  7385  0018E6  C058  F048         	movff	_scale$2444+1,___flmul@b+1
  7386  0018EA  C059  F049         	movff	_scale$2444+2,___flmul@b+2
  7387  0018EE  C05A  F04A         	movff	_scale$2444+3,___flmul@b+3
  7388  0018F2  0E00               	movlw	0
  7389  0018F4  6E05               	movwf	(___awmod@divisor+1)^0,c
  7390  0018F6  0E0A               	movlw	10
  7391  0018F8  6E04               	movwf	___awmod@divisor^0,c
  7392  0018FA  505B               	movf	scale@scl^0,w,c
  7393  0018FC  6E02               	movwf	___awmod@dividend^0,c
  7394  0018FE  6A03               	clrf	(___awmod@dividend+1)^0,c
  7395  001900  BE02               	btfsc	___awmod@dividend^0,7,c
  7396  001902  0603               	decf	(___awmod@dividend+1)^0,f,c
  7397  001904  EC7E  F01D         	call	___awmod	;wreg free
  7398  001908  5002               	movf	?___awmod^0,w,c
  7399  00190A  0D04               	mullw	4
  7400  00190C  0EF3               	movlw	low __powers_
  7401  00190E  24F3               	addwf	243,w,c
  7402  001910  6EF6               	movwf	tblptrl,c
  7403  001912  0E7E               	movlw	high __powers_
  7404  001914  20F4               	addwfc	244,w,c
  7405  001916  6EF7               	movwf	tblptrh,c
  7406  001918                     	if	0	;There are less than 3 active tblptr bytes
  7407  001918                     	endif
  7408  001918  0009               	tblrd		*+
  7409  00191A  CFF5 F04B          	movff	tablat,___flmul@a
  7410  00191E  0009               	tblrd		*+
  7411  001920  CFF5 F04C          	movff	tablat,___flmul@a+1
  7412  001924  0009               	tblrd		*+
  7413  001926  CFF5 F04D          	movff	tablat,___flmul@a+2
  7414  00192A  000A               	tblrd		*-
  7415  00192C  CFF5 F04E          	movff	tablat,___flmul@a+3
  7416  001930  ECF3  F008         	call	___flmul	;wreg free
  7417  001934  C047  F053         	movff	?___flmul,?_scale
  7418  001938  C048  F054         	movff	?___flmul+1,?_scale+1
  7419  00193C  C049  F055         	movff	?___flmul+2,?_scale+2
  7420  001940  C04A  F056         	movff	?___flmul+3,?_scale+3
  7421  001944  EF0E  F00D         	goto	l671
  7422  001948                     l6209:
  7423                           
  7424                           ;doprnt.c: 446: else if(scl > 10)
  7425  001948  505B               	movf	scale@scl^0,w,c
  7426  00194A  0A80               	xorlw	128
  7427  00194C  0F75               	addlw	-139
  7428  00194E  A0D8               	btfss	status,0,c
  7429  001950  EFAC  F00C         	goto	u7051
  7430  001954  EFAE  F00C         	goto	u7050
  7431  001958                     u7051:
  7432  001958  EFFA  F00C         	goto	l6215
  7433  00195C                     u7050:
  7434  00195C                     
  7435                           ;doprnt.c: 447: return _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(sc
      +                          l%10)];
  7436  00195C  0E00               	movlw	0
  7437  00195E  6E0B               	movwf	(___awdiv@divisor+1)^0,c
  7438  001960  0E0A               	movlw	10
  7439  001962  6E0A               	movwf	___awdiv@divisor^0,c
  7440  001964  505B               	movf	scale@scl^0,w,c
  7441  001966  6E08               	movwf	___awdiv@dividend^0,c
  7442  001968  6A09               	clrf	(___awdiv@dividend+1)^0,c
  7443  00196A  BE08               	btfsc	___awdiv@dividend^0,7,c
  7444  00196C  0609               	decf	(___awdiv@dividend+1)^0,f,c
  7445  00196E  EC1C  F01D         	call	___awdiv	;wreg free
  7446  001972  0E09               	movlw	9
  7447  001974  2608               	addwf	?___awdiv^0,f,c
  7448  001976  5008               	movf	?___awdiv^0,w,c
  7449  001978  0D04               	mullw	4
  7450  00197A  0EF3               	movlw	low __powers_
  7451  00197C  24F3               	addwf	243,w,c
  7452  00197E  6EF6               	movwf	tblptrl,c
  7453  001980  0E7E               	movlw	high __powers_
  7454  001982  20F4               	addwfc	244,w,c
  7455  001984  6EF7               	movwf	tblptrh,c
  7456  001986                     	if	0	;There are less than 3 active tblptr bytes
  7457  001986                     	endif
  7458  001986  0009               	tblrd		*+
  7459  001988  CFF5 F047          	movff	tablat,___flmul@b
  7460  00198C  0009               	tblrd		*+
  7461  00198E  CFF5 F048          	movff	tablat,___flmul@b+1
  7462  001992  0009               	tblrd		*+
  7463  001994  CFF5 F049          	movff	tablat,___flmul@b+2
  7464  001998  000A               	tblrd		*-
  7465  00199A  CFF5 F04A          	movff	tablat,___flmul@b+3
  7466  00199E  0E00               	movlw	0
  7467  0019A0  6E05               	movwf	(___awmod@divisor+1)^0,c
  7468  0019A2  0E0A               	movlw	10
  7469  0019A4  6E04               	movwf	___awmod@divisor^0,c
  7470  0019A6  505B               	movf	scale@scl^0,w,c
  7471  0019A8  6E02               	movwf	___awmod@dividend^0,c
  7472  0019AA  6A03               	clrf	(___awmod@dividend+1)^0,c
  7473  0019AC  BE02               	btfsc	___awmod@dividend^0,7,c
  7474  0019AE  0603               	decf	(___awmod@dividend+1)^0,f,c
  7475  0019B0  EC7E  F01D         	call	___awmod	;wreg free
  7476  0019B4  5002               	movf	?___awmod^0,w,c
  7477  0019B6  0D04               	mullw	4
  7478  0019B8  0EF3               	movlw	low __powers_
  7479  0019BA  24F3               	addwf	243,w,c
  7480  0019BC  6EF6               	movwf	tblptrl,c
  7481  0019BE  0E7E               	movlw	high __powers_
  7482  0019C0  20F4               	addwfc	244,w,c
  7483  0019C2  6EF7               	movwf	tblptrh,c
  7484  0019C4                     	if	0	;There are less than 3 active tblptr bytes
  7485  0019C4                     	endif
  7486  0019C4  0009               	tblrd		*+
  7487  0019C6  CFF5 F04B          	movff	tablat,___flmul@a
  7488  0019CA  0009               	tblrd		*+
  7489  0019CC  CFF5 F04C          	movff	tablat,___flmul@a+1
  7490  0019D0  0009               	tblrd		*+
  7491  0019D2  CFF5 F04D          	movff	tablat,___flmul@a+2
  7492  0019D6  000A               	tblrd		*-
  7493  0019D8  CFF5 F04E          	movff	tablat,___flmul@a+3
  7494  0019DC  ECF3  F008         	call	___flmul	;wreg free
  7495  0019E0  C047  F053         	movff	?___flmul,?_scale
  7496  0019E4  C048  F054         	movff	?___flmul+1,?_scale+1
  7497  0019E8  C049  F055         	movff	?___flmul+2,?_scale+2
  7498  0019EC  C04A  F056         	movff	?___flmul+3,?_scale+3
  7499  0019F0  EF0E  F00D         	goto	l671
  7500  0019F4                     l6215:
  7501                           
  7502                           ;doprnt.c: 448: return _powers_[(unsigned char)scl];
  7503  0019F4  505B               	movf	scale@scl^0,w,c
  7504  0019F6  0D04               	mullw	4
  7505  0019F8  0EF3               	movlw	low __powers_
  7506  0019FA  24F3               	addwf	243,w,c
  7507  0019FC  6EF6               	movwf	tblptrl,c
  7508  0019FE  0E7E               	movlw	high __powers_
  7509  001A00  20F4               	addwfc	244,w,c
  7510  001A02  6EF7               	movwf	tblptrh,c
  7511  001A04                     	if	0	;There are less than 3 active tblptr bytes
  7512  001A04                     	endif
  7513  001A04  0009               	tblrd		*+
  7514  001A06  CFF5 F053          	movff	tablat,?_scale
  7515  001A0A  0009               	tblrd		*+
  7516  001A0C  CFF5 F054          	movff	tablat,?_scale+1
  7517  001A10  0009               	tblrd		*+
  7518  001A12  CFF5 F055          	movff	tablat,?_scale+2
  7519  001A16  000A               	tblrd		*-
  7520  001A18  CFF5 F056          	movff	tablat,?_scale+3
  7521  001A1C                     l671:
  7522  001A1C  0012               	return		;funcret
  7523  001A1E                     __end_of_scale:
  7524                           	callstack 0
  7525                           
  7526 ;; *************** function ___awmod *****************
  7527 ;; Defined at:
  7528 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awmod.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;  dividend        2    1[COMRAM] int 
  7531 ;;  divisor         2    3[COMRAM] int 
  7532 ;; Auto vars:     Size  Location     Type
  7533 ;;  sign            1    6[COMRAM] unsigned char 
  7534 ;;  counter         1    5[COMRAM] unsigned char 
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  2    1[COMRAM] int 
  7537 ;; Registers used:
  7538 ;;		wreg, status,2, status,0
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7544 ;;      Params:         4       0       0       0       0       0       0       0       0
  7545 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7546 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7547 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7548 ;;Total ram usage:        6 bytes
  7549 ;; Hardware stack levels used: 1
  7550 ;; Hardware stack levels required when called: 3
  7551 ;; This function calls:
  7552 ;;		Nothing
  7553 ;; This function is called by:
  7554 ;;		_scale
  7555 ;; This function uses a non-reentrant model
  7556 ;;
  7557                           
  7558                           	psect	text24
  7559  003AFC                     __ptext24:
  7560                           	callstack 0
  7561  003AFC                     ___awmod:
  7562                           	callstack 24
  7563  003AFC  0E00               	movlw	0
  7564  003AFE  6E07               	movwf	___awmod@sign^0,c
  7565  003B00  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  7566  003B02  EF87  F01D         	goto	u6630
  7567  003B06  EF85  F01D         	goto	u6631
  7568  003B0A                     u6631:
  7569  003B0A  EF8D  F01D         	goto	l5999
  7570  003B0E                     u6630:
  7571  003B0E  6C02               	negf	___awmod@dividend^0,c
  7572  003B10  1E03               	comf	(___awmod@dividend+1)^0,f,c
  7573  003B12  B0D8               	btfsc	status,0,c
  7574  003B14  2A03               	incf	(___awmod@dividend+1)^0,f,c
  7575  003B16  0E01               	movlw	1
  7576  003B18  6E07               	movwf	___awmod@sign^0,c
  7577  003B1A                     l5999:
  7578  003B1A  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  7579  003B1C  EF94  F01D         	goto	u6640
  7580  003B20  EF92  F01D         	goto	u6641
  7581  003B24                     u6641:
  7582  003B24  EF98  F01D         	goto	l6003
  7583  003B28                     u6640:
  7584  003B28  6C04               	negf	___awmod@divisor^0,c
  7585  003B2A  1E05               	comf	(___awmod@divisor+1)^0,f,c
  7586  003B2C  B0D8               	btfsc	status,0,c
  7587  003B2E  2A05               	incf	(___awmod@divisor+1)^0,f,c
  7588  003B30                     l6003:
  7589  003B30  5004               	movf	___awmod@divisor^0,w,c
  7590  003B32  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  7591  003B34  B4D8               	btfsc	status,2,c
  7592  003B36  EF9F  F01D         	goto	u6651
  7593  003B3A  EFA1  F01D         	goto	u6650
  7594  003B3E                     u6651:
  7595  003B3E  EFC5  F01D         	goto	l6019
  7596  003B42                     u6650:
  7597  003B42  0E01               	movlw	1
  7598  003B44  6E06               	movwf	___awmod@counter^0,c
  7599  003B46  EFA9  F01D         	goto	l6009
  7600  003B4A                     l6007:
  7601  003B4A  90D8               	bcf	status,0,c
  7602  003B4C  3604               	rlcf	___awmod@divisor^0,f,c
  7603  003B4E  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  7604  003B50  2A06               	incf	___awmod@counter^0,f,c
  7605  003B52                     l6009:
  7606  003B52  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  7607  003B54  EFAE  F01D         	goto	u6661
  7608  003B58  EFB0  F01D         	goto	u6660
  7609  003B5C                     u6661:
  7610  003B5C  EFA5  F01D         	goto	l6007
  7611  003B60                     u6660:
  7612  003B60                     l6011:
  7613  003B60  5004               	movf	___awmod@divisor^0,w,c
  7614  003B62  5C02               	subwf	___awmod@dividend^0,w,c
  7615  003B64  5005               	movf	(___awmod@divisor+1)^0,w,c
  7616  003B66  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  7617  003B68  A0D8               	btfss	status,0,c
  7618  003B6A  EFB9  F01D         	goto	u6671
  7619  003B6E  EFBB  F01D         	goto	u6670
  7620  003B72                     u6671:
  7621  003B72  EFBF  F01D         	goto	l6015
  7622  003B76                     u6670:
  7623  003B76  5004               	movf	___awmod@divisor^0,w,c
  7624  003B78  5E02               	subwf	___awmod@dividend^0,f,c
  7625  003B7A  5005               	movf	(___awmod@divisor+1)^0,w,c
  7626  003B7C  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  7627  003B7E                     l6015:
  7628  003B7E  90D8               	bcf	status,0,c
  7629  003B80  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  7630  003B82  3204               	rrcf	___awmod@divisor^0,f,c
  7631  003B84  2E06               	decfsz	___awmod@counter^0,f,c
  7632  003B86  EFB0  F01D         	goto	l6011
  7633  003B8A                     l6019:
  7634  003B8A  5007               	movf	___awmod@sign^0,w,c
  7635  003B8C  B4D8               	btfsc	status,2,c
  7636  003B8E  EFCB  F01D         	goto	u6681
  7637  003B92  EFCD  F01D         	goto	u6680
  7638  003B96                     u6681:
  7639  003B96  EFD1  F01D         	goto	l6023
  7640  003B9A                     u6680:
  7641  003B9A  6C02               	negf	___awmod@dividend^0,c
  7642  003B9C  1E03               	comf	(___awmod@dividend+1)^0,f,c
  7643  003B9E  B0D8               	btfsc	status,0,c
  7644  003BA0  2A03               	incf	(___awmod@dividend+1)^0,f,c
  7645  003BA2                     l6023:
  7646  003BA2  C002  F002         	movff	___awmod@dividend,?___awmod
  7647  003BA6  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  7648  003BAA  0012               	return		;funcret
  7649  003BAC                     __end_of___awmod:
  7650                           	callstack 0
  7651                           
  7652 ;; *************** function ___awdiv *****************
  7653 ;; Defined at:
  7654 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;  dividend        2    7[COMRAM] int 
  7657 ;;  divisor         2    9[COMRAM] int 
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;  quotient        2   13[COMRAM] int 
  7660 ;;  sign            1   12[COMRAM] unsigned char 
  7661 ;;  counter         1   11[COMRAM] unsigned char 
  7662 ;; Return value:  Size  Location     Type
  7663 ;;                  2    7[COMRAM] int 
  7664 ;; Registers used:
  7665 ;;		wreg, status,2, status,0
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7671 ;;      Params:         4       0       0       0       0       0       0       0       0
  7672 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7674 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7675 ;;Total ram usage:        8 bytes
  7676 ;; Hardware stack levels used: 1
  7677 ;; Hardware stack levels required when called: 3
  7678 ;; This function calls:
  7679 ;;		Nothing
  7680 ;; This function is called by:
  7681 ;;		_scale
  7682 ;;		_sprintf
  7683 ;; This function uses a non-reentrant model
  7684 ;;
  7685                           
  7686                           	psect	text25
  7687  003A38                     __ptext25:
  7688                           	callstack 0
  7689  003A38                     ___awdiv:
  7690                           	callstack 24
  7691  003A38  0E00               	movlw	0
  7692  003A3A  6E0D               	movwf	___awdiv@sign^0,c
  7693  003A3C  BE0B               	btfsc	(___awdiv@divisor+1)^0,7,c
  7694  003A3E  EF25  F01D         	goto	u6570
  7695  003A42  EF23  F01D         	goto	u6571
  7696  003A46                     u6571:
  7697  003A46  EF2B  F01D         	goto	l5955
  7698  003A4A                     u6570:
  7699  003A4A  6C0A               	negf	___awdiv@divisor^0,c
  7700  003A4C  1E0B               	comf	(___awdiv@divisor+1)^0,f,c
  7701  003A4E  B0D8               	btfsc	status,0,c
  7702  003A50  2A0B               	incf	(___awdiv@divisor+1)^0,f,c
  7703  003A52  0E01               	movlw	1
  7704  003A54  6E0D               	movwf	___awdiv@sign^0,c
  7705  003A56                     l5955:
  7706  003A56  BE09               	btfsc	(___awdiv@dividend+1)^0,7,c
  7707  003A58  EF32  F01D         	goto	u6580
  7708  003A5C  EF30  F01D         	goto	u6581
  7709  003A60                     u6581:
  7710  003A60  EF38  F01D         	goto	l5961
  7711  003A64                     u6580:
  7712  003A64  6C08               	negf	___awdiv@dividend^0,c
  7713  003A66  1E09               	comf	(___awdiv@dividend+1)^0,f,c
  7714  003A68  B0D8               	btfsc	status,0,c
  7715  003A6A  2A09               	incf	(___awdiv@dividend+1)^0,f,c
  7716  003A6C  0E01               	movlw	1
  7717  003A6E  1A0D               	xorwf	___awdiv@sign^0,f,c
  7718  003A70                     l5961:
  7719  003A70  0E00               	movlw	0
  7720  003A72  6E0F               	movwf	(___awdiv@quotient+1)^0,c
  7721  003A74  0E00               	movlw	0
  7722  003A76  6E0E               	movwf	___awdiv@quotient^0,c
  7723  003A78  500A               	movf	___awdiv@divisor^0,w,c
  7724  003A7A  100B               	iorwf	(___awdiv@divisor+1)^0,w,c
  7725  003A7C  B4D8               	btfsc	status,2,c
  7726  003A7E  EF43  F01D         	goto	u6591
  7727  003A82  EF45  F01D         	goto	u6590
  7728  003A86                     u6591:
  7729  003A86  EF6D  F01D         	goto	l5983
  7730  003A8A                     u6590:
  7731  003A8A  0E01               	movlw	1
  7732  003A8C  6E0C               	movwf	___awdiv@counter^0,c
  7733  003A8E  EF4D  F01D         	goto	l5969
  7734  003A92                     l5967:
  7735  003A92  90D8               	bcf	status,0,c
  7736  003A94  360A               	rlcf	___awdiv@divisor^0,f,c
  7737  003A96  360B               	rlcf	(___awdiv@divisor+1)^0,f,c
  7738  003A98  2A0C               	incf	___awdiv@counter^0,f,c
  7739  003A9A                     l5969:
  7740  003A9A  AE0B               	btfss	(___awdiv@divisor+1)^0,7,c
  7741  003A9C  EF52  F01D         	goto	u6601
  7742  003AA0  EF54  F01D         	goto	u6600
  7743  003AA4                     u6601:
  7744  003AA4  EF49  F01D         	goto	l5967
  7745  003AA8                     u6600:
  7746  003AA8                     l5971:
  7747  003AA8  90D8               	bcf	status,0,c
  7748  003AAA  360E               	rlcf	___awdiv@quotient^0,f,c
  7749  003AAC  360F               	rlcf	(___awdiv@quotient+1)^0,f,c
  7750  003AAE  500A               	movf	___awdiv@divisor^0,w,c
  7751  003AB0  5C08               	subwf	___awdiv@dividend^0,w,c
  7752  003AB2  500B               	movf	(___awdiv@divisor+1)^0,w,c
  7753  003AB4  5809               	subwfb	(___awdiv@dividend+1)^0,w,c
  7754  003AB6  A0D8               	btfss	status,0,c
  7755  003AB8  EF60  F01D         	goto	u6611
  7756  003ABC  EF62  F01D         	goto	u6610
  7757  003AC0                     u6611:
  7758  003AC0  EF67  F01D         	goto	l5979
  7759  003AC4                     u6610:
  7760  003AC4  500A               	movf	___awdiv@divisor^0,w,c
  7761  003AC6  5E08               	subwf	___awdiv@dividend^0,f,c
  7762  003AC8  500B               	movf	(___awdiv@divisor+1)^0,w,c
  7763  003ACA  5A09               	subwfb	(___awdiv@dividend+1)^0,f,c
  7764  003ACC  800E               	bsf	___awdiv@quotient^0,0,c
  7765  003ACE                     l5979:
  7766  003ACE  90D8               	bcf	status,0,c
  7767  003AD0  320B               	rrcf	(___awdiv@divisor+1)^0,f,c
  7768  003AD2  320A               	rrcf	___awdiv@divisor^0,f,c
  7769  003AD4  2E0C               	decfsz	___awdiv@counter^0,f,c
  7770  003AD6  EF54  F01D         	goto	l5971
  7771  003ADA                     l5983:
  7772  003ADA  500D               	movf	___awdiv@sign^0,w,c
  7773  003ADC  B4D8               	btfsc	status,2,c
  7774  003ADE  EF73  F01D         	goto	u6621
  7775  003AE2  EF75  F01D         	goto	u6620
  7776  003AE6                     u6621:
  7777  003AE6  EF79  F01D         	goto	l5987
  7778  003AEA                     u6620:
  7779  003AEA  6C0E               	negf	___awdiv@quotient^0,c
  7780  003AEC  1E0F               	comf	(___awdiv@quotient+1)^0,f,c
  7781  003AEE  B0D8               	btfsc	status,0,c
  7782  003AF0  2A0F               	incf	(___awdiv@quotient+1)^0,f,c
  7783  003AF2                     l5987:
  7784  003AF2  C00E  F008         	movff	___awdiv@quotient,?___awdiv
  7785  003AF6  C00F  F009         	movff	___awdiv@quotient+1,?___awdiv+1
  7786  003AFA  0012               	return		;funcret
  7787  003AFC                     __end_of___awdiv:
  7788                           	callstack 0
  7789                           
  7790 ;; *************** function _isdigit *****************
  7791 ;; Defined at:
  7792 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\isdigit.c"
  7793 ;; Parameters:    Size  Location     Type
  7794 ;;  c               1    wreg     unsigned char 
  7795 ;; Auto vars:     Size  Location     Type
  7796 ;;  c               1    3[COMRAM] unsigned char 
  7797 ;; Return value:  Size  Location     Type
  7798 ;;		None               void
  7799 ;; Registers used:
  7800 ;;		wreg, status,2, status,0
  7801 ;; Tracked objects:
  7802 ;;		On entry : 0/0
  7803 ;;		On exit  : 0/0
  7804 ;;		Unchanged: 0/0
  7805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7806 ;;      Params:         0       0       0       0       0       0       0       0       0
  7807 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7808 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7809 ;;      Totals:         3       0       0       0       0       0       0       0       0
  7810 ;;Total ram usage:        3 bytes
  7811 ;; Hardware stack levels used: 1
  7812 ;; Hardware stack levels required when called: 3
  7813 ;; This function calls:
  7814 ;;		Nothing
  7815 ;; This function is called by:
  7816 ;;		_sprintf
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text26
  7821  004304                     __ptext26:
  7822                           	callstack 0
  7823  004304                     _isdigit:
  7824                           	callstack 25
  7825                           
  7826                           ;incstack = 0
  7827                           ;isdigit@c stored from wreg
  7828  004304  6E04               	movwf	isdigit@c^0,c
  7829  004306  0E00               	movlw	0
  7830  004308  6E03               	movwf	_isdigit$2139^0,c
  7831  00430A  0E3A               	movlw	58
  7832  00430C  6004               	cpfslt	isdigit@c^0,c
  7833  00430E  EF8B  F021         	goto	u7061
  7834  004312  EF8D  F021         	goto	u7060
  7835  004316                     u7061:
  7836  004316  EF97  F021         	goto	l6227
  7837  00431A                     u7060:
  7838  00431A  0E2F               	movlw	47
  7839  00431C  6404               	cpfsgt	isdigit@c^0,c
  7840  00431E  EF93  F021         	goto	u7071
  7841  004322  EF95  F021         	goto	u7070
  7842  004326                     u7071:
  7843  004326  EF97  F021         	goto	l6227
  7844  00432A                     u7070:
  7845  00432A  0E01               	movlw	1
  7846  00432C  6E03               	movwf	_isdigit$2139^0,c
  7847  00432E                     l6227:
  7848  00432E  C003  F002         	movff	_isdigit$2139,??_isdigit
  7849  004332  3002               	rrcf	??_isdigit^0,w,c
  7850  004334  0012               	return		;funcret
  7851  004336                     __end_of_isdigit:
  7852                           	callstack 0
  7853                           
  7854 ;; *************** function _fround *****************
  7855 ;; Defined at:
  7856 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\doprnt.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  prec            1    wreg     unsigned char 
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;  prec            1   21[BANK0 ] unsigned char 
  7861 ;; Return value:  Size  Location     Type
  7862 ;;                  4   82[COMRAM] unsigned char 
  7863 ;; Registers used:
  7864 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7865 ;; Tracked objects:
  7866 ;;		On entry : 0/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7870 ;;      Params:         4       0       0       0       0       0       0       0       0
  7871 ;;      Locals:         0       9       0       0       0       0       0       0       0
  7872 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7873 ;;      Totals:         4       9       0       0       0       0       0       0       0
  7874 ;;Total ram usage:       13 bytes
  7875 ;; Hardware stack levels used: 1
  7876 ;; Hardware stack levels required when called: 4
  7877 ;; This function calls:
  7878 ;;		___flmul
  7879 ;;		___lwdiv
  7880 ;;		___lwmod
  7881 ;; This function is called by:
  7882 ;;		_sprintf
  7883 ;; This function uses a non-reentrant model
  7884 ;;
  7885                           
  7886                           	psect	text27
  7887  002712                     __ptext27:
  7888                           	callstack 0
  7889  002712                     _fround:
  7890                           	callstack 24
  7891                           
  7892                           ;incstack = 0
  7893                           ;fround@prec stored from wreg
  7894  002712  0100               	movlb	0	; () banked
  7895  002714  6F75               	movwf	fround@prec& (0+255),b
  7896  002716                     
  7897                           ;doprnt.c: 421: if(prec>=110)
  7898  002716  0E6D               	movlw	109
  7899  002718  0100               	movlb	0	; () banked
  7900  00271A  6575               	cpfsgt	fround@prec& (0+255),b
  7901  00271C  EF92  F013         	goto	u6991
  7902  002720  EF94  F013         	goto	u6990
  7903  002724                     u6991:
  7904  002724  EF41  F014         	goto	l6171
  7905  002728                     u6990:
  7906  002728                     
  7907                           ; BSR set to: 0
  7908                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7909  002728  0E00               	movlw	0
  7910  00272A  6E4B               	movwf	___flmul@a^0,c
  7911  00272C  0E00               	movlw	0
  7912  00272E  6E4C               	movwf	(___flmul@a+1)^0,c
  7913  002730  0E00               	movlw	0
  7914  002732  6E4D               	movwf	(___flmul@a+2)^0,c
  7915  002734  0E3F               	movlw	63
  7916  002736  6E4E               	movwf	(___flmul@a+3)^0,c
  7917  002738  0E00               	movlw	0
  7918  00273A  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  7919  00273C  0E64               	movlw	100
  7920  00273E  6E09               	movwf	___lwdiv@divisor^0,c
  7921  002740  C075  F007         	movff	fround@prec,___lwdiv@dividend
  7922  002744  6A08               	clrf	(___lwdiv@dividend+1)^0,c
  7923  002746  ECF3  F01F         	call	___lwdiv	;wreg free
  7924  00274A  90D8               	bcf	status,0,c
  7925  00274C  3607               	rlcf	?___lwdiv^0,f,c
  7926  00274E  3608               	rlcf	(?___lwdiv+1)^0,f,c
  7927  002750  90D8               	bcf	status,0,c
  7928  002752  3607               	rlcf	?___lwdiv^0,f,c
  7929  002754  3608               	rlcf	(?___lwdiv+1)^0,f,c
  7930  002756  0E48               	movlw	72
  7931  002758  2607               	addwf	?___lwdiv^0,f,c
  7932  00275A  0E00               	movlw	0
  7933  00275C  2208               	addwfc	(?___lwdiv+1)^0,f,c
  7934  00275E  0E27               	movlw	low __npowers_
  7935  002760  2407               	addwf	?___lwdiv^0,w,c
  7936  002762  6EF6               	movwf	tblptrl,c
  7937  002764  0E7F               	movlw	high __npowers_
  7938  002766  2008               	addwfc	(?___lwdiv+1)^0,w,c
  7939  002768  6EF7               	movwf	tblptrh,c
  7940  00276A                     	if	0	;There are less than 3 active tblptr bytes
  7941  00276A                     	endif
  7942  00276A  0009               	tblrd		*+
  7943  00276C  CFF5 F047          	movff	tablat,___flmul@b
  7944  002770  0009               	tblrd		*+
  7945  002772  CFF5 F048          	movff	tablat,___flmul@b+1
  7946  002776  0009               	tblrd		*+
  7947  002778  CFF5 F049          	movff	tablat,___flmul@b+2
  7948  00277C  000A               	tblrd		*-
  7949  00277E  CFF5 F04A          	movff	tablat,___flmul@b+3
  7950  002782  ECF3  F008         	call	___flmul	;wreg free
  7951  002786  C047  F071         	movff	?___flmul,_fround$2442
  7952  00278A  C048  F072         	movff	?___flmul+1,_fround$2442+1
  7953  00278E  C049  F073         	movff	?___flmul+2,_fround$2442+2
  7954  002792  C04A  F074         	movff	?___flmul+3,_fround$2442+3
  7955                           
  7956                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  7957  002796  0E00               	movlw	0
  7958  002798  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  7959  00279A  0E0A               	movlw	10
  7960  00279C  6E09               	movwf	___lwdiv@divisor^0,c
  7961  00279E  0E00               	movlw	0
  7962  0027A0  6E05               	movwf	(___lwmod@divisor+1)^0,c
  7963  0027A2  0E64               	movlw	100
  7964  0027A4  6E04               	movwf	___lwmod@divisor^0,c
  7965  0027A6  C075  F002         	movff	fround@prec,___lwmod@dividend
  7966  0027AA  6A03               	clrf	(___lwmod@dividend+1)^0,c
  7967  0027AC  EC63  F020         	call	___lwmod	;wreg free
  7968  0027B0  C002  F007         	movff	?___lwmod,___lwdiv@dividend
  7969  0027B4  C003  F008         	movff	?___lwmod+1,___lwdiv@dividend+1
  7970  0027B8  ECF3  F01F         	call	___lwdiv	;wreg free
  7971  0027BC  90D8               	bcf	status,0,c
  7972  0027BE  3607               	rlcf	?___lwdiv^0,f,c
  7973  0027C0  3608               	rlcf	(?___lwdiv+1)^0,f,c
  7974  0027C2  90D8               	bcf	status,0,c
  7975  0027C4  3607               	rlcf	?___lwdiv^0,f,c
  7976  0027C6  3608               	rlcf	(?___lwdiv+1)^0,f,c
  7977  0027C8  0E24               	movlw	36
  7978  0027CA  2607               	addwf	?___lwdiv^0,f,c
  7979  0027CC  0E00               	movlw	0
  7980  0027CE  2208               	addwfc	(?___lwdiv+1)^0,f,c
  7981  0027D0  0E27               	movlw	low __npowers_
  7982  0027D2  2407               	addwf	?___lwdiv^0,w,c
  7983  0027D4  6EF6               	movwf	tblptrl,c
  7984  0027D6  0E7F               	movlw	high __npowers_
  7985  0027D8  2008               	addwfc	(?___lwdiv+1)^0,w,c
  7986  0027DA  6EF7               	movwf	tblptrh,c
  7987  0027DC                     	if	0	;There are less than 3 active tblptr bytes
  7988  0027DC                     	endif
  7989  0027DC  0009               	tblrd		*+
  7990  0027DE  CFF5 F04B          	movff	tablat,___flmul@a
  7991  0027E2  0009               	tblrd		*+
  7992  0027E4  CFF5 F04C          	movff	tablat,___flmul@a+1
  7993  0027E8  0009               	tblrd		*+
  7994  0027EA  CFF5 F04D          	movff	tablat,___flmul@a+2
  7995  0027EE  000A               	tblrd		*-
  7996  0027F0  CFF5 F04E          	movff	tablat,___flmul@a+3
  7997  0027F4  C071  F047         	movff	_fround$2442,___flmul@b
  7998  0027F8  C072  F048         	movff	_fround$2442+1,___flmul@b+1
  7999  0027FC  C073  F049         	movff	_fround$2442+2,___flmul@b+2
  8000  002800  C074  F04A         	movff	_fround$2442+3,___flmul@b+3
  8001  002804  ECF3  F008         	call	___flmul	;wreg free
  8002  002808  C047  F06D         	movff	?___flmul,_fround$2443
  8003  00280C  C048  F06E         	movff	?___flmul+1,_fround$2443+1
  8004  002810  C049  F06F         	movff	?___flmul+2,_fround$2443+2
  8005  002814  C04A  F070         	movff	?___flmul+3,_fround$2443+3
  8006                           
  8007                           ;doprnt.c: 422: return 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * 
      +                          _npowers_[prec%10U];
  8008  002818  C06D  F047         	movff	_fround$2443,___flmul@b
  8009  00281C  C06E  F048         	movff	_fround$2443+1,___flmul@b+1
  8010  002820  C06F  F049         	movff	_fround$2443+2,___flmul@b+2
  8011  002824  C070  F04A         	movff	_fround$2443+3,___flmul@b+3
  8012  002828  0E00               	movlw	0
  8013  00282A  6E05               	movwf	(___lwmod@divisor+1)^0,c
  8014  00282C  0E0A               	movlw	10
  8015  00282E  6E04               	movwf	___lwmod@divisor^0,c
  8016  002830  C075  F002         	movff	fround@prec,___lwmod@dividend
  8017  002834  6A03               	clrf	(___lwmod@dividend+1)^0,c
  8018  002836  EC63  F020         	call	___lwmod	;wreg free
  8019  00283A  90D8               	bcf	status,0,c
  8020  00283C  3602               	rlcf	?___lwmod^0,f,c
  8021  00283E  3603               	rlcf	(?___lwmod+1)^0,f,c
  8022  002840  90D8               	bcf	status,0,c
  8023  002842  3602               	rlcf	?___lwmod^0,f,c
  8024  002844  3603               	rlcf	(?___lwmod+1)^0,f,c
  8025  002846  0E27               	movlw	low __npowers_
  8026  002848  2402               	addwf	?___lwmod^0,w,c
  8027  00284A  6EF6               	movwf	tblptrl,c
  8028  00284C  0E7F               	movlw	high __npowers_
  8029  00284E  2003               	addwfc	(?___lwmod+1)^0,w,c
  8030  002850  6EF7               	movwf	tblptrh,c
  8031  002852                     	if	0	;There are less than 3 active tblptr bytes
  8032  002852                     	endif
  8033  002852  0009               	tblrd		*+
  8034  002854  CFF5 F04B          	movff	tablat,___flmul@a
  8035  002858  0009               	tblrd		*+
  8036  00285A  CFF5 F04C          	movff	tablat,___flmul@a+1
  8037  00285E  0009               	tblrd		*+
  8038  002860  CFF5 F04D          	movff	tablat,___flmul@a+2
  8039  002864  000A               	tblrd		*-
  8040  002866  CFF5 F04E          	movff	tablat,___flmul@a+3
  8041  00286A  ECF3  F008         	call	___flmul	;wreg free
  8042  00286E  C047  F053         	movff	?___flmul,?_fround
  8043  002872  C048  F054         	movff	?___flmul+1,?_fround+1
  8044  002876  C049  F055         	movff	?___flmul+2,?_fround+2
  8045  00287A  C04A  F056         	movff	?___flmul+3,?_fround+3
  8046  00287E  EFDB  F014         	goto	l664
  8047  002882                     l6171:
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;doprnt.c: 423: else if(prec > 10)
  8051  002882  0E0A               	movlw	10
  8052  002884  6575               	cpfsgt	fround@prec& (0+255),b
  8053  002886  EF47  F014         	goto	u7001
  8054  00288A  EF49  F014         	goto	u7000
  8055  00288E                     u7001:
  8056  00288E  EFB5  F014         	goto	l6177
  8057  002892                     u7000:
  8058  002892                     
  8059                           ; BSR set to: 0
  8060                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  8061  002892  0E00               	movlw	0
  8062  002894  6E4B               	movwf	___flmul@a^0,c
  8063  002896  0E00               	movlw	0
  8064  002898  6E4C               	movwf	(___flmul@a+1)^0,c
  8065  00289A  0E00               	movlw	0
  8066  00289C  6E4D               	movwf	(___flmul@a+2)^0,c
  8067  00289E  0E3F               	movlw	63
  8068  0028A0  6E4E               	movwf	(___flmul@a+3)^0,c
  8069  0028A2  0E00               	movlw	0
  8070  0028A4  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  8071  0028A6  0E0A               	movlw	10
  8072  0028A8  6E09               	movwf	___lwdiv@divisor^0,c
  8073  0028AA  C075  F007         	movff	fround@prec,___lwdiv@dividend
  8074  0028AE  6A08               	clrf	(___lwdiv@dividend+1)^0,c
  8075  0028B0  ECF3  F01F         	call	___lwdiv	;wreg free
  8076  0028B4  90D8               	bcf	status,0,c
  8077  0028B6  3607               	rlcf	?___lwdiv^0,f,c
  8078  0028B8  3608               	rlcf	(?___lwdiv+1)^0,f,c
  8079  0028BA  90D8               	bcf	status,0,c
  8080  0028BC  3607               	rlcf	?___lwdiv^0,f,c
  8081  0028BE  3608               	rlcf	(?___lwdiv+1)^0,f,c
  8082  0028C0  0E24               	movlw	36
  8083  0028C2  2607               	addwf	?___lwdiv^0,f,c
  8084  0028C4  0E00               	movlw	0
  8085  0028C6  2208               	addwfc	(?___lwdiv+1)^0,f,c
  8086  0028C8  0E27               	movlw	low __npowers_
  8087  0028CA  2407               	addwf	?___lwdiv^0,w,c
  8088  0028CC  6EF6               	movwf	tblptrl,c
  8089  0028CE  0E7F               	movlw	high __npowers_
  8090  0028D0  2008               	addwfc	(?___lwdiv+1)^0,w,c
  8091  0028D2  6EF7               	movwf	tblptrh,c
  8092  0028D4                     	if	0	;There are less than 3 active tblptr bytes
  8093  0028D4                     	endif
  8094  0028D4  0009               	tblrd		*+
  8095  0028D6  CFF5 F047          	movff	tablat,___flmul@b
  8096  0028DA  0009               	tblrd		*+
  8097  0028DC  CFF5 F048          	movff	tablat,___flmul@b+1
  8098  0028E0  0009               	tblrd		*+
  8099  0028E2  CFF5 F049          	movff	tablat,___flmul@b+2
  8100  0028E6  000A               	tblrd		*-
  8101  0028E8  CFF5 F04A          	movff	tablat,___flmul@b+3
  8102  0028EC  ECF3  F008         	call	___flmul	;wreg free
  8103  0028F0  C047  F071         	movff	?___flmul,_fround$2442
  8104  0028F4  C048  F072         	movff	?___flmul+1,_fround$2442+1
  8105  0028F8  C049  F073         	movff	?___flmul+2,_fround$2442+2
  8106  0028FC  C04A  F074         	movff	?___flmul+3,_fround$2442+3
  8107                           
  8108                           ;doprnt.c: 424: return 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  8109  002900  C071  F047         	movff	_fround$2442,___flmul@b
  8110  002904  C072  F048         	movff	_fround$2442+1,___flmul@b+1
  8111  002908  C073  F049         	movff	_fround$2442+2,___flmul@b+2
  8112  00290C  C074  F04A         	movff	_fround$2442+3,___flmul@b+3
  8113  002910  0E00               	movlw	0
  8114  002912  6E05               	movwf	(___lwmod@divisor+1)^0,c
  8115  002914  0E0A               	movlw	10
  8116  002916  6E04               	movwf	___lwmod@divisor^0,c
  8117  002918  C075  F002         	movff	fround@prec,___lwmod@dividend
  8118  00291C  6A03               	clrf	(___lwmod@dividend+1)^0,c
  8119  00291E  EC63  F020         	call	___lwmod	;wreg free
  8120  002922  90D8               	bcf	status,0,c
  8121  002924  3602               	rlcf	?___lwmod^0,f,c
  8122  002926  3603               	rlcf	(?___lwmod+1)^0,f,c
  8123  002928  90D8               	bcf	status,0,c
  8124  00292A  3602               	rlcf	?___lwmod^0,f,c
  8125  00292C  3603               	rlcf	(?___lwmod+1)^0,f,c
  8126  00292E  0E27               	movlw	low __npowers_
  8127  002930  2402               	addwf	?___lwmod^0,w,c
  8128  002932  6EF6               	movwf	tblptrl,c
  8129  002934  0E7F               	movlw	high __npowers_
  8130  002936  2003               	addwfc	(?___lwmod+1)^0,w,c
  8131  002938  6EF7               	movwf	tblptrh,c
  8132  00293A                     	if	0	;There are less than 3 active tblptr bytes
  8133  00293A                     	endif
  8134  00293A  0009               	tblrd		*+
  8135  00293C  CFF5 F04B          	movff	tablat,___flmul@a
  8136  002940  0009               	tblrd		*+
  8137  002942  CFF5 F04C          	movff	tablat,___flmul@a+1
  8138  002946  0009               	tblrd		*+
  8139  002948  CFF5 F04D          	movff	tablat,___flmul@a+2
  8140  00294C  000A               	tblrd		*-
  8141  00294E  CFF5 F04E          	movff	tablat,___flmul@a+3
  8142  002952  ECF3  F008         	call	___flmul	;wreg free
  8143  002956  C047  F053         	movff	?___flmul,?_fround
  8144  00295A  C048  F054         	movff	?___flmul+1,?_fround+1
  8145  00295E  C049  F055         	movff	?___flmul+2,?_fround+2
  8146  002962  C04A  F056         	movff	?___flmul+3,?_fround+3
  8147  002966  EFDB  F014         	goto	l664
  8148  00296A                     l6177:
  8149                           
  8150                           ; BSR set to: 0
  8151                           ;doprnt.c: 425: return 0.5 * _npowers_[prec];
  8152  00296A  5175               	movf	fround@prec& (0+255),w,b
  8153  00296C  0D04               	mullw	4
  8154  00296E  0E27               	movlw	low __npowers_
  8155  002970  24F3               	addwf	243,w,c
  8156  002972  6EF6               	movwf	tblptrl,c
  8157  002974  0E7F               	movlw	high __npowers_
  8158  002976  20F4               	addwfc	244,w,c
  8159  002978  6EF7               	movwf	tblptrh,c
  8160  00297A                     	if	0	;There are less than 3 active tblptr bytes
  8161  00297A                     	endif
  8162  00297A  0009               	tblrd		*+
  8163  00297C  CFF5 F047          	movff	tablat,___flmul@b
  8164  002980  0009               	tblrd		*+
  8165  002982  CFF5 F048          	movff	tablat,___flmul@b+1
  8166  002986  0009               	tblrd		*+
  8167  002988  CFF5 F049          	movff	tablat,___flmul@b+2
  8168  00298C  000A               	tblrd		*-
  8169  00298E  CFF5 F04A          	movff	tablat,___flmul@b+3
  8170  002992  0E00               	movlw	0
  8171  002994  6E4B               	movwf	___flmul@a^0,c
  8172  002996  0E00               	movlw	0
  8173  002998  6E4C               	movwf	(___flmul@a+1)^0,c
  8174  00299A  0E00               	movlw	0
  8175  00299C  6E4D               	movwf	(___flmul@a+2)^0,c
  8176  00299E  0E3F               	movlw	63
  8177  0029A0  6E4E               	movwf	(___flmul@a+3)^0,c
  8178  0029A2  ECF3  F008         	call	___flmul	;wreg free
  8179  0029A6  C047  F053         	movff	?___flmul,?_fround
  8180  0029AA  C048  F054         	movff	?___flmul+1,?_fround+1
  8181  0029AE  C049  F055         	movff	?___flmul+2,?_fround+2
  8182  0029B2  C04A  F056         	movff	?___flmul+3,?_fround+3
  8183  0029B6                     l664:
  8184  0029B6  0012               	return		;funcret
  8185  0029B8                     __end_of_fround:
  8186                           	callstack 0
  8187                           
  8188 ;; *************** function ___lwmod *****************
  8189 ;; Defined at:
  8190 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  8191 ;; Parameters:    Size  Location     Type
  8192 ;;  dividend        2    1[COMRAM] unsigned int 
  8193 ;;  divisor         2    3[COMRAM] unsigned int 
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;  counter         1    5[COMRAM] unsigned char 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  2    1[COMRAM] unsigned int 
  8198 ;; Registers used:
  8199 ;;		wreg, status,2, status,0
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8205 ;;      Params:         4       0       0       0       0       0       0       0       0
  8206 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8207 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8208 ;;      Totals:         5       0       0       0       0       0       0       0       0
  8209 ;;Total ram usage:        5 bytes
  8210 ;; Hardware stack levels used: 1
  8211 ;; Hardware stack levels required when called: 3
  8212 ;; This function calls:
  8213 ;;		Nothing
  8214 ;; This function is called by:
  8215 ;;		_fround
  8216 ;; This function uses a non-reentrant model
  8217 ;;
  8218                           
  8219                           	psect	text28
  8220  0040C6                     __ptext28:
  8221                           	callstack 0
  8222  0040C6                     ___lwmod:
  8223                           	callstack 24
  8224  0040C6  5004               	movf	___lwmod@divisor^0,w,c
  8225  0040C8  1005               	iorwf	(___lwmod@divisor+1)^0,w,c
  8226  0040CA  B4D8               	btfsc	status,2,c
  8227  0040CC  EF6A  F020         	goto	u6731
  8228  0040D0  EF6C  F020         	goto	u6730
  8229  0040D4                     u6731:
  8230  0040D4  EF90  F020         	goto	l1289
  8231  0040D8                     u6730:
  8232  0040D8  0E01               	movlw	1
  8233  0040DA  6E06               	movwf	___lwmod@counter^0,c
  8234  0040DC  EF74  F020         	goto	l6063
  8235  0040E0                     l6061:
  8236  0040E0  90D8               	bcf	status,0,c
  8237  0040E2  3604               	rlcf	___lwmod@divisor^0,f,c
  8238  0040E4  3605               	rlcf	(___lwmod@divisor+1)^0,f,c
  8239  0040E6  2A06               	incf	___lwmod@counter^0,f,c
  8240  0040E8                     l6063:
  8241  0040E8  AE05               	btfss	(___lwmod@divisor+1)^0,7,c
  8242  0040EA  EF79  F020         	goto	u6741
  8243  0040EE  EF7B  F020         	goto	u6740
  8244  0040F2                     u6741:
  8245  0040F2  EF70  F020         	goto	l6061
  8246  0040F6                     u6740:
  8247  0040F6                     l6065:
  8248  0040F6  5004               	movf	___lwmod@divisor^0,w,c
  8249  0040F8  5C02               	subwf	___lwmod@dividend^0,w,c
  8250  0040FA  5005               	movf	(___lwmod@divisor+1)^0,w,c
  8251  0040FC  5803               	subwfb	(___lwmod@dividend+1)^0,w,c
  8252  0040FE  A0D8               	btfss	status,0,c
  8253  004100  EF84  F020         	goto	u6751
  8254  004104  EF86  F020         	goto	u6750
  8255  004108                     u6751:
  8256  004108  EF8A  F020         	goto	l6069
  8257  00410C                     u6750:
  8258  00410C  5004               	movf	___lwmod@divisor^0,w,c
  8259  00410E  5E02               	subwf	___lwmod@dividend^0,f,c
  8260  004110  5005               	movf	(___lwmod@divisor+1)^0,w,c
  8261  004112  5A03               	subwfb	(___lwmod@dividend+1)^0,f,c
  8262  004114                     l6069:
  8263  004114  90D8               	bcf	status,0,c
  8264  004116  3205               	rrcf	(___lwmod@divisor+1)^0,f,c
  8265  004118  3204               	rrcf	___lwmod@divisor^0,f,c
  8266  00411A  2E06               	decfsz	___lwmod@counter^0,f,c
  8267  00411C  EF7B  F020         	goto	l6065
  8268  004120                     l1289:
  8269  004120  C002  F002         	movff	___lwmod@dividend,?___lwmod
  8270  004124  C003  F003         	movff	___lwmod@dividend+1,?___lwmod+1
  8271  004128  0012               	return		;funcret
  8272  00412A                     __end_of___lwmod:
  8273                           	callstack 0
  8274                           
  8275 ;; *************** function ___lwdiv *****************
  8276 ;; Defined at:
  8277 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  8278 ;; Parameters:    Size  Location     Type
  8279 ;;  dividend        2    6[COMRAM] unsigned int 
  8280 ;;  divisor         2    8[COMRAM] unsigned int 
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;  quotient        2   11[COMRAM] unsigned int 
  8283 ;;  counter         1   10[COMRAM] unsigned char 
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  2    6[COMRAM] unsigned int 
  8286 ;; Registers used:
  8287 ;;		wreg, status,2, status,0
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8293 ;;      Params:         4       0       0       0       0       0       0       0       0
  8294 ;;      Locals:         3       0       0       0       0       0       0       0       0
  8295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8296 ;;      Totals:         7       0       0       0       0       0       0       0       0
  8297 ;;Total ram usage:        7 bytes
  8298 ;; Hardware stack levels used: 1
  8299 ;; Hardware stack levels required when called: 3
  8300 ;; This function calls:
  8301 ;;		Nothing
  8302 ;; This function is called by:
  8303 ;;		_fround
  8304 ;; This function uses a non-reentrant model
  8305 ;;
  8306                           
  8307                           	psect	text29
  8308  003FE6                     __ptext29:
  8309                           	callstack 0
  8310  003FE6                     ___lwdiv:
  8311                           	callstack 24
  8312  003FE6  0E00               	movlw	0
  8313  003FE8  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
  8314  003FEA  0E00               	movlw	0
  8315  003FEC  6E0C               	movwf	___lwdiv@quotient^0,c
  8316  003FEE  5009               	movf	___lwdiv@divisor^0,w,c
  8317  003FF0  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  8318  003FF2  B4D8               	btfsc	status,2,c
  8319  003FF4  EFFE  F01F         	goto	u6701
  8320  003FF8  EF00  F020         	goto	u6700
  8321  003FFC                     u6701:
  8322  003FFC  EF28  F020         	goto	l1279
  8323  004000                     u6700:
  8324  004000  0E01               	movlw	1
  8325  004002  6E0B               	movwf	___lwdiv@counter^0,c
  8326  004004  EF08  F020         	goto	l6043
  8327  004008                     l6041:
  8328  004008  90D8               	bcf	status,0,c
  8329  00400A  3609               	rlcf	___lwdiv@divisor^0,f,c
  8330  00400C  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  8331  00400E  2A0B               	incf	___lwdiv@counter^0,f,c
  8332  004010                     l6043:
  8333  004010  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  8334  004012  EF0D  F020         	goto	u6711
  8335  004016  EF0F  F020         	goto	u6710
  8336  00401A                     u6711:
  8337  00401A  EF04  F020         	goto	l6041
  8338  00401E                     u6710:
  8339  00401E                     l6045:
  8340  00401E  90D8               	bcf	status,0,c
  8341  004020  360C               	rlcf	___lwdiv@quotient^0,f,c
  8342  004022  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
  8343  004024  5009               	movf	___lwdiv@divisor^0,w,c
  8344  004026  5C07               	subwf	___lwdiv@dividend^0,w,c
  8345  004028  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8346  00402A  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  8347  00402C  A0D8               	btfss	status,0,c
  8348  00402E  EF1B  F020         	goto	u6721
  8349  004032  EF1D  F020         	goto	u6720
  8350  004036                     u6721:
  8351  004036  EF22  F020         	goto	l6053
  8352  00403A                     u6720:
  8353  00403A  5009               	movf	___lwdiv@divisor^0,w,c
  8354  00403C  5E07               	subwf	___lwdiv@dividend^0,f,c
  8355  00403E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  8356  004040  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  8357  004042  800C               	bsf	___lwdiv@quotient^0,0,c
  8358  004044                     l6053:
  8359  004044  90D8               	bcf	status,0,c
  8360  004046  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  8361  004048  3209               	rrcf	___lwdiv@divisor^0,f,c
  8362  00404A  2E0B               	decfsz	___lwdiv@counter^0,f,c
  8363  00404C  EF0F  F020         	goto	l6045
  8364  004050                     l1279:
  8365  004050  C00C  F007         	movff	___lwdiv@quotient,?___lwdiv
  8366  004054  C00D  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  8367  004058  0012               	return		;funcret
  8368  00405A                     __end_of___lwdiv:
  8369                           	callstack 0
  8370                           
  8371 ;; *************** function ___flmul *****************
  8372 ;; Defined at:
  8373 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcmul.c"
  8374 ;; Parameters:    Size  Location     Type
  8375 ;;  b               4   70[COMRAM] unsigned int 
  8376 ;;  a               4   74[COMRAM] unsigned int 
  8377 ;; Auto vars:     Size  Location     Type
  8378 ;;  prod            4    7[BANK0 ] struct .
  8379 ;;  grs             4    2[BANK0 ] unsigned long 
  8380 ;;  temp            2   11[BANK0 ] struct .
  8381 ;;  bexp            1    6[BANK0 ] unsigned char 
  8382 ;;  aexp            1    1[BANK0 ] unsigned char 
  8383 ;;  sign            1    0[BANK0 ] unsigned char 
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  4   70[COMRAM] unsigned char 
  8386 ;; Registers used:
  8387 ;;		wreg, status,2, status,0, prodl, prodh
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8393 ;;      Params:         8       0       0       0       0       0       0       0       0
  8394 ;;      Locals:         0      13       0       0       0       0       0       0       0
  8395 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8396 ;;      Totals:        12      13       0       0       0       0       0       0       0
  8397 ;;Total ram usage:       25 bytes
  8398 ;; Hardware stack levels used: 1
  8399 ;; Hardware stack levels required when called: 3
  8400 ;; This function calls:
  8401 ;;		Nothing
  8402 ;; This function is called by:
  8403 ;;		_ComputeWaterVol
  8404 ;;		_InitTankVariables
  8405 ;;		_fround
  8406 ;;		_scale
  8407 ;;		_sprintf
  8408 ;;		_pow
  8409 ;;		_exp
  8410 ;;		_eval_poly
  8411 ;;		_log
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           	psect	text30
  8416  0011E6                     __ptext30:
  8417                           	callstack 0
  8418  0011E6                     ___flmul:
  8419                           	callstack 23
  8420  0011E6  504A               	movf	(___flmul@b+3)^0,w,c
  8421  0011E8  0B80               	andlw	128
  8422  0011EA  0100               	movlb	0	; () banked
  8423  0011EC  6F60               	movwf	___flmul@sign& (0+255),b
  8424  0011EE  504A               	movf	(___flmul@b+3)^0,w,c
  8425  0011F0  244A               	addwf	(___flmul@b+3)^0,w,c
  8426  0011F2  6F66               	movwf	___flmul@bexp& (0+255),b
  8427  0011F4                     
  8428                           ; BSR set to: 0
  8429  0011F4  AE49               	btfss	(___flmul@b+2)^0,7,c
  8430  0011F6  EFFF  F008         	goto	u6141
  8431  0011FA  EF01  F009         	goto	u6140
  8432  0011FE                     u6141:
  8433  0011FE  EF02  F009         	goto	l5685
  8434  001202                     u6140:
  8435  001202                     
  8436                           ; BSR set to: 0
  8437  001202  8166               	bsf	___flmul@bexp& (0+255),0,b
  8438  001204                     l5685:
  8439                           
  8440                           ; BSR set to: 0
  8441  001204  5166               	movf	___flmul@bexp& (0+255),w,b
  8442  001206  B4D8               	btfsc	status,2,c
  8443  001208  EF08  F009         	goto	u6151
  8444  00120C  EF0A  F009         	goto	u6150
  8445  001210                     u6151:
  8446  001210  EF1D  F009         	goto	l5693
  8447  001214                     u6150:
  8448  001214                     
  8449                           ; BSR set to: 0
  8450  001214  2966               	incf	___flmul@bexp& (0+255),w,b
  8451  001216  A4D8               	btfss	status,2,c
  8452  001218  EF10  F009         	goto	u6161
  8453  00121C  EF12  F009         	goto	u6160
  8454  001220                     u6161:
  8455  001220  EF1A  F009         	goto	l5691
  8456  001224                     u6160:
  8457  001224                     
  8458                           ; BSR set to: 0
  8459  001224  0E00               	movlw	0
  8460  001226  6E47               	movwf	___flmul@b^0,c
  8461  001228  0E00               	movlw	0
  8462  00122A  6E48               	movwf	(___flmul@b+1)^0,c
  8463  00122C  0E00               	movlw	0
  8464  00122E  6E49               	movwf	(___flmul@b+2)^0,c
  8465  001230  0E00               	movlw	0
  8466  001232  6E4A               	movwf	(___flmul@b+3)^0,c
  8467  001234                     l5691:
  8468                           
  8469                           ; BSR set to: 0
  8470  001234  8E49               	bsf	(___flmul@b+2)^0,7,c
  8471  001236  EF25  F009         	goto	l5695
  8472  00123A                     l5693:
  8473                           
  8474                           ; BSR set to: 0
  8475  00123A  0E00               	movlw	0
  8476  00123C  6E47               	movwf	___flmul@b^0,c
  8477  00123E  0E00               	movlw	0
  8478  001240  6E48               	movwf	(___flmul@b+1)^0,c
  8479  001242  0E00               	movlw	0
  8480  001244  6E49               	movwf	(___flmul@b+2)^0,c
  8481  001246  0E00               	movlw	0
  8482  001248  6E4A               	movwf	(___flmul@b+3)^0,c
  8483  00124A                     l5695:
  8484                           
  8485                           ; BSR set to: 0
  8486  00124A  504E               	movf	(___flmul@a+3)^0,w,c
  8487  00124C  0B80               	andlw	128
  8488  00124E  1B60               	xorwf	___flmul@sign& (0+255),f,b
  8489  001250                     
  8490                           ; BSR set to: 0
  8491  001250  504E               	movf	(___flmul@a+3)^0,w,c
  8492  001252  244E               	addwf	(___flmul@a+3)^0,w,c
  8493  001254  6F61               	movwf	___flmul@aexp& (0+255),b
  8494  001256                     
  8495                           ; BSR set to: 0
  8496  001256  AE4D               	btfss	(___flmul@a+2)^0,7,c
  8497  001258  EF30  F009         	goto	u6171
  8498  00125C  EF32  F009         	goto	u6170
  8499  001260                     u6171:
  8500  001260  EF33  F009         	goto	l5703
  8501  001264                     u6170:
  8502  001264                     
  8503                           ; BSR set to: 0
  8504  001264  8161               	bsf	___flmul@aexp& (0+255),0,b
  8505  001266                     l5703:
  8506                           
  8507                           ; BSR set to: 0
  8508  001266  5161               	movf	___flmul@aexp& (0+255),w,b
  8509  001268  B4D8               	btfsc	status,2,c
  8510  00126A  EF39  F009         	goto	u6181
  8511  00126E  EF3B  F009         	goto	u6180
  8512  001272                     u6181:
  8513  001272  EF4E  F009         	goto	l5711
  8514  001276                     u6180:
  8515  001276                     
  8516                           ; BSR set to: 0
  8517  001276  2961               	incf	___flmul@aexp& (0+255),w,b
  8518  001278  A4D8               	btfss	status,2,c
  8519  00127A  EF41  F009         	goto	u6191
  8520  00127E  EF43  F009         	goto	u6190
  8521  001282                     u6191:
  8522  001282  EF4B  F009         	goto	l5709
  8523  001286                     u6190:
  8524  001286                     
  8525                           ; BSR set to: 0
  8526  001286  0E00               	movlw	0
  8527  001288  6E4B               	movwf	___flmul@a^0,c
  8528  00128A  0E00               	movlw	0
  8529  00128C  6E4C               	movwf	(___flmul@a+1)^0,c
  8530  00128E  0E00               	movlw	0
  8531  001290  6E4D               	movwf	(___flmul@a+2)^0,c
  8532  001292  0E00               	movlw	0
  8533  001294  6E4E               	movwf	(___flmul@a+3)^0,c
  8534  001296                     l5709:
  8535                           
  8536                           ; BSR set to: 0
  8537  001296  8E4D               	bsf	(___flmul@a+2)^0,7,c
  8538  001298  EF56  F009         	goto	l1402
  8539  00129C                     l5711:
  8540                           
  8541                           ; BSR set to: 0
  8542  00129C  0E00               	movlw	0
  8543  00129E  6E4B               	movwf	___flmul@a^0,c
  8544  0012A0  0E00               	movlw	0
  8545  0012A2  6E4C               	movwf	(___flmul@a+1)^0,c
  8546  0012A4  0E00               	movlw	0
  8547  0012A6  6E4D               	movwf	(___flmul@a+2)^0,c
  8548  0012A8  0E00               	movlw	0
  8549  0012AA  6E4E               	movwf	(___flmul@a+3)^0,c
  8550  0012AC                     l1402:
  8551                           
  8552                           ; BSR set to: 0
  8553  0012AC  5161               	movf	___flmul@aexp& (0+255),w,b
  8554  0012AE  B4D8               	btfsc	status,2,c
  8555  0012B0  EF5C  F009         	goto	u6201
  8556  0012B4  EF5E  F009         	goto	u6200
  8557  0012B8                     u6201:
  8558  0012B8  EF66  F009         	goto	l5715
  8559  0012BC                     u6200:
  8560  0012BC                     
  8561                           ; BSR set to: 0
  8562  0012BC  5166               	movf	___flmul@bexp& (0+255),w,b
  8563  0012BE  A4D8               	btfss	status,2,c
  8564  0012C0  EF64  F009         	goto	u6211
  8565  0012C4  EF66  F009         	goto	u6210
  8566  0012C8                     u6211:
  8567  0012C8  EF70  F009         	goto	l5719
  8568  0012CC                     u6210:
  8569  0012CC                     l5715:
  8570                           
  8571                           ; BSR set to: 0
  8572  0012CC  0E00               	movlw	0
  8573  0012CE  6E47               	movwf	?___flmul^0,c
  8574  0012D0  0E00               	movlw	0
  8575  0012D2  6E48               	movwf	(?___flmul+1)^0,c
  8576  0012D4  0E00               	movlw	0
  8577  0012D6  6E49               	movwf	(?___flmul+2)^0,c
  8578  0012D8  0E00               	movlw	0
  8579  0012DA  6E4A               	movwf	(?___flmul+3)^0,c
  8580  0012DC  EF08  F00B         	goto	l1406
  8581  0012E0                     l5719:
  8582                           
  8583                           ; BSR set to: 0
  8584  0012E0  504D               	movf	(___flmul@a+2)^0,w,c
  8585  0012E2  0247               	mulwf	___flmul@b^0,c
  8586  0012E4  CFF3 F06B          	movff	prodl,___flmul@temp
  8587  0012E8  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8588  0012EC                     
  8589                           ; BSR set to: 0
  8590  0012EC  516B               	movf	___flmul@temp& (0+255),w,b
  8591  0012EE  6F62               	movwf	___flmul@grs& (0+255),b
  8592  0012F0  6B63               	clrf	(___flmul@grs+1)& (0+255),b
  8593  0012F2  6B64               	clrf	(___flmul@grs+2)& (0+255),b
  8594  0012F4  6B65               	clrf	(___flmul@grs+3)& (0+255),b
  8595  0012F6                     
  8596                           ; BSR set to: 0
  8597  0012F6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8598  0012F8  6F67               	movwf	___flmul@prod& (0+255),b
  8599  0012FA  6B68               	clrf	(___flmul@prod+1)& (0+255),b
  8600  0012FC  6B69               	clrf	(___flmul@prod+2)& (0+255),b
  8601  0012FE  6B6A               	clrf	(___flmul@prod+3)& (0+255),b
  8602  001300  504C               	movf	(___flmul@a+1)^0,w,c
  8603  001302  0248               	mulwf	(___flmul@b+1)^0,c
  8604  001304  CFF3 F06B          	movff	prodl,___flmul@temp
  8605  001308  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8606  00130C                     
  8607                           ; BSR set to: 0
  8608  00130C  516B               	movf	___flmul@temp& (0+255),w,b
  8609  00130E  2762               	addwf	___flmul@grs& (0+255),f,b
  8610  001310  0E00               	movlw	0
  8611  001312  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8612  001314  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8613  001316  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8614  001318                     
  8615                           ; BSR set to: 0
  8616  001318  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8617  00131A  2767               	addwf	___flmul@prod& (0+255),f,b
  8618  00131C  0E00               	movlw	0
  8619  00131E  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8620  001320  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8621  001322  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8622  001324  504B               	movf	___flmul@a^0,w,c
  8623  001326  0249               	mulwf	(___flmul@b+2)^0,c
  8624  001328  CFF3 F06B          	movff	prodl,___flmul@temp
  8625  00132C  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8626  001330                     
  8627                           ; BSR set to: 0
  8628  001330  516B               	movf	___flmul@temp& (0+255),w,b
  8629  001332  2762               	addwf	___flmul@grs& (0+255),f,b
  8630  001334  0E00               	movlw	0
  8631  001336  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8632  001338  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8633  00133A  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8634  00133C                     
  8635                           ; BSR set to: 0
  8636  00133C  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8637  00133E  2767               	addwf	___flmul@prod& (0+255),f,b
  8638  001340  0E00               	movlw	0
  8639  001342  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8640  001344  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8641  001346  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8642  001348                     
  8643                           ; BSR set to: 0
  8644  001348  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  8645  00134C  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  8646  001350  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  8647  001354  6B62               	clrf	___flmul@grs& (0+255),b
  8648  001356                     
  8649                           ; BSR set to: 0
  8650  001356  504B               	movf	___flmul@a^0,w,c
  8651  001358  0248               	mulwf	(___flmul@b+1)^0,c
  8652  00135A  CFF3 F06B          	movff	prodl,___flmul@temp
  8653  00135E  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8654  001362                     
  8655                           ; BSR set to: 0
  8656  001362  516B               	movf	___flmul@temp& (0+255),w,b
  8657  001364  2762               	addwf	___flmul@grs& (0+255),f,b
  8658  001366  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8659  001368  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8660  00136A  0E00               	movlw	0
  8661  00136C  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8662  00136E  0E00               	movlw	0
  8663  001370  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8664  001372                     
  8665                           ; BSR set to: 0
  8666  001372  504C               	movf	(___flmul@a+1)^0,w,c
  8667  001374  0247               	mulwf	___flmul@b^0,c
  8668  001376  CFF3 F06B          	movff	prodl,___flmul@temp
  8669  00137A  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8670  00137E                     
  8671                           ; BSR set to: 0
  8672  00137E  516B               	movf	___flmul@temp& (0+255),w,b
  8673  001380  2762               	addwf	___flmul@grs& (0+255),f,b
  8674  001382  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8675  001384  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8676  001386  0E00               	movlw	0
  8677  001388  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8678  00138A  0E00               	movlw	0
  8679  00138C  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8680  00138E                     
  8681                           ; BSR set to: 0
  8682  00138E  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  8683  001392  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  8684  001396  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  8685  00139A  6B62               	clrf	___flmul@grs& (0+255),b
  8686  00139C  504B               	movf	___flmul@a^0,w,c
  8687  00139E  0247               	mulwf	___flmul@b^0,c
  8688  0013A0  CFF3 F06B          	movff	prodl,___flmul@temp
  8689  0013A4  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8690  0013A8                     
  8691                           ; BSR set to: 0
  8692  0013A8  516B               	movf	___flmul@temp& (0+255),w,b
  8693  0013AA  2762               	addwf	___flmul@grs& (0+255),f,b
  8694  0013AC  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8695  0013AE  2363               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8696  0013B0  0E00               	movlw	0
  8697  0013B2  2364               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8698  0013B4  0E00               	movlw	0
  8699  0013B6  2365               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8700  0013B8                     
  8701                           ; BSR set to: 0
  8702  0013B8  504D               	movf	(___flmul@a+2)^0,w,c
  8703  0013BA  0248               	mulwf	(___flmul@b+1)^0,c
  8704  0013BC  CFF3 F06B          	movff	prodl,___flmul@temp
  8705  0013C0  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8706  0013C4  516B               	movf	___flmul@temp& (0+255),w,b
  8707  0013C6  2767               	addwf	___flmul@prod& (0+255),f,b
  8708  0013C8  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8709  0013CA  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8710  0013CC  0E00               	movlw	0
  8711  0013CE  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8712  0013D0  0E00               	movlw	0
  8713  0013D2  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8714  0013D4                     
  8715                           ; BSR set to: 0
  8716  0013D4  504C               	movf	(___flmul@a+1)^0,w,c
  8717  0013D6  0249               	mulwf	(___flmul@b+2)^0,c
  8718  0013D8  CFF3 F06B          	movff	prodl,___flmul@temp
  8719  0013DC  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8720  0013E0                     
  8721                           ; BSR set to: 0
  8722  0013E0  516B               	movf	___flmul@temp& (0+255),w,b
  8723  0013E2  2767               	addwf	___flmul@prod& (0+255),f,b
  8724  0013E4  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8725  0013E6  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8726  0013E8  0E00               	movlw	0
  8727  0013EA  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8728  0013EC  0E00               	movlw	0
  8729  0013EE  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8730  0013F0  504D               	movf	(___flmul@a+2)^0,w,c
  8731  0013F2  0249               	mulwf	(___flmul@b+2)^0,c
  8732  0013F4  CFF3 F06B          	movff	prodl,___flmul@temp
  8733  0013F8  CFF4 F06C          	movff	prodh,___flmul@temp+1
  8734  0013FC                     
  8735                           ; BSR set to: 0
  8736  0013FC  516B               	movf	___flmul@temp& (0+255),w,b
  8737  0013FE  6E4F               	movwf	??___flmul^0,c
  8738  001400  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8739  001402  6E50               	movwf	(??___flmul+1)^0,c
  8740  001404  6A51               	clrf	(??___flmul+2)^0,c
  8741  001406  6A52               	clrf	(??___flmul+3)^0,c
  8742  001408  C051  F052         	movff	??___flmul+2,??___flmul+3
  8743  00140C  C050  F051         	movff	??___flmul+1,??___flmul+2
  8744  001410  C04F  F050         	movff	??___flmul,??___flmul+1
  8745  001414  6A4F               	clrf	??___flmul^0,c
  8746  001416  504F               	movf	??___flmul^0,w,c
  8747  001418  2767               	addwf	___flmul@prod& (0+255),f,b
  8748  00141A  5050               	movf	(??___flmul+1)^0,w,c
  8749  00141C  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8750  00141E  5051               	movf	(??___flmul+2)^0,w,c
  8751  001420  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8752  001422  5052               	movf	(??___flmul+3)^0,w,c
  8753  001424  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8754  001426                     
  8755                           ; BSR set to: 0
  8756  001426  C062  F04F         	movff	___flmul@grs,??___flmul
  8757  00142A  C063  F050         	movff	___flmul@grs+1,??___flmul+1
  8758  00142E  C064  F051         	movff	___flmul@grs+2,??___flmul+2
  8759  001432  C065  F052         	movff	___flmul@grs+3,??___flmul+3
  8760  001436  0E19               	movlw	25
  8761  001438  EF23  F00A         	goto	u6220
  8762  00143C                     u6225:
  8763  00143C  90D8               	bcf	status,0,c
  8764  00143E  3252               	rrcf	(??___flmul+3)^0,f,c
  8765  001440  3251               	rrcf	(??___flmul+2)^0,f,c
  8766  001442  3250               	rrcf	(??___flmul+1)^0,f,c
  8767  001444  324F               	rrcf	??___flmul^0,f,c
  8768  001446                     u6220:
  8769  001446  2EE8               	decfsz	wreg,f,c
  8770  001448  EF1E  F00A         	goto	u6225
  8771  00144C  504F               	movf	??___flmul^0,w,c
  8772  00144E  2767               	addwf	___flmul@prod& (0+255),f,b
  8773  001450  5050               	movf	(??___flmul+1)^0,w,c
  8774  001452  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8775  001454  5051               	movf	(??___flmul+2)^0,w,c
  8776  001456  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8777  001458  5052               	movf	(??___flmul+3)^0,w,c
  8778  00145A  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8779  00145C                     
  8780                           ; BSR set to: 0
  8781  00145C  C064  F065         	movff	___flmul@grs+2,___flmul@grs+3
  8782  001460  C063  F064         	movff	___flmul@grs+1,___flmul@grs+2
  8783  001464  C062  F063         	movff	___flmul@grs,___flmul@grs+1
  8784  001468  6B62               	clrf	___flmul@grs& (0+255),b
  8785  00146A                     
  8786                           ; BSR set to: 0
  8787  00146A  5161               	movf	___flmul@aexp& (0+255),w,b
  8788  00146C  C066  F04F         	movff	___flmul@bexp,??___flmul
  8789  001470  6A50               	clrf	(??___flmul+1)^0,c
  8790  001472  264F               	addwf	??___flmul^0,f,c
  8791  001474  0E00               	movlw	0
  8792  001476  2250               	addwfc	(??___flmul+1)^0,f,c
  8793  001478  0E82               	movlw	130
  8794  00147A  244F               	addwf	??___flmul^0,w,c
  8795  00147C  6F6B               	movwf	___flmul@temp& (0+255),b
  8796  00147E  0EFF               	movlw	255
  8797  001480  2050               	addwfc	(??___flmul+1)^0,w,c
  8798  001482  6F6C               	movwf	(___flmul@temp+1)& (0+255),b
  8799  001484  EF59  F00A         	goto	l5767
  8800  001488                     l5761:
  8801                           
  8802                           ; BSR set to: 0
  8803  001488  90D8               	bcf	status,0,c
  8804  00148A  3767               	rlcf	___flmul@prod& (0+255),f,b
  8805  00148C  3768               	rlcf	(___flmul@prod+1)& (0+255),f,b
  8806  00148E  3769               	rlcf	(___flmul@prod+2)& (0+255),f,b
  8807  001490  376A               	rlcf	(___flmul@prod+3)& (0+255),f,b
  8808  001492                     
  8809                           ; BSR set to: 0
  8810  001492  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  8811  001494  EF4E  F00A         	goto	u6231
  8812  001498  EF50  F00A         	goto	u6230
  8813  00149C                     u6231:
  8814  00149C  EF51  F00A         	goto	l1409
  8815  0014A0                     u6230:
  8816  0014A0                     
  8817                           ; BSR set to: 0
  8818  0014A0  8167               	bsf	___flmul@prod& (0+255),0,b
  8819  0014A2                     l1409:
  8820                           
  8821                           ; BSR set to: 0
  8822  0014A2  90D8               	bcf	status,0,c
  8823  0014A4  3762               	rlcf	___flmul@grs& (0+255),f,b
  8824  0014A6  3763               	rlcf	(___flmul@grs+1)& (0+255),f,b
  8825  0014A8  3764               	rlcf	(___flmul@grs+2)& (0+255),f,b
  8826  0014AA  3765               	rlcf	(___flmul@grs+3)& (0+255),f,b
  8827  0014AC  076B               	decf	___flmul@temp& (0+255),f,b
  8828  0014AE  A0D8               	btfss	status,0,c
  8829  0014B0  076C               	decf	(___flmul@temp+1)& (0+255),f,b
  8830  0014B2                     l5767:
  8831                           
  8832                           ; BSR set to: 0
  8833  0014B2  AF69               	btfss	(___flmul@prod+2)& (0+255),7,b
  8834  0014B4  EF5E  F00A         	goto	u6241
  8835  0014B8  EF60  F00A         	goto	u6240
  8836  0014BC                     u6241:
  8837  0014BC  EF44  F00A         	goto	l5761
  8838  0014C0                     u6240:
  8839  0014C0                     
  8840                           ; BSR set to: 0
  8841  0014C0  0E00               	movlw	0
  8842  0014C2  6F61               	movwf	___flmul@aexp& (0+255),b
  8843  0014C4                     
  8844                           ; BSR set to: 0
  8845  0014C4  AF65               	btfss	(___flmul@grs+3)& (0+255),7,b
  8846  0014C6  EF67  F00A         	goto	u6251
  8847  0014CA  EF69  F00A         	goto	u6250
  8848  0014CE                     u6251:
  8849  0014CE  EF8D  F00A         	goto	l1411
  8850  0014D2                     u6250:
  8851  0014D2                     
  8852                           ; BSR set to: 0
  8853  0014D2  0EFF               	movlw	255
  8854  0014D4  1562               	andwf	___flmul@grs& (0+255),w,b
  8855  0014D6  6E4F               	movwf	??___flmul^0,c
  8856  0014D8  0EFF               	movlw	255
  8857  0014DA  1563               	andwf	(___flmul@grs+1)& (0+255),w,b
  8858  0014DC  6E50               	movwf	(??___flmul+1)^0,c
  8859  0014DE  0EFF               	movlw	255
  8860  0014E0  1564               	andwf	(___flmul@grs+2)& (0+255),w,b
  8861  0014E2  6E51               	movwf	(??___flmul+2)^0,c
  8862  0014E4  0E7F               	movlw	127
  8863  0014E6  1565               	andwf	(___flmul@grs+3)& (0+255),w,b
  8864  0014E8  6E52               	movwf	(??___flmul+3)^0,c
  8865  0014EA  504F               	movf	??___flmul^0,w,c
  8866  0014EC  1050               	iorwf	(??___flmul+1)^0,w,c
  8867  0014EE  1051               	iorwf	(??___flmul+2)^0,w,c
  8868  0014F0  1052               	iorwf	(??___flmul+3)^0,w,c
  8869  0014F2  B4D8               	btfsc	status,2,c
  8870  0014F4  EF7E  F00A         	goto	u6261
  8871  0014F8  EF80  F00A         	goto	u6260
  8872  0014FC                     u6261:
  8873  0014FC  EF84  F00A         	goto	l1412
  8874  001500                     u6260:
  8875  001500                     l5775:
  8876                           
  8877                           ; BSR set to: 0
  8878  001500  0E01               	movlw	1
  8879  001502  6F61               	movwf	___flmul@aexp& (0+255),b
  8880  001504  EF8D  F00A         	goto	l1411
  8881  001508                     l1412:
  8882                           
  8883                           ; BSR set to: 0
  8884  001508  A167               	btfss	___flmul@prod& (0+255),0,b
  8885  00150A  EF89  F00A         	goto	u6271
  8886  00150E  EF8B  F00A         	goto	u6270
  8887  001512                     u6271:
  8888  001512  EF8D  F00A         	goto	l1411
  8889  001516                     u6270:
  8890  001516  EF80  F00A         	goto	l5775
  8891  00151A                     l1411:
  8892                           
  8893                           ; BSR set to: 0
  8894  00151A  5161               	movf	___flmul@aexp& (0+255),w,b
  8895  00151C  B4D8               	btfsc	status,2,c
  8896  00151E  EF93  F00A         	goto	u6281
  8897  001522  EF95  F00A         	goto	u6280
  8898  001526                     u6281:
  8899  001526  EFB9  F00A         	goto	l5787
  8900  00152A                     u6280:
  8901  00152A                     
  8902                           ; BSR set to: 0
  8903  00152A  0E01               	movlw	1
  8904  00152C  2767               	addwf	___flmul@prod& (0+255),f,b
  8905  00152E  0E00               	movlw	0
  8906  001530  2368               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8907  001532  2369               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8908  001534  236A               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8909  001536                     
  8910                           ; BSR set to: 0
  8911  001536  A16A               	btfss	(___flmul@prod+3)& (0+255),0,b
  8912  001538  EFA0  F00A         	goto	u6291
  8913  00153C  EFA2  F00A         	goto	u6290
  8914  001540                     u6291:
  8915  001540  EFB9  F00A         	goto	l5787
  8916  001544                     u6290:
  8917  001544                     
  8918                           ; BSR set to: 0
  8919  001544  C067  F04F         	movff	___flmul@prod,??___flmul
  8920  001548  C068  F050         	movff	___flmul@prod+1,??___flmul+1
  8921  00154C  C069  F051         	movff	___flmul@prod+2,??___flmul+2
  8922  001550  C06A  F052         	movff	___flmul@prod+3,??___flmul+3
  8923  001554  3452               	rlcf	(??___flmul+3)^0,w,c
  8924  001556  3252               	rrcf	(??___flmul+3)^0,f,c
  8925  001558  3251               	rrcf	(??___flmul+2)^0,f,c
  8926  00155A  3250               	rrcf	(??___flmul+1)^0,f,c
  8927  00155C  324F               	rrcf	??___flmul^0,f,c
  8928  00155E  C04F  F067         	movff	??___flmul,___flmul@prod
  8929  001562  C050  F068         	movff	??___flmul+1,___flmul@prod+1
  8930  001566  C051  F069         	movff	??___flmul+2,___flmul@prod+2
  8931  00156A  C052  F06A         	movff	??___flmul+3,___flmul@prod+3
  8932  00156E                     
  8933                           ; BSR set to: 0
  8934  00156E  4B6B               	infsnz	___flmul@temp& (0+255),f,b
  8935  001570  2B6C               	incf	(___flmul@temp+1)& (0+255),f,b
  8936  001572                     l5787:
  8937                           
  8938                           ; BSR set to: 0
  8939  001572  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8940  001574  EFC4  F00A         	goto	u6301
  8941  001578  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8942  00157A  E108               	bnz	u6300
  8943  00157C  296B               	incf	___flmul@temp& (0+255),w,b
  8944  00157E  A0D8               	btfss	status,0,c
  8945  001580  EFC4  F00A         	goto	u6301
  8946  001584  EFC6  F00A         	goto	u6300
  8947  001588                     u6301:
  8948  001588  EFD0  F00A         	goto	l5791
  8949  00158C                     u6300:
  8950  00158C                     
  8951                           ; BSR set to: 0
  8952  00158C  0E00               	movlw	0
  8953  00158E  6F67               	movwf	___flmul@prod& (0+255),b
  8954  001590  0E00               	movlw	0
  8955  001592  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8956  001594  0E80               	movlw	128
  8957  001596  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8958  001598  0E7F               	movlw	127
  8959  00159A  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8960  00159C  EFFE  F00A         	goto	l5803
  8961  0015A0                     l5791:
  8962                           
  8963                           ; BSR set to: 0
  8964  0015A0  BF6C               	btfsc	(___flmul@temp+1)& (0+255),7,b
  8965  0015A2  EFDD  F00A         	goto	u6310
  8966  0015A6  516C               	movf	(___flmul@temp+1)& (0+255),w,b
  8967  0015A8  E106               	bnz	u6311
  8968  0015AA  056B               	decf	___flmul@temp& (0+255),w,b
  8969  0015AC  B0D8               	btfsc	status,0,c
  8970  0015AE  EFDB  F00A         	goto	u6311
  8971  0015B2  EFDD  F00A         	goto	u6310
  8972  0015B6                     u6311:
  8973  0015B6  EFE9  F00A         	goto	l1419
  8974  0015BA                     u6310:
  8975  0015BA                     
  8976                           ; BSR set to: 0
  8977  0015BA  0E00               	movlw	0
  8978  0015BC  6F67               	movwf	___flmul@prod& (0+255),b
  8979  0015BE  0E00               	movlw	0
  8980  0015C0  6F68               	movwf	(___flmul@prod+1)& (0+255),b
  8981  0015C2  0E00               	movlw	0
  8982  0015C4  6F69               	movwf	(___flmul@prod+2)& (0+255),b
  8983  0015C6  0E00               	movlw	0
  8984  0015C8  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  8985  0015CA  0E00               	movlw	0
  8986  0015CC  6F60               	movwf	___flmul@sign& (0+255),b
  8987  0015CE  EFFE  F00A         	goto	l5803
  8988  0015D2                     l1419:
  8989                           
  8990                           ; BSR set to: 0
  8991  0015D2  C06B  F066         	movff	___flmul@temp,___flmul@bexp
  8992  0015D6                     
  8993                           ; BSR set to: 0
  8994  0015D6  0EFF               	movlw	255
  8995  0015D8  1767               	andwf	___flmul@prod& (0+255),f,b
  8996  0015DA  0EFF               	movlw	255
  8997  0015DC  1768               	andwf	(___flmul@prod+1)& (0+255),f,b
  8998  0015DE  0E7F               	movlw	127
  8999  0015E0  1769               	andwf	(___flmul@prod+2)& (0+255),f,b
  9000  0015E2  0E00               	movlw	0
  9001  0015E4  176A               	andwf	(___flmul@prod+3)& (0+255),f,b
  9002  0015E6                     
  9003                           ; BSR set to: 0
  9004  0015E6  A166               	btfss	___flmul@bexp& (0+255),0,b
  9005  0015E8  EFF8  F00A         	goto	u6321
  9006  0015EC  EFFA  F00A         	goto	u6320
  9007  0015F0                     u6321:
  9008  0015F0  EFFB  F00A         	goto	l5801
  9009  0015F4                     u6320:
  9010  0015F4                     
  9011                           ; BSR set to: 0
  9012  0015F4  8F69               	bsf	(___flmul@prod+2)& (0+255),7,b
  9013  0015F6                     l5801:
  9014                           
  9015                           ; BSR set to: 0
  9016  0015F6  90D8               	bcf	status,0,c
  9017  0015F8  3166               	rrcf	___flmul@bexp& (0+255),w,b
  9018  0015FA  6F6A               	movwf	(___flmul@prod+3)& (0+255),b
  9019  0015FC                     l5803:
  9020                           
  9021                           ; BSR set to: 0
  9022  0015FC  5160               	movf	___flmul@sign& (0+255),w,b
  9023  0015FE  136A               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9024  001600                     
  9025                           ; BSR set to: 0
  9026  001600  C067  F047         	movff	___flmul@prod,?___flmul
  9027  001604  C068  F048         	movff	___flmul@prod+1,?___flmul+1
  9028  001608  C069  F049         	movff	___flmul@prod+2,?___flmul+2
  9029  00160C  C06A  F04A         	movff	___flmul@prod+3,?___flmul+3
  9030  001610                     l1406:
  9031                           
  9032                           ; BSR set to: 0
  9033  001610  0012               	return		;funcret
  9034  001612                     __end_of___flmul:
  9035                           	callstack 0
  9036                           
  9037 ;; *************** function __tdiv_to_l_ *****************
  9038 ;; Defined at:
  9039 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\ftdivl.c"
  9040 ;; Parameters:    Size  Location     Type
  9041 ;;  f1              4    1[COMRAM] float 
  9042 ;;  f2              4    5[COMRAM] float 
  9043 ;; Auto vars:     Size  Location     Type
  9044 ;;  quot            4   12[COMRAM] unsigned long 
  9045 ;;  exp1            1   17[COMRAM] unsigned char 
  9046 ;;  cntr            1   16[COMRAM] unsigned char 
  9047 ;; Return value:  Size  Location     Type
  9048 ;;                  4    1[COMRAM] unsigned long 
  9049 ;; Registers used:
  9050 ;;		wreg, status,2, status,0
  9051 ;; Tracked objects:
  9052 ;;		On entry : 0/0
  9053 ;;		On exit  : 0/0
  9054 ;;		Unchanged: 0/0
  9055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9056 ;;      Params:         8       0       0       0       0       0       0       0       0
  9057 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9058 ;;      Temps:          3       0       0       0       0       0       0       0       0
  9059 ;;      Totals:        17       0       0       0       0       0       0       0       0
  9060 ;;Total ram usage:       17 bytes
  9061 ;; Hardware stack levels used: 1
  9062 ;; Hardware stack levels required when called: 3
  9063 ;; This function calls:
  9064 ;;		Nothing
  9065 ;; This function is called by:
  9066 ;;		_sprintf
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070                           	psect	text31
  9071  002F74                     __ptext31:
  9072                           	callstack 0
  9073  002F74                     __tdiv_to_l_:
  9074                           	callstack 25
  9075  002F74  C004  F00A         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9076  002F78  6A0B               	clrf	(??__tdiv_to_l_+1)^0,c
  9077  002F7A  6A0C               	clrf	(??__tdiv_to_l_+2)^0,c
  9078  002F7C  3403               	rlcf	(__tdiv_to_l_@f1+1)^0,w,c
  9079  002F7E  360A               	rlcf	??__tdiv_to_l_^0,f,c
  9080  002F80  E301               	bnc	u7081
  9081  002F82  800B               	bsf	(??__tdiv_to_l_+1)^0,0,c
  9082  002F84                     u7081:
  9083  002F84  500A               	movf	??__tdiv_to_l_^0,w,c
  9084  002F86  6E12               	movwf	__tdiv_to_l_@exp1^0,c
  9085  002F88  5012               	movf	__tdiv_to_l_@exp1^0,w,c
  9086  002F8A  A4D8               	btfss	status,2,c
  9087  002F8C  EFCA  F017         	goto	u7091
  9088  002F90  EFCC  F017         	goto	u7090
  9089  002F94                     u7091:
  9090  002F94  EFD6  F017         	goto	l6237
  9091  002F98                     u7090:
  9092  002F98                     l6233:
  9093  002F98  0E00               	movlw	0
  9094  002F9A  6E02               	movwf	?__tdiv_to_l_^0,c
  9095  002F9C  0E00               	movlw	0
  9096  002F9E  6E03               	movwf	(?__tdiv_to_l_+1)^0,c
  9097  002FA0  0E00               	movlw	0
  9098  002FA2  6E04               	movwf	(?__tdiv_to_l_+2)^0,c
  9099  002FA4  0E00               	movlw	0
  9100  002FA6  6E05               	movwf	(?__tdiv_to_l_+3)^0,c
  9101  002FA8  EF64  F018         	goto	l1129
  9102  002FAC                     l6237:
  9103  002FAC  C008  F00A         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9104  002FB0  6A0B               	clrf	(??__tdiv_to_l_+1)^0,c
  9105  002FB2  6A0C               	clrf	(??__tdiv_to_l_+2)^0,c
  9106  002FB4  3407               	rlcf	(__tdiv_to_l_@f2+1)^0,w,c
  9107  002FB6  360A               	rlcf	??__tdiv_to_l_^0,f,c
  9108  002FB8  E301               	bnc	u7101
  9109  002FBA  800B               	bsf	(??__tdiv_to_l_+1)^0,0,c
  9110  002FBC                     u7101:
  9111  002FBC  500A               	movf	??__tdiv_to_l_^0,w,c
  9112  002FBE  6E11               	movwf	__tdiv_to_l_@cntr^0,c
  9113  002FC0  5011               	movf	__tdiv_to_l_@cntr^0,w,c
  9114  002FC2  A4D8               	btfss	status,2,c
  9115  002FC4  EFE6  F017         	goto	u7111
  9116  002FC8  EFE8  F017         	goto	u7110
  9117  002FCC                     u7111:
  9118  002FCC  EFEA  F017         	goto	l6243
  9119  002FD0                     u7110:
  9120  002FD0  EFCC  F017         	goto	l6233
  9121  002FD4                     l6243:
  9122  002FD4  8E03               	bsf	(__tdiv_to_l_@f1+1)^0,7,c
  9123  002FD6  0EFF               	movlw	255
  9124  002FD8  1602               	andwf	__tdiv_to_l_@f1^0,f,c
  9125  002FDA  0EFF               	movlw	255
  9126  002FDC  1603               	andwf	(__tdiv_to_l_@f1+1)^0,f,c
  9127  002FDE  0E00               	movlw	0
  9128  002FE0  1604               	andwf	(__tdiv_to_l_@f1+2)^0,f,c
  9129  002FE2  8E07               	bsf	(__tdiv_to_l_@f2+1)^0,7,c
  9130  002FE4  0EFF               	movlw	255
  9131  002FE6  1606               	andwf	__tdiv_to_l_@f2^0,f,c
  9132  002FE8  0EFF               	movlw	255
  9133  002FEA  1607               	andwf	(__tdiv_to_l_@f2+1)^0,f,c
  9134  002FEC  0E00               	movlw	0
  9135  002FEE  1608               	andwf	(__tdiv_to_l_@f2+2)^0,f,c
  9136  002FF0  0E00               	movlw	0
  9137  002FF2  6E0D               	movwf	__tdiv_to_l_@quot^0,c
  9138  002FF4  0E00               	movlw	0
  9139  002FF6  6E0E               	movwf	(__tdiv_to_l_@quot+1)^0,c
  9140  002FF8  0E00               	movlw	0
  9141  002FFA  6E0F               	movwf	(__tdiv_to_l_@quot+2)^0,c
  9142  002FFC  0E00               	movlw	0
  9143  002FFE  6E10               	movwf	(__tdiv_to_l_@quot+3)^0,c
  9144  003000  0E7F               	movlw	127
  9145  003002  5E12               	subwf	__tdiv_to_l_@exp1^0,f,c
  9146  003004  5011               	movf	__tdiv_to_l_@cntr^0,w,c
  9147  003006  0F98               	addlw	152
  9148  003008  5E12               	subwf	__tdiv_to_l_@exp1^0,f,c
  9149  00300A  0E18               	movlw	24
  9150  00300C  6E11               	movwf	__tdiv_to_l_@cntr^0,c
  9151  00300E                     l1131:
  9152  00300E  90D8               	bcf	status,0,c
  9153  003010  360D               	rlcf	__tdiv_to_l_@quot^0,f,c
  9154  003012  360E               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  9155  003014  360F               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  9156  003016  3610               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  9157  003018  5006               	movf	__tdiv_to_l_@f2^0,w,c
  9158  00301A  5C02               	subwf	__tdiv_to_l_@f1^0,w,c
  9159  00301C  5007               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  9160  00301E  5803               	subwfb	(__tdiv_to_l_@f1+1)^0,w,c
  9161  003020  5008               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  9162  003022  5804               	subwfb	(__tdiv_to_l_@f1+2)^0,w,c
  9163  003024  A0D8               	btfss	status,0,c
  9164  003026  EF17  F018         	goto	u7121
  9165  00302A  EF19  F018         	goto	u7120
  9166  00302E                     u7121:
  9167  00302E  EF20  F018         	goto	l1132
  9168  003032                     u7120:
  9169  003032  5006               	movf	__tdiv_to_l_@f2^0,w,c
  9170  003034  5E02               	subwf	__tdiv_to_l_@f1^0,f,c
  9171  003036  5007               	movf	(__tdiv_to_l_@f2+1)^0,w,c
  9172  003038  5A03               	subwfb	(__tdiv_to_l_@f1+1)^0,f,c
  9173  00303A  5008               	movf	(__tdiv_to_l_@f2+2)^0,w,c
  9174  00303C  5A04               	subwfb	(__tdiv_to_l_@f1+2)^0,f,c
  9175  00303E  800D               	bsf	__tdiv_to_l_@quot^0,0,c
  9176  003040                     l1132:
  9177  003040  90D8               	bcf	status,0,c
  9178  003042  3602               	rlcf	__tdiv_to_l_@f1^0,f,c
  9179  003044  3603               	rlcf	(__tdiv_to_l_@f1+1)^0,f,c
  9180  003046  3604               	rlcf	(__tdiv_to_l_@f1+2)^0,f,c
  9181  003048  2E11               	decfsz	__tdiv_to_l_@cntr^0,f,c
  9182  00304A  EF07  F018         	goto	l1131
  9183  00304E  BE12               	btfsc	__tdiv_to_l_@exp1^0,7,c
  9184  003050  EF2E  F018         	goto	u7130
  9185  003054  EF2C  F018         	goto	u7131
  9186  003058                     u7131:
  9187  003058  EF44  F018         	goto	l6277
  9188  00305C                     u7130:
  9189  00305C  5012               	movf	__tdiv_to_l_@exp1^0,w,c
  9190  00305E  0A80               	xorlw	128
  9191  003060  0F97               	addlw	151
  9192  003062  B0D8               	btfsc	status,0,c
  9193  003064  EF36  F018         	goto	u7141
  9194  003068  EF38  F018         	goto	u7140
  9195  00306C                     u7141:
  9196  00306C  EF3A  F018         	goto	l6273
  9197  003070                     u7140:
  9198  003070  EFCC  F017         	goto	l6233
  9199  003074                     l6273:
  9200  003074  90D8               	bcf	status,0,c
  9201  003076  3210               	rrcf	(__tdiv_to_l_@quot+3)^0,f,c
  9202  003078  320F               	rrcf	(__tdiv_to_l_@quot+2)^0,f,c
  9203  00307A  320E               	rrcf	(__tdiv_to_l_@quot+1)^0,f,c
  9204  00307C  320D               	rrcf	__tdiv_to_l_@quot^0,f,c
  9205  00307E  3E12               	incfsz	__tdiv_to_l_@exp1^0,f,c
  9206  003080  EF3A  F018         	goto	l6273
  9207  003084  EF5C  F018         	goto	l1138
  9208  003088                     l6277:
  9209  003088  0E17               	movlw	23
  9210  00308A  6412               	cpfsgt	__tdiv_to_l_@exp1^0,c
  9211  00308C  EF4A  F018         	goto	u7151
  9212  003090  EF4C  F018         	goto	u7150
  9213  003094                     u7151:
  9214  003094  EF54  F018         	goto	l6285
  9215  003098                     u7150:
  9216  003098  EFCC  F017         	goto	l6233
  9217  00309C                     l6283:
  9218  00309C  90D8               	bcf	status,0,c
  9219  00309E  360D               	rlcf	__tdiv_to_l_@quot^0,f,c
  9220  0030A0  360E               	rlcf	(__tdiv_to_l_@quot+1)^0,f,c
  9221  0030A2  360F               	rlcf	(__tdiv_to_l_@quot+2)^0,f,c
  9222  0030A4  3610               	rlcf	(__tdiv_to_l_@quot+3)^0,f,c
  9223  0030A6  0612               	decf	__tdiv_to_l_@exp1^0,f,c
  9224  0030A8                     l6285:
  9225  0030A8  5012               	movf	__tdiv_to_l_@exp1^0,w,c
  9226  0030AA  A4D8               	btfss	status,2,c
  9227  0030AC  EF5A  F018         	goto	u7161
  9228  0030B0  EF5C  F018         	goto	u7160
  9229  0030B4                     u7161:
  9230  0030B4  EF4E  F018         	goto	l6283
  9231  0030B8                     u7160:
  9232  0030B8                     l1138:
  9233  0030B8  C00D  F002         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9234  0030BC  C00E  F003         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9235  0030C0  C00F  F004         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9236  0030C4  C010  F005         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9237  0030C8                     l1129:
  9238  0030C8  0012               	return		;funcret
  9239  0030CA                     __end_of__tdiv_to_l_:
  9240                           	callstack 0
  9241                           
  9242 ;; *************** function __div_to_l_ *****************
  9243 ;; Defined at:
  9244 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fldivl.c"
  9245 ;; Parameters:    Size  Location     Type
  9246 ;;  f1              4    1[COMRAM] unsigned long 
  9247 ;;  f2              4    5[COMRAM] unsigned long 
  9248 ;; Auto vars:     Size  Location     Type
  9249 ;;  quot            4    9[COMRAM] unsigned long 
  9250 ;;  exp1            1   14[COMRAM] unsigned char 
  9251 ;;  cntr            1   13[COMRAM] unsigned char 
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  4    1[COMRAM] unsigned long 
  9254 ;; Registers used:
  9255 ;;		wreg, status,2, status,0
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 0/0
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9261 ;;      Params:         8       0       0       0       0       0       0       0       0
  9262 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9263 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9264 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9265 ;;Total ram usage:       14 bytes
  9266 ;; Hardware stack levels used: 1
  9267 ;; Hardware stack levels required when called: 3
  9268 ;; This function calls:
  9269 ;;		Nothing
  9270 ;; This function is called by:
  9271 ;;		_sprintf
  9272 ;; This function uses a non-reentrant model
  9273 ;;
  9274                           
  9275                           	psect	text32
  9276  0030CA                     __ptext32:
  9277                           	callstack 0
  9278  0030CA                     __div_to_l_:
  9279                           	callstack 25
  9280  0030CA  3404               	rlcf	(__div_to_l_@f1+2)^0,w,c
  9281  0030CC  3405               	rlcf	(__div_to_l_@f1+3)^0,w,c
  9282  0030CE  6E0F               	movwf	__div_to_l_@exp1^0,c
  9283  0030D0  500F               	movf	__div_to_l_@exp1^0,w,c
  9284  0030D2  A4D8               	btfss	status,2,c
  9285  0030D4  EF6E  F018         	goto	u7171
  9286  0030D8  EF70  F018         	goto	u7170
  9287  0030DC                     u7171:
  9288  0030DC  EF7A  F018         	goto	l6293
  9289  0030E0                     u7170:
  9290  0030E0                     l6289:
  9291  0030E0  0E00               	movlw	0
  9292  0030E2  6E02               	movwf	?__div_to_l_^0,c
  9293  0030E4  0E00               	movlw	0
  9294  0030E6  6E03               	movwf	(?__div_to_l_+1)^0,c
  9295  0030E8  0E00               	movlw	0
  9296  0030EA  6E04               	movwf	(?__div_to_l_+2)^0,c
  9297  0030EC  0E00               	movlw	0
  9298  0030EE  6E05               	movwf	(?__div_to_l_+3)^0,c
  9299  0030F0  EF0A  F019         	goto	l1020
  9300  0030F4                     l6293:
  9301  0030F4  3408               	rlcf	(__div_to_l_@f2+2)^0,w,c
  9302  0030F6  3409               	rlcf	(__div_to_l_@f2+3)^0,w,c
  9303  0030F8  6E0E               	movwf	__div_to_l_@cntr^0,c
  9304  0030FA  500E               	movf	__div_to_l_@cntr^0,w,c
  9305  0030FC  A4D8               	btfss	status,2,c
  9306  0030FE  EF83  F018         	goto	u7181
  9307  003102  EF85  F018         	goto	u7180
  9308  003106                     u7181:
  9309  003106  EF87  F018         	goto	l6299
  9310  00310A                     u7180:
  9311  00310A  EF70  F018         	goto	l6289
  9312  00310E                     l6299:
  9313  00310E  8E04               	bsf	(__div_to_l_@f1+2)^0,7,c
  9314  003110  0EFF               	movlw	255
  9315  003112  1602               	andwf	__div_to_l_@f1^0,f,c
  9316  003114  0EFF               	movlw	255
  9317  003116  1603               	andwf	(__div_to_l_@f1+1)^0,f,c
  9318  003118  0EFF               	movlw	255
  9319  00311A  1604               	andwf	(__div_to_l_@f1+2)^0,f,c
  9320  00311C  0E00               	movlw	0
  9321  00311E  1605               	andwf	(__div_to_l_@f1+3)^0,f,c
  9322  003120  8E08               	bsf	(__div_to_l_@f2+2)^0,7,c
  9323  003122  0EFF               	movlw	255
  9324  003124  1606               	andwf	__div_to_l_@f2^0,f,c
  9325  003126  0EFF               	movlw	255
  9326  003128  1607               	andwf	(__div_to_l_@f2+1)^0,f,c
  9327  00312A  0EFF               	movlw	255
  9328  00312C  1608               	andwf	(__div_to_l_@f2+2)^0,f,c
  9329  00312E  0E00               	movlw	0
  9330  003130  1609               	andwf	(__div_to_l_@f2+3)^0,f,c
  9331  003132  0E00               	movlw	0
  9332  003134  6E0A               	movwf	__div_to_l_@quot^0,c
  9333  003136  0E00               	movlw	0
  9334  003138  6E0B               	movwf	(__div_to_l_@quot+1)^0,c
  9335  00313A  0E00               	movlw	0
  9336  00313C  6E0C               	movwf	(__div_to_l_@quot+2)^0,c
  9337  00313E  0E00               	movlw	0
  9338  003140  6E0D               	movwf	(__div_to_l_@quot+3)^0,c
  9339  003142  0E7F               	movlw	127
  9340  003144  5E0F               	subwf	__div_to_l_@exp1^0,f,c
  9341  003146  500E               	movf	__div_to_l_@cntr^0,w,c
  9342  003148  0FA0               	addlw	160
  9343  00314A  5E0F               	subwf	__div_to_l_@exp1^0,f,c
  9344  00314C  0E20               	movlw	32
  9345  00314E  6E0E               	movwf	__div_to_l_@cntr^0,c
  9346  003150                     l6313:
  9347  003150  90D8               	bcf	status,0,c
  9348  003152  360A               	rlcf	__div_to_l_@quot^0,f,c
  9349  003154  360B               	rlcf	(__div_to_l_@quot+1)^0,f,c
  9350  003156  360C               	rlcf	(__div_to_l_@quot+2)^0,f,c
  9351  003158  360D               	rlcf	(__div_to_l_@quot+3)^0,f,c
  9352  00315A  5006               	movf	__div_to_l_@f2^0,w,c
  9353  00315C  5C02               	subwf	__div_to_l_@f1^0,w,c
  9354  00315E  5007               	movf	(__div_to_l_@f2+1)^0,w,c
  9355  003160  5803               	subwfb	(__div_to_l_@f1+1)^0,w,c
  9356  003162  5008               	movf	(__div_to_l_@f2+2)^0,w,c
  9357  003164  5804               	subwfb	(__div_to_l_@f1+2)^0,w,c
  9358  003166  5009               	movf	(__div_to_l_@f2+3)^0,w,c
  9359  003168  5805               	subwfb	(__div_to_l_@f1+3)^0,w,c
  9360  00316A  A0D8               	btfss	status,0,c
  9361  00316C  EFBA  F018         	goto	u7191
  9362  003170  EFBC  F018         	goto	u7190
  9363  003174                     u7191:
  9364  003174  EFC5  F018         	goto	l6321
  9365  003178                     u7190:
  9366  003178  5006               	movf	__div_to_l_@f2^0,w,c
  9367  00317A  5E02               	subwf	__div_to_l_@f1^0,f,c
  9368  00317C  5007               	movf	(__div_to_l_@f2+1)^0,w,c
  9369  00317E  5A03               	subwfb	(__div_to_l_@f1+1)^0,f,c
  9370  003180  5008               	movf	(__div_to_l_@f2+2)^0,w,c
  9371  003182  5A04               	subwfb	(__div_to_l_@f1+2)^0,f,c
  9372  003184  5009               	movf	(__div_to_l_@f2+3)^0,w,c
  9373  003186  5A05               	subwfb	(__div_to_l_@f1+3)^0,f,c
  9374  003188  800A               	bsf	__div_to_l_@quot^0,0,c
  9375  00318A                     l6321:
  9376  00318A  90D8               	bcf	status,0,c
  9377  00318C  3602               	rlcf	__div_to_l_@f1^0,f,c
  9378  00318E  3603               	rlcf	(__div_to_l_@f1+1)^0,f,c
  9379  003190  3604               	rlcf	(__div_to_l_@f1+2)^0,f,c
  9380  003192  3605               	rlcf	(__div_to_l_@f1+3)^0,f,c
  9381  003194  2E0E               	decfsz	__div_to_l_@cntr^0,f,c
  9382  003196  EFA8  F018         	goto	l6313
  9383  00319A  BE0F               	btfsc	__div_to_l_@exp1^0,7,c
  9384  00319C  EFD4  F018         	goto	u7200
  9385  0031A0  EFD2  F018         	goto	u7201
  9386  0031A4                     u7201:
  9387  0031A4  EFEA  F018         	goto	l6337
  9388  0031A8                     u7200:
  9389  0031A8  500F               	movf	__div_to_l_@exp1^0,w,c
  9390  0031AA  0A80               	xorlw	128
  9391  0031AC  0F9F               	addlw	159
  9392  0031AE  B0D8               	btfsc	status,0,c
  9393  0031B0  EFDC  F018         	goto	u7211
  9394  0031B4  EFDE  F018         	goto	u7210
  9395  0031B8                     u7211:
  9396  0031B8  EFE0  F018         	goto	l6333
  9397  0031BC                     u7210:
  9398  0031BC  EF70  F018         	goto	l6289
  9399  0031C0                     l6333:
  9400  0031C0  90D8               	bcf	status,0,c
  9401  0031C2  320D               	rrcf	(__div_to_l_@quot+3)^0,f,c
  9402  0031C4  320C               	rrcf	(__div_to_l_@quot+2)^0,f,c
  9403  0031C6  320B               	rrcf	(__div_to_l_@quot+1)^0,f,c
  9404  0031C8  320A               	rrcf	__div_to_l_@quot^0,f,c
  9405  0031CA  3E0F               	incfsz	__div_to_l_@exp1^0,f,c
  9406  0031CC  EFE0  F018         	goto	l6333
  9407  0031D0  EF02  F019         	goto	l1029
  9408  0031D4                     l6337:
  9409  0031D4  0E1F               	movlw	31
  9410  0031D6  640F               	cpfsgt	__div_to_l_@exp1^0,c
  9411  0031D8  EFF0  F018         	goto	u7221
  9412  0031DC  EFF2  F018         	goto	u7220
  9413  0031E0                     u7221:
  9414  0031E0  EFFA  F018         	goto	l6345
  9415  0031E4                     u7220:
  9416  0031E4  EF70  F018         	goto	l6289
  9417  0031E8                     l6343:
  9418  0031E8  90D8               	bcf	status,0,c
  9419  0031EA  360A               	rlcf	__div_to_l_@quot^0,f,c
  9420  0031EC  360B               	rlcf	(__div_to_l_@quot+1)^0,f,c
  9421  0031EE  360C               	rlcf	(__div_to_l_@quot+2)^0,f,c
  9422  0031F0  360D               	rlcf	(__div_to_l_@quot+3)^0,f,c
  9423  0031F2  060F               	decf	__div_to_l_@exp1^0,f,c
  9424  0031F4                     l6345:
  9425  0031F4  500F               	movf	__div_to_l_@exp1^0,w,c
  9426  0031F6  A4D8               	btfss	status,2,c
  9427  0031F8  EF00  F019         	goto	u7231
  9428  0031FC  EF02  F019         	goto	u7230
  9429  003200                     u7231:
  9430  003200  EFF4  F018         	goto	l6343
  9431  003204                     u7230:
  9432  003204                     l1029:
  9433  003204  C00A  F002         	movff	__div_to_l_@quot,?__div_to_l_
  9434  003208  C00B  F003         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9435  00320C  C00C  F004         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9436  003210  C00D  F005         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9437  003214                     l1020:
  9438  003214  0012               	return		;funcret
  9439  003216                     __end_of__div_to_l_:
  9440                           	callstack 0
  9441                           
  9442 ;; *************** function ___xxtofl *****************
  9443 ;; Defined at:
  9444 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\xxtofl.c"
  9445 ;; Parameters:    Size  Location     Type
  9446 ;;  sign            1    wreg     unsigned char 
  9447 ;;  val             4   36[COMRAM] long 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;  sign            1   44[COMRAM] unsigned char 
  9450 ;;  arg             4   46[COMRAM] unsigned long 
  9451 ;;  exp             1   45[COMRAM] unsigned char 
  9452 ;; Return value:  Size  Location     Type
  9453 ;;                  4   36[COMRAM] unsigned char 
  9454 ;; Registers used:
  9455 ;;		wreg, status,2, status,0
  9456 ;; Tracked objects:
  9457 ;;		On entry : 0/0
  9458 ;;		On exit  : 0/0
  9459 ;;		Unchanged: 0/0
  9460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9461 ;;      Params:         4       0       0       0       0       0       0       0       0
  9462 ;;      Locals:         6       0       0       0       0       0       0       0       0
  9463 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9464 ;;      Totals:        14       0       0       0       0       0       0       0       0
  9465 ;;Total ram usage:       14 bytes
  9466 ;; Hardware stack levels used: 1
  9467 ;; Hardware stack levels required when called: 3
  9468 ;; This function calls:
  9469 ;;		Nothing
  9470 ;; This function is called by:
  9471 ;;		_ComputeWaterVol
  9472 ;;		_sprintf
  9473 ;;		_pow
  9474 ;;		_exp
  9475 ;;		_floor
  9476 ;;		_log
  9477 ;; This function uses a non-reentrant model
  9478 ;;
  9479                           
  9480                           	psect	text33
  9481  002C1A                     __ptext33:
  9482                           	callstack 0
  9483  002C1A                     ___xxtofl:
  9484                           	callstack 24
  9485                           
  9486                           ;incstack = 0
  9487                           ;___xxtofl@sign stored from wreg
  9488  002C1A  6E2D               	movwf	___xxtofl@sign^0,c
  9489  002C1C  502D               	movf	___xxtofl@sign^0,w,c
  9490  002C1E  B4D8               	btfsc	status,2,c
  9491  002C20  EF14  F016         	goto	u6451
  9492  002C24  EF16  F016         	goto	u6450
  9493  002C28                     u6451:
  9494  002C28  EF38  F016         	goto	l1463
  9495  002C2C                     u6450:
  9496  002C2C  BE28               	btfsc	(___xxtofl@val+3)^0,7,c
  9497  002C2E  EF1D  F016         	goto	u6460
  9498  002C32  EF1B  F016         	goto	u6461
  9499  002C36                     u6461:
  9500  002C36  EF38  F016         	goto	l1463
  9501  002C3A                     u6460:
  9502  002C3A  C025  F029         	movff	___xxtofl@val,??___xxtofl
  9503  002C3E  C026  F02A         	movff	___xxtofl@val+1,??___xxtofl+1
  9504  002C42  C027  F02B         	movff	___xxtofl@val+2,??___xxtofl+2
  9505  002C46  C028  F02C         	movff	___xxtofl@val+3,??___xxtofl+3
  9506  002C4A  1E29               	comf	??___xxtofl^0,f,c
  9507  002C4C  1E2A               	comf	(??___xxtofl+1)^0,f,c
  9508  002C4E  1E2B               	comf	(??___xxtofl+2)^0,f,c
  9509  002C50  1E2C               	comf	(??___xxtofl+3)^0,f,c
  9510  002C52  2A29               	incf	??___xxtofl^0,f,c
  9511  002C54  0E00               	movlw	0
  9512  002C56  222A               	addwfc	(??___xxtofl+1)^0,f,c
  9513  002C58  222B               	addwfc	(??___xxtofl+2)^0,f,c
  9514  002C5A  222C               	addwfc	(??___xxtofl+3)^0,f,c
  9515  002C5C  C029  F02F         	movff	??___xxtofl,___xxtofl@arg
  9516  002C60  C02A  F030         	movff	??___xxtofl+1,___xxtofl@arg+1
  9517  002C64  C02B  F031         	movff	??___xxtofl+2,___xxtofl@arg+2
  9518  002C68  C02C  F032         	movff	??___xxtofl+3,___xxtofl@arg+3
  9519  002C6C  EF40  F016         	goto	l5881
  9520  002C70                     l1463:
  9521  002C70  C025  F02F         	movff	___xxtofl@val,___xxtofl@arg
  9522  002C74  C026  F030         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9523  002C78  C027  F031         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9524  002C7C  C028  F032         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9525  002C80                     l5881:
  9526  002C80  5025               	movf	___xxtofl@val^0,w,c
  9527  002C82  1026               	iorwf	(___xxtofl@val+1)^0,w,c
  9528  002C84  1027               	iorwf	(___xxtofl@val+2)^0,w,c
  9529  002C86  1028               	iorwf	(___xxtofl@val+3)^0,w,c
  9530  002C88  A4D8               	btfss	status,2,c
  9531  002C8A  EF49  F016         	goto	u6471
  9532  002C8E  EF4B  F016         	goto	u6470
  9533  002C92                     u6471:
  9534  002C92  EF55  F016         	goto	l5887
  9535  002C96                     u6470:
  9536  002C96  0E00               	movlw	0
  9537  002C98  6E25               	movwf	?___xxtofl^0,c
  9538  002C9A  0E00               	movlw	0
  9539  002C9C  6E26               	movwf	(?___xxtofl+1)^0,c
  9540  002C9E  0E00               	movlw	0
  9541  002CA0  6E27               	movwf	(?___xxtofl+2)^0,c
  9542  002CA2  0E00               	movlw	0
  9543  002CA4  6E28               	movwf	(?___xxtofl+3)^0,c
  9544  002CA6  EFE6  F016         	goto	l1466
  9545  002CAA                     l5887:
  9546  002CAA  0E96               	movlw	150
  9547  002CAC  6E2E               	movwf	___xxtofl@exp^0,c
  9548  002CAE  EF5F  F016         	goto	l5891
  9549  002CB2                     l5889:
  9550  002CB2  2A2E               	incf	___xxtofl@exp^0,f,c
  9551  002CB4  90D8               	bcf	status,0,c
  9552  002CB6  3232               	rrcf	(___xxtofl@arg+3)^0,f,c
  9553  002CB8  3231               	rrcf	(___xxtofl@arg+2)^0,f,c
  9554  002CBA  3230               	rrcf	(___xxtofl@arg+1)^0,f,c
  9555  002CBC  322F               	rrcf	___xxtofl@arg^0,f,c
  9556  002CBE                     l5891:
  9557  002CBE  0E00               	movlw	0
  9558  002CC0  142F               	andwf	___xxtofl@arg^0,w,c
  9559  002CC2  6E29               	movwf	??___xxtofl^0,c
  9560  002CC4  0E00               	movlw	0
  9561  002CC6  1430               	andwf	(___xxtofl@arg+1)^0,w,c
  9562  002CC8  6E2A               	movwf	(??___xxtofl+1)^0,c
  9563  002CCA  0E00               	movlw	0
  9564  002CCC  1431               	andwf	(___xxtofl@arg+2)^0,w,c
  9565  002CCE  6E2B               	movwf	(??___xxtofl+2)^0,c
  9566  002CD0  0EFE               	movlw	254
  9567  002CD2  1432               	andwf	(___xxtofl@arg+3)^0,w,c
  9568  002CD4  6E2C               	movwf	(??___xxtofl+3)^0,c
  9569  002CD6  5029               	movf	??___xxtofl^0,w,c
  9570  002CD8  102A               	iorwf	(??___xxtofl+1)^0,w,c
  9571  002CDA  102B               	iorwf	(??___xxtofl+2)^0,w,c
  9572  002CDC  102C               	iorwf	(??___xxtofl+3)^0,w,c
  9573  002CDE  A4D8               	btfss	status,2,c
  9574  002CE0  EF74  F016         	goto	u6481
  9575  002CE4  EF76  F016         	goto	u6480
  9576  002CE8                     u6481:
  9577  002CE8  EF59  F016         	goto	l5889
  9578  002CEC                     u6480:
  9579  002CEC  EF84  F016         	goto	l1470
  9580  002CF0                     l5893:
  9581  002CF0  2A2E               	incf	___xxtofl@exp^0,f,c
  9582  002CF2  0E01               	movlw	1
  9583  002CF4  262F               	addwf	___xxtofl@arg^0,f,c
  9584  002CF6  0E00               	movlw	0
  9585  002CF8  2230               	addwfc	(___xxtofl@arg+1)^0,f,c
  9586  002CFA  2231               	addwfc	(___xxtofl@arg+2)^0,f,c
  9587  002CFC  2232               	addwfc	(___xxtofl@arg+3)^0,f,c
  9588  002CFE  90D8               	bcf	status,0,c
  9589  002D00  3232               	rrcf	(___xxtofl@arg+3)^0,f,c
  9590  002D02  3231               	rrcf	(___xxtofl@arg+2)^0,f,c
  9591  002D04  3230               	rrcf	(___xxtofl@arg+1)^0,f,c
  9592  002D06  322F               	rrcf	___xxtofl@arg^0,f,c
  9593  002D08                     l1470:
  9594  002D08  0E00               	movlw	0
  9595  002D0A  142F               	andwf	___xxtofl@arg^0,w,c
  9596  002D0C  6E29               	movwf	??___xxtofl^0,c
  9597  002D0E  0E00               	movlw	0
  9598  002D10  1430               	andwf	(___xxtofl@arg+1)^0,w,c
  9599  002D12  6E2A               	movwf	(??___xxtofl+1)^0,c
  9600  002D14  0E00               	movlw	0
  9601  002D16  1431               	andwf	(___xxtofl@arg+2)^0,w,c
  9602  002D18  6E2B               	movwf	(??___xxtofl+2)^0,c
  9603  002D1A  0EFF               	movlw	255
  9604  002D1C  1432               	andwf	(___xxtofl@arg+3)^0,w,c
  9605  002D1E  6E2C               	movwf	(??___xxtofl+3)^0,c
  9606  002D20  5029               	movf	??___xxtofl^0,w,c
  9607  002D22  102A               	iorwf	(??___xxtofl+1)^0,w,c
  9608  002D24  102B               	iorwf	(??___xxtofl+2)^0,w,c
  9609  002D26  102C               	iorwf	(??___xxtofl+3)^0,w,c
  9610  002D28  A4D8               	btfss	status,2,c
  9611  002D2A  EF99  F016         	goto	u6491
  9612  002D2E  EF9B  F016         	goto	u6490
  9613  002D32                     u6491:
  9614  002D32  EF78  F016         	goto	l5893
  9615  002D36                     u6490:
  9616  002D36  EFA3  F016         	goto	l5901
  9617  002D3A                     l5899:
  9618  002D3A  062E               	decf	___xxtofl@exp^0,f,c
  9619  002D3C  90D8               	bcf	status,0,c
  9620  002D3E  362F               	rlcf	___xxtofl@arg^0,f,c
  9621  002D40  3630               	rlcf	(___xxtofl@arg+1)^0,f,c
  9622  002D42  3631               	rlcf	(___xxtofl@arg+2)^0,f,c
  9623  002D44  3632               	rlcf	(___xxtofl@arg+3)^0,f,c
  9624  002D46                     l5901:
  9625  002D46  BE31               	btfsc	(___xxtofl@arg+2)^0,7,c
  9626  002D48  EFA8  F016         	goto	u6501
  9627  002D4C  EFAA  F016         	goto	u6500
  9628  002D50                     u6501:
  9629  002D50  EFB2  F016         	goto	l1477
  9630  002D54                     u6500:
  9631  002D54  0E02               	movlw	2
  9632  002D56  602E               	cpfslt	___xxtofl@exp^0,c
  9633  002D58  EFB0  F016         	goto	u6511
  9634  002D5C  EFB2  F016         	goto	u6510
  9635  002D60                     u6511:
  9636  002D60  EF9D  F016         	goto	l5899
  9637  002D64                     u6510:
  9638  002D64                     l1477:
  9639  002D64  B02E               	btfsc	___xxtofl@exp^0,0,c
  9640  002D66  EFB7  F016         	goto	u6521
  9641  002D6A  EFB9  F016         	goto	u6520
  9642  002D6E                     u6521:
  9643  002D6E  EFBA  F016         	goto	l5907
  9644  002D72                     u6520:
  9645  002D72  9E31               	bcf	(___xxtofl@arg+2)^0,7,c
  9646  002D74                     l5907:
  9647  002D74  90D8               	bcf	status,0,c
  9648  002D76  322E               	rrcf	___xxtofl@exp^0,f,c
  9649  002D78  C02E  F029         	movff	___xxtofl@exp,??___xxtofl
  9650  002D7C  6A2A               	clrf	(??___xxtofl+1)^0,c
  9651  002D7E  6A2B               	clrf	(??___xxtofl+2)^0,c
  9652  002D80  6A2C               	clrf	(??___xxtofl+3)^0,c
  9653  002D82  C029  F02C         	movff	??___xxtofl,??___xxtofl+3
  9654  002D86  6A2B               	clrf	(??___xxtofl+2)^0,c
  9655  002D88  6A2A               	clrf	(??___xxtofl+1)^0,c
  9656  002D8A  6A29               	clrf	??___xxtofl^0,c
  9657  002D8C  5029               	movf	??___xxtofl^0,w,c
  9658  002D8E  122F               	iorwf	___xxtofl@arg^0,f,c
  9659  002D90  502A               	movf	(??___xxtofl+1)^0,w,c
  9660  002D92  1230               	iorwf	(___xxtofl@arg+1)^0,f,c
  9661  002D94  502B               	movf	(??___xxtofl+2)^0,w,c
  9662  002D96  1231               	iorwf	(___xxtofl@arg+2)^0,f,c
  9663  002D98  502C               	movf	(??___xxtofl+3)^0,w,c
  9664  002D9A  1232               	iorwf	(___xxtofl@arg+3)^0,f,c
  9665  002D9C  502D               	movf	___xxtofl@sign^0,w,c
  9666  002D9E  B4D8               	btfsc	status,2,c
  9667  002DA0  EFD4  F016         	goto	u6531
  9668  002DA4  EFD6  F016         	goto	u6530
  9669  002DA8                     u6531:
  9670  002DA8  EFDE  F016         	goto	l5917
  9671  002DAC                     u6530:
  9672  002DAC  BE28               	btfsc	(___xxtofl@val+3)^0,7,c
  9673  002DAE  EFDD  F016         	goto	u6540
  9674  002DB2  EFDB  F016         	goto	u6541
  9675  002DB6                     u6541:
  9676  002DB6  EFDE  F016         	goto	l5917
  9677  002DBA                     u6540:
  9678  002DBA  8E32               	bsf	(___xxtofl@arg+3)^0,7,c
  9679  002DBC                     l5917:
  9680  002DBC  C02F  F025         	movff	___xxtofl@arg,?___xxtofl
  9681  002DC0  C030  F026         	movff	___xxtofl@arg+1,?___xxtofl+1
  9682  002DC4  C031  F027         	movff	___xxtofl@arg+2,?___xxtofl+2
  9683  002DC8  C032  F028         	movff	___xxtofl@arg+3,?___xxtofl+3
  9684  002DCC                     l1466:
  9685  002DCC  0012               	return		;funcret
  9686  002DCE                     __end_of___xxtofl:
  9687                           	callstack 0
  9688                           
  9689 ;; *************** function ___wmul *****************
  9690 ;; Defined at:
  9691 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  9692 ;; Parameters:    Size  Location     Type
  9693 ;;  multiplier      2    1[COMRAM] unsigned int 
  9694 ;;  multiplicand    2    3[COMRAM] unsigned int 
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;  product         2    5[COMRAM] unsigned int 
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  2    1[COMRAM] unsigned int 
  9699 ;; Registers used:
  9700 ;;		wreg, status,2, status,0, prodl, prodh
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9706 ;;      Params:         4       0       0       0       0       0       0       0       0
  9707 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9708 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9709 ;;      Totals:         6       0       0       0       0       0       0       0       0
  9710 ;;Total ram usage:        6 bytes
  9711 ;; Hardware stack levels used: 1
  9712 ;; Hardware stack levels required when called: 3
  9713 ;; This function calls:
  9714 ;;		Nothing
  9715 ;; This function is called by:
  9716 ;;		_sprintf
  9717 ;; This function uses a non-reentrant model
  9718 ;;
  9719                           
  9720                           	psect	text34
  9721  004368                     __ptext34:
  9722                           	callstack 0
  9723  004368                     ___wmul:
  9724                           	callstack 25
  9725  004368  5002               	movf	___wmul@multiplier^0,w,c
  9726  00436A  0204               	mulwf	___wmul@multiplicand^0,c
  9727  00436C  CFF3 F006          	movff	prodl,___wmul@product
  9728  004370  CFF4 F007          	movff	prodh,___wmul@product+1
  9729  004374  5002               	movf	___wmul@multiplier^0,w,c
  9730  004376  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  9731  004378  50F3               	movf	243,w,c
  9732  00437A  2607               	addwf	(___wmul@product+1)^0,f,c
  9733  00437C  5003               	movf	(___wmul@multiplier+1)^0,w,c
  9734  00437E  0204               	mulwf	___wmul@multiplicand^0,c
  9735  004380  50F3               	movf	243,w,c
  9736  004382  2607               	addwf	(___wmul@product+1)^0,f,c
  9737  004384  C006  F002         	movff	___wmul@product,?___wmul
  9738  004388  C007  F003         	movff	___wmul@product+1,?___wmul+1
  9739  00438C  0012               	return		;funcret
  9740  00438E                     __end_of___wmul:
  9741                           	callstack 0
  9742                           
  9743 ;; *************** function ___llmod *****************
  9744 ;; Defined at:
  9745 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\llmod.c"
  9746 ;; Parameters:    Size  Location     Type
  9747 ;;  dividend        4   14[COMRAM] unsigned long 
  9748 ;;  divisor         4   18[COMRAM] unsigned long 
  9749 ;; Auto vars:     Size  Location     Type
  9750 ;;  counter         1   22[COMRAM] unsigned char 
  9751 ;; Return value:  Size  Location     Type
  9752 ;;                  4   14[COMRAM] unsigned long 
  9753 ;; Registers used:
  9754 ;;		wreg, status,2, status,0
  9755 ;; Tracked objects:
  9756 ;;		On entry : 0/0
  9757 ;;		On exit  : 0/0
  9758 ;;		Unchanged: 0/0
  9759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9760 ;;      Params:         8       0       0       0       0       0       0       0       0
  9761 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9762 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9763 ;;      Totals:         9       0       0       0       0       0       0       0       0
  9764 ;;Total ram usage:        9 bytes
  9765 ;; Hardware stack levels used: 1
  9766 ;; Hardware stack levels required when called: 3
  9767 ;; This function calls:
  9768 ;;		Nothing
  9769 ;; This function is called by:
  9770 ;;		_sprintf
  9771 ;; This function uses a non-reentrant model
  9772 ;;
  9773                           
  9774                           	psect	text35
  9775  003D82                     __ptext35:
  9776                           	callstack 0
  9777  003D82                     ___llmod:
  9778                           	callstack 25
  9779  003D82  5013               	movf	___llmod@divisor^0,w,c
  9780  003D84  1014               	iorwf	(___llmod@divisor+1)^0,w,c
  9781  003D86  1015               	iorwf	(___llmod@divisor+2)^0,w,c
  9782  003D88  1016               	iorwf	(___llmod@divisor+3)^0,w,c
  9783  003D8A  B4D8               	btfsc	status,2,c
  9784  003D8C  EFCA  F01E         	goto	u7271
  9785  003D90  EFCC  F01E         	goto	u7270
  9786  003D94                     u7271:
  9787  003D94  EFFC  F01E         	goto	l1208
  9788  003D98                     u7270:
  9789  003D98  0E01               	movlw	1
  9790  003D9A  6E17               	movwf	___llmod@counter^0,c
  9791  003D9C  EFD6  F01E         	goto	l6381
  9792  003DA0                     l6379:
  9793  003DA0  90D8               	bcf	status,0,c
  9794  003DA2  3613               	rlcf	___llmod@divisor^0,f,c
  9795  003DA4  3614               	rlcf	(___llmod@divisor+1)^0,f,c
  9796  003DA6  3615               	rlcf	(___llmod@divisor+2)^0,f,c
  9797  003DA8  3616               	rlcf	(___llmod@divisor+3)^0,f,c
  9798  003DAA  2A17               	incf	___llmod@counter^0,f,c
  9799  003DAC                     l6381:
  9800  003DAC  AE16               	btfss	(___llmod@divisor+3)^0,7,c
  9801  003DAE  EFDB  F01E         	goto	u7281
  9802  003DB2  EFDD  F01E         	goto	u7280
  9803  003DB6                     u7281:
  9804  003DB6  EFD0  F01E         	goto	l6379
  9805  003DBA                     u7280:
  9806  003DBA                     l6383:
  9807  003DBA  5013               	movf	___llmod@divisor^0,w,c
  9808  003DBC  5C0F               	subwf	___llmod@dividend^0,w,c
  9809  003DBE  5014               	movf	(___llmod@divisor+1)^0,w,c
  9810  003DC0  5810               	subwfb	(___llmod@dividend+1)^0,w,c
  9811  003DC2  5015               	movf	(___llmod@divisor+2)^0,w,c
  9812  003DC4  5811               	subwfb	(___llmod@dividend+2)^0,w,c
  9813  003DC6  5016               	movf	(___llmod@divisor+3)^0,w,c
  9814  003DC8  5812               	subwfb	(___llmod@dividend+3)^0,w,c
  9815  003DCA  A0D8               	btfss	status,0,c
  9816  003DCC  EFEA  F01E         	goto	u7291
  9817  003DD0  EFEC  F01E         	goto	u7290
  9818  003DD4                     u7291:
  9819  003DD4  EFF4  F01E         	goto	l6387
  9820  003DD8                     u7290:
  9821  003DD8  5013               	movf	___llmod@divisor^0,w,c
  9822  003DDA  5E0F               	subwf	___llmod@dividend^0,f,c
  9823  003DDC  5014               	movf	(___llmod@divisor+1)^0,w,c
  9824  003DDE  5A10               	subwfb	(___llmod@dividend+1)^0,f,c
  9825  003DE0  5015               	movf	(___llmod@divisor+2)^0,w,c
  9826  003DE2  5A11               	subwfb	(___llmod@dividend+2)^0,f,c
  9827  003DE4  5016               	movf	(___llmod@divisor+3)^0,w,c
  9828  003DE6  5A12               	subwfb	(___llmod@dividend+3)^0,f,c
  9829  003DE8                     l6387:
  9830  003DE8  90D8               	bcf	status,0,c
  9831  003DEA  3216               	rrcf	(___llmod@divisor+3)^0,f,c
  9832  003DEC  3215               	rrcf	(___llmod@divisor+2)^0,f,c
  9833  003DEE  3214               	rrcf	(___llmod@divisor+1)^0,f,c
  9834  003DF0  3213               	rrcf	___llmod@divisor^0,f,c
  9835  003DF2  2E17               	decfsz	___llmod@counter^0,f,c
  9836  003DF4  EFDD  F01E         	goto	l6383
  9837  003DF8                     l1208:
  9838  003DF8  C00F  F00F         	movff	___llmod@dividend,?___llmod
  9839  003DFC  C010  F010         	movff	___llmod@dividend+1,?___llmod+1
  9840  003E00  C011  F011         	movff	___llmod@dividend+2,?___llmod+2
  9841  003E04  C012  F012         	movff	___llmod@dividend+3,?___llmod+3
  9842  003E08  0012               	return		;funcret
  9843  003E0A                     __end_of___llmod:
  9844                           	callstack 0
  9845                           
  9846 ;; *************** function ___lldiv *****************
  9847 ;; Defined at:
  9848 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\__lldiv.c"
  9849 ;; Parameters:    Size  Location     Type
  9850 ;;  dividend        4    1[COMRAM] unsigned long 
  9851 ;;  divisor         4    5[COMRAM] unsigned long 
  9852 ;; Auto vars:     Size  Location     Type
  9853 ;;  quotient        4    9[COMRAM] unsigned long 
  9854 ;;  counter         1   13[COMRAM] unsigned char 
  9855 ;; Return value:  Size  Location     Type
  9856 ;;                  4    1[COMRAM] unsigned long 
  9857 ;; Registers used:
  9858 ;;		wreg, status,2, status,0
  9859 ;; Tracked objects:
  9860 ;;		On entry : 0/0
  9861 ;;		On exit  : 0/0
  9862 ;;		Unchanged: 0/0
  9863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9864 ;;      Params:         8       0       0       0       0       0       0       0       0
  9865 ;;      Locals:         5       0       0       0       0       0       0       0       0
  9866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9867 ;;      Totals:        13       0       0       0       0       0       0       0       0
  9868 ;;Total ram usage:       13 bytes
  9869 ;; Hardware stack levels used: 1
  9870 ;; Hardware stack levels required when called: 3
  9871 ;; This function calls:
  9872 ;;		Nothing
  9873 ;; This function is called by:
  9874 ;;		_sprintf
  9875 ;; This function uses a non-reentrant model
  9876 ;;
  9877                           
  9878                           	psect	text36
  9879  003C56                     __ptext36:
  9880                           	callstack 0
  9881  003C56                     ___lldiv:
  9882                           	callstack 25
  9883  003C56  0E00               	movlw	0
  9884  003C58  6E0A               	movwf	___lldiv@quotient^0,c
  9885  003C5A  0E00               	movlw	0
  9886  003C5C  6E0B               	movwf	(___lldiv@quotient+1)^0,c
  9887  003C5E  0E00               	movlw	0
  9888  003C60  6E0C               	movwf	(___lldiv@quotient+2)^0,c
  9889  003C62  0E00               	movlw	0
  9890  003C64  6E0D               	movwf	(___lldiv@quotient+3)^0,c
  9891  003C66  5006               	movf	___lldiv@divisor^0,w,c
  9892  003C68  1007               	iorwf	(___lldiv@divisor+1)^0,w,c
  9893  003C6A  1008               	iorwf	(___lldiv@divisor+2)^0,w,c
  9894  003C6C  1009               	iorwf	(___lldiv@divisor+3)^0,w,c
  9895  003C6E  B4D8               	btfsc	status,2,c
  9896  003C70  EF3C  F01E         	goto	u7241
  9897  003C74  EF3E  F01E         	goto	u7240
  9898  003C78                     u7241:
  9899  003C78  EF74  F01E         	goto	l793
  9900  003C7C                     u7240:
  9901  003C7C  0E01               	movlw	1
  9902  003C7E  6E0E               	movwf	___lldiv@counter^0,c
  9903  003C80  EF48  F01E         	goto	l6361
  9904  003C84                     l6359:
  9905  003C84  90D8               	bcf	status,0,c
  9906  003C86  3606               	rlcf	___lldiv@divisor^0,f,c
  9907  003C88  3607               	rlcf	(___lldiv@divisor+1)^0,f,c
  9908  003C8A  3608               	rlcf	(___lldiv@divisor+2)^0,f,c
  9909  003C8C  3609               	rlcf	(___lldiv@divisor+3)^0,f,c
  9910  003C8E  2A0E               	incf	___lldiv@counter^0,f,c
  9911  003C90                     l6361:
  9912  003C90  AE09               	btfss	(___lldiv@divisor+3)^0,7,c
  9913  003C92  EF4D  F01E         	goto	u7251
  9914  003C96  EF4F  F01E         	goto	u7250
  9915  003C9A                     u7251:
  9916  003C9A  EF42  F01E         	goto	l6359
  9917  003C9E                     u7250:
  9918  003C9E                     l6363:
  9919  003C9E  90D8               	bcf	status,0,c
  9920  003CA0  360A               	rlcf	___lldiv@quotient^0,f,c
  9921  003CA2  360B               	rlcf	(___lldiv@quotient+1)^0,f,c
  9922  003CA4  360C               	rlcf	(___lldiv@quotient+2)^0,f,c
  9923  003CA6  360D               	rlcf	(___lldiv@quotient+3)^0,f,c
  9924  003CA8  5006               	movf	___lldiv@divisor^0,w,c
  9925  003CAA  5C02               	subwf	___lldiv@dividend^0,w,c
  9926  003CAC  5007               	movf	(___lldiv@divisor+1)^0,w,c
  9927  003CAE  5803               	subwfb	(___lldiv@dividend+1)^0,w,c
  9928  003CB0  5008               	movf	(___lldiv@divisor+2)^0,w,c
  9929  003CB2  5804               	subwfb	(___lldiv@dividend+2)^0,w,c
  9930  003CB4  5009               	movf	(___lldiv@divisor+3)^0,w,c
  9931  003CB6  5805               	subwfb	(___lldiv@dividend+3)^0,w,c
  9932  003CB8  A0D8               	btfss	status,0,c
  9933  003CBA  EF61  F01E         	goto	u7261
  9934  003CBE  EF63  F01E         	goto	u7260
  9935  003CC2                     u7261:
  9936  003CC2  EF6C  F01E         	goto	l6371
  9937  003CC6                     u7260:
  9938  003CC6  5006               	movf	___lldiv@divisor^0,w,c
  9939  003CC8  5E02               	subwf	___lldiv@dividend^0,f,c
  9940  003CCA  5007               	movf	(___lldiv@divisor+1)^0,w,c
  9941  003CCC  5A03               	subwfb	(___lldiv@dividend+1)^0,f,c
  9942  003CCE  5008               	movf	(___lldiv@divisor+2)^0,w,c
  9943  003CD0  5A04               	subwfb	(___lldiv@dividend+2)^0,f,c
  9944  003CD2  5009               	movf	(___lldiv@divisor+3)^0,w,c
  9945  003CD4  5A05               	subwfb	(___lldiv@dividend+3)^0,f,c
  9946  003CD6  800A               	bsf	___lldiv@quotient^0,0,c
  9947  003CD8                     l6371:
  9948  003CD8  90D8               	bcf	status,0,c
  9949  003CDA  3209               	rrcf	(___lldiv@divisor+3)^0,f,c
  9950  003CDC  3208               	rrcf	(___lldiv@divisor+2)^0,f,c
  9951  003CDE  3207               	rrcf	(___lldiv@divisor+1)^0,f,c
  9952  003CE0  3206               	rrcf	___lldiv@divisor^0,f,c
  9953  003CE2  2E0E               	decfsz	___lldiv@counter^0,f,c
  9954  003CE4  EF4F  F01E         	goto	l6363
  9955  003CE8                     l793:
  9956  003CE8  C00A  F002         	movff	___lldiv@quotient,?___lldiv
  9957  003CEC  C00B  F003         	movff	___lldiv@quotient+1,?___lldiv+1
  9958  003CF0  C00C  F004         	movff	___lldiv@quotient+2,?___lldiv+2
  9959  003CF4  C00D  F005         	movff	___lldiv@quotient+3,?___lldiv+3
  9960  003CF8  0012               	return		;funcret
  9961  003CFA                     __end_of___lldiv:
  9962                           	callstack 0
  9963                           
  9964 ;; *************** function ___fltol *****************
  9965 ;; Defined at:
  9966 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fltol.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;  f1              4   26[COMRAM] unsigned long 
  9969 ;; Auto vars:     Size  Location     Type
  9970 ;;  exp1            1   35[COMRAM] unsigned char 
  9971 ;;  sign1           1   34[COMRAM] unsigned char 
  9972 ;; Return value:  Size  Location     Type
  9973 ;;                  4   26[COMRAM] long 
  9974 ;; Registers used:
  9975 ;;		wreg, status,2, status,0
  9976 ;; Tracked objects:
  9977 ;;		On entry : 0/0
  9978 ;;		On exit  : 0/0
  9979 ;;		Unchanged: 0/0
  9980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9981 ;;      Params:         4       0       0       0       0       0       0       0       0
  9982 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9983 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9984 ;;      Totals:        10       0       0       0       0       0       0       0       0
  9985 ;;Total ram usage:       10 bytes
  9986 ;; Hardware stack levels used: 1
  9987 ;; Hardware stack levels required when called: 3
  9988 ;; This function calls:
  9989 ;;		Nothing
  9990 ;; This function is called by:
  9991 ;;		_ComputeWaterVol
  9992 ;;		_sprintf
  9993 ;;		_pow
  9994 ;;		_exp
  9995 ;;		_floor
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text37
 10000  0035A2                     __ptext37:
 10001                           	callstack 0
 10002  0035A2                     ___fltol:
 10003                           	callstack 23
 10004  0035A2  341D               	rlcf	(___fltol@f1+2)^0,w,c
 10005  0035A4  341E               	rlcf	(___fltol@f1+3)^0,w,c
 10006  0035A6  6E24               	movwf	___fltol@exp1^0,c
 10007  0035A8  5024               	movf	___fltol@exp1^0,w,c
 10008  0035AA  A4D8               	btfss	status,2,c
 10009  0035AC  EFDA  F01A         	goto	u6381
 10010  0035B0  EFDC  F01A         	goto	u6380
 10011  0035B4                     u6381:
 10012  0035B4  EFE6  F01A         	goto	l5837
 10013  0035B8                     u6380:
 10014  0035B8                     l5833:
 10015  0035B8  0E00               	movlw	0
 10016  0035BA  6E1B               	movwf	?___fltol^0,c
 10017  0035BC  0E00               	movlw	0
 10018  0035BE  6E1C               	movwf	(?___fltol+1)^0,c
 10019  0035C0  0E00               	movlw	0
 10020  0035C2  6E1D               	movwf	(?___fltol+2)^0,c
 10021  0035C4  0E00               	movlw	0
 10022  0035C6  6E1E               	movwf	(?___fltol+3)^0,c
 10023  0035C8  EF53  F01B         	goto	l1072
 10024  0035CC                     l5837:
 10025  0035CC  C01B  F01F         	movff	___fltol@f1,??___fltol
 10026  0035D0  C01C  F020         	movff	___fltol@f1+1,??___fltol+1
 10027  0035D4  C01D  F021         	movff	___fltol@f1+2,??___fltol+2
 10028  0035D8  C01E  F022         	movff	___fltol@f1+3,??___fltol+3
 10029  0035DC  0E20               	movlw	32
 10030  0035DE  EFF6  F01A         	goto	u6390
 10031  0035E2                     u6395:
 10032  0035E2  90D8               	bcf	status,0,c
 10033  0035E4  3222               	rrcf	(??___fltol+3)^0,f,c
 10034  0035E6  3221               	rrcf	(??___fltol+2)^0,f,c
 10035  0035E8  3220               	rrcf	(??___fltol+1)^0,f,c
 10036  0035EA  321F               	rrcf	??___fltol^0,f,c
 10037  0035EC                     u6390:
 10038  0035EC  2EE8               	decfsz	wreg,f,c
 10039  0035EE  EFF1  F01A         	goto	u6395
 10040  0035F2  501F               	movf	??___fltol^0,w,c
 10041  0035F4  6E23               	movwf	___fltol@sign1^0,c
 10042  0035F6  8E1D               	bsf	(___fltol@f1+2)^0,7,c
 10043  0035F8  0EFF               	movlw	255
 10044  0035FA  161B               	andwf	___fltol@f1^0,f,c
 10045  0035FC  0EFF               	movlw	255
 10046  0035FE  161C               	andwf	(___fltol@f1+1)^0,f,c
 10047  003600  0EFF               	movlw	255
 10048  003602  161D               	andwf	(___fltol@f1+2)^0,f,c
 10049  003604  0E00               	movlw	0
 10050  003606  161E               	andwf	(___fltol@f1+3)^0,f,c
 10051  003608  0E96               	movlw	150
 10052  00360A  5E24               	subwf	___fltol@exp1^0,f,c
 10053  00360C  BE24               	btfsc	___fltol@exp1^0,7,c
 10054  00360E  EF0D  F01B         	goto	u6400
 10055  003612  EF0B  F01B         	goto	u6401
 10056  003616                     u6401:
 10057  003616  EF23  F01B         	goto	l5857
 10058  00361A                     u6400:
 10059  00361A  5024               	movf	___fltol@exp1^0,w,c
 10060  00361C  0A80               	xorlw	128
 10061  00361E  0F97               	addlw	151
 10062  003620  B0D8               	btfsc	status,0,c
 10063  003622  EF15  F01B         	goto	u6411
 10064  003626  EF17  F01B         	goto	u6410
 10065  00362A                     u6411:
 10066  00362A  EF19  F01B         	goto	l5853
 10067  00362E                     u6410:
 10068  00362E  EFDC  F01A         	goto	l5833
 10069  003632                     l5853:
 10070  003632  90D8               	bcf	status,0,c
 10071  003634  321E               	rrcf	(___fltol@f1+3)^0,f,c
 10072  003636  321D               	rrcf	(___fltol@f1+2)^0,f,c
 10073  003638  321C               	rrcf	(___fltol@f1+1)^0,f,c
 10074  00363A  321B               	rrcf	___fltol@f1^0,f,c
 10075  00363C  3E24               	incfsz	___fltol@exp1^0,f,c
 10076  00363E  EF19  F01B         	goto	l5853
 10077  003642  EF3B  F01B         	goto	l5867
 10078  003646                     l5857:
 10079  003646  0E1F               	movlw	31
 10080  003648  6424               	cpfsgt	___fltol@exp1^0,c
 10081  00364A  EF29  F01B         	goto	u6421
 10082  00364E  EF2B  F01B         	goto	u6420
 10083  003652                     u6421:
 10084  003652  EF33  F01B         	goto	l5865
 10085  003656                     u6420:
 10086  003656  EFDC  F01A         	goto	l5833
 10087  00365A                     l5863:
 10088  00365A  90D8               	bcf	status,0,c
 10089  00365C  361B               	rlcf	___fltol@f1^0,f,c
 10090  00365E  361C               	rlcf	(___fltol@f1+1)^0,f,c
 10091  003660  361D               	rlcf	(___fltol@f1+2)^0,f,c
 10092  003662  361E               	rlcf	(___fltol@f1+3)^0,f,c
 10093  003664  0624               	decf	___fltol@exp1^0,f,c
 10094  003666                     l5865:
 10095  003666  5024               	movf	___fltol@exp1^0,w,c
 10096  003668  A4D8               	btfss	status,2,c
 10097  00366A  EF39  F01B         	goto	u6431
 10098  00366E  EF3B  F01B         	goto	u6430
 10099  003672                     u6431:
 10100  003672  EF2D  F01B         	goto	l5863
 10101  003676                     u6430:
 10102  003676                     l5867:
 10103  003676  5023               	movf	___fltol@sign1^0,w,c
 10104  003678  B4D8               	btfsc	status,2,c
 10105  00367A  EF41  F01B         	goto	u6441
 10106  00367E  EF43  F01B         	goto	u6440
 10107  003682                     u6441:
 10108  003682  EF4B  F01B         	goto	l5871
 10109  003686                     u6440:
 10110  003686  1E1E               	comf	(___fltol@f1+3)^0,f,c
 10111  003688  1E1D               	comf	(___fltol@f1+2)^0,f,c
 10112  00368A  1E1C               	comf	(___fltol@f1+1)^0,f,c
 10113  00368C  6C1B               	negf	___fltol@f1^0,c
 10114  00368E  0E00               	movlw	0
 10115  003690  221C               	addwfc	(___fltol@f1+1)^0,f,c
 10116  003692  221D               	addwfc	(___fltol@f1+2)^0,f,c
 10117  003694  221E               	addwfc	(___fltol@f1+3)^0,f,c
 10118  003696                     l5871:
 10119  003696  C01B  F01B         	movff	___fltol@f1,?___fltol
 10120  00369A  C01C  F01C         	movff	___fltol@f1+1,?___fltol+1
 10121  00369E  C01D  F01D         	movff	___fltol@f1+2,?___fltol+2
 10122  0036A2  C01E  F01E         	movff	___fltol@f1+3,?___fltol+3
 10123  0036A6                     l1072:
 10124  0036A6  0012               	return		;funcret
 10125  0036A8                     __end_of___fltol:
 10126                           	callstack 0
 10127                           
 10128 ;; *************** function ___flsub *****************
 10129 ;; Defined at:
 10130 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;  b               4   34[BANK0 ] long 
 10133 ;;  a               4   38[BANK0 ] long 
 10134 ;; Auto vars:     Size  Location     Type
 10135 ;;		None
 10136 ;; Return value:  Size  Location     Type
 10137 ;;                  4   34[BANK0 ] long 
 10138 ;; Registers used:
 10139 ;;		wreg, status,2, status,0, cstack
 10140 ;; Tracked objects:
 10141 ;;		On entry : 0/0
 10142 ;;		On exit  : 0/0
 10143 ;;		Unchanged: 0/0
 10144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10145 ;;      Params:         0       8       0       0       0       0       0       0       0
 10146 ;;      Locals:         0       0       0       0       0       0       0       0       0
 10147 ;;      Temps:          0       0       0       0       0       0       0       0       0
 10148 ;;      Totals:         0       8       0       0       0       0       0       0       0
 10149 ;;Total ram usage:        8 bytes
 10150 ;; Hardware stack levels used: 1
 10151 ;; Hardware stack levels required when called: 4
 10152 ;; This function calls:
 10153 ;;		___fladd
 10154 ;; This function is called by:
 10155 ;;		_ComputeWaterVol
 10156 ;;		_sprintf
 10157 ;;		_exp
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161                           	psect	text38
 10162  004284                     __ptext38:
 10163                           	callstack 0
 10164  004284                     ___flsub:
 10165                           	callstack 23
 10166  004284  0E00               	movlw	0
 10167  004286  0100               	movlb	0	; () banked
 10168  004288  1B86               	xorwf	___flsub@a& (0+255),f,b
 10169  00428A  0E00               	movlw	0
 10170  00428C  1B87               	xorwf	(___flsub@a+1)& (0+255),f,b
 10171  00428E  0E00               	movlw	0
 10172  004290  1B88               	xorwf	(___flsub@a+2)& (0+255),f,b
 10173  004292  0E80               	movlw	128
 10174  004294  1B89               	xorwf	(___flsub@a+3)& (0+255),f,b
 10175  004296                     
 10176                           ; BSR set to: 0
 10177  004296  C082  F076         	movff	___flsub@b,___fladd@b
 10178  00429A  C083  F077         	movff	___flsub@b+1,___fladd@b+1
 10179  00429E  C084  F078         	movff	___flsub@b+2,___fladd@b+2
 10180  0042A2  C085  F079         	movff	___flsub@b+3,___fladd@b+3
 10181  0042A6  C086  F07A         	movff	___flsub@a,___fladd@a
 10182  0042AA  C087  F07B         	movff	___flsub@a+1,___fladd@a+1
 10183  0042AE  C088  F07C         	movff	___flsub@a+2,___fladd@a+2
 10184  0042B2  C089  F07D         	movff	___flsub@a+3,___fladd@a+3
 10185  0042B6  EC92  F006         	call	___fladd	;wreg free
 10186  0042BA  C076  F082         	movff	?___fladd,?___flsub
 10187  0042BE  C077  F083         	movff	?___fladd+1,?___flsub+1
 10188  0042C2  C078  F084         	movff	?___fladd+2,?___flsub+2
 10189  0042C6  C079  F085         	movff	?___fladd+3,?___flsub+3
 10190  0042CA  0012               	return		;funcret
 10191  0042CC                     __end_of___flsub:
 10192                           	callstack 0
 10193                           
 10194 ;; *************** function ___fladd *****************
 10195 ;; Defined at:
 10196 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\sprcadd.c"
 10197 ;; Parameters:    Size  Location     Type
 10198 ;;  b               4   22[BANK0 ] long 
 10199 ;;  a               4   26[BANK0 ] long 
 10200 ;; Auto vars:     Size  Location     Type
 10201 ;;  grs             1   33[BANK0 ] unsigned char 
 10202 ;;  bexp            1   32[BANK0 ] unsigned char 
 10203 ;;  aexp            1   31[BANK0 ] unsigned char 
 10204 ;;  signs           1   30[BANK0 ] unsigned char 
 10205 ;; Return value:  Size  Location     Type
 10206 ;;                  4   22[BANK0 ] unsigned char 
 10207 ;; Registers used:
 10208 ;;		wreg, status,2, status,0
 10209 ;; Tracked objects:
 10210 ;;		On entry : 0/0
 10211 ;;		On exit  : 0/0
 10212 ;;		Unchanged: 0/0
 10213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 10214 ;;      Params:         0       8       0       0       0       0       0       0       0
 10215 ;;      Locals:         0       4       0       0       0       0       0       0       0
 10216 ;;      Temps:          4       0       0       0       0       0       0       0       0
 10217 ;;      Totals:         4      12       0       0       0       0       0       0       0
 10218 ;;Total ram usage:       16 bytes
 10219 ;; Hardware stack levels used: 1
 10220 ;; Hardware stack levels required when called: 3
 10221 ;; This function calls:
 10222 ;;		Nothing
 10223 ;; This function is called by:
 10224 ;;		_ComputeWaterVol
 10225 ;;		_sprintf
 10226 ;;		___flsub
 10227 ;;		_eval_poly
 10228 ;;		_floor
 10229 ;;		_log
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233                           	psect	text39
 10234  000D24                     __ptext39:
 10235                           	callstack 0
 10236  000D24                     ___fladd:
 10237                           	callstack 23
 10238  000D24  0100               	movlb	0	; () banked
 10239  000D26  5179               	movf	(___fladd@b+3)& (0+255),w,b
 10240  000D28  0B80               	andlw	128
 10241  000D2A  6F7E               	movwf	___fladd@signs& (0+255),b
 10242  000D2C  5179               	movf	(___fladd@b+3)& (0+255),w,b
 10243  000D2E  2579               	addwf	(___fladd@b+3)& (0+255),w,b
 10244  000D30  6F80               	movwf	___fladd@bexp& (0+255),b
 10245  000D32                     
 10246                           ; BSR set to: 0
 10247  000D32  AF78               	btfss	(___fladd@b+2)& (0+255),7,b
 10248  000D34  EF9E  F006         	goto	u5751
 10249  000D38  EFA0  F006         	goto	u5750
 10250  000D3C                     u5751:
 10251  000D3C  EFA1  F006         	goto	l5483
 10252  000D40                     u5750:
 10253  000D40                     
 10254                           ; BSR set to: 0
 10255  000D40  8180               	bsf	___fladd@bexp& (0+255),0,b
 10256  000D42                     l5483:
 10257                           
 10258                           ; BSR set to: 0
 10259  000D42  5180               	movf	___fladd@bexp& (0+255),w,b
 10260  000D44  B4D8               	btfsc	status,2,c
 10261  000D46  EFA7  F006         	goto	u5761
 10262  000D4A  EFA9  F006         	goto	u5760
 10263  000D4E                     u5761:
 10264  000D4E  EFBE  F006         	goto	l5493
 10265  000D52                     u5760:
 10266  000D52                     
 10267                           ; BSR set to: 0
 10268  000D52  2980               	incf	___fladd@bexp& (0+255),w,b
 10269  000D54  A4D8               	btfss	status,2,c
 10270  000D56  EFAF  F006         	goto	u5771
 10271  000D5A  EFB1  F006         	goto	u5770
 10272  000D5E                     u5771:
 10273  000D5E  EFB9  F006         	goto	l5489
 10274  000D62                     u5770:
 10275  000D62                     
 10276                           ; BSR set to: 0
 10277  000D62  0E00               	movlw	0
 10278  000D64  6F76               	movwf	___fladd@b& (0+255),b
 10279  000D66  0E00               	movlw	0
 10280  000D68  6F77               	movwf	(___fladd@b+1)& (0+255),b
 10281  000D6A  0E00               	movlw	0
 10282  000D6C  6F78               	movwf	(___fladd@b+2)& (0+255),b
 10283  000D6E  0E00               	movlw	0
 10284  000D70  6F79               	movwf	(___fladd@b+3)& (0+255),b
 10285  000D72                     l5489:
 10286                           
 10287                           ; BSR set to: 0
 10288  000D72  8F78               	bsf	(___fladd@b+2)& (0+255),7,b
 10289  000D74                     
 10290                           ; BSR set to: 0
 10291  000D74  0E00               	movlw	0
 10292  000D76  6F79               	movwf	(___fladd@b+3)& (0+255),b
 10293  000D78  EFC6  F006         	goto	l5495
 10294  000D7C                     l5493:
 10295                           
 10296                           ; BSR set to: 0
 10297  000D7C  0E00               	movlw	0
 10298  000D7E  6F76               	movwf	___fladd@b& (0+255),b
 10299  000D80  0E00               	movlw	0
 10300  000D82  6F77               	movwf	(___fladd@b+1)& (0+255),b
 10301  000D84  0E00               	movlw	0
 10302  000D86  6F78               	movwf	(___fladd@b+2)& (0+255),b
 10303  000D88  0E00               	movlw	0
 10304  000D8A  6F79               	movwf	(___fladd@b+3)& (0+255),b
 10305  000D8C                     l5495:
 10306                           
 10307                           ; BSR set to: 0
 10308  000D8C  517D               	movf	(___fladd@a+3)& (0+255),w,b
 10309  000D8E  0B80               	andlw	128
 10310  000D90  6F7F               	movwf	___fladd@aexp& (0+255),b
 10311  000D92                     
 10312                           ; BSR set to: 0
 10313  000D92  517E               	movf	___fladd@signs& (0+255),w,b
 10314  000D94  197F               	xorwf	___fladd@aexp& (0+255),w,b
 10315  000D96  B4D8               	btfsc	status,2,c
 10316  000D98  EFD0  F006         	goto	u5781
 10317  000D9C  EFD2  F006         	goto	u5780
 10318  000DA0                     u5781:
 10319  000DA0  EFD3  F006         	goto	l5501
 10320  000DA4                     u5780:
 10321  000DA4                     
 10322                           ; BSR set to: 0
 10323  000DA4  8D7E               	bsf	___fladd@signs& (0+255),6,b
 10324  000DA6                     l5501:
 10325                           
 10326                           ; BSR set to: 0
 10327  000DA6  517D               	movf	(___fladd@a+3)& (0+255),w,b
 10328  000DA8  257D               	addwf	(___fladd@a+3)& (0+255),w,b
 10329  000DAA  6F7F               	movwf	___fladd@aexp& (0+255),b
 10330  000DAC                     
 10331                           ; BSR set to: 0
 10332  000DAC  AF7C               	btfss	(___fladd@a+2)& (0+255),7,b
 10333  000DAE  EFDB  F006         	goto	u5791
 10334  000DB2  EFDD  F006         	goto	u5790
 10335  000DB6                     u5791:
 10336  000DB6  EFDE  F006         	goto	l5507
 10337  000DBA                     u5790:
 10338  000DBA                     
 10339                           ; BSR set to: 0
 10340  000DBA  817F               	bsf	___fladd@aexp& (0+255),0,b
 10341  000DBC                     l5507:
 10342                           
 10343                           ; BSR set to: 0
 10344  000DBC  517F               	movf	___fladd@aexp& (0+255),w,b
 10345  000DBE  B4D8               	btfsc	status,2,c
 10346  000DC0  EFE4  F006         	goto	u5801
 10347  000DC4  EFE6  F006         	goto	u5800
 10348  000DC8                     u5801:
 10349  000DC8  EFFB  F006         	goto	l5517
 10350  000DCC                     u5800:
 10351  000DCC                     
 10352                           ; BSR set to: 0
 10353  000DCC  297F               	incf	___fladd@aexp& (0+255),w,b
 10354  000DCE  A4D8               	btfss	status,2,c
 10355  000DD0  EFEC  F006         	goto	u5811
 10356  000DD4  EFEE  F006         	goto	u5810
 10357  000DD8                     u5811:
 10358  000DD8  EFF6  F006         	goto	l5513
 10359  000DDC                     u5810:
 10360  000DDC                     
 10361                           ; BSR set to: 0
 10362  000DDC  0E00               	movlw	0
 10363  000DDE  6F7A               	movwf	___fladd@a& (0+255),b
 10364  000DE0  0E00               	movlw	0
 10365  000DE2  6F7B               	movwf	(___fladd@a+1)& (0+255),b
 10366  000DE4  0E00               	movlw	0
 10367  000DE6  6F7C               	movwf	(___fladd@a+2)& (0+255),b
 10368  000DE8  0E00               	movlw	0
 10369  000DEA  6F7D               	movwf	(___fladd@a+3)& (0+255),b
 10370  000DEC                     l5513:
 10371                           
 10372                           ; BSR set to: 0
 10373  000DEC  8F7C               	bsf	(___fladd@a+2)& (0+255),7,b
 10374  000DEE                     
 10375                           ; BSR set to: 0
 10376  000DEE  0E00               	movlw	0
 10377  000DF0  6F7D               	movwf	(___fladd@a+3)& (0+255),b
 10378  000DF2  EF03  F007         	goto	l5519
 10379  000DF6                     l5517:
 10380                           
 10381                           ; BSR set to: 0
 10382  000DF6  0E00               	movlw	0
 10383  000DF8  6F7A               	movwf	___fladd@a& (0+255),b
 10384  000DFA  0E00               	movlw	0
 10385  000DFC  6F7B               	movwf	(___fladd@a+1)& (0+255),b
 10386  000DFE  0E00               	movlw	0
 10387  000E00  6F7C               	movwf	(___fladd@a+2)& (0+255),b
 10388  000E02  0E00               	movlw	0
 10389  000E04  6F7D               	movwf	(___fladd@a+3)& (0+255),b
 10390  000E06                     l5519:
 10391                           
 10392                           ; BSR set to: 0
 10393  000E06  5180               	movf	___fladd@bexp& (0+255),w,b
 10394  000E08  5D7F               	subwf	___fladd@aexp& (0+255),w,b
 10395  000E0A  B0D8               	btfsc	status,0,c
 10396  000E0C  EF0A  F007         	goto	u5821
 10397  000E10  EF0C  F007         	goto	u5820
 10398  000E14                     u5821:
 10399  000E14  EF33  F007         	goto	l5555
 10400  000E18                     u5820:
 10401  000E18                     
 10402                           ; BSR set to: 0
 10403  000E18  AD7E               	btfss	___fladd@signs& (0+255),6,b
 10404  000E1A  EF11  F007         	goto	u5831
 10405  000E1E  EF13  F007         	goto	u5830
 10406  000E22                     u5831:
 10407  000E22  EF15  F007         	goto	l5525
 10408  000E26                     u5830:
 10409  000E26                     
 10410                           ; BSR set to: 0
 10411  000E26  0E80               	movlw	128
 10412  000E28  1B7E               	xorwf	___fladd@signs& (0+255),f,b
 10413  000E2A                     l5525:
 10414                           
 10415                           ; BSR set to: 0
 10416  000E2A  C080  F081         	movff	___fladd@bexp,___fladd@grs
 10417  000E2E                     
 10418                           ; BSR set to: 0
 10419  000E2E  C07F  F080         	movff	___fladd@aexp,___fladd@bexp
 10420  000E32                     
 10421                           ; BSR set to: 0
 10422  000E32  C081  F07F         	movff	___fladd@grs,___fladd@aexp
 10423  000E36                     
 10424                           ; BSR set to: 0
 10425  000E36  C076  F081         	movff	___fladd@b,___fladd@grs
 10426  000E3A                     
 10427                           ; BSR set to: 0
 10428  000E3A  C07A  F076         	movff	___fladd@a,___fladd@b
 10429  000E3E                     
 10430                           ; BSR set to: 0
 10431  000E3E  C081  F07A         	movff	___fladd@grs,___fladd@a
 10432  000E42                     
 10433                           ; BSR set to: 0
 10434  000E42  C077  F081         	movff	___fladd@b+1,___fladd@grs
 10435  000E46                     
 10436                           ; BSR set to: 0
 10437  000E46  C07B  F077         	movff	___fladd@a+1,___fladd@b+1
 10438  000E4A                     
 10439                           ; BSR set to: 0
 10440  000E4A  C081  F07B         	movff	___fladd@grs,___fladd@a+1
 10441  000E4E                     
 10442                           ; BSR set to: 0
 10443  000E4E  C078  F081         	movff	___fladd@b+2,___fladd@grs
 10444  000E52                     
 10445                           ; BSR set to: 0
 10446  000E52  C07C  F078         	movff	___fladd@a+2,___fladd@b+2
 10447  000E56                     
 10448                           ; BSR set to: 0
 10449  000E56  C081  F07C         	movff	___fladd@grs,___fladd@a+2
 10450  000E5A                     
 10451                           ; BSR set to: 0
 10452  000E5A  C079  F081         	movff	___fladd@b+3,___fladd@grs
 10453  000E5E                     
 10454                           ; BSR set to: 0
 10455  000E5E  C07D  F079         	movff	___fladd@a+3,___fladd@b+3
 10456  000E62                     
 10457                           ; BSR set to: 0
 10458  000E62  C081  F07D         	movff	___fladd@grs,___fladd@a+3
 10459  000E66                     l5555:
 10460                           
 10461                           ; BSR set to: 0
 10462  000E66  0E00               	movlw	0
 10463  000E68  6F81               	movwf	___fladd@grs& (0+255),b
 10464  000E6A                     
 10465                           ; BSR set to: 0
 10466  000E6A  5180               	movf	___fladd@bexp& (0+255),w,b
 10467  000E6C  C07F  F057         	movff	___fladd@aexp,??___fladd
 10468  000E70  6A58               	clrf	(??___fladd+1)^0,c
 10469  000E72  5E57               	subwf	??___fladd^0,f,c
 10470  000E74  0E00               	movlw	0
 10471  000E76  5A58               	subwfb	(??___fladd+1)^0,f,c
 10472  000E78  BE58               	btfsc	(??___fladd+1)^0,7,c
 10473  000E7A  EF48  F007         	goto	u5841
 10474  000E7E  5058               	movf	(??___fladd+1)^0,w,c
 10475  000E80  E109               	bnz	u5840
 10476  000E82  0E1A               	movlw	26
 10477  000E84  5C57               	subwf	??___fladd^0,w,c
 10478  000E86  A0D8               	btfss	status,0,c
 10479  000E88  EF48  F007         	goto	u5841
 10480  000E8C  EF4A  F007         	goto	u5840
 10481  000E90                     u5841:
 10482  000E90  EF81  F007         	goto	l1317
 10483  000E94                     u5840:
 10484  000E94                     
 10485                           ; BSR set to: 0
 10486  000E94  5176               	movf	___fladd@b& (0+255),w,b
 10487  000E96  1177               	iorwf	(___fladd@b+1)& (0+255),w,b
 10488  000E98  1178               	iorwf	(___fladd@b+2)& (0+255),w,b
 10489  000E9A  1179               	iorwf	(___fladd@b+3)& (0+255),w,b
 10490  000E9C  A4D8               	btfss	status,2,c
 10491  000E9E  EF53  F007         	goto	u5851
 10492  000EA2  EF56  F007         	goto	u5850
 10493  000EA6                     u5851:
 10494  000EA6  0E01               	movlw	1
 10495  000EA8  EF57  F007         	goto	u5860
 10496  000EAC                     u5850:
 10497  000EAC  0E00               	movlw	0
 10498  000EAE                     u5860:
 10499  000EAE  6F81               	movwf	___fladd@grs& (0+255),b
 10500  000EB0                     
 10501                           ; BSR set to: 0
 10502  000EB0  0E00               	movlw	0
 10503  000EB2  6F76               	movwf	___fladd@b& (0+255),b
 10504  000EB4  0E00               	movlw	0
 10505  000EB6  6F77               	movwf	(___fladd@b+1)& (0+255),b
 10506  000EB8  0E00               	movlw	0
 10507  000EBA  6F78               	movwf	(___fladd@b+2)& (0+255),b
 10508  000EBC  0E00               	movlw	0
 10509  000EBE  6F79               	movwf	(___fladd@b+3)& (0+255),b
 10510  000EC0                     
 10511                           ; BSR set to: 0
 10512  000EC0  C07F  F080         	movff	___fladd@aexp,___fladd@bexp
 10513  000EC4  EF8A  F007         	goto	l1316
 10514  000EC8                     l1318:
 10515                           
 10516                           ; BSR set to: 0
 10517  000EC8  A181               	btfss	___fladd@grs& (0+255),0,b
 10518  000ECA  EF69  F007         	goto	u5871
 10519  000ECE  EF6B  F007         	goto	u5870
 10520  000ED2                     u5871:
 10521  000ED2  EF71  F007         	goto	l5567
 10522  000ED6                     u5870:
 10523  000ED6                     
 10524                           ; BSR set to: 0
 10525  000ED6  90D8               	bcf	status,0,c
 10526  000ED8  3181               	rrcf	___fladd@grs& (0+255),w,b
 10527  000EDA  0901               	iorlw	1
 10528  000EDC  6F81               	movwf	___fladd@grs& (0+255),b
 10529  000EDE  EF73  F007         	goto	l5569
 10530  000EE2                     l5567:
 10531                           
 10532                           ; BSR set to: 0
 10533  000EE2  90D8               	bcf	status,0,c
 10534  000EE4  3381               	rrcf	___fladd@grs& (0+255),f,b
 10535  000EE6                     l5569:
 10536                           
 10537                           ; BSR set to: 0
 10538  000EE6  A176               	btfss	___fladd@b& (0+255),0,b
 10539  000EE8  EF78  F007         	goto	u5881
 10540  000EEC  EF7A  F007         	goto	u5880
 10541  000EF0                     u5881:
 10542  000EF0  EF7B  F007         	goto	l5573
 10543  000EF4                     u5880:
 10544  000EF4                     
 10545                           ; BSR set to: 0
 10546  000EF4  8F81               	bsf	___fladd@grs& (0+255),7,b
 10547  000EF6                     l5573:
 10548                           
 10549                           ; BSR set to: 0
 10550  000EF6  3579               	rlcf	(___fladd@b+3)& (0+255),w,b
 10551  000EF8  3379               	rrcf	(___fladd@b+3)& (0+255),f,b
 10552  000EFA  3378               	rrcf	(___fladd@b+2)& (0+255),f,b
 10553  000EFC  3377               	rrcf	(___fladd@b+1)& (0+255),f,b
 10554  000EFE  3376               	rrcf	___fladd@b& (0+255),f,b
 10555  000F00                     
 10556                           ; BSR set to: 0
 10557  000F00  2B80               	incf	___fladd@bexp& (0+255),f,b
 10558  000F02                     l1317:
 10559                           
 10560                           ; BSR set to: 0
 10561  000F02  517F               	movf	___fladd@aexp& (0+255),w,b
 10562  000F04  5D80               	subwf	___fladd@bexp& (0+255),w,b
 10563  000F06  A0D8               	btfss	status,0,c
 10564  000F08  EF88  F007         	goto	u5891
 10565  000F0C  EF8A  F007         	goto	u5890
 10566  000F10                     u5891:
 10567  000F10  EF64  F007         	goto	l1318
 10568  000F14                     u5890:
 10569  000F14                     l1316:
 10570                           
 10571                           ; BSR set to: 0
 10572  000F14  BD7E               	btfsc	___fladd@signs& (0+255),6,b
 10573  000F16  EF8F  F007         	goto	u5901
 10574  000F1A  EF91  F007         	goto	u5900
 10575  000F1E                     u5901:
 10576  000F1E  EFD1  F007         	goto	l5601
 10577  000F22                     u5900:
 10578  000F22                     
 10579                           ; BSR set to: 0
 10580  000F22  5180               	movf	___fladd@bexp& (0+255),w,b
 10581  000F24  A4D8               	btfss	status,2,c
 10582  000F26  EF97  F007         	goto	u5911
 10583  000F2A  EF99  F007         	goto	u5910
 10584  000F2E                     u5911:
 10585  000F2E  EFA3  F007         	goto	l5583
 10586  000F32                     u5910:
 10587  000F32                     
 10588                           ; BSR set to: 0
 10589  000F32  0E00               	movlw	0
 10590  000F34  6F76               	movwf	?___fladd& (0+255),b
 10591  000F36  0E00               	movlw	0
 10592  000F38  6F77               	movwf	(?___fladd+1)& (0+255),b
 10593  000F3A  0E00               	movlw	0
 10594  000F3C  6F78               	movwf	(?___fladd+2)& (0+255),b
 10595  000F3E  0E00               	movlw	0
 10596  000F40  6F79               	movwf	(?___fladd+3)& (0+255),b
 10597  000F42  EFF2  F008         	goto	l1325
 10598  000F46                     l5583:
 10599                           
 10600                           ; BSR set to: 0
 10601  000F46  517A               	movf	___fladd@a& (0+255),w,b
 10602  000F48  2776               	addwf	___fladd@b& (0+255),f,b
 10603  000F4A  517B               	movf	(___fladd@a+1)& (0+255),w,b
 10604  000F4C  2377               	addwfc	(___fladd@b+1)& (0+255),f,b
 10605  000F4E  517C               	movf	(___fladd@a+2)& (0+255),w,b
 10606  000F50  2378               	addwfc	(___fladd@b+2)& (0+255),f,b
 10607  000F52  517D               	movf	(___fladd@a+3)& (0+255),w,b
 10608  000F54  2379               	addwfc	(___fladd@b+3)& (0+255),f,b
 10609  000F56                     
 10610                           ; BSR set to: 0
 10611  000F56  A179               	btfss	(___fladd@b+3)& (0+255),0,b
 10612  000F58  EFB0  F007         	goto	u5921
 10613  000F5C  EFB2  F007         	goto	u5920
 10614  000F60                     u5921:
 10615  000F60  EF5E  F008         	goto	l5637
 10616  000F64                     u5920:
 10617  000F64                     
 10618                           ; BSR set to: 0
 10619  000F64  A181               	btfss	___fladd@grs& (0+255),0,b
 10620  000F66  EFB7  F007         	goto	u5931
 10621  000F6A  EFB9  F007         	goto	u5930
 10622  000F6E                     u5931:
 10623  000F6E  EFBF  F007         	goto	l5591
 10624  000F72                     u5930:
 10625  000F72                     
 10626                           ; BSR set to: 0
 10627  000F72  90D8               	bcf	status,0,c
 10628  000F74  3181               	rrcf	___fladd@grs& (0+255),w,b
 10629  000F76  0901               	iorlw	1
 10630  000F78  6F81               	movwf	___fladd@grs& (0+255),b
 10631  000F7A  EFC1  F007         	goto	l5593
 10632  000F7E                     l5591:
 10633                           
 10634                           ; BSR set to: 0
 10635  000F7E  90D8               	bcf	status,0,c
 10636  000F80  3381               	rrcf	___fladd@grs& (0+255),f,b
 10637  000F82                     l5593:
 10638                           
 10639                           ; BSR set to: 0
 10640  000F82  A176               	btfss	___fladd@b& (0+255),0,b
 10641  000F84  EFC6  F007         	goto	u5941
 10642  000F88  EFC8  F007         	goto	u5940
 10643  000F8C                     u5941:
 10644  000F8C  EFC9  F007         	goto	l5597
 10645  000F90                     u5940:
 10646  000F90                     
 10647                           ; BSR set to: 0
 10648  000F90  8F81               	bsf	___fladd@grs& (0+255),7,b
 10649  000F92                     l5597:
 10650                           
 10651                           ; BSR set to: 0
 10652  000F92  3579               	rlcf	(___fladd@b+3)& (0+255),w,b
 10653  000F94  3379               	rrcf	(___fladd@b+3)& (0+255),f,b
 10654  000F96  3378               	rrcf	(___fladd@b+2)& (0+255),f,b
 10655  000F98  3377               	rrcf	(___fladd@b+1)& (0+255),f,b
 10656  000F9A  3376               	rrcf	___fladd@b& (0+255),f,b
 10657  000F9C                     
 10658                           ; BSR set to: 0
 10659  000F9C  2B80               	incf	___fladd@bexp& (0+255),f,b
 10660  000F9E  EF5E  F008         	goto	l5637
 10661  000FA2                     l5601:
 10662                           
 10663                           ; BSR set to: 0
 10664  000FA2  517A               	movf	___fladd@a& (0+255),w,b
 10665  000FA4  5D76               	subwf	___fladd@b& (0+255),w,b
 10666  000FA6  517B               	movf	(___fladd@a+1)& (0+255),w,b
 10667  000FA8  5977               	subwfb	(___fladd@b+1)& (0+255),w,b
 10668  000FAA  517C               	movf	(___fladd@a+2)& (0+255),w,b
 10669  000FAC  5978               	subwfb	(___fladd@b+2)& (0+255),w,b
 10670  000FAE  5179               	movf	(___fladd@b+3)& (0+255),w,b
 10671  000FB0  0A80               	xorlw	128
 10672  000FB2  6E57               	movwf	??___fladd^0,c
 10673  000FB4  517D               	movf	(___fladd@a+3)& (0+255),w,b
 10674  000FB6  0A80               	xorlw	128
 10675  000FB8  5857               	subwfb	??___fladd^0,w,c
 10676  000FBA  B0D8               	btfsc	status,0,c
 10677  000FBC  EFE2  F007         	goto	u5951
 10678  000FC0  EFE4  F007         	goto	u5950
 10679  000FC4                     u5951:
 10680  000FC4  EF0F  F008         	goto	l5611
 10681  000FC8                     u5950:
 10682  000FC8                     
 10683                           ; BSR set to: 0
 10684  000FC8  5176               	movf	___fladd@b& (0+255),w,b
 10685  000FCA  5D7A               	subwf	___fladd@a& (0+255),w,b
 10686  000FCC  6E57               	movwf	??___fladd^0,c
 10687  000FCE  5177               	movf	(___fladd@b+1)& (0+255),w,b
 10688  000FD0  597B               	subwfb	(___fladd@a+1)& (0+255),w,b
 10689  000FD2  6E58               	movwf	(??___fladd+1)^0,c
 10690  000FD4  5178               	movf	(___fladd@b+2)& (0+255),w,b
 10691  000FD6  597C               	subwfb	(___fladd@a+2)& (0+255),w,b
 10692  000FD8  6E59               	movwf	(??___fladd+2)^0,c
 10693  000FDA  5179               	movf	(___fladd@b+3)& (0+255),w,b
 10694  000FDC  597D               	subwfb	(___fladd@a+3)& (0+255),w,b
 10695  000FDE  6E5A               	movwf	(??___fladd+3)^0,c
 10696  000FE0  0EFF               	movlw	255
 10697  000FE2  2457               	addwf	??___fladd^0,w,c
 10698  000FE4  6F76               	movwf	___fladd@b& (0+255),b
 10699  000FE6  0EFF               	movlw	255
 10700  000FE8  2058               	addwfc	(??___fladd+1)^0,w,c
 10701  000FEA  6F77               	movwf	(___fladd@b+1)& (0+255),b
 10702  000FEC  0EFF               	movlw	255
 10703  000FEE  2059               	addwfc	(??___fladd+2)^0,w,c
 10704  000FF0  6F78               	movwf	(___fladd@b+2)& (0+255),b
 10705  000FF2  0EFF               	movlw	255
 10706  000FF4  205A               	addwfc	(??___fladd+3)^0,w,c
 10707  000FF6  6F79               	movwf	(___fladd@b+3)& (0+255),b
 10708  000FF8  0E80               	movlw	128
 10709  000FFA  1B7E               	xorwf	___fladd@signs& (0+255),f,b
 10710  000FFC                     
 10711                           ; BSR set to: 0
 10712  000FFC  6D81               	negf	___fladd@grs& (0+255),b
 10713  000FFE                     
 10714                           ; BSR set to: 0
 10715  000FFE  5181               	movf	___fladd@grs& (0+255),w,b
 10716  001000  A4D8               	btfss	status,2,c
 10717  001002  EF05  F008         	goto	u5961
 10718  001006  EF07  F008         	goto	u5960
 10719  00100A                     u5961:
 10720  00100A  EF17  F008         	goto	l1333
 10721  00100E                     u5960:
 10722  00100E                     
 10723                           ; BSR set to: 0
 10724  00100E  0E01               	movlw	1
 10725  001010  2776               	addwf	___fladd@b& (0+255),f,b
 10726  001012  0E00               	movlw	0
 10727  001014  2377               	addwfc	(___fladd@b+1)& (0+255),f,b
 10728  001016  2378               	addwfc	(___fladd@b+2)& (0+255),f,b
 10729  001018  2379               	addwfc	(___fladd@b+3)& (0+255),f,b
 10730  00101A  EF17  F008         	goto	l1333
 10731  00101E                     l5611:
 10732                           
 10733                           ; BSR set to: 0
 10734  00101E  517A               	movf	___fladd@a& (0+255),w,b
 10735  001020  5F76               	subwf	___fladd@b& (0+255),f,b
 10736  001022  517B               	movf	(___fladd@a+1)& (0+255),w,b
 10737  001024  5B77               	subwfb	(___fladd@b+1)& (0+255),f,b
 10738  001026  517C               	movf	(___fladd@a+2)& (0+255),w,b
 10739  001028  5B78               	subwfb	(___fladd@b+2)& (0+255),f,b
 10740  00102A  517D               	movf	(___fladd@a+3)& (0+255),w,b
 10741  00102C  5B79               	subwfb	(___fladd@b+3)& (0+255),f,b
 10742  00102E                     l1333:
 10743                           
 10744                           ; BSR set to: 0
 10745  00102E  5176               	movf	___fladd@b& (0+255),w,b
 10746  001030  1177               	iorwf	(___fladd@b+1)& (0+255),w,b
 10747  001032  1178               	iorwf	(___fladd@b+2)& (0+255),w,b
 10748  001034  1179               	iorwf	(___fladd@b+3)& (0+255),w,b
 10749  001036  A4D8               	btfss	status,2,c
 10750  001038  EF20  F008         	goto	u5971
 10751  00103C  EF22  F008         	goto	u5970
 10752  001040                     u5971:
 10753  001040  EF57  F008         	goto	l5635
 10754  001044                     u5970:
 10755  001044                     
 10756                           ; BSR set to: 0
 10757  001044  5181               	movf	___fladd@grs& (0+255),w,b
 10758  001046  A4D8               	btfss	status,2,c
 10759  001048  EF28  F008         	goto	u5981
 10760  00104C  EF2A  F008         	goto	u5980
 10761  001050                     u5981:
 10762  001050  EF57  F008         	goto	l5635
 10763  001054                     u5980:
 10764  001054                     
 10765                           ; BSR set to: 0
 10766  001054  0E00               	movlw	0
 10767  001056  6F76               	movwf	?___fladd& (0+255),b
 10768  001058  0E00               	movlw	0
 10769  00105A  6F77               	movwf	(?___fladd+1)& (0+255),b
 10770  00105C  0E00               	movlw	0
 10771  00105E  6F78               	movwf	(?___fladd+2)& (0+255),b
 10772  001060  0E00               	movlw	0
 10773  001062  6F79               	movwf	(?___fladd+3)& (0+255),b
 10774  001064  EFF2  F008         	goto	l1325
 10775  001068                     l5619:
 10776                           
 10777                           ; BSR set to: 0
 10778  001068  90D8               	bcf	status,0,c
 10779  00106A  3776               	rlcf	___fladd@b& (0+255),f,b
 10780  00106C  3777               	rlcf	(___fladd@b+1)& (0+255),f,b
 10781  00106E  3778               	rlcf	(___fladd@b+2)& (0+255),f,b
 10782  001070  3779               	rlcf	(___fladd@b+3)& (0+255),f,b
 10783  001072                     
 10784                           ; BSR set to: 0
 10785  001072  AF81               	btfss	___fladd@grs& (0+255),7,b
 10786  001074  EF3E  F008         	goto	u5991
 10787  001078  EF40  F008         	goto	u5990
 10788  00107C                     u5991:
 10789  00107C  EF41  F008         	goto	l5625
 10790  001080                     u5990:
 10791  001080                     
 10792                           ; BSR set to: 0
 10793  001080  8176               	bsf	___fladd@b& (0+255),0,b
 10794  001082                     l5625:
 10795                           
 10796                           ; BSR set to: 0
 10797  001082  A181               	btfss	___fladd@grs& (0+255),0,b
 10798  001084  EF46  F008         	goto	u6001
 10799  001088  EF48  F008         	goto	u6000
 10800  00108C                     u6001:
 10801  00108C  EF4C  F008         	goto	l5629
 10802  001090                     u6000:
 10803  001090                     
 10804                           ; BSR set to: 0
 10805  001090  80D8               	bsf	status,0,c
 10806  001092  3781               	rlcf	___fladd@grs& (0+255),f,b
 10807  001094  EF4E  F008         	goto	l5631
 10808  001098                     l5629:
 10809                           
 10810                           ; BSR set to: 0
 10811  001098  90D8               	bcf	status,0,c
 10812  00109A  3781               	rlcf	___fladd@grs& (0+255),f,b
 10813  00109C                     l5631:
 10814                           
 10815                           ; BSR set to: 0
 10816  00109C  5180               	movf	___fladd@bexp& (0+255),w,b
 10817  00109E  B4D8               	btfsc	status,2,c
 10818  0010A0  EF54  F008         	goto	u6011
 10819  0010A4  EF56  F008         	goto	u6010
 10820  0010A8                     u6011:
 10821  0010A8  EF57  F008         	goto	l5635
 10822  0010AC                     u6010:
 10823  0010AC                     
 10824                           ; BSR set to: 0
 10825  0010AC  0780               	decf	___fladd@bexp& (0+255),f,b
 10826  0010AE                     l5635:
 10827                           
 10828                           ; BSR set to: 0
 10829  0010AE  AF78               	btfss	(___fladd@b+2)& (0+255),7,b
 10830  0010B0  EF5C  F008         	goto	u6021
 10831  0010B4  EF5E  F008         	goto	u6020
 10832  0010B8                     u6021:
 10833  0010B8  EF34  F008         	goto	l5619
 10834  0010BC                     u6020:
 10835  0010BC                     l5637:
 10836                           
 10837                           ; BSR set to: 0
 10838  0010BC  0E00               	movlw	0
 10839  0010BE  6F7F               	movwf	___fladd@aexp& (0+255),b
 10840  0010C0                     
 10841                           ; BSR set to: 0
 10842  0010C0  AF81               	btfss	___fladd@grs& (0+255),7,b
 10843  0010C2  EF65  F008         	goto	u6031
 10844  0010C6  EF67  F008         	goto	u6030
 10845  0010CA                     u6031:
 10846  0010CA  EF7F  F008         	goto	l1342
 10847  0010CE                     u6030:
 10848  0010CE                     
 10849                           ; BSR set to: 0
 10850  0010CE  C081  F057         	movff	___fladd@grs,??___fladd
 10851  0010D2  0E7F               	movlw	127
 10852  0010D4  1657               	andwf	??___fladd^0,f,c
 10853  0010D6  B4D8               	btfsc	status,2,c
 10854  0010D8  EF70  F008         	goto	u6041
 10855  0010DC  EF72  F008         	goto	u6040
 10856  0010E0                     u6041:
 10857  0010E0  EF76  F008         	goto	l1343
 10858  0010E4                     u6040:
 10859  0010E4                     l5643:
 10860                           
 10861                           ; BSR set to: 0
 10862  0010E4  0E01               	movlw	1
 10863  0010E6  6F7F               	movwf	___fladd@aexp& (0+255),b
 10864  0010E8  EF7F  F008         	goto	l1342
 10865  0010EC                     l1343:
 10866                           
 10867                           ; BSR set to: 0
 10868  0010EC  A176               	btfss	___fladd@b& (0+255),0,b
 10869  0010EE  EF7B  F008         	goto	u6051
 10870  0010F2  EF7D  F008         	goto	u6050
 10871  0010F6                     u6051:
 10872  0010F6  EF7F  F008         	goto	l1342
 10873  0010FA                     u6050:
 10874  0010FA  EF72  F008         	goto	l5643
 10875  0010FE                     l1342:
 10876                           
 10877                           ; BSR set to: 0
 10878  0010FE  517F               	movf	___fladd@aexp& (0+255),w,b
 10879  001100  B4D8               	btfsc	status,2,c
 10880  001102  EF85  F008         	goto	u6061
 10881  001106  EF87  F008         	goto	u6060
 10882  00110A                     u6061:
 10883  00110A  EFB2  F008         	goto	l5655
 10884  00110E                     u6060:
 10885  00110E                     
 10886                           ; BSR set to: 0
 10887  00110E  0E01               	movlw	1
 10888  001110  2776               	addwf	___fladd@b& (0+255),f,b
 10889  001112  0E00               	movlw	0
 10890  001114  2377               	addwfc	(___fladd@b+1)& (0+255),f,b
 10891  001116  2378               	addwfc	(___fladd@b+2)& (0+255),f,b
 10892  001118  2379               	addwfc	(___fladd@b+3)& (0+255),f,b
 10893  00111A                     
 10894                           ; BSR set to: 0
 10895  00111A  A179               	btfss	(___fladd@b+3)& (0+255),0,b
 10896  00111C  EF92  F008         	goto	u6071
 10897  001120  EF94  F008         	goto	u6070
 10898  001124                     u6071:
 10899  001124  EFB2  F008         	goto	l5655
 10900  001128                     u6070:
 10901  001128                     
 10902                           ; BSR set to: 0
 10903  001128  C076  F057         	movff	___fladd@b,??___fladd
 10904  00112C  C077  F058         	movff	___fladd@b+1,??___fladd+1
 10905  001130  C078  F059         	movff	___fladd@b+2,??___fladd+2
 10906  001134  C079  F05A         	movff	___fladd@b+3,??___fladd+3
 10907  001138  345A               	rlcf	(??___fladd+3)^0,w,c
 10908  00113A  325A               	rrcf	(??___fladd+3)^0,f,c
 10909  00113C  3259               	rrcf	(??___fladd+2)^0,f,c
 10910  00113E  3258               	rrcf	(??___fladd+1)^0,f,c
 10911  001140  3257               	rrcf	??___fladd^0,f,c
 10912  001142  C057  F076         	movff	??___fladd,___fladd@b
 10913  001146  C058  F077         	movff	??___fladd+1,___fladd@b+1
 10914  00114A  C059  F078         	movff	??___fladd+2,___fladd@b+2
 10915  00114E  C05A  F079         	movff	??___fladd+3,___fladd@b+3
 10916  001152  2980               	incf	___fladd@bexp& (0+255),w,b
 10917  001154  B4D8               	btfsc	status,2,c
 10918  001156  EFAF  F008         	goto	u6081
 10919  00115A  EFB1  F008         	goto	u6080
 10920  00115E                     u6081:
 10921  00115E  EFB2  F008         	goto	l5655
 10922  001162                     u6080:
 10923  001162                     
 10924                           ; BSR set to: 0
 10925  001162  2B80               	incf	___fladd@bexp& (0+255),f,b
 10926  001164                     l5655:
 10927                           
 10928                           ; BSR set to: 0
 10929  001164  2980               	incf	___fladd@bexp& (0+255),w,b
 10930  001166  B4D8               	btfsc	status,2,c
 10931  001168  EFB8  F008         	goto	u6091
 10932  00116C  EFBA  F008         	goto	u6090
 10933  001170                     u6091:
 10934  001170  EFC2  F008         	goto	l5659
 10935  001174                     u6090:
 10936  001174                     
 10937                           ; BSR set to: 0
 10938  001174  5180               	movf	___fladd@bexp& (0+255),w,b
 10939  001176  A4D8               	btfss	status,2,c
 10940  001178  EFC0  F008         	goto	u6101
 10941  00117C  EFC2  F008         	goto	u6100
 10942  001180                     u6101:
 10943  001180  EFD4  F008         	goto	l5663
 10944  001184                     u6100:
 10945  001184                     l5659:
 10946                           
 10947                           ; BSR set to: 0
 10948  001184  0E00               	movlw	0
 10949  001186  6F76               	movwf	___fladd@b& (0+255),b
 10950  001188  0E00               	movlw	0
 10951  00118A  6F77               	movwf	(___fladd@b+1)& (0+255),b
 10952  00118C  0E00               	movlw	0
 10953  00118E  6F78               	movwf	(___fladd@b+2)& (0+255),b
 10954  001190  0E00               	movlw	0
 10955  001192  6F79               	movwf	(___fladd@b+3)& (0+255),b
 10956  001194  5180               	movf	___fladd@bexp& (0+255),w,b
 10957  001196  A4D8               	btfss	status,2,c
 10958  001198  EFD0  F008         	goto	u6111
 10959  00119C  EFD2  F008         	goto	u6110
 10960  0011A0                     u6111:
 10961  0011A0  EFD4  F008         	goto	l5663
 10962  0011A4                     u6110:
 10963  0011A4                     
 10964                           ; BSR set to: 0
 10965  0011A4  0E00               	movlw	0
 10966  0011A6  6F7E               	movwf	___fladd@signs& (0+255),b
 10967  0011A8                     l5663:
 10968                           
 10969                           ; BSR set to: 0
 10970  0011A8  A180               	btfss	___fladd@bexp& (0+255),0,b
 10971  0011AA  EFD9  F008         	goto	u6121
 10972  0011AE  EFDB  F008         	goto	u6120
 10973  0011B2                     u6121:
 10974  0011B2  EFDE  F008         	goto	l5667
 10975  0011B6                     u6120:
 10976  0011B6                     
 10977                           ; BSR set to: 0
 10978  0011B6  8F78               	bsf	(___fladd@b+2)& (0+255),7,b
 10979  0011B8  EFDF  F008         	goto	l5669
 10980  0011BC                     l5667:
 10981                           
 10982                           ; BSR set to: 0
 10983  0011BC  9F78               	bcf	(___fladd@b+2)& (0+255),7,b
 10984  0011BE                     l5669:
 10985                           
 10986                           ; BSR set to: 0
 10987  0011BE  90D8               	bcf	status,0,c
 10988  0011C0  3180               	rrcf	___fladd@bexp& (0+255),w,b
 10989  0011C2  6F79               	movwf	(___fladd@b+3)& (0+255),b
 10990  0011C4                     
 10991                           ; BSR set to: 0
 10992  0011C4  AF7E               	btfss	___fladd@signs& (0+255),7,b
 10993  0011C6  EFE7  F008         	goto	u6131
 10994  0011CA  EFE9  F008         	goto	u6130
 10995  0011CE                     u6131:
 10996  0011CE  EFEA  F008         	goto	l5675
 10997  0011D2                     u6130:
 10998  0011D2                     
 10999                           ; BSR set to: 0
 11000  0011D2  8F79               	bsf	(___fladd@b+3)& (0+255),7,b
 11001  0011D4                     l5675:
 11002                           
 11003                           ; BSR set to: 0
 11004  0011D4  C076  F076         	movff	___fladd@b,?___fladd
 11005  0011D8  C077  F077         	movff	___fladd@b+1,?___fladd+1
 11006  0011DC  C078  F078         	movff	___fladd@b+2,?___fladd+2
 11007  0011E0  C079  F079         	movff	___fladd@b+3,?___fladd+3
 11008  0011E4                     l1325:
 11009                           
 11010                           ; BSR set to: 0
 11011  0011E4  0012               	return		;funcret
 11012  0011E6                     __end_of___fladd:
 11013                           	callstack 0
 11014                           
 11015 ;; *************** function ___flneg *****************
 11016 ;; Defined at:
 11017 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flneg.c"
 11018 ;; Parameters:    Size  Location     Type
 11019 ;;  f1              4    1[COMRAM] unsigned char 
 11020 ;; Auto vars:     Size  Location     Type
 11021 ;;		None
 11022 ;; Return value:  Size  Location     Type
 11023 ;;                  4    1[COMRAM] unsigned char 
 11024 ;; Registers used:
 11025 ;;		wreg, status,2, status,0
 11026 ;; Tracked objects:
 11027 ;;		On entry : 0/0
 11028 ;;		On exit  : 0/0
 11029 ;;		Unchanged: 0/0
 11030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11031 ;;      Params:         4       0       0       0       0       0       0       0       0
 11032 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11033 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11034 ;;      Totals:         4       0       0       0       0       0       0       0       0
 11035 ;;Total ram usage:        4 bytes
 11036 ;; Hardware stack levels used: 1
 11037 ;; Hardware stack levels required when called: 3
 11038 ;; This function calls:
 11039 ;;		Nothing
 11040 ;; This function is called by:
 11041 ;;		_sprintf
 11042 ;;		_pow
 11043 ;;		_exp
 11044 ;; This function uses a non-reentrant model
 11045 ;;
 11046                           
 11047                           	psect	text40
 11048  0042CC                     __ptext40:
 11049                           	callstack 0
 11050  0042CC                     ___flneg:
 11051                           	callstack 24
 11052  0042CC  5002               	movf	___flneg@f1^0,w,c
 11053  0042CE  1003               	iorwf	(___flneg@f1+1)^0,w,c
 11054  0042D0  1004               	iorwf	(___flneg@f1+2)^0,w,c
 11055  0042D2  1005               	iorwf	(___flneg@f1+3)^0,w,c
 11056  0042D4  B4D8               	btfsc	status,2,c
 11057  0042D6  EF6F  F021         	goto	u6691
 11058  0042DA  EF71  F021         	goto	u6690
 11059  0042DE                     u6691:
 11060  0042DE  EF79  F021         	goto	l6031
 11061  0042E2                     u6690:
 11062  0042E2  0E00               	movlw	0
 11063  0042E4  1A02               	xorwf	___flneg@f1^0,f,c
 11064  0042E6  0E00               	movlw	0
 11065  0042E8  1A03               	xorwf	(___flneg@f1+1)^0,f,c
 11066  0042EA  0E00               	movlw	0
 11067  0042EC  1A04               	xorwf	(___flneg@f1+2)^0,f,c
 11068  0042EE  0E80               	movlw	128
 11069  0042F0  1A05               	xorwf	(___flneg@f1+3)^0,f,c
 11070  0042F2                     l6031:
 11071  0042F2  C002  F002         	movff	___flneg@f1,?___flneg
 11072  0042F6  C003  F003         	movff	___flneg@f1+1,?___flneg+1
 11073  0042FA  C004  F004         	movff	___flneg@f1+2,?___flneg+2
 11074  0042FE  C005  F005         	movff	___flneg@f1+3,?___flneg+3
 11075  004302  0012               	return		;funcret
 11076  004304                     __end_of___flneg:
 11077                           	callstack 0
 11078                           
 11079 ;; *************** function ___flge *****************
 11080 ;; Defined at:
 11081 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\flge.c"
 11082 ;; Parameters:    Size  Location     Type
 11083 ;;  ff1             4    1[COMRAM] unsigned char 
 11084 ;;  ff2             4    5[COMRAM] unsigned char 
 11085 ;; Auto vars:     Size  Location     Type
 11086 ;;		None
 11087 ;; Return value:  Size  Location     Type
 11088 ;;		None               void
 11089 ;; Registers used:
 11090 ;;		wreg, status,2, status,0
 11091 ;; Tracked objects:
 11092 ;;		On entry : 0/0
 11093 ;;		On exit  : 0/0
 11094 ;;		Unchanged: 0/0
 11095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11096 ;;      Params:         8       0       0       0       0       0       0       0       0
 11097 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11098 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11099 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11100 ;;Total ram usage:       12 bytes
 11101 ;; Hardware stack levels used: 1
 11102 ;; Hardware stack levels required when called: 3
 11103 ;; This function calls:
 11104 ;;		Nothing
 11105 ;; This function is called by:
 11106 ;;		_sprintf
 11107 ;;		_pow
 11108 ;;		_exp
 11109 ;;		_floor
 11110 ;; This function uses a non-reentrant model
 11111 ;;
 11112                           
 11113                           	psect	text41
 11114  0037AC                     __ptext41:
 11115                           	callstack 0
 11116  0037AC                     ___flge:
 11117                           	callstack 23
 11118  0037AC  0E00               	movlw	0
 11119  0037AE  1402               	andwf	___flge@ff1^0,w,c
 11120  0037B0  6E0A               	movwf	??___flge^0,c
 11121  0037B2  0E00               	movlw	0
 11122  0037B4  1403               	andwf	(___flge@ff1+1)^0,w,c
 11123  0037B6  6E0B               	movwf	(??___flge+1)^0,c
 11124  0037B8  0E80               	movlw	128
 11125  0037BA  1404               	andwf	(___flge@ff1+2)^0,w,c
 11126  0037BC  6E0C               	movwf	(??___flge+2)^0,c
 11127  0037BE  0E7F               	movlw	127
 11128  0037C0  1405               	andwf	(___flge@ff1+3)^0,w,c
 11129  0037C2  6E0D               	movwf	(??___flge+3)^0,c
 11130  0037C4  500A               	movf	??___flge^0,w,c
 11131  0037C6  100B               	iorwf	(??___flge+1)^0,w,c
 11132  0037C8  100C               	iorwf	(??___flge+2)^0,w,c
 11133  0037CA  100D               	iorwf	(??___flge+3)^0,w,c
 11134  0037CC  A4D8               	btfss	status,2,c
 11135  0037CE  EFEB  F01B         	goto	u6331
 11136  0037D2  EFED  F01B         	goto	u6330
 11137  0037D6                     u6331:
 11138  0037D6  EFF5  F01B         	goto	l5813
 11139  0037DA                     u6330:
 11140  0037DA  0E00               	movlw	0
 11141  0037DC  6E02               	movwf	___flge@ff1^0,c
 11142  0037DE  0E00               	movlw	0
 11143  0037E0  6E03               	movwf	(___flge@ff1+1)^0,c
 11144  0037E2  0E00               	movlw	0
 11145  0037E4  6E04               	movwf	(___flge@ff1+2)^0,c
 11146  0037E6  0E00               	movlw	0
 11147  0037E8  6E05               	movwf	(___flge@ff1+3)^0,c
 11148  0037EA                     l5813:
 11149  0037EA  0E00               	movlw	0
 11150  0037EC  1406               	andwf	___flge@ff2^0,w,c
 11151  0037EE  6E0A               	movwf	??___flge^0,c
 11152  0037F0  0E00               	movlw	0
 11153  0037F2  1407               	andwf	(___flge@ff2+1)^0,w,c
 11154  0037F4  6E0B               	movwf	(??___flge+1)^0,c
 11155  0037F6  0E80               	movlw	128
 11156  0037F8  1408               	andwf	(___flge@ff2+2)^0,w,c
 11157  0037FA  6E0C               	movwf	(??___flge+2)^0,c
 11158  0037FC  0E7F               	movlw	127
 11159  0037FE  1409               	andwf	(___flge@ff2+3)^0,w,c
 11160  003800  6E0D               	movwf	(??___flge+3)^0,c
 11161  003802  500A               	movf	??___flge^0,w,c
 11162  003804  100B               	iorwf	(??___flge+1)^0,w,c
 11163  003806  100C               	iorwf	(??___flge+2)^0,w,c
 11164  003808  100D               	iorwf	(??___flge+3)^0,w,c
 11165  00380A  A4D8               	btfss	status,2,c
 11166  00380C  EF0A  F01C         	goto	u6341
 11167  003810  EF0C  F01C         	goto	u6340
 11168  003814                     u6341:
 11169  003814  EF14  F01C         	goto	l5817
 11170  003818                     u6340:
 11171  003818  0E00               	movlw	0
 11172  00381A  6E06               	movwf	___flge@ff2^0,c
 11173  00381C  0E00               	movlw	0
 11174  00381E  6E07               	movwf	(___flge@ff2+1)^0,c
 11175  003820  0E00               	movlw	0
 11176  003822  6E08               	movwf	(___flge@ff2+2)^0,c
 11177  003824  0E00               	movlw	0
 11178  003826  6E09               	movwf	(___flge@ff2+3)^0,c
 11179  003828                     l5817:
 11180  003828  AE05               	btfss	(___flge@ff1+3)^0,7,c
 11181  00382A  EF19  F01C         	goto	u6351
 11182  00382E  EF1B  F01C         	goto	u6350
 11183  003832                     u6351:
 11184  003832  EF24  F01C         	goto	l5821
 11185  003836                     u6350:
 11186  003836  6C02               	negf	___flge@ff1^0,c
 11187  003838  1E03               	comf	(___flge@ff1+1)^0,f,c
 11188  00383A  B0D8               	btfsc	status,0,c
 11189  00383C  2A03               	incf	(___flge@ff1+1)^0,f,c
 11190  00383E  1E04               	comf	(___flge@ff1+2)^0,f,c
 11191  003840  B0D8               	btfsc	status,0,c
 11192  003842  2A04               	incf	(___flge@ff1+2)^0,f,c
 11193  003844  0E80               	movlw	128
 11194  003846  5605               	subfwb	(___flge@ff1+3)^0,f,c
 11195  003848                     l5821:
 11196  003848  AE09               	btfss	(___flge@ff2+3)^0,7,c
 11197  00384A  EF29  F01C         	goto	u6361
 11198  00384E  EF2B  F01C         	goto	u6360
 11199  003852                     u6361:
 11200  003852  EF34  F01C         	goto	l1044
 11201  003856                     u6360:
 11202  003856  6C06               	negf	___flge@ff2^0,c
 11203  003858  1E07               	comf	(___flge@ff2+1)^0,f,c
 11204  00385A  B0D8               	btfsc	status,0,c
 11205  00385C  2A07               	incf	(___flge@ff2+1)^0,f,c
 11206  00385E  1E08               	comf	(___flge@ff2+2)^0,f,c
 11207  003860  B0D8               	btfsc	status,0,c
 11208  003862  2A08               	incf	(___flge@ff2+2)^0,f,c
 11209  003864  0E80               	movlw	128
 11210  003866  5609               	subfwb	(___flge@ff2+3)^0,f,c
 11211  003868                     l1044:
 11212  003868  0E00               	movlw	0
 11213  00386A  1A02               	xorwf	___flge@ff1^0,f,c
 11214  00386C  0E00               	movlw	0
 11215  00386E  1A03               	xorwf	(___flge@ff1+1)^0,f,c
 11216  003870  0E00               	movlw	0
 11217  003872  1A04               	xorwf	(___flge@ff1+2)^0,f,c
 11218  003874  0E80               	movlw	128
 11219  003876  1A05               	xorwf	(___flge@ff1+3)^0,f,c
 11220  003878  0E00               	movlw	0
 11221  00387A  1A06               	xorwf	___flge@ff2^0,f,c
 11222  00387C  0E00               	movlw	0
 11223  00387E  1A07               	xorwf	(___flge@ff2+1)^0,f,c
 11224  003880  0E00               	movlw	0
 11225  003882  1A08               	xorwf	(___flge@ff2+2)^0,f,c
 11226  003884  0E80               	movlw	128
 11227  003886  1A09               	xorwf	(___flge@ff2+3)^0,f,c
 11228  003888  5006               	movf	___flge@ff2^0,w,c
 11229  00388A  5C02               	subwf	___flge@ff1^0,w,c
 11230  00388C  5007               	movf	(___flge@ff2+1)^0,w,c
 11231  00388E  5803               	subwfb	(___flge@ff1+1)^0,w,c
 11232  003890  5008               	movf	(___flge@ff2+2)^0,w,c
 11233  003892  5804               	subwfb	(___flge@ff1+2)^0,w,c
 11234  003894  5009               	movf	(___flge@ff2+3)^0,w,c
 11235  003896  5805               	subwfb	(___flge@ff1+3)^0,w,c
 11236  003898  B0D8               	btfsc	status,0,c
 11237  00389A  EF51  F01C         	goto	u6371
 11238  00389E  EF53  F01C         	goto	u6370
 11239  0038A2                     u6371:
 11240  0038A2  EF56  F01C         	goto	l5827
 11241  0038A6                     u6370:
 11242  0038A6  90D8               	bcf	status,0,c
 11243  0038A8  EF57  F01C         	goto	l1045
 11244  0038AC                     l5827:
 11245  0038AC  80D8               	bsf	status,0,c
 11246  0038AE                     l1045:
 11247  0038AE  0012               	return		;funcret
 11248  0038B0                     __end_of___flge:
 11249                           	callstack 0
 11250                           
 11251 ;; *************** function ___fleq *****************
 11252 ;; Defined at:
 11253 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\fleq.c"
 11254 ;; Parameters:    Size  Location     Type
 11255 ;;  ff1             4   50[COMRAM] unsigned char 
 11256 ;;  ff2             4   54[COMRAM] unsigned char 
 11257 ;; Auto vars:     Size  Location     Type
 11258 ;;		None
 11259 ;; Return value:  Size  Location     Type
 11260 ;;		None               void
 11261 ;; Registers used:
 11262 ;;		wreg, status,2, status,0
 11263 ;; Tracked objects:
 11264 ;;		On entry : 0/0
 11265 ;;		On exit  : 0/0
 11266 ;;		Unchanged: 0/0
 11267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11268 ;;      Params:         8       0       0       0       0       0       0       0       0
 11269 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11270 ;;      Temps:          4       0       0       0       0       0       0       0       0
 11271 ;;      Totals:        12       0       0       0       0       0       0       0       0
 11272 ;;Total ram usage:       12 bytes
 11273 ;; Hardware stack levels used: 1
 11274 ;; Hardware stack levels required when called: 3
 11275 ;; This function calls:
 11276 ;;		Nothing
 11277 ;; This function is called by:
 11278 ;;		_sprintf
 11279 ;;		_pow
 11280 ;;		_exp
 11281 ;;		_frexp
 11282 ;;		_ldexp
 11283 ;;		_log
 11284 ;; This function uses a non-reentrant model
 11285 ;;
 11286                           
 11287                           	psect	text42
 11288  003BAC                     __ptext42:
 11289                           	callstack 0
 11290  003BAC                     ___fleq:
 11291                           	callstack 23
 11292  003BAC  0E00               	movlw	0
 11293  003BAE  1433               	andwf	___fleq@ff1^0,w,c
 11294  003BB0  6E3B               	movwf	??___fleq^0,c
 11295  003BB2  0E00               	movlw	0
 11296  003BB4  1434               	andwf	(___fleq@ff1+1)^0,w,c
 11297  003BB6  6E3C               	movwf	(??___fleq+1)^0,c
 11298  003BB8  0E80               	movlw	128
 11299  003BBA  1435               	andwf	(___fleq@ff1+2)^0,w,c
 11300  003BBC  6E3D               	movwf	(??___fleq+2)^0,c
 11301  003BBE  0E7F               	movlw	127
 11302  003BC0  1436               	andwf	(___fleq@ff1+3)^0,w,c
 11303  003BC2  6E3E               	movwf	(??___fleq+3)^0,c
 11304  003BC4  503B               	movf	??___fleq^0,w,c
 11305  003BC6  103C               	iorwf	(??___fleq+1)^0,w,c
 11306  003BC8  103D               	iorwf	(??___fleq+2)^0,w,c
 11307  003BCA  103E               	iorwf	(??___fleq+3)^0,w,c
 11308  003BCC  A4D8               	btfss	status,2,c
 11309  003BCE  EFEB  F01D         	goto	u5721
 11310  003BD2  EFED  F01D         	goto	u5720
 11311  003BD6                     u5721:
 11312  003BD6  EFF5  F01D         	goto	l5465
 11313  003BDA                     u5720:
 11314  003BDA  0E00               	movlw	0
 11315  003BDC  6E33               	movwf	___fleq@ff1^0,c
 11316  003BDE  0E00               	movlw	0
 11317  003BE0  6E34               	movwf	(___fleq@ff1+1)^0,c
 11318  003BE2  0E00               	movlw	0
 11319  003BE4  6E35               	movwf	(___fleq@ff1+2)^0,c
 11320  003BE6  0E00               	movlw	0
 11321  003BE8  6E36               	movwf	(___fleq@ff1+3)^0,c
 11322  003BEA                     l5465:
 11323  003BEA  0E00               	movlw	0
 11324  003BEC  1437               	andwf	___fleq@ff2^0,w,c
 11325  003BEE  6E3B               	movwf	??___fleq^0,c
 11326  003BF0  0E00               	movlw	0
 11327  003BF2  1438               	andwf	(___fleq@ff2+1)^0,w,c
 11328  003BF4  6E3C               	movwf	(??___fleq+1)^0,c
 11329  003BF6  0E80               	movlw	128
 11330  003BF8  1439               	andwf	(___fleq@ff2+2)^0,w,c
 11331  003BFA  6E3D               	movwf	(??___fleq+2)^0,c
 11332  003BFC  0E7F               	movlw	127
 11333  003BFE  143A               	andwf	(___fleq@ff2+3)^0,w,c
 11334  003C00  6E3E               	movwf	(??___fleq+3)^0,c
 11335  003C02  503B               	movf	??___fleq^0,w,c
 11336  003C04  103C               	iorwf	(??___fleq+1)^0,w,c
 11337  003C06  103D               	iorwf	(??___fleq+2)^0,w,c
 11338  003C08  103E               	iorwf	(??___fleq+3)^0,w,c
 11339  003C0A  A4D8               	btfss	status,2,c
 11340  003C0C  EF0A  F01E         	goto	u5731
 11341  003C10  EF0C  F01E         	goto	u5730
 11342  003C14                     u5731:
 11343  003C14  EF14  F01E         	goto	l5469
 11344  003C18                     u5730:
 11345  003C18  0E00               	movlw	0
 11346  003C1A  6E37               	movwf	___fleq@ff2^0,c
 11347  003C1C  0E00               	movlw	0
 11348  003C1E  6E38               	movwf	(___fleq@ff2+1)^0,c
 11349  003C20  0E00               	movlw	0
 11350  003C22  6E39               	movwf	(___fleq@ff2+2)^0,c
 11351  003C24  0E00               	movlw	0
 11352  003C26  6E3A               	movwf	(___fleq@ff2+3)^0,c
 11353  003C28                     l5469:
 11354  003C28  5037               	movf	___fleq@ff2^0,w,c
 11355  003C2A  1833               	xorwf	___fleq@ff1^0,w,c
 11356  003C2C  E10F               	bnz	u5740
 11357  003C2E  5038               	movf	(___fleq@ff2+1)^0,w,c
 11358  003C30  1834               	xorwf	(___fleq@ff1+1)^0,w,c
 11359  003C32  E10C               	bnz	u5740
 11360  003C34  5039               	movf	(___fleq@ff2+2)^0,w,c
 11361  003C36  1835               	xorwf	(___fleq@ff1+2)^0,w,c
 11362  003C38  E109               	bnz	u5740
 11363  003C3A  503A               	movf	(___fleq@ff2+3)^0,w,c
 11364  003C3C  1836               	xorwf	(___fleq@ff1+3)^0,w,c
 11365  003C3E  B4D8               	btfsc	status,2,c
 11366  003C40  EF24  F01E         	goto	u5741
 11367  003C44  EF26  F01E         	goto	u5740
 11368  003C48                     u5741:
 11369  003C48  EF29  F01E         	goto	l5473
 11370  003C4C                     u5740:
 11371  003C4C  90D8               	bcf	status,0,c
 11372  003C4E  EF2A  F01E         	goto	l1038
 11373  003C52                     l5473:
 11374  003C52  80D8               	bsf	status,0,c
 11375  003C54                     l1038:
 11376  003C54  0012               	return		;funcret
 11377  003C56                     __end_of___fleq:
 11378                           	callstack 0
 11379                           
 11380 ;; *************** function _LCD_WriteString *****************
 11381 ;; Defined at:
 11382 ;;		line 59 in file "LCD.c"
 11383 ;; Parameters:    Size  Location     Type
 11384 ;;  iData           2    4[COMRAM] PTR unsigned char 
 11385 ;;		 -> gsTotalSecs(4), ComputeWaterVol@sEchoMM(11), ComputeWaterVol@sFill(14), ComputeWaterVol@sGals(15), 
 11386 ;;		 -> STR_2(17), STR_1(15), 
 11387 ;; Auto vars:     Size  Location     Type
 11388 ;;  ix              1    8[COMRAM] unsigned char 
 11389 ;; Return value:  Size  Location     Type
 11390 ;;                  1    wreg      void 
 11391 ;; Registers used:
 11392 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11393 ;; Tracked objects:
 11394 ;;		On entry : 0/0
 11395 ;;		On exit  : 0/0
 11396 ;;		Unchanged: 0/0
 11397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11398 ;;      Params:         2       0       0       0       0       0       0       0       0
 11399 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11400 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11401 ;;      Totals:         5       0       0       0       0       0       0       0       0
 11402 ;;Total ram usage:        5 bytes
 11403 ;; Hardware stack levels used: 1
 11404 ;; Hardware stack levels required when called: 4
 11405 ;; This function calls:
 11406 ;;		_LCD_WriteChar
 11407 ;; This function is called by:
 11408 ;;		_main
 11409 ;;		_ComputeWaterVol
 11410 ;;		_ComputeTOD
 11411 ;; This function uses a non-reentrant model
 11412 ;;
 11413                           
 11414                           	psect	text43
 11415  003E84                     __ptext43:
 11416                           	callstack 0
 11417  003E84                     _LCD_WriteString:
 11418                           	callstack 26
 11419  003E84                     
 11420                           ;LCD.c: 61: uint8_t ix = 0;
 11421  003E84  0E00               	movlw	0
 11422  003E86  6E09               	movwf	LCD_WriteString@ix^0,c
 11423                           
 11424                           ;LCD.c: 62: while (iData[ix]) {
 11425  003E88  EF5F  F01F         	goto	l6465
 11426  003E8C                     l6461:
 11427                           
 11428                           ;LCD.c: 63: LCD_WriteChar (iData[ix]);
 11429  003E8C  5009               	movf	LCD_WriteString@ix^0,w,c
 11430  003E8E  2405               	addwf	LCD_WriteString@iData^0,w,c
 11431  003E90  6E07               	movwf	??_LCD_WriteString^0,c
 11432  003E92  0E00               	movlw	0
 11433  003E94  2006               	addwfc	(LCD_WriteString@iData+1)^0,w,c
 11434  003E96  6E08               	movwf	(??_LCD_WriteString+1)^0,c
 11435  003E98  C007  FFF6         	movff	??_LCD_WriteString,tblptrl
 11436  003E9C  C008  FFF7         	movff	??_LCD_WriteString+1,tblptrh
 11437  003EA0  6AF8               	clrf	tblptru,c
 11438  003EA2  0E07               	movlw	(high __ramtop+-1)
 11439  003EA4  64F7               	cpfsgt	tblptrh,c
 11440  003EA6  D003               	bra	u7407
 11441  003EA8  0008               	tblrd		*
 11442  003EAA  50F5               	movf	tablat,w,c
 11443  003EAC  D005               	bra	u7400
 11444  003EAE                     u7407:
 11445  003EAE  CFF6 FFE1          	movff	tblptrl,fsr1l
 11446  003EB2  CFF7 FFE2          	movff	tblptrh,fsr1h
 11447  003EB6  50E7               	movf	indf1,w,c
 11448  003EB8                     u7400:
 11449  003EB8  ECC3  F020         	call	_LCD_WriteChar
 11450  003EBC                     
 11451                           ;LCD.c: 64: ix ++;
 11452  003EBC  2A09               	incf	LCD_WriteString@ix^0,f,c
 11453  003EBE                     l6465:
 11454  003EBE  5009               	movf	LCD_WriteString@ix^0,w,c
 11455  003EC0  2405               	addwf	LCD_WriteString@iData^0,w,c
 11456  003EC2  6E07               	movwf	??_LCD_WriteString^0,c
 11457  003EC4  0E00               	movlw	0
 11458  003EC6  2006               	addwfc	(LCD_WriteString@iData+1)^0,w,c
 11459  003EC8  6E08               	movwf	(??_LCD_WriteString+1)^0,c
 11460  003ECA  C007  FFF6         	movff	??_LCD_WriteString,tblptrl
 11461  003ECE  C008  FFF7         	movff	??_LCD_WriteString+1,tblptrh
 11462  003ED2  6AF8               	clrf	tblptru,c
 11463  003ED4  0E07               	movlw	(high __ramtop+-1)
 11464  003ED6  64F7               	cpfsgt	tblptrh,c
 11465  003ED8  D003               	bra	u7417
 11466  003EDA  0008               	tblrd		*
 11467  003EDC  50F5               	movf	tablat,w,c
 11468  003EDE  D005               	bra	u7410
 11469  003EE0                     u7417:
 11470  003EE0  CFF6 FFE1          	movff	tblptrl,fsr1l
 11471  003EE4  CFF7 FFE2          	movff	tblptrh,fsr1h
 11472  003EE8  50E7               	movf	indf1,w,c
 11473  003EEA                     u7410:
 11474  003EEA  0900               	iorlw	0
 11475  003EEC  A4D8               	btfss	status,2,c
 11476  003EEE  EF7B  F01F         	goto	u7421
 11477  003EF2  EF7D  F01F         	goto	u7420
 11478  003EF6                     u7421:
 11479  003EF6  EF46  F01F         	goto	l6461
 11480  003EFA                     u7420:
 11481  003EFA  0012               	return		;funcret
 11482  003EFC                     __end_of_LCD_WriteString:
 11483                           	callstack 0
 11484                           
 11485 ;; *************** function _LCD_WriteChar *****************
 11486 ;; Defined at:
 11487 ;;		line 46 in file "LCD.c"
 11488 ;; Parameters:    Size  Location     Type
 11489 ;;  iChar           1    wreg     unsigned char 
 11490 ;; Auto vars:     Size  Location     Type
 11491 ;;  iChar           1    3[COMRAM] unsigned char 
 11492 ;; Return value:  Size  Location     Type
 11493 ;;                  1    wreg      void 
 11494 ;; Registers used:
 11495 ;;		wreg, status,2, status,0
 11496 ;; Tracked objects:
 11497 ;;		On entry : 0/0
 11498 ;;		On exit  : 0/0
 11499 ;;		Unchanged: 0/0
 11500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11501 ;;      Params:         0       0       0       0       0       0       0       0       0
 11502 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11503 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11504 ;;      Totals:         3       0       0       0       0       0       0       0       0
 11505 ;;Total ram usage:        3 bytes
 11506 ;; Hardware stack levels used: 1
 11507 ;; Hardware stack levels required when called: 3
 11508 ;; This function calls:
 11509 ;;		Nothing
 11510 ;; This function is called by:
 11511 ;;		_LCD_WriteString
 11512 ;; This function uses a non-reentrant model
 11513 ;;
 11514                           
 11515                           	psect	text44
 11516  004186                     __ptext44:
 11517                           	callstack 0
 11518  004186                     _LCD_WriteChar:
 11519                           	callstack 26
 11520                           
 11521                           ;incstack = 0
 11522                           ;LCD_WriteChar@iChar stored from wreg
 11523  004186  6E04               	movwf	LCD_WriteChar@iChar^0,c
 11524  004188  8689               	bsf	137,3,c	;volatile
 11525  00418A  9489               	bcf	137,2,c	;volatile
 11526  00418C  8289               	bsf	137,1,c	;volatile
 11527  00418E                     
 11528                           ;LCD.c: 52: LATB = iChar;
 11529  00418E  C004  FF8A         	movff	LCD_WriteChar@iChar,3978	;volatile
 11530  004192                     
 11531                           ;LCD.c: 53: LATC6 = iChar>>6;
 11532  004192  C004  F002         	movff	LCD_WriteChar@iChar,??_LCD_WriteChar
 11533  004196  0E06               	movlw	6
 11534  004198  6E03               	movwf	(??_LCD_WriteChar+1)^0,c
 11535  00419A                     u6935:
 11536  00419A  90D8               	bcf	status,0,c
 11537  00419C  3202               	rrcf	??_LCD_WriteChar^0,f,c
 11538  00419E  2E03               	decfsz	(??_LCD_WriteChar+1)^0,f,c
 11539  0041A0  EFCD  F020         	goto	u6935
 11540  0041A4  3002               	rrcf	??_LCD_WriteChar^0,w,c
 11541  0041A6  B0D8               	btfsc	status,0,c
 11542  0041A8  EFD8  F020         	goto	u6941
 11543  0041AC  EFDB  F020         	goto	u6940
 11544  0041B0                     u6941:
 11545  0041B0  8C8B               	bsf	3979,6,c	;volatile
 11546  0041B2  EFDC  F020         	goto	u6955
 11547  0041B6                     u6940:
 11548  0041B6  9C8B               	bcf	3979,6,c	;volatile
 11549  0041B8                     u6955:
 11550  0041B8                     
 11551                           ;LCD.c: 54: LATC7 = iChar>>7;
 11552  0041B8  6A02               	clrf	??_LCD_WriteChar^0,c
 11553  0041BA  AE04               	btfss	LCD_WriteChar@iChar^0,7,c
 11554  0041BC  D001               	bra	u6965
 11555  0041BE  2A02               	incf	??_LCD_WriteChar^0,f,c
 11556  0041C0                     u6965:
 11557  0041C0  3002               	rrcf	??_LCD_WriteChar^0,w,c
 11558  0041C2  B0D8               	btfsc	status,0,c
 11559  0041C4  EFE6  F020         	goto	u6971
 11560  0041C8  EFE9  F020         	goto	u6970
 11561  0041CC                     u6971:
 11562  0041CC  8E8B               	bsf	3979,7,c	;volatile
 11563  0041CE  EFEA  F020         	goto	u6985
 11564  0041D2                     u6970:
 11565  0041D2  9E8B               	bcf	3979,7,c	;volatile
 11566  0041D4                     u6985:
 11567  0041D4  9289               	bcf	137,1,c	;volatile
 11568  0041D6                     
 11569                           ;LCD.c: 56: _delay((unsigned long)((40+10)*(8000000/4000000.0)));
 11570  0041D6  0E21               	movlw	33
 11571  0041D8                     u8117:
 11572  0041D8  2EE8               	decfsz	wreg,f,c
 11573  0041DA  D7FE               	bra	u8117
 11574  0041DC  F000               	nop	
 11575  0041DE  0012               	return		;funcret
 11576  0041E0                     __end_of_LCD_WriteChar:
 11577                           	callstack 0
 11578                           
 11579 ;; *************** function _LCD_GoTo *****************
 11580 ;; Defined at:
 11581 ;;		line 68 in file "LCD.c"
 11582 ;; Parameters:    Size  Location     Type
 11583 ;;  iLine           1    wreg     unsigned char 
 11584 ;;  iCharPos        1    8[COMRAM] unsigned char 
 11585 ;; Auto vars:     Size  Location     Type
 11586 ;;  iLine           1   14[COMRAM] unsigned char 
 11587 ;;  iPos            1   11[COMRAM] unsigned char 
 11588 ;; Return value:  Size  Location     Type
 11589 ;;                  1    wreg      void 
 11590 ;; Registers used:
 11591 ;;		wreg, status,2, status,0, cstack
 11592 ;; Tracked objects:
 11593 ;;		On entry : 0/0
 11594 ;;		On exit  : 0/0
 11595 ;;		Unchanged: 0/0
 11596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11597 ;;      Params:         1       0       0       0       0       0       0       0       0
 11598 ;;      Locals:         4       0       0       0       0       0       0       0       0
 11599 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11600 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11601 ;;Total ram usage:        7 bytes
 11602 ;; Hardware stack levels used: 1
 11603 ;; Hardware stack levels required when called: 4
 11604 ;; This function calls:
 11605 ;;		_LCD_WriteCmd
 11606 ;; This function is called by:
 11607 ;;		_main
 11608 ;;		_ComputeWaterVol
 11609 ;;		_ComputeTOD
 11610 ;; This function uses a non-reentrant model
 11611 ;;
 11612                           
 11613                           	psect	text45
 11614  00412A                     __ptext45:
 11615                           	callstack 0
 11616  00412A                     _LCD_GoTo:
 11617                           	callstack 26
 11618                           
 11619                           ;incstack = 0
 11620                           ;LCD_GoTo@iLine stored from wreg
 11621  00412A  6E0F               	movwf	LCD_GoTo@iLine^0,c
 11622  00412C                     
 11623                           ;LCD.c: 70: uint8_t iPos;;LCD.c: 71: if (iLine < 2)
 11624  00412C  0E02               	movlw	2
 11625  00412E  600F               	cpfslt	LCD_GoTo@iLine^0,c
 11626  004130  EF9C  F020         	goto	u7431
 11627  004134  EF9E  F020         	goto	u7430
 11628  004138                     u7431:
 11629  004138  EFBA  F020         	goto	l6477
 11630  00413C                     u7430:
 11631  00413C                     
 11632                           ;LCD.c: 72: iPos = (iLine == 0) ?;LCD.c: 73: (0x80 | iCharPos) :;LCD.c: 74: (0xC0 | iCha
      +                          rPos);
 11633  00413C  500F               	movf	LCD_GoTo@iLine^0,w,c
 11634  00413E  B4D8               	btfsc	status,2,c
 11635  004140  EFA4  F020         	goto	u7441
 11636  004144  EFA6  F020         	goto	u7440
 11637  004148                     u7441:
 11638  004148  EFB0  F020         	goto	l6473
 11639  00414C                     u7440:
 11640  00414C  0EC0               	movlw	192
 11641  00414E  C009  F00A         	movff	LCD_GoTo@iCharPos,??_LCD_GoTo
 11642  004152  6A0B               	clrf	(??_LCD_GoTo+1)^0,c
 11643  004154  100A               	iorwf	??_LCD_GoTo^0,w,c
 11644  004156  6E0D               	movwf	_LCD_GoTo$1458^0,c
 11645  004158  500B               	movf	(??_LCD_GoTo+1)^0,w,c
 11646  00415A  6E0E               	movwf	(_LCD_GoTo$1458+1)^0,c
 11647  00415C  EFB8  F020         	goto	l6475
 11648  004160                     l6473:
 11649  004160  0E80               	movlw	128
 11650  004162  C009  F00A         	movff	LCD_GoTo@iCharPos,??_LCD_GoTo
 11651  004166  6A0B               	clrf	(??_LCD_GoTo+1)^0,c
 11652  004168  100A               	iorwf	??_LCD_GoTo^0,w,c
 11653  00416A  6E0D               	movwf	_LCD_GoTo$1458^0,c
 11654  00416C  500B               	movf	(??_LCD_GoTo+1)^0,w,c
 11655  00416E  6E0E               	movwf	(_LCD_GoTo$1458+1)^0,c
 11656  004170                     l6475:
 11657  004170  C00D  F00C         	movff	_LCD_GoTo$1458,LCD_GoTo@iPos
 11658  004174                     l6477:
 11659                           
 11660                           ;LCD.c: 75: LCD_WriteCmd (0x80 | iPos, 40+10);
 11661  004174  0E00               	movlw	0
 11662  004176  6E03               	movwf	(LCD_WriteCmd@iDelay+1)^0,c
 11663  004178  0E32               	movlw	50
 11664  00417A  6E02               	movwf	LCD_WriteCmd@iDelay^0,c
 11665  00417C  500C               	movf	LCD_GoTo@iPos^0,w,c
 11666  00417E  0980               	iorlw	128
 11667  004180  EC05  F01F         	call	_LCD_WriteCmd
 11668  004184  0012               	return		;funcret
 11669  004186                     __end_of_LCD_GoTo:
 11670                           	callstack 0
 11671                           
 11672 ;; *************** function _LCD_WriteCmd *****************
 11673 ;; Defined at:
 11674 ;;		line 33 in file "LCD.c"
 11675 ;; Parameters:    Size  Location     Type
 11676 ;;  iCmd            1    wreg     unsigned char 
 11677 ;;  iDelay          2    1[COMRAM] unsigned int 
 11678 ;; Auto vars:     Size  Location     Type
 11679 ;;  iCmd            1    7[COMRAM] unsigned char 
 11680 ;;  i               2    5[COMRAM] int 
 11681 ;; Return value:  Size  Location     Type
 11682 ;;                  1    wreg      void 
 11683 ;; Registers used:
 11684 ;;		wreg, status,2, status,0
 11685 ;; Tracked objects:
 11686 ;;		On entry : 0/0
 11687 ;;		On exit  : 0/0
 11688 ;;		Unchanged: 0/0
 11689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11690 ;;      Params:         2       0       0       0       0       0       0       0       0
 11691 ;;      Locals:         3       0       0       0       0       0       0       0       0
 11692 ;;      Temps:          2       0       0       0       0       0       0       0       0
 11693 ;;      Totals:         7       0       0       0       0       0       0       0       0
 11694 ;;Total ram usage:        7 bytes
 11695 ;; Hardware stack levels used: 1
 11696 ;; Hardware stack levels required when called: 3
 11697 ;; This function calls:
 11698 ;;		Nothing
 11699 ;; This function is called by:
 11700 ;;		_LCD_Init
 11701 ;;		_LCD_GoTo
 11702 ;;		_LCD_ClearScreen
 11703 ;; This function uses a non-reentrant model
 11704 ;;
 11705                           
 11706                           	psect	text46
 11707  003E0A                     __ptext46:
 11708                           	callstack 0
 11709  003E0A                     _LCD_WriteCmd:
 11710                           	callstack 26
 11711                           
 11712                           ;incstack = 0
 11713                           ;LCD_WriteCmd@iCmd stored from wreg
 11714  003E0A  6E08               	movwf	LCD_WriteCmd@iCmd^0,c
 11715  003E0C  9689               	bcf	137,3,c	;volatile
 11716  003E0E  9489               	bcf	137,2,c	;volatile
 11717  003E10                     
 11718                           ;LCD.c: 37: LATB = iCmd;
 11719  003E10  C008  FF8A         	movff	LCD_WriteCmd@iCmd,3978	;volatile
 11720  003E14                     
 11721                           ;LCD.c: 38: LATC6 = iCmd>>6;
 11722  003E14  C008  F004         	movff	LCD_WriteCmd@iCmd,??_LCD_WriteCmd
 11723  003E18  0E06               	movlw	6
 11724  003E1A  6E05               	movwf	(??_LCD_WriteCmd+1)^0,c
 11725  003E1C                     u6865:
 11726  003E1C  90D8               	bcf	status,0,c
 11727  003E1E  3204               	rrcf	??_LCD_WriteCmd^0,f,c
 11728  003E20  2E05               	decfsz	(??_LCD_WriteCmd+1)^0,f,c
 11729  003E22  EF0E  F01F         	goto	u6865
 11730  003E26  3004               	rrcf	??_LCD_WriteCmd^0,w,c
 11731  003E28  B0D8               	btfsc	status,0,c
 11732  003E2A  EF19  F01F         	goto	u6871
 11733  003E2E  EF1C  F01F         	goto	u6870
 11734  003E32                     u6871:
 11735  003E32  8C8B               	bsf	3979,6,c	;volatile
 11736  003E34  EF1D  F01F         	goto	u6885
 11737  003E38                     u6870:
 11738  003E38  9C8B               	bcf	3979,6,c	;volatile
 11739  003E3A                     u6885:
 11740  003E3A                     
 11741                           ;LCD.c: 39: LATC7 = iCmd>>7;
 11742  003E3A  6A04               	clrf	??_LCD_WriteCmd^0,c
 11743  003E3C  AE08               	btfss	LCD_WriteCmd@iCmd^0,7,c
 11744  003E3E  D001               	bra	u6895
 11745  003E40  2A04               	incf	??_LCD_WriteCmd^0,f,c
 11746  003E42                     u6895:
 11747  003E42  3004               	rrcf	??_LCD_WriteCmd^0,w,c
 11748  003E44  B0D8               	btfsc	status,0,c
 11749  003E46  EF27  F01F         	goto	u6901
 11750  003E4A  EF2A  F01F         	goto	u6900
 11751  003E4E                     u6901:
 11752  003E4E  8E8B               	bsf	3979,7,c	;volatile
 11753  003E50  EF2B  F01F         	goto	u6915
 11754  003E54                     u6900:
 11755  003E54  9E8B               	bcf	3979,7,c	;volatile
 11756  003E56                     u6915:
 11757  003E56  8289               	bsf	137,1,c	;volatile
 11758  003E58  9289               	bcf	137,1,c	;volatile
 11759  003E5A                     
 11760                           ;LCD.c: 42: for (int i = 0; i<iDelay; i++)
 11761  003E5A  0E00               	movlw	0
 11762  003E5C  6E07               	movwf	(LCD_WriteCmd@i+1)^0,c
 11763  003E5E  0E00               	movlw	0
 11764  003E60  6E06               	movwf	LCD_WriteCmd@i^0,c
 11765  003E62  EF36  F01F         	goto	l6153
 11766  003E66                     l547:
 11767                           
 11768                           ;LCD.c: 43: _delay((unsigned long)((1)*(8000000/4000000.0)));
 11769  003E66  D000               	nop2		;2 cycle nop
 11770  003E68  4A06               	infsnz	LCD_WriteCmd@i^0,f,c
 11771  003E6A  2A07               	incf	(LCD_WriteCmd@i+1)^0,f,c
 11772  003E6C                     l6153:
 11773  003E6C  5002               	movf	LCD_WriteCmd@iDelay^0,w,c
 11774  003E6E  5C06               	subwf	LCD_WriteCmd@i^0,w,c
 11775  003E70  5003               	movf	(LCD_WriteCmd@iDelay+1)^0,w,c
 11776  003E72  5807               	subwfb	(LCD_WriteCmd@i+1)^0,w,c
 11777  003E74  A0D8               	btfss	status,0,c
 11778  003E76  EF3F  F01F         	goto	u6921
 11779  003E7A  EF41  F01F         	goto	u6920
 11780  003E7E                     u6921:
 11781  003E7E  EF33  F01F         	goto	l547
 11782  003E82                     u6920:
 11783  003E82  0012               	return		;funcret
 11784  003E84                     __end_of_LCD_WriteCmd:
 11785                           	callstack 0
 11786                           
 11787 ;; *************** function _CCP2_Init *****************
 11788 ;; Defined at:
 11789 ;;		line 22 in file "CCP2.c"
 11790 ;; Parameters:    Size  Location     Type
 11791 ;;		None
 11792 ;; Auto vars:     Size  Location     Type
 11793 ;;		None
 11794 ;; Return value:  Size  Location     Type
 11795 ;;                  1    wreg      void 
 11796 ;; Registers used:
 11797 ;;		wreg, status,2, status,0
 11798 ;; Tracked objects:
 11799 ;;		On entry : 0/0
 11800 ;;		On exit  : 0/0
 11801 ;;		Unchanged: 0/0
 11802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11803 ;;      Params:         0       0       0       0       0       0       0       0       0
 11804 ;;      Locals:         1       0       0       0       0       0       0       0       0
 11805 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11806 ;;      Totals:         1       0       0       0       0       0       0       0       0
 11807 ;;Total ram usage:        1 bytes
 11808 ;; Hardware stack levels used: 1
 11809 ;; Hardware stack levels required when called: 3
 11810 ;; This function calls:
 11811 ;;		Nothing
 11812 ;; This function is called by:
 11813 ;;		_main
 11814 ;; This function uses a non-reentrant model
 11815 ;;
 11816                           
 11817                           	psect	text47
 11818  00438E                     __ptext47:
 11819                           	callstack 0
 11820  00438E                     _CCP2_Init:
 11821                           	callstack 27
 11822  00438E                     
 11823                           ;CCP2.c: 27: CCP2CON = 0x0C;
 11824  00438E  0E0C               	movlw	12
 11825  004390  6E97               	movwf	151,c	;volatile
 11826                           
 11827                           ;CCP2.c: 28: CCPR2L = 99>>2;
 11828  004392  0E18               	movlw	24
 11829  004394  6E90               	movwf	144,c	;volatile
 11830                           
 11831                           ;CCP2.c: 29: CCP2CONbits.DC2B = 99 && 0x03;
 11832  004396  0E00               	movlw	0
 11833  004398  6E02               	movwf	_CCP2_Init$1297^0,c
 11834  00439A  0E01               	movlw	1
 11835  00439C  6E02               	movwf	_CCP2_Init$1297^0,c
 11836  00439E  5097               	movf	151,w,c	;volatile
 11837  0043A0  0BCF               	andlw	-49
 11838  0043A2  0910               	iorlw	16
 11839  0043A4  6E97               	movwf	151,c	;volatile
 11840  0043A6                     
 11841                           ;CCP2.c: 30: CCPR2H = 0x00;
 11842  0043A6  0E00               	movlw	0
 11843  0043A8  6E91               	movwf	145,c	;volatile
 11844  0043AA  0012               	return		;funcret
 11845  0043AC                     __end_of_CCP2_Init:
 11846                           	callstack 0
 11847                           
 11848 ;; *************** function _CCP1_Init *****************
 11849 ;; Defined at:
 11850 ;;		line 12 in file "CCP1.c"
 11851 ;; Parameters:    Size  Location     Type
 11852 ;;		None
 11853 ;; Auto vars:     Size  Location     Type
 11854 ;;		None
 11855 ;; Return value:  Size  Location     Type
 11856 ;;                  1    wreg      void 
 11857 ;; Registers used:
 11858 ;;		wreg, status,2
 11859 ;; Tracked objects:
 11860 ;;		On entry : 0/0
 11861 ;;		On exit  : 0/0
 11862 ;;		Unchanged: 0/0
 11863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11864 ;;      Params:         0       0       0       0       0       0       0       0       0
 11865 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11866 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11867 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11868 ;;Total ram usage:        0 bytes
 11869 ;; Hardware stack levels used: 1
 11870 ;; Hardware stack levels required when called: 3
 11871 ;; This function calls:
 11872 ;;		Nothing
 11873 ;; This function is called by:
 11874 ;;		_main
 11875 ;; This function uses a non-reentrant model
 11876 ;;
 11877                           
 11878                           	psect	text48
 11879  0043E0                     __ptext48:
 11880                           	callstack 0
 11881  0043E0                     _CCP1_Init:
 11882                           	callstack 27
 11883  0043E0                     
 11884                           ;CCP1.c: 17: CCP1CON = 0x04;
 11885  0043E0  0E04               	movlw	4
 11886  0043E2  6EBD               	movwf	189,c	;volatile
 11887                           
 11888                           ;CCP1.c: 20: CCPR1H = 0x00;
 11889  0043E4  0E00               	movlw	0
 11890  0043E6  6EBF               	movwf	191,c	;volatile
 11891                           
 11892                           ;CCP1.c: 23: CCPR1L = 0x00;
 11893  0043E8  0E00               	movlw	0
 11894  0043EA  6EBE               	movwf	190,c	;volatile
 11895  0043EC                     
 11896                           ;CCP1.c: 26: PIR1bits.CCP1IF = 0;
 11897  0043EC  949E               	bcf	158,2,c	;volatile
 11898  0043EE                     
 11899                           ;CCP1.c: 29: PIE1bits.CCP1IE = 1;
 11900  0043EE  849D               	bsf	157,2,c	;volatile
 11901  0043F0                     
 11902                           ;CCP1.c: 32: CCPTMRSbits.C1TSEL = 0x0;
 11903  0043F0  010F               	movlb	15	; () banked
 11904  0043F2  9159               	bcf	89,0,b	;volatile
 11905  0043F4                     
 11906                           ; BSR set to: 15
 11907  0043F4  0012               	return		;funcret
 11908  0043F6                     __end_of_CCP1_Init:
 11909                           	callstack 0
 11910                           
 11911 ;; *************** function _INTERRUPT_InterruptManager *****************
 11912 ;; Defined at:
 11913 ;;		line 15 in file "Interrupt_Mgr.c"
 11914 ;; Parameters:    Size  Location     Type
 11915 ;;		None
 11916 ;; Auto vars:     Size  Location     Type
 11917 ;;		None
 11918 ;; Return value:  Size  Location     Type
 11919 ;;                  1    wreg      void 
 11920 ;; Registers used:
 11921 ;;		wreg, status,2, status,0, cstack
 11922 ;; Tracked objects:
 11923 ;;		On entry : 0/0
 11924 ;;		On exit  : 0/0
 11925 ;;		Unchanged: 0/0
 11926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 11927 ;;      Params:         0       0       0       0       0       0       0       0       0
 11928 ;;      Locals:         0       0       0       0       0       0       0       0       0
 11929 ;;      Temps:          0       0       0       0       0       0       0       0       0
 11930 ;;      Totals:         0       0       0       0       0       0       0       0       0
 11931 ;;Total ram usage:        0 bytes
 11932 ;; Hardware stack levels used: 1
 11933 ;; Hardware stack levels required when called: 2
 11934 ;; This function calls:
 11935 ;;		_CCP1_ISR
 11936 ;;		_Timer0_ISR
 11937 ;;		_Timer2_ISR
 11938 ;;		_Timer3_ISR
 11939 ;; This function is called by:
 11940 ;;		Interrupt level 2
 11941 ;; This function uses a non-reentrant model
 11942 ;;
 11943                           
 11944                           	psect	intcode
 11945  000008                     __pintcode:
 11946                           	callstack 0
 11947  000008                     _INTERRUPT_InterruptManager:
 11948                           	callstack 22
 11949                           
 11950                           ; BSR set to: 15
 11951                           ;incstack = 0
 11952  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 11953  00000A                     
 11954                           ;Interrupt_Mgr.c: 18: if(INTCONbits.TMR0IE == 1 && INTCONbits.TMR0IF == 1)
 11955  00000A  AAF2               	btfss	242,5,c	;volatile
 11956  00000C  EF0A  F000         	goto	i2u561_41
 11957  000010  EF0C  F000         	goto	i2u561_40
 11958  000014                     i2u561_41:
 11959  000014  EF17  F000         	goto	i2l51
 11960  000018                     i2u561_40:
 11961  000018  A4F2               	btfss	242,2,c	;volatile
 11962  00001A  EF11  F000         	goto	i2u562_41
 11963  00001E  EF13  F000         	goto	i2u562_40
 11964  000022                     i2u562_41:
 11965  000022  EF17  F000         	goto	i2l51
 11966  000026                     i2u562_40:
 11967  000026                     
 11968                           ;Interrupt_Mgr.c: 19: {;Interrupt_Mgr.c: 20: Timer0_ISR();
 11969  000026  EC9B  F021         	call	_Timer0_ISR	;wreg free
 11970                           
 11971                           ;Interrupt_Mgr.c: 21: }
 11972  00002A  EF54  F000         	goto	i2l61
 11973  00002E                     i2l51:
 11974                           
 11975                           ;Interrupt_Mgr.c: 22: else if(INTCONbits.PEIE == 1)
 11976  00002E  ACF2               	btfss	242,6,c	;volatile
 11977  000030  EF1C  F000         	goto	i2u563_41
 11978  000034  EF1E  F000         	goto	i2u563_40
 11979  000038                     i2u563_41:
 11980  000038  EF54  F000         	goto	i2l61
 11981  00003C                     i2u563_40:
 11982  00003C                     
 11983                           ;Interrupt_Mgr.c: 23: {;Interrupt_Mgr.c: 24: if(PIE2bits.TMR3IE == 1 && PIR2bits.TMR3IF 
      +                          == 1)
 11984  00003C  A2A0               	btfss	160,1,c	;volatile
 11985  00003E  EF23  F000         	goto	i2u564_41
 11986  000042  EF25  F000         	goto	i2u564_40
 11987  000046                     i2u564_41:
 11988  000046  EF30  F000         	goto	i2l54
 11989  00004A                     i2u564_40:
 11990  00004A  A2A1               	btfss	161,1,c	;volatile
 11991  00004C  EF2A  F000         	goto	i2u565_41
 11992  000050  EF2C  F000         	goto	i2u565_40
 11993  000054                     i2u565_41:
 11994  000054  EF30  F000         	goto	i2l54
 11995  000058                     i2u565_40:
 11996  000058                     
 11997                           ;Interrupt_Mgr.c: 25: {;Interrupt_Mgr.c: 26: Timer3_ISR();
 11998  000058  EC2D  F020         	call	_Timer3_ISR	;wreg free
 11999                           
 12000                           ;Interrupt_Mgr.c: 27: }
 12001  00005C  EF54  F000         	goto	i2l61
 12002  000060                     i2l54:
 12003                           
 12004                           ;Interrupt_Mgr.c: 28: else if(PIE1bits.CCP1IE == 1 && PIR1bits.CCP1IF == 1)
 12005  000060  A49D               	btfss	157,2,c	;volatile
 12006  000062  EF35  F000         	goto	i2u566_41
 12007  000066  EF37  F000         	goto	i2u566_40
 12008  00006A                     i2u566_41:
 12009  00006A  EF42  F000         	goto	i2l56
 12010  00006E                     i2u566_40:
 12011  00006E  A49E               	btfss	158,2,c	;volatile
 12012  000070  EF3C  F000         	goto	i2u567_41
 12013  000074  EF3E  F000         	goto	i2u567_40
 12014  000078                     i2u567_41:
 12015  000078  EF42  F000         	goto	i2l56
 12016  00007C                     i2u567_40:
 12017  00007C                     
 12018                           ;Interrupt_Mgr.c: 29: {;Interrupt_Mgr.c: 30: CCP1_ISR();
 12019  00007C  ECD6  F021         	call	_CCP1_ISR	;wreg free
 12020                           
 12021                           ;Interrupt_Mgr.c: 31: }
 12022  000080  EF54  F000         	goto	i2l61
 12023  000084                     i2l56:
 12024                           
 12025                           ;Interrupt_Mgr.c: 32: else if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
 12026  000084  A29D               	btfss	157,1,c	;volatile
 12027  000086  EF47  F000         	goto	i2u568_41
 12028  00008A  EF49  F000         	goto	i2u568_40
 12029  00008E                     i2u568_41:
 12030  00008E  EF54  F000         	goto	i2l55
 12031  000092                     i2u568_40:
 12032  000092  A29E               	btfss	158,1,c	;volatile
 12033  000094  EF4E  F000         	goto	i2u569_41
 12034  000098  EF50  F000         	goto	i2u569_40
 12035  00009C                     i2u569_41:
 12036  00009C  EF54  F000         	goto	i2l55
 12037  0000A0                     i2u569_40:
 12038  0000A0                     
 12039                           ;Interrupt_Mgr.c: 33: {;Interrupt_Mgr.c: 34: Timer2_ISR();
 12040  0000A0  EC26  F022         	call	_Timer2_ISR	;wreg free
 12041                           
 12042                           ;Interrupt_Mgr.c: 35: }
 12043  0000A4  EF54  F000         	goto	i2l61
 12044  0000A8                     i2l55:
 12045  0000A8                     i2l61:
 12046  0000A8  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12047  0000AA  0011               	retfie		f
 12048  0000AC                     __end_of_INTERRUPT_InterruptManager:
 12049                           	callstack 0
 12050                           
 12051 ;; *************** function _Timer3_ISR *****************
 12052 ;; Defined at:
 12053 ;;		line 20 in file "Timer_3.c"
 12054 ;; Parameters:    Size  Location     Type
 12055 ;;		None
 12056 ;; Auto vars:     Size  Location     Type
 12057 ;;		None
 12058 ;; Return value:  Size  Location     Type
 12059 ;;                  1    wreg      void 
 12060 ;; Registers used:
 12061 ;;		wreg, status,2, status,0, cstack
 12062 ;; Tracked objects:
 12063 ;;		On entry : 0/0
 12064 ;;		On exit  : 0/0
 12065 ;;		Unchanged: 0/0
 12066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12067 ;;      Params:         0       0       0       0       0       0       0       0       0
 12068 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12069 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12070 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12071 ;;Total ram usage:        0 bytes
 12072 ;; Hardware stack levels used: 1
 12073 ;; Hardware stack levels required when called: 1
 12074 ;; This function calls:
 12075 ;;		_StartDepthDetection
 12076 ;; This function is called by:
 12077 ;;		_INTERRUPT_InterruptManager
 12078 ;; This function uses a non-reentrant model
 12079 ;;
 12080                           
 12081                           	psect	text50
 12082  00405A                     __ptext50:
 12083                           	callstack 0
 12084  00405A                     _Timer3_ISR:
 12085                           	callstack 22
 12086  00405A                     
 12087                           ;Timer_3.c: 22: Timer3_Cntr ++;
 12088  00405A  0101               	movlb	1	; () banked
 12089  00405C  4B8A               	infsnz	_Timer3_Cntr& (0+255),f,b
 12090  00405E  2B8B               	incf	(_Timer3_Cntr+1)& (0+255),f,b
 12091  004060                     
 12092                           ; BSR set to: 1
 12093                           ;Timer_3.c: 23: T3CONbits.TMR3ON = 0;
 12094  004060  90B1               	bcf	177,0,c	;volatile
 12095  004062                     
 12096                           ; BSR set to: 1
 12097                           ;Timer_3.c: 24: TMR3H = (uint8_t)(Timer3_Reload>>8);
 12098  004062  0100               	movlb	0	; () banked
 12099  004064  51FE               	movf	(_Timer3_Reload+1)& (0+255),w,b
 12100  004066  6EB3               	movwf	179,c	;volatile
 12101  004068                     
 12102                           ; BSR set to: 0
 12103                           ;Timer_3.c: 25: TMR3L = (uint8_t) Timer3_Reload;
 12104  004068  C0FD  FFB2         	movff	_Timer3_Reload,4018	;volatile
 12105  00406C                     
 12106                           ; BSR set to: 0
 12107                           ;Timer_3.c: 26: T3CONbits.TMR3ON = 1;
 12108  00406C  80B1               	bsf	177,0,c	;volatile
 12109  00406E                     
 12110                           ; BSR set to: 0
 12111                           ;Timer_3.c: 28: PIR2bits.TMR3IF = 0;
 12112  00406E  92A1               	bcf	161,1,c	;volatile
 12113  004070                     
 12114                           ; BSR set to: 0
 12115                           ;Timer_3.c: 30: if (Timer3_Sampling)
 12116  004070  0101               	movlb	1	; () banked
 12117  004072  516E               	movf	_Timer3_Sampling& (0+255),w,b
 12118  004074  B4D8               	btfsc	status,2,c
 12119  004076  EF3F  F020         	goto	i2u548_41
 12120  00407A  EF41  F020         	goto	i2u548_40
 12121  00407E                     i2u548_41:
 12122  00407E  EF4F  F020         	goto	i2l5229
 12123  004082                     i2u548_40:
 12124  004082                     
 12125                           ; BSR set to: 1
 12126                           ;Timer_3.c: 31: {;Timer_3.c: 32: if (Timer3_Cntr >= 2)
 12127  004082  518B               	movf	(_Timer3_Cntr+1)& (0+255),w,b
 12128  004084  E109               	bnz	i2u549_40
 12129  004086  0E02               	movlw	2
 12130  004088  5D8A               	subwf	_Timer3_Cntr& (0+255),w,b
 12131  00408A  A0D8               	btfss	status,0,c
 12132  00408C  EF4A  F020         	goto	i2u549_41
 12133  004090  EF4C  F020         	goto	i2u549_40
 12134  004094                     i2u549_41:
 12135  004094  EF4F  F020         	goto	i2l5229
 12136  004098                     i2u549_40:
 12137  004098                     
 12138                           ; BSR set to: 1
 12139                           ;Timer_3.c: 33: {;Timer_3.c: 34: Timer3_Sampling = 0;
 12140  004098  0E00               	movlw	0
 12141  00409A  6F6E               	movwf	_Timer3_Sampling& (0+255),b
 12142  00409C                     
 12143                           ; BSR set to: 1
 12144                           ;Timer_3.c: 35: LATAbits.LATA5 = 1;
 12145  00409C  8A89               	bsf	137,5,c	;volatile
 12146  00409E                     i2l5229:
 12147                           
 12148                           ; BSR set to: 1
 12149                           ;Timer_3.c: 36: };Timer_3.c: 37: };Timer_3.c: 38: if (Timer3_Cntr >= 200)
 12150  00409E  518B               	movf	(_Timer3_Cntr+1)& (0+255),w,b
 12151  0040A0  E109               	bnz	i2u550_40
 12152  0040A2  0EC8               	movlw	200
 12153  0040A4  5D8A               	subwf	_Timer3_Cntr& (0+255),w,b
 12154  0040A6  A0D8               	btfss	status,0,c
 12155  0040A8  EF58  F020         	goto	i2u550_41
 12156  0040AC  EF5A  F020         	goto	i2u550_40
 12157  0040B0                     i2u550_41:
 12158  0040B0  EF62  F020         	goto	i2l239
 12159  0040B4                     i2u550_40:
 12160  0040B4                     
 12161                           ; BSR set to: 1
 12162                           ;Timer_3.c: 39: {;Timer_3.c: 40: Timer3_Sampling = 1;
 12163  0040B4  0E01               	movlw	1
 12164  0040B6  6F6E               	movwf	_Timer3_Sampling& (0+255),b
 12165                           
 12166                           ;Timer_3.c: 41: Timer3_Cntr = 0;
 12167  0040B8  0E00               	movlw	0
 12168  0040BA  6F8B               	movwf	(_Timer3_Cntr+1)& (0+255),b
 12169  0040BC  0E00               	movlw	0
 12170  0040BE  6F8A               	movwf	_Timer3_Cntr& (0+255),b
 12171  0040C0                     
 12172                           ; BSR set to: 1
 12173                           ;Timer_3.c: 42: StartDepthDetection();
 12174  0040C0  EC20  F022         	call	_StartDepthDetection	;wreg free
 12175  0040C4                     i2l239:
 12176  0040C4  0012               	return		;funcret
 12177  0040C6                     __end_of_Timer3_ISR:
 12178                           	callstack 0
 12179                           
 12180 ;; *************** function _StartDepthDetection *****************
 12181 ;; Defined at:
 12182 ;;		line 19 in file "Timer_2.c"
 12183 ;; Parameters:    Size  Location     Type
 12184 ;;		None
 12185 ;; Auto vars:     Size  Location     Type
 12186 ;;		None
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  1    wreg      void 
 12189 ;; Registers used:
 12190 ;;		None
 12191 ;; Tracked objects:
 12192 ;;		On entry : 0/0
 12193 ;;		On exit  : 0/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12196 ;;      Params:         0       0       0       0       0       0       0       0       0
 12197 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12198 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12199 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12200 ;;Total ram usage:        0 bytes
 12201 ;; Hardware stack levels used: 1
 12202 ;; This function calls:
 12203 ;;		Nothing
 12204 ;; This function is called by:
 12205 ;;		_Timer3_ISR
 12206 ;; This function uses a non-reentrant model
 12207 ;;
 12208                           
 12209                           	psect	text51
 12210  004440                     __ptext51:
 12211                           	callstack 0
 12212  004440                     _StartDepthDetection:
 12213                           	callstack 22
 12214  004440                     
 12215                           ;Timer_2.c: 25: LATAbits.LATA5 = 0;
 12216  004440  9A89               	bcf	137,5,c	;volatile
 12217                           
 12218                           ;Timer_2.c: 27: PIR1bits.TMR2IF = 0;
 12219  004442  929E               	bcf	158,1,c	;volatile
 12220                           
 12221                           ;Timer_2.c: 28: PIE1bits.TMR2IE = 1;
 12222  004444  829D               	bsf	157,1,c	;volatile
 12223                           
 12224                           ;Timer_2.c: 29: T2CONbits.TMR2ON = 1;
 12225  004446  84BA               	bsf	186,2,c	;volatile
 12226                           
 12227                           ;Timer_2.c: 30: T1CONbits.TMR1ON = 1;
 12228  004448  80CD               	bsf	205,0,c	;volatile
 12229  00444A  0012               	return		;funcret
 12230  00444C                     __end_of_StartDepthDetection:
 12231                           	callstack 0
 12232                           
 12233 ;; *************** function _Timer2_ISR *****************
 12234 ;; Defined at:
 12235 ;;		line 9 in file "Timer_2.c"
 12236 ;; Parameters:    Size  Location     Type
 12237 ;;		None
 12238 ;; Auto vars:     Size  Location     Type
 12239 ;;		None
 12240 ;; Return value:  Size  Location     Type
 12241 ;;                  1    wreg      void 
 12242 ;; Registers used:
 12243 ;;		wreg, status,2
 12244 ;; Tracked objects:
 12245 ;;		On entry : 0/0
 12246 ;;		On exit  : 0/0
 12247 ;;		Unchanged: 0/0
 12248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12249 ;;      Params:         0       0       0       0       0       0       0       0       0
 12250 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12251 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12252 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12253 ;;Total ram usage:        0 bytes
 12254 ;; Hardware stack levels used: 1
 12255 ;; This function calls:
 12256 ;;		Nothing
 12257 ;; This function is called by:
 12258 ;;		_INTERRUPT_InterruptManager
 12259 ;; This function uses a non-reentrant model
 12260 ;;
 12261                           
 12262                           	psect	text52
 12263  00444C                     __ptext52:
 12264                           	callstack 0
 12265  00444C                     _Timer2_ISR:
 12266                           	callstack 23
 12267  00444C                     
 12268                           ;Timer_2.c: 13: T2CONbits.TMR2ON = 0;
 12269  00444C  94BA               	bcf	186,2,c	;volatile
 12270  00444E                     
 12271                           ;Timer_2.c: 14: TMR2 = 0;
 12272  00444E  0E00               	movlw	0
 12273  004450  6EBC               	movwf	188,c	;volatile
 12274  004452                     
 12275                           ;Timer_2.c: 15: PIE1bits.TMR2IE = 0;
 12276  004452  929D               	bcf	157,1,c	;volatile
 12277  004454                     
 12278                           ;Timer_2.c: 16: PIR1bits.TMR2IF = 0;
 12279  004454  929E               	bcf	158,1,c	;volatile
 12280  004456  0012               	return		;funcret
 12281  004458                     __end_of_Timer2_ISR:
 12282                           	callstack 0
 12283                           
 12284 ;; *************** function _Timer0_ISR *****************
 12285 ;; Defined at:
 12286 ;;		line 15 in file "Timer_0.c"
 12287 ;; Parameters:    Size  Location     Type
 12288 ;;		None
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;		None
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  1    wreg      void 
 12293 ;; Registers used:
 12294 ;;		wreg, status,2, status,0
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12300 ;;      Params:         0       0       0       0       0       0       0       0       0
 12301 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12302 ;;      Temps:          1       0       0       0       0       0       0       0       0
 12303 ;;      Totals:         1       0       0       0       0       0       0       0       0
 12304 ;;Total ram usage:        1 bytes
 12305 ;; Hardware stack levels used: 1
 12306 ;; This function calls:
 12307 ;;		Nothing
 12308 ;; This function is called by:
 12309 ;;		_INTERRUPT_InterruptManager
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313                           	psect	text53
 12314  004336                     __ptext53:
 12315                           	callstack 0
 12316  004336                     _Timer0_ISR:
 12317                           	callstack 23
 12318  004336  0EE1               	movlw	225
 12319  004338  6ED7               	movwf	215,c	;volatile
 12320  00433A  0E7B               	movlw	123
 12321  00433C  6ED6               	movwf	214,c	;volatile
 12322  00433E                     
 12323                           ;Timer_0.c: 17: INTCONbits.TMR0IF = 0;
 12324  00433E  94F2               	bcf	242,2,c	;volatile
 12325  004340  B08B               	btfsc	139,0,c	;volatile
 12326  004342  EFA5  F021         	goto	i2u547_41
 12327  004346  EFA8  F021         	goto	i2u547_40
 12328  00434A                     i2u547_41:
 12329  00434A  0E01               	movlw	1
 12330  00434C  EFA9  F021         	goto	i2u547_46
 12331  004350                     i2u547_40:
 12332  004350  0E00               	movlw	0
 12333  004352                     i2u547_46:
 12334  004352  0AFF               	xorlw	255
 12335  004354  6E01               	movwf	??_Timer0_ISR^0,c
 12336  004356  508B               	movf	139,w,c	;volatile
 12337  004358  1801               	xorwf	??_Timer0_ISR^0,w,c
 12338  00435A  0BFE               	andlw	-2
 12339  00435C  1801               	xorwf	??_Timer0_ISR^0,w,c
 12340  00435E  6E8B               	movwf	139,c	;volatile
 12341  004360                     
 12342                           ;Timer_0.c: 19: gb_UpdateTime = 1;
 12343  004360  0E01               	movlw	1
 12344  004362  0100               	movlb	0	; () banked
 12345  004364  6FFC               	movwf	_gb_UpdateTime& (0+255),b	;volatile
 12346  004366                     
 12347                           ; BSR set to: 0
 12348  004366  0012               	return		;funcret
 12349  004368                     __end_of_Timer0_ISR:
 12350                           	callstack 0
 12351                           
 12352 ;; *************** function _CCP1_ISR *****************
 12353 ;; Defined at:
 12354 ;;		line 35 in file "CCP1.c"
 12355 ;; Parameters:    Size  Location     Type
 12356 ;;		None
 12357 ;; Auto vars:     Size  Location     Type
 12358 ;;		None
 12359 ;; Return value:  Size  Location     Type
 12360 ;;                  1    wreg      void 
 12361 ;; Registers used:
 12362 ;;		wreg, status,2, cstack
 12363 ;; Tracked objects:
 12364 ;;		On entry : 0/0
 12365 ;;		On exit  : 0/0
 12366 ;;		Unchanged: 0/0
 12367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12368 ;;      Params:         0       0       0       0       0       0       0       0       0
 12369 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12370 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12371 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12372 ;;Total ram usage:        0 bytes
 12373 ;; Hardware stack levels used: 1
 12374 ;; Hardware stack levels required when called: 1
 12375 ;; This function calls:
 12376 ;;		_Timer1_Reset
 12377 ;; This function is called by:
 12378 ;;		_INTERRUPT_InterruptManager
 12379 ;; This function uses a non-reentrant model
 12380 ;;
 12381                           
 12382                           	psect	text54
 12383  0043AC                     __ptext54:
 12384                           	callstack 0
 12385  0043AC                     _CCP1_ISR:
 12386                           	callstack 22
 12387  0043AC                     
 12388                           ;CCP1.c: 37: PIR1bits.CCP1IF = 0;
 12389  0043AC  949E               	bcf	158,2,c	;volatile
 12390                           
 12391                           ;CCP1.c: 39: giEchoCounter.EPl = CCPR1L;
 12392  0043AE  CFBE F18E          	movff	4030,_giEchoCounter	;volatile
 12393                           
 12394                           ;CCP1.c: 40: giEchoCounter.EPh = CCPR1H;
 12395  0043B2  CFBF F18F          	movff	4031,_giEchoCounter+1	;volatile
 12396  0043B6                     
 12397                           ;CCP1.c: 41: CCPR1H = 0;
 12398  0043B6  0E00               	movlw	0
 12399  0043B8  6EBF               	movwf	191,c	;volatile
 12400                           
 12401                           ;CCP1.c: 42: CCPR1L = 0;
 12402  0043BA  0E00               	movlw	0
 12403  0043BC  6EBE               	movwf	190,c	;volatile
 12404  0043BE                     
 12405                           ;CCP1.c: 43: Timer1_Reset();
 12406  0043BE  EC2C  F022         	call	_Timer1_Reset	;wreg free
 12407  0043C2                     
 12408                           ;CCP1.c: 44: gb_EchoDetected = 1;
 12409  0043C2  0E01               	movlw	1
 12410  0043C4  0100               	movlb	0	; () banked
 12411  0043C6  6FFB               	movwf	_gb_EchoDetected& (0+255),b	;volatile
 12412  0043C8                     
 12413                           ; BSR set to: 0
 12414  0043C8  0012               	return		;funcret
 12415  0043CA                     __end_of_CCP1_ISR:
 12416                           	callstack 0
 12417                           
 12418 ;; *************** function _Timer1_Reset *****************
 12419 ;; Defined at:
 12420 ;;		line 26 in file "Timer_1.c"
 12421 ;; Parameters:    Size  Location     Type
 12422 ;;		None
 12423 ;; Auto vars:     Size  Location     Type
 12424 ;;		None
 12425 ;; Return value:  Size  Location     Type
 12426 ;;                  1    wreg      void 
 12427 ;; Registers used:
 12428 ;;		wreg, status,2
 12429 ;; Tracked objects:
 12430 ;;		On entry : 0/0
 12431 ;;		On exit  : 0/0
 12432 ;;		Unchanged: 0/0
 12433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
 12434 ;;      Params:         0       0       0       0       0       0       0       0       0
 12435 ;;      Locals:         0       0       0       0       0       0       0       0       0
 12436 ;;      Temps:          0       0       0       0       0       0       0       0       0
 12437 ;;      Totals:         0       0       0       0       0       0       0       0       0
 12438 ;;Total ram usage:        0 bytes
 12439 ;; Hardware stack levels used: 1
 12440 ;; This function calls:
 12441 ;;		Nothing
 12442 ;; This function is called by:
 12443 ;;		_CCP1_ISR
 12444 ;; This function uses a non-reentrant model
 12445 ;;
 12446                           
 12447                           	psect	text55
 12448  004458                     __ptext55:
 12449                           	callstack 0
 12450  004458                     _Timer1_Reset:
 12451                           	callstack 22
 12452  004458                     
 12453                           ;Timer_1.c: 28: T1CONbits.TMR1ON = 0;
 12454  004458  90CD               	bcf	205,0,c	;volatile
 12455  00445A                     
 12456                           ;Timer_1.c: 29: TMR1H = 0;
 12457  00445A  0E00               	movlw	0
 12458  00445C  6ECF               	movwf	207,c	;volatile
 12459                           
 12460                           ;Timer_1.c: 30: TMR1L = 0;
 12461  00445E  0E00               	movlw	0
 12462  004460  6ECE               	movwf	206,c	;volatile
 12463  004462  0012               	return		;funcret
 12464  004464                     __end_of_Timer1_Reset:
 12465                           	callstack 0
 12466                           
 12467                           	psect	rparam
 12468  0000                     
 12469                           	psect	temp
 12470  00005E                     btemp:
 12471                           	callstack 0
 12472  00005E                     	ds	1
 12473  0000                     int$flags	set	btemp
 12474  0000                     wtemp8	set	btemp+1
 12475  0000                     ttemp5	set	btemp+1
 12476  0000                     ttemp6	set	btemp+4
 12477  0000                     ttemp7	set	btemp+8
 12478                           
 12479                           	psect	idloc
 12480                           
 12481                           ;Config register IDLOC0 @ 0x200000
 12482                           ;	unspecified, using default values
 12483  200000                     	org	2097152
 12484  200000  FF                 	db	255
 12485                           
 12486                           ;Config register IDLOC1 @ 0x200001
 12487                           ;	unspecified, using default values
 12488  200001                     	org	2097153
 12489  200001  FF                 	db	255
 12490                           
 12491                           ;Config register IDLOC2 @ 0x200002
 12492                           ;	unspecified, using default values
 12493  200002                     	org	2097154
 12494  200002  FF                 	db	255
 12495                           
 12496                           ;Config register IDLOC3 @ 0x200003
 12497                           ;	unspecified, using default values
 12498  200003                     	org	2097155
 12499  200003  FF                 	db	255
 12500                           
 12501                           ;Config register IDLOC4 @ 0x200004
 12502                           ;	unspecified, using default values
 12503  200004                     	org	2097156
 12504  200004  FF                 	db	255
 12505                           
 12506                           ;Config register IDLOC5 @ 0x200005
 12507                           ;	unspecified, using default values
 12508  200005                     	org	2097157
 12509  200005  FF                 	db	255
 12510                           
 12511                           ;Config register IDLOC6 @ 0x200006
 12512                           ;	unspecified, using default values
 12513  200006                     	org	2097158
 12514  200006  FF                 	db	255
 12515                           
 12516                           ;Config register IDLOC7 @ 0x200007
 12517                           ;	unspecified, using default values
 12518  200007                     	org	2097159
 12519  200007  FF                 	db	255
 12520                           
 12521                           	psect	config
 12522                           
 12523                           ;Config register CONFIG1L @ 0x300000
 12524                           ;	PLL Selection
 12525                           ;	PLLSEL = PLL4X, 4x clock multiplier
 12526                           ;	PLL Enable Configuration bit
 12527                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
 12528                           ;	CPU System Clock Postscaler
 12529                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
 12530                           ;	Low Speed USB mode with 48 MHz system clock
 12531                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
 12532  300000                     	org	3145728
 12533  300000  00                 	db	0
 12534                           
 12535                           ;Config register CONFIG1H @ 0x300001
 12536                           ;	Oscillator Selection
 12537                           ;	FOSC = HSM, HS oscillator, medium power 4MHz to 16MHz
 12538                           ;	Primary Oscillator Shutdown
 12539                           ;	PCLKEN = ON, Primary oscillator enabled
 12540                           ;	Fail-Safe Clock Monitor
 12541                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12542                           ;	Internal/External Oscillator Switchover
 12543                           ;	IESO = OFF, Oscillator Switchover mode disabled
 12544  300001                     	org	3145729
 12545  300001  23                 	db	35
 12546                           
 12547                           ;Config register CONFIG2L @ 0x300002
 12548                           ;	Power-up Timer Enable
 12549                           ;	nPWRTEN = OFF, Power up timer disabled
 12550                           ;	Brown-out Reset Enable
 12551                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
 12552                           ;	Brown-out Reset Voltage
 12553                           ;	BORV = 190, BOR set to 1.9V nominal
 12554                           ;	Low-Power Brown-out Reset
 12555                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
 12556  300002                     	org	3145730
 12557  300002  5F                 	db	95
 12558                           
 12559                           ;Config register CONFIG2H @ 0x300003
 12560                           ;	Watchdog Timer Enable bits
 12561                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
 12562                           ;	Watchdog Timer Postscaler
 12563                           ;	WDTPS = 32768, 1:32768
 12564  300003                     	org	3145731
 12565  300003  3C                 	db	60
 12566                           
 12567                           ; Padding undefined space
 12568  300004                     	org	3145732
 12569  300004  FF                 	db	255
 12570                           
 12571                           ;Config register CONFIG3H @ 0x300005
 12572                           ;	CCP2 MUX bit
 12573                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
 12574                           ;	PORTB A/D Enable bit
 12575                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
 12576                           ;	Timer3 Clock Input MUX bit
 12577                           ;	T3CMX = RC0, T3CKI function is on RC0
 12578                           ;	SDO Output MUX bit
 12579                           ;	SDOMX = RB3, SDO function is on RB3
 12580                           ;	Master Clear Reset Pin Enable
 12581                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
 12582  300005                     	org	3145733
 12583  300005  D3                 	db	211
 12584                           
 12585                           ;Config register CONFIG4L @ 0x300006
 12586                           ;	Stack Full/Underflow Reset
 12587                           ;	STVREN = ON, Stack full/underflow will cause Reset
 12588                           ;	Single-Supply ICSP Enable bit
 12589                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 12590                           ;	Dedicated In-Circuit Debug/Programming Port Enable
 12591                           ;	ICPRT = OFF, ICPORT disabled
 12592                           ;	Extended Instruction Set Enable bit
 12593                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
 12594                           ;	Background Debugger Enable bit
 12595                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 12596  300006                     	org	3145734
 12597  300006  85                 	db	133
 12598                           
 12599                           ; Padding undefined space
 12600  300007                     	org	3145735
 12601  300007  FF                 	db	255
 12602                           
 12603                           ;Config register CONFIG5L @ 0x300008
 12604                           ;	Block 0 Code Protect
 12605                           ;	CP0 = OFF, Block 0 is not code-protected
 12606                           ;	Block 1 Code Protect
 12607                           ;	CP1 = OFF, Block 1 is not code-protected
 12608                           ;	Block 2 Code Protect
 12609                           ;	CP2 = OFF, Block 2 is not code-protected
 12610                           ;	Block 3 Code Protect
 12611                           ;	CP3 = OFF, Block 3 is not code-protected
 12612  300008                     	org	3145736
 12613  300008  0F                 	db	15
 12614                           
 12615                           ;Config register CONFIG5H @ 0x300009
 12616                           ;	Boot Block Code Protect
 12617                           ;	CPB = OFF, Boot block is not code-protected
 12618                           ;	Data EEPROM Code Protect
 12619                           ;	CPD = OFF, Data EEPROM is not code-protected
 12620  300009                     	org	3145737
 12621  300009  C0                 	db	192
 12622                           
 12623                           ;Config register CONFIG6L @ 0x30000A
 12624                           ;	Block 0 Write Protect
 12625                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
 12626                           ;	Block 1 Write Protect
 12627                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
 12628                           ;	Block 2 Write Protect
 12629                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
 12630                           ;	Block 3 Write Protect
 12631                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
 12632  30000A                     	org	3145738
 12633  30000A  0F                 	db	15
 12634                           
 12635                           ;Config register CONFIG6H @ 0x30000B
 12636                           ;	Configuration Registers Write Protect
 12637                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 12638                           ;	Boot Block Write Protect
 12639                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
 12640                           ;	Data EEPROM Write Protect
 12641                           ;	WRTD = OFF, Data EEPROM is not write-protected
 12642  30000B                     	org	3145739
 12643  30000B  E0                 	db	224
 12644                           
 12645                           ;Config register CONFIG7L @ 0x30000C
 12646                           ;	Block 0 Table Read Protect
 12647                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
 12648                           ;	Block 1 Table Read Protect
 12649                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
 12650                           ;	Block 2 Table Read Protect
 12651                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
 12652                           ;	Block 3 Table Read Protect
 12653                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
 12654  30000C                     	org	3145740
 12655  30000C  0F                 	db	15
 12656                           
 12657                           ;Config register CONFIG7H @ 0x30000D
 12658                           ;	Boot Block Table Read Protect
 12659                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
 12660  30000D                     	org	3145741
 12661  30000D  40                 	db	64
 12662                           tosu	equ	0xFFF
 12663                           tosh	equ	0xFFE
 12664                           tosl	equ	0xFFD
 12665                           stkptr	equ	0xFFC
 12666                           pclatu	equ	0xFFB
 12667                           pclath	equ	0xFFA
 12668                           pcl	equ	0xFF9
 12669                           tblptru	equ	0xFF8
 12670                           tblptrh	equ	0xFF7
 12671                           tblptrl	equ	0xFF6
 12672                           tablat	equ	0xFF5
 12673                           prodh	equ	0xFF4
 12674                           prodl	equ	0xFF3
 12675                           indf0	equ	0xFEF
 12676                           postinc0	equ	0xFEE
 12677                           postdec0	equ	0xFED
 12678                           preinc0	equ	0xFEC
 12679                           plusw0	equ	0xFEB
 12680                           fsr0h	equ	0xFEA
 12681                           fsr0l	equ	0xFE9
 12682                           wreg	equ	0xFE8
 12683                           indf1	equ	0xFE7
 12684                           postinc1	equ	0xFE6
 12685                           postdec1	equ	0xFE5
 12686                           preinc1	equ	0xFE4
 12687                           plusw1	equ	0xFE3
 12688                           fsr1h	equ	0xFE2
 12689                           fsr1l	equ	0xFE1
 12690                           bsr	equ	0xFE0
 12691                           indf2	equ	0xFDF
 12692                           postinc2	equ	0xFDE
 12693                           postdec2	equ	0xFDD
 12694                           preinc2	equ	0xFDC
 12695                           plusw2	equ	0xFDB
 12696                           fsr2h	equ	0xFDA
 12697                           fsr2l	equ	0xFD9
 12698                           status	equ	0xFD8

Data Sizes:
    Strings     46
    Constant    222
    Data        120
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      93
    BANK0           160    152     160
    BANK1           256      0     145
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(COMRAM[2]), floor@expon(BANK0[2]), 

    eval_poly@d	PTR const  size(2) Largest target is 40
		 -> log@coeff(CODE[36]), exp@coeff(CODE[40]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_6(CODE[4]), STR_5(CODE[6]), STR_4(CODE[4]), STR_3(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 15
		 -> gsTotalSecs(BANK1[4]), ComputeWaterVol@sEchoMM(BANK0[11]), ComputeWaterVol@sFill(BANK0[14]), ComputeWaterVol@sGals(BANK0[15]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_WriteString@iData	PTR unsigned char  size(2) Largest target is 17
		 -> gsTotalSecs(BANK1[4]), ComputeWaterVol@sEchoMM(BANK0[11]), ComputeWaterVol@sFill(BANK0[14]), ComputeWaterVol@sGals(BANK0[15]), 
		 -> STR_2(CODE[17]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_ComputeTOD
    _LCD_Init->_LCD_WriteCmd
    _pow->_log
    _log->___fladd
    _exp->_ldexp
    _exp->_log
    _floor->___fladd
    _frexp->___fleq
    _eval_poly->___fladd
    _sqrt->___fladd
    _sprintf->_scale
    _scale->___flmul
    ___awdiv->___awmod
    _fround->___flmul
    ___lwdiv->___lwmod
    ___flmul->_frexp
    ___xxtofl->___fltol
    ___llmod->___lldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->_fround
    ___fleq->___xxtofl
    _LCD_WriteString->_LCD_WriteChar
    _LCD_GoTo->_LCD_WriteCmd

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_Timer0_ISR

Critical Paths under _main in BANK0

    _main->_ComputeWaterVol
    _InitTankVariables->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_ldexp
    _ldexp->_eval_poly
    _floor->___fladd
    _eval_poly->___fladd
    _ComputeWaterVol->_sprintf
    _sqrt->___fladd
    _ComputeTOD->_sprintf
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  237846
                          _CCP1_Init
                          _CCP2_Init
                         _ComputeTOD
                    _ComputeWaterVol
                  _InitTankVariables
                           _LCD_GoTo
                           _LCD_Init
                    _LCD_WriteString
                            _SysInit
                        _Timer0_Init
                        _Timer1_Init
                        _Timer2_Init
                        _Timer3_Init
 ---------------------------------------------------------------------------------
 (1) _Timer3_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer2_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SysInit                                              0     0      0       0
                            _OscInit
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_IOC                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OscInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     927
                                              8 COMRAM     1     1      0
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (1) _InitTankVariables                                    4     4      0  100319
                                             88 BANK0      4     4      0
                            ___flmul
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 21    13      8   92952
                                             67 BANK0     21    13      8
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  6     2      4   30762
                                             90 COMRAM     2     2      0
                                             50 BANK0      4     0      4
                            ___fladd
                             ___fleq
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                 11     7      4   47836
                                             56 BANK0     11     7      4
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                           ___xxtofl
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                8     2      6    2749
                                             90 COMRAM     2     2      0
                                             50 BANK0      6     0      6
                             ___fleq
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                               10     6      4   11381
                                             34 BANK0     10     6      4
                            ___fladd
                             ___flge
                            ___fltol
                           ___xxtofl
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                8     2      6    2892
                                             62 COMRAM     8     2      6
                             ___fleq
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           16     8      8   12469
                                             34 BANK0     16     8      8
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) _ComputeWaterVol                                     75    75      0   78420
                                             81 BANK0     71    71      0
                           _LCD_GoTo
                    _LCD_WriteString
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                           ___xxtofl
                            _sprintf
                               _sqrt
 ---------------------------------------------------------------------------------
 (2) _sqrt                                                29    25      4     957
                                             34 BANK0     29    25      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1855
                                              1 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) _ComputeTOD                                           3     3      0   55954
                                             91 COMRAM     1     1      0
                                             81 BANK0      2     2      0
                           _LCD_GoTo
                    _LCD_WriteString
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             45    37      8   53718
                                             42 BANK0     39    31      8
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (3) _scale                                                9     5      4   11180
                                             82 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4    1513
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4    1705
                                              7 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _fround                                              13     9      4    9236
                                             82 COMRAM     4     0      4
                                             13 BANK0      9     9      0
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     772
                                              1 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     781
                                              6 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    7333
                                             70 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
                            ___fltol (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) __tdiv_to_l_                                         17     9      8     634
                                              1 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (3) __div_to_l_                                          14     6      8     634
                                              1 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4    1106
                                             36 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     772
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     952
                                             14 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     781
                                              1 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1057
                                             26 COMRAM    10     6      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    5087
                                             34 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    4342
                                             86 COMRAM     4     4      0
                                             22 BANK0     12     4      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     425
                                              1 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1526
                                              1 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8    2210
                                             50 COMRAM    12     4      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _LCD_WriteString                                      5     3      2     763
                                              4 COMRAM     5     3      2
                      _LCD_WriteChar
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteChar                                        3     3      0      93
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_GoTo                                             7     6      1    1436
                                              8 COMRAM     7     6      1
                       _LCD_WriteCmd
 ---------------------------------------------------------------------------------
 (2) _LCD_WriteCmd                                         7     5      2     791
                                              1 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _CCP2_Init                                            1     1      0      24
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CCP1_Init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           0     0      0       0
                           _CCP1_ISR
                         _Timer0_ISR
                         _Timer2_ISR
                         _Timer3_ISR
 ---------------------------------------------------------------------------------
 (8) _Timer3_ISR                                           0     0      0       0
                _StartDepthDetection
 ---------------------------------------------------------------------------------
 (9) _StartDepthDetection                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer2_ISR                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _Timer0_ISR                                           1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _CCP1_ISR                                             0     0      0       0
                       _Timer1_Reset
 ---------------------------------------------------------------------------------
 (9) _Timer1_Reset                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CCP1_Init
   _CCP2_Init
   _ComputeTOD
     _LCD_GoTo
       _LCD_WriteCmd
     _LCD_WriteString
       _LCD_WriteChar
     _sprintf
       ___awdiv
         ___awmod (ARG)
       ___fladd
         ___fldiv (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
           ___awmod (ARG)
           ___fldiv (ARG)
           ___fltol (ARG)
             ___awdiv (ARG)
             ___awmod (ARG)
             ___fldiv (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
           _frexp (ARG)
             ___fleq
               ___xxtofl (ARG)
         ___xxtofl (ARG)
         _frexp (ARG)
         _fround (ARG)
           ___flmul
           ___lwdiv
           ___lwmod
       ___fleq
       ___flge
       ___flmul
       ___flneg
       ___flsub
         ___fladd
         ___xxtofl (ARG)
       ___fltol
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       ___xxtofl
       __div_to_l_
       __tdiv_to_l_
       _fround
       _isdigit
       _scale
         ___awdiv
         ___awmod
         ___flmul
         ___fltol (ARG)
   _ComputeWaterVol
     _LCD_GoTo
     _LCD_WriteString
     ___fladd
     ___fldiv
     ___flmul
     ___flsub
     ___fltol
     ___xxtofl
     _sprintf
     _sqrt
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
   _InitTankVariables
     ___flmul
     _pow
       ___fleq
       ___flge
       ___flmul
       ___flneg
       ___fltol
       ___xxtofl
       _exp
         ___fldiv
         ___fleq
         ___flge
         ___flmul
         ___flneg
         ___flsub
         ___fltol
         ___xxtofl
         _eval_poly
           ___fladd
           ___flmul
         _floor
           ___fladd
           ___flge
           ___fltol
           ___xxtofl
           _frexp
         _ldexp
           ___fleq
           _eval_poly (ARG)
         _log (ARG)
           ___fladd
           ___fleq
           ___flmul
           ___xxtofl
           _eval_poly
           _frexp
       _log
   _LCD_GoTo
   _LCD_Init
     _LCD_WriteCmd
   _LCD_WriteString
   _SysInit
     _OscInit
     _PIN_MANAGER_Initialize
       _PIN_MANAGER_IOC
   _Timer0_Init
   _Timer1_Init
   _Timer2_Init
   _Timer3_Init

 _INTERRUPT_InterruptManager (ROOT)
   _CCP1_ISR
     _Timer1_Reset
   _Timer0_ISR
   _Timer2_ISR
   _Timer3_ISR
     _StartDepthDetection

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      91       8       56.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     98      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5D       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     18E       6        0.0%
DATA                 0      0     18E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Apr 22 12:39:24 2021

                       ___fldiv@aexp 001A                         ___fldiv@bexp 0019  
                 __size_of_CCP1_Init 0016                         ___fldiv@sign 0012  
                 __size_of_CCP2_Init 001E                                   l76 446C  
                                 l79 443E                         ___awdiv@sign 000D  
                ___wmul@multiplicand 0004                                  l127 442C  
                                l242 4408                                  l340 2106  
                                l343 3972                                  l183 441A  
                                l353 35A0                                  l444 43F4  
                                l540 3E0E                                  l535 4236  
                                l560 41DE                                  l552 4188  
                                l800 3CF8                                  l538 3E0C  
                                l554 418A                                  l547 3E66  
                                l556 418C                                  l732 086E  
                                l396 4282                                  l549 3E82  
                                l574 4184                                  l566 3EFA  
                                l638 43DE                                  l559 41D6  
                                l671 1A1C                                  l399 4470  
                                l488 43AA                                  l664 29B6  
                                l763 0D22                                  l766 438C  
                                l793 3CE8                                  l997 3AFA  
                                _PR2 000FBB                                  _exp 2426  
                                _log 2DCE                                  _pow 29B8  
                       ___awmod@sign 0007                                  wreg 000FE8  
                  ??_LCD_WriteString 0007                         ___flmul@aexp 0061  
                       ___flmul@bexp 0066                         ___flmul@sign 0060  
                       ___flmul@temp 006B                         ___flmul@prod 0067  
                       ___fltol@exp1 0024                                 l1010 3BAA  
                               l1020 3214                                 l1131 300E  
                               l1044 3868                                 l1132 3040  
                               l1045 38AE                                 l1029 3204  
                               l1038 3C54                                 l1215 3E08  
                               l1072 36A6                                 l1208 3DF8  
                               l1049 4302                                 l1129 30C8  
                               l1138 30B8                                 l1402 12AC  
                               l1411 151A                                 l1316 0F14  
                               l1412 1508                                 l1333 102E  
                               l1325 11E4                                 l1317 0F02  
                               l1501 2C08                                 l1342 10FE  
                               l1318 0EC8                                 l1406 1610  
                               l1343 10EC                                 l1431 2424  
                               l1409 14A2                                 l1370 1DB6  
                               l1419 15D2                                 l1515 2710  
                               l1372 1C16                                 l1381 1C5C  
                               l4101 1AEA                                 l1525 379A  
                               l1541 3A36                                 l1533 3358  
                               l1358 42CA                                 l1470 2D08  
                               l1286 4058                                 l1526 37AA  
                               l1463 2C70                                 l1279 4050  
                               l1383 1CD4                                 l1375 1BDA  
                               l4103 1B00                                 l1535 3348  
                               l1519 2700                                 l1296 4128  
                               l1384 1CC2                                 l1289 4120  
                               l4121 1B54                                 l4105 1B10  
                               l4113 1B30                                 l1545 3498  
                               l1466 2DCC                                 l4131 1BA6  
                               l4123 1B6E                                 l4115 1B40  
                               l4107 1B18                                 l1563 2F72  
                               l1477 2D64                                 l4141 1C02  
                               l4133 1BB6                                 l4125 1B7E  
                               l4117 1B40                                 l4109 1B1C  
                               l1486 4334                                 l4151 1C42  
                               l4143 1C04                                 l4135 1BCA  
                               l4127 1B8E                                 l4071 1A4A  
                               l4063 1A1E                                 l1496 2A2C  
                               l6001 3B28                                 l4161 1C7E  
                               l4153 1C4C                                 l4145 1C14  
                               l4137 1BD8                                 l4129 1B9E  
                               l4081 1A84                                 l4073 1A5A  
                               l4065 1A2A                                 l1497 2C18  
                               l6011 3B60                                 l6003 3B30  
                               l4171 1CF0                                 l4163 1C8C  
                               l4155 1C5A                                 l4147 1C26  
                               l4139 1BE4                                 l4091 1AB0  
                               l4083 1A8A                                 l4075 1A6A  
                               l4067 1A38                                 l5301 43EC  
                               l6021 3B9A                                 l6013 3B76  
                               l6005 3B42                                 l4181 1D5C  
                               l4173 1CFE                                 l4165 1CBA  
                               l4149 1C3C                                 l4157 1C6C  
                               l4093 1AC0                                 l4085 1A90  
                               l4077 1A6C                                 l4069 1A3A  
                               l6101 3786                                 l5303 43EE  
                               l5311 43A6                                 l6031 42F2  
                               l6023 3BA2                                 l6015 3B7E  
                               l6007 3B4A                                 l4191 1DAA  
                               l4183 1D76                                 l4175 1D28  
                               l4159 1C7A                                 l4095 1AD0  
                               l4087 1A9E                                 l4079 1A74  
                               l6111 33E6                                 l6103 335A  
                               l5305 43F0                                 l6041 4008  
                               l6017 3B84                                 l6009 3B52  
                               l6201 1822                                 l4193 1DAC  
                               l4185 1D92                                 l4169 1CE4  
                               l4177 1D2C                                 l4097 1AD2  
                               l4089 1AA0                                 l6121 3426  
                               l6105 338C                                 l5307 438E  
                               l6027 42CC                                 l6051 4042  
                               l6043 4010                                 l6035 3FE6  
                               l6019 3B8A                                 l6211 195C  
                               l6203 1836                                 l4187 1D96  
                               l4179 1D46                                 l4099 1ADA  
                               l6123 3436                                 l5243 4464  
                               l5251 440A                                 l5309 439E  
                               l6141 3E14                                 l6029 42E2  
                               l5501 0DA6                                 l6301 3110  
                               l6053 4044                                 l6045 401E  
                               l6037 3FEE                                 l6061 40E0  
                               l6221 430A                                 l4189 1DA4  
                               l6133 345E                                 l6117 3406  
                               l6109 33A2                                 l5245 441C  
                               l5253 4412                                 l5261 4400  
                               l6151 3E68                                 l6143 3E3A  
                               l5511 0DDC                                 l5503 0DAC  
                               l6311 314C                                 l6303 3120  
                               l6231 2F74                                 l6055 404A  
                               l6047 4024                                 l6039 4000  
                               l6071 411A                                 l6063 40E8  
                               l6223 431A                                 l6215 19F4  
                               l6135 3488                                 l6119 341C  
                               l5247 4424                                 l5255 4414  
                               l5263 4406                                 l6153 3E6C  
                               l6145 3E56                                 l6161 41D4  
                               l5601 0FA2                                 l5521 0E18  
                               l5513 0DEC                                 l5505 0DBA  
                               l6321 318A                                 l6313 3150  
                               l6305 3132                                 l6233 2F98  
                               l6049 403A                                 l6065 40F6  
                               l6057 40C6                                 l6225 432A  
                               l6209 1948                                 l4801 21F8  
                               l6073 3216                                 l6129 344A  
                               l4721 4238                                 l5249 4426  
                               l5257 43F6                                 l6147 3E58  
                               l6139 3E10                                 l6155 418E  
                               l5603 0FC8                                 l5611 101E  
                               l5531 0E36                                 l5523 0E26  
                               l5515 0DEE                                 l5507 0DBC  
                               l6323 3194                                 l6315 315A  
                               l6307 3142                                 l6251 3000  
                               l6243 2FD4                                 l6067 410C  
                               l6059 40D8                                 l6171 2882  
                               l6163 2716                                 l6227 432E  
                               l6219 4306                                 l4811 224A  
                               l6091 32A2                                 l6083 3264  
                               l6075 3232                                 l6403 2E50  
                               l4731 4264                                 l4723 425C  
                               l5259 43FC                                 l6149 3E5A  
                               l6157 4192                                 l5461 3BAC  
                               l5621 1072                                 l5613 1044  
                               l5605 0FFC                                 l5541 0E4A  
                               l5533 0E3A                                 l5525 0E2A  
                               l5509 0DCC                                 l5517 0DF6  
                               l6333 31C0                                 l6325 319A  
                               l6317 3178                                 l6309 3146  
                               l6261 303E                                 l6253 3004  
                               l6245 2FD6                                 l6237 2FAC  
                               l5701 1264                                 l6069 4114  
                               l6173 2892                                 l6165 2728  
                               l6181 1614                                 l6501 0184  
                               l4821 22AA                                 l4813 225A  
                               l6093 330E                                 l6077 3242  
                               l6421 24A0                                 l6413 2426  
                               l6405 2EC6                                 l4733 427C  
                               l4725 425E                                 l6159 41B8  
                               l5471 3C4C                                 l5463 3BDA  
                               l5631 109C                                 l5623 1080  
                               l5615 1054                                 l5607 0FFE  
                               l5551 0E5E                                 l5543 0E4E  
                               l5535 0E3E                                 l5527 0E2E  
                               l5519 0E06                                 l6343 31E8  
                               l6335 31CA                                 l6327 31A8  
                               l6319 3188                                 l6263 3048  
                               l6255 300A                                 l6247 2FE4  
                               l5711 129C                                 l5703 1266  
                               l6191 174A                                 l6183 1622  
                               l6511 01FA                                 l6503 01A0  
                               l4823 22CE                                 l4831 2324  
                               l4815 226A                                 l4807 220C  
                               l6079 3250                                 l6087 3278  
                               l6431 2512                                 l6415 2458  
                               l6407 2ECC                                 l4399 446E  
                               l4735 427E                                 l4727 4260  
                               l5295 43CA                                 l5473 3C52  
                               l5465 3BEA                                 l5641 10CE  
                               l5633 10AC                                 l5625 1082  
                               l5609 100E                                 l5561 0EB0  
                               l5553 0E62                                 l5545 0E52  
                               l5537 0E42                                 l5529 0E32  
                               l5481 0D40                                 l6361 3C90  
                               l6353 3C56                                 l6345 31F4  
                               l6337 31D4                                 l6273 3074  
                               l6265 304E                                 l6257 3018  
                               l6249 2FF0                                 l5801 15F6  
                               l5721 12EC                                 l5713 12BC  
                               l5705 1276                                 l6177 296A  
                               l6193 175E                                 l6185 1638  
                               l6513 01FE                                 l6505 01A8  
                               l4841 23BE                                 l4833 2334  
                               l4825 22EE                                 l4817 2274  
                               l4809 223A                                 l4761 2108  
                               l6097 36A8                                 l6089 328E  
                               l6441 25B4                                 l6433 2528  
                               l6425 24C0                                 l6409 2F02  
                               l4737 442E                                 l4729 4262  
                               l5297 43CE                                 l5299 43E0  
                               l5467 3C18                                 l5811 37DA  
                               l5651 1128                                 l5643 10E4  
                               l5627 1090                                 l5619 1068  
                               l5635 10AE                                 l5571 0EF4  
                               l5563 0EC0                                 l5547 0E56  
                               l5539 0E46                                 l5555 0E66  
                               l5491 0D74                                 l5483 0D42  
                               l6371 3CD8                                 l6363 3C9E  
                               l6355 3C66                                 l6347 4368  
                               l6283 309C                                 l6275 307E  
                               l6267 305C                                 l6259 3032  
                               l5803 15FC                                 l5731 133C  
                               l5723 12F6                                 l5715 12CC  
                               l5707 1286                                 l6611 06A2  
                               l6531 0298                                 l6523 0236  
                               l6507 01B4                                 l6515 0220  
                               l4851 2418                                 l4843 23EC  
                               l4835 235E                                 l4827 2318  
                               l4819 227C                                 l4771 2144  
                               l4763 2116                                 l6099 36F2  
                               l6451 26B2                                 l6443 25D0  
                               l6435 2538                                 l6427 24F2  
                               l6419 246E                                 ?_exp 0098  
                               l6461 3E8C                                 l5469 3C28  
                               l5821 3848                                 l5813 37EA  
                               l5661 11A4                                 l5653 1162  
                               l5629 1098                                 l5637 10BC  
                               l5573 0EF6                                 l5565 0ED6  
                               l5557 0E6A                                 l5549 0E5A  
                               l5485 0D52                                 l5493 0D7C  
                               l5477 0D24                                 l6373 3CE2  
                               l6365 3CA8                                 l6357 3C7C  
                               l6381 3DAC                                 l6349 4384  
                               l5901 2D46                                 l6293 30F4  
                               l6285 30A8                                 l6277 3088  
                               l5805 1600                                 l5741 137E  
                               l5733 1348                                 l5725 130C  
                               l5709 1296                                 l6197 17F6  
                               l6701 0A76                                 l6621 0710  
                               l6613 06B4                                 l6605 0666  
                               l6541 02F0                                 l6533 02B0  
                               l6525 0270                                 l6517 022A  
                               l6509 01D0                                 l4853 241E  
                               l4845 2404                                 l4837 2376  
                               l4829 2322                                 l4781 217A  
                               l4773 2156                                 l4765 2124  
                               l6445 261C                                 l6437 255C  
                               ?_log 0092                                 l6471 414C  
                               l6463 3EBC                                 l5823 3856  
                               l5815 3818                                 l5671 11C4  
                               l5663 11A8                                 l5647 110E  
                               l5655 1164                                 l5639 10C0  
                               l5591 0F7E                                 l5583 0F46  
                               l5575 0F00                                 l5567 0EE2  
                               l5559 0E94                                 l5495 0D8C  
                               l5487 0D62                                 l5479 0D32  
                               l5831 35A2                                 l6367 3CC6  
                               l6359 3C84                                 l6383 3DBA  
                               l6375 3D82                                 l5911 2D9C  
                               l5903 2D54                                 l6287 30CA  
                               l5751 13E0                                 l5743 138E  
                               l5735 1356                                 l5727 1318  
                               l5719 12E0                                 l6711 0A94  
                               l6703 0A8C                                 l6631 075C  
                               l6623 071C                                 l6615 06E2  
                               l6551 035C                                 l6543 02F8  
                               l6535 02B8                                 l6527 0282  
                               l6519 0230                                 l4847 2408  
                               l4839 23B0                                 l4791 21C0  
                               l4783 218C                                 l4775 2158  
                               l4767 2126                                 l6455 26C8  
                               l6447 266E                                 l6439 2590  
                               l6391 2DCE                                 l6473 4160  
                               l6465 3EBE                                 l5825 38A6  
                               l5817 3828                                 l5809 37AC  
                               l5673 11D2                                 l5665 11B6  
                               l5657 1174                                 l5649 111A  
                               l5593 0F82                                 l5585 0F56  
                               l5577 0F22                                 l5569 0EE6  
                               l5497 0D92                                 l5489 0D72  
                               l5841 35F8                                 l5833 35B8  
                               l6369 3CD6                                 l6385 3DD8  
                               l6377 3D98                                 l5913 2DAC  
                               l5905 2D72                                 l6289 30E0  
                               l5761 1488                                 l5753 13FC  
                               l5745 13A8                                 l5737 1362  
                               l5729 1330                                 l5681 11F4  
                               l6721 0B06                                 l6705 0A90  
                               l6633 0768                                 l6617 06E8  
                               l6609 06A0                                 l6561 03DA  
                               l6553 0378                                 l6545 032A  
                               l6537 02C6                                 l6529 0290  
                               l6481 00BE                                 l4849 2416  
                               l4793 21C8                                 l4777 216A  
                               l4769 212C                                 l5921 3974  
                               l6449 2680                                 l6393 2DDE  
                               l6801 2B2E                                 l6475 4170  
                               l6467 412C                                 l6459 3E84  
                               l5827 38AC                                 l5819 3836  
                               l5675 11D4                                 l5667 11BC  
                               l5659 1184                                 l5595 0F90  
                               l5587 0F64                                 l5579 0F32  
                               l5499 0DA4                                 l5843 3608  
                               l6387 3DE8                                 l6379 3DA0  
                               l5915 2DBA                                 l5907 2D74  
                               l6299 310E                                 l5771 14C4  
                               l5763 1492                                 l5755 1426  
                               l5747 13B8                                 l5739 1372  
                               l5691 1234                                 l5683 1202  
                               l6731 0B68                                 l6723 0B0E  
                               l6715 0ACE                                 l6651 0830  
                               l6635 0770                                 l6643 0804  
                               l6619 0706                                 l6627 0724  
                               l6571 046E                                 l6563 040C  
                               l6555 0388                                 l6547 033A  
                               l6539 02EA                                 l6491 0112  
                               l6483 00D0                                 l4795 21D2  
                               l4787 21A0                                 l5931 3A0C  
                               l5923 39A6                                 l6811 2BE0  
                               l6803 2B52                                 l6469 413C  
                               l6477 4174                                 l5669 11BE  
                               l5597 0F92                                 l5589 0F72  
                               l5941 4284                                 l5853 3632  
                               l5845 360C                                 l5837 35CC  
                               l6389 3DF2                                 l5917 2DBC  
                               l5909 2D78                                 l5781 1536  
                               l5773 14D2                                 l5765 14A0  
                               l5757 145C                                 l5749 13D4  
                               l5693 123A                                 l5685 1204  
                               l6741 0BAE                                 l6733 0B6E  
                               l6725 0B32                                 l6717 0AD0  
                               l6661 088A                                 l6653 084A  
                               l6645 081A                                 l6637 07BC  
                               l6629 073E                                 l6581 0540  
                               l6573 04A8                                 l6565 0418  
                               l6557 038E                                 l6549 0340  
                               l6493 011C                                 l6485 00DC  
                               l6901 351E                                 l4789 21B0  
                               l5933 3A1C                                 l5925 39B6  
                               l6397 2DFE                                 l6805 2B76  
                               l6821 41FE                                 l5599 0F9C  
                               l5943 4296                                 l5871 3696  
                               l5863 365A                                 l5855 363C  
                               l5847 361A                                 l5839 35F6  
                               l5791 15A0                                 l5783 1544  
                               l5775 1500                                 l5767 14B2  
                               l5759 146A                                 l5695 124A  
                               l5687 1214                                 l5679 11E6  
                               l5951 3A4A                                 l6751 0C04  
                               l6743 0BD2                                 l6735 0B7C  
                               l6727 0B38                                 l6719 0AE2  
                               l6671 0948                                 l6663 0896  
                               l6655 0866                                 l6647 0826  
                               l6639 07F0                                 l6583 0572  
                               l6575 04C6                                 l6567 044A  
                               l6559 03A6                                 l6495 0138  
                               l6487 00E4                                 l6479 00B0  
                               l6911 3582                                 l6903 353A  
                               l4799 21E6                                 l5935 3A24  
                               l6399 2E30                                 l6807 2BAA  
                               l6831 4228                                 l6823 41FE  
                               l6815 41E0                                 l5865 3666  
                               l5857 3646                                 l5881 2C80  
                               l5793 15BA                                 l5785 156E  
                               l5769 14C0                                 l5697 1250  
                               l5689 1224                                 l5961 3A70  
                               l5953 3A52                                 l6761 0C52  
                               l6753 0C08                                 l6745 0BDE  
                               l6737 0B9A                                 l6729 0B4A  
                               l6681 09F4                                 l6673 097C  
                               l6665 089A                                 l6657 0872  
                               l6649 082A                                 l6593 05D4  
                               l6585 0580                                 l6577 04F8  
                               l6569 0450                                 l6497 0162  
                               l6489 00F4                                 l6913 3586  
                               l6905 3544                                 l5937 3A26  
                               l5929 39CA                                 l6809 2BCE  
                               l6841 392C                                 l6833 4228  
                               l6825 420C                                 l6817 41F0  
                               l6921 3CFA                                 l5867 3676  
                               l5891 2CBE                                 l5883 2C96  
                               l5875 2C1C                                 l5795 15D6  
                               l5779 152A                                 l5787 1572  
                               l5699 1256                                 l5971 3AA8  
                               l5963 3A78                                 l5955 3A56  
                               l5947 3A38                                 l6763 0CCA  
                               l6755 0C20                                 l6747 0BE6  
                               l6739 0BA6                                 l6691 0A3A  
                               l6683 0A00                                 l6675 098C  
                               l6667 08B0                                 l6659 087A  
                               l6587 058A                                 l6579 0522  
                               l6595 05EA                                 l6771 0D16  
                               l6499 0166                                 l6915 3598  
                               l6907 3550                                 l6851 1E36  
                               l6843 3960                                 l6835 38B0  
                               l6827 420C                                 l6819 41F0  
                               l6931 3D24                                 l6923 3CFE  
                               l5869 3686                                 l5893 2CF0  
                               l5877 2C2C                                 l5797 15E6  
                               l5789 158C                                 l5981 3AD4  
                               l5973 3AAE                                 l5965 3A8A  
                               l5957 3A64                                 l5949 3A3C  
                               l6757 0C3E                                 l6749 0BF8  
                               l6693 0A42                                 l6685 0A04  
                               l6677 0990                                 l6669 08FC  
                               l6597 0658                                 l6589 05A0  
                               l6917 359C                                 l6909 3560  
                               l6861 1FE6                                 l6853 1EC6  
                               l6845 1DB8                                 l6781 2A22  
                               l6837 38E6                                 l6829 421A  
                               l6941 3D38                                 l6933 3D28  
                               l6925 3D02                                 l5895 2CF2  
                               l5887 2CAA                                 l5879 2C3A  
                               l5799 15F4                                 l5975 3AC4  
                               l5967 3A92                                 l5983 3ADA  
                               l5959 3A6C                                 l5991 3AFC  
                               l6759 0C4A                                 l6767 0CDA  
                               l6695 0A50                                 l6687 0A0A  
                               l6679 09DC                                 l6599 0662  
                               l6871 2098                                 l6863 2048  
                               l6855 1F1E                                 l6847 1DEE  
                               l6791 2A8A                                 l6775 29B8  
                               l6839 391A                                 l6951 3D56  
                               l6943 3D3C                                 l6935 3D2C  
                               l6927 3D0E                                 l6919 3CFA  
                               l5897 2CFE                                 l5889 2CB2  
                               l5985 3AEA                                 l5977 3ACC  
                               l5969 3A9A                                 l5993 3B00  
                               l6697 0A54                                 l6689 0A20  
                               l6769 0CF4                                 l6881 20FA  
                               l6873 20B4                                 l6865 2064  
                               l6857 1F7E                                 l6849 1E24  
                               l6793 2A9A                                 l6785 2A42  
                               l6777 29BE                                 l6953 3D5A  
                               l6945 3D40                                 l6937 3D30  
                               l6929 3D18                                 l5899 2D3A  
                               l5987 3AF2                                 l5979 3ACE  
                               l5995 3B0E                                 l6699 0A64  
                               l6891 34EA                                 l6883 349A  
                               l6875 20BE                                 l6867 2082  
                               l6859 1FB2                                 l6795 2B06  
                               l6787 2A74                                 l6779 29F0  
                               l6955 3D60                                 l6947 3D42  
                               l6939 3D34                                 l5997 3B16  
                               l6893 34EE                                 l6885 349E  
                               l6877 20CA                                 l6869 208C  
                               l6957 3D70                                 l6949 3D44  
                               l5999 3B1A                                 l6895 3500  
                               l6887 34CC                                 l6879 20F0  
                               l6799 2B26                                 l6959 3D74  
                               l6897 3504                                 l6889 34D6  
                               l6899 3516                                 ?_pow 00A3  
                               STR_1 7FE2                                 STR_2 7FD1  
                               STR_3 7FFB                                 STR_4 7FF7  
                               STR_5 7FF1                                 STR_6 7FF7  
                               _LATA 000F89                                 _LATB 000F8A  
                               _LATC 000F8B                                 _LATD 000F8C  
                               _LATE 000F8D                                 u6000 1090  
                               u6001 108C                                 u6010 10AC  
                               u6011 10A8                                 u6100 1184  
                               u6020 10BC                                 u6101 1180  
                               u6021 10B8                                 u6110 11A4  
                               u6030 10CE                                 u6111 11A0  
                               u6031 10CA                                 u6120 11B6  
                               u6040 10E4                                 u6200 12BC  
                               u7000 2892                                 u3800 1BB6  
                               u3720 1A38                                 u6121 11B2  
                               u6041 10E0                                 u6201 12B8  
                               u7001 288E                                 u3801 1BB2  
                               u3721 1A34                                 u6130 11D2  
                               u6050 10FA                                 u6210 12CC  
                               u7010 1622                                 u3810 1BD8  
                               u3730 1A4A                                 u6131 11CE  
                               u6051 10F6                                 u6211 12C8  
                               u7011 161E                                 u3811 1BD4  
                               u3731 1A46                                 u6060 110E  
                               u6300 158C                                 u6220 1446  
                               u6140 1202                                 u7020 1638  
                               u3900 1CE4                                 u3820 1C02  
                               u3740 1A5A                                 u6061 110A  
                               u7101 2FBC                                 u6301 1588  
                               u6141 11FE                                 u7021 1634  
                               u3901 1CE0                                 u3821 1BFE  
                               u3741 1A56                                 u6070 1128  
                               u7110 2FD0                                 u6310 15BA  
                               u6230 14A0                                 u6150 1214  
                               u7030 175E                                 u3910 1CFE  
                               u3830 1C26                                 u3750 1A9E  
                               u6071 1124                                 u7111 2FCC  
                               u6311 15B6                                 u6231 149C  
                               u6151 1210                                 u7031 175A  
                               u3911 1CFA                                 u3831 1C22  
                               u3751 1A9A                                 u6080 1162  
                               u6400 361A                                 u7200 31A8  
                               u7120 3032                                 u6320 15F4  
                               u6240 14C0                                 u6160 1224  
                               u7040 1836                                 u3920 1D46  
                               u3840 1C3C                                 u3760 1AB0  
                               u6081 115E                                 u6401 3616  
                               u7201 31A4                                 u7121 302E  
                               u6321 15F0                                 u6241 14BC  
                               u6225 143C                                 u6161 1220  
                               u7041 1832                                 u3921 1D42  
                               u3841 1C38                                 u3761 1AAC  
                               u8001 1DE6                                 u6330 37DA  
                               u6090 1174                                 u6410 362E  
                               u7210 31BC                                 u7130 305C  
                               u6250 14D2                                 u6170 1264  
                               u7050 195C                                 u8010 34CC  
                               u3930 1D76                                 u3850 1C5A  
                               u3770 1AC0                                 u6331 37D6  
                               u6091 1170                                 u6411 362A  
                               u7211 31B8                                 u7131 3058  
                               u6251 14CE                                 u6171 1260  
                               u7051 1958                                 u8011 34C8  
                               u3931 1D72                                 u3851 1C56  
                               u3771 1ABC                                 u6340 3818  
                               u6420 3656                                 u6500 2D54  
                               u7220 31E4                                 u7140 3070  
                               u6260 1500                                 u6180 1276  
                               u7060 431A                                 u8020 34EA  
                               u3940 1DA4                                 u3860 1C7A  
                               u3780 1B00                                 u4900 22AA  
                               u7300 2DDE                                 u6341 3814  
                               u6421 3652                                 u6501 2D50  
                               u7221 31E0                                 u7141 306C  
                               u6261 14FC                                 u6181 1272  
                               u7061 4316                                 u8021 34E6  
                               u3941 1DA0                                 u3861 1C76  
                               u3781 1AFC                                 u4901 22A6  
                               u7301 2DDA                                 u6350 3836  
                               u6430 3676                                 u6510 2D64  
                               u7230 3204                                 u7150 3098  
                               u6270 1516                                 u6190 1286  
                               u7070 432A                                 u8030 3500  
                               u3870 1C8C                                 u3790 1B40  
                               u4910 2334                                 u4830 2124  
                               u7310 2E30                                 u6351 3832  
                               u6431 3672                                 u6511 2D60  
                               u7231 3200                                 u7151 3094  
                               u6271 1512                                 u6191 1282  
                               u7071 4326                                 u8031 34FC  
                               u3871 1C88                                 u3791 1B3C  
                               u4911 2330                                 u4831 2120  
                               u7311 2E2C                                 u7400 3EB8  
                               u5720 3BDA                                 u6360 3856  
                               u5800 0DCC                                 u6440 3686  
                               u7240 3C7C                                 u6520 2D72  
                               u7160 30B8                                 u6280 152A  
                               u6600 3AA8                                 u8040 3516  
                               u3880 1CBA                                 u4920 23BE  
                               u4840 2156                                 u7320 2458  
                               u5721 3BD6                                 u6361 3852  
                               u5801 0DC8                                 u6441 3682  
                               u7241 3C78                                 u6521 2D6E  
                               u7161 30B4                                 u7081 2F84  
                               u6281 1526                                 u6601 3AA4  
                               u8041 3512                                 u3881 1CB6  
                               u4921 23BA                                 u4841 2152  
                               u7321 2454                                 u7410 3EEA  
                               u5730 3C18                                 u6370 38A6  
                               u5810 0DDC                                 u7250 3C9E  
                               u6530 2DAC                                 u6450 2C2C  
                               u7170 30E0                                 u7090 2F98  
                               u6290 1544                                 u6610 3AC4  
                               u8050 3560                                 u3890 1CD0  
                               u4930 2416                                 u4850 216A  
                               u7330 24A0                                 i2l51 002E  
                               u5731 3C14                                 u6371 38A2  
                               u5811 0DD8                                 u7251 3C9A  
                               u6531 2DA8                                 u6451 2C28  
                               u7171 30DC                                 u7091 2F94  
                               u6291 1540                                 u6611 3AC0  
                               u8051 355C                                 u3891 1CCC  
                               u4931 2412                                 u4851 2166  
                               u7331 249C                                 u8107 41E6  
                               u7420 3EFA                                 u5740 3C4C  
                               u5900 0F22                                 u5820 0E18  
                               u6380 35B8                                 u7260 3CC6  
                               u6540 2DBA                                 u6460 2C3A  
                               u7180 310A                                 u6700 4000  
                               u6620 3AEA                                 u7500 0282  
                               u8060 3582                                 u4860 218C  
                               u7340 24F2                                 i2l61 00A8  
                               u8117 41D8                                 u7421 3EF6  
                               u5741 3C48                                 u5901 0F1E  
                               u5821 0E14                                 u6381 35B4  
                               u7261 3CC2                                 u6541 2DB6  
                               u6461 2C36                                 u7181 3106  
                               u6701 3FFC                                 u6621 3AE6  
                               u7501 027E                                 u8061 357E  
                               u4861 2188                                 u7341 24EE  
                               i2l54 0060                                 u7430 413C  
                               u5910 0F32                                 u5830 0E26  
                               u5750 0D40                                 u6390 35EC  
                               u7270 3D98                                 u6470 2C96  
                               u7190 3178                                 u6710 401E  
                               u6630 3B0E                                 u7510 0290  
                               u8070 3598                                 u4870 21B0  
                               u6550 39A6                                 u7350 2524  
                               i2l55 00A8                                 u7431 4138  
                               u7407 3EAE                                 u5911 0F2E  
                               u5831 0E22                                 u5751 0D3C  
                               u7271 3D94                                 u6471 2C92  
                               u7191 3174                                 u6711 401A  
                               u6631 3B0A                                 u7511 028C  
                               u8071 3594                                 u4871 21AC  
                               u6551 39A2                                 u7351 251E  
                               i2l56 0084                                 u7440 414C  
                               u5920 0F64                                 u5840 0E94  
                               u5760 0D52                                 u7280 3DBA  
                               u6480 2CEC                                 u6720 403A  
                               u6640 3B28                                 u7600 0522  
                               u7520 02C6                                 u4880 21F8  
                               u6800 379A                                 u6560 39FA  
                               u7360 2526                                 u8080 3D56  
                               u7441 4148                                 u7417 3EE0  
                               u5921 0F60                                 u5841 0E90  
                               u5761 0D4E                                 u7281 3DB6  
                               u6481 2CE8                                 u6721 4036  
                               u6641 3B24                                 u7601 051E  
                               u7521 02C2                                 u4881 21F4  
                               u6801 3796                                 u6561 39F2  
                               u8081 3D52                                 u5930 0F72  
                               u5850 0EAC                                 u5770 0D62  
                               u7290 3DD8                                 u6490 2D36  
                               u6730 40D8                                 u6570 3A4A  
                               u6650 3B42                                 u7610 0540  
                               u7530 032A                                 u7450 00D0  
                               u4890 226A                                 u6810 338C  
                               u7370 2538                                 u8090 3D70  
                               u5931 0F6E                                 u5851 0EA6  
                               u5771 0D5E                                 u6395 35E2  
                               u7291 3DD4                                 u6491 2D32  
                               u6731 40D4                                 u6571 3A46  
                               u6651 3B3E                                 u7611 053C  
                               u7531 0326                                 u7451 00CC  
                               u4891 2266                                 u6811 3388  
                               u7371 2534                                 u8091 3D6C  
                               u6900 3E54                                 u5940 0F90  
                               u5860 0EAE                                 u5780 0DA4  
                               u6740 40F6                                 u6580 3A64  
                               u6660 3B60                                 u7700 084A  
                               u7620 0572                                 u7540 0388  
                               u7460 0112                                 u6820 33CC  
                               u7380 2680                                 u6901 3E4E  
                               u5941 0F8C                                 u5781 0DA0  
                               u6741 40F2                                 u6581 3A60  
                               u6661 3B5C                                 u7701 0846  
                               u7621 056E                                 u7541 0384  
                               u7461 010E                                 u6821 33C4  
                               u7381 267C                                 u5950 0FC8  
                               u5870 0ED6                                 u5790 0DBA  
                               u6750 410C                                 u6590 3A8A  
                               u6670 3B76                                 u7710 0866  
                               u7630 069C                                 u7550 040C  
                               u7470 0184                                 u6830 33E6  
                               u7390 26B2                                 u5951 0FC4  
                               u5871 0ED2                                 u5791 0DB6  
                               u6751 4108                                 u6591 3A86  
                               u6671 3B72                                 u7711 0862  
                               u7631 0698                                 u7551 0408  
                               u7471 0180                                 u6831 33E2  
                               u7391 26AE                                 u6920 3E82  
                               u5960 100E                                 u5880 0EF4  
                               u6680 3B9A                                 u7800 0B06  
                               u7720 088A                                 u7640 06B4  
                               u7560 044A                                 u7480 01A0  
                               u6568 39FC                                 u6760 3242  
                               u6840 341C                                 u6921 3E7E  
                               u5961 100A                                 u5881 0EF0  
                               u6681 3B96                                 u7801 0B02  
                               u7721 0886                                 u7641 06B0  
                               u7561 0446                                 u7481 019C  
                               u6761 323E                                 u6841 3418  
                               u6690 42E2                                 u5970 1044  
                               u5890 0F14                                 u7810 0B32  
                               u7730 09F0                                 u7650 06E2  
                               u7570 046E                                 u7490 021C  
                               u6770 3250                                 u6850 3436  
                               u6915 3E56                                 u6691 42DE  
                               u5971 1040                                 u5891 0F10  
                               u7811 0B2E                                 u7731 09EC  
                               u7651 06DE                                 u7571 046A  
                               u7491 0218                                 u6771 324C  
                               u6851 3432                                 u6940 41B6  
                               u5980 1054                                 u7900 0CF4  
                               u7820 0B4A                                 u7740 0A1C  
                               u7660 0706                                 u7580 04C6  
                               u6780 328E                                 u6828 33CE  
                               u6941 41B0                                 u5981 1050  
                               u7901 0CF0                                 u7821 0B46  
                               u7741 0A18                                 u7661 0702  
                               u7581 04C2                                 u6781 328A  
                               u6870 3E38                                 u5990 1080  
                               u7910 0D16                                 u7830 0B68  
                               u7750 0A50                                 u7670 073E  
                               u7590 04F8                                 u6790 330E  
                               u6871 3E32                                 u6935 419A  
                               u5991 107C                                 u7911 0D12  
                               u7831 0B64                                 u7751 0A4C  
                               u7671 073A                                 u7591 04F4  
                               u6791 330A                                 u7840 0B7C  
                               u7760 0A76                                 u7680 075C  
                               u7920 29F0                                 u6865 3E1C  
                               u7841 0B78                                 u7761 0A72  
                               u7681 0758                                 u7921 29EC  
                               u6970 41D2                                 u7850 0B9A  
                               u7770 0A8C                                 u7690 0816  
                               u7930 2A22                                 u6971 41CC  
                               u6955 41B8                                 u7851 0B96  
                               u7771 0A88                                 u7691 0812  
                               u7931 2A1E                                 u7860 0BD2  
                               u7780 0ACA                                 u7940 2A74  
                               u6885 3E3A                                 u6965 41C0  
                               u7861 0BCE                                 u7781 0AC6  
                               u7941 2A70                                 u6990 2728  
                               u7870 0BF8                                 u7790 0AE2  
                               u7950 2A9A                                 u6895 3E42  
                               u6991 2724                                 u7871 0BF4  
                               u7791 0ADE                                 u7951 2A96  
                               u7880 0C20                                 u7960 2B06  
                               u6985 41D4                                 u7881 0C1C  
                               u7961 2B02                                 u7890 0C3E  
                               u7970 2BE0                                 u7891 0C3A  
                               u7971 2BDC                                 u7981 1DC2  
                               u7991 1DD4                                 _TMR0 000FD6  
                               _TMR2 000FBC                  _StartDepthDetection 4440  
                               _WPUB 000F85                                 _main 3CFA  
                   __end_of_CCP1_ISR 43CA                                 fsr1h 000FE2  
                               fsr2h 000FDA                                 indf1 000FE7  
                               indf2 000FDF                                 fsr1l 000FE1  
                               fsr2l 000FD9                                 btemp 005E  
                               _sqrt 2108                                 exp@x 0098  
                               log@x 0092                                 pow@x 00A3  
                               pow@y 00A7                                 prodh 000FF4  
                               prodl 000FF3                                 start 00AC  
                    ___fldiv@new_exp 0013                         _sprintf$2445 0096  
                      ?_LCD_WriteCmd 0002                        _LCD_WriteChar 4186  
                       ___param_bank 000000      ComputeWaterVol@d_WaterHeight_mm 00F4  
                    __end_of_OscInit 4440                                ??_exp 005D  
                              ??_log 005B                                ??_pow 005D  
                   __end_of_LCD_GoTo 4186                     __end_of_LCD_Init 4238  
               ?_StartDepthDetection 0001                        ___fltol@sign1 0023  
                    __end_of___fladd 11E6                                ?_main 0001  
                    __end_of___fldiv 1DB8                      __end_of___awdiv 3AFC  
                    __end_of___flneg 4304                      __end_of_SysInit 446E  
          ComputeWaterVol@d_CurrTemp 00DD                      __end_of___awmod 3BAC  
                    __end_of___flmul 1612                      __end_of___flsub 42CC  
                    __end_of___fltol 36A8                      __end_of___lldiv 3CFA  
                              ?_sqrt 0082                                _T0CON 000FD5  
                    ___awdiv@divisor 000A                                _T1CON 000FCD  
                    __end_of___llmod 3E0A                                _T2CON 000FBA  
                              _T3CON 000FB1                                _LATC6 007C5E  
                              _LATC7 007C5F                      __end_of___lwdiv 405A  
                    __end_of___lwmod 412A                                i2l124 4366  
                              i2l174 4456                                i2l239 40C4  
                              i2l177 444A                                i2l447 43C8  
                              i2l641 4462                      ___awdiv@counter 000C  
               ComputeWaterVol@F5010 0123                 ComputeWaterVol@F5012 0132  
               ComputeWaterVol@F5014 014C                                _TMR1H 000FCF  
                              _TMR3H 000FB3                                _TMR1L 000FCE  
                              _TMR3L 000FB2                                _TRISA 000F92  
                              _TRISB 000F93                                _TRISC 000F94  
                              _TRISD 000F95                                _TRISE 000F96  
                       LCD_GoTo@iPos 000C                                _giDay 005D  
            __end_of_PIN_MANAGER_IOC 4472                      __end_of_dpowers 7FAB  
                              _floor 3216                                _ldexp 335A  
                              _frexp 3974                                _errno 0188  
                              _scale 1612                      __end_of_isdigit 4336  
               ComputeWaterVol@d_SOS 00E1            ComputeWaterVol@d_WaterVol 00E9  
                  __end_of_CCP1_Init 43F6                    __end_of_CCP2_Init 43AC  
                         _ComputeTOD 349A                 ComputeWaterVol@sGals 00B5  
               ComputeWaterVol@sFill 00C4                                tablat 000FF5  
                              pow@yi 00B4                                plusw1 000FE3  
                              plusw2 000FDB                                ttemp5 005F  
                              sqrt@a 0082                                ttemp6 0062  
                              ttemp7 0066                                sqrt@i 008B  
                              sqrt@p 0090                                status 000FD8  
                              wtemp8 005F                      __end_of_sprintf 0D24  
                        exp@exponent 00A0                       ??_LCD_WriteCmd 0004  
                     ?_LCD_WriteChar 0001                          ldexp@newexp 0096  
                    __initialization 3EFC                          log@exponent 005B  
                       __end_of_main 3D82                         __end_of_sqrt 2426  
              ??_StartDepthDetection 0001          ?_INTERRUPT_InterruptManager 0001  
                    _LCD_TestString1 0100                      _LCD_TestString2 0112  
                    _LCD_TestString3 0169                               ??_main 005D  
                             ??_sqrt 0086                        __activetblptr 000002  
               __size_of__tdiv_to_l_ 0156                 LCD_WriteString@iData 0005  
                             ?_floor 0082                               ?_ldexp 0092  
                             ?_frexp 003F                     ___llmod@dividend 000F  
                             _ACTCON 000FB5                               ?_scale 0053  
                             _CCPR1H 000FBF                               _CCPR2H 000F91  
                             _CCPR1L 000FBE                               _CCPR2L 000F90  
                   ___awdiv@dividend 0008                               _ANSELA 000F5B  
                             _ANSELB 000F5C                               _ANSELC 000F5D  
                             _ANSELD 000F5E                               _ANSELE 000F5F  
                             _T1GCON 000FCC                               i2l5201 433E  
                             i2l3361 4454                               i2l5203 4340  
                             i2l3355 444C                               i2l5211 4060  
                             i2l5205 4360                               i2l3357 444E  
                             i2l5221 4070                               i2l5213 4062  
                             i2l3359 4452                               i2l5231 40B4  
                             i2l5223 4082                               i2l5215 4068  
                             i2l5241 43C2                               i2l5233 40C0  
                             i2l5225 4098                               i2l5217 406C  
                             i2l5209 405A                               i2l5401 007C  
                             i2l5235 43AC                               i2l5227 409C  
                             i2l5219 406E                               i2l5403 0092  
                             i2l5237 43B6                               i2l5229 409E  
                             i2l5405 00A0                               i2l5239 43BE  
                             i2l5195 4458                               i2l5197 445A  
                             i2l5199 4336                               i2l5391 0026  
                             i2l5393 003C                               i2l4739 4440  
                             i2l5395 004A                               i2l5387 000A  
                             i2l5397 0058                               i2l5389 0018  
                             i2l5399 006E                               _OSCCON 000FD3  
                   __end_of___xxtofl 2DCE                        LCD_GoTo@iLine 000F  
             _InitTankVariables$2441 00B8                        ??_Timer0_Init 0002  
                  _InitTankVariables 38B0                        ??_Timer1_Init 0002  
                      ??_Timer2_Init 0002                            ??_OscInit 0002  
                      ??_Timer3_Init 0002                           _Timer0_ISR 4336  
                         _Timer2_ISR 444C                           _Timer3_ISR 405A  
                   LCD_WriteCmd@iCmd 0008                     __end_of__powers_ 7F27  
                 ?_InitTankVariables 0001                               ___flge 37AC  
                             ___fleq 3BAC                            ??___fladd 0057  
                             ___wmul 4368                            ??___fldiv 000A  
                          ??___awdiv 000C                            ??___flneg 0006  
                          ??_SysInit 0002                               _giMins 00F9  
                          ??___awmod 0006                               _giSecs 00FA  
                          ??___flmul 004F                            ??___flsub 005B  
                          ??___fltol 001F             __size_of_ComputeWaterVol 0350  
                             _giYear 016F                            ??___lldiv 000A  
                          ??___llmod 0017                            ??___lwdiv 000B  
                          ??___lwmod 0006                               _fround 2712  
                             clear_0 3F52                     ___awdiv@quotient 000E  
                    ___awmod@divisor 0004                               isa$std 000001  
                    ___awmod@counter 0006                  ??_InitTankVariables 005D  
              ComputeWaterVol@i_Gals 00ED                               floor@i 0086  
                             floor@x 0082                            ?_CCP1_ISR 0001  
                       __pdataCOMRAM 005D                            ??_isdigit 0002  
                       __mediumconst 7EF2                               tblptrh 000FF7  
                             tblptrl 000FF6                               tblptru 000FF8  
                   ?_PIN_MANAGER_IOC 0001                            ??_sprintf 0092  
                        ?_ComputeTOD 0001                           ___flge@ff1 0002  
                         ___flge@ff2 0006                         ___xxtofl@arg 002F  
                   __end_ofexp@coeff 7F83                         ___xxtofl@exp 002E  
                       ___xxtofl@val 0025                           ___fleq@ff1 0033  
                         ___fleq@ff2 0037                     __end_oflog@coeff 7FCF  
                         __accesstop 0060              __end_of__initialization 3F64  
                          ?_LCD_GoTo 0009                            ?_LCD_Init 0001  
                         ___flneg@f1 0002            __end_of_InitTankVariables 3974  
                    ??_LCD_WriteChar 0002                         eval_poly@res 008E  
                      ___rparam_used 000001                           ___fltol@f1 001B  
                 ComputeTOD@bIncDays 005C                    _gd_TankGalsPer_mm 0178  
                      _giEchoCounter 018E                       __pcstackCOMRAM 0001  
                       __pidataBANK0 4472                         __pidataBANK1 3F72  
                    _LCD_WriteString 3E84                        __end_of_floor 335A  
                      __end_of_ldexp 349A                        __end_of_frexp 3A38  
                      __end_of_scale 1A1E                  __end_of_Timer0_Init 442E  
                __end_of_Timer1_Init 43E0                  __end_of_Timer2_Init 441C  
                __end_of_Timer3_Init 440A                           __div_to_l_ 30CA  
                         ??_CCP1_ISR 0001                 __end_of_LCD_WriteCmd 3E84  
         ComputeWaterVol@d_mmPerTick 00E5                      __div_to_l_@exp1 000F  
                            ??_floor 005B                              ??_ldexp 005B  
                    __div_to_l_@cntr 000E                              ??_frexp 0045  
                            ??_scale 0057                      __div_to_l_@quot 000A  
                       sprintf@width 009E                           __pbssBANK0 00F8  
                         __pbssBANK1 0174                   __size_of_eval_poly 0104  
                         ??_LCD_GoTo 000A                           ??_LCD_Init 0009  
                      __div_to_l_@f1 0002                        __div_to_l_@f2 0006  
                      ?_Timer1_Reset 0001                          ?_Timer0_ISR 0001  
                        ?_Timer2_ISR 0001                          ?_Timer3_ISR 0001  
                            ?___flge 0002                              ?___fleq 0033  
                            ?___wmul 0002                              _CCP1CON 000FBD  
                            _CCP2CON 000F97                           _gsCurrDate 0160  
                            ?_fround 0053                           _gsCurrTime 0157  
                __size_of_ComputeTOD 0108                    ??_ComputeWaterVol 00B1  
                          ?___xxtofl 0025                              _OSCCON2 000FD2  
                            _OSCTUNE 000F9B                        _gb_UpdateTime 00FC  
         __size_of_InitTankVariables 00C4                      _Timer3_Sampling 016E  
                          _CCP1_Init 43E0                            _CCP2_Init 438E  
                     ??_Timer1_Reset 0001              __end_of_LCD_WriteString 3EFC  
                            _OscInit 442E                    __end_of__npowers_ 7F5B  
                            __Hparam 0000                          _Timer0_Init 441C  
                         _scale$2444 0057                          _Timer1_Init 43CA  
                        _Timer2_Init 440A                          _Timer3_Cntr 018A  
                            __Lparam 0000                          _Timer3_Init 43F6  
                      LCD_WriteCmd@i 0006                      __size_of___flge 0104  
                    __size_of___fleq 00AA                              ___fladd 0D24  
                            ___fldiv 1A1E                              ___awdiv 3A38  
                            ___flneg 42CC                              _SysInit 4464  
                            ___awmod 3AFC                              ___flmul 11E6  
                            ___flsub 4284                              ___fltol 35A2  
                            ___lldiv 3C56                      __size_of___wmul 0026  
                            ___llmod 3D82                              ___lwdiv 3FE6  
                            ___lwmod 40C6                              _gd_Temp 0184  
                            _giHours 00F8                              _giMonth 00FF  
                            __pcinit 3EFC                    __end_of_eval_poly 37AC  
                    __size_of_fround 02A6                              __ramtop 0800  
                            __ptext0 3CFA                              __ptext1 43F6  
                            __ptext2 440A                              __ptext3 43CA  
                            __ptext4 441C                              __ptext5 4464  
                            __ptext6 4238                              __ptext7 446E  
                            __ptext8 442E                              __ptext9 41E0  
                          _T1CONbits 000FCD                          ?__div_to_l_ 0002  
                            _dpowers 7F83                            _T2CONbits 000FBA  
                       __size_of_exp 02EC                         __size_of_log 01A6  
                            _isdigit 4304                         __size_of_pow 0262  
                         ??___xxtofl 0029                            _T3CONbits 000FB1  
                   ___awmod@dividend 0002             ??_PIN_MANAGER_Initialize 0002  
                __size_of_Timer0_ISR 0032                  __size_of_Timer2_ISR 000C  
                __size_of_Timer3_ISR 006C                       _CCP2_Init$1297 0002  
                  _Timer0_Reload_Val 7FCF                              _sprintf 00B0  
               end_of_initialization 3F64               ComputeWaterVol@sEchoMM 00D2  
                            exp@sign 00A2                        __Lmediumconst 7EF2  
                         ?_CCP1_Init 0001                           ?_CCP2_Init 0001  
                    ___lldiv@divisor 0006          __end_of_StartDepthDetection 444C  
                            pow@sign 00B3                      ___lldiv@counter 000E  
                            postdec1 000FE5                              postdec2 000FDD  
                            postinc0 000FEE                              postinc2 000FDE  
                            sqrt@grs 0091                              sqrt@exp 0095  
                     __tdiv_to_l_@f1 0002                       __tdiv_to_l_@f2 0006  
                      ??__tdiv_to_l_ 000A                __size_of_LCD_WriteCmd 007A  
                          _PORTBbits 000F81                          ___fladd@grs 0081  
                      ___xxtofl@sign 002D            __end_of_Timer0_Reload_Val 7FD1  
                          _TRISBbits 000F93                            _TRISCbits 000F94  
                  __size_of_CCP1_ISR 001E                          ___fldiv@grs 0015  
                        ___fldiv@rem 000E                     LCD_GoTo@iCharPos 0009  
                       ??_ComputeTOD 00B1                          ___flmul@grs 0062  
                  LCD_WriteString@ix 0009                          _CCP2CONbits 000F97  
                  __size_of_LCD_GoTo 005C                     ?_LCD_WriteString 0005  
                  __size_of_LCD_Init 0058                  __size_of__div_to_l_ 014C  
                       _LCD_WriteCmd 3E0A                       __end_of___flge 38B0  
                     __end_of___fleq 3C56                       __end_of___wmul 438E  
                      __pidataCOMRAM 4475                        _giMonthEndTbl 0140  
                 __end_of_ComputeTOD 35A2                       __end_of_fround 29B8  
                         floor@expon 008A                 __end_of_Timer1_Reset 4464  
                start_initialization 3EFC                           eval_poly@d 0086  
                         eval_poly@n 0088                           eval_poly@x 0082  
                         ldexp@value 0092      __size_of_PIN_MANAGER_Initialize 004C  
                __end_of__tdiv_to_l_ 30CA                          __end_of_exp 2712  
                        __end_of_log 2F74                          __end_of_pow 2C1A  
                         frexp@value 003F                      ___llmod@divisor 0013  
                        ??_CCP1_Init 0002                          ??_CCP2_Init 0002  
                    ___llmod@counter 0017             __size_of_PIN_MANAGER_IOC 0004  
              __end_of_LCD_WriteChar 41E0                         ??_Timer0_ISR 0001  
                       ??_Timer2_ISR 0001                        _Timer3_Reload 00FD  
                       ??_Timer3_ISR 0001                      _ComputeWaterVol 1DB8  
                           ??___flge 000A                             ??___fleq 003B  
                           ??___wmul 0006                          _CCPTMRSbits 000F59  
                        __pdataBANK0 00FD                          __pdataBANK1 0100  
                           ??_fround 0057                        sprintf@tmpval 00A0  
                          ___fladd@a 007A                            ___fladd@b 0076  
                         fround@prec 0075                            ___fldiv@a 0006  
                          ___fldiv@b 0002                            ___flmul@a 004B  
                          ___flmul@b 0047                            ___flsub@a 0086  
                          ___flsub@b 0082                        __pcstackBANK0 0060  
                  __size_of___xxtofl 01B4                   __end_of_Timer0_ISR 4368  
                       _isdigit$2139 0003                   __end_of_Timer2_ISR 4458  
                 __end_of_Timer3_ISR 40C6                          sprintf@flag 009C  
                        sprintf@eexp 00A8                          sprintf@fval 00AA  
                        sprintf@prec 00AE                             ?_OscInit 0001  
                       ?_Timer0_Init 0001                         ?_Timer1_Init 0001  
                       ?_Timer2_Init 0001                         ?_Timer3_Init 0001  
                   ___lwdiv@dividend 0007               _PIN_MANAGER_Initialize 4238  
                        _giTotalSecs 018C                            __pintcode 0008  
                      __pmediumconst 7EF2                             ?___fladd 0076  
                           ?___fldiv 0002                             ?___awdiv 0008  
                           ?___flneg 0002                             ?_SysInit 0001  
                           ?___awmod 0002                             ?___flmul 0047  
                           ?___flsub 0082                             ?___fltol 001B  
                           ?___lldiv 0002                             ?___llmod 000F  
                          __npowers_ 7F27                             ?___lwdiv 0007  
                           ?___lwmod 0002         ??_INTERRUPT_InterruptManager 0002  
                        __tdiv_to_l_ 2F74                         ??__div_to_l_ 000A  
                           _CCP1_ISR 43AC                             ?_isdigit 0001  
                          _eval_poly 36A8                     ___lwdiv@quotient 000C  
                           ?_sprintf 008A                       __size_of_floor 0144  
                     __size_of_ldexp 0140                       __size_of_frexp 00C4  
                     __size_of_scale 040C                             _LCD_GoTo 412A  
                           _LCD_Init 41E0              __end_of_ComputeWaterVol 2108  
                     ___wmul@product 0006                             _LATAbits 000F89  
                           _LATCbits 000F8B                             _PIE1bits 000F9D  
                           _PIE2bits 000FA0  __size_of_INTERRUPT_InterruptManager 00A4  
                 _gd_SensorHeight_mm 017C                             _PIR1bits 000F9E  
                 __end_of__div_to_l_ 3216                             _PIR2bits 000FA1  
                           i2u550_40 40B4                             i2u550_41 40B0  
                           i2u561_40 0018                             i2u561_41 0014  
                           i2u562_40 0026                             i2u562_41 0022  
                           i2u547_40 4350                             i2u563_40 003C  
                           i2u547_41 434A                             i2u563_41 0038  
                           i2u547_46 4352                             i2u548_40 4082  
                           i2u564_40 004A                             i2u548_41 407E  
                           i2u564_41 0046                             i2u549_40 4098  
                           i2u565_40 0058                             i2u549_41 4094  
                           i2u565_41 0054                             i2u566_40 006E  
                           i2u566_41 006A                             i2u567_40 007C  
                           i2u567_41 0078                             i2u568_40 0092  
                           i2u568_41 008E                             i2u569_40 00A0  
                           i2u569_41 009C                    ??_PIN_MANAGER_IOC 0002  
              __size_of_Timer1_Reset 000C                 _gd_MaxWaterHeight_mm 0174  
                        _gsTotalSecs 0170                    ___wmul@multiplier 0002  
                _gd_TankSurfArea_mm2 0180                           ?_eval_poly 0082  
                        _INTCON2bits 000FF1                            copy_data0 3F10  
                    _gb_EchoDetected 00FB                            frexp@eptr 0043  
                           _bIncDays 0190                             __Hrparam 0000  
                       _Timer1_Reset 4458                   LCD_WriteCmd@iDelay 0002  
                   __size_of_OscInit 0012                             __Lrparam 0000  
                 LCD_WriteChar@iChar 0004                     __size_of___fladd 04C2  
                   __size_of___fldiv 039A                     __size_of___awdiv 00C4  
                   __size_of___flneg 0038                     __size_of_SysInit 000A  
                   __size_of___awmod 00B0                     __size_of___flmul 042C  
                   __size_of___flsub 0048                     __size_of___fltol 0106  
                   __size_of___lldiv 00A4                     __size_of___llmod 0088  
       __size_of_StartDepthDetection 000C                     __size_of___lwdiv 0074  
                   __size_of___lwmod 0064                          _fround$2442 0071  
                        _fround$2443 006D                             _exp$2448 009C  
                         sprintf@val 00A4                             ___xxtofl 2C1A  
                   __size_of_isdigit 0032                      ___lwdiv@divisor 0009  
                    ___lwdiv@counter 000B                             __ptext10 38B0  
                           __ptext11 29B8                             __ptext20 1A1E  
                           __ptext12 2DCE                             __ptext21 349A  
                           __ptext13 2426                             __ptext30 11E6  
                           __ptext22 00B0                             __ptext14 335A  
                           __ptext31 2F74                             __ptext23 1612  
                           __ptext15 3216                             __ptext40 42CC  
                           __ptext32 30CA                             __ptext24 3AFC  
                           __ptext16 3974                             __ptext41 37AC  
                           __ptext33 2C1A                             __ptext25 3A38  
                           __ptext17 36A8                             __ptext50 405A  
                           __ptext42 3BAC                             __ptext34 4368  
                           __ptext26 4304                             __ptext18 1DB8  
                           __ptext51 4440                             __ptext43 3E84  
                           __ptext35 3D82                             __ptext27 2712  
                           __ptext19 2108                             __ptext52 444C  
                           __ptext44 4186                             __ptext36 3C56  
                           __ptext28 40C6                             __ptext53 4336  
                           __ptext45 412A                             __ptext37 35A2  
                           __ptext29 3FE6                             __ptext54 43AC  
                           __ptext46 3E0A                             __ptext38 4284  
                           __ptext55 4458                             __ptext47 438E  
                           __ptext39 0D24                             __ptext48 43E0  
                           __powers_ 7EF3       ComputeWaterVol@d_EmptySpace_mm 00F0  
                           _pow$2446 00AB                             _pow$2447 00AF  
                   __size_of_sprintf 0C74                        __size_of_main 0088  
                   ?_ComputeWaterVol 0001                        __size_of_sqrt 031E  
                           isa$xinst 000000                 __size_of_Timer0_Init 0012  
               __size_of_Timer1_Init 0016                 __size_of_Timer2_Init 0012  
                           int$flags 005E                 __size_of_Timer3_Init 0014  
 __end_of_INTERRUPT_InterruptManager 00AC           _INTERRUPT_InterruptManager 0008  
           __size_of_LCD_WriteString 0078         ComputeWaterVol@i_PercentFull 00EF  
                           exp@coeff 7F5B                             log@coeff 7FAB  
                         _INTCONbits 000FF2                          ??_eval_poly 008A  
                           isdigit@c 0004                             scale@scl 005B  
                          sqrt@tfrac 008C                             intlevel2 0000  
                          sprintf@ap 009A                     __tdiv_to_l_@exp1 0012  
                   __tdiv_to_l_@cntr 0011                            sprintf@sp 008A  
                   __tdiv_to_l_@quot 000D                     ___lwmod@dividend 0002  
                   ___lldiv@dividend 0002              ?_PIN_MANAGER_Initialize 0001  
                      _LCD_GoTo$1458 000D                         ?__tdiv_to_l_ 0002  
                           sqrt@frac 009B                             sqrt@sign 008A  
                           sqrt@root 0097                             sprintf@c 00B0  
                           sprintf@f 008C                     ___lldiv@quotient 000A  
                    ___lwmod@divisor 0004                      ___lwmod@counter 0006  
             __size_of_LCD_WriteChar 005A                        ___fladd@signs 007E  
     __end_of_PIN_MANAGER_Initialize 4284                         ___fladd@aexp 007F  
                       ___fladd@bexp 0080                      _PIN_MANAGER_IOC 446E  
